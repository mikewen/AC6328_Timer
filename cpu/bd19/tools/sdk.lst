
sdk.elf:	file format ELF32-q32s

Disassembly of section .text:
text_begin:
 1e00120:    ee ff 30 18 00 00 	sp = 6192			  ## startup.S:25:0
 1e00126:    ed ff 30 18 00 00 	ssp = 6192			  ## startup.S:26:0
 1e0012c:    80 f3 5e 6c       	call 55484 <boot_info_init : 1e0d9ec >			  ## startup.S:28:0
 1e00130:    00 70             	r0 = 0			  ## startup.S:30:0
 1e00132:    c1 ff 40 18 00 00 	r1 = 6208 <report_irq_stack_end : 1840 >			  ## startup.S:31:0
 1e00138:    c2 ff 90 18 00 00 	r2 = 6288 <report_bss_size : 1890 >			  ## startup.S:32:0
 1e0013e:    92 d0             	r2 = r2 >> 2			  ## startup.S:33:0
 1e00140:    02 18             	goto 4 <text_begin+0x26 : 1e00146 >			  ## startup.S:35:0
 1e00142:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:37:0
 1e00146:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:39:0
 1e0014a:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x22 : 1e00142 >			  ## startup.S:40:0
 1e0014e:    00 70             	r0 = 0			  ## startup.S:42:0
 1e00150:    c1 ff c0 4e 00 00 	r1 = 20160 <nvbss_begin : 4ec0 >			  ## startup.S:43:0
 1e00156:    c2 ff 40 6c 00 00 	r2 = 27712 <nvbss_size : 6c40 >			  ## startup.S:44:0
 1e0015c:    92 d0             	r2 = r2 >> 2			  ## startup.S:45:0
 1e0015e:    02 18             	goto 4 <text_begin+0x44 : 1e00164 >			  ## startup.S:47:0
 1e00160:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:49:0
 1e00164:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:51:0
 1e00168:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <text_begin+0x40 : 1e00160 >			  ## startup.S:52:0
 1e0016c:    c0 ff 40 08 00 00 	r0 = 2112 <trans_gatt_control_block : 840 >			  ## startup.S:54:0
 1e00172:    c1 ff 00 83 e1 01 	r1 = 31556352 <text_end : 1e18300 >			  ## startup.S:55:0
 1e00178:    c2 ff e0 07 00 00 	r2 = 2016 <report_data_size : 7e0 >			  ## startup.S:56:0
 1e0017e:    92 d0             	r2 = r2 >> 2			  ## startup.S:57:0
 1e00180:    04 18             	goto 8 <text_begin+0x6A : 1e0018a >			  ## startup.S:59:0
 1e00182:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:61:0
 1e00186:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:62:0
 1e0018a:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:64:0
 1e0018e:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x62 : 1e00182 >			  ## startup.S:65:0
 1e00192:    c0 ff e0 30 00 00 	r0 = 12512 <report_data_code_begin : 30e0 >			  ## startup.S:67:0
 1e00198:    c1 ff e0 8a e1 01 	r1 = 31558368 <data_code_begin : 1e18ae0 >			  ## startup.S:68:0
 1e0019e:    c2 ff cc 1d 00 00 	r2 = 7628 <report_data_code_size : 1dcc >			  ## startup.S:69:0
 1e001a4:    92 d0             	r2 = r2 >> 2			  ## startup.S:70:0
 1e001a6:    04 18             	goto 8 <text_begin+0x90 : 1e001b0 >			  ## startup.S:72:0
 1e001a8:    43 f6 04 10       	r3 = [r1 ++= 4]			  ## startup.S:74:0
 1e001ac:    53 f6 04 00       	[r0 ++= 4] = r3			  ## startup.S:75:0
 1e001b0:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:77:0
 1e001b4:    02 e0 f8 af       	ifs (r2 >= 0) goto -16 <text_begin+0x88 : 1e001a8 >			  ## startup.S:78:0
 1e001b8:    28 fb 00 2b       	r2 = icfg			  ## startup.S:79:0
 1e001bc:    32 fd 03 2a       	r2 = r2 & 4294966527			  ## startup.S:80:0
 1e001c0:    29 fb 00 2b       	icfg = r2			  ## startup.S:81:0
 1e001c4:    80 f3 44 08       	call 4232 <update_result_get : 1e01250 >			  ## startup.S:84:0
 1e001c8:    80 f3 81 53       	call 42754 <maskrom_init : 1e0a8ce >			  ## startup.S:87:0
 1e001cc:    c0 f3 23 6c       	goto 55366 <main : 1e0da16 >			  ## startup.S:90:0


__BT_UPDATA_JUMP:
 1e001d0:    00 70             	r0 = 0			  ## startup.S:94:0
 1e001d2:    01 fb 20 08       	r1 = 2080 <report_irq_stack_size : 820 >			  ## startup.S:95:0
 1e001d6:    02 fb 00 08       	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## startup.S:96:0
 1e001da:    92 d0             	r2 = r2 >> 2			  ## startup.S:97:0
 1e001dc:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x12 : 1e001e2 >			  ## startup.S:99:0
 1e001de:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:101:0
 1e001e2:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:103:0
 1e001e6:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0xE : 1e001de >			  ## startup.S:104:0
 1e001ea:    00 70             	r0 = 0			  ## startup.S:106:0
 1e001ec:    01 fb c0 13       	r1 = 5056 <_cpu0_sstack_begin+0x390 : 13c0 >			  ## startup.S:107:0
 1e001f0:    02 fb 08 01       	r2 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## startup.S:108:0
 1e001f4:    92 d0             	r2 = r2 >> 2			  ## startup.S:109:0
 1e001f6:    02 18             	goto 4 <__BT_UPDATA_JUMP+0x2C : 1e001fc >			  ## startup.S:110:0
 1e001f8:    50 f6 04 10       	[r1 ++= 4] = r0			  ## startup.S:112:0
 1e001fc:    52 fb 01 29       	r2 = r2 - 1			  ## startup.S:114:0
 1e00200:    02 e0 fa af       	ifs (r2 >= 0) goto -12 <__BT_UPDATA_JUMP+0x28 : 1e001f8 >			  ## startup.S:115:0
 1e00204:    c1 ff 00 36 6e 01 	r1 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## startup.S:118:0
 1e0020a:    c0 ff 04 fc 00 00 	r0 = 64516 <boot_arg_list+0x4 : fc04 >			  ## startup.S:119:0
 1e00210:    09 40             	[r0 + 0] = r1			  ## startup.S:120:0
 1e00212:    ed ff 20 0c 00 00 	ssp = 3104			  ## startup.S:122:0
 1e00218:    3d 00             	sp = ssp			  ## startup.S:123:0
 1e0021a:    ec ff 20 10 00 00 	usp = 4128			  ## startup.S:124:0
 1e00220:    00 70             	r0 = 0			  ## startup.S:125:0
 1e00222:    01 70             	r1 = 0			  ## startup.S:126:0
 1e00224:    02 70             	r2 = 0			  ## startup.S:127:0
 1e00226:    03 70             	r3 = 0			  ## startup.S:128:0
 1e00228:    04 70             	r4 = 0			  ## startup.S:129:0
 1e0022a:    05 70             	r5 = 0			  ## startup.S:130:0
 1e0022c:    06 70             	r6 = 0			  ## startup.S:131:0
 1e0022e:    07 70             	r7 = 0			  ## startup.S:132:0
 1e00230:    08 70             	r8 = 0			  ## startup.S:133:0
 1e00232:    09 70             	r9 = 0			  ## startup.S:134:0
 1e00234:    0a 70             	r10 = 0			  ## startup.S:135:0
 1e00236:    0b 70             	r11 = 0			  ## startup.S:136:0
 1e00238:    0c 70             	r12 = 0			  ## startup.S:137:0
 1e0023a:    0d 70             	r13 = 0			  ## startup.S:138:0
 1e0023c:    0e 70             	r14 = 0			  ## startup.S:139:0
 1e0023e:    0f 70             	r15 = 0			  ## startup.S:140:0
 1e00240:    29 fb 00 05       	psr = r0			  ## startup.S:141:0
 1e00244:    29 fb 00 01       	rete = r0			  ## startup.S:142:0
 1e00248:    29 fb 00 02       	retx = r0			  ## startup.S:143:0
 1e0024c:    29 fb 00 03       	rets = r0			  ## startup.S:144:0
 1e00250:    29 fb 00 00       	reti = r0			  ## startup.S:145:0
 1e00254:    e0 ff 60 60 10 00 	reti = 1073248			  ## startup.S:146:0
 1e0025a:    22 00             	rti			  ## startup.S:147:0


adc_value_push:
 1e0025c:    02 50             	r2 = h[r0 + 0] (u)			  ## adc_api.c:111:0
 1e0025e:    51 f8 00 02       	h[r0+r2<<1] = r1			  ## adc_api.c:113:16
 1e00262:    12 80             	r2 += 1			  ## adc_api.c:114:8
 1e00264:    01 70             	r1 = 0			  ## adc_api.c:118:16
 1e00266:    92 e0 01 00       	if (r2 == 9) goto 2 <adc_value_push+0x10 : 1e0026c >
 1e0026a:    21 08             	r1 = r2			  ## adc_api.c:118:16
 1e0026c:    09 50             	h[r0 + 0] = r1			  ## adc_api.c:118:14
 1e0026e:    20 00             	rts			  ## adc_api.c:119:1


adc_pmu_ch_select:
 1e00270:    c1 ff 94 18 1a 00 	r1 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:101:0
 1e00276:    02 62             	r2 = b[r1 + 0] (u)			  ## p33.c:101:0
 1e00278:    32 fd 1e 29       	r2 = r2 & 4294967265			  ## p33.c:101:0
 1e0027c:    06 20             	if (r0 == 0) goto 12 <adc_pmu_ch_select+0x1A : 1e0028a >			  ## p33.c:101:0
 1e0027e:    40 c0             	r0 = r0 << 1			  ## p33.c:108:9
 1e00280:    03 fb 1e e0       	r3 = -8162 <bank_code_load_addr+0x1E3772 : 1ffe01e >			  ## p33.c:108:9
 1e00284:    50 b7             	r0 &= r3			  ## p33.c:108:9
 1e00286:    50 b4             	r0 |= r2			  ## p33.c:108:9
 1e00288:    0a 18             	goto 20 <adc_pmu_ch_select+0x2E : 1e0029e >			  ## p33.c:108:9
 1e0028a:    0a 62             	b[r1 + 0] = r2			  ## p33.c:103:9
 1e0028c:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:104:9
 1e0028e:    90 b2             	r0 |= 32			  ## p33.c:104:9
 1e00290:    08 62             	b[r1 + 0] = r0			  ## p33.c:104:9
 1e00292:    00 62             	r0 = b[r1 + 0] (u)			  ## p33.c:105:9
 1e00294:    10 b3             	r0 |= 64			  ## p33.c:105:9
 1e00296:    08 62             	b[r1 + 0] = r0			  ## p33.c:105:9
 1e00298:    90 62             	r0 = b[r1 + 9] (u)			  ## p33.c:106:9
 1e0029a:    91 80             	r1 += 9			  ## p33.c:106:9
 1e0029c:    90 b2             	r0 |= 32			  ## p33.c:106:9
 1e0029e:    08 62             	b[r1 + 0] = r0
 1e002a0:    20 00             	rts			  ## p33.c:110:1


adc_sample:
 1e002a2:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:263:0
 1e002a4:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## adc_api.c:264:29
 1e002aa:    a4 52             	r4 = h[r1 + 20] (u)			  ## adc_api.c:264:29
 1e002ac:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e002b2:    aa 52             	h[r1 + 20] = r2			  ## adc_api.c:265:14
 1e002b4:    01 c2             	r1 = r0 << 8			  ## adc_api.c:275:5
 1e002b6:    21 fd 0f 1a       	r1 = r1 & 3840			  ## adc_api.c:275:5
 1e002ba:    22 fc 6f f0       	r2 = r2 + -3985			  ## adc_api.c:275:5
 1e002be:    23 04             	r3 = r0.l (u)			  ## adc_api.c:277:13
 1e002c0:    e0 fd 20 51       	r5 = r1 | r2			  ## adc_api.c:275:5
 1e002c4:    d3 e0 02 10       	if (r3 != 13) goto 4 <adc_sample+0x2A : 1e002cc >
 1e002c8:    00 d4             	r0 = r0 >> 16			  ## adc_api.c:278:30
 1e002ca:    d2 17             	call -92 <adc_pmu_ch_select : 1e00270 >			  ## adc_api.c:278:9
 1e002cc:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >
 1e002d2:    0d 40             	[r0 + 0] = r5			  ## adc_api.c:281:17
 1e002d4:    00 f4 10 09       	[r0 + 0] |= 16			  ## adc_api.c:282:17
 1e002d8:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:283:17
 1e002dc:    40 08             	r0 = r4			  ## adc_api.c:285:5
 1e002de:    55 01             	{pc, r5, r4} = [sp++]			  ## adc_api.c:285:5


adc_scan:
 1e002e0:    77 01             	[--sp] = {rets, r7-r4}			  ## adc_api.c:294:0
 1e002e2:    c3 ff 40 24 00 00 	r3 = 9280 <lrc.7 : 2440 >			  ## adc_api.c:294:0
 1e002e8:    00 f6 40 31       	r0 = [r3 + 320]			  ## adc_api.c:297:31
 1e002ec:    f0 ef 55 10       	if (r0 != -1) goto 170 <adc_scan+0xBA : 1e0039a >
 1e002f0:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:301:17
 1e002f6:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:301:17
 1e002f8:    24 f3 4f 00       	if ((r0 & 16) != 0) goto 158 <adc_scan+0xBA : 1e0039a >			  ## adc_api.c:301:17
 1e002fc:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >
 1e00302:    00 f9 28 40       	r0 = b[r4 + 40] (u)
 1e00306:    13 20             	if (r0 == 0) goto 38 <adc_scan+0x4E : 1e0032e >
 1e00308:    a0 58             	r0 = h[r4 + 20] (u)			  ## adc_api.c:306:35
 1e0030a:    05 68             	r5 = b[r4 + 0] (u)			  ## adc_api.c:306:19
 1e0030c:    29 c1             	r1 = r5 << 4			  ## adc_api.c:306:27
 1e0030e:    31 09             	r1 += r3			  ## adc_api.c:306:27
 1e00310:    10 f7 a4 10       	h[r1 + 164] = r0			  ## adc_api.c:306:33
 1e00314:    00 f6 a0 10       	r0 = [r1 + 160]			  ## adc_api.c:307:31
 1e00318:    d0 e0 0b 00       	if (r0 == 13) goto 22 <adc_scan+0x52 : 1e00332 >			  ## adc_api.c:307:13
 1e0031c:    c1 ff 0d 00 05 00 	r1 = 327693 <text_size+0x37E2D : 5000d >
 1e00322:    10 f2 0a 10       	if (r0 != r1) goto 20 <adc_scan+0x5A : 1e0033a >
 1e00326:    a1 58             	r1 = h[r4 + 20] (u)			  ## adc_api.c:308:13
 1e00328:    40 fc 48 01       	r0 = r4 + 328			  ## adc_api.c:308:13
 1e0032c:    05 18             	goto 10 <adc_scan+0x58 : 1e00338 >			  ## adc_api.c:308:13
 1e0032e:    05 68             	r5 = b[r4 + 0] (u)
 1e00330:    07 18             	goto 14 <adc_scan+0x60 : 1e00340 >
 1e00332:    a1 58             	r1 = h[r4 + 20] (u)			  ## adc_api.c:311:13
 1e00334:    40 fc 5c 01       	r0 = r4 + 348			  ## adc_api.c:311:13
 1e00338:    91 17             	call -222 <adc_value_push : 1e0025c >
 1e0033a:    00 70             	r0 = 0
 1e0033c:    10 f9 28 40       	b[r4 + 40] = r0
 1e00340:    28 c1             	r0 = r5 << 4			  ## adc_api.c:95:10
 1e00342:    30 09             	r0 += r3			  ## adc_api.c:95:10
 1e00344:    00 fc b0 00       	r0 = r0 + 176			  ## adc_api.c:95:10
 1e00348:    15 80             	r5 += 1
 1e0034a:    95 e0 05 c0       	ifs (r5 > 9) goto 10 <adc_scan+0x78 : 1e00358 >
 1e0034e:    41 f6 10 00       	r1 = [r0 ++= 16]			  ## adc_api.c:96:26
 1e00352:    f1 ef f9 0f       	if (r1 == -1) goto -14 <adc_scan+0x68 : 1e00348 >			  ## adc_api.c:96:26
 1e00356:    01 18             	goto 2 <adc_scan+0x7A : 1e0035a >			  ## adc_api.c:96:26
 1e00358:    05 70             	r5 = 0
 1e0035a:    40 05             	r0 = r5.b0 (u)			  ## adc_api.c:327:9
 1e0035c:    00 c1             	r0 = r0 << 4			  ## adc_api.c:327:9
 1e0035e:    30 09             	r0 += r3			  ## adc_api.c:327:9
 1e00360:    06 fc a0 00       	r6 = r0 + 160			  ## adc_api.c:327:9
 1e00364:    31 4c             	r1 = [r6 + 12]			  ## adc_api.c:327:28
 1e00366:    13 22             	if (r1 == 0) goto 38 <adc_scan+0xAE : 1e0038e >			  ## adc_api.c:327:9
 1e00368:    07 fc a8 00       	r7 = r0 + 168
 1e0036c:    00 4e             	r0 = [r7 + 0]			  ## adc_api.c:328:13
 1e0036e:    c1 ff 94 08 00 00 	r1 = 2196 <jiffies : 894 >			  ## adc_api.c:328:13
 1e00374:    01 42             	r1 = [r1 + 0]			  ## adc_api.c:328:13
 1e00376:    10 f2 0f a0       	ifs (r0 >= r1) goto 30 <adc_scan+0xB8 : 1e00398 >			  ## adc_api.c:328:13
 1e0037a:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:329:43
 1e0037c:    92 17             	call -220 <adc_sample : 1e002a2 >			  ## adc_api.c:329:13
 1e0037e:    30 4c             	r0 = [r6 + 12]			  ## adc_api.c:331:62
 1e00380:    01 4e             	r1 = [r7 + 0]			  ## adc_api.c:331:40
 1e00382:    12 70             	r2 = 1			  ## adc_api.c:331:40
 1e00384:    12 f9 28 40       	b[r4 + 40] = r2			  ## adc_api.c:331:40
 1e00388:    10 09             	r0 += r1			  ## adc_api.c:331:40
 1e0038a:    08 4e             	[r7 + 0] = r0			  ## adc_api.c:331:40
 1e0038c:    05 18             	goto 10 <adc_scan+0xB8 : 1e00398 >			  ## adc_api.c:331:40
 1e0038e:    00 4c             	r0 = [r6 + 0]			  ## adc_api.c:334:39
 1e00390:    88 17             	call -240 <adc_sample : 1e002a2 >			  ## adc_api.c:334:9
 1e00392:    10 70             	r0 = 1			  ## adc_api.c:334:9
 1e00394:    10 f9 28 40       	b[r4 + 40] = r0			  ## adc_api.c:334:9
 1e00398:    0d 68             	b[r4 + 0] = r5			  ## adc_api.c:338:12
 1e0039a:    57 01             	{pc, r7-r4} = [sp++]			  ## adc_api.c:346:1


adc_isr:
 1e0039c:    e9 01             	[--sp] = {psr, rets, reti}			  ## adc_api.c:253:0
 1e0039e:    78 f3 1f 00       	[--sp] = {r4-r0}			  ## adc_api.c:253:0
 1e003a2:    c4 ff 00 31 1e 00 	r4 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:253:0
 1e003a8:    10 48             	r0 = [r4 + 4]			  ## adc_api.c:254:24
 1e003aa:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## adc_api.c:254:14
 1e003b0:    a8 52             	h[r1 + 20] = r0			  ## adc_api.c:254:14
 1e003b2:    98 f3 f3 34       	call 3172838 <local_irq_disable : 106d9c >			  ## adc_api.c:257:5
 1e003b6:    c0 f4 40 49       	[r4 + 0] = 64			  ## adc_api.c:258:17
 1e003ba:    98 f3 ed 34       	call 3172826 <local_irq_enable : 106d98 >			  ## adc_api.c:259:5
 1e003be:    70 f3 1f 00       	{r4-r0} = [sp++]			  ## adc_api.c:260:1
 1e003c2:    a9 01             	{psr, rets, reti} = [sp++]			  ## adc_api.c:260:1
 1e003c4:    22 00             	rti			  ## adc_api.c:260:1


clock_critical_enter:
 1e003c6:    c0 ff b0 30 00 00 	r0 = 12464 <hdl.17 : 30b0 >			  ## mcpwm.c:107:0
 1e003cc:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1758:20
 1e003ce:    c1 ff 30 1d 00 00 	r1 = 7472 <system_bss_start : 1d30 >			  ## mcpwm.c:108:19
 1e003d4:    08 42             	[r1 + 0] = r0			  ## mcpwm.c:108:19
 1e003d6:    20 00             	rts			  ## mcpwm.c:109:1


clock_critical_exit:
 1e003d8:    7f 01             	[--sp] = {rets, r15-r4}			  ## mcpwm.c:111:0
 1e003da:    c0 ff 30 1d 00 00 	r0 = 7472 <system_bss_start : 1d30 >			  ## mcpwm.c:113:26
 1e003e0:    00 40             	r0 = [r0 + 0]			  ## mcpwm.c:113:26
 1e003e2:    c1 ff b0 30 00 00 	r1 = 12464 <hdl.17 : 30b0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1758:20
 1e003e8:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1758:20
 1e003ea:    01 f2 48 00       	if (r1 == r0) goto 144 <.GJTIE6_0_0_+0x4E : 1e0047e >
 1e003ee:    02 70             	r2 = 0
 1e003f0:    09 fb 00 01       	r9 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >
 1e003f4:    c4 ff e4 30 1e 00 	r4 = 1978596 <uECC_vli_cmp_unsafe+0xDC0E8 : 1e30e4 >
 1e003fa:    c0 fe 00 51       	r5 = r1 / r0 (u)
 1e003fe:    c0 fe 10 60       	r6 = r0 / r1 (u)
 1e00402:    4a fc 28 ff       	r10 = r4 + -216
 1e00406:    4b fc 90 ff       	r11 = r4 + -112
 1e0040a:    4c fc 34 ff       	r12 = r4 + -204
 1e0040e:    4d fc a0 ff       	r13 = r4 + -96
 1e00412:    48 fc 40 ff       	r8 = r4 + -192
 1e00416:    4f fc b0 ff       	r15 = r4 + -80
 1e0041a:    2f 18             	goto 94 <.GJTIE6_0_0_+0x4A : 1e0047a >
 1e0041c:    03 48             	r3 = [r4 + 0]			  ## mcpwm.c:119:23
 1e0041e:    f8 fd 20 79       	r7 = r9 << r2			  ## mcpwm.c:119:36
 1e00422:    73 f0 29 00       	if ((r3 & r7) == 0) goto 82 <.GJTIE6_0_0_+0x48 : 1e00478 >			  ## mcpwm.c:119:36
 1e00426:    32 e0 11 80       	if (r2 > 3) goto 34 <.GJTIE6_0_0_+0x1C : 1e0044c >
 1e0042a:    a2 00             	tbb [r2]


.GJTIS6_0_0_:
 1e0042c:    02     < 2 : 0x2 >
 1e0042d:    07     < 7 : 0x7 >
 1e0042e:    0a     < 10 : 0xA >
 1e0042f:    0d     < 13 : 0xD >
 1e00430:    47 fc 80 ff       	r7 = r4 + -128
 1e00434:    4e fc 1c ff       	r14 = r4 + -228
 1e00438:    0b 18             	goto 22 <.GJTIE6_0_0_+0x20 : 1e00450 >
 1e0043a:    b7 08             	r7 = r11
 1e0043c:    ae 08             	r14 = r10
 1e0043e:    08 18             	goto 16 <.GJTIE6_0_0_+0x20 : 1e00450 >
 1e00440:    d7 08             	r7 = r13
 1e00442:    ce 08             	r14 = r12
 1e00444:    05 18             	goto 10 <.GJTIE6_0_0_+0x20 : 1e00450 >
 1e00446:    f7 08             	r7 = r15
 1e00448:    8e 08             	r14 = r8
 1e0044a:    02 18             	goto 4 <.GJTIE6_0_0_+0x20 : 1e00450 >
 1e0044c:    07 70             	r7 = 0
 1e0044e:    0e 70             	r14 = 0
 1e00450:    03 f6 08 e0       	r3 = [r14 + 8]
 1e00454:    01 f2 06 90       	if (r1 <= r0) goto 12 <.GJTIE6_0_0_+0x34 : 1e00464 >			  ## mcpwm.c:122:17
 1e00458:    eb 0e             	r3 = r5 * r3			  ## mcpwm.c:123:55
 1e0045a:    13 f6 08 e0       	[r14 + 8] = r3			  ## mcpwm.c:123:35
 1e0045e:    33 4e             	r3 = [r7 + 12]			  ## mcpwm.c:124:45
 1e00460:    eb 0e             	r3 = r5 * r3			  ## mcpwm.c:124:53
 1e00462:    07 18             	goto 14 <.GJTIE6_0_0_+0x42 : 1e00472 >			  ## mcpwm.c:124:53
 1e00464:    c0 fe 60 33       	r3 = r3 / r6 (u)			  ## mcpwm.c:126:55
 1e00468:    13 f6 08 e0       	[r14 + 8] = r3			  ## mcpwm.c:126:35
 1e0046c:    33 4e             	r3 = [r7 + 12]			  ## mcpwm.c:127:45
 1e0046e:    c0 fe 60 33       	r3 = r3 / r6 (u)			  ## mcpwm.c:127:53
 1e00472:    3b 4e             	[r7 + 12] = r3
 1e00474:    33 4e             	r3 = [r7 + 12]			  ## mcpwm.c:129:41
 1e00476:    2b 4e             	[r7 + 8] = r3			  ## mcpwm.c:129:30
 1e00478:    12 80             	r2 += 1			  ## mcpwm.c:118:31
 1e0047a:    42 e0 cf 1f       	if (r2 != 4) goto -98 <clock_critical_exit+0x44 : 1e0041c >
 1e0047e:    5f 01             	{pc, r15-r4} = [sp++]			  ## mcpwm.c:132:1


bt_test_idle_query:
 1e00480:    c0 ff 34 1d 00 00 	r0 = 7476 <bt_test_status : 1d34 >			  ## bt_test_api.c:238:0
 1e00486:    01 60             	r1 = b[r0 + 0] (u)			  ## bt_test_api.c:239:13
 1e00488:    10 70             	r0 = 1			  ## bt_test_api.c:239:12
 1e0048a:    01 22             	if (r1 == 0) goto 2 <bt_test_idle_query+0xE : 1e0048e >			  ## bt_test_api.c:239:12
 1e0048c:    00 70             	r0 = 0			  ## bt_test_api.c:239:12
 1e0048e:    20 00             	rts			  ## bt_test_api.c:239:5


log_putbyte:
 1e00490:    20 00             	rts			  ## debug.c:51:0


assert_printf:
 1e00492:    34 00             	[--sp] = rets			  ## debug.c:57:0
 1e00494:    c0 ff 4a 18 1a 00 	r0 = 1710154 <uECC_vli_cmp_unsafe+0x9A84E : 1a184a >			  ## setup.c:97:18
 1e0049a:    c1 7a             	r1 = 172			  ## setup.c:97:18
 1e0049c:    09 60             	b[r0 + 0] = r1			  ## setup.c:97:18
 1e0049e:    90 f3 2f 17       	call 2109022 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e004a2:    00 70             	r0 = 0			  ## debug.c:60:5
 1e004a4:    30 00             	pc = [sp++]			  ## debug.c:60:5


ble_comm_dev_get_idle_index:
 1e004a6:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_common.c:126:0
 1e004a8:    01 70             	r1 = 0			  ## le_gatt_common.c:126:0
 1e004aa:    12 70             	r2 = 1			  ## le_gatt_common.c:131:26
 1e004ac:    01 20             	if (r0 == 0) goto 2 <ble_comm_dev_get_idle_index+0xA : 1e004b0 >			  ## le_gatt_common.c:131:26
 1e004ae:    02 70             	r2 = 0			  ## le_gatt_common.c:131:26
 1e004b0:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >			  ## le_gatt_common.c:134:5
 1e004b6:    63 99             	r3 = r4 + 22			  ## le_gatt_common.c:134:5
 1e004b8:    06 20             	if (r0 == 0) goto 12 <ble_comm_dev_get_idle_index+0x20 : 1e004c6 >			  ## le_gatt_common.c:134:5
 1e004ba:    43 08             	r3 = r4			  ## le_gatt_common.c:134:5
 1e004bc:    04 18             	goto 8 <ble_comm_dev_get_idle_index+0x20 : 1e004c6 >			  ## le_gatt_common.c:134:5
 1e004be:    40 f8 00 30       	r0 = h[r3+r0<<1] (u)			  ## le_gatt_common.c:140:18
 1e004c2:    05 20             	if (r0 == 0) goto 10 <ble_comm_dev_get_idle_index+0x28 : 1e004ce >			  ## le_gatt_common.c:140:18
 1e004c4:    11 80             	r1 += 1			  ## le_gatt_common.c:139:29
 1e004c6:    50 04             	r0 = r1.b0 (s)			  ## le_gatt_common.c:139:17
 1e004c8:    20 f2 f9 bf       	ifs (r0 < r2) goto -14 <ble_comm_dev_get_idle_index+0x18 : 1e004be >
 1e004cc:    f1 7f             	r1 = 255
 1e004ce:    50 04             	r0 = r1.b0 (s)			  ## le_gatt_common.c:145:1
 1e004d0:    54 01             	{pc, r4} = [sp++]			  ## le_gatt_common.c:145:1


__comm_set_dev_handle_value:
 1e004d2:    52 c0             	r2 = r2 << 1			  ## le_gatt_common.c:337:0
 1e004d4:    c3 ff 70 20 00 00 	r3 = 8304 <gatt_client_conn_handle : 2070 >			  ## le_gatt_common.c:341:9
 1e004da:    32 09             	r2 += r3			  ## le_gatt_common.c:341:9
 1e004dc:    63 95             	r3 = r2 + 22			  ## le_gatt_common.c:341:9
 1e004de:    11 e0 01 00       	if (r1 == 1) goto 2 <__comm_set_dev_handle_value+0x12 : 1e004e4 >			  ## le_gatt_common.c:341:9
 1e004e2:    32 08             	r2 = r3			  ## le_gatt_common.c:338:9
 1e004e4:    08 54             	h[r2 + 0] = r0
 1e004e6:    20 00             	rts			  ## le_gatt_common.c:343:1


__gatt_server_event_callback_handler:
 1e004e8:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_server.c:98:0
 1e004ea:    c4 ff 70 22 00 00 	r4 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:99:17
 1e004f0:    24 49             	r4 = [r4 + 72]			  ## le_gatt_server.c:99:17
 1e004f2:    24 48             	r4 = [r4 + 8]			  ## le_gatt_server.c:99:32
 1e004f4:    01 28             	if (r4 == 0) goto 2 <__gatt_server_event_callback_handler+0x10 : 1e004f8 >			  ## le_gatt_server.c:99:32
 1e004f6:    84 00             	call r4			  ## le_gatt_server.c:101:16
 1e004f8:    54 01             	{pc, r4} = [sp++]


__gatt_server_set_work_state:
 1e004fa:    77 01             	[--sp] = {rets, r7-r4}			  ## le_gatt_server.c:146:0
 1e004fc:    fe 0b             	sp += -4			  ## le_gatt_server.c:146:0
 1e004fe:    c7 ff 70 22 00 00 	r7 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:146:0
 1e00504:    a3 4f             	r3 = [r7 + 104]			  ## le_gatt_server.c:149:17
 1e00506:    26 08             	r6 = r2
 1e00508:    15 08             	r5 = r1
 1e0050a:    04 08             	r4 = r0
 1e0050c:    02 26             	if (r3 == 0) goto 4 <__gatt_server_set_work_state+0x18 : 1e00512 >
 1e0050e:    00 70             	r0 = 0			  ## le_gatt_server.c:150:9
 1e00510:    83 00             	call r3			  ## le_gatt_server.c:150:9
 1e00512:    0b 38             	if (r4 != 0) goto 22 <__gatt_server_set_work_state+0x30 : 1e0052a >
 1e00514:    00 f9 56 70       	r0 = b[r7 + 86] (u)			  ## le_gatt_server.c:156:25
 1e00518:    50 f2 15 00       	if (r0 == r5) goto 42 <__gatt_server_set_work_state+0x4C : 1e00546 >			  ## le_gatt_server.c:156:25
 1e0051c:    15 f9 56 70       	b[r7 + 86] = r5			  ## le_gatt_server.c:158:35
 1e00520:    00 a0             	r0 = sp + 0			  ## le_gatt_server.c:158:35
 1e00522:    11 70             	r1 = 1			  ## le_gatt_server.c:159:9
 1e00524:    02 70             	r2 = 0			  ## le_gatt_server.c:159:9
 1e00526:    80 f3 9a 31       	call 25396 <little_endian_store_16 : 1e0685e >			  ## le_gatt_server.c:159:9
 1e0052a:    0d 2c             	if (r6 == 0) goto 26 <__gatt_server_set_work_state+0x4C : 1e00546 >
 1e0052c:    d5 f5 00 00       	b[sp] = r5			  ## le_gatt_server.c:165:23
 1e00530:    05 a0             	r5 = sp + 0			  ## le_gatt_server.c:165:23
 1e00532:    11 70             	r1 = 1			  ## le_gatt_server.c:166:9
 1e00534:    50 08             	r0 = r5			  ## le_gatt_server.c:166:9
 1e00536:    42 08             	r2 = r4			  ## le_gatt_server.c:166:9
 1e00538:    80 f3 91 31       	call 25378 <little_endian_store_16 : 1e0685e >			  ## le_gatt_server.c:166:9
 1e0053c:    00 74             	r0 = 64			  ## le_gatt_server.c:167:9
 1e0053e:    32 70             	r2 = 3			  ## le_gatt_server.c:167:9
 1e00540:    03 70             	r3 = 0			  ## le_gatt_server.c:167:9
 1e00542:    51 08             	r1 = r5			  ## le_gatt_server.c:167:9
 1e00544:    d1 17             	call -94 <__gatt_server_event_callback_handler : 1e004e8 >			  ## le_gatt_server.c:167:9
 1e00546:    02 0a             	sp += 4
 1e00548:    57 01             	{pc, r7-r4} = [sp++]			  ## le_gatt_server.c:169:1


ble_gatt_server_get_work_state:
 1e0054a:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:210:0
 1e00550:    00 f9 56 00       	r0 = b[r0 + 86] (u)			  ## le_gatt_server.c:211:12
 1e00554:    20 00             	rts			  ## le_gatt_server.c:211:5


ble_gatt_server_adv_enable:
 1e00556:    76 01             	[--sp] = {rets, r6-r4}			  ## le_gatt_server.c:654:0
 1e00558:    fc 0b             	sp += -8			  ## le_gatt_server.c:654:0
 1e0055a:    04 08             	r4 = r0			  ## le_gatt_server.c:654:0
 1e0055c:    c5 ff 70 22 00 00 	r5 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:654:0
 1e00562:    05 28             	if (r4 == 0) goto 10 <ble_gatt_server_adv_enable+0x18 : 1e0056e >			  ## le_gatt_server.c:654:0
 1e00564:    00 f9 57 50       	r0 = b[r5 + 87] (u)			  ## le_gatt_server.c:657:18
 1e00568:    60 ff 0f 09 45 00 	if ((r0 & 15) == 0) goto 138 <ble_gatt_server_adv_enable+0xA2 : 1e005f8 >			  ## le_gatt_server.c:657:18
 1e0056e:    10 28             	if (r4 == 0) goto 32 <ble_gatt_server_adv_enable+0x3A : 1e00590 >
 1e00570:    ec 17             	call -40 <ble_gatt_server_get_work_state : 1e0054a >			  ## le_gatt_server.c:619:16
 1e00572:    00 04             	r0 = r0.b0 (u)			  ## le_gatt_server.c:627:30
 1e00574:    50 e0 40 80       	if (r0 > 5) goto 128 <ble_gatt_server_adv_enable+0xA2 : 1e005f8 >			  ## le_gatt_server.c:627:30
 1e00578:    11 70             	r1 = 1
 1e0057a:    f8 fd 00 01       	r0 = r1 << r0
 1e0057e:    60 ff 26 09 3a 00 	if ((r0 & 38) == 0) goto 116 <ble_gatt_server_adv_enable+0xA2 : 1e005f8 >
 1e00584:    00 70             	r0 = 0			  ## le_gatt_server.c:632:18
 1e00586:    8f 17             	call -226 <ble_comm_dev_get_idle_index : 1e004a6 >			  ## le_gatt_server.c:632:18
 1e00588:    01 72             	r1 = 32			  ## le_gatt_server.c:632:18
 1e0058a:    f0 ef 02 10       	if (r0 != -1) goto 4 <ble_gatt_server_adv_enable+0x3C : 1e00592 >			  ## le_gatt_server.c:632:18
 1e0058e:    34 18             	goto 104 <ble_gatt_server_adv_enable+0xA2 : 1e005f8 >			  ## le_gatt_server.c:632:18
 1e00590:    21 70             	r1 = 2
 1e00592:    db 17             	call -74 <ble_gatt_server_get_work_state : 1e0054a >			  ## le_gatt_server.c:670:18
 1e00594:    30 e0 04 30       	if (r0 < 3) goto 8 <ble_gatt_server_adv_enable+0x4A : 1e005a0 >
 1e00598:    00 e2 02 00       	if (r0 == 32) goto 4 <ble_gatt_server_adv_enable+0x4A : 1e005a0 >
 1e0059c:    50 e0 2c 10       	if (r0 != 5) goto 88 <ble_gatt_server_adv_enable+0xA2 : 1e005f8 >
 1e005a0:    10 f2 2a 00       	if (r0 == r1) goto 84 <ble_gatt_server_adv_enable+0xA2 : 1e005f8 >
 1e005a4:    00 70             	r0 = 0			  ## le_gatt_server.c:688:5
 1e005a6:    12 70             	r2 = 1			  ## le_gatt_server.c:688:5
 1e005a8:    a8 17             	call -176 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:688:5
 1e005aa:    21 28             	if (r4 == 0) goto 66 <ble_gatt_server_adv_enable+0x98 : 1e005ee >
 1e005ac:    30 4b             	r0 = [r5 + 76]			  ## le_gatt_server.c:701:21
 1e005ae:    51 61             	r1 = b[r0 + 21] (u)			  ## le_gatt_server.c:701:33
 1e005b0:    a1 e5 04 10       	if (r1 != 90) goto 8 <ble_gatt_server_adv_enable+0x66 : 1e005bc >			  ## le_gatt_server.c:701:33
 1e005b4:    70 81             	r0 += 23			  ## le_gatt_server.c:702:36
 1e005b6:    80 f3 3e a8       	call 86140 <le_controller_set_mac : 1e15636 >			  ## le_gatt_server.c:702:13
 1e005ba:    30 4b             	r0 = [r5 + 76]			  ## le_gatt_server.c:702:13
 1e005bc:    52 50             	r2 = h[r0 + 10] (u)			  ## le_gatt_server.c:705:9
 1e005be:    c1 60             	r1 = b[r0 + 12] (u)			  ## le_gatt_server.c:705:9
 1e005c0:    d6 60             	r6 = b[r0 + 13] (u)			  ## le_gatt_server.c:705:9
 1e005c2:    e0 80             	r0 += 14			  ## le_gatt_server.c:705:9
 1e005c4:    18 02             	[sp+4] = r0			  ## le_gatt_server.c:705:9
 1e005c6:    0b d1             	r3 = r1 >> 4			  ## le_gatt_server.c:705:9
 1e005c8:    10 71             	r0 = 17			  ## le_gatt_server.c:705:9
 1e005ca:    41 70             	r1 = 4			  ## le_gatt_server.c:705:9
 1e005cc:    0e 02             	[sp] = r6			  ## le_gatt_server.c:705:9
 1e005ce:    80 f3 4f 30       	call 24734 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_server.c:705:9
 1e005d2:    30 4b             	r0 = [r5 + 76]			  ## le_gatt_server.c:707:9
 1e005d4:    03 40             	r3 = [r0 + 0]			  ## le_gatt_server.c:707:9
 1e005d6:    82 60             	r2 = b[r0 + 8] (u)			  ## le_gatt_server.c:707:9
 1e005d8:    30 70             	r0 = 3			  ## le_gatt_server.c:707:9
 1e005da:    21 70             	r1 = 2			  ## le_gatt_server.c:707:9
 1e005dc:    80 f3 48 30       	call 24720 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_server.c:707:9
 1e005e0:    30 4b             	r0 = [r5 + 76]			  ## le_gatt_server.c:708:9
 1e005e2:    13 40             	r3 = [r0 + 4]			  ## le_gatt_server.c:708:9
 1e005e4:    92 60             	r2 = b[r0 + 9] (u)			  ## le_gatt_server.c:708:9
 1e005e6:    40 70             	r0 = 4			  ## le_gatt_server.c:708:9
 1e005e8:    21 70             	r1 = 2			  ## le_gatt_server.c:708:9
 1e005ea:    80 f3 41 30       	call 24706 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_server.c:708:9
 1e005ee:    10 70             	r0 = 1			  ## le_gatt_server.c:710:5
 1e005f0:    11 70             	r1 = 1			  ## le_gatt_server.c:710:5
 1e005f2:    42 08             	r2 = r4			  ## le_gatt_server.c:710:5
 1e005f4:    80 f3 3c 30       	call 24696 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_server.c:710:5
 1e005f8:    04 0a             	sp += 8
 1e005fa:    56 01             	{pc, r6-r4} = [sp++]


__gatt_server_check_auto_adv:
 1e005fc:    34 00             	[--sp] = rets			  ## le_gatt_server.c:599:0
 1e005fe:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:600:17
 1e00604:    30 41             	r0 = [r0 + 76]			  ## le_gatt_server.c:600:17
 1e00606:    c0 60             	r0 = b[r0 + 12] (u)			  ## le_gatt_server.c:600:29
 1e00608:    60 ff 0f 09 02 00 	if ((r0 & 15) == 0) goto 4 <__gatt_server_check_auto_adv+0x16 : 1e00612 >			  ## le_gatt_server.c:600:29
 1e0060e:    10 70             	r0 = 1			  ## le_gatt_server.c:601:9
 1e00610:    a2 17             	call -188 <ble_gatt_server_adv_enable : 1e00556 >			  ## le_gatt_server.c:601:9
 1e00612:    30 00             	pc = [sp++]			  ## le_gatt_server.c:603:1


ble_comm_dev_get_index:
 1e00614:    c2 ff 86 20 00 00 	r2 = 8326 <gatt_server_conn_handle : 2086 >			  ## le_gatt_common.c:93:0
 1e0061a:    01 70             	r1 = 0			  ## le_gatt_common.c:93:0
 1e0061c:    05 18             	goto 10 <ble_comm_dev_get_index+0x14 : 1e00628 >			  ## le_gatt_common.c:93:0
 1e0061e:    83 f7 02 20       	r3 = h[r2 ++= 2] (u)			  ## le_gatt_common.c:107:23
 1e00622:    03 f2 05 00       	if (r3 == r0) goto 10 <ble_comm_dev_get_index+0x1C : 1e00630 >
 1e00626:    11 80             	r1 += 1			  ## le_gatt_common.c:106:29
 1e00628:    53 04             	r3 = r1.b0 (s)			  ## le_gatt_common.c:106:19
 1e0062a:    03 e0 f8 df       	ifs (r3 <= 0) goto -16 <ble_comm_dev_get_index+0xA : 1e0061e >			  ## le_gatt_common.c:106:19
 1e0062e:    f1 7f             	r1 = 255
 1e00630:    50 04             	r0 = r1.b0 (s)			  ## le_gatt_common.c:112:1
 1e00632:    20 00             	rts			  ## le_gatt_common.c:112:1


ble_comm_dev_set_handle_state:
 1e00634:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_common.c:285:0
 1e00636:    14 08             	r4 = r1			  ## le_gatt_common.c:285:0
 1e00638:    ed 17             	call -38 <ble_comm_dev_get_index : 1e00614 >			  ## le_gatt_common.c:286:16
 1e0063a:    f0 ef 05 00       	if (r0 == -1) goto 10 <ble_comm_dev_set_handle_state+0x14 : 1e00648 >			  ## le_gatt_common.c:286:16
 1e0063e:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## le_gatt_common.c:293:9
 1e00644:    10 09             	r0 += r1			  ## le_gatt_common.c:288:9
 1e00646:    1c 60             	b[r0 + 1] = r4			  ## le_gatt_common.c:288:9
 1e00648:    54 01             	{pc, r4} = [sp++]			  ## le_gatt_common.c:297:1


__gatt_server_connection_update_request_send:
 1e0064a:    76 01             	[--sp] = {rets, r6-r4}			  ## le_gatt_server.c:118:0
 1e0064c:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:118:0
 1e00652:    02 f7 5e 00       	r2 = h[r0 + 94] (u)			  ## le_gatt_server.c:119:17
 1e00656:    04 70             	r4 = 0			  ## le_gatt_server.c:119:17
 1e00658:    1b 24             	if (r2 == 0) goto 54 <__gatt_server_connection_update_request_send+0x46 : 1e00690 >			  ## le_gatt_server.c:119:17
 1e0065a:    03 f9 5c 00       	r3 = b[r0 + 92] (u)			  ## le_gatt_server.c:120:21
 1e0065e:    21 fd 0f 39       	r1 = r3 & 15			  ## le_gatt_server.c:120:21
 1e00662:    1d d1             	r5 = r3 >> 4			  ## le_gatt_server.c:120:62
 1e00664:    51 f2 10 20       	if (r1 >= r5) goto 32 <__gatt_server_connection_update_request_send+0x3E : 1e00688 >			  ## le_gatt_server.c:120:13
 1e00668:    25 fd f0 39       	r5 = r3 & 240			  ## le_gatt_server.c:122:51
 1e0066c:    13 80             	r3 += 1			  ## le_gatt_server.c:122:51
 1e0066e:    23 fd 0f 39       	r3 = r3 & 15			  ## le_gatt_server.c:122:51
 1e00672:    66 41             	r6 = [r0 + 88]			  ## le_gatt_server.c:121:64
 1e00674:    53 ba             	r3 |= r5			  ## le_gatt_server.c:122:51
 1e00676:    13 f9 5c 00       	b[r0 + 92] = r3			  ## le_gatt_server.c:122:51
 1e0067a:    c8 c0             	r0 = r1 << 3			  ## le_gatt_server.c:121:56
 1e0067c:    03 bc             	r3 = r6 + r0			  ## le_gatt_server.c:121:56
 1e0067e:    b0 70             	r0 = 11			  ## le_gatt_server.c:125:13
 1e00680:    21 70             	r1 = 2			  ## le_gatt_server.c:125:13
 1e00682:    80 f3 f5 2f       	call 24554 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_server.c:125:13
 1e00686:    04 18             	goto 8 <__gatt_server_connection_update_request_send+0x46 : 1e00690 >
 1e00688:    01 70             	r1 = 0			  ## le_gatt_server.c:127:45
 1e0068a:    11 f7 5e 00       	h[r0 + 94] = r1			  ## le_gatt_server.c:127:45
 1e0068e:    e4 89             	r4 += -98			  ## le_gatt_server.c:127:45
 1e00690:    40 08             	r0 = r4			  ## le_gatt_server.c:132:1
 1e00692:    56 01             	{pc, r6-r4} = [sp++]			  ## le_gatt_server.c:132:1


__ble_comm_cbk_packet_handler:
 1e00694:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_gatt_common.c:483:0
 1e00696:    fa 0b             	sp += -12			  ## le_gatt_common.c:483:0
 1e00698:    24 08             	r4 = r2			  ## le_gatt_common.c:483:0
 1e0069a:    05 08             	r5 = r0			  ## le_gatt_common.c:483:0
 1e0069c:    c7 ff 70 20 00 00 	r7 = 8304 <gatt_client_conn_handle : 2070 >			  ## le_gatt_common.c:483:0
 1e006a2:    00 70             	r0 = 0			  ## le_gatt_common.c:488:5
 1e006a4:    28 6e             	b[r7 + 2] = r0			  ## le_gatt_common.c:488:5
 1e006a6:    45 e0 70 10       	if (r5 != 4) goto 224 <__ble_comm_cbk_packet_handler+0xF6 : 1e0078a >			  ## le_gatt_common.c:488:5
 1e006aa:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_event.h:40:16
 1e006ac:    50 e0 29 00       	if (r0 == 5) goto 82 <__ble_comm_cbk_packet_handler+0x6E : 1e00702 >			  ## le_gatt_common.c:492:9
 1e006b0:    80 e0 69 00       	if (r0 == 8) goto 210 <__ble_comm_cbk_packet_handler+0xF2 : 1e00786 >
 1e006b4:    e0 e3 38 00       	if (r0 == 62) goto 112 <__ble_comm_cbk_packet_handler+0x94 : 1e00728 >
 1e006b8:    70 e7 65 00       	if (r0 == 119) goto 202 <__ble_comm_cbk_packet_handler+0xF2 : 1e00786 >
 1e006bc:    00 ff b5 00 0e 00 	if (r0 == 181) goto 28 <__ble_comm_cbk_packet_handler+0x4A : 1e006de >
 1e006c2:    00 ff b6 00 5f 00 	if (r0 == 182) goto 190 <__ble_comm_cbk_packet_handler+0xF2 : 1e00786 >
 1e006c8:    00 ff e2 00 06 00 	if (r0 == 226) goto 12 <__ble_comm_cbk_packet_handler+0x46 : 1e006da >
 1e006ce:    01 ff b7 00 5b 00 	if (r0 != 183) goto 182 <__ble_comm_cbk_packet_handler+0xF6 : 1e0078a >
 1e006d4:    11 68             	r1 = b[r4 + 1] (u)			  ## le_gatt_common.c:494:22
 1e006d6:    10 70             	r0 = 1
 1e006d8:    57 22             	if (r1 == 0) goto 174 <__ble_comm_cbk_packet_handler+0xF4 : 1e00788 >
 1e006da:    20 70             	r0 = 2
 1e006dc:    55 18             	goto 170 <__ble_comm_cbk_packet_handler+0xF4 : 1e00788 >
 1e006de:    21 70             	r1 = 2			  ## le_gatt_common.c:506:26
 1e006e0:    40 08             	r0 = r4			  ## le_gatt_common.c:506:26
 1e006e2:    80 f3 49 2e       	call 23698 <little_endian_read_16 : 1e06378 >			  ## le_gatt_common.c:506:26
 1e006e6:    02 08             	r2 = r0			  ## le_gatt_common.c:506:26
 1e006e8:    41 70             	r1 = 4			  ## btstack_event.h:2313:16
 1e006ea:    40 08             	r0 = r4			  ## btstack_event.h:2313:16
 1e006ec:    80 f3 44 2e       	call 23688 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:2313:16
 1e006f0:    11 70             	r1 = 1			  ## le_gatt_common.c:509:13
 1e006f2:    29 6e             	b[r7 + 2] = r1			  ## le_gatt_common.c:509:13
 1e006f4:    d0 8f             	r0 += -3			  ## le_gatt_common.c:508:71
 1e006f6:    23 04             	r3 = r0.l (u)			  ## le_gatt_common.c:511:13
 1e006f8:    b0 71             	r0 = 27			  ## le_gatt_common.c:511:13
 1e006fa:    21 70             	r1 = 2			  ## le_gatt_common.c:511:13
 1e006fc:    80 f3 b8 2f       	call 24432 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_common.c:511:13
 1e00700:    44 18             	goto 136 <__ble_comm_cbk_packet_handler+0xF6 : 1e0078a >			  ## le_gatt_common.c:511:13
 1e00702:    31 70             	r1 = 3			  ## le_gatt_common.c:608:26
 1e00704:    40 08             	r0 = r4			  ## le_gatt_common.c:608:26
 1e00706:    80 f3 37 2e       	call 23662 <little_endian_read_16 : 1e06378 >			  ## le_gatt_common.c:608:26
 1e0070a:    11 70             	r1 = 1			  ## le_gatt_common.c:609:13
 1e0070c:    29 6e             	b[r7 + 2] = r1			  ## le_gatt_common.c:609:13
 1e0070e:    62 9f             	r2 = r7 + 22			  ## le_gatt_common.c:609:13
 1e00710:    01 70             	r1 = 0
 1e00712:    06 70             	r6 = 0
 1e00714:    06 18             	goto 12 <__ble_comm_cbk_packet_handler+0x8E : 1e00722 >
 1e00716:    03 54             	r3 = h[r2 + 0] (u)			  ## le_gatt_common.c:174:23
 1e00718:    03 f2 d0 00       	if (r3 == r0) goto 416 <__ble_comm_cbk_packet_handler+0x228 : 1e008bc >			  ## le_gatt_common.c:174:13
 1e0071c:    22 80             	r2 += 2			  ## le_gatt_common.c:173:5
 1e0071e:    f1 8f             	r1 += -1			  ## le_gatt_common.c:173:5
 1e00720:    16 80             	r6 += 1			  ## le_gatt_common.c:173:29
 1e00722:    06 e0 f8 df       	ifs (r6 <= 0) goto -16 <__ble_comm_cbk_packet_handler+0x82 : 1e00716 >
 1e00726:    31 18             	goto 98 <__ble_comm_cbk_packet_handler+0xF6 : 1e0078a >
 1e00728:    20 68             	r0 = b[r4 + 2] (u)			  ## btstack_event.h:122:16
 1e0072a:    c0 e0 2c 00       	if (r0 == 12) goto 88 <__ble_comm_cbk_packet_handler+0xF2 : 1e00786 >			  ## btstack_event.h:122:16
 1e0072e:    30 e0 2a 00       	if (r0 == 3) goto 84 <__ble_comm_cbk_packet_handler+0xF2 : 1e00786 >
 1e00732:    70 e0 28 00       	if (r0 == 7) goto 80 <__ble_comm_cbk_packet_handler+0xF2 : 1e00786 >
 1e00736:    10 e0 28 10       	if (r0 != 1) goto 80 <__ble_comm_cbk_packet_handler+0xF6 : 1e0078a >
 1e0073a:    30 68             	r0 = b[r4 + 3] (u)			  ## le_gatt_common.c:557:38
 1e0073c:    c0 e3 23 00       	if (r0 == 60) goto 70 <__ble_comm_cbk_packet_handler+0xF2 : 1e00786 >			  ## le_gatt_common.c:557:38
 1e00740:    e3 30             	if (r0 != 0) goto 454 <__ble_comm_cbk_packet_handler+0x274 : 1e00908 >
 1e00742:    41 70             	r1 = 4			  ## btstack_event.h:3351:16
 1e00744:    40 08             	r0 = r4			  ## btstack_event.h:3351:16
 1e00746:    80 f3 17 2e       	call 23598 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:3351:16
 1e0074a:    0a f9 06 40       	r10 = b[r4 + 6] (u)			  ## btstack_event.h:3361:16
 1e0074e:    08 08             	r8 = r0			  ## btstack_event.h:3351:16
 1e00750:    19 70             	r9 = 1			  ## btstack_event.h:3351:16
 1e00752:    20 70             	r0 = 2			  ## btstack_event.h:3351:16
 1e00754:    0a e0 01 00       	if (r10 == 0) goto 2 <__ble_comm_cbk_packet_handler+0xC6 : 1e0075a >			  ## btstack_event.h:3351:16
 1e00758:    10 70             	r0 = 1			  ## le_gatt_common.c:559:25
 1e0075a:    28 6e             	b[r7 + 2] = r0			  ## le_gatt_common.c:560:25
 1e0075c:    0a e0 01 00       	if (r10 == 0) goto 2 <__ble_comm_cbk_packet_handler+0xCE : 1e00762 >			  ## le_gatt_common.c:560:25
 1e00760:    09 70             	r9 = 0
 1e00762:    90 08             	r0 = r9			  ## le_gatt_common.c:567:33
 1e00764:    a0 16             	call -704 <ble_comm_dev_get_idle_index : 1e004a6 >			  ## le_gatt_common.c:567:33
 1e00766:    06 08             	r6 = r0			  ## le_gatt_common.c:567:33
 1e00768:    f6 ef f9 00       	if (r6 == -1) goto 498 <__ble_comm_cbk_packet_handler+0x2CA : 1e0095e >			  ## le_gatt_common.c:567:33
 1e0076c:    82 05             	r2 = r6.b0 (u)			  ## le_gatt_common.c:574:25
 1e0076e:    80 08             	r0 = r8			  ## le_gatt_common.c:574:25
 1e00770:    91 08             	r1 = r9			  ## le_gatt_common.c:574:25
 1e00772:    af 16             	call -674 <__comm_set_dev_handle_value : 1e004d2 >			  ## le_gatt_common.c:574:25
 1e00774:    12 70             	r2 = 1			  ## le_gatt_common.c:559:25
 1e00776:    0a e0 01 00       	if (r10 == 0) goto 2 <__ble_comm_cbk_packet_handler+0xE8 : 1e0077c >			  ## le_gatt_common.c:559:25
 1e0077a:    02 70             	r2 = 0
 1e0077c:    90 71             	r0 = 25			  ## le_gatt_common.c:575:25
 1e0077e:    31 70             	r1 = 3			  ## le_gatt_common.c:575:25
 1e00780:    0a 02             	[sp] = r2			  ## le_gatt_common.c:575:25
 1e00782:    82 08             	r2 = r8			  ## le_gatt_common.c:575:25
 1e00784:    ac 18             	goto 344 <__ble_comm_cbk_packet_handler+0x24A : 1e008de >			  ## le_gatt_common.c:575:25
 1e00786:    10 70             	r0 = 1
 1e00788:    28 6e             	b[r7 + 2] = r0
 1e0078a:    20 6e             	r0 = b[r7 + 2] (u)			  ## le_gatt_common.c:647:13
 1e0078c:    00 f3 da 00       	if ((r0 & 1) == 0) goto 436 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >			  ## le_gatt_common.c:647:13
 1e00790:    45 e0 d8 10       	if (r5 != 4) goto 432 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >
 1e00794:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_event.h:40:16
 1e00796:    c6 ff 70 22 00 00 	r6 = 8816 <trans_server_adv_config : 2270 >			  ## btstack_event.h:40:16
 1e0079c:    50 e0 2b 00       	if (r0 == 5) goto 86 <__ble_comm_cbk_packet_handler+0x162 : 1e007f6 >			  ## le_gatt_server.c:348:9
 1e007a0:    80 e0 4c 00       	if (r0 == 8) goto 152 <__ble_comm_cbk_packet_handler+0x1A8 : 1e0083c >
 1e007a4:    e0 e3 5a 00       	if (r0 == 62) goto 180 <__ble_comm_cbk_packet_handler+0x1C8 : 1e0085c >
 1e007a8:    70 e7 10 00       	if (r0 == 119) goto 32 <__ble_comm_cbk_packet_handler+0x138 : 1e007cc >
 1e007ac:    00 ff b5 00 65 00 	if (r0 == 181) goto 202 <__ble_comm_cbk_packet_handler+0x1E8 : 1e0087c >
 1e007b2:    00 ff b6 00 72 00 	if (r0 == 182) goto 228 <__ble_comm_cbk_packet_handler+0x208 : 1e0089c >
 1e007b8:    01 ff b7 00 c3 00 	if (r0 != 183) goto 390 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >
 1e007be:    c0 4d             	r0 = [r6 + 112]			  ## le_gatt_server.c:192:17
 1e007c0:    01 20             	if (r0 == 0) goto 2 <__ble_comm_cbk_packet_handler+0x130 : 1e007c4 >			  ## le_gatt_server.c:192:17
 1e007c2:    80 00             	call r0			  ## le_gatt_server.c:193:9
 1e007c4:    60 70             	r0 = 6			  ## le_gatt_server.c:195:5
 1e007c6:    01 70             	r1 = 0			  ## le_gatt_server.c:195:5
 1e007c8:    02 70             	r2 = 0			  ## le_gatt_server.c:195:5
 1e007ca:    9c 18             	goto 312 <__ble_comm_cbk_packet_handler+0x270 : 1e00904 >			  ## le_gatt_server.c:195:5
 1e007cc:    21 70             	r1 = 2			  ## le_gatt_server.c:510:26
 1e007ce:    40 08             	r0 = r4			  ## le_gatt_server.c:510:26
 1e007d0:    80 f3 d2 2d       	call 23460 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:510:26
 1e007d4:    02 08             	r2 = r0			  ## le_gatt_server.c:510:26
 1e007d6:    92 f5 04 00       	h[sp+4] = r2			  ## le_gatt_server.c:510:24
 1e007da:    41 70             	r1 = 4			  ## le_gatt_server.c:511:26
 1e007dc:    40 08             	r0 = r4			  ## le_gatt_server.c:511:26
 1e007de:    80 f3 cb 2d       	call 23446 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:511:26
 1e007e2:    01 f7 5e 60       	r1 = h[r6 + 94] (u)			  ## le_gatt_server.c:514:25
 1e007e6:    90 f5 06 00       	h[sp+6] = r0			  ## le_gatt_server.c:511:24
 1e007ea:    21 f2 ab 10       	if (r1 != r2) goto 342 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >			  ## le_gatt_server.c:511:24
 1e007ee:    84 20             	if (r0 == 0) goto 264 <__ble_comm_cbk_packet_handler+0x264 : 1e008f8 >			  ## le_gatt_server.c:515:21
 1e007f0:    2c 17             	call -424 <__gatt_server_connection_update_request_send : 1e0064a >			  ## le_gatt_server.c:517:25
 1e007f2:    a8 30             	if (r0 != 0) goto 336 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >			  ## le_gatt_server.c:517:25
 1e007f4:    84 18             	goto 264 <__ble_comm_cbk_packet_handler+0x26A : 1e008fe >			  ## le_gatt_server.c:517:25
 1e007f6:    31 70             	r1 = 3			  ## le_gatt_server.c:471:26
 1e007f8:    40 08             	r0 = r4			  ## le_gatt_server.c:471:26
 1e007fa:    80 f3 bd 2d       	call 23418 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:471:26
 1e007fe:    05 08             	r5 = r0			  ## le_gatt_server.c:471:26
 1e00800:    95 f5 04 00       	h[sp+4] = r5			  ## le_gatt_server.c:471:24
 1e00804:    50 68             	r0 = b[r4 + 5] (u)			  ## le_gatt_server.c:472:26
 1e00806:    01 f7 5e 60       	r1 = h[r6 + 94] (u)			  ## le_gatt_server.c:473:25
 1e0080a:    90 f5 06 00       	h[sp+6] = r0			  ## le_gatt_server.c:472:24
 1e0080e:    51 f2 03 10       	if (r1 != r5) goto 6 <__ble_comm_cbk_packet_handler+0x184 : 1e00818 >			  ## le_gatt_server.c:472:24
 1e00812:    00 70             	r0 = 0			  ## le_gatt_server.c:474:49
 1e00814:    10 f7 5e 60       	h[r6 + 94] = r0			  ## le_gatt_server.c:474:49
 1e00818:    50 08             	r0 = r5			  ## le_gatt_server.c:486:13
 1e0081a:    80 f3 28 30       	call 24656 <multi_att_clear_ccc_config : 1e0686e >			  ## le_gatt_server.c:486:13
 1e0081e:    51 70             	r1 = 5			  ## le_gatt_server.c:487:13
 1e00820:    09 17             	call -494 <ble_comm_dev_set_handle_state : 1e00634 >			  ## le_gatt_server.c:487:13
 1e00822:    51 70             	r1 = 5			  ## le_gatt_server.c:488:13
 1e00824:    12 70             	r2 = 1			  ## le_gatt_server.c:488:13
 1e00826:    50 08             	r0 = r5			  ## le_gatt_server.c:488:13
 1e00828:    68 16             	call -816 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:488:13
 1e0082a:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:488:13
 1e0082c:    20 70             	r0 = 2			  ## le_gatt_server.c:489:13
 1e0082e:    42 70             	r2 = 4			  ## le_gatt_server.c:489:13
 1e00830:    43 08             	r3 = r4			  ## le_gatt_server.c:489:13
 1e00832:    5a 16             	call -844 <__gatt_server_event_callback_handler : 1e004e8 >			  ## le_gatt_server.c:489:13
 1e00834:    00 f9 34 70       	r0 = b[r7 + 52] (u)			  ## le_gatt_server.c:489:13
 1e00838:    85 30             	if (r0 != 0) goto 266 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >			  ## le_gatt_server.c:489:13
 1e0083a:    8f 18             	goto 286 <__ble_comm_cbk_packet_handler+0x2C6 : 1e0095a >			  ## le_gatt_server.c:489:13
 1e0083c:    31 70             	r1 = 3			  ## le_gatt_server.c:530:26
 1e0083e:    40 08             	r0 = r4			  ## le_gatt_server.c:530:26
 1e00840:    80 f3 9a 2d       	call 23348 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:530:26
 1e00844:    90 f5 04 00       	h[sp+4] = r0			  ## le_gatt_server.c:530:24
 1e00848:    00 f9 5d 60       	r0 = b[r6 + 93] (u)			  ## le_gatt_server.c:531:39
 1e0084c:    21 68             	r1 = b[r4 + 2] (u)			  ## le_gatt_server.c:531:26
 1e0084e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## le_gatt_server.c:531:36
 1e00852:    91 f5 06 00       	h[sp+6] = r1			  ## le_gatt_server.c:531:24
 1e00856:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:531:24
 1e00858:    50 70             	r0 = 5			  ## le_gatt_server.c:533:13
 1e0085a:    53 18             	goto 166 <__ble_comm_cbk_packet_handler+0x26E : 1e00902 >			  ## le_gatt_server.c:533:13
 1e0085c:    20 68             	r0 = b[r4 + 2] (u)			  ## btstack_event.h:122:16
 1e0085e:    30 e0 42 00       	if (r0 == 3) goto 132 <__ble_comm_cbk_packet_handler+0x252 : 1e008e6 >			  ## le_gatt_server.c:363:13
 1e00862:    10 e0 6f 10       	if (r0 != 1) goto 222 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >
 1e00866:    30 68             	r0 = b[r4 + 3] (u)			  ## le_gatt_server.c:404:38
 1e00868:    54 20             	if (r0 == 0) goto 168 <__ble_comm_cbk_packet_handler+0x27E : 1e00912 >			  ## le_gatt_server.c:404:21
 1e0086a:    c0 e3 6d 10       	if (r0 != 60) goto 218 <__ble_comm_cbk_packet_handler+0x2B4 : 1e00948 >
 1e0086e:    00 70             	r0 = 0			  ## le_gatt_server.c:408:25
 1e00870:    21 70             	r1 = 2			  ## le_gatt_server.c:408:25
 1e00872:    12 70             	r2 = 1			  ## le_gatt_server.c:408:25
 1e00874:    42 16             	call -892 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:408:25
 1e00876:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:408:25
 1e00878:    10 73             	r0 = 49			  ## le_gatt_server.c:409:25
 1e0087a:    6c 18             	goto 216 <__ble_comm_cbk_packet_handler+0x2C0 : 1e00954 >			  ## le_gatt_server.c:409:25
 1e0087c:    21 70             	r1 = 2			  ## le_gatt_server.c:498:26
 1e0087e:    40 08             	r0 = r4			  ## le_gatt_server.c:498:26
 1e00880:    80 f3 7a 2d       	call 23284 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:498:26
 1e00884:    90 f5 04 00       	h[sp+4] = r0			  ## le_gatt_server.c:498:24
 1e00888:    41 70             	r1 = 4			  ## btstack_event.h:2313:16
 1e0088a:    40 08             	r0 = r4			  ## btstack_event.h:2313:16
 1e0088c:    80 f3 74 2d       	call 23272 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:2313:16
 1e00890:    d0 8f             	r0 += -3			  ## le_gatt_server.c:499:74
 1e00892:    90 f5 06 00       	h[sp+6] = r0			  ## le_gatt_server.c:499:24
 1e00896:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:499:24
 1e00898:    00 72             	r0 = 32			  ## le_gatt_server.c:501:13
 1e0089a:    33 18             	goto 102 <__ble_comm_cbk_packet_handler+0x26E : 1e00902 >			  ## le_gatt_server.c:501:13
 1e0089c:    31 70             	r1 = 3			  ## le_gatt_server.c:357:26
 1e0089e:    40 08             	r0 = r4			  ## le_gatt_server.c:357:26
 1e008a0:    80 f3 6a 2d       	call 23252 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:357:26
 1e008a4:    90 f5 04 00       	h[sp+4] = r0			  ## le_gatt_server.c:357:24
 1e008a8:    51 70             	r1 = 5			  ## le_gatt_server.c:358:26
 1e008aa:    40 08             	r0 = r4			  ## le_gatt_server.c:358:26
 1e008ac:    80 f3 64 2d       	call 23240 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:358:26
 1e008b0:    90 f5 06 00       	h[sp+6] = r0			  ## le_gatt_server.c:358:24
 1e008b4:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:358:24
 1e008b6:    10 74             	r0 = 65			  ## le_gatt_server.c:359:13
 1e008b8:    42 70             	r2 = 4			  ## le_gatt_server.c:359:13
 1e008ba:    42 18             	goto 132 <__ble_comm_cbk_packet_handler+0x2AC : 1e00940 >			  ## le_gatt_server.c:359:13
 1e008bc:    08 70             	r8 = 0			  ## le_gatt_common.c:175:29
 1e008be:    40 04             	r0 = r1.b0 (u)			  ## le_gatt_common.c:175:29
 1e008c0:    18 f7 00 20       	h[r2 + 0] = r8			  ## le_gatt_common.c:175:29
 1e008c4:    10 e0 61 0f       	if (r0 == 1) goto -318 <__ble_comm_cbk_packet_handler+0xF6 : 1e0078a >			  ## le_gatt_common.c:175:29
 1e008c8:    60 fb 00 19       	r0 = 0 - r1			  ## le_gatt_common.c:175:29
 1e008cc:    02 04             	r2 = r0.b0 (u)			  ## le_gatt_common.c:614:17
 1e008ce:    00 70             	r0 = 0			  ## le_gatt_common.c:614:17
 1e008d0:    01 70             	r1 = 0			  ## le_gatt_common.c:614:17
 1e008d2:    ff 15             	call -1026 <__comm_set_dev_handle_value : 1e004d2 >			  ## le_gatt_common.c:614:17
 1e008d4:    90 71             	r0 = 25			  ## le_gatt_common.c:615:17
 1e008d6:    31 70             	r1 = 3			  ## le_gatt_common.c:615:17
 1e008d8:    02 70             	r2 = 0			  ## le_gatt_common.c:615:17
 1e008da:    18 f5 00 00       	[sp] = r8			  ## le_gatt_common.c:615:17
 1e008de:    63 08             	r3 = r6
 1e008e0:    80 f3 c6 2e       	call 23948 <ble_user_cmd_prepare : 1e06670 >
 1e008e4:    52 1f             	goto -348 <__ble_comm_cbk_packet_handler+0xF6 : 1e0078a >
 1e008e6:    41 70             	r1 = 4			  ## le_gatt_server.c:447:30
 1e008e8:    40 08             	r0 = r4			  ## le_gatt_server.c:447:30
 1e008ea:    80 f3 45 2d       	call 23178 <little_endian_read_16 : 1e06378 >			  ## le_gatt_server.c:447:30
 1e008ee:    90 f5 04 00       	h[sp+4] = r0			  ## le_gatt_server.c:447:28
 1e008f2:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:447:28
 1e008f4:    70 70             	r0 = 7			  ## le_gatt_server.c:452:17
 1e008f6:    23 18             	goto 70 <__ble_comm_cbk_packet_handler+0x2AA : 1e0093e >			  ## le_gatt_server.c:452:17
 1e008f8:    00 70             	r0 = 0			  ## le_gatt_server.c:522:53
 1e008fa:    10 f7 5e 60       	h[r6 + 94] = r0			  ## le_gatt_server.c:522:53
 1e008fe:    41 a0             	r1 = sp + 4
 1e00900:    00 73             	r0 = 48			  ## le_gatt_server.c:524:17
 1e00902:    42 70             	r2 = 4
 1e00904:    03 70             	r3 = 0
 1e00906:    1d 18             	goto 58 <__ble_comm_cbk_packet_handler+0x2AE : 1e00942 >
 1e00908:    61 68             	r1 = b[r4 + 6] (u)			  ## btstack_event.h:3361:16
 1e0090a:    10 70             	r0 = 1
 1e0090c:    01 e0 e5 0e       	if (r1 == 0) goto -566 <__ble_comm_cbk_packet_handler+0x46 : 1e006da >
 1e00910:    3b 1f             	goto -394 <__ble_comm_cbk_packet_handler+0xF4 : 1e00788 >
 1e00912:    41 70             	r1 = 4			  ## btstack_event.h:3351:16
 1e00914:    40 08             	r0 = r4			  ## btstack_event.h:3351:16
 1e00916:    80 f3 2f 2d       	call 23134 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:3351:16
 1e0091a:    05 08             	r5 = r0			  ## btstack_event.h:3351:16
 1e0091c:    95 f5 04 00       	h[sp+4] = r5			  ## le_gatt_server.c:422:28
 1e00920:    31 70             	r1 = 3			  ## le_gatt_server.c:438:17
 1e00922:    88 16             	call -752 <ble_comm_dev_set_handle_state : 1e00634 >			  ## le_gatt_server.c:438:17
 1e00924:    00 70             	r0 = 0			  ## le_gatt_server.c:438:17
 1e00926:    10 f9 5d 60       	b[r6 + 93] = r0			  ## le_gatt_server.c:439:48
 1e0092a:    31 70             	r1 = 3			  ## le_gatt_server.c:440:17
 1e0092c:    12 70             	r2 = 1			  ## le_gatt_server.c:440:17
 1e0092e:    50 08             	r0 = r5			  ## le_gatt_server.c:440:17
 1e00930:    e4 15             	call -1080 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:440:17
 1e00932:    00 70             	r0 = 0			  ## le_gatt_server.c:441:17
 1e00934:    21 70             	r1 = 2			  ## le_gatt_server.c:441:17
 1e00936:    02 70             	r2 = 0			  ## le_gatt_server.c:441:17
 1e00938:    e0 15             	call -1088 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:441:17
 1e0093a:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:441:17
 1e0093c:    10 70             	r0 = 1			  ## le_gatt_server.c:442:17
 1e0093e:    22 70             	r2 = 2
 1e00940:    43 08             	r3 = r4
 1e00942:    d2 15             	call -1116 <__gatt_server_event_callback_handler : 1e004e8 >
 1e00944:    06 0a             	sp += 12
 1e00946:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_gatt_common.c:657:1
 1e00948:    00 70             	r0 = 0			  ## le_gatt_server.c:414:25
 1e0094a:    21 70             	r1 = 2			  ## le_gatt_server.c:414:25
 1e0094c:    12 70             	r2 = 1			  ## le_gatt_server.c:414:25
 1e0094e:    d5 15             	call -1110 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:414:25
 1e00950:    41 a0             	r1 = sp + 4			  ## le_gatt_server.c:414:25
 1e00952:    30 70             	r0 = 3			  ## le_gatt_server.c:415:25
 1e00954:    22 70             	r2 = 2
 1e00956:    43 08             	r3 = r4
 1e00958:    c7 15             	call -1138 <__gatt_server_event_callback_handler : 1e004e8 >
 1e0095a:    50 16             	call -864 <__gatt_server_check_auto_adv : 1e005fc >
 1e0095c:    f3 1f             	goto -26 <__ble_comm_cbk_packet_handler+0x2B0 : 1e00944 >
 1e0095e:    f0 71             	r0 = 31			  ## le_gatt_common.c:571:25
 1e00960:    21 70             	r1 = 2			  ## le_gatt_common.c:571:25
 1e00962:    33 71             	r3 = 19			  ## le_gatt_common.c:571:25
 1e00964:    82 08             	r2 = r8			  ## le_gatt_common.c:571:25
 1e00966:    80 f3 83 2e       	call 23814 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_common.c:571:25
 1e0096a:    00 70             	r0 = 0			  ## le_gatt_common.c:572:25
 1e0096c:    0d 1f             	goto -486 <__ble_comm_cbk_packet_handler+0xF4 : 1e00788 >			  ## le_gatt_common.c:572:25


norflash_origin_read:
 1e0096e:    d0 f3 d5 16       	goto 2108842 <_norflash_read : 371c >			  ## vm_sfc.c:890:0


doe:
 1e00972:    76 01             	[--sp] = {rets, r6-r4}			  ## encryption.c:68:0
 1e00974:    02 26             	if (r3 == 0) goto 4 <doe+0x8 : 1e0097a >			  ## encryption.c:68:0
 1e00976:    9b d0             	r3 = r3 >> 2			  ## encryption.c:70:19
 1e00978:    d0 b6             	r0 ^= r3			  ## encryption.c:70:25
 1e0097a:    03 62             	r3 = b[r1 + 0] (u)
 1e0097c:    d3 b0             	r3 ^= r0
 1e0097e:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e00980:    93 f9 01 10       	b[r1 ++= 1] = r3
 1e00984:    1a 24             	if (r2 == 0) goto 52 <doe+0x48 : 1e009ba >
 1e00986:    03 fb de ef       	r3 = -4130 <bank_code_load_addr+0x1E4732 : 1ffefde >
 1e0098a:    44 c0             	r4 = r0 << 1			  ## encryption.c:57:24
 1e0098c:    54 b7             	r4 &= r3			  ## encryption.c:58:19
 1e0098e:    20 04             	r0 = r0.l (u)			  ## encryption.c:55:33
 1e00990:    c5 d3             	r5 = r0 >> 15			  ## encryption.c:55:33
 1e00992:    54 ba             	r4 |= r5			  ## encryption.c:58:19
 1e00994:    c6 d2             	r6 = r0 >> 11			  ## encryption.c:58:31
 1e00996:    d6 ba             	r6 ^= r5			  ## encryption.c:58:35
 1e00998:    36 c3             	r6 = r6 << 12			  ## encryption.c:58:19
 1e0099a:    26 fd 10 6a       	r6 = r6 & 4096			  ## encryption.c:58:19
 1e0099e:    54 bc             	r4 |= r6			  ## encryption.c:59:18
 1e009a0:    00 d1             	r0 = r0 >> 4			  ## encryption.c:59:29
 1e009a2:    d0 ba             	r0 ^= r5			  ## encryption.c:59:32
 1e009a4:    05 62             	r5 = b[r1 + 0] (u)			  ## encryption.c:59:32
 1e009a6:    40 c1             	r0 = r0 << 5			  ## encryption.c:59:18
 1e009a8:    20 fd 20 09       	r0 = r0 & 32			  ## encryption.c:59:18
 1e009ac:    50 b8             	r0 |= r4			  ## encryption.c:60:18
 1e009ae:    e1 fd 00 45       	r4 = r5 ^ r0			  ## encryption.c:60:18
 1e009b2:    f2 8f             	r2 += -1			  ## encryption.c:75:12
 1e009b4:    94 f9 01 10       	b[r1 ++= 1] = r4
 1e009b8:    e8 35             	if (r2 != 0) goto -48 <doe+0x18 : 1e0098a >
 1e009ba:    56 01             	{pc, r6-r4} = [sp++]			  ## encryption.c:78:1


CRC16:
 1e009bc:    77 01             	[--sp] = {rets, r7-r4}			  ## crc16.c:21:0
 1e009be:    15 08             	r5 = r1			  ## crc16.c:21:0
 1e009c0:    06 08             	r6 = r0			  ## crc16.c:21:0
 1e009c2:    c4 ff 3c 1d 00 00 	r4 = 7484 <mutex : 1d3c >			  ## crc16.c:21:0
 1e009c8:    01 70             	r1 = 0			  ## crc16.c:25:5
 1e009ca:    07 70             	r7 = 0			  ## crc16.c:25:5
 1e009cc:    40 08             	r0 = r4			  ## crc16.c:25:5
 1e009ce:    98 f3 29 32       	call 3171410 <os_mutex_pend : 106e24 >			  ## crc16.c:25:5
 1e009d2:    c0 ff 00 35 1e 00 	r0 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## crc16.c:25:5
 1e009d8:    1f 40             	[r0 + 4] = r7			  ## crc16.c:27:17
 1e009da:    05 2a             	if (r5 == 0) goto 10 <CRC16+0x2A : 1e009e6 >			  ## crc16.c:27:17
 1e009dc:    81 f9 01 60       	r1 = b[r6 ++= 1] (u)			  ## crc16.c:29:24
 1e009e0:    f5 8f             	r5 += -1			  ## crc16.c:28:15
 1e009e2:    09 40             	[r0 + 0] = r1			  ## crc16.c:29:22
 1e009e4:    fb 3b             	if (r5 != 0) goto -10 <CRC16+0x20 : 1e009dc >
 1e009e6:    08 00             	csync			  ## crc16.c:31:5
 1e009e8:    15 40             	r5 = [r0 + 4]			  ## crc16.c:32:19
 1e009ea:    40 08             	r0 = r4			  ## crc16.c:35:5
 1e009ec:    98 f3 1c 32       	call 3171384 <os_mutex_post : 106e28 >			  ## crc16.c:35:5
 1e009f0:    60 05             	r0 = r5.l (u)			  ## crc16.c:37:5
 1e009f2:    57 01             	{pc, r7-r4} = [sp++]			  ## crc16.c:37:5


norflash_read:
 1e009f4:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:956:0
 1e009f6:    c3 ff 70 22 00 00 	r3 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:956:0
 1e009fc:    07 f6 a4 30       	r7 = [r3 + 164]			  ## vm_sfc.c:959:33
 1e00a00:    26 08             	r6 = r2			  ## vm_sfc.c:959:33
 1e00a02:    14 08             	r4 = r1			  ## vm_sfc.c:959:33
 1e00a04:    05 08             	r5 = r0			  ## vm_sfc.c:959:33
 1e00a06:    67 f2 16 90       	if (r7 <= r6) goto 44 <norflash_read+0x42 : 1e00a36 >			  ## vm_sfc.c:959:9
 1e00a0a:    37 fc ac 00       	r7 = r3 + 172			  ## vm_sfc.c:960:9
 1e00a0e:    f1 07             	r1 = -1			  ## vm_sfc.c:960:9
 1e00a10:    70 08             	r0 = r7			  ## vm_sfc.c:960:9
 1e00a12:    98 f3 07 32       	call 3171342 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:960:9
 1e00a16:    50 08             	r0 = r5			  ## vm_sfc.c:961:9
 1e00a18:    61 08             	r1 = r6			  ## vm_sfc.c:961:9
 1e00a1a:    42 08             	r2 = r4			  ## vm_sfc.c:961:9
 1e00a1c:    90 f3 7e 16       	call 2108668 <_norflash_read : 371c >			  ## vm_sfc.c:961:9
 1e00a20:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## vm_sfc.c:962:9
 1e00a26:    03 70             	r3 = 0			  ## vm_sfc.c:962:9
 1e00a28:    51 08             	r1 = r5			  ## vm_sfc.c:962:9
 1e00a2a:    42 08             	r2 = r4			  ## vm_sfc.c:962:9
 1e00a2c:    a2 17             	call -188 <doe : 1e00972 >			  ## vm_sfc.c:962:9
 1e00a2e:    70 08             	r0 = r7			  ## vm_sfc.c:963:9
 1e00a30:    98 f3 fa 31       	call 3171316 <os_mutex_post : 106e28 >			  ## vm_sfc.c:963:9
 1e00a34:    08 18             	goto 16 <norflash_read+0x52 : 1e00a46 >			  ## vm_sfc.c:963:9
 1e00a36:    60 08             	r0 = r6			  ## vm_sfc.c:965:35
 1e00a38:    90 f3 94 16       	call 2108712 <flash_addr2cpu_addr : 3764 >			  ## vm_sfc.c:965:35
 1e00a3c:    01 08             	r1 = r0			  ## vm_sfc.c:965:35
 1e00a3e:    50 08             	r0 = r5			  ## vm_sfc.c:965:9
 1e00a40:    42 08             	r2 = r4			  ## vm_sfc.c:965:9
 1e00a42:    98 f3 4f 32       	call 3171486 <memcpy : 106ee4 >			  ## vm_sfc.c:965:9
 1e00a46:    40 08             	r0 = r4			  ## vm_sfc.c:968:5
 1e00a48:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:968:5


jl_file_head_valid_check:
 1e00a4a:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:36:0
 1e00a4c:    04 08             	r4 = r0			  ## flash_fs_api.c:36:0
 1e00a4e:    0a 28             	if (r4 == 0) goto 20 <jl_file_head_valid_check+0x1A : 1e00a64 >			  ## flash_fs_api.c:39:9
 1e00a50:    20 98             	r0 = r4 + 2			  ## flash_fs_api.c:44:42
 1e00a52:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e00a54:    b3 17             	call -154 <CRC16 : 1e009bc >			  ## flash_fs_api.c:44:20
 1e00a56:    02 58             	r2 = h[r4 + 0] (u)			  ## flash_fs_api.c:45:15
 1e00a58:    01 08             	r1 = r0			  ## flash_fs_api.c:44:20
 1e00a5a:    f0 07             	r0 = -1			  ## flash_fs_api.c:45:9
 1e00a5c:    12 f2 01 10       	if (r2 != r1) goto 2 <jl_file_head_valid_check+0x18 : 1e00a62 >
 1e00a60:    00 70             	r0 = 0
 1e00a62:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:45:9
 1e00a64:    e0 07             	r0 = -2			  ## flash_fs_api.c:51:5
 1e00a66:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:51:5


norflash_ioctl:
 1e00a68:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:1384:0
 1e00a6a:    16 08             	r6 = r1			  ## vm_sfc.c:1384:0
 1e00a6c:    07 08             	r7 = r0			  ## vm_sfc.c:1384:0
 1e00a6e:    c8 ff 70 22 00 00 	r8 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:1384:0
 1e00a74:    84 fc ac 00       	r4 = r8 + 172			  ## vm_sfc.c:1385:5
 1e00a78:    f1 07             	r1 = -1			  ## vm_sfc.c:1385:5
 1e00a7a:    40 08             	r0 = r4			  ## vm_sfc.c:1385:5
 1e00a7c:    98 f3 d2 31       	call 3171236 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:1385:5
 1e00a80:    05 70             	r5 = 0
 1e00a82:    0c ff ca 70 19 00 	ifs (r7 > 202) goto 50 <.GJTIE72_0_0_+0x24 : 1e00aba >			  ## vm_sfc.c:1388:5
 1e00a88:    70 fc 9c ff       	r0 = r7 + -100
 1e00a8c:    30 e0 21 80       	if (r0 > 3) goto 66 <.GJTIE72_0_0_+0x3C : 1e00ad2 >
 1e00a90:    a0 00             	tbb [r0]


.GJTIS72_0_0_:
 1e00a92:    02     < 2 : 0x2 >
 1e00a93:    37     < 55 : 0x37 >
 1e00a94:    3a     < 58 : 0x3A >
 1e00a95:    3d     < 61 : 0x3D >
 1e00a96:    00 f6 90 80       	r0 = [r8 + 144]			  ## vm_sfc.c:1405:24
 1e00a9a:    77 30             	if (r0 != 0) goto 238 <.GJTIE72_0_0_+0xF4 : 1e00b8a >			  ## vm_sfc.c:1405:24
 1e00a9c:    90 f3 a2 16       	call 2108740 <read_flash_id : 37e4 >			  ## vm_sfc.c:1406:13
 1e00aa0:    00 f6 90 80       	r0 = [r8 + 144]			  ## vm_sfc.c:1407:66
 1e00aa4:    01 04             	r1 = r0.b0 (u)			  ## vm_sfc.c:1407:75
 1e00aa6:    01 8f             	r1 += -16			  ## vm_sfc.c:1407:83
 1e00aa8:    11 e0 66 b0       	ifs (r1 < 1) goto 204 <.GJTIE72_0_0_+0xE2 : 1e00b78 >
 1e00aac:    13 70             	r3 = 1
 1e00aae:    32 08             	r2 = r3
 1e00ab0:    53 c0             	r3 = r2 << 1			  ## vm_sfc.c:1355:16
 1e00ab2:    51 f3 fc ff       	if (--r1 != 0) goto -8 <.GJTIE72_0_0_+0x18 : 1e00aae >			  ## vm_sfc.c:1354:5
 1e00ab6:    51 c4             	r1 = r2 << 17			  ## vm_sfc.c:1407:91
 1e00ab8:    61 18             	goto 194 <.GJTIE72_0_0_+0xE6 : 1e00b7c >			  ## vm_sfc.c:1407:91
 1e00aba:    c0 ff 00 56 04 40 	r0 = 1074025984 <text_size+0x2D420 : 45600 >
 1e00ac0:    07 f2 11 c0       	ifs (r7 > r0) goto 34 <.GJTIE72_0_0_+0x50 : 1e00ae6 >
 1e00ac4:    00 ff cb 70 61 00 	if (r7 == 203) goto 194 <.GJTIE72_0_0_+0xF6 : 1e00b8c >
 1e00aca:    00 ff cc 70 05 00 	if (r7 == 204) goto 10 <.GJTIE72_0_0_+0x44 : 1e00ada >
 1e00ad0:    51 18             	goto 162 <.GJTIE72_0_0_+0xDE : 1e00b74 >
 1e00ad2:    70 fc 38 ff       	r0 = r7 + -200
 1e00ad6:    20 e0 4d 20       	if (r0 >= 2) goto 154 <.GJTIE72_0_0_+0xDE : 1e00b74 >
 1e00ada:    70 08             	r0 = r7			  ## vm_sfc.c:1415:15
 1e00adc:    61 08             	r1 = r6			  ## vm_sfc.c:1415:15
 1e00ade:    90 f3 28 17       	call 2109008 <norflash_erase : 3932 >			  ## vm_sfc.c:1415:15
 1e00ae2:    05 08             	r5 = r0			  ## vm_sfc.c:1415:15
 1e00ae4:    53 18             	goto 166 <.GJTIE72_0_0_+0xF6 : 1e00b8c >
 1e00ae6:    10 80             	r0 += 1
 1e00ae8:    07 f2 21 00       	if (r7 == r0) goto 66 <.GJTIE72_0_0_+0x98 : 1e00b2e >
 1e00aec:    10 80             	r0 += 1
 1e00aee:    07 f2 41 10       	if (r7 != r0) goto 130 <.GJTIE72_0_0_+0xDE : 1e00b74 >
 1e00af2:    81 fc 94 00       	r1 = r8 + 148			  ## vm_sfc.c:1432:9
 1e00af6:    02 71             	r2 = 16			  ## vm_sfc.c:1432:9
 1e00af8:    60 08             	r0 = r6			  ## vm_sfc.c:1432:9
 1e00afa:    98 f3 f3 31       	call 3171302 <memcpy : 106ee4 >			  ## vm_sfc.c:1432:9
 1e00afe:    46 18             	goto 140 <.GJTIE72_0_0_+0xF6 : 1e00b8c >			  ## vm_sfc.c:1432:9
 1e00b00:    c0 f4 01 6a       	[r6 + 0] = 256			  ## vm_sfc.c:1390:23
 1e00b04:    43 18             	goto 134 <.GJTIE72_0_0_+0xF6 : 1e00b8c >			  ## vm_sfc.c:1390:23
 1e00b06:    c0 f4 01 6b       	[r6 + 0] = 65536			  ## vm_sfc.c:1393:23
 1e00b0a:    40 18             	goto 128 <.GJTIE72_0_0_+0xF6 : 1e00b8c >			  ## vm_sfc.c:1393:23
 1e00b0c:    00 f6 8c 80       	r0 = [r8 + 140]			  ## vm_sfc.c:1397:24
 1e00b10:    3c 30             	if (r0 != 0) goto 120 <.GJTIE72_0_0_+0xF4 : 1e00b8a >			  ## vm_sfc.c:1397:24
 1e00b12:    90 f3 67 16       	call 2108622 <read_flash_id : 37e4 >			  ## vm_sfc.c:1398:13
 1e00b16:    00 f9 90 80       	r0 = b[r8 + 144] (u)			  ## vm_sfc.c:1399:66
 1e00b1a:    00 8f             	r0 += -16			  ## vm_sfc.c:1399:83
 1e00b1c:    10 e0 31 b0       	ifs (r0 < 1) goto 98 <.GJTIE72_0_0_+0xEC : 1e00b82 >
 1e00b20:    12 70             	r2 = 1
 1e00b22:    21 08             	r1 = r2
 1e00b24:    4a c0             	r2 = r1 << 1			  ## vm_sfc.c:1355:16
 1e00b26:    50 f3 fc ff       	if (--r0 != 0) goto -8 <.GJTIE72_0_0_+0x8C : 1e00b22 >			  ## vm_sfc.c:1354:5
 1e00b2a:    48 c4             	r0 = r1 << 17			  ## vm_sfc.c:1399:91
 1e00b2c:    2c 18             	goto 88 <.GJTIE72_0_0_+0xF0 : 1e00b86 >			  ## vm_sfc.c:1399:91
 1e00b2e:    02 3c             	if (r6 != 0) goto 4 <.GJTIE72_0_0_+0x9E : 1e00b34 >
 1e00b30:    90 f3 e6 13       	call 2107340 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e00b34:    87 fc 88 00       	r7 = r8 + 136
 1e00b38:    c0 9e             	r0 = r7 + 12			  ## vm_sfc.c:1366:5
 1e00b3a:    02 71             	r2 = 16			  ## vm_sfc.c:1366:5
 1e00b3c:    61 08             	r1 = r6			  ## vm_sfc.c:1366:5
 1e00b3e:    98 f3 d1 31       	call 3171234 <memcpy : 106ee4 >			  ## vm_sfc.c:1366:5
 1e00b42:    50 4c             	r0 = [r6 + 20]			  ## vm_sfc.c:1367:5
 1e00b44:    41 4c             	r1 = [r6 + 16]			  ## vm_sfc.c:1367:5
 1e00b46:    88 4e             	[r7 + 32] = r0			  ## vm_sfc.c:1367:5
 1e00b48:    79 4e             	[r7 + 28] = r1			  ## vm_sfc.c:1367:5
 1e00b4a:    60 4c             	r0 = [r6 + 24]			  ## vm_sfc.c:1369:35
 1e00b4c:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:1369:27
 1e00b4e:    43 4e             	r3 = [r7 + 16]			  ## vm_sfc.c:1371:60
 1e00b50:    30 08             	r0 = r3			  ## vm_sfc.c:1371:26
 1e00b52:    90 f3 07 16       	call 2108430 <flash_addr2cpu_addr : 3764 >			  ## vm_sfc.c:1371:26
 1e00b56:    c1 ff 14 02 1f 00 	r1 = 2032148 <uECC_vli_cmp_unsafe+0xE9218 : 1f0214 >			  ## vm_sfc.c:1371:26
 1e00b5c:    38 42             	[r1 + 12] = r0			  ## vm_sfc.c:1371:24
 1e00b5e:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1E5753 : 1ffffff >			  ## vm_sfc.c:1372:24
 1e00b64:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:1372:24
 1e00b66:    00 f4 02 19       	[r1 + 0] |= 2			  ## vm_sfc.c:1377:21
 1e00b6a:    01 72             	r1 = 32			  ## vm_sfc.c:1379:5
 1e00b6c:    30 08             	r0 = r3			  ## vm_sfc.c:1379:5
 1e00b6e:    90 f3 4a 17       	call 2109076 <flushinv_dcache_api : 3a06 >			  ## vm_sfc.c:1379:5
 1e00b72:    0c 18             	goto 24 <.GJTIE72_0_0_+0xF6 : 1e00b8c >			  ## vm_sfc.c:1379:5
 1e00b74:    75 06             	r5 = -25
 1e00b76:    0a 18             	goto 20 <.GJTIE72_0_0_+0xF6 : 1e00b8c >
 1e00b78:    20 fb 01 1b       	r1 = 65536
 1e00b7c:    11 f6 8c 80       	[r8 + 140] = r1			  ## vm_sfc.c:1407:39
 1e00b80:    04 18             	goto 8 <.GJTIE72_0_0_+0xF4 : 1e00b8a >			  ## vm_sfc.c:1407:39
 1e00b82:    20 fb 01 0b       	r0 = 65536
 1e00b86:    10 f6 8c 80       	[r8 + 140] = r0			  ## vm_sfc.c:1399:39
 1e00b8a:    08 4c             	[r6 + 0] = r0
 1e00b8c:    40 08             	r0 = r4			  ## vm_sfc.c:1440:5
 1e00b8e:    98 f3 4b 31       	call 3170966 <os_mutex_post : 106e28 >			  ## vm_sfc.c:1440:5
 1e00b92:    50 08             	r0 = r5			  ## vm_sfc.c:1441:5
 1e00b94:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1441:5


__jl_fs_sector_align:
 1e00b96:    34 00             	[--sp] = rets			  ## flash_fs_api.c:619:0
 1e00b98:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## flash_fs_api.c:619:0
 1e00b9e:    23 63             	r3 = b[r1 + 18] (u)			  ## flash_fs_api.c:619:0
 1e00ba0:    02 08             	r2 = r0			  ## flash_fs_api.c:619:0
 1e00ba2:    02 36             	if (r3 != 0) goto 4 <__jl_fs_sector_align+0x12 : 1e00ba8 >			  ## flash_fs_api.c:619:0
 1e00ba4:    90 f3 ac 13       	call 2107224 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e00ba8:    10 70             	r0 = 1			  ## flash_fs_api.c:624:9
 1e00baa:    03 e1 01 00       	if (r3 == 16) goto 2 <__jl_fs_sector_align+0x1A : 1e00bb0 >			  ## flash_fs_api.c:624:9
 1e00bae:    00 70             	r0 = 0			  ## flash_fs_api.c:624:9
 1e00bb0:    01 c3             	r1 = r0 << 12			  ## flash_fs_api.c:624:9
 1e00bb2:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:624:9
 1e00bb6:    13 e0 01 00       	if (r3 == 1) goto 2 <__jl_fs_sector_align+0x26 : 1e00bbc >			  ## flash_fs_api.c:624:9
 1e00bba:    10 08             	r0 = r1			  ## flash_fs_api.c:624:9
 1e00bbc:    06 20             	if (r0 == 0) goto 12 <__jl_fs_sector_align+0x34 : 1e00bca >
 1e00bbe:    01 b4             	r1 = r2 + r0			  ## flash_fs_api.c:633:27
 1e00bc0:    f1 8f             	r1 += -1			  ## flash_fs_api.c:633:41
 1e00bc2:    60 fb 00 09       	r0 = 0 - r0			  ## flash_fs_api.c:633:61
 1e00bc6:    e2 fd 00 21       	r2 = r1 & r0			  ## flash_fs_api.c:633:61
 1e00bca:    20 08             	r0 = r2			  ## flash_fs_api.c:638:5
 1e00bcc:    30 00             	pc = [sp++]			  ## flash_fs_api.c:638:5


clr_wdt:
 1e00bce:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:34:0
 1e00bd4:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:30:18
 1e00bd6:    11 b3             	r1 |= 64			  ## wdt.c:30:18
 1e00bd8:    09 60             	b[r0 + 0] = r1			  ## wdt.c:30:18
 1e00bda:    20 00             	rts			  ## wdt.c:36:1


sfc_erase:
 1e00bdc:    34 00             	[--sp] = rets			  ## vm.c:1430:0
 1e00bde:    02 fc ff ff       	r2 = r0 + -1			  ## vm.c:1436:9
 1e00be2:    00 70             	r0 = 0			  ## vm.c:1436:9
 1e00be4:    22 e0 0d 80       	if (r2 > 2) goto 26 <sfc_erase+0x26 : 1e00c02 >
 1e00be8:    c0 ff 08 e6 e0 01 	r0 = 31516168 <dev_id_list+0x360 : 1e0e608 >			  ## vm.c:1436:9
 1e00bee:    c3 ff fc e5 e0 01 	r3 = 31516156 <dev_id_list+0x354 : 1e0e5fc >			  ## vm.c:1436:9
 1e00bf4:    a3 f6 00 32       	r3 = [r3+r2<<2]			  ## vm.c:1436:9
 1e00bf8:    a0 f6 00 02       	r0 = [r0+r2<<2]			  ## vm.c:1436:9
 1e00bfc:    51 b7             	r1 &= r3
 1e00bfe:    34 17             	call -408 <norflash_ioctl : 1e00a68 >			  ## vm.c:1458:5
 1e00c00:    10 70             	r0 = 1
 1e00c02:    30 00             	pc = [sp++]			  ## vm.c:1461:1


flash_erase_by_blcok_n_sector:
 1e00c04:    7a 01             	[--sp] = {rets, r10-r4}			  ## flash_fs_api.c:150:0
 1e00c06:    15 08             	r5 = r1			  ## flash_fs_api.c:150:0
 1e00c08:    04 08             	r4 = r0			  ## flash_fs_api.c:150:0
 1e00c0a:    84 fd 60 84       	r8 = uextra(r4, p:12, l:4)			  ## flash_fs_api.c:157:41
 1e00c0e:    03 ff 00 51 20 00 	if (r5 < 256) goto 64 <flash_erase_by_blcok_n_sector+0x50 : 1e00c54 >
 1e00c14:    84 fd 40 04       	r0 = uextra(r4, p:8, l:4)			  ## flash_fs_api.c:163:39
 1e00c18:    1d 20             	if (r0 == 0) goto 58 <flash_erase_by_blcok_n_sector+0x50 : 1e00c54 >
 1e00c1a:    69 fb 10 09       	r9 = 16 - r0			  ## flash_fs_api.c:166:44
 1e00c1e:    09 e0 18 00       	if (r9 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x4E : 1e00c52 >
 1e00c22:    07 70             	r7 = 0
 1e00c24:    46 08             	r6 = r4
 1e00c26:    54 08             	r4 = r5
 1e00c28:    d2 17             	call -92 <clr_wdt : 1e00bce >			  ## flash_fs_api.c:172:13
 1e00c2a:    30 70             	r0 = 3			  ## flash_fs_api.c:174:17
 1e00c2c:    61 08             	r1 = r6			  ## flash_fs_api.c:174:17
 1e00c2e:    d6 17             	call -84 <sfc_erase : 1e00bdc >			  ## flash_fs_api.c:174:17
 1e00c30:    45 fc 00 ff       	r5 = r4 + -256			  ## flash_fs_api.c:177:50
 1e00c34:    50 08             	r0 = r5			  ## flash_fs_api.c:177:19
 1e00c36:    f4 ef 01 80       	if (r4 > 255) goto 2 <flash_erase_by_blcok_n_sector+0x38 : 1e00c3c >			  ## flash_fs_api.c:177:19
 1e00c3a:    00 70             	r0 = 0			  ## flash_fs_api.c:177:19
 1e00c3c:    f0 ef 06 90       	if (r0 <= 255) goto 12 <flash_erase_by_blcok_n_sector+0x48 : 1e00c4c >
 1e00c40:    17 80             	r7 += 1			  ## flash_fs_api.c:171:42
 1e00c42:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:176:24
 1e00c46:    50 08             	r0 = r5
 1e00c48:    97 f2 ec 3f       	if (r7 < r9) goto -40 <flash_erase_by_blcok_n_sector+0x20 : 1e00c24 >
 1e00c4c:    64 fc 00 01       	r4 = r6 + 256			  ## flash_fs_api.c:149:56
 1e00c50:    05 08             	r5 = r0			  ## flash_fs_api.c:149:56
 1e00c52:    18 80             	r8 += 1			  ## flash_fs_api.c:183:25
 1e00c54:    08 e0 1f 00       	if (r8 == 0) goto 62 <flash_erase_by_blcok_n_sector+0x92 : 1e00c96 >
 1e00c58:    23 ff 10 5a 1c 00 	if (r5 < 4096) goto 56 <flash_erase_by_blcok_n_sector+0x92 : 1e00c96 >
 1e00c5e:    68 fb 10 89       	r8 = 16 - r8			  ## flash_fs_api.c:189:48
 1e00c62:    08 e0 18 00       	if (r8 == 0) goto 48 <flash_erase_by_blcok_n_sector+0x92 : 1e00c96 >
 1e00c66:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:196:13
 1e00c6a:    07 70             	r7 = 0			  ## flash_fs_api.c:196:13
 1e00c6c:    46 08             	r6 = r4
 1e00c6e:    05 08             	r5 = r0
 1e00c70:    ae 17             	call -164 <clr_wdt : 1e00bce >			  ## flash_fs_api.c:196:13
 1e00c72:    20 70             	r0 = 2			  ## flash_fs_api.c:198:17
 1e00c74:    61 08             	r1 = r6			  ## flash_fs_api.c:198:17
 1e00c76:    b2 17             	call -156 <sfc_erase : 1e00bdc >			  ## flash_fs_api.c:198:17
 1e00c78:    23 ff 10 5a 0a 00 	if (r5 < 4096) goto 20 <flash_erase_by_blcok_n_sector+0x8E : 1e00c92 >			  ## flash_fs_api.c:198:17
 1e00c7e:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:200:24
 1e00c82:    10 70             	r0 = 1			  ## flash_fs_api.c:205:13
 1e00c84:    98 f3 98 30       	call 3170608 <os_time_dly : 106db8 >			  ## flash_fs_api.c:205:13
 1e00c88:    17 80             	r7 += 1			  ## flash_fs_api.c:195:44
 1e00c8a:    50 fc 00 f0       	r0 = r5 + -4096			  ## flash_fs_api.c:195:23
 1e00c8e:    87 f2 ed 3f       	if (r7 < r8) goto -38 <flash_erase_by_blcok_n_sector+0x68 : 1e00c6c >			  ## flash_fs_api.c:195:23
 1e00c92:    64 fc 00 10       	r4 = r6 + 4096			  ## flash_fs_api.c:149:56
 1e00c96:    19 70             	r9 = 1			  ## flash_fs_api.c:135:9
 1e00c98:    61 ff ff 59 01 00 	if ((r5 & 255) != 0) goto 2 <flash_erase_by_blcok_n_sector+0x9C : 1e00ca0 >			  ## flash_fs_api.c:135:9
 1e00c9e:    09 70             	r9 = 0			  ## flash_fs_api.c:135:9
 1e00ca0:    84 fd 40 85       	r8 = uextra(r5, p:8, l:4)			  ## flash_fs_api.c:134:30
 1e00ca4:    2f d4             	r7 = r5 >> 16			  ## flash_fs_api.c:124:22
 1e00ca6:    84 fd 60 a5       	r10 = uextra(r5, p:12, l:4)			  ## flash_fs_api.c:126:32
 1e00caa:    12 2e             	if (r7 == 0) goto 36 <flash_erase_by_blcok_n_sector+0xCC : 1e00cd0 >
 1e00cac:    06 70             	r6 = 0
 1e00cae:    45 08             	r5 = r4
 1e00cb0:    8e 17             	call -228 <clr_wdt : 1e00bce >			  ## flash_fs_api.c:221:9
 1e00cb2:    10 70             	r0 = 1			  ## flash_fs_api.c:223:13
 1e00cb4:    51 08             	r1 = r5			  ## flash_fs_api.c:223:13
 1e00cb6:    92 17             	call -220 <sfc_erase : 1e00bdc >			  ## flash_fs_api.c:223:13
 1e00cb8:    16 80             	r6 += 1			  ## flash_fs_api.c:226:15
 1e00cba:    76 f2 03 20       	if (r6 >= r7) goto 6 <flash_erase_by_blcok_n_sector+0xC0 : 1e00cc4 >
 1e00cbe:    10 70             	r0 = 1			  ## flash_fs_api.c:227:13
 1e00cc0:    98 f3 7a 30       	call 3170548 <os_time_dly : 106db8 >			  ## flash_fs_api.c:227:13
 1e00cc4:    45 fb 01 5b       	r5 = r5 + 65536			  ## flash_fs_api.c:225:20
 1e00cc8:    67 f2 f2 1f       	if (r7 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xAC : 1e00cb0 >
 1e00ccc:    38 c4             	r0 = r7 << 16			  ## flash_fs_api.c:220:5
 1e00cce:    04 09             	r4 += r0			  ## flash_fs_api.c:220:5
 1e00cd0:    80 fb 80 79       	r7 = r9 + r8			  ## flash_fs_api.c:135:9
 1e00cd4:    0a e0 13 00       	if (r10 == 0) goto 38 <flash_erase_by_blcok_n_sector+0xFA : 1e00cfe >
 1e00cd8:    06 70             	r6 = 0
 1e00cda:    45 08             	r5 = r4
 1e00cdc:    78 17             	call -272 <clr_wdt : 1e00bce >			  ## flash_fs_api.c:236:9
 1e00cde:    20 70             	r0 = 2			  ## flash_fs_api.c:238:13
 1e00ce0:    51 08             	r1 = r5			  ## flash_fs_api.c:238:13
 1e00ce2:    7c 17             	call -264 <sfc_erase : 1e00bdc >			  ## flash_fs_api.c:238:13
 1e00ce4:    16 80             	r6 += 1			  ## flash_fs_api.c:241:15
 1e00ce6:    a6 f2 03 20       	if (r6 >= r10) goto 6 <flash_erase_by_blcok_n_sector+0xEC : 1e00cf0 >
 1e00cea:    10 70             	r0 = 1			  ## flash_fs_api.c:242:13
 1e00cec:    98 f3 64 30       	call 3170504 <os_time_dly : 106db8 >			  ## flash_fs_api.c:242:13
 1e00cf0:    55 fc 00 10       	r5 = r5 + 4096			  ## flash_fs_api.c:240:20
 1e00cf4:    6a f2 f2 1f       	if (r10 != r6) goto -28 <flash_erase_by_blcok_n_sector+0xD8 : 1e00cdc >
 1e00cf8:    f0 fd 60 0a       	r0 = r10 << 12			  ## flash_fs_api.c:235:5
 1e00cfc:    04 09             	r4 += r0			  ## flash_fs_api.c:235:5
 1e00cfe:    08 2e             	if (r7 == 0) goto 16 <flash_erase_by_blcok_n_sector+0x10C : 1e00d10 >
 1e00d00:    66 17             	call -308 <clr_wdt : 1e00bce >			  ## flash_fs_api.c:251:9
 1e00d02:    30 70             	r0 = 3			  ## flash_fs_api.c:253:13
 1e00d04:    41 08             	r1 = r4			  ## flash_fs_api.c:253:13
 1e00d06:    6a 17             	call -300 <sfc_erase : 1e00bdc >			  ## flash_fs_api.c:253:13
 1e00d08:    44 fc 00 01       	r4 = r4 + 256			  ## flash_fs_api.c:255:20
 1e00d0c:    57 f3 f8 ff       	if (--r7 != 0) goto -16 <flash_erase_by_blcok_n_sector+0xFC : 1e00d00 >
 1e00d10:    5a 01             	{pc, r10-r4} = [sp++]			  ## flash_fs_api.c:258:1


flash_erase_by_first_unit:
 1e00d12:    74 01             	[--sp] = {rets, r4}			  ## flash_fs_api.c:647:0
 1e00d14:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## flash_fs_api.c:643:12
 1e00d1a:    21 63             	r1 = b[r1 + 18] (u)			  ## flash_fs_api.c:643:12
 1e00d1c:    12 70             	r2 = 1			  ## flash_fs_api.c:643:12
 1e00d1e:    01 e1 01 00       	if (r1 == 16) goto 2 <flash_erase_by_first_unit+0x12 : 1e00d24 >			  ## flash_fs_api.c:643:12
 1e00d22:    02 70             	r2 = 0			  ## flash_fs_api.c:643:12
 1e00d24:    12 c3             	r2 = r2 << 12			  ## flash_fs_api.c:652:16
 1e00d26:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## flash_fs_api.c:650:9
 1e00d2a:    11 e0 01 00       	if (r1 == 1) goto 2 <flash_erase_by_first_unit+0x1E : 1e00d30 >			  ## flash_fs_api.c:650:9
 1e00d2e:    24 08             	r4 = r2			  ## flash_fs_api.c:650:9
 1e00d30:    41 08             	r1 = r4			  ## flash_fs_api.c:657:5
 1e00d32:    68 17             	call -304 <flash_erase_by_blcok_n_sector : 1e00c04 >			  ## flash_fs_api.c:657:5
 1e00d34:    40 08             	r0 = r4			  ## flash_fs_api.c:659:5
 1e00d36:    54 01             	{pc, r4} = [sp++]			  ## flash_fs_api.c:659:5


norflash_write:
 1e00d38:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:1009:0
 1e00d3a:    c3 ff 70 22 00 00 	r3 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:1009:0
 1e00d40:    04 f6 8c 30       	r4 = [r3 + 140]			  ## vm_sfc.c:1012:37
 1e00d44:    26 08             	r6 = r2			  ## vm_sfc.c:1012:37
 1e00d46:    19 08             	r9 = r1			  ## vm_sfc.c:1012:37
 1e00d48:    07 08             	r7 = r0			  ## vm_sfc.c:1012:37
 1e00d4a:    61 09             	r1 += r6			  ## vm_sfc.c:1012:17
 1e00d4c:    00 70             	r0 = 0			  ## vm_sfc.c:1012:17
 1e00d4e:    41 f2 29 80       	if (r1 > r4) goto 82 <norflash_write+0x6C : 1e00da4 >			  ## vm_sfc.c:1012:17
 1e00d52:    38 fc ac 00       	r8 = r3 + 172			  ## vm_sfc.c:1023:5
 1e00d56:    f1 07             	r1 = -1			  ## vm_sfc.c:1023:5
 1e00d58:    80 08             	r0 = r8			  ## vm_sfc.c:1023:5
 1e00d5a:    98 f3 63 30       	call 3170502 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:1023:5
 1e00d5e:    80 05             	r0 = r6.b0 (u)			  ## vm_sfc.c:1026:40
 1e00d60:    64 fb 01 0a       	r4 = 256 - r0			  ## vm_sfc.c:1026:30
 1e00d64:    94 f2 01 30       	if (r4 < r9) goto 2 <norflash_write+0x32 : 1e00d6a >
 1e00d68:    94 08             	r4 = r9			  ## vm_sfc.c:1028:22
 1e00d6a:    70 08             	r0 = r7			  ## vm_sfc.c:1029:5
 1e00d6c:    61 08             	r1 = r6			  ## vm_sfc.c:1029:5
 1e00d6e:    42 08             	r2 = r4			  ## vm_sfc.c:1029:5
 1e00d70:    90 f3 72 16       	call 2108644 <_norflash_write : 3a58 >			  ## vm_sfc.c:1029:5
 1e00d74:    90 fb 40 59       	r5 = r9 - r4			  ## vm_sfc.c:1031:10
 1e00d78:    11 2a             	if (r5 == 0) goto 34 <norflash_write+0x64 : 1e00d9c >
 1e00d7a:    47 09             	r7 += r4			  ## vm_sfc.c:1032:10
 1e00d7c:    46 09             	r6 += r4			  ## vm_sfc.c:1033:12
 1e00d7e:    54 08             	r4 = r5			  ## vm_sfc.c:1036:19
 1e00d80:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <norflash_write+0x52 : 1e00d8a >
 1e00d86:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:1036:19
 1e00d8a:    70 08             	r0 = r7			  ## vm_sfc.c:1037:9
 1e00d8c:    61 08             	r1 = r6			  ## vm_sfc.c:1037:9
 1e00d8e:    42 08             	r2 = r4			  ## vm_sfc.c:1037:9
 1e00d90:    90 f3 62 16       	call 2108612 <_norflash_write : 3a58 >			  ## vm_sfc.c:1037:9
 1e00d94:    47 09             	r7 += r4			  ## vm_sfc.c:1040:14
 1e00d96:    25 bb             	r5 = r5 - r4			  ## vm_sfc.c:1038:14
 1e00d98:    46 09             	r6 += r4			  ## vm_sfc.c:1039:16
 1e00d9a:    f1 3b             	if (r5 != 0) goto -30 <norflash_write+0x46 : 1e00d7e >
 1e00d9c:    80 08             	r0 = r8			  ## vm_sfc.c:1042:5
 1e00d9e:    98 f3 43 30       	call 3170438 <os_mutex_post : 106e28 >			  ## vm_sfc.c:1042:5
 1e00da2:    90 08             	r0 = r9			  ## vm_sfc.c:1042:5
 1e00da4:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:1044:1


sfc_write:
 1e00da6:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1494:0
 1e00da8:    24 08             	r4 = r2			  ## vm.c:1494:0
 1e00daa:    12 08             	r2 = r1			  ## vm.c:1494:0
 1e00dac:    41 08             	r1 = r4			  ## vm.c:1504:5
 1e00dae:    c4 17             	call -120 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e00db0:    40 08             	r0 = r4			  ## vm.c:1507:1
 1e00db2:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1507:1


sfc_read:
 1e00db4:    74 01             	[--sp] = {rets, r4}			  ## vm.c:1519:0
 1e00db6:    24 08             	r4 = r2			  ## vm.c:1519:0
 1e00db8:    12 08             	r2 = r1			  ## vm.c:1519:0
 1e00dba:    41 08             	r1 = r4			  ## vm.c:1522:5
 1e00dbc:    1b 16             	call -970 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e00dbe:    40 08             	r0 = r4			  ## vm.c:1523:5
 1e00dc0:    54 01             	{pc, r4} = [sp++]			  ## vm.c:1523:5


testbox_update_msg_handle:
 1e00dc2:    74 01             	[--sp] = {rets, r4}			  ## testbox_update.c:207:0
 1e00dc4:    f0 0b             	sp += -32			  ## testbox_update.c:207:0
 1e00dc6:    c1 ff 0b 00 40 00 	r1 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## testbox_update.c:210:5
 1e00dcc:    10 f2 08 00       	if (r0 == r1) goto 16 <testbox_update_msg_handle+0x1E : 1e00de0 >			  ## testbox_update.c:210:5
 1e00dd0:    e1 8f             	r1 += -2
 1e00dd2:    10 f2 10 10       	if (r0 != r1) goto 32 <testbox_update_msg_handle+0x34 : 1e00df6 >
 1e00dd6:    04 a1             	r4 = sp + 16
 1e00dd8:    c1 ff f8 e0 e0 01 	r1 = 31514872 <default_profile_data+0xE : 1e0e0f8 >			  ## testbox_update.c:216:32
 1e00dde:    04 18             	goto 8 <testbox_update_msg_handle+0x26 : 1e00de8 >			  ## testbox_update.c:216:32
 1e00de0:    04 a0             	r4 = sp + 0
 1e00de2:    c1 ff 08 e1 e0 01 	r1 = 31514888 <default_profile_data+0x1E : 1e0e108 >			  ## testbox_update.c:228:32
 1e00de8:    02 71             	r2 = 16
 1e00dea:    40 08             	r0 = r4
 1e00dec:    98 f3 7a 30       	call 3170548 <memcpy : 106ee4 >
 1e00df0:    40 08             	r0 = r4
 1e00df2:    80 f3 70 b4       	call 92384 <app_active_update_task_init : 1e176d6 >
 1e00df6:    10 0a             	sp += 32
 1e00df8:    54 01             	{pc, r4} = [sp++]			  ## testbox_update.c:243:1


ble_comm_dev_get_handle_state:
 1e00dfa:    34 00             	[--sp] = rets			  ## le_gatt_common.c:311:0
 1e00dfc:    0b 14             	call -2026 <ble_comm_dev_get_index : 1e00614 >			  ## le_gatt_common.c:312:16
 1e00dfe:    f0 ef 06 00       	if (r0 == -1) goto 12 <ble_comm_dev_get_handle_state+0x14 : 1e00e0e >			  ## le_gatt_common.c:312:16
 1e00e02:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## le_gatt_common.c:319:16
 1e00e08:    10 09             	r0 += r1			  ## le_gatt_common.c:314:9
 1e00e0a:    10 60             	r0 = b[r0 + 1] (u)			  ## le_gatt_common.c:314:9
 1e00e0c:    30 00             	pc = [sp++]			  ## le_gatt_common.c:323:1
 1e00e0e:    00 70             	r0 = 0
 1e00e10:    30 00             	pc = [sp++]			  ## le_gatt_common.c:323:1


ble_comm_disconnect:
 1e00e12:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_common.c:854:0
 1e00e14:    04 08             	r4 = r0			  ## le_gatt_common.c:854:0
 1e00e16:    0c 28             	if (r4 == 0) goto 24 <ble_comm_disconnect+0x1E : 1e00e30 >			  ## le_gatt_common.c:854:0
 1e00e18:    f0 17             	call -32 <ble_comm_dev_get_handle_state : 1e00dfa >			  ## le_gatt_common.c:841:36
 1e00e1a:    40 e0 09 00       	if (r0 == 4) goto 18 <ble_comm_disconnect+0x1E : 1e00e30 >			  ## le_gatt_common.c:841:36
 1e00e1e:    41 70             	r1 = 4			  ## le_gatt_common.c:842:13
 1e00e20:    40 08             	r0 = r4			  ## le_gatt_common.c:842:13
 1e00e22:    08 14             	call -2032 <ble_comm_dev_set_handle_state : 1e00634 >			  ## le_gatt_common.c:842:13
 1e00e24:    f0 71             	r0 = 31			  ## le_gatt_common.c:845:13
 1e00e26:    21 70             	r1 = 2			  ## le_gatt_common.c:845:13
 1e00e28:    33 71             	r3 = 19			  ## le_gatt_common.c:845:13
 1e00e2a:    42 08             	r2 = r4			  ## le_gatt_common.c:845:13
 1e00e2c:    80 f3 20 2c       	call 22592 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_common.c:845:13
 1e00e30:    54 01             	{pc, r4} = [sp++]


ble_gatt_server_module_enable:
 1e00e32:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_server.c:771:0
 1e00e34:    c4 ff 70 22 00 00 	r4 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:771:0
 1e00e3a:    0a 20             	if (r0 == 0) goto 20 <ble_gatt_server_module_enable+0x1E : 1e00e50 >			  ## le_gatt_server.c:773:9
 1e00e3c:    00 f9 57 40       	r0 = b[r4 + 87] (u)			  ## le_gatt_server.c:774:29
 1e00e40:    20 fd f0 09       	r0 = r0 & 240			  ## le_gatt_server.c:774:29
 1e00e44:    10 b0             	r0 |= 1			  ## le_gatt_server.c:774:29
 1e00e46:    10 f9 57 40       	b[r4 + 87] = r0			  ## le_gatt_server.c:774:29
 1e00e4a:    14 01             	{rets, r4} = [sp++]			  ## le_gatt_server.c:775:9
 1e00e4c:    ff f3 d6 fb       	goto -2132 <__gatt_server_check_auto_adv : 1e005fc >			  ## le_gatt_server.c:775:9
 1e00e50:    00 70             	r0 = 0			  ## le_gatt_server.c:777:9
 1e00e52:    bf f3 80 fb       	call -2304 <ble_gatt_server_adv_enable : 1e00556 >			  ## le_gatt_server.c:777:9
 1e00e56:    01 f9 57 40       	r1 = b[r4 + 87] (u)			  ## le_gatt_server.c:778:29
 1e00e5a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## le_gatt_common.c:242:16
 1e00e60:    b0 50             	r0 = h[r0 + 22] (u)			  ## le_gatt_common.c:242:16
 1e00e62:    21 fd f0 19       	r1 = r1 & 240			  ## le_gatt_server.c:778:29
 1e00e66:    11 f9 57 40       	b[r4 + 87] = r1			  ## le_gatt_server.c:778:29
 1e00e6a:    04 20             	if (r0 == 0) goto 8 <ble_gatt_server_module_enable+0x42 : 1e00e74 >			  ## le_gatt_server.c:778:29
 1e00e6c:    d2 17             	call -92 <ble_comm_disconnect : 1e00e12 >			  ## le_gatt_server.c:734:13
 1e00e6e:    10 70             	r0 = 1			  ## le_gatt_server.c:735:13
 1e00e70:    98 f3 a2 2f       	call 3170116 <os_time_dly : 106db8 >			  ## le_gatt_server.c:735:13
 1e00e74:    00 70             	r0 = 0			  ## le_gatt_server.c:780:9
 1e00e76:    21 70             	r1 = 2			  ## le_gatt_server.c:780:9
 1e00e78:    02 70             	r2 = 0			  ## le_gatt_server.c:780:9
 1e00e7a:    14 01             	{rets, r4} = [sp++]			  ## le_gatt_server.c:780:9
 1e00e7c:    ff f3 3d fb       	goto -2438 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:780:9


ble_module_enable:
 1e00e80:    d8 1f             	goto -80 <ble_gatt_server_module_enable : 1e00e32 >			  ## ble_trans.c:1068:0


update_mode_api_v2:
 1e00e82:    7b 01             	[--sp] = {rets, r11-r4}			  ## update.c:426:0
 1e00e84:    fa 0b             	sp += -12			  ## update.c:426:0
 1e00e86:    29 08             	r9 = r2			  ## update.c:426:0
 1e00e88:    17 08             	r7 = r1			  ## update.c:426:0
 1e00e8a:    0b 08             	r11 = r0			  ## update.c:426:0
 1e00e8c:    00 77             	r0 = 112			  ## update.c:429:22
 1e00e8e:    80 f3 e7 4b       	call 38862 <malloc : 1e0a660 >			  ## update.c:429:22
 1e00e92:    06 08             	r6 = r0			  ## update.c:429:22
 1e00e94:    58 2c             	if (r6 == 0) goto 176 <update_mode_api_v2+0xC4 : 1e00f46 >			  ## update.c:431:9
 1e00e96:    01 70             	r1 = 0			  ## update.c:370:5
 1e00e98:    02 75             	r2 = 80			  ## update.c:370:5
 1e00e9a:    98 f3 29 30       	call 3170386 <memset : 106ef0 >			  ## update.c:370:5
 1e00e9e:    1b f7 02 60       	h[r6 + 2] = r11			  ## update.c:376:22
 1e00ea2:    00 fb 01 5a       	r0 = 23041 <report_overlay_end+0x7F9 : 5a01 >			  ## update.c:379:20
 1e00ea6:    28 5c             	h[r6 + 4] = r0			  ## update.c:379:20
 1e00ea8:    00 fb 41 54       	r0 = 21569 <report_overlay_end+0x239 : 5441 >			  ## update.c:380:14
 1e00eac:    38 5c             	h[r6 + 6] = r0			  ## update.c:380:14
 1e00eae:    ca ff 70 20 00 00 	r10 = 8304 <gatt_client_conn_handle : 2070 >			  ## update.c:380:14
 1e00eb4:    00 f6 10 a1       	r0 = [r10 + 272]			  ## update.c:381:31
 1e00eb8:    28 4d             	[r6 + 72] = r0			  ## update.c:381:17
 1e00eba:    2a 20             	if (r0 == 0) goto 84 <update_mode_api_v2+0x8E : 1e00f10 >			  ## update.c:381:17
 1e00ebc:    28 9c             	r8 = r6 + 2			  ## update.c:376:12
 1e00ebe:    02 2e             	if (r7 == 0) goto 4 <update_mode_api_v2+0x42 : 1e00ec4 >
 1e00ec0:    60 08             	r0 = r6			  ## update.c:390:9
 1e00ec2:    87 00             	call r7			  ## update.c:390:9
 1e00ec4:    00 70             	r0 = 0			  ## update.c:406:8
 1e00ec6:    d0 f5 03 00       	b[sp+3] = r0			  ## update.c:406:8
 1e00eca:    10 70             	r0 = 1			  ## update.c:406:8
 1e00ecc:    d0 f5 04 00       	b[sp+4] = r0			  ## update.c:323:18
 1e00ed0:    d0 f5 05 00       	b[sp+5] = r0			  ## update.c:324:18
 1e00ed4:    37 a0             	r7 = sp + 3			  ## update.c:324:18
 1e00ed6:    2f 02             	[sp+8] = r7			  ## update.c:325:18
 1e00ed8:    65 fc 4c 00       	r5 = r6 + 76			  ## update.c:325:18
 1e00edc:    00 5a             	r0 = h[r5 + 0] (u)			  ## update.c:327:44
 1e00ede:    64 fc 50 00       	r4 = r6 + 80			  ## update.c:327:20
 1e00ee2:    40 09             	r0 += r4			  ## update.c:327:42
 1e00ee4:    41 a0             	r1 = sp + 4			  ## update.c:327:42
 1e00ee6:    22 70             	r2 = 2			  ## update.c:327:5
 1e00ee8:    98 f3 fc 2f       	call 3170296 <memcpy : 106ee4 >			  ## update.c:327:5
 1e00eec:    00 5a             	r0 = h[r5 + 0] (u)			  ## update.c:328:44
 1e00eee:    40 09             	r0 += r4			  ## update.c:328:42
 1e00ef0:    20 80             	r0 += 2			  ## update.c:328:59
 1e00ef2:    12 70             	r2 = 1			  ## update.c:328:5
 1e00ef4:    71 08             	r1 = r7			  ## update.c:328:5
 1e00ef6:    98 f3 f5 2f       	call 3170282 <memcpy : 106ee4 >			  ## update.c:328:5
 1e00efa:    00 5a             	r0 = h[r5 + 0] (u)			  ## update.c:331:20
 1e00efc:    30 80             	r0 += 3			  ## update.c:331:20
 1e00efe:    08 5a             	h[r5 + 0] = r0			  ## update.c:331:20
 1e00f00:    21 04             	r1 = r0.l (u)			  ## update.c:332:59
 1e00f02:    40 08             	r0 = r4			  ## update.c:332:22
 1e00f04:    5b 15             	call -1354 <CRC16 : 1e009bc >			  ## update.c:332:22
 1e00f06:    18 5a             	h[r5 + 2] = r0			  ## update.c:332:20
 1e00f08:    e1 74             	r1 = 78			  ## update.c:416:19
 1e00f0a:    80 08             	r0 = r8			  ## update.c:416:19
 1e00f0c:    57 15             	call -1362 <CRC16 : 1e009bc >			  ## update.c:416:19
 1e00f0e:    08 5c             	h[r6 + 0] = r0			  ## update.c:416:17
 1e00f10:    03 f6 18 a1       	r3 = [r10 + 280]			  ## update.c:434:25
 1e00f14:    05 26             	if (r3 == 0) goto 10 <update_mode_api_v2+0x9E : 1e00f20 >			  ## update.c:434:25
 1e00f16:    00 f6 14 a1       	r0 = [r10 + 276]			  ## update.c:435:60
 1e00f1a:    02 77             	r2 = 112			  ## update.c:435:13
 1e00f1c:    61 08             	r1 = r6			  ## update.c:435:13
 1e00f1e:    83 00             	call r3			  ## update.c:435:13
 1e00f20:    c0 ff 68 fb 00 00 	r0 = 64360 <report_heap_end+0x8 : fb68 >			  ## update.c:422:5
 1e00f26:    02 77             	r2 = 112			  ## update.c:422:5
 1e00f28:    61 08             	r1 = r6			  ## update.c:422:5
 1e00f2a:    98 f3 db 2f       	call 3170230 <memcpy : 106ee4 >			  ## update.c:422:5
 1e00f2e:    98 f3 35 2f       	call 3169898 <local_irq_disable : 106d9c >			  ## update.c:295:5
 1e00f32:    80 f3 32 4c       	call 39012 <hwi_all_close : 1e0a79a >			  ## update.c:298:5
 1e00f36:    09 e0 02 00       	if (r9 == 0) goto 4 <update_mode_api_v2+0xBC : 1e00f3e >			  ## update.c:298:5
 1e00f3a:    b0 08             	r0 = r11			  ## update.c:456:13
 1e00f3c:    89 00             	call r9			  ## update.c:456:13
 1e00f3e:    60 08             	r0 = r6			  ## update.c:458:9
 1e00f40:    80 f3 a1 4b       	call 38722 <free : 1e0a686 >			  ## update.c:458:9
 1e00f44:    02 18             	goto 4 <update_mode_api_v2+0xC8 : 1e00f4a >			  ## update.c:458:9
 1e00f46:    90 f3 db 11       	call 2106294 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e00f4a:    06 0a             	sp += 12
 1e00f4c:    5b 01             	{pc, r11-r4} = [sp++]			  ## update.c:462:1


cpu_reset.633:
 1e00f4e:    d0 f3 d7 11       	goto 2106286 <p33_soft_reset : 3300 >			  ## cpu.h:146:0


testbox_ble_update_state_cbk:
 1e00f52:    74 01             	[--sp] = {rets, r4}			  ## testbox_update.c:143:0
 1e00f54:    31 e0 31 10       	if (r1 != 3) goto 98 <testbox_ble_update_state_cbk+0x68 : 1e00fba >			  ## testbox_update.c:143:0
 1e00f58:    00 44             	r0 = [r2 + 0]			  ## testbox_update.c:143:0
 1e00f5a:    10 e0 20 00       	if (r0 == 1) goto 64 <testbox_ble_update_state_cbk+0x4C : 1e00f9e >			  ## testbox_update.c:161:38
 1e00f5e:    2d 30             	if (r0 != 0) goto 90 <testbox_ble_update_state_cbk+0x68 : 1e00fba >
 1e00f60:    40 64             	r0 = b[r2 + 4] (u)			  ## testbox_update.c:161:57
 1e00f62:    2b 30             	if (r0 != 0) goto 86 <testbox_ble_update_state_cbk+0x68 : 1e00fba >			  ## testbox_update.c:161:57
 1e00f64:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >
 1e00f6a:    11 70             	r1 = 1
 1e00f6c:    11 f9 34 00       	b[r0 + 52] = r1
 1e00f70:    00 70             	r0 = 0			  ## testbox_update.c:169:17
 1e00f72:    86 17             	call -244 <ble_module_enable : 1e00e80 >			  ## testbox_update.c:169:17
 1e00f74:    f4 7f             	r4 = 255
 1e00f76:    80 f3 c3 2c       	call 22918 <check_le_conn_disconnet_flag : 1e06900 >			  ## testbox_update.c:171:25
 1e00f7a:    07 30             	if (r0 != 0) goto 14 <testbox_ble_update_state_cbk+0x38 : 1e00f8a >			  ## testbox_update.c:171:25
 1e00f7c:    20 70             	r0 = 2			  ## testbox_update.c:173:21
 1e00f7e:    98 f3 1b 2f       	call 3169846 <os_time_dly : 106db8 >			  ## testbox_update.c:173:21
 1e00f82:    14 80             	r4 += 1			  ## testbox_update.c:174:31
 1e00f84:    00 05             	r0 = r4.b0 (u)			  ## testbox_update.c:174:31
 1e00f86:    60 e0 f6 3f       	if (r0 < 6) goto -20 <testbox_ble_update_state_cbk+0x24 : 1e00f76 >			  ## testbox_update.c:174:31
 1e00f8a:    c1 ff bc 0f e0 01 	r1 = 31461308 <testbox_ble_update_private_param_fill : 1e00fbc >			  ## testbox_update.c:180:17
 1e00f90:    c2 ff d4 10 e0 01 	r2 = 31461588 <testbox_ble_update_before_jump_handle : 1e010d4 >			  ## testbox_update.c:180:17
 1e00f96:    00 fb 09 5a       	r0 = 23049 <report_overlay_end+0x801 : 5a09 >			  ## testbox_update.c:180:17
 1e00f9a:    14 01             	{rets, r4} = [sp++]			  ## testbox_update.c:180:17
 1e00f9c:    72 1f             	goto -284 <update_mode_api_v2 : 1e00e82 >			  ## testbox_update.c:180:17
 1e00f9e:    00 70             	r0 = 0			  ## testbox_update.c:189:17
 1e00fa0:    6f 17             	call -290 <ble_module_enable : 1e00e80 >			  ## testbox_update.c:189:17
 1e00fa2:    f4 7f             	r4 = 255
 1e00fa4:    80 f3 ac 2c       	call 22872 <check_le_conn_disconnet_flag : 1e06900 >			  ## testbox_update.c:191:25
 1e00fa8:    07 30             	if (r0 != 0) goto 14 <testbox_ble_update_state_cbk+0x66 : 1e00fb8 >			  ## testbox_update.c:191:25
 1e00faa:    20 70             	r0 = 2			  ## testbox_update.c:193:21
 1e00fac:    98 f3 04 2f       	call 3169800 <os_time_dly : 106db8 >			  ## testbox_update.c:193:21
 1e00fb0:    14 80             	r4 += 1			  ## testbox_update.c:194:31
 1e00fb2:    00 05             	r0 = r4.b0 (u)			  ## testbox_update.c:194:31
 1e00fb4:    60 e0 f6 3f       	if (r0 < 6) goto -20 <testbox_ble_update_state_cbk+0x52 : 1e00fa4 >			  ## testbox_update.c:194:31
 1e00fb8:    ca 17             	call -108 <cpu_reset.633 : 1e00f4e >			  ## testbox_update.c:199:17
 1e00fba:    54 01             	{pc, r4} = [sp++]			  ## testbox_update.c:204:1


testbox_ble_update_private_param_fill:
 1e00fbc:    75 01             	[--sp] = {rets, r5, r4}			  ## testbox_update.c:106:0
 1e00fbe:    fc 0b             	sp += -8			  ## testbox_update.c:106:0
 1e00fc0:    04 08             	r4 = r0			  ## testbox_update.c:106:0
 1e00fc2:    25 a0             	r5 = sp + 2			  ## testbox_update.c:106:0
 1e00fc4:    50 08             	r0 = r5			  ## testbox_update.c:110:9
 1e00fc6:    80 f3 3d a3       	call 83578 <le_controller_get_mac : 1e15644 >			  ## testbox_update.c:110:9
 1e00fca:    40 fc 28 00       	r0 = r4 + 40			  ## update.c:316:25
 1e00fce:    62 70             	r2 = 6			  ## update.c:316:5
 1e00fd0:    51 08             	r1 = r5			  ## update.c:316:5
 1e00fd2:    98 f3 87 2f       	call 3170062 <memcpy : 106ee4 >			  ## update.c:316:5
 1e00fd6:    04 0a             	sp += 8			  ## update.c:316:5
 1e00fd8:    55 01             	{pc, r5, r4} = [sp++]			  ## testbox_update.c:116:1


lbuf_free_btctrler:
 1e00fda:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:273:0
 1e00fdc:    04 08             	r4 = r0			  ## lbuf.c:273:0
 1e00fde:    39 28             	if (r4 == 0) goto 114 <lbuf_free_btctrler+0x78 : 1e01052 >			  ## lbuf.c:273:0
 1e00fe0:    98 f3 dc 2e       	call 3169720 <local_irq_disable : 106d9c >			  ## lbuf.c:287:5
 1e00fe4:    41 fc f0 ff       	r1 = r4 + -16			  ## lbuf.c:287:5
 1e00fe8:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e00fea:    12 42             	r2 = [r1 + 4]			  ## list.h:165:23
 1e00fec:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:299:19
 1e00fee:    1a 40             	[r0 + 4] = r2			  ## list.h:159:16
 1e00ff0:    08 44             	[r2 + 0] = r0			  ## list.h:160:16
 1e00ff2:    60 52             	r0 = h[r1 + 12] (u)			  ## lbuf.c:303:23
 1e00ff4:    48 52             	h[r1 + 8] = r0			  ## lbuf.c:303:14
 1e00ff6:    22 46             	r2 = [r3 + 8]			  ## lbuf.c:303:14
 1e00ff8:    80 96             	r0 = r3 + 8			  ## lbuf.c:307:5
 1e00ffa:    02 f2 09 00       	if (r2 == r0) goto 18 <lbuf_free_btctrler+0x36 : 1e01010 >
 1e00ffe:    12 f2 0a 80       	if (r2 > r1) goto 20 <lbuf_free_btctrler+0x3C : 1e01016 >			  ## lbuf.c:308:24
 1e01002:    44 54             	r4 = h[r2 + 8] (u)			  ## lbuf.c:308:38
 1e01004:    24 09             	r4 += r2			  ## lbuf.c:308:36
 1e01006:    14 f2 22 80       	if (r4 > r1) goto 68 <lbuf_free_btctrler+0x74 : 1e0104e >			  ## lbuf.c:308:36
 1e0100a:    02 44             	r2 = [r2 + 0]
 1e0100c:    02 f2 f7 1f       	if (r2 != r0) goto -18 <lbuf_free_btctrler+0x24 : 1e00ffe >
 1e01010:    c3 80             	r3 += 12			  ## list.h:154:28
 1e01012:    02 08             	r2 = r0
 1e01014:    01 18             	goto 2 <lbuf_free_btctrler+0x3E : 1e01018 >
 1e01016:    43 94             	r3 = r2 + 4			  ## lbuf.c:313:46
 1e01018:    04 46             	r4 = [r3 + 0]
 1e0101a:    09 46             	[r3 + 0] = r1			  ## list.h:137:16
 1e0101c:    0a 42             	[r1 + 0] = r2			  ## list.h:138:16
 1e0101e:    1c 42             	[r1 + 4] = r4			  ## list.h:139:16
 1e01020:    09 48             	[r4 + 0] = r1			  ## list.h:140:16
 1e01022:    01 40             	r1 = [r0 + 0]			  ## list.h:140:16
 1e01024:    01 f2 13 00       	if (r1 == r0) goto 38 <lbuf_free_btctrler+0x74 : 1e0104e >
 1e01028:    02 70             	r2 = 0
 1e0102a:    13 08             	r3 = r1
 1e0102c:    0c 24             	if (r2 == 0) goto 24 <lbuf_free_btctrler+0x6C : 1e01046 >
 1e0102e:    44 54             	r4 = h[r2 + 8] (u)			  ## lbuf.c:328:31
 1e01030:    85 b8             	r5 = r4 + r2			  ## lbuf.c:328:23
 1e01032:    15 f2 08 10       	if (r5 != r1) goto 16 <lbuf_free_btctrler+0x6C : 1e01046 >			  ## lbuf.c:328:23
 1e01036:    43 52             	r3 = h[r1 + 8] (u)			  ## lbuf.c:330:29
 1e01038:    43 09             	r3 += r4			  ## lbuf.c:330:23
 1e0103a:    4b 54             	h[r2 + 8] = r3			  ## lbuf.c:330:23
 1e0103c:    03 42             	r3 = [r1 + 0]			  ## list.h:165:36
 1e0103e:    14 42             	r4 = [r1 + 4]			  ## list.h:165:23
 1e01040:    1c 46             	[r3 + 4] = r4			  ## list.h:159:16
 1e01042:    0b 48             	[r4 + 0] = r3			  ## list.h:160:16
 1e01044:    23 08             	r3 = r2			  ## list.h:160:16
 1e01046:    01 42             	r1 = [r1 + 0]
 1e01048:    32 08             	r2 = r3
 1e0104a:    01 f2 ee 1f       	if (r1 != r0) goto -36 <lbuf_free_btctrler+0x50 : 1e0102a >
 1e0104e:    98 f3 a3 2e       	call 3169606 <local_irq_enable : 106d98 >			  ## lbuf.c:339:5
 1e01052:    55 01             	{pc, r5, r4} = [sp++]			  ## lbuf.c:340:1


hw_dma_free:
 1e01054:    c2 1f             	goto -124 <lbuf_free_btctrler : 1e00fda >			  ## hw_dma.c:62:0


hw_dma_clear:
 1e01056:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:116:0
 1e01058:    04 08             	r4 = r0			  ## hw_dma.c:116:0
 1e0105a:    00 48             	r0 = [r4 + 0]			  ## hw_dma.c:119:5
 1e0105c:    40 f2 0a 00       	if (r0 == r4) goto 20 <hw_dma_clear+0x1E : 1e01074 >
 1e01060:    11 40             	r1 = [r0 + 4]			  ## list.h:171:23
 1e01062:    05 40             	r5 = [r0 + 0]
 1e01064:    19 4a             	[r5 + 4] = r1			  ## list.h:159:16
 1e01066:    0d 42             	[r1 + 0] = r5			  ## list.h:160:16
 1e01068:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e0106a:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e0106c:    b6 17             	call -148 <lbuf_free_btctrler : 1e00fda >			  ## hw_dma.c:121:9
 1e0106e:    50 08             	r0 = r5
 1e01070:    45 f2 f6 1f       	if (r5 != r4) goto -20 <hw_dma_clear+0xA : 1e01060 >
 1e01074:    55 01             	{pc, r5, r4} = [sp++]			  ## hw_dma.c:123:1


btctler_nv_memory_free:
 1e01076:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:244:0
 1e01078:    02 20             	if (r0 == 0) goto 4 <btctler_nv_memory_free+0x8 : 1e0107e >			  ## btcontroller_heap.c:244:0
 1e0107a:    80 f3 04 4b       	call 38408 <free : 1e0a686 >			  ## btcontroller_heap.c:249:9
 1e0107e:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:251:1


sys_timer_remove:
 1e01080:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:40:0
 1e01082:    c0 f3 e2 52       	goto 42436 <sys_timeout_del : 1e0b64a >			  ## sys_timer.c:43:5


__bt_free:
 1e01086:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:269:0
 1e01088:    02 20             	if (r0 == 0) goto 4 <__bt_free+0x8 : 1e0108e >			  ## btcontroller_heap.c:269:0
 1e0108a:    80 f3 fc 4a       	call 38392 <free : 1e0a686 >			  ## btcontroller_heap.c:249:9
 1e0108e:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:271:1


thread_delete:
 1e01090:    34 00             	[--sp] = rets			  ## thread.c:161:0
 1e01092:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e01094:    13 40             	r3 = [r0 + 4]			  ## list.h:171:23
 1e01096:    22 40             	r2 = [r0 + 8]			  ## thread.c:163:35
 1e01098:    1b 42             	[r1 + 4] = r3			  ## list.h:159:16
 1e0109a:    09 46             	[r3 + 0] = r1			  ## list.h:160:16
 1e0109c:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e0109e:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e010a0:    03 44             	r3 = [r2 + 0]			  ## list.h:124:18
 1e010a2:    01 70             	r1 = 0
 1e010a4:    23 f2 04 10       	if (r3 != r2) goto 8 <thread_delete+0x20 : 1e010b0 >
 1e010a8:    40 61             	r0 = b[r0 + 20] (u)			  ## thread.c:168:15
 1e010aa:    31 44             	r1 = [r2 + 12]			  ## thread.c:168:26
 1e010ac:    81 00             	call r1			  ## thread.c:168:15
 1e010ae:    01 08             	r1 = r0			  ## thread.c:168:15
 1e010b0:    10 08             	r0 = r1			  ## thread.c:171:5
 1e010b2:    30 00             	pc = [sp++]			  ## thread.c:171:5


lbuf_clear_btctrler:
 1e010b4:    75 01             	[--sp] = {rets, r5, r4}			  ## lbuf.c:182:0
 1e010b6:    04 08             	r4 = r0			  ## lbuf.c:182:0
 1e010b8:    98 f3 70 2e       	call 3169504 <local_irq_disable : 106d9c >			  ## lbuf.c:186:5
 1e010bc:    00 48             	r0 = [r4 + 0]			  ## lbuf.c:188:5
 1e010be:    40 f2 06 00       	if (r0 == r4) goto 12 <lbuf_clear_btctrler+0x1A : 1e010ce >
 1e010c2:    45 f6 10 00       	r5 = [r0 ++= 16]
 1e010c6:    89 17             	call -238 <lbuf_free_btctrler : 1e00fda >			  ## lbuf.c:189:9
 1e010c8:    50 08             	r0 = r5			  ## lbuf.c:189:9
 1e010ca:    45 f2 fa 1f       	if (r5 != r4) goto -12 <lbuf_clear_btctrler+0xE : 1e010c2 >
 1e010ce:    15 01             	{rets, r5, r4} = [sp++]			  ## lbuf.c:192:5
 1e010d0:    d8 f3 62 2e       	goto 3169476 <local_irq_enable : 106d98 >			  ## lbuf.c:192:5


testbox_ble_update_before_jump_handle:
 1e010d4:    34 00             	[--sp] = rets			  ## testbox_update.c:119:0
 1e010d6:    80 f3 bb a2       	call 83318 <ll_hci_destory : 1e15650 >			  ## testbox_update.c:121:9
 1e010da:    88 01             	{rets} = [sp++]			  ## testbox_update.c:138:5
 1e010dc:    38 1f             	goto -400 <cpu_reset.633 : 1e00f4e >			  ## testbox_update.c:138:5


testbox_bt_classic_update_state_cbk:
 1e010de:    34 00             	[--sp] = rets			  ## testbox_update.c:69:0
 1e010e0:    31 e0 11 10       	if (r1 != 3) goto 34 <testbox_bt_classic_update_state_cbk+0x28 : 1e01106 >			  ## testbox_update.c:69:0
 1e010e4:    00 44             	r0 = [r2 + 0]			  ## testbox_update.c:69:0
 1e010e6:    10 e0 0d 00       	if (r0 == 1) goto 26 <testbox_bt_classic_update_state_cbk+0x26 : 1e01104 >			  ## testbox_update.c:87:38
 1e010ea:    0d 30             	if (r0 != 0) goto 26 <testbox_bt_classic_update_state_cbk+0x28 : 1e01106 >
 1e010ec:    40 64             	r0 = b[r2 + 4] (u)			  ## testbox_update.c:87:57
 1e010ee:    0b 30             	if (r0 != 0) goto 22 <testbox_bt_classic_update_state_cbk+0x28 : 1e01106 >			  ## testbox_update.c:87:57
 1e010f0:    c1 ff 08 11 e0 01 	r1 = 31461640 <testbox_bt_classic_update_private_param_fill : 1e01108 >			  ## testbox_update.c:89:17
 1e010f6:    c2 ff 9a 11 e0 01 	r2 = 31461786 <testbox_bt_classic_update_before_jump_handle : 1e0119a >			  ## testbox_update.c:89:17
 1e010fc:    00 fb 05 5a       	r0 = 23045 <report_overlay_end+0x7FD : 5a05 >			  ## testbox_update.c:89:17
 1e01100:    88 01             	{rets} = [sp++]			  ## testbox_update.c:89:17
 1e01102:    bf 1e             	goto -642 <update_mode_api_v2 : 1e00e82 >			  ## testbox_update.c:89:17
 1e01104:    24 17             	call -440 <cpu_reset.633 : 1e00f4e >			  ## testbox_update.c:93:17
 1e01106:    30 00             	pc = [sp++]			  ## testbox_update.c:98:1


testbox_bt_classic_update_private_param_fill:
 1e01108:    20 00             	rts			  ## testbox_update.c:41:0


ram_protect_close:
 1e0110a:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1568:0
 1e0110c:    02 70             	r2 = 0			  ## debug.c:1568:0
 1e0110e:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## debug.c:1568:0
 1e01114:    7a 40             	[r0 + 28] = r2			  ## debug.c:586:19
 1e01116:    c1 ff ff ff ff 01 	r1 = 33554431 <bank_code_load_addr+0x1E5753 : 1ffffff >			  ## debug.c:587:19
 1e0111c:    69 40             	[r0 + 24] = r1			  ## debug.c:587:19
 1e0111e:    9a 40             	[r0 + 36] = r2			  ## debug.c:592:19
 1e01120:    89 40             	[r0 + 32] = r1			  ## debug.c:593:19
 1e01122:    c1 ff fc 03 1b 00 	r1 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:593:19
 1e01128:    02 18             	goto 4 <ram_protect_close+0x24 : 1e0112e >			  ## debug.c:593:19
 1e0112a:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:573:9
 1e0112e:    03 42             	r3 = [r1 + 0]
 1e01130:    00 f3 fb 3f       	if ((r3 & 1) == 0) goto -10 <ram_protect_close+0x20 : 1e0112a >
 1e01134:    c3 ff c0 c0 06 00 	r3 = 442560 <text_size+0x53EE0 : 6c0c0 >
 1e0113a:    04 97             	r4 = r3 + 16
 1e0113c:    05 99             	r5 = r4 + 16
 1e0113e:    06 9b             	r6 = r5 + 16
 1e01140:    07 70             	r7 = 0
 1e01142:    b2 f6 00 73       	[r7+r3<<2] = r2			  ## debug.c:1551:26
 1e01146:    b2 f6 00 74       	[r7+r4<<2] = r2			  ## debug.c:1552:26
 1e0114a:    b2 f6 00 75       	[r7+r5<<2] = r2			  ## debug.c:1554:26
 1e0114e:    b2 f6 00 76       	[r7+r6<<2] = r2			  ## debug.c:1555:26
 1e01152:    47 80             	r7 += 4			  ## debug.c:1550:23
 1e01154:    c7 e0 f5 1f       	if (r7 != 12) goto -22 <ram_protect_close+0x38 : 1e01142 >			  ## debug.c:1550:23
 1e01158:    02 18             	goto 4 <ram_protect_close+0x54 : 1e0115e >			  ## debug.c:1550:23
 1e0115a:    c0 f4 e7 19       	[r1 + 0] = 231			  ## debug.c:580:9
 1e0115e:    02 42             	r2 = [r1 + 0]
 1e01160:    20 f3 fb 2f       	if ((r2 & 1) != 0) goto -10 <ram_protect_close+0x50 : 1e0115a >
 1e01164:    c0 f4 03 09       	[r0 + 0] = 3			  ## debug.c:1582:14
 1e01168:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1584:1


power_set_mode:
 1e0116a:    34 00             	[--sp] = rets			  ## power_hw.c:1414:0
 1e0116c:    c0 ff c0 4e 00 00 	r0 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:1414:0
 1e01172:    81 61             	r1 = b[r0 + 24] (u)			  ## power_hw.c:1416:17
 1e01174:    21 e0 10 00       	if (r1 == 2) goto 32 <power_set_mode+0x2E : 1e01198 >			  ## power_hw.c:1416:17
 1e01178:    21 70             	r1 = 2			  ## power_hw.c:1427:18
 1e0117a:    89 61             	b[r0 + 24] = r1			  ## power_hw.c:1427:18
 1e0117c:    c0 ff 90 18 1a 00 	r0 = 1710224 <uECC_vli_cmp_unsafe+0x9A894 : 1a1890 >
 1e01182:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:81:5
 1e01184:    11 b1             	r1 |= 4			  ## pmu_analog.c:81:5
 1e01186:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:81:5
 1e01188:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:82:5
 1e0118a:    f1 b1             	r1 &= 4294967287			  ## pmu_analog.c:82:5
 1e0118c:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:82:5
 1e0118e:    61 60             	r1 = b[r0 + 6] (u)			  ## pmu_analog.c:84:5
 1e01190:    71 b3             	r1 &= 4294967231			  ## pmu_analog.c:84:5
 1e01192:    69 60             	b[r0 + 6] = r1			  ## pmu_analog.c:84:5
 1e01194:    90 f3 b4 14       	call 2107752 <delay_nus : 3b00 >			  ## pmu_analog.c:86:5
 1e01198:    30 00             	pc = [sp++]			  ## power_hw.c:1440:1


testbox_bt_classic_update_before_jump_handle:
 1e0119a:    77 01             	[--sp] = {rets, r7-r4}			  ## testbox_update.c:46:0
 1e0119c:    80 f3 58 a2       	call 83120 <ll_hci_destory : 1e15650 >			  ## testbox_update.c:51:9
 1e011a0:    c6 ff d8 de e0 01 	r6 = 31514328 <update_target_begin : 1e0ded8 >
 1e011a6:    c7 ff e0 de e0 01 	r7 = 31514336 <update_target_end : 1e0dee0 >
 1e011ac:    c4 ff e8 de e0 01 	r4 = 31514344 <update_target_end+0x8 : 1e0dee8 >
 1e011b2:    0d 18             	goto 26 <testbox_bt_classic_update_before_jump_handle+0x34 : 1e011ce >
 1e011b4:    05 4c             	r5 = [r6 + 0]			  ## update.c:278:36
 1e011b6:    40 08             	r0 = r4			  ## update.c:278:42
 1e011b8:    98 f3 a0 2e       	call 3169600 <strlen : 106efc >			  ## update.c:278:42
 1e011bc:    02 08             	r2 = r0			  ## update.c:278:42
 1e011be:    40 08             	r0 = r4			  ## update.c:278:13
 1e011c0:    51 08             	r1 = r5			  ## update.c:278:13
 1e011c2:    98 f3 93 2e       	call 3169574 <memcmp : 106eec >			  ## update.c:278:13
 1e011c6:    02 20             	if (r0 == 0) goto 4 <testbox_bt_classic_update_before_jump_handle+0x32 : 1e011cc >			  ## update.c:278:13
 1e011c8:    10 4c             	r0 = [r6 + 4]			  ## update.c:280:16
 1e011ca:    80 00             	call r0			  ## update.c:280:13
 1e011cc:    86 80             	r6 += 8			  ## update.c:277:5
 1e011ce:    76 f2 f1 3f       	if (r6 < r7) goto -30 <testbox_bt_classic_update_before_jump_handle+0x1A : 1e011b4 >
 1e011d2:    80 f3 f9 a4       	call 84466 <__bt_updata_save_connection_info : 1e15bc8 >			  ## testbox_update.c:56:13
 1e011d6:    04 30             	if (r0 != 0) goto 8 <testbox_bt_classic_update_before_jump_handle+0x46 : 1e011e0 >			  ## testbox_update.c:56:13
 1e011d8:    98 17             	call -208 <ram_protect_close : 1e0110a >			  ## testbox_update.c:61:9
 1e011da:    c7 17             	call -114 <power_set_mode : 1e0116a >			  ## testbox_update.c:63:9
 1e011dc:    80 f3 de a9       	call 86972 <update_code_start : 1e1659c >			  ## testbox_update.c:64:9
 1e011e0:    57 01             	{pc, r7-r4} = [sp++]			  ## testbox_update.c:66:1


ota_idle_query:
 1e011e2:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## update.c:490:0
 1e011e8:    31 60             	r1 = b[r0 + 3] (u)			  ## update.c:491:13
 1e011ea:    10 70             	r0 = 1			  ## update.c:491:12
 1e011ec:    01 22             	if (r1 == 0) goto 2 <ota_idle_query+0xE : 1e011f0 >			  ## update.c:491:12
 1e011ee:    00 70             	r0 = 0			  ## update.c:491:12
 1e011f0:    20 00             	rts			  ## update.c:491:5


app_update_init:
 1e011f2:    34 00             	[--sp] = rets			  ## update.c:574:0
 1e011f4:    80 f3 94 b2       	call 91432 <update_module_init : 1e17720 >			  ## update.c:575:5
 1e011f8:    80 f3 8e 7e       	call 64796 <btctrler_testbox_update_msg_handle_register : 1e10f18 >			  ## testbox_update.c:249:9
 1e011fc:    00 70             	r0 = 0			  ## update.c:577:5
 1e011fe:    30 00             	pc = [sp++]			  ## update.c:577:5


update_common_state_cbk:
 1e01200:    78 01             	[--sp] = {rets, r8-r4}			  ## update.c:544:0
 1e01202:    07 08             	r7 = r0			  ## update.c:544:0
 1e01204:    06 4e             	r6 = [r7 + 0]			  ## update.c:545:22
 1e01206:    25 08             	r5 = r2
 1e01208:    14 08             	r4 = r1
 1e0120a:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >
 1e01210:    24 e0 0c 00       	if (r4 == 2) goto 24 <update_common_state_cbk+0x2C : 1e0122c >			  ## update.c:549:5
 1e01214:    14 e0 10 10       	if (r4 != 1) goto 32 <update_common_state_cbk+0x38 : 1e01238 >
 1e01218:    80 fc 10 01       	r0 = r8 + 272			  ## update.c:551:9
 1e0121c:    01 70             	r1 = 0			  ## update.c:551:9
 1e0121e:    c2 70             	r2 = 12			  ## update.c:551:9
 1e01220:    98 f3 66 2e       	call 3169484 <memset : 106ef0 >			  ## update.c:551:9
 1e01224:    10 70             	r0 = 1			  ## update.c:512:16
 1e01226:    10 f9 03 80       	b[r8 + 3] = r0			  ## update.c:512:16
 1e0122a:    06 18             	goto 12 <update_common_state_cbk+0x38 : 1e01238 >			  ## update.c:512:16
 1e0122c:    80 fc 10 01       	r0 = r8 + 272			  ## update.c:557:9
 1e01230:    c2 70             	r2 = 12			  ## update.c:557:9
 1e01232:    51 08             	r1 = r5			  ## update.c:557:9
 1e01234:    98 f3 56 2e       	call 3169452 <memcpy : 106ee4 >			  ## update.c:557:9
 1e01238:    13 4e             	r3 = [r7 + 4]			  ## update.c:561:15
 1e0123a:    04 26             	if (r3 == 0) goto 8 <update_common_state_cbk+0x44 : 1e01244 >			  ## update.c:561:15
 1e0123c:    60 08             	r0 = r6			  ## update.c:562:9
 1e0123e:    41 08             	r1 = r4			  ## update.c:562:9
 1e01240:    52 08             	r2 = r5			  ## update.c:562:9
 1e01242:    83 00             	call r3			  ## update.c:562:9
 1e01244:    34 e0 03 10       	if (r4 != 3) goto 6 <update_common_state_cbk+0x4E : 1e0124e >
 1e01248:    00 70             	r0 = 0			  ## update.c:540:16
 1e0124a:    10 f9 03 80       	b[r8 + 3] = r0			  ## update.c:540:16
 1e0124e:    58 01             	{pc, r8-r4} = [sp++]			  ## update.c:570:1


update_result_get:
 1e01250:    75 01             	[--sp] = {rets, r5, r4}			  ## update.c:92:0
 1e01252:    c5 ff 60 fb 00 00 	r5 = 64352 <report_heap_end : fb60 >			  ## update.c:92:0
 1e01258:    a0 9a             	r0 = r5 + 10			  ## update.c:98:19
 1e0125a:    e1 74             	r1 = 78			  ## update.c:98:19
 1e0125c:    bf f3 ae fb       	call -2212 <CRC16 : 1e009bc >			  ## update.c:98:19
 1e01260:    04 fb 00 5a       	r4 = 23040 <report_overlay_end+0x7F8 : 5a00 >			  ## update.c:98:19
 1e01264:    04 20             	if (r0 == 0) goto 8 <update_result_get+0x1E : 1e0126e >			  ## update.c:98:19
 1e01266:    41 5a             	r1 = h[r5 + 8] (u)			  ## update.c:99:38
 1e01268:    10 f2 01 10       	if (r0 != r1) goto 2 <update_result_get+0x1E : 1e0126e >			  ## update.c:99:38
 1e0126c:    64 5a             	r4 = h[r5 + 12] (u)			  ## update.c:100:23
 1e0126e:    70 5a             	r0 = h[r5 + 14] (u)			  ## update.c:103:27
 1e01270:    41 08             	r1 = r4			  ## update.c:103:23
 1e01272:    d0 fd 80 10       	r1 <= insert(r0, p:16, l:16)			  ## update.c:103:23
 1e01276:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## update.c:103:23
 1e0127c:    e9 40             	[r0 + 56] = r1			  ## update.c:103:23
 1e0127e:    80 9a             	r0 = r5 + 8			  ## update.c:103:36
 1e01280:    01 70             	r1 = 0			  ## update.c:105:9
 1e01282:    02 75             	r2 = 80			  ## update.c:105:9
 1e01284:    98 f3 34 2e       	call 3169384 <memset : 106ef0 >			  ## update.c:105:9
 1e01288:    40 08             	r0 = r4			  ## update.c:108:5
 1e0128a:    55 01             	{pc, r5, r4} = [sp++]			  ## update.c:108:5


__errno:
 1e0128c:    c0 ff 38 1d 00 00 	r0 = 7480 <__errno.err : 1d38 >			  ## app_main.c:382:0
 1e01292:    20 00             	rts			  ## app_main.c:384:5


idle_query:
 1e01294:    00 70             	r0 = 0			  ## app_main.c:203:0
 1e01296:    20 00             	rts			  ## app_main.c:203:29


endRelayFunc:
 1e01298:    c0 ff 00 18 1e 00 	r0 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >			  ## app_main.c:185:0
 1e0129e:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012a0:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012a2:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012a4:    01 fc 00 3c       	r1 = r0 + 15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012a8:    00 f4 50 1a       	[r1 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012ac:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e012ae:    f2 b1             	r2 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e012b0:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e012b2:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e012b4:    f2 b1             	r2 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e012b6:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e012b8:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e012ba:    f2 b0             	r2 &= 4294967293			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e012bc:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e012be:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012c0:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012c2:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012c4:    00 f4 50 1a       	[r1 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e012c8:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e012ca:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e012cc:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e012ce:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e012d0:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e012d2:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e012d4:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e012d6:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e012d8:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e012da:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## app_main.c:187:21
 1e012e0:    c0 50             	r0 = h[r0 + 24] (u)			  ## app_main.c:187:5
 1e012e2:    c0 f3 b2 51       	goto 41828 <sys_timeout_del : 1e0b64a >			  ## app_main.c:187:5


timer1_resume:
 1e012e6:    76 01             	[--sp] = {rets, r6-r4}			  ## timer.c:142:0
 1e012e8:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:142:0
 1e012ee:    01 f9 78 00       	r1 = b[r0 + 120] (u)			  ## timer.c:142:0
 1e012f2:    20 22             	if (r1 == 0) goto 64 <timer1_resume+0x4E : 1e01334 >			  ## timer.c:142:0
 1e012f4:    b1 41             	r1 = [r0 + 108]			  ## timer.c:142:0
 1e012f6:    02 fb e0 2e       	r2 = 12000 <fw_flash_bin_head+0x4C : 2ee0 >			  ## timer.c:142:0
 1e012fa:    8a 0e             	r2 = r1 * r2			  ## timer.c:142:0
 1e012fc:    01 70             	r1 = 0			  ## timer.c:142:0
 1e012fe:    c3 ff 68 e6 e0 01 	r3 = 31516264 <timer_div.1454 : 1e0e668 >			  ## timer.c:142:0
 1e01304:    04 fb fd 7e       	r4 = 32509 <nvbss_size+0x12BD : 7efd >			  ## timer.c:142:0
 1e01308:    45 f6 04 30       	r5 = [r3 ++= 4]			  ## timer.c:151:64
 1e0130c:    c0 fe 50 52       	r5 = r2 / r5 (u)			  ## timer.c:151:62
 1e01310:    56 fc ff fe       	r6 = r5 + -257			  ## timer.c:152:36
 1e01314:    46 f2 03 90       	if (r6 <= r4) goto 6 <timer1_resume+0x38 : 1e0131e >			  ## timer.c:152:36
 1e01318:    11 80             	r1 += 1			  ## timer.c:150:78
 1e0131a:    f1 e0 f5 9f       	if (r1 <= 15) goto -22 <timer1_resume+0x22 : 1e01308 >			  ## timer.c:150:78
 1e0131e:    f0 41             	r0 = [r0 + 124]			  ## timer.c:159:30
 1e01320:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:159:30
 1e01326:    18 44             	[r2 + 4] = r0			  ## timer.c:159:20
 1e01328:    2d 44             	[r2 + 8] = r5			  ## timer.c:161:20
 1e0132a:    08 c1             	r0 = r1 << 4			  ## timer.c:165:41
 1e0132c:    01 fb 01 14       	r1 = 5121 <_cpu0_sstack_begin+0x3D1 : 1401 >			  ## timer.c:165:47
 1e01330:    50 b2             	r0 |= r1			  ## timer.c:165:47
 1e01332:    08 44             	[r2 + 0] = r0			  ## timer.c:165:20
 1e01334:    56 01             	{pc, r6-r4} = [sp++]			  ## timer.c:169:1


timer1_run:
 1e01336:    34 00             	[--sp] = rets			  ## timer.c:221:0
 1e01338:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:221:0
 1e0133e:    b2 43             	r2 = [r1 + 108]			  ## timer.c:222:17
 1e01340:    02 f2 0c 00       	if (r2 == r0) goto 24 <timer1_run+0x26 : 1e0135c >			  ## timer.c:222:17
 1e01344:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:228:20
 1e0134a:    c0 f4 40 2a       	[r2 + 0] = 16384			  ## timer.c:228:20
 1e0134e:    b8 43             	[r1 + 108] = r0			  ## timer.c:230:25
 1e01350:    10 70             	r0 = 1			  ## timer.c:230:25
 1e01352:    10 f9 78 10       	b[r1 + 120] = r0
 1e01356:    df f4 00 19       	[r1 + 124] = 0			  ## timer.c:234:25
 1e0135a:    c5 17             	call -118 <timer1_resume : 1e012e6 >			  ## timer.c:236:5
 1e0135c:    30 00             	pc = [sp++]			  ## timer.c:237:1


stopPower:
 1e0135e:    34 00             	[--sp] = rets			  ## app_main.c:190:0
 1e01360:    c0 ff 10 50 1e 00 	r0 = 1986576 <uECC_vli_cmp_unsafe+0xDE014 : 1e5010 >			  ## app_main.c:190:0
 1e01366:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e01368:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e0136a:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e0136c:    01 f4 02 0a       	[r0 + 4] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:678:15
 1e01370:    00 fc f0 c7       	r0 = r0 + -14352
 1e01374:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01376:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01378:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0137a:    01 fc 00 3c       	r1 = r0 + 15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0137e:    00 f4 50 1a       	[r1 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01382:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01384:    f2 b1             	r2 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01386:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01388:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0138a:    f2 b1             	r2 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0138c:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0138e:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01390:    f2 b0             	r2 &= 4294967293			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01392:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01394:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01396:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01398:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0139a:    00 f4 50 1a       	[r1 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0139e:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e013a0:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e013a2:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e013a4:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e013a6:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e013a8:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e013aa:    00 f4 01 19       	[r1 + 0] |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e013ae:    c1 ff 98 12 e0 01 	r1 = 31462040 <endRelayFunc : 1e01298 >			  ## app_main.c:193:15
 1e013b4:    00 70             	r0 = 0			  ## app_main.c:193:15
 1e013b6:    22 73             	r2 = 50			  ## app_main.c:193:15
 1e013b8:    80 f3 ff 51       	call 41982 <sys_timeout_add : 1e0b7ba >			  ## app_main.c:193:15
 1e013bc:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## app_main.c:193:13
 1e013c2:    c8 52             	h[r1 + 24] = r0			  ## app_main.c:193:13
 1e013c4:    c1 ff a4 2c e0 01 	r1 = 31468708 <power_set_soft_poweroff : 1e02ca4 >			  ## app_main.c:195:5
 1e013ca:    00 70             	r0 = 0			  ## app_main.c:195:5
 1e013cc:    02 fb f4 01       	r2 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## app_main.c:195:5
 1e013d0:    88 01             	{rets} = [sp++]			  ## app_main.c:195:5
 1e013d2:    c0 f3 f2 51       	goto 41956 <sys_timeout_add : 1e0b7ba >			  ## app_main.c:195:5


spple_state_idle_query:
 1e013d6:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## app_spp_and_le.c:427:0
 1e013dc:    00 f9 3c 00       	r0 = b[r0 + 60] (u)			  ## app_spp_and_le.c:427:0
 1e013e0:    11 70             	r1 = 1			  ## app_spp_and_le.c:427:0
 1e013e2:    e3 fd 00 01       	r0 = r1 & ~r0			  ## app_spp_and_le.c:428:5
 1e013e6:    20 00             	rts			  ## app_spp_and_le.c:428:5


spple_state_machine:
 1e013e8:    75 01             	[--sp] = {rets, r5, r4}			  ## app_spp_and_le.c:164:0
 1e013ea:    fc 0b             	sp += -8			  ## app_spp_and_le.c:164:0
 1e013ec:    11 e0 39 10       	if (r1 != 1) goto 114 <spple_state_machine+0x7A : 1e01462 >			  ## app_spp_and_le.c:164:0
 1e013f0:    38 24             	if (r2 == 0) goto 112 <spple_state_machine+0x7A : 1e01462 >			  ## app_spp_and_le.c:164:0
 1e013f2:    10 44             	r0 = [r2 + 4]			  ## app_spp_and_le.c:172:21
 1e013f4:    10 e0 35 10       	if (r0 != 1) goto 106 <spple_state_machine+0x7A : 1e01462 >
 1e013f8:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >
 1e013fe:    00 f9 40 50       	r0 = b[r5 + 64] (u)
 1e01402:    2d 30             	if (r0 != 0) goto 90 <spple_state_machine+0x76 : 1e0145e >
 1e01404:    10 70             	r0 = 1
 1e01406:    10 f9 40 50       	b[r5 + 64] = r0
 1e0140a:    80 f3 17 b6       	call 93230 <clk_set : 1e1803c >			  ## app_spp_and_le.c:123:9
 1e0140e:    c0 ff ac 30 00 00 	r0 = 12460 <hdl.15 : 30ac >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e01414:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e01416:    80 f3 bf 6b       	call 55166 <bt_pll_para : 1e0eb98 >			  ## app_spp_and_le.c:128:9
 1e0141a:    24 a0             	r4 = sp + 2
 1e0141c:    40 08             	r0 = r4			  ## app_comm_ble.c:76:9
 1e0141e:    80 f3 a4 2a       	call 21832 <lib_make_ble_address : 1e0696a >			  ## app_comm_ble.c:76:9
 1e01422:    40 08             	r0 = r4			  ## app_comm_ble.c:79:5
 1e01424:    80 f3 07 a1       	call 82446 <le_controller_set_mac : 1e15636 >			  ## app_comm_ble.c:79:5
 1e01428:    c4 ff 40 08 00 00 	r4 = 2112 <trans_gatt_control_block : 840 >			  ## le_gatt_common.c:894:50
 1e0142e:    bc 4a             	[r5 + 44] = r4			  ## le_gatt_common.c:889:24
 1e01430:    60 9b             	r0 = r5 + 22			  ## le_gatt_common.c:892:9
 1e01432:    01 70             	r1 = 0			  ## le_gatt_common.c:892:9
 1e01434:    22 70             	r2 = 2			  ## le_gatt_common.c:892:9
 1e01436:    98 f3 5b 2d       	call 3168950 <memset : 106ef0 >			  ## le_gatt_common.c:892:9
 1e0143a:    10 9a             	r0 = r5 + 1			  ## le_gatt_common.c:893:9
 1e0143c:    01 70             	r1 = 0			  ## le_gatt_common.c:893:9
 1e0143e:    12 70             	r2 = 1			  ## le_gatt_common.c:893:9
 1e01440:    98 f3 56 2d       	call 3168940 <memset : 106ef0 >			  ## le_gatt_common.c:893:9
 1e01444:    24 48             	r4 = [r4 + 8]			  ## le_gatt_common.c:894:50
 1e01446:    c5 ff 70 22 00 00 	r5 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:952:5
 1e0144c:    50 fc 48 00       	r0 = r5 + 72			  ## le_gatt_server.c:952:5
 1e01450:    01 70             	r1 = 0			  ## le_gatt_server.c:952:5
 1e01452:    c2 72             	r2 = 44			  ## le_gatt_server.c:952:5
 1e01454:    98 f3 4c 2d       	call 3168920 <memset : 106ef0 >			  ## le_gatt_server.c:952:5
 1e01458:    2c 4b             	[r5 + 72] = r4			  ## le_gatt_server.c:953:27
 1e0145a:    80 f3 a5 2a       	call 21834 <btstack_init : 1e069a8 >			  ## app_spp_and_le.c:142:9
 1e0145e:    80 f3 32 54       	call 43108 <sys_key_event_enable : 1e0bcc6 >			  ## app_spp_and_le.c:150:5
 1e01462:    00 70             	r0 = 0			  ## app_spp_and_le.c:189:5
 1e01464:    04 0a             	sp += 8			  ## app_spp_and_le.c:189:5
 1e01466:    55 01             	{pc, r5, r4} = [sp++]			  ## app_spp_and_le.c:189:5


trans_disconnect:
 1e01468:    34 00             	[--sp] = rets			  ## ble_trans.c:914:0
 1e0146a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_trans.c:916:9
 1e01470:    00 51             	r0 = h[r0 + 32] (u)			  ## ble_trans.c:916:9
 1e01472:    01 20             	if (r0 == 0) goto 2 <trans_disconnect+0xE : 1e01476 >			  ## ble_trans.c:916:9
 1e01474:    ce 14             	call -1636 <ble_comm_disconnect : 1e00e12 >			  ## ble_trans.c:917:9
 1e01476:    30 00             	pc = [sp++]			  ## ble_trans.c:919:1


make_eir_packet_val.753:
 1e01478:    76 01             	[--sp] = {rets, r6-r4}			  ## le_common_define.h:137:0
 1e0147a:    fe 0b             	sp += -4			  ## le_common_define.h:137:0
 1e0147c:    54 02             	r4 = [sp+20]			  ## le_common_define.h:137:0
 1e0147e:    25 98             	r5 = r4 + 2			  ## le_common_define.h:138:48
 1e01480:    66 fb 1f 19       	r6 = 31 - r1			  ## le_common_define.h:138:28
 1e01484:    0b 02             	[sp] = r3			  ## le_common_define.h:138:28
 1e01486:    56 f2 03 a0       	ifs (r6 >= r5) goto 6 <make_eir_packet_val.753+0x18 : 1e01490 >			  ## le_common_define.h:138:9
 1e0148a:    00 b3             	r0 = r1 + r4			  ## le_common_define.h:139:23
 1e0148c:    25 90             	r5 = r0 + 2			  ## le_common_define.h:139:34
 1e0148e:    08 18             	goto 16 <make_eir_packet_val.753+0x28 : 1e014a0 >			  ## le_common_define.h:139:34
 1e01490:    11 98             	r1 = r4 + 1			  ## le_common_define.h:142:23
 1e01492:    09 60             	b[r0 + 0] = r1			  ## le_common_define.h:142:12
 1e01494:    1a 60             	b[r0 + 1] = r2			  ## le_common_define.h:143:12
 1e01496:    20 80             	r0 += 2			  ## le_common_define.h:144:16
 1e01498:    01 a0             	r1 = sp + 0
 1e0149a:    42 08             	r2 = r4			  ## le_common_define.h:144:5
 1e0149c:    98 f3 22 2d       	call 3168836 <memcpy : 106ee4 >			  ## le_common_define.h:144:5
 1e014a0:    40 05             	r0 = r5.b0 (u)			  ## le_common_define.h:146:1
 1e014a2:    02 0a             	sp += 4			  ## le_common_define.h:146:1
 1e014a4:    56 01             	{pc, r6-r4} = [sp++]			  ## le_common_define.h:146:1


make_eir_packet_data.754:
 1e014a6:    74 01             	[--sp] = {rets, r4}			  ## le_common_define.h:124:0
 1e014a8:    24 94             	r4 = r2 + 2			  ## le_common_define.h:125:48
 1e014aa:    63 fb 1f 19       	r3 = 31 - r1			  ## le_common_define.h:125:28
 1e014ae:    43 f2 03 a0       	ifs (r3 >= r4) goto 6 <make_eir_packet_data.754+0x12 : 1e014b8 >			  ## le_common_define.h:125:9
 1e014b2:    80 b2             	r0 = r1 + r2			  ## le_common_define.h:126:23
 1e014b4:    24 90             	r4 = r0 + 2			  ## le_common_define.h:126:34
 1e014b6:    0a 18             	goto 20 <make_eir_packet_data.754+0x26 : 1e014cc >			  ## le_common_define.h:126:34
 1e014b8:    11 94             	r1 = r2 + 1			  ## le_common_define.h:129:23
 1e014ba:    09 60             	b[r0 + 0] = r1			  ## le_common_define.h:129:12
 1e014bc:    91 70             	r1 = 9			  ## le_common_define.h:130:12
 1e014be:    19 60             	b[r0 + 1] = r1			  ## le_common_define.h:130:12
 1e014c0:    20 80             	r0 += 2			  ## le_common_define.h:131:16
 1e014c2:    c1 ff c6 08 00 00 	r1 = 2246 <ble_device_name : 8c6 >			  ## le_common_define.h:131:5
 1e014c8:    98 f3 0c 2d       	call 3168792 <memcpy : 106ee4 >			  ## le_common_define.h:131:5
 1e014cc:    00 05             	r0 = r4.b0 (u)			  ## le_common_define.h:133:1
 1e014ce:    54 01             	{pc, r4} = [sp++]			  ## le_common_define.h:133:1


spple_event_handler:
 1e014d0:    7b 01             	[--sp] = {rets, r11-r4}			  ## app_spp_and_le.c:366:0
 1e014d2:    f8 0b             	sp += -16			  ## app_spp_and_le.c:366:0
 1e014d4:    00 52             	r0 = h[r1 + 0] (u)			  ## app_spp_and_le.c:367:20
 1e014d6:    c7 ff 70 20 00 00 	r7 = 8304 <gatt_client_conn_handle : 2070 >
 1e014dc:    00 e1 32 00       	if (r0 == 16) goto 100 <spple_event_handler+0x74 : 1e01544 >			  ## app_spp_and_le.c:367:5
 1e014e0:    10 e0 de 10       	if (r0 != 1) goto 444 <spple_event_handler+0x1D0 : 1e016a0 >
 1e014e4:    10 42             	r0 = [r1 + 4]			  ## app_spp_and_le.c:260:16
 1e014e6:    c2 ff 00 59 45 4b 	r2 = 1262835968 <uECC_vli_cmp_unsafe+0x134E904 : 1455900 >			  ## app_spp_and_le.c:260:20
 1e014ec:    20 f2 d8 10       	if (r0 != r2) goto 432 <spple_event_handler+0x1D0 : 1e016a0 >			  ## app_spp_and_le.c:260:20
 1e014f0:    a2 62             	r2 = b[r1 + 10] (u)			  ## app_spp_and_le.c:261:35
 1e014f2:    c0 62             	r0 = b[r1 + 12] (u)			  ## app_spp_and_le.c:262:34
 1e014f4:    97 24             	if (r2 == 0) goto 302 <spple_event_handler+0x154 : 1e01624 >			  ## app_spp_and_le.c:329:13
 1e014f6:    52 e0 d3 10       	if (r2 != 5) goto 422 <spple_event_handler+0x1D0 : 1e016a0 >
 1e014fa:    30 e0 01 00       	if (r0 == 3) goto 2 <spple_event_handler+0x30 : 1e01500 >
 1e014fe:    d0 30             	if (r0 != 0) goto 416 <spple_event_handler+0x1D0 : 1e016a0 >
 1e01500:    10 70             	r0 = 1
 1e01502:    10 f9 3c 70       	b[r7 + 60] = r0
 1e01506:    00 70             	r0 = 0			  ## app_comm_ble.c:126:5
 1e01508:    04 70             	r4 = 0			  ## app_comm_ble.c:126:5
 1e0150a:    ba 14             	call -1676 <ble_module_enable : 1e00e80 >			  ## app_comm_ble.c:126:5
 1e0150c:    00 70             	r0 = 0			  ## ble_trans.c:1052:5
 1e0150e:    b8 14             	call -1680 <ble_module_enable : 1e00e80 >			  ## ble_trans.c:1052:5
 1e01510:    00 70             	r0 = 0			  ## le_gatt_server.c:970:5
 1e01512:    8f 14             	call -1762 <ble_gatt_server_module_enable : 1e00e32 >			  ## le_gatt_server.c:970:5
 1e01514:    c0 4e             	r0 = [r7 + 48]			  ## le_gatt_common.c:929:9
 1e01516:    0b 20             	if (r0 == 0) goto 22 <spple_event_handler+0x5E : 1e0152e >			  ## le_gatt_common.c:929:9
 1e01518:    80 71             	r0 = 24			  ## le_gatt_common.c:930:9
 1e0151a:    31 70             	r1 = 3			  ## le_gatt_common.c:930:9
 1e0151c:    02 70             	r2 = 0			  ## le_gatt_common.c:930:9
 1e0151e:    03 70             	r3 = 0			  ## le_gatt_common.c:930:9
 1e01520:    0c 02             	[sp] = r4			  ## le_gatt_common.c:930:9
 1e01522:    80 f3 a5 28       	call 20810 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_common.c:930:9
 1e01526:    c0 4e             	r0 = [r7 + 48]			  ## le_gatt_common.c:931:14
 1e01528:    80 f3 ad 48       	call 37210 <free : 1e0a686 >			  ## le_gatt_common.c:931:9
 1e0152c:    cc 4e             	[r7 + 48] = r4			  ## le_gatt_common.c:932:25
 1e0152e:    80 f3 b8 2a       	call 21872 <btstack_exit : 1e06aa2 >			  ## app_comm_ble.c:131:5
 1e01532:    c1 ff a4 2c e0 01 	r1 = 31468708 <power_set_soft_poweroff : 1e02ca4 >			  ## app_spp_and_le.c:72:5
 1e01538:    00 70             	r0 = 0			  ## app_spp_and_le.c:72:5
 1e0153a:    02 fb 2c 01       	r2 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## app_spp_and_le.c:72:5
 1e0153e:    80 f3 3c 51       	call 41592 <sys_timeout_add : 1e0b7ba >			  ## app_spp_and_le.c:72:5
 1e01542:    ae 18             	goto 348 <spple_event_handler+0x1D0 : 1e016a0 >			  ## app_spp_and_le.c:72:5
 1e01544:    10 42             	r0 = [r1 + 4]			  ## app_spp_and_le.c:374:25
 1e01546:    c2 ff 00 49 43 48 	r2 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## app_spp_and_le.c:374:13
 1e0154c:    20 f2 5e 00       	if (r0 == r2) goto 188 <spple_event_handler+0x13C : 1e0160c >			  ## app_spp_and_le.c:374:13
 1e01550:    c2 ff 00 4e 4f 43 	r2 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e01556:    20 f2 a3 10       	if (r0 != r2) goto 326 <spple_event_handler+0x1D0 : 1e016a0 >
 1e0155a:    80 62             	r0 = b[r1 + 8] (u)			  ## app_comm_ble.c:150:17
 1e0155c:    30 e0 a0 10       	if (r0 != 3) goto 320 <spple_event_handler+0x1D0 : 1e016a0 >			  ## app_comm_ble.c:150:17
 1e01560:    65 a0             	r5 = sp + 6
 1e01562:    c1 ff e0 e0 e0 01 	r1 = 31514848 <update_target_end+0x200 : 1e0e0e0 >			  ## le_gatt_common.c:957:10
 1e01568:    a2 70             	r2 = 10			  ## le_gatt_common.c:957:10
 1e0156a:    50 08             	r0 = r5			  ## le_gatt_common.c:957:10
 1e0156c:    98 f3 ba 2c       	call 3168628 <memcpy : 106ee4 >			  ## le_gatt_common.c:957:10
 1e01570:    50 08             	r0 = r5			  ## le_gatt_common.c:959:27
 1e01572:    98 f3 c3 2c       	call 3168646 <strlen : 106efc >			  ## le_gatt_common.c:959:27
 1e01576:    21 fd fe 09       	r1 = r0 & 254			  ## le_gatt_common.c:960:9
 1e0157a:    d2 71             	r2 = 29			  ## le_gatt_common.c:960:9
 1e0157c:    d3 71             	r3 = 29			  ## le_gatt_common.c:960:9
 1e0157e:    d1 e1 01 80       	if (r1 > 29) goto 2 <spple_event_handler+0xB4 : 1e01584 >			  ## le_gatt_common.c:960:9
 1e01582:    03 08             	r3 = r0			  ## le_gatt_common.c:960:9
 1e01584:    c4 ff b0 08 00 00 	r4 = 2224 <ble_device_name_len : 8b0 >
 1e0158a:    00 04             	r0 = r0.b0 (u)			  ## le_gatt_common.c:964:37
 1e0158c:    0b 68             	b[r4 + 0] = r3			  ## le_gatt_common.c:959:25
 1e0158e:    d1 e1 01 80       	if (r1 > 29) goto 2 <spple_event_handler+0xC4 : 1e01594 >			  ## le_gatt_common.c:959:25
 1e01592:    02 08             	r2 = r0			  ## le_gatt_common.c:964:37
 1e01594:    69 99             	r9 = r4 + 22			  ## le_gatt_common.c:964:5
 1e01596:    90 08             	r0 = r9			  ## le_gatt_common.c:964:5
 1e01598:    51 08             	r1 = r5			  ## le_gatt_common.c:964:5
 1e0159a:    98 f3 a3 2c       	call 3168582 <memcpy : 106ee4 >			  ## le_gatt_common.c:964:5
 1e0159e:    00 68             	r0 = b[r4 + 0] (u)			  ## le_gatt_common.c:966:5
 1e015a0:    01 70             	r1 = 0			  ## le_gatt_common.c:966:5
 1e015a2:    11 fa 00 09       	b[r0+r9] = r1			  ## le_gatt_common.c:966:42
 1e015a6:    09 5f             	h[r7 + 32] = r1			  ## ble_trans.c:1024:22
 1e015a8:    c8 ff 70 22 00 00 	r8 = 8816 <trans_server_adv_config : 2270 >			  ## ble_trans.c:1024:22
 1e015ae:    c0 ff 98 e1 e0 01 	r0 = 31515032 <trans_profile_data : 1e0e198 >			  ## le_gatt_server.c:910:26
 1e015b4:    10 f6 50 80       	[r8 + 80] = r0			  ## le_gatt_server.c:910:26
 1e015b8:    00 74             	r0 = 64			  ## le_gatt_server.c:911:30
 1e015ba:    10 f7 54 80       	h[r8 + 84] = r0			  ## le_gatt_server.c:911:30
 1e015be:    80 f3 68 43       	call 34512 <att_server_change_profile : 1e09c92 >			  ## le_gatt_server.c:912:5
 1e015c2:    14 70             	r4 = 1			  ## le_gatt_server.c:912:5
 1e015c4:    7b fc b4 01       	r11 = r7 + 436			  ## ble_trans.c:785:15
 1e015c8:    01 70             	r1 = 0			  ## ble_trans.c:785:15
 1e015ca:    12 70             	r2 = 1			  ## ble_trans.c:785:15
 1e015cc:    63 70             	r3 = 6			  ## ble_trans.c:785:15
 1e015ce:    0c 02             	[sp] = r4			  ## ble_trans.c:785:15
 1e015d0:    b0 08             	r0 = r11			  ## ble_trans.c:785:15
 1e015d2:    52 17             	call -348 <make_eir_packet_val.753 : 1e01478 >			  ## ble_trans.c:785:15
 1e015d4:    06 08             	r6 = r0			  ## ble_trans.c:785:15
 1e015d6:    21 70             	r1 = 2			  ## ble_trans.c:788:15
 1e015d8:    80 fb b0 06       	r0 = r6 + r11			  ## ble_trans.c:788:36
 1e015dc:    c3 ff 30 af 00 00 	r3 = 44848 <report_heap_size+0x5D8 : af30 >			  ## ble_trans.c:788:15
 1e015e2:    32 70             	r2 = 3			  ## ble_trans.c:788:15
 1e015e4:    09 02             	[sp] = r1			  ## ble_trans.c:788:15
 1e015e6:    61 08             	r1 = r6			  ## ble_trans.c:788:15
 1e015e8:    47 17             	call -370 <make_eir_packet_val.753 : 1e01478 >			  ## ble_trans.c:788:15
 1e015ea:    06 09             	r6 += r0			  ## ble_trans.c:788:12
 1e015ec:    60 fb 1d 69       	r0 = 29 - r6			  ## ble_trans.c:792:39
 1e015f0:    05 04             	r5 = r0.b0 (u)			  ## ble_trans.c:793:20
 1e015f2:    90 08             	r0 = r9			  ## ble_trans.c:791:19
 1e015f4:    98 f3 82 2c       	call 3168516 <strlen : 106efc >			  ## ble_trans.c:791:19
 1e015f8:    02 04             	r2 = r0.b0 (u)			  ## ble_trans.c:793:9
 1e015fa:    52 f2 16 20       	if (r2 >= r5) goto 44 <spple_event_handler+0x15A : 1e0162a >
 1e015fe:    81 05             	r1 = r6.b0 (u)			  ## ble_trans.c:792:42
 1e01600:    c0 b3             	r0 = r1 + r7			  ## ble_trans.c:792:42
 1e01602:    00 fc b4 01       	r0 = r0 + 436			  ## ble_trans.c:794:41
 1e01606:    4f 17             	call -354 <make_eir_packet_data.754 : 1e014a6 >			  ## ble_trans.c:794:19
 1e01608:    06 09             	r6 += r0			  ## ble_trans.c:794:16
 1e0160a:    10 18             	goto 32 <spple_event_handler+0x15C : 1e0162c >			  ## ble_trans.c:794:16
 1e0160c:    80 62             	r0 = b[r1 + 8] (u)			  ## app_comm_ble.c:184:13
 1e0160e:    01 ff fe 00 46 00 	if (r0 != 254) goto 140 <spple_event_handler+0x1D0 : 1e016a0 >			  ## app_comm_ble.c:184:13
 1e01614:    40 42             	r0 = [r1 + 16]			  ## app_comm_ble.c:186:21
 1e01616:    44 30             	if (r0 != 0) goto 136 <spple_event_handler+0x1D0 : 1e016a0 >			  ## app_comm_ble.c:186:21
 1e01618:    00 70             	r0 = 0			  ## app_comm_ble.c:188:13
 1e0161a:    80 f3 92 2a       	call 21796 <set_remote_test_flag : 1e06b42 >			  ## app_comm_ble.c:188:13
 1e0161e:    90 f3 6f 0e       	call 2104542 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e01622:    3e 18             	goto 124 <spple_event_handler+0x1D0 : 1e016a0 >			  ## cpu.h:148:5
 1e01624:    3d 30             	if (r0 != 0) goto 122 <spple_event_handler+0x1D0 : 1e016a0 >
 1e01626:    20 17             	call -448 <trans_disconnect : 1e01468 >			  ## app_spp_and_le.c:347:13
 1e01628:    3b 18             	goto 118 <spple_event_handler+0x1D0 : 1e016a0 >
 1e0162a:    04 70             	r4 = 0
 1e0162c:    4c 6e             	b[r7 + 4] = r4
 1e0162e:    80 05             	r0 = r6.b0 (u)			  ## ble_trans.c:800:16
 1e01630:    fa 07             	r10 = -1			  ## ble_trans.c:800:16
 1e01632:    f0 e1 05 80       	if (r0 > 31) goto 10 <spple_event_handler+0x170 : 1e01640 >			  ## ble_trans.c:800:16
 1e01636:    16 f9 08 80       	b[r8 + 8] = r6			  ## ble_trans.c:806:42
 1e0163a:    1b f6 00 80       	[r8 + 0] = r11			  ## ble_trans.c:807:38
 1e0163e:    0a 70             	r10 = 0			  ## ble_trans.c:807:38
 1e01640:    00 70             	r0 = 0
 1e01642:    11 38             	if (r4 != 0) goto 34 <spple_event_handler+0x196 : 1e01666 >
 1e01644:    90 08             	r0 = r9			  ## ble_trans.c:834:23
 1e01646:    98 f3 59 2c       	call 3168434 <strlen : 106efc >			  ## ble_trans.c:834:23
 1e0164a:    22 fd fe 09       	r2 = r0 & 254			  ## ble_trans.c:836:13
 1e0164e:    d1 71             	r1 = 29			  ## ble_trans.c:836:13
 1e01650:    d2 e1 01 80       	if (r2 > 29) goto 2 <spple_event_handler+0x186 : 1e01656 >
 1e01654:    01 08             	r1 = r0			  ## ble_trans.c:836:13
 1e01656:    42 04             	r2 = r1.b0 (u)			  ## ble_trans.c:839:19
 1e01658:    70 fc d3 01       	r0 = r7 + 467			  ## ble_trans.c:839:19
 1e0165c:    01 70             	r1 = 0			  ## ble_trans.c:839:19
 1e0165e:    23 17             	call -442 <make_eir_packet_data.754 : 1e014a6 >			  ## ble_trans.c:839:19
 1e01660:    f4 07             	r4 = -1
 1e01662:    f0 e1 07 80       	if (r0 > 31) goto 14 <spple_event_handler+0x1A4 : 1e01674 >
 1e01666:    10 f9 09 80       	b[r8 + 9] = r0			  ## ble_trans.c:849:42
 1e0166a:    70 fc d3 01       	r0 = r7 + 467			  ## ble_trans.c:850:38
 1e0166e:    10 f6 04 80       	[r8 + 4] = r0			  ## ble_trans.c:850:38
 1e01672:    04 70             	r4 = 0			  ## ble_trans.c:850:38
 1e01674:    00 fb 20 03       	r0 = 800 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x14 : 320 >			  ## ble_trans.c:871:42
 1e01678:    10 f7 0a 80       	h[r8 + 10] = r0			  ## ble_trans.c:871:42
 1e0167c:    00 fb 01 07       	r0 = 1793 <BTCTLER_COMMON_RAM_TOTAL+0x83 : 701 >			  ## ble_trans.c:873:38
 1e01680:    10 f7 0c 80       	h[r8 + 12] = r0			  ## ble_trans.c:873:38
 1e01684:    80 fc 0e 00       	r0 = r8 + 14			  ## ble_trans.c:875:5
 1e01688:    01 70             	r1 = 0			  ## ble_trans.c:875:5
 1e0168a:    72 70             	r2 = 7			  ## ble_trans.c:875:5
 1e0168c:    98 f3 30 2c       	call 3168352 <memset : 106ef0 >			  ## ble_trans.c:875:5
 1e01690:    e0 fd a0 04       	r0 = r4 | r10			  ## ble_trans.c:869:9
 1e01694:    02 30             	if (r0 != 0) goto 4 <spple_event_handler+0x1CA : 1e0169a >
 1e01696:    18 f6 4c 80       	[r8 + 76] = r8			  ## le_gatt_server.c:894:24
 1e0169a:    10 70             	r0 = 1			  ## ble_trans.c:1026:5
 1e0169c:    bf f3 f0 fb       	call -2080 <ble_module_enable : 1e00e80 >			  ## ble_trans.c:1026:5
 1e016a0:    00 70             	r0 = 0			  ## app_spp_and_le.c:398:1
 1e016a2:    08 0a             	sp += 16			  ## app_spp_and_le.c:398:1
 1e016a4:    5b 01             	{pc, r11-r4} = [sp++]			  ## app_spp_and_le.c:398:1


pwm_idle_query:
 1e016a6:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_trans.c:750:0
 1e016ac:    00 f9 44 00       	r0 = b[r0 + 68] (u)			  ## ble_trans.c:750:0
 1e016b0:    11 70             	r1 = 1			  ## ble_trans.c:750:0
 1e016b2:    e3 fd 00 01       	r0 = r1 & ~r0			  ## ble_trans.c:757:1
 1e016b6:    20 00             	rts			  ## ble_trans.c:757:1


updateRunTime:
 1e016b8:    34 00             	[--sp] = rets			  ## ble_trans.c:386:0
 1e016ba:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_trans.c:386:0
 1e016c0:    d1 50             	r1 = h[r0 + 26] (u)			  ## ble_trans.c:387:15
 1e016c2:    11 80             	r1 += 1			  ## ble_trans.c:387:15
 1e016c4:    d9 50             	h[r0 + 26] = r1			  ## ble_trans.c:387:15
 1e016c6:    e2 50             	r2 = h[r0 + 28] (u)			  ## ble_trans.c:388:20
 1e016c8:    61 04             	r1 = r1.l (u)			  ## ble_trans.c:387:15
 1e016ca:    21 f2 11 30       	if (r1 < r2) goto 34 <updateRunTime+0x38 : 1e016f0 >			  ## ble_trans.c:387:15
 1e016ce:    c1 ff 00 50 1e 00 	r1 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >
 1e016d4:    04 f4 02 1a       	[r1 + 16] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:592:15
 1e016d8:    52 42             	r2 = [r1 + 20]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e016da:    f2 b4             	r2 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e016dc:    5a 42             	[r1 + 20] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e016de:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:313:16
 1e016e0:    f2 b4             	r2 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:313:16
 1e016e2:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:313:16
 1e016e4:    01 70             	r1 = 0			  ## ble_trans.c:391:19
 1e016e6:    d9 50             	h[r0 + 26] = r1			  ## ble_trans.c:391:19
 1e016e8:    e9 50             	h[r0 + 28] = r1			  ## ble_trans.c:391:29
 1e016ea:    f0 50             	r0 = h[r0 + 30] (u)			  ## ble_trans.c:392:9
 1e016ec:    80 f3 6c 50       	call 41176 <sys_timer_del : 1e0b7c8 >			  ## ble_trans.c:392:9
 1e016f0:    30 00             	pc = [sp++]			  ## ble_trans.c:394:1


endRelay:
 1e016f2:    c0 ff 00 18 1e 00 	r0 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >			  ## ble_trans.c:518:0
 1e016f8:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e016fa:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e016fc:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e016fe:    01 fc 00 3c       	r1 = r0 + 15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01702:    00 f4 50 1a       	[r1 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01706:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01708:    f2 b1             	r2 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e0170a:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e0170c:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0170e:    f2 b1             	r2 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01710:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01712:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01714:    f2 b0             	r2 &= 4294967293			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01716:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01718:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0171a:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0171c:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0171e:    00 f4 50 1a       	[r1 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01722:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01724:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01726:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01728:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0172a:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0172c:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0172e:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01730:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01732:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01734:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_trans.c:521:21
 1e0173a:    01 70             	r1 = 0			  ## ble_trans.c:521:21
 1e0173c:    11 f9 44 00       	b[r0 + 68] = r1			  ## ble_trans.c:521:21
 1e01740:    f0 50             	r0 = h[r0 + 30] (u)			  ## ble_trans.c:521:5
 1e01742:    c0 f3 82 4f       	goto 40708 <sys_timeout_del : 1e0b64a >			  ## ble_trans.c:521:5


ble_gatt_server_characteristic_ccc_get:
 1e01746:    c0 f3 1e 26       	goto 19516 <multi_att_get_ccc_config : 1e06386 >			  ## le_gatt_server.c:860:0


trans_att_read_callback:
 1e0174a:    78 01             	[--sp] = {rets, r8-r4}			  ## ble_trans.c:416:0
 1e0174c:    34 08             	r4 = r3			  ## ble_trans.c:416:0
 1e0174e:    26 08             	r6 = r2			  ## ble_trans.c:416:0
 1e01750:    91 e4 26 00       	if (r1 == 73) goto 76 <trans_att_read_callback+0x56 : 1e017a0 >			  ## ble_trans.c:416:0
 1e01754:    91 e0 24 00       	if (r1 == 9) goto 72 <trans_att_read_callback+0x56 : 1e017a0 >			  ## ble_trans.c:416:0
 1e01758:    e1 e0 22 00       	if (r1 == 14) goto 68 <trans_att_read_callback+0x56 : 1e017a0 >			  ## ble_trans.c:416:0
 1e0175c:    11 e1 20 00       	if (r1 == 17) goto 64 <trans_att_read_callback+0x56 : 1e017a0 >			  ## ble_trans.c:416:0
 1e01760:    67 02             	r7 = [sp+24]			  ## ble_trans.c:416:0
 1e01762:    31 e1 25 00       	if (r1 == 19) goto 74 <trans_att_read_callback+0x66 : 1e017b0 >			  ## ble_trans.c:416:0
 1e01766:    51 e4 1b 00       	if (r1 == 69) goto 54 <trans_att_read_callback+0x56 : 1e017a0 >			  ## ble_trans.c:416:0
 1e0176a:    05 70             	r5 = 0			  ## ble_trans.c:416:0
 1e0176c:    31 e0 1e 10       	if (r1 != 3) goto 60 <trans_att_read_callback+0x62 : 1e017ac >			  ## ble_trans.c:416:0
 1e01770:    c8 ff b0 08 00 00 	r8 = 2224 <ble_device_name_len : 8b0 >			  ## ble_trans.c:416:0
 1e01776:    80 fc 16 00       	r0 = r8 + 22			  ## ble_trans.c:425:25
 1e0177a:    98 f3 bf 2b       	call 3168126 <strlen : 106efc >			  ## ble_trans.c:425:25
 1e0177e:    05 08             	r5 = r0			  ## ble_trans.c:425:25
 1e01780:    60 05             	r0 = r5.l (u)			  ## ble_trans.c:427:24
 1e01782:    06 f2 13 20       	if (r6 >= r0) goto 38 <trans_att_read_callback+0x62 : 1e017ac >			  ## ble_trans.c:427:24
 1e01786:    12 28             	if (r4 == 0) goto 36 <trans_att_read_callback+0x62 : 1e017ac >
 1e01788:    81 bf             	r1 = r7 + r6			  ## ble_trans.c:427:50
 1e0178a:    01 f2 0f 80       	if (r1 > r0) goto 30 <trans_att_read_callback+0x62 : 1e017ac >			  ## ble_trans.c:427:50
 1e0178e:    80 fb 80 06       	r0 = r6 + r8			  ## ble_trans.c:432:29
 1e01792:    61 91             	r1 = r0 + 22			  ## ble_trans.c:432:29
 1e01794:    40 08             	r0 = r4			  ## ble_trans.c:432:13
 1e01796:    72 08             	r2 = r7			  ## ble_trans.c:432:13
 1e01798:    98 f3 a4 2b       	call 3168072 <memcpy : 106ee4 >			  ## ble_trans.c:432:13
 1e0179c:    75 08             	r5 = r7			  ## ble_trans.c:432:13
 1e0179e:    06 18             	goto 12 <trans_att_read_callback+0x62 : 1e017ac >			  ## ble_trans.c:432:13
 1e017a0:    25 70             	r5 = 2
 1e017a2:    04 28             	if (r4 == 0) goto 8 <trans_att_read_callback+0x62 : 1e017ac >
 1e017a4:    d0 17             	call -96 <ble_gatt_server_characteristic_ccc_get : 1e01746 >			  ## ble_trans.c:476:25
 1e017a6:    08 68             	b[r4 + 0] = r0			  ## ble_trans.c:476:23
 1e017a8:    00 70             	r0 = 0			  ## ble_trans.c:477:23
 1e017aa:    18 68             	b[r4 + 1] = r0			  ## ble_trans.c:477:23
 1e017ac:    60 05             	r0 = r5.l (u)			  ## ble_trans.c:488:1
 1e017ae:    58 01             	{pc, r8-r4} = [sp++]			  ## ble_trans.c:488:1
 1e017b0:    45 70             	r5 = 4
 1e017b2:    36 e0 fb 8f       	if (r6 > 3) goto -10 <trans_att_read_callback+0x62 : 1e017ac >
 1e017b6:    fa 29             	if (r4 == 0) goto -12 <trans_att_read_callback+0x62 : 1e017ac >
 1e017b8:    80 bf             	r0 = r7 + r6			  ## ble_trans.c:441:50
 1e017ba:    40 e0 f7 8f       	if (r0 > 4) goto -18 <trans_att_read_callback+0x62 : 1e017ac >
 1e017be:    80 70             	r0 = 8			  ## ble_trans.c:461:36
 1e017c0:    bf f3 6f f5       	call -5410 <adc_sample : 1e002a2 >			  ## ble_trans.c:461:36
 1e017c4:    01 08             	r1 = r0			  ## ble_trans.c:461:36
 1e017c6:    40 08             	r0 = r4			  ## ble_trans.c:461:13
 1e017c8:    12 08             	r2 = r1			  ## ble_trans.c:461:13
 1e017ca:    80 f3 34 56       	call 44136 <sprintf : 1e0c436 >			  ## ble_trans.c:461:13
 1e017ce:    40 08             	r0 = r4			  ## ble_trans.c:463:29
 1e017d0:    98 f3 94 2b       	call 3168040 <strlen : 106efc >			  ## ble_trans.c:463:29
 1e017d4:    05 08             	r5 = r0			  ## ble_trans.c:463:29
 1e017d6:    ea 1f             	goto -44 <trans_att_read_callback+0x62 : 1e017ac >			  ## ble_trans.c:463:29


trans_send_connetion_updata_deal:
 1e017d8:    74 01             	[--sp] = {rets, r4}			  ## ble_trans.c:251:0
 1e017da:    12 70             	r2 = 1			  ## le_gatt_server.c:797:10
 1e017dc:    01 30             	if (r0 != 0) goto 2 <trans_send_connetion_updata_deal+0x8 : 1e017e0 >			  ## le_gatt_server.c:797:10
 1e017de:    02 70             	r2 = 0			  ## le_gatt_server.c:797:10
 1e017e0:    c1 ff 70 22 00 00 	r1 = 8816 <trans_server_adv_config : 2270 >
 1e017e6:    03 f7 5e 10       	r3 = h[r1 + 94] (u)			  ## le_gatt_server.c:801:17
 1e017ea:    16 36             	if (r3 != 0) goto 44 <trans_send_connetion_updata_deal+0x40 : 1e01818 >			  ## le_gatt_server.c:801:17
 1e017ec:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >
 1e017f2:    03 f9 48 40       	r3 = b[r4 + 72] (u)
 1e017f6:    e3 fd 30 22       	r2 = r2 & ~r3			  ## ble_trans.c:252:9
 1e017fa:    0e 24             	if (r2 == 0) goto 28 <trans_send_connetion_updata_deal+0x40 : 1e01818 >			  ## ble_trans.c:252:9
 1e017fc:    10 f7 5e 10       	h[r1 + 94] = r0			  ## le_gatt_server.c:811:37
 1e01800:    c0 ff e4 e1 e0 01 	r0 = 31515108 <trans_connection_param_table : 1e0e1e4 >			  ## le_gatt_server.c:812:43
 1e01806:    68 43             	[r1 + 88] = r0			  ## le_gatt_server.c:812:43
 1e01808:    00 73             	r0 = 48			  ## le_gatt_server.c:814:44
 1e0180a:    10 f9 5c 10       	b[r1 + 92] = r0			  ## le_gatt_server.c:814:44
 1e0180e:    bf f3 1c f7       	call -4552 <__gatt_server_connection_update_request_send : 1e0064a >			  ## le_gatt_server.c:815:5
 1e01812:    10 70             	r0 = 1			  ## le_gatt_server.c:815:5
 1e01814:    10 f9 48 40       	b[r4 + 72] = r0			  ## le_gatt_server.c:815:5
 1e01818:    54 01             	{pc, r4} = [sp++]			  ## ble_trans.c:257:1


ble_gatt_server_characteristic_ccc_set:
 1e0181a:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_server.c:831:0
 1e0181c:    04 08             	r4 = r0			  ## le_gatt_server.c:831:0
 1e0181e:    80 f3 b2 29       	call 21348 <multi_att_set_ccc_config : 1e06b86 >			  ## le_gatt_server.c:832:5
 1e01822:    40 08             	r0 = r4			  ## le_gatt_server.c:833:34
 1e01824:    bf f3 e9 fa       	call -2606 <ble_comm_dev_get_handle_state : 1e00dfa >			  ## le_gatt_server.c:833:34
 1e01828:    10 e2 09 00       	if (r0 == 33) goto 18 <ble_gatt_server_characteristic_ccc_set+0x24 : 1e0183e >			  ## le_gatt_server.c:833:34
 1e0182c:    11 72             	r1 = 33			  ## le_gatt_server.c:834:9
 1e0182e:    40 08             	r0 = r4			  ## le_gatt_server.c:834:9
 1e01830:    bf f3 00 f7       	call -4608 <ble_comm_dev_set_handle_state : 1e00634 >			  ## le_gatt_server.c:834:9
 1e01834:    11 72             	r1 = 33			  ## le_gatt_server.c:835:9
 1e01836:    12 70             	r2 = 1			  ## le_gatt_server.c:835:9
 1e01838:    40 08             	r0 = r4			  ## le_gatt_server.c:835:9
 1e0183a:    bf f3 5e f6       	call -4932 <__gatt_server_set_work_state : 1e004fa >			  ## le_gatt_server.c:835:9
 1e0183e:    54 01             	{pc, r4} = [sp++]


initUSB:
 1e01840:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_trans.c:513:0
 1e01846:    11 70             	r1 = 1			  ## ble_trans.c:513:0
 1e01848:    11 f9 44 00       	b[r0 + 68] = r1			  ## ble_trans.c:513:0
 1e0184c:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## ble_trans.c:513:0
 1e01852:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01854:    f1 b5             	r1 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01856:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01858:    00 f4 02 0a       	[r0 + 0] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0185c:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e0185e:    f1 b3             	r1 &= 4294967167			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01860:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01862:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01864:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01866:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01868:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e0186a:    71 b5             	r1 &= 4294966271			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e0186c:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e0186e:    00 f4 01 0a       	[r0 + 0] |= 256			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e01872:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01874:    71 b3             	r1 &= 4294967231			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01876:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01878:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0187a:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0187c:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0187e:    20 00             	rts			  ## ble_trans.c:517:1


set_timer_pwm_duty:
 1e01880:    22 40             	r2 = [r0 + 8]			  ## mcpwm.c:475:0
 1e01882:    51 0e             	r1 = r2 * r1			  ## mcpwm.c:476:38
 1e01884:    02 fb 10 27       	r2 = 10000 <vm_obj+0xB0 : 2710 >			  ## mcpwm.c:476:46
 1e01888:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## mcpwm.c:476:46
 1e0188c:    39 40             	[r0 + 12] = r1			  ## mcpwm.c:476:20
 1e0188e:    20 00             	rts			  ## mcpwm.c:477:1


gpio2crossbar_outreg:
 1e01890:    10 e3 0c 30       	if (r0 < 49) goto 24 <.GJTIE216_0_0_+0x4 : 1e018ac >			  ## gpio.c:1147:0
 1e01894:    01 fc cf ff       	r1 = r0 + -49			  ## gpio.c:1149:13
 1e01898:    31 e0 17 80       	if (r1 > 3) goto 46 <.GJTIE216_0_0_+0x22 : 1e018ca >			  ## gpio.c:1149:13
 1e0189c:    c0 ff 64 56 1e 00 	r0 = 1988196 <uECC_vli_cmp_unsafe+0xDE668 : 1e5664 >
 1e018a2:    a1 00             	tbb [r1]


.GJTIS216_0_0_:
 1e018a4:    12     < 18 : 0x12 >
 1e018a5:    02     < 2 : 0x2 >
 1e018a6:    15     < 21 : 0x15 >
 1e018a7:    17     < 23 : 0x17 >
 1e018a8:    40 80             	r0 += 4
 1e018aa:    20 00             	rts			  ## gpio.c:1168:1
 1e018ac:    81 d0             	r1 = r0 >> 2			  ## gpio.c:1165:18
 1e018ae:    c2 ff fc ff ff 3f 	r2 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:1162:28
 1e018b4:    51 b5             	r1 &= r2			  ## gpio.c:1162:28
 1e018b6:    c2 ff 20 e7 e0 01 	r2 = 31516448 <gpio_out_regs : 1e0e720 >			  ## gpio.c:1165:18
 1e018bc:    81 f6 00 12       	r1 = [r1+r2]			  ## gpio.c:1165:18
 1e018c0:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:1163:27
 1e018c4:    80 c0             	r0 = r0 << 2			  ## gpio.c:1167:16
 1e018c6:    10 09             	r0 += r1			  ## gpio.c:1167:16
 1e018c8:    20 00             	rts			  ## gpio.c:1168:1
 1e018ca:    00 70             	r0 = 0
 1e018cc:    20 00             	rts			  ## gpio.c:1168:1
 1e018ce:    80 80             	r0 += 8
 1e018d0:    20 00             	rts			  ## gpio.c:1168:1
 1e018d2:    c0 80             	r0 += 12
 1e018d4:    20 00             	rts			  ## gpio.c:1168:1


gpio_set_fun_output_port:
 1e018d6:    74 01             	[--sp] = {rets, r4}			  ## gpio.c:1194:0
 1e018d8:    24 08             	r4 = r2			  ## gpio.c:1194:0
 1e018da:    13 08             	r3 = r1			  ## gpio.c:1194:0
 1e018dc:    d9 17             	call -78 <gpio2crossbar_outreg : 1e01890 >			  ## gpio.c:1195:17
 1e018de:    07 20             	if (r0 == 0) goto 14 <gpio_set_fun_output_port+0x18 : 1e018ee >
 1e018e0:    11 70             	r1 = 1			  ## gpio.c:1201:9
 1e018e2:    01 38             	if (r4 != 0) goto 2 <gpio_set_fun_output_port+0x10 : 1e018e6 >			  ## gpio.c:1201:9
 1e018e4:    01 70             	r1 = 0			  ## gpio.c:1201:9
 1e018e6:    de fd 10 13       	r1 <= insert(r3, p:2, l:30)			  ## gpio.c:1207:30
 1e018ea:    91 b0             	r1 |= 2			  ## gpio.c:1207:30
 1e018ec:    09 40             	[r0 + 0] = r1			  ## gpio.c:1207:11
 1e018ee:    54 01             	{pc, r4} = [sp++]


gpio_set_die:
 1e018f0:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE219_0_0_+0xA : 1e01912 >			  ## gpio.c:804:0
 1e018f4:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:810:13
 1e018f8:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE219_0_0_+0x3A : 1e01942 >			  ## gpio.c:810:13
 1e018fc:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e01902:    a2 00             	tbb [r2]


.GJTIS219_0_0_:
 1e01904:    02     < 2 : 0x2 >
 1e01905:    20     < 32 : 0x20 >
 1e01906:    25     < 37 : 0x25 >
 1e01907:    2a     < 42 : 0x2A >
 1e01908:    02 40             	r2 = [r0 + 0]			  ## gpio.c:810:13
 1e0190a:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:810:13
 1e0190e:    0a 40             	[r0 + 0] = r2			  ## gpio.c:810:13
 1e01910:    20 00             	rts			  ## gpio.c:810:13
 1e01912:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e01914:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e0191a:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e0191c:    c3 ff 10 e7 e0 01 	r3 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e01922:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e01926:    0d 24             	if (r2 == 0) goto 26 <.GJTIE219_0_0_+0x3A : 1e01942 >
 1e01928:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:822:12
 1e0192c:    13 70             	r3 = 1			  ## gpio.c:822:12
 1e0192e:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:822:12
 1e01932:    03 22             	if (r1 == 0) goto 6 <.GJTIE219_0_0_+0x32 : 1e0193a >			  ## gpio.c:824:9
 1e01934:    31 44             	r1 = [r2 + 12]			  ## gpio.c:825:16
 1e01936:    50 b2             	r0 |= r1			  ## gpio.c:825:16
 1e01938:    03 18             	goto 6 <.GJTIE219_0_0_+0x38 : 1e01940 >
 1e0193a:    31 44             	r1 = [r2 + 12]			  ## gpio.c:827:16
 1e0193c:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:827:16
 1e01940:    38 44             	[r2 + 12] = r0
 1e01942:    20 00             	rts
 1e01944:    02 40             	r2 = [r0 + 0]			  ## gpio.c:810:13
 1e01946:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:810:13
 1e0194a:    0a 40             	[r0 + 0] = r2			  ## gpio.c:810:13
 1e0194c:    20 00             	rts			  ## gpio.c:810:13
 1e0194e:    92 40             	r2 = [r0 + 36]			  ## gpio.c:810:13
 1e01950:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## gpio.c:810:13
 1e01954:    9a 40             	[r0 + 36] = r2			  ## gpio.c:810:13
 1e01956:    20 00             	rts			  ## gpio.c:810:13
 1e01958:    92 40             	r2 = [r0 + 36]			  ## gpio.c:810:13
 1e0195a:    c1 fd 48 21       	r2 <= insert(r1, p:9, l:1)			  ## gpio.c:810:13
 1e0195e:    9a 40             	[r0 + 36] = r2			  ## gpio.c:810:13
 1e01960:    20 00             	rts			  ## gpio.c:810:13


gpio_set_pull_up:
 1e01962:    10 e3 0f 30       	if (r0 < 49) goto 30 <.GJTIE220_0_0_+0xA : 1e01984 >			  ## gpio.c:571:0
 1e01966:    02 fc cf ff       	r2 = r0 + -49			  ## gpio.c:577:13
 1e0196a:    32 e0 23 80       	if (r2 > 3) goto 70 <.GJTIE220_0_0_+0x3A : 1e019b4 >			  ## gpio.c:577:13
 1e0196e:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e01974:    a2 00             	tbb [r2]


.GJTIS220_0_0_:
 1e01976:    02     < 2 : 0x2 >
 1e01977:    20     < 32 : 0x20 >
 1e01978:    25     < 37 : 0x25 >
 1e01979:    2a     < 42 : 0x2A >
 1e0197a:    02 40             	r2 = [r0 + 0]			  ## gpio.c:577:13
 1e0197c:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:577:13
 1e01980:    0a 40             	[r0 + 0] = r2			  ## gpio.c:577:13
 1e01982:    20 00             	rts			  ## gpio.c:577:13
 1e01984:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e01986:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e0198c:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e0198e:    c3 ff 10 e7 e0 01 	r3 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e01994:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e01998:    0d 24             	if (r2 == 0) goto 26 <.GJTIE220_0_0_+0x3A : 1e019b4 >
 1e0199a:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:589:12
 1e0199e:    13 70             	r3 = 1			  ## gpio.c:589:12
 1e019a0:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:589:12
 1e019a4:    03 22             	if (r1 == 0) goto 6 <.GJTIE220_0_0_+0x32 : 1e019ac >			  ## gpio.c:591:9
 1e019a6:    41 44             	r1 = [r2 + 16]			  ## gpio.c:592:15
 1e019a8:    50 b2             	r0 |= r1			  ## gpio.c:592:15
 1e019aa:    03 18             	goto 6 <.GJTIE220_0_0_+0x38 : 1e019b2 >
 1e019ac:    41 44             	r1 = [r2 + 16]			  ## gpio.c:594:15
 1e019ae:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:594:15
 1e019b2:    48 44             	[r2 + 16] = r0
 1e019b4:    20 00             	rts
 1e019b6:    02 40             	r2 = [r0 + 0]			  ## gpio.c:577:13
 1e019b8:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:577:13
 1e019bc:    0a 40             	[r0 + 0] = r2			  ## gpio.c:577:13
 1e019be:    20 00             	rts			  ## gpio.c:577:13
 1e019c0:    92 40             	r2 = [r0 + 36]			  ## gpio.c:577:13
 1e019c2:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## gpio.c:577:13
 1e019c6:    9a 40             	[r0 + 36] = r2			  ## gpio.c:577:13
 1e019c8:    20 00             	rts			  ## gpio.c:577:13
 1e019ca:    92 40             	r2 = [r0 + 36]			  ## gpio.c:577:13
 1e019cc:    c1 fd 28 21       	r2 <= insert(r1, p:5, l:1)			  ## gpio.c:577:13
 1e019d0:    9a 40             	[r0 + 36] = r2			  ## gpio.c:577:13
 1e019d2:    20 00             	rts			  ## gpio.c:577:13


usb_set_pull_down:
 1e019d4:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:161:0
 1e019da:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_pull_down+0x1A : 1e019ee >			  ## gpio.c:162:9
 1e019de:    40 80             	r0 += 4
 1e019e0:    13 70             	r3 = 1
 1e019e2:    f8 fd 00 03       	r0 = r3 << r0
 1e019e6:    0b 22             	if (r1 == 0) goto 22 <usb_set_pull_down+0x2A : 1e019fe >			  ## gpio.c:164:13
 1e019e8:    91 44             	r1 = [r2 + 36]			  ## gpio.c:165:30
 1e019ea:    50 b2             	r0 |= r1			  ## gpio.c:165:30
 1e019ec:    0b 18             	goto 22 <usb_set_pull_down+0x30 : 1e01a04 >			  ## gpio.c:165:30
 1e019ee:    60 80             	r0 += 6
 1e019f0:    13 70             	r3 = 1
 1e019f2:    f8 fd 00 03       	r0 = r3 << r0
 1e019f6:    08 22             	if (r1 == 0) goto 16 <usb_set_pull_down+0x34 : 1e01a08 >			  ## gpio.c:171:13
 1e019f8:    01 44             	r1 = [r2 + 0]			  ## gpio.c:172:29
 1e019fa:    50 b2             	r0 |= r1			  ## gpio.c:172:29
 1e019fc:    08 18             	goto 16 <usb_set_pull_down+0x3A : 1e01a0e >			  ## gpio.c:172:29
 1e019fe:    91 44             	r1 = [r2 + 36]			  ## gpio.c:167:30
 1e01a00:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:167:30
 1e01a04:    98 44             	[r2 + 36] = r0
 1e01a06:    20 00             	rts
 1e01a08:    01 44             	r1 = [r2 + 0]			  ## gpio.c:174:29
 1e01a0a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:174:29
 1e01a0e:    08 44             	[r2 + 0] = r0
 1e01a10:    20 00             	rts


gpio_set_pull_down:
 1e01a12:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_pull_down+0x8 : 1e01a1a >			  ## gpio.c:657:0
 1e01a16:    f0 8c             	r0 += -49			  ## gpio.c:663:36
 1e01a18:    dd 1f             	goto -70 <usb_set_pull_down : 1e019d4 >			  ## gpio.c:663:13
 1e01a1a:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e01a1c:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e01a22:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e01a24:    c3 ff 10 e7 e0 01 	r3 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e01a2a:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e01a2e:    0d 24             	if (r2 == 0) goto 26 <gpio_set_pull_down+0x38 : 1e01a4a >
 1e01a30:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:675:12
 1e01a34:    13 70             	r3 = 1			  ## gpio.c:675:12
 1e01a36:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:675:12
 1e01a3a:    03 22             	if (r1 == 0) goto 6 <gpio_set_pull_down+0x30 : 1e01a42 >			  ## gpio.c:677:9
 1e01a3c:    51 44             	r1 = [r2 + 20]			  ## gpio.c:678:15
 1e01a3e:    50 b2             	r0 |= r1			  ## gpio.c:678:15
 1e01a40:    03 18             	goto 6 <gpio_set_pull_down+0x36 : 1e01a48 >
 1e01a42:    51 44             	r1 = [r2 + 20]			  ## gpio.c:680:15
 1e01a44:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:680:15
 1e01a48:    58 44             	[r2 + 20] = r0
 1e01a4a:    20 00             	rts


usb_set_direction:
 1e01a4c:    74 01             	[--sp] = {rets, r4}			  ## gpio.c:99:0
 1e01a4e:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:99:0
 1e01a54:    20 e0 0e 30       	if (r0 < 2) goto 28 <usb_set_direction+0x28 : 1e01a74 >			  ## gpio.c:100:9
 1e01a58:    03 f6 00 26       	r3 = [r2 + 1536]			  ## gpio.c:246:23
 1e01a5c:    73 b0             	r3 &= 4294967294			  ## gpio.c:246:23
 1e01a5e:    13 f6 00 26       	[r2 + 1536] = r3			  ## gpio.c:246:23
 1e01a62:    09 f4 50 2a       	[r2 + 36] |= 20480			  ## gpio.c:246:23
 1e01a66:    13 70             	r3 = 1			  ## gpio.c:246:23
 1e01a68:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:246:23
 1e01a6c:    12 22             	if (r1 == 0) goto 36 <usb_set_direction+0x46 : 1e01a92 >			  ## gpio.c:103:13
 1e01a6e:    91 44             	r1 = [r2 + 36]			  ## gpio.c:104:30
 1e01a70:    50 b2             	r0 |= r1			  ## gpio.c:104:30
 1e01a72:    12 18             	goto 36 <usb_set_direction+0x4C : 1e01a98 >			  ## gpio.c:104:30
 1e01a74:    23 fc 00 c4       	r3 = r2 + -15360
 1e01a78:    04 46             	r4 = [r3 + 0]			  ## gpio.c:236:22
 1e01a7a:    74 b0             	r4 &= 4294967294			  ## gpio.c:236:22
 1e01a7c:    0c 46             	[r3 + 0] = r4			  ## gpio.c:236:22
 1e01a7e:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## gpio.c:236:22
 1e01a82:    20 80             	r0 += 2			  ## gpio.c:236:22
 1e01a84:    13 70             	r3 = 1			  ## gpio.c:236:22
 1e01a86:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:236:22
 1e01a8a:    08 22             	if (r1 == 0) goto 16 <usb_set_direction+0x50 : 1e01a9c >			  ## gpio.c:111:13
 1e01a8c:    01 44             	r1 = [r2 + 0]			  ## gpio.c:112:29
 1e01a8e:    50 b2             	r0 |= r1			  ## gpio.c:112:29
 1e01a90:    08 18             	goto 16 <usb_set_direction+0x56 : 1e01aa2 >			  ## gpio.c:112:29
 1e01a92:    91 44             	r1 = [r2 + 36]			  ## gpio.c:106:30
 1e01a94:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:106:30
 1e01a98:    98 44             	[r2 + 36] = r0
 1e01a9a:    54 01             	{pc, r4} = [sp++]
 1e01a9c:    01 44             	r1 = [r2 + 0]			  ## gpio.c:114:29
 1e01a9e:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:114:29
 1e01aa2:    08 44             	[r2 + 0] = r0
 1e01aa4:    54 01             	{pc, r4} = [sp++]


gpio_set_direction:
 1e01aa6:    10 e3 02 30       	if (r0 < 49) goto 4 <gpio_set_direction+0x8 : 1e01aae >			  ## gpio.c:256:0
 1e01aaa:    f0 8c             	r0 += -49			  ## gpio.c:262:36
 1e01aac:    cf 1f             	goto -98 <usb_set_direction : 1e01a4c >			  ## gpio.c:262:13
 1e01aae:    82 d0             	r2 = r0 >> 2			  ## gpio.c:50:31
 1e01ab0:    c3 ff fc ff ff 3f 	r3 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e01ab6:    52 b7             	r2 &= r3			  ## gpio.c:50:46
 1e01ab8:    c3 ff 10 e7 e0 01 	r3 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e01abe:    82 f6 00 23       	r2 = [r2+r3]			  ## gpio.c:50:31
 1e01ac2:    0d 24             	if (r2 == 0) goto 26 <gpio_set_direction+0x38 : 1e01ade >
 1e01ac4:    20 fd 0f 09       	r0 = r0 & 15			  ## gpio.c:274:12
 1e01ac8:    13 70             	r3 = 1			  ## gpio.c:274:12
 1e01aca:    f8 fd 00 03       	r0 = r3 << r0			  ## gpio.c:274:12
 1e01ace:    03 22             	if (r1 == 0) goto 6 <gpio_set_direction+0x30 : 1e01ad6 >			  ## gpio.c:277:9
 1e01ad0:    21 44             	r1 = [r2 + 8]			  ## gpio.c:278:16
 1e01ad2:    50 b2             	r0 |= r1			  ## gpio.c:278:16
 1e01ad4:    03 18             	goto 6 <gpio_set_direction+0x36 : 1e01adc >
 1e01ad6:    21 44             	r1 = [r2 + 8]			  ## gpio.c:280:16
 1e01ad8:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:280:16
 1e01adc:    28 44             	[r2 + 8] = r0
 1e01ade:    20 00             	rts


timer_pwm_init:
 1e01ae0:    77 01             	[--sp] = {rets, r7-r4}			  ## mcpwm.c:436:0
 1e01ae2:    04 08             	r4 = r0			  ## mcpwm.c:436:0
 1e01ae4:    c0 ff 00 fc e1 ff 	r0 = 4293000192 <bank_code_load_addr+0x5354 : 1e1fc00 >			  ## mcpwm.c:437:5
 1e01aea:    40 09             	r0 += r4			  ## mcpwm.c:437:5
 1e01aec:    f4 fd 40 00       	r0 = r0 <> 8			  ## mcpwm.c:437:5
 1e01af0:    36 08             	r6 = r3			  ## mcpwm.c:437:5
 1e01af2:    27 08             	r7 = r2
 1e01af4:    15 08             	r5 = r1
 1e01af6:    30 e0 36 80       	if (r0 > 3) goto 108 <.GJTIE225_0_0_+0x66 : 1e01b66 >
 1e01afa:    a0 00             	tbb [r0]


.GJTIS225_0_0_:
 1e01afc:    02     < 2 : 0x2 >
 1e01afd:    04     < 4 : 0x4 >
 1e01afe:    06     < 6 : 0x6 >
 1e01aff:    08     < 8 : 0x8 >
 1e01b00:    c1 70             	r1 = 12			  ## mcpwm.c:439:9
 1e01b02:    07 18             	goto 14 <.GJTIE225_0_0_+0x12 : 1e01b12 >			  ## mcpwm.c:439:9
 1e01b04:    d1 70             	r1 = 13			  ## mcpwm.c:442:9
 1e01b06:    05 18             	goto 10 <.GJTIE225_0_0_+0x12 : 1e01b12 >			  ## mcpwm.c:442:9
 1e01b08:    e1 70             	r1 = 14			  ## mcpwm.c:445:9
 1e01b0a:    03 18             	goto 6 <.GJTIE225_0_0_+0x12 : 1e01b12 >			  ## mcpwm.c:445:9
 1e01b0c:    80 f3 75 46       	call 36074 <bit_clr_ie : 1e0a7fa >			  ## mcpwm.c:448:9
 1e01b10:    f1 70             	r1 = 15			  ## mcpwm.c:449:9
 1e01b12:    02 70             	r2 = 0
 1e01b14:    50 08             	r0 = r5
 1e01b16:    df 16             	call -578 <gpio_set_fun_output_port : 1e018d6 >
 1e01b18:    00 70             	r0 = 0
 1e01b1a:    08 48             	[r4 + 0] = r0			  ## mcpwm.c:456:20
 1e01b1c:    00 f4 18 4a       	[r4 + 0] |= 6144			  ## mcpwm.c:457:20
 1e01b20:    00 f4 10 49       	[r4 + 0] |= 16			  ## mcpwm.c:458:20
 1e01b24:    18 48             	[r4 + 4] = r0			  ## mcpwm.c:459:20
 1e01b26:    b8 c0             	r0 = r7 << 2			  ## mcpwm.c:460:33
 1e01b28:    c1 ff 00 36 6e 01 	r1 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## mcpwm.c:460:28
 1e01b2e:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## mcpwm.c:460:28
 1e01b32:    28 48             	[r4 + 8] = r0			  ## mcpwm.c:460:20
 1e01b34:    20 48             	r0 = [r4 + 8]			  ## mcpwm.c:461:34
 1e01b36:    80 0f             	r0 = r0 * r6			  ## mcpwm.c:461:38
 1e01b38:    01 fb 10 27       	r1 = 10000 <vm_obj+0xB0 : 2710 >			  ## mcpwm.c:461:46
 1e01b3c:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## mcpwm.c:461:46
 1e01b40:    38 48             	[r4 + 12] = r0			  ## mcpwm.c:461:20
 1e01b42:    00 f4 01 49       	[r4 + 0] |= 1			  ## mcpwm.c:462:20
 1e01b46:    00 f4 01 4a       	[r4 + 0] |= 256			  ## mcpwm.c:463:20
 1e01b4a:    11 70             	r1 = 1			  ## mcpwm.c:465:5
 1e01b4c:    50 08             	r0 = r5			  ## mcpwm.c:465:5
 1e01b4e:    d0 16             	call -608 <gpio_set_die : 1e018f0 >			  ## mcpwm.c:465:5
 1e01b50:    01 70             	r1 = 0			  ## mcpwm.c:466:5
 1e01b52:    50 08             	r0 = r5			  ## mcpwm.c:466:5
 1e01b54:    06 17             	call -500 <gpio_set_pull_up : 1e01962 >			  ## mcpwm.c:466:5
 1e01b56:    01 70             	r1 = 0			  ## mcpwm.c:467:5
 1e01b58:    50 08             	r0 = r5			  ## mcpwm.c:467:5
 1e01b5a:    5b 17             	call -330 <gpio_set_pull_down : 1e01a12 >			  ## mcpwm.c:467:5
 1e01b5c:    01 70             	r1 = 0			  ## mcpwm.c:468:5
 1e01b5e:    50 08             	r0 = r5			  ## mcpwm.c:468:5
 1e01b60:    a2 17             	call -188 <gpio_set_direction : 1e01aa6 >			  ## mcpwm.c:468:5
 1e01b62:    20 48             	r0 = [r4 + 8]			  ## mcpwm.c:470:50
 1e01b64:    00 48             	r0 = [r4 + 0]			  ## mcpwm.c:471:50
 1e01b66:    57 01             	{pc, r7-r4} = [sp++]			  ## mcpwm.c:472:1


ble_comm_att_check_send:
 1e01b68:    74 01             	[--sp] = {rets, r4}			  ## le_gatt_common.c:1042:0
 1e01b6a:    fe 0b             	sp += -4			  ## le_gatt_common.c:1042:0
 1e01b6c:    14 08             	r4 = r1			  ## le_gatt_common.c:1042:0
 1e01b6e:    02 08             	r2 = r0			  ## le_gatt_common.c:1042:0
 1e01b70:    00 70             	r0 = 0			  ## le_gatt_common.c:1042:0
 1e01b72:    08 02             	[sp] = r0			  ## le_gatt_common.c:796:9
 1e01b74:    03 a0             	r3 = sp + 0			  ## le_gatt_common.c:796:9
 1e01b76:    c0 71             	r0 = 28			  ## le_gatt_common.c:797:5
 1e01b78:    21 70             	r1 = 2			  ## le_gatt_common.c:797:5
 1e01b7a:    80 f3 79 25       	call 19186 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_common.c:797:5
 1e01b7e:    01 02             	r1 = [sp]			  ## le_gatt_common.c:798:12
 1e01b80:    10 70             	r0 = 1			  ## le_gatt_common.c:1046:9
 1e01b82:    41 f2 01 20       	if (r1 >= r4) goto 2 <ble_comm_att_check_send+0x20 : 1e01b88 >			  ## le_gatt_common.c:1046:9
 1e01b86:    00 70             	r0 = 0			  ## le_gatt_common.c:1046:9
 1e01b88:    02 0a             	sp += 4
 1e01b8a:    54 01             	{pc, r4} = [sp++]			  ## le_gatt_common.c:1048:1


ble_comm_att_send_data:
 1e01b8c:    75 01             	[--sp] = {rets, r5, r4}			  ## le_gatt_common.c:1062:0
 1e01b8e:    fa 0b             	sp += -12			  ## le_gatt_common.c:1062:0
 1e01b90:    15 08             	r5 = r1			  ## le_gatt_common.c:1062:0
 1e01b92:    04 08             	r4 = r0			  ## le_gatt_common.c:1062:0
 1e01b94:    0a 28             	if (r4 == 0) goto 20 <ble_comm_att_send_data+0x1E : 1e01baa >			  ## le_gatt_common.c:1062:0
 1e01b96:    00 70             	r0 = 0			  ## le_gatt_common.c:1082:15
 1e01b98:    28 02             	[sp+8] = r0			  ## le_gatt_common.c:1082:15
 1e01b9a:    1b 02             	[sp+4] = r3			  ## le_gatt_common.c:1082:15
 1e01b9c:    a0 71             	r0 = 26			  ## le_gatt_common.c:1082:15
 1e01b9e:    51 70             	r1 = 5			  ## le_gatt_common.c:1082:15
 1e01ba0:    0a 02             	[sp] = r2			  ## le_gatt_common.c:1082:15
 1e01ba2:    42 08             	r2 = r4			  ## le_gatt_common.c:1082:15
 1e01ba4:    53 08             	r3 = r5			  ## le_gatt_common.c:1082:15
 1e01ba6:    80 f3 63 25       	call 19142 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_common.c:1082:15
 1e01baa:    06 0a             	sp += 12
 1e01bac:    55 01             	{pc, r5, r4} = [sp++]


trans_att_write_callback:
 1e01bae:    78 01             	[--sp] = {rets, r8-r4}			  ## ble_trans.c:526:0
 1e01bb0:    64 02             	r4 = [sp+24]			  ## ble_trans.c:526:0
 1e01bb2:    17 08             	r7 = r1			  ## ble_trans.c:526:0
 1e01bb4:    71 fc fa ff       	r1 = r7 + -6			  ## ble_trans.c:536:5
 1e01bb8:    06 08             	r6 = r0			  ## ble_trans.c:536:5
 1e01bba:    d1 e0 17 80       	if (r1 > 13) goto 46 <.GJTIE229_0_0_+0x16 : 1e01bec >
 1e01bbe:    75 02             	r5 = [sp+28]
 1e01bc0:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >
 1e01bc6:    a1 00             	tbb [r1]


.GJTIS229_0_0_:
 1e01bc8:    07     < 7 : 0x7 >
 1e01bc9:    1c     < 28 : 0x1C >
 1e01bca:    1c     < 28 : 0x1C >
 1e01bcb:    16     < 22 : 0x16 >
 1e01bcc:    1c     < 28 : 0x1C >
 1e01bcd:    1e     < 30 : 0x1E >
 1e01bce:    1c     < 28 : 0x1C >
 1e01bcf:    1c     < 28 : 0x1C >
 1e01bd0:    16     < 22 : 0x16 >
 1e01bd1:    1c     < 28 : 0x1C >
 1e01bd2:    1c     < 28 : 0x1C >
 1e01bd3:    16     < 22 : 0x16 >
 1e01bd4:    1c     < 28 : 0x1C >
 1e01bd5:    2d     < 45 : 0x2D >
 1e01bd6:    60 08             	r0 = r6			  ## ble_trans.c:696:13
 1e01bd8:    51 08             	r1 = r5			  ## ble_trans.c:696:13
 1e01bda:    c6 17             	call -116 <ble_comm_att_check_send : 1e01b68 >			  ## ble_trans.c:696:13
 1e01bdc:    11 20             	if (r0 == 0) goto 34 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01bde:    00 f7 20 80       	r0 = h[r8 + 32] (u)			  ## ble_trans.c:697:13
 1e01be2:    91 70             	r1 = 9			  ## ble_trans.c:697:13
 1e01be4:    b0 15             	call -1184 <ble_gatt_server_characteristic_ccc_get : 1e01746 >			  ## ble_trans.c:697:13
 1e01be6:    0c 20             	if (r0 == 0) goto 24 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## ble_trans.c:697:13
 1e01be8:    81 70             	r1 = 8			  ## ble_trans.c:699:13
 1e01bea:    16 18             	goto 44 <.GJTIE229_0_0_+0x42 : 1e01c18 >			  ## ble_trans.c:699:13
 1e01bec:    97 e4 02 00       	if (r7 == 73) goto 4 <.GJTIE229_0_0_+0x1E : 1e01bf4 >
 1e01bf0:    57 e4 06 10       	if (r7 != 69) goto 12 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01bf4:    60 08             	r0 = r6			  ## ble_trans.c:546:9
 1e01bf6:    f0 15             	call -1056 <trans_send_connetion_updata_deal : 1e017d8 >			  ## ble_trans.c:546:9
 1e01bf8:    02 68             	r2 = b[r4 + 0] (u)			  ## ble_trans.c:548:75
 1e01bfa:    60 08             	r0 = r6			  ## ble_trans.c:548:9
 1e01bfc:    71 08             	r1 = r7			  ## ble_trans.c:548:9
 1e01bfe:    0d 16             	call -998 <ble_gatt_server_characteristic_ccc_set : 1e0181a >			  ## ble_trans.c:548:9
 1e01c00:    00 70             	r0 = 0			  ## ble_trans.c:746:5
 1e01c02:    58 01             	{pc, r8-r4} = [sp++]			  ## ble_trans.c:746:5
 1e01c04:    60 08             	r0 = r6			  ## ble_trans.c:708:13
 1e01c06:    51 08             	r1 = r5			  ## ble_trans.c:708:13
 1e01c08:    af 17             	call -162 <ble_comm_att_check_send : 1e01b68 >			  ## ble_trans.c:708:13
 1e01c0a:    fa 21             	if (r0 == 0) goto -12 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01c0c:    00 f7 20 80       	r0 = h[r8 + 32] (u)			  ## ble_trans.c:709:13
 1e01c10:    11 71             	r1 = 17			  ## ble_trans.c:709:13
 1e01c12:    99 15             	call -1230 <ble_gatt_server_characteristic_ccc_get : 1e01746 >			  ## ble_trans.c:709:13
 1e01c14:    f5 21             	if (r0 == 0) goto -22 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## ble_trans.c:709:13
 1e01c16:    01 71             	r1 = 16			  ## ble_trans.c:711:13
 1e01c18:    60 08             	r0 = r6
 1e01c1a:    42 08             	r2 = r4
 1e01c1c:    53 08             	r3 = r5
 1e01c1e:    b6 17             	call -148 <ble_comm_att_send_data : 1e01b8c >
 1e01c20:    ef 1f             	goto -34 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01c22:    33 e0 ed 8f       	if (r3 > 3) goto -38 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01c26:    c0 ba             	r0 = r5 + r3			  ## ble_trans.c:553:42
 1e01c28:    40 e0 ea 8f       	if (r0 > 4) goto -44 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## ble_trans.c:553:42
 1e01c2c:    01 68             	r1 = b[r4 + 0] (u)
 1e01c2e:    17 fc 9f ff       	r7 = r1 + -97			  ## ble_trans.c:557:12
 1e01c32:    c3 ff f2 16 e0 01 	r3 = 31463154 <endRelay : 1e016f2 >
 1e01c38:    c0 ff b0 08 00 00 	r0 = 2224 <ble_device_name_len : 8b0 >
 1e01c3e:    c6 ff 00 18 1e 00 	r6 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >
 1e01c44:    62 fc 00 3c       	r2 = r6 + 15360
 1e01c48:    47 e1 26 80       	if (r7 > 20) goto 76 <.GJTIE229_2_2_+0x1E : 1e01c98 >
 1e01c4c:    79 c0             	r1 = r7 << 1
 1e01c4e:    b1 00             	tbh [r1]


.GJTIL229_2_2_:
 1e01c50:    16 00     < 22 : 0x16 >
 1e01c52:    67 00     < 103 : 0x67 >
 1e01c54:    84 00     < 132 : 0x84 >
 1e01c56:    8e 00     < 142 : 0x8E >
 1e01c58:    15 00     < 21 : 0x15 >
 1e01c5a:    98 00     < 152 : 0x98 >
 1e01c5c:    15 00     < 21 : 0x15 >
 1e01c5e:    15 00     < 21 : 0x15 >
 1e01c60:    15 00     < 21 : 0x15 >
 1e01c62:    15 00     < 21 : 0x15 >
 1e01c64:    15 00     < 21 : 0x15 >
 1e01c66:    9c 00     < 156 : 0x9C >
 1e01c68:    a4 00     < 164 : 0xA4 >
 1e01c6a:    15 00     < 21 : 0x15 >
 1e01c6c:    b3 00     < 179 : 0xB3 >
 1e01c6e:    49 00     < 73 : 0x49 >
 1e01c70:    15 00     < 21 : 0x15 >
 1e01c72:    15 00     < 21 : 0x15 >
 1e01c74:    c7 00     < 199 : 0xC7 >
 1e01c76:    15 00     < 21 : 0x15 >
 1e01c78:    cb 00     < 203 : 0xCB >
 1e01c7a:    c2 1f             	goto -124 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01c7c:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01c7e:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01c80:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01c82:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01c86:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01c88:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01c8a:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01c8c:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01c8e:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01c90:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01c92:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01c94:    f0 b0             	r0 &= 4294967293			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01c96:    1b 19             	goto 566 <.GJTIE229_1_1_+0x20A : 1e01ece >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01c98:    14 fc bf ff       	r4 = r1 + -65
 1e01c9c:    f4 e0 30 80       	if (r4 > 15) goto 96 <.GJTIE229_1_1_+0x3C : 1e01d00 >
 1e01ca0:    61 c0             	r1 = r4 << 1
 1e01ca2:    b1 00             	tbh [r1]


.GJTIL229_1_1_:
 1e01ca4:    11 00     < 17 : 0x11 >
 1e01ca6:    a9 00     < 169 : 0xA9 >
 1e01ca8:    10 00     < 16 : 0x10 >
 1e01caa:    cd 00     < 205 : 0xCD >
 1e01cac:    10 00     < 16 : 0x10 >
 1e01cae:    d7 00     < 215 : 0xD7 >
 1e01cb0:    10 00     < 16 : 0x10 >
 1e01cb2:    10 00     < 16 : 0x10 >
 1e01cb4:    10 00     < 16 : 0x10 >
 1e01cb6:    10 00     < 16 : 0x10 >
 1e01cb8:    10 00     < 16 : 0x10 >
 1e01cba:    e1 00     < 225 : 0xE1 >
 1e01cbc:    ec 00     < 236 : 0xEC >
 1e01cbe:    10 00     < 16 : 0x10 >
 1e01cc0:    10 00     < 16 : 0x10 >
 1e01cc2:    08 01     < 264 : 0x108 >
 1e01cc4:    9d 1f             	goto -198 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01cc6:    bc 15             	call -1160 <initUSB : 1e01840 >			  ## ble_trans.c:558:13
 1e01cc8:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01cca:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01ccc:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01cce:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01cd2:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01cd4:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01cd6:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01cd8:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01cda:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01cdc:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01cde:    00 f4 02 29       	[r2 + 0] |= 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01ce2:    00 4c             	r0 = [r6 + 0]
 1e01ce4:    70 b0             	r0 &= 4294967294
 1e01ce6:    08 4c             	[r6 + 0] = r0
 1e01ce8:    00 f4 50 2a       	[r2 + 0] |= 20480
 1e01cec:    00 44             	r0 = [r2 + 0]
 1e01cee:    70 b1             	r0 &= 4294967291
 1e01cf0:    08 44             	[r2 + 0] = r0
 1e01cf2:    00 44             	r0 = [r2 + 0]
 1e01cf4:    70 b1             	r0 &= 4294967291
 1e01cf6:    08 44             	[r2 + 0] = r0
 1e01cf8:    00 44             	r0 = [r2 + 0]
 1e01cfa:    70 b0             	r0 &= 4294967294
 1e01cfc:    08 44             	[r2 + 0] = r0
 1e01cfe:    80 1f             	goto -256 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01d00:    b1 e2 f4 00       	if (r1 == 43) goto 488 <.GJTIE229_1_1_+0x228 : 1e01eec >
 1e01d04:    d1 e2 fa 00       	if (r1 == 45) goto 500 <.GJTIE229_1_1_+0x238 : 1e01efc >
 1e01d08:    51 e5 7a 1f       	if (r1 != 85) goto -268 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01d0c:    10 70             	r0 = 1
 1e01d0e:    10 f9 44 80       	b[r8 + 68] = r0
 1e01d12:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d14:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d16:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d18:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d1c:    71 1f             	goto -286 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d1e:    90 15             	call -1248 <initUSB : 1e01840 >			  ## ble_trans.c:572:13
 1e01d20:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d22:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d24:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d26:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d2a:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01d2c:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01d2e:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01d30:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01d32:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01d34:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01d36:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01d38:    f0 b0             	r0 &= 4294967293			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01d3a:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01d3c:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d3e:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d40:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d42:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d46:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01d48:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01d4a:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01d4c:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01d4e:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01d50:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01d52:    00 f4 01 29       	[r2 + 0] |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01d56:    6b 18             	goto 214 <.GJTIE229_1_1_+0x16A : 1e01e2e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01d58:    20 fc 10 fd       	r0 = r2 + -752
 1e01d5c:    15 e0 d5 80       	if (r5 > 1) goto 426 <.GJTIE229_1_1_+0x246 : 1e01f0a >			  ## ble_trans.c:582:16
 1e01d60:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e01d62:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e01d64:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:594:15
 1e01d66:    01 f4 20 09       	[r0 + 4] |= 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:678:15
 1e01d6a:    4a 1f             	goto -364 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:678:15
 1e01d6c:    22 40             	r2 = [r0 + 8]			  ## ble_trans.c:605:45
 1e01d6e:    11 40             	r1 = [r0 + 4]			  ## ble_trans.c:605:39
 1e01d70:    00 70             	r0 = 0			  ## ble_trans.c:605:39
 1e01d72:    10 f9 44 80       	b[r8 + 68] = r0			  ## ble_trans.c:605:39
 1e01d76:    60 fc 00 ef       	r0 = r6 + -4352			  ## ble_trans.c:605:13
 1e01d7a:    93 70             	r3 = 9			  ## ble_trans.c:605:13
 1e01d7c:    b1 16             	call -670 <timer_pwm_init : 1e01ae0 >			  ## ble_trans.c:605:13
 1e01d7e:    40 1f             	goto -384 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## ble_trans.c:605:13
 1e01d80:    11 40             	r1 = [r0 + 4]			  ## ble_trans.c:625:18
 1e01d82:    11 fc 18 fc       	r1 = r1 + -1000			  ## ble_trans.c:625:18
 1e01d86:    68 18             	goto 208 <.GJTIE229_1_1_+0x194 : 1e01e58 >			  ## ble_trans.c:625:18
 1e01d88:    20 fc 08 b3       	r0 = r2 + -19704
 1e01d8c:    01 40             	r1 = [r0 + 0]			  ## mcpwm.c:476:34
 1e01d8e:    01 70             	r1 = 0			  ## mcpwm.c:476:34
 1e01d90:    19 40             	[r0 + 4] = r1			  ## mcpwm.c:476:20
 1e01d92:    11 f9 44 80       	b[r8 + 68] = r1			  ## mcpwm.c:476:20
 1e01d96:    34 1f             	goto -408 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## mcpwm.c:476:20
 1e01d98:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d9a:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d9c:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01d9e:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01da2:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01da4:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01da6:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01da8:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01daa:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01dac:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01dae:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01db0:    f0 b0             	r0 &= 4294967293			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01db2:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01db4:    25 1f             	goto -438 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01db6:    10 68             	r0 = b[r4 + 1] (u)			  ## ble_trans.c:662:24
 1e01db8:    00 fe 3c 09       	r0 = r0 * 60			  ## ble_trans.c:662:37
 1e01dbc:    00 fc c0 f4       	r0 = r0 + -2880			  ## ble_trans.c:662:37
 1e01dc0:    10 f7 1c 80       	h[r8 + 28] = r0			  ## ble_trans.c:662:21
 1e01dc4:    00 70             	r0 = 0			  ## ble_trans.c:662:21
 1e01dc6:    10 f7 1a 80       	h[r8 + 26] = r0			  ## ble_trans.c:662:52
 1e01dca:    c1 ff b8 16 e0 01 	r1 = 31463096 <updateRunTime : 1e016b8 >			  ## ble_trans.c:663:23
 1e01dd0:    02 fb e8 03       	r2 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## ble_trans.c:663:23
 1e01dd4:    80 f3 f9 4c       	call 39410 <sys_timer_add : 1e0b7ca >			  ## ble_trans.c:663:23
 1e01dd8:    10 f7 1e 80       	h[r8 + 30] = r0			  ## ble_trans.c:663:21
 1e01ddc:    11 1f             	goto -478 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## ble_trans.c:663:21
 1e01dde:    10 70             	r0 = 1
 1e01de0:    10 f9 44 80       	b[r8 + 68] = r0
 1e01de4:    0d 1f             	goto -486 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01de6:    00 70             	r0 = 0
 1e01de8:    10 f9 44 80       	b[r8 + 68] = r0
 1e01dec:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:239:25
 1e01dee:    30 fd 50 0a       	r0 = r0 & 4294946815			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:239:25
 1e01df2:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:239:25
 1e01df4:    05 1f             	goto -502 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:239:25
 1e01df6:    24 15             	call -1464 <initUSB : 1e01840 >			  ## ble_trans.c:567:13
 1e01df8:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01dfa:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01dfc:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01dfe:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e02:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01e04:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01e06:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01e08:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01e0a:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01e0c:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01e0e:    00 f4 02 29       	[r2 + 0] |= 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01e12:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e14:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e16:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e18:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e1c:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01e1e:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01e20:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01e22:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01e24:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01e26:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01e28:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01e2a:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01e2c:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01e2e:    00 70             	r0 = 0
 1e01e30:    22 73             	r2 = 50
 1e01e32:    31 08             	r1 = r3
 1e01e34:    80 f3 c1 4c       	call 39298 <sys_timeout_add : 1e0b7ba >
 1e01e38:    10 f7 1e 80       	h[r8 + 30] = r0
 1e01e3c:    e1 1e             	goto -574 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01e3e:    23 40             	r3 = [r0 + 8]			  ## ble_trans.c:599:58
 1e01e40:    12 40             	r2 = [r0 + 4]			  ## ble_trans.c:599:52
 1e01e42:    10 70             	r0 = 1			  ## ble_trans.c:599:52
 1e01e44:    10 f9 44 80       	b[r8 + 68] = r0			  ## ble_trans.c:599:52
 1e01e48:    60 fc 00 ef       	r0 = r6 + -4352			  ## ble_trans.c:599:13
 1e01e4c:    91 70             	r1 = 9			  ## ble_trans.c:599:13
 1e01e4e:    48 16             	call -880 <timer_pwm_init : 1e01ae0 >			  ## ble_trans.c:599:13
 1e01e50:    d7 1e             	goto -594 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## ble_trans.c:599:13
 1e01e52:    11 40             	r1 = [r0 + 4]			  ## ble_trans.c:621:18
 1e01e54:    11 fc e8 03       	r1 = r1 + 1000			  ## ble_trans.c:621:18
 1e01e58:    19 40             	[r0 + 4] = r1
 1e01e5a:    22 40             	r2 = [r0 + 8]
 1e01e5c:    60 fc 00 ec       	r0 = r6 + -5120
 1e01e60:    53 70             	r3 = 5
 1e01e62:    3e 16             	call -900 <timer_pwm_init : 1e01ae0 >
 1e01e64:    cd 1e             	goto -614 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01e66:    10 70             	r0 = 1
 1e01e68:    10 f9 44 80       	b[r8 + 68] = r0
 1e01e6c:    20 fc 00 b3       	r0 = r2 + -19712			  ## ble_trans.c:630:22
 1e01e70:    01 fb 10 27       	r1 = 10000 <vm_obj+0xB0 : 2710 >			  ## ble_trans.c:630:22
 1e01e74:    22 73             	r2 = 50			  ## ble_trans.c:630:22
 1e01e76:    53 71             	r3 = 21			  ## ble_trans.c:630:22
 1e01e78:    33 16             	call -922 <timer_pwm_init : 1e01ae0 >			  ## ble_trans.c:630:22
 1e01e7a:    c2 1e             	goto -636 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01e7c:    10 70             	r0 = 1
 1e01e7e:    10 f9 44 80       	b[r8 + 68] = r0
 1e01e82:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01e84:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01e86:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01e88:    00 f4 02 2a       	[r2 + 0] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e01e8c:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01e8e:    f0 b3             	r0 &= 4294967167			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01e90:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01e92:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01e94:    f0 b2             	r0 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01e96:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01e98:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e9a:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e9c:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01e9e:    00 f4 50 2a       	[r2 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e01ea2:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01ea4:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01ea6:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e01ea8:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01eaa:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01eac:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e01eae:    00 f4 02 29       	[r2 + 0] |= 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01eb2:    a6 1e             	goto -692 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e01eb4:    10 70             	r0 = 1
 1e01eb6:    10 f9 44 80       	b[r8 + 68] = r0
 1e01eba:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01ebc:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01ebe:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e01ec0:    00 f4 02 2a       	[r2 + 0] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e01ec4:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01ec6:    70 b3             	r0 &= 4294967231			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01ec8:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e01eca:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01ecc:    70 b2             	r0 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e01ece:    08 44             	[r2 + 0] = r0
 1e01ed0:    00 4c             	r0 = [r6 + 0]
 1e01ed2:    70 b0             	r0 &= 4294967294
 1e01ed4:    08 4c             	[r6 + 0] = r0
 1e01ed6:    00 f4 50 2a       	[r2 + 0] |= 20480
 1e01eda:    00 44             	r0 = [r2 + 0]
 1e01edc:    70 b1             	r0 &= 4294967291
 1e01ede:    08 44             	[r2 + 0] = r0
 1e01ee0:    00 44             	r0 = [r2 + 0]
 1e01ee2:    70 b1             	r0 &= 4294967291
 1e01ee4:    08 44             	[r2 + 0] = r0
 1e01ee6:    00 f4 01 29       	[r2 + 0] |= 1
 1e01eea:    8a 1e             	goto -748 <.GJTIE229_0_0_+0x2A : 1e01c00 >
 1e01eec:    21 40             	r1 = [r0 + 8]			  ## ble_trans.c:610:16
 1e01eee:    02 fb 0f 27       	r2 = 9999 <vm_obj+0xAF : 270f >			  ## ble_trans.c:610:16
 1e01ef2:    21 f2 20 c0       	ifs (r1 > r2) goto 64 <.GJTIE229_1_1_+0x272 : 1e01f36 >			  ## ble_trans.c:610:16
 1e01ef6:    11 fc f4 01       	r1 = r1 + 500			  ## ble_trans.c:610:33
 1e01efa:    05 18             	goto 10 <.GJTIE229_1_1_+0x242 : 1e01f06 >			  ## ble_trans.c:610:33
 1e01efc:    21 40             	r1 = [r0 + 8]			  ## ble_trans.c:615:16
 1e01efe:    11 e0 17 b0       	ifs (r1 < 1) goto 46 <.GJTIE229_1_1_+0x26C : 1e01f30 >			  ## ble_trans.c:615:16
 1e01f02:    11 fc 0c fe       	r1 = r1 + -500			  ## ble_trans.c:615:29
 1e01f06:    29 40             	[r0 + 8] = r1
 1e01f08:    16 18             	goto 44 <.GJTIE229_1_1_+0x272 : 1e01f36 >
 1e01f0a:    11 70             	r1 = 1
 1e01f0c:    11 f9 44 80       	b[r8 + 68] = r1
 1e01f10:    00 f4 20 09       	[r0 + 0] |= 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:592:15
 1e01f14:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e01f16:    f1 b2             	r1 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e01f18:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e01f1a:    10 68             	r0 = b[r4 + 1] (u)			  ## ble_trans.c:590:37
 1e01f1c:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## ble_trans.c:590:35
 1e01f20:    40 0e             	r0 = r0 * r1			  ## ble_trans.c:590:35
 1e01f22:    00 fc 80 44       	r0 = r0 + 17536			  ## ble_trans.c:590:35
 1e01f26:    21 04             	r1 = r0.l (u)			  ## ble_trans.c:592:47
 1e01f28:    20 fc 00 b1       	r0 = r2 + -20224			  ## ble_trans.c:592:17
 1e01f2c:    a9 14             	call -1710 <set_timer_pwm_duty : 1e01880 >			  ## ble_trans.c:592:17
 1e01f2e:    68 1e             	goto -816 <.GJTIE229_0_0_+0x2A : 1e01c00 >			  ## ble_trans.c:592:17
 1e01f30:    00 70             	r0 = 0
 1e01f32:    10 f9 44 80       	b[r8 + 68] = r0
 1e01f36:    60 fc 00 ef       	r0 = r6 + -4352
 1e01f3a:    a2 14             	call -1724 <set_timer_pwm_duty : 1e01880 >
 1e01f3c:    61 1e             	goto -830 <.GJTIE229_0_0_+0x2A : 1e01c00 >


trans_event_packet_handler:
 1e01f3e:    75 01             	[--sp] = {rets, r5, r4}			  ## ble_trans.c:300:0
 1e01f40:    12 08             	r2 = r1			  ## ble_trans.c:300:0
 1e01f42:    00 ff 90 00 1c 00 	if (r0 == 144) goto 56 <trans_event_packet_handler+0x42 : 1e01f80 >			  ## ble_trans.c:303:5
 1e01f48:    c3 ff 70 20 00 00 	r3 = 8304 <gatt_client_conn_handle : 2070 >
 1e01f4e:    20 e0 0d 00       	if (r0 == 2) goto 26 <trans_event_packet_handler+0x2E : 1e01f6c >
 1e01f52:    50 e0 1e 00       	if (r0 == 5) goto 60 <trans_event_packet_handler+0x54 : 1e01f92 >
 1e01f56:    10 e0 35 10       	if (r0 != 1) goto 106 <trans_event_packet_handler+0x86 : 1e01fc4 >
 1e01f5a:    01 70             	r1 = 0			  ## ble_trans.c:318:28
 1e01f5c:    04 70             	r4 = 0			  ## ble_trans.c:318:28
 1e01f5e:    20 08             	r0 = r2			  ## ble_trans.c:318:28
 1e01f60:    80 f3 0a 22       	call 17428 <little_endian_read_16 : 1e06378 >			  ## ble_trans.c:318:28
 1e01f64:    08 57             	h[r3 + 32] = r0			  ## ble_trans.c:318:26
 1e01f66:    14 f9 48 30       	b[r3 + 72] = r4			  ## ble_trans.c:318:26
 1e01f6a:    2c 18             	goto 88 <trans_event_packet_handler+0x86 : 1e01fc4 >			  ## ble_trans.c:318:26
 1e01f6c:    05 57             	r5 = h[r3 + 32] (u)			  ## ble_trans.c:342:13
 1e01f6e:    01 70             	r1 = 0			  ## ble_trans.c:342:33
 1e01f70:    04 70             	r4 = 0			  ## ble_trans.c:342:33
 1e01f72:    20 08             	r0 = r2			  ## ble_trans.c:342:33
 1e01f74:    80 f3 00 22       	call 17408 <little_endian_read_16 : 1e06378 >			  ## ble_trans.c:342:33
 1e01f78:    05 f2 24 10       	if (r5 != r0) goto 72 <trans_event_packet_handler+0x86 : 1e01fc4 >			  ## ble_trans.c:342:33
 1e01f7c:    0c 57             	h[r3 + 32] = r4			  ## ble_trans.c:343:30
 1e01f7e:    22 18             	goto 68 <trans_event_packet_handler+0x86 : 1e01fc4 >			  ## ble_trans.c:343:30
 1e01f80:    21 70             	r1 = 2			  ## ble_trans.c:370:20
 1e01f82:    20 08             	r0 = r2			  ## ble_trans.c:370:20
 1e01f84:    80 f3 32 26       	call 19556 <little_endian_read_32 : 1e06bec >			  ## ble_trans.c:370:20
 1e01f88:    c1 ff 38 90 0d 00 	r1 = 888888 <text_size+0xC0E58 : d9038 >			  ## ble_trans.c:371:14
 1e01f8e:    09 40             	[r0 + 0] = r1			  ## ble_trans.c:371:14
 1e01f90:    19 18             	goto 50 <trans_event_packet_handler+0x86 : 1e01fc4 >			  ## ble_trans.c:371:14
 1e01f92:    30 64             	r0 = b[r2 + 3] (u)			  ## ble_trans.c:349:13
 1e01f94:    f0 e0 16 10       	if (r0 != 15) goto 44 <trans_event_packet_handler+0x86 : 1e01fc4 >
 1e01f98:    01 70             	r1 = 0			  ## ble_trans.c:350:41
 1e01f9a:    20 08             	r0 = r2			  ## ble_trans.c:350:41
 1e01f9c:    80 f3 ec 21       	call 17368 <little_endian_read_16 : 1e06378 >			  ## ble_trans.c:350:41
 1e01fa0:    04 08             	r4 = r0			  ## ble_trans.c:350:41
 1e01fa2:    91 70             	r1 = 9			  ## ble_trans.c:277:5
 1e01fa4:    12 70             	r2 = 1			  ## ble_trans.c:277:5
 1e01fa6:    39 14             	call -1934 <ble_gatt_server_characteristic_ccc_set : 1e0181a >			  ## ble_trans.c:277:5
 1e01fa8:    e1 70             	r1 = 14			  ## ble_trans.c:278:5
 1e01faa:    12 70             	r2 = 1			  ## ble_trans.c:278:5
 1e01fac:    40 08             	r0 = r4			  ## ble_trans.c:278:5
 1e01fae:    35 14             	call -1942 <ble_gatt_server_characteristic_ccc_set : 1e0181a >			  ## ble_trans.c:278:5
 1e01fb0:    11 71             	r1 = 17			  ## ble_trans.c:279:5
 1e01fb2:    22 70             	r2 = 2			  ## ble_trans.c:279:5
 1e01fb4:    40 08             	r0 = r4			  ## ble_trans.c:279:5
 1e01fb6:    31 14             	call -1950 <ble_gatt_server_characteristic_ccc_set : 1e0181a >			  ## ble_trans.c:279:5
 1e01fb8:    51 74             	r1 = 69			  ## ble_trans.c:280:5
 1e01fba:    12 70             	r2 = 1			  ## ble_trans.c:280:5
 1e01fbc:    40 08             	r0 = r4			  ## ble_trans.c:280:5
 1e01fbe:    2d 14             	call -1958 <ble_gatt_server_characteristic_ccc_set : 1e0181a >			  ## ble_trans.c:280:5
 1e01fc0:    40 08             	r0 = r4			  ## ble_trans.c:283:9
 1e01fc2:    0a 14             	call -2028 <trans_send_connetion_updata_deal : 1e017d8 >			  ## ble_trans.c:283:9
 1e01fc4:    00 70             	r0 = 0			  ## ble_trans.c:379:5
 1e01fc6:    55 01             	{pc, r5, r4} = [sp++]			  ## ble_trans.c:379:5


lib_btstack_version:
 1e01fc8:    00 70             	r0 = 0			  ## version.c:25:0
 1e01fca:    20 00             	rts			  ## version.c:26:5


lib_media_version:
 1e01fcc:    00 70             	r0 = 0			  ## version.c:29:0
 1e01fce:    20 00             	rts			  ## version.c:30:5


port_protect:
 1e01fd0:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:393:0
 1e01fd2:    f1 ef 10 00       	if (r1 == -1) goto 32 <port_protect+0x26 : 1e01ff6 >			  ## board_ac632n_demo.c:393:0
 1e01fd6:    ca d0             	r2 = r1 >> 3			  ## board_ac632n_demo.c:397:5
 1e01fd8:    c3 ff fe ff ff 1f 	r3 = 536870910 <bank_code_load_addr+0x1E5752 : 1fffffe >			  ## board_ac632n_demo.c:397:25
 1e01fde:    52 b7             	r2 &= r3			  ## board_ac632n_demo.c:397:25
 1e01fe0:    03 f8 00 02       	r3 = h[r0+r2] (u)			  ## board_ac632n_demo.c:397:41
 1e01fe4:    21 fd 0f 19       	r1 = r1 & 15			  ## board_ac632n_demo.c:397:45
 1e01fe8:    14 70             	r4 = 1
 1e01fea:    f8 fd 10 14       	r1 = r4 << r1			  ## board_ac632n_demo.c:397:45
 1e01fee:    e3 fd 10 13       	r1 = r3 & ~r1			  ## board_ac632n_demo.c:397:41
 1e01ff2:    11 f8 00 02       	h[r0+r2] = r1			  ## board_ac632n_demo.c:397:41
 1e01ff6:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:398:1


gpio_dir:
 1e01ff8:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:355:0
 1e01ffa:    24 08             	r4 = r2			  ## gpio.c:355:0
 1e01ffc:    15 08             	r5 = r1			  ## gpio.c:355:0
 1e01ffe:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_dir+0x2C : 1e02024 >			  ## gpio.c:358:9
 1e02002:    1e 2a             	if (r5 == 0) goto 60 <gpio_dir+0x48 : 1e02040 >
 1e02004:    06 70             	r6 = 0
 1e02006:    17 70             	r7 = 1
 1e02008:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:361:27
 1e0200c:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:361:27
 1e02010:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_dir+0x20 : 1e02018 >			  ## gpio.c:361:21
 1e02014:    11 70             	r1 = 1			  ## gpio.c:362:21
 1e02016:    01 18             	goto 2 <gpio_dir+0x22 : 1e0201a >			  ## gpio.c:362:21
 1e02018:    01 70             	r1 = 0			  ## gpio.c:364:21
 1e0201a:    18 15             	call -1488 <usb_set_direction : 1e01a4c >
 1e0201c:    16 80             	r6 += 1			  ## gpio.c:360:45
 1e0201e:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_dir+0x10 : 1e02008 >
 1e02022:    57 01             	{pc, r7-r4} = [sp++]
 1e02024:    80 d0             	r0 = r0 >> 2			  ## gpio.c:50:31
 1e02026:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e0202c:    50 b3             	r0 &= r1			  ## gpio.c:50:46
 1e0202e:    c1 ff 10 e7 e0 01 	r1 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e02034:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:50:31
 1e02038:    03 20             	if (r0 == 0) goto 6 <gpio_dir+0x48 : 1e02040 >
 1e0203a:    21 40             	r1 = [r0 + 8]			  ## gpio.c:386:18
 1e0203c:    51 b8             	r1 |= r4			  ## gpio.c:395:13
 1e0203e:    29 40             	[r0 + 8] = r1			  ## gpio.c:401:12
 1e02040:    57 01             	{pc, r7-r4} = [sp++]


usb_set_pull_up:
 1e02042:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:141:0
 1e02048:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_pull_up+0x1A : 1e0205c >			  ## gpio.c:142:9
 1e0204c:    20 80             	r0 += 2
 1e0204e:    13 70             	r3 = 1
 1e02050:    f8 fd 00 03       	r0 = r3 << r0
 1e02054:    0b 22             	if (r1 == 0) goto 22 <usb_set_pull_up+0x2A : 1e0206c >			  ## gpio.c:144:13
 1e02056:    91 44             	r1 = [r2 + 36]			  ## gpio.c:145:30
 1e02058:    50 b2             	r0 |= r1			  ## gpio.c:145:30
 1e0205a:    0b 18             	goto 22 <usb_set_pull_up+0x30 : 1e02072 >			  ## gpio.c:145:30
 1e0205c:    40 80             	r0 += 4
 1e0205e:    13 70             	r3 = 1
 1e02060:    f8 fd 00 03       	r0 = r3 << r0
 1e02064:    08 22             	if (r1 == 0) goto 16 <usb_set_pull_up+0x34 : 1e02076 >			  ## gpio.c:151:13
 1e02066:    01 44             	r1 = [r2 + 0]			  ## gpio.c:152:29
 1e02068:    50 b2             	r0 |= r1			  ## gpio.c:152:29
 1e0206a:    08 18             	goto 16 <usb_set_pull_up+0x3A : 1e0207c >			  ## gpio.c:152:29
 1e0206c:    91 44             	r1 = [r2 + 36]			  ## gpio.c:147:30
 1e0206e:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:147:30
 1e02072:    98 44             	[r2 + 36] = r0
 1e02074:    20 00             	rts
 1e02076:    01 44             	r1 = [r2 + 0]			  ## gpio.c:154:29
 1e02078:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:154:29
 1e0207c:    08 44             	[r2 + 0] = r0
 1e0207e:    20 00             	rts


gpio_set_pu:
 1e02080:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:602:0
 1e02082:    24 08             	r4 = r2			  ## gpio.c:602:0
 1e02084:    15 08             	r5 = r1			  ## gpio.c:602:0
 1e02086:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_set_pu+0x2C : 1e020ac >			  ## gpio.c:606:9
 1e0208a:    1e 2a             	if (r5 == 0) goto 60 <gpio_set_pu+0x48 : 1e020c8 >
 1e0208c:    06 70             	r6 = 0
 1e0208e:    17 70             	r7 = 1
 1e02090:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:609:27
 1e02094:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:609:27
 1e02098:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_set_pu+0x20 : 1e020a0 >			  ## gpio.c:609:21
 1e0209c:    11 70             	r1 = 1			  ## gpio.c:610:21
 1e0209e:    01 18             	goto 2 <gpio_set_pu+0x22 : 1e020a2 >			  ## gpio.c:610:21
 1e020a0:    01 70             	r1 = 0			  ## gpio.c:612:21
 1e020a2:    cf 17             	call -98 <usb_set_pull_up : 1e02042 >
 1e020a4:    16 80             	r6 += 1			  ## gpio.c:608:45
 1e020a6:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_set_pu+0x10 : 1e02090 >
 1e020aa:    57 01             	{pc, r7-r4} = [sp++]
 1e020ac:    80 d0             	r0 = r0 >> 2			  ## gpio.c:50:31
 1e020ae:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e020b4:    50 b3             	r0 &= r1			  ## gpio.c:50:46
 1e020b6:    c1 ff 10 e7 e0 01 	r1 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e020bc:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:50:31
 1e020c0:    03 20             	if (r0 == 0) goto 6 <gpio_set_pu+0x48 : 1e020c8 >
 1e020c2:    41 40             	r1 = [r0 + 16]			  ## gpio.c:634:18
 1e020c4:    51 b9             	r1 &= r4			  ## gpio.c:640:13
 1e020c6:    49 40             	[r0 + 16] = r1			  ## gpio.c:650:11
 1e020c8:    57 01             	{pc, r7-r4} = [sp++]


gpio_set_pd:
 1e020ca:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:688:0
 1e020cc:    24 08             	r4 = r2			  ## gpio.c:688:0
 1e020ce:    15 08             	r5 = r1			  ## gpio.c:688:0
 1e020d0:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_set_pd+0x2C : 1e020f6 >			  ## gpio.c:692:9
 1e020d4:    1e 2a             	if (r5 == 0) goto 60 <gpio_set_pd+0x48 : 1e02112 >
 1e020d6:    06 70             	r6 = 0
 1e020d8:    17 70             	r7 = 1
 1e020da:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:695:27
 1e020de:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:695:27
 1e020e2:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_set_pd+0x20 : 1e020ea >			  ## gpio.c:695:21
 1e020e6:    11 70             	r1 = 1			  ## gpio.c:696:21
 1e020e8:    01 18             	goto 2 <gpio_set_pd+0x22 : 1e020ec >			  ## gpio.c:696:21
 1e020ea:    01 70             	r1 = 0			  ## gpio.c:698:21
 1e020ec:    73 14             	call -1818 <usb_set_pull_down : 1e019d4 >
 1e020ee:    16 80             	r6 += 1			  ## gpio.c:694:45
 1e020f0:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_set_pd+0x10 : 1e020da >
 1e020f4:    57 01             	{pc, r7-r4} = [sp++]
 1e020f6:    80 d0             	r0 = r0 >> 2			  ## gpio.c:50:31
 1e020f8:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e020fe:    50 b3             	r0 &= r1			  ## gpio.c:50:46
 1e02100:    c1 ff 10 e7 e0 01 	r1 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e02106:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:50:31
 1e0210a:    03 20             	if (r0 == 0) goto 6 <gpio_set_pd+0x48 : 1e02112 >
 1e0210c:    51 40             	r1 = [r0 + 20]			  ## gpio.c:720:18
 1e0210e:    51 b9             	r1 &= r4			  ## gpio.c:726:13
 1e02110:    59 40             	[r0 + 20] = r1			  ## gpio.c:735:11
 1e02112:    57 01             	{pc, r7-r4} = [sp++]


usb_set_die:
 1e02114:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:181:0
 1e0211a:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_die+0x1A : 1e0212e >			  ## gpio.c:182:9
 1e0211e:    60 80             	r0 += 6
 1e02120:    13 70             	r3 = 1
 1e02122:    f8 fd 00 03       	r0 = r3 << r0
 1e02126:    0b 22             	if (r1 == 0) goto 22 <usb_set_die+0x2A : 1e0213e >			  ## gpio.c:184:13
 1e02128:    91 44             	r1 = [r2 + 36]			  ## gpio.c:185:30
 1e0212a:    50 b2             	r0 |= r1			  ## gpio.c:185:30
 1e0212c:    0b 18             	goto 22 <usb_set_die+0x30 : 1e02144 >			  ## gpio.c:185:30
 1e0212e:    80 80             	r0 += 8
 1e02130:    13 70             	r3 = 1
 1e02132:    f8 fd 00 03       	r0 = r3 << r0
 1e02136:    08 22             	if (r1 == 0) goto 16 <usb_set_die+0x34 : 1e02148 >			  ## gpio.c:191:13
 1e02138:    01 44             	r1 = [r2 + 0]			  ## gpio.c:192:29
 1e0213a:    50 b2             	r0 |= r1			  ## gpio.c:192:29
 1e0213c:    08 18             	goto 16 <usb_set_die+0x3A : 1e0214e >			  ## gpio.c:192:29
 1e0213e:    91 44             	r1 = [r2 + 36]			  ## gpio.c:187:30
 1e02140:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:187:30
 1e02144:    98 44             	[r2 + 36] = r0
 1e02146:    20 00             	rts
 1e02148:    01 44             	r1 = [r2 + 0]			  ## gpio.c:194:29
 1e0214a:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:194:29
 1e0214e:    08 44             	[r2 + 0] = r0
 1e02150:    20 00             	rts


gpio_die:
 1e02152:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:866:0
 1e02154:    24 08             	r4 = r2			  ## gpio.c:866:0
 1e02156:    15 08             	r5 = r1			  ## gpio.c:866:0
 1e02158:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_die+0x2C : 1e0217e >			  ## gpio.c:870:9
 1e0215c:    1e 2a             	if (r5 == 0) goto 60 <gpio_die+0x48 : 1e0219a >
 1e0215e:    06 70             	r6 = 0
 1e02160:    17 70             	r7 = 1
 1e02162:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:873:27
 1e02166:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:873:27
 1e0216a:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_die+0x20 : 1e02172 >			  ## gpio.c:873:21
 1e0216e:    11 70             	r1 = 1			  ## gpio.c:874:21
 1e02170:    01 18             	goto 2 <gpio_die+0x22 : 1e02174 >			  ## gpio.c:874:21
 1e02172:    01 70             	r1 = 0			  ## gpio.c:876:21
 1e02174:    cf 17             	call -98 <usb_set_die : 1e02114 >
 1e02176:    16 80             	r6 += 1			  ## gpio.c:872:45
 1e02178:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_die+0x10 : 1e02162 >
 1e0217c:    57 01             	{pc, r7-r4} = [sp++]
 1e0217e:    80 d0             	r0 = r0 >> 2			  ## gpio.c:50:31
 1e02180:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e02186:    50 b3             	r0 &= r1			  ## gpio.c:50:46
 1e02188:    c1 ff 10 e7 e0 01 	r1 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e0218e:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:50:31
 1e02192:    03 20             	if (r0 == 0) goto 6 <gpio_die+0x48 : 1e0219a >
 1e02194:    31 40             	r1 = [r0 + 12]			  ## gpio.c:898:18
 1e02196:    51 b9             	r1 &= r4			  ## gpio.c:904:13
 1e02198:    39 40             	[r0 + 12] = r1			  ## gpio.c:913:12
 1e0219a:    57 01             	{pc, r7-r4} = [sp++]


usb_set_dieh:
 1e0219c:    c2 ff 00 54 1e 00 	r2 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## gpio.c:201:0
 1e021a2:    20 e0 08 30       	if (r0 < 2) goto 16 <usb_set_dieh+0x1A : 1e021b6 >			  ## gpio.c:202:9
 1e021a6:    80 80             	r0 += 8
 1e021a8:    13 70             	r3 = 1
 1e021aa:    f8 fd 00 03       	r0 = r3 << r0
 1e021ae:    0b 22             	if (r1 == 0) goto 22 <usb_set_dieh+0x2A : 1e021c6 >			  ## gpio.c:204:13
 1e021b0:    91 44             	r1 = [r2 + 36]			  ## gpio.c:205:30
 1e021b2:    50 b2             	r0 |= r1			  ## gpio.c:205:30
 1e021b4:    0b 18             	goto 22 <usb_set_dieh+0x30 : 1e021cc >			  ## gpio.c:205:30
 1e021b6:    a0 80             	r0 += 10
 1e021b8:    13 70             	r3 = 1
 1e021ba:    f8 fd 00 03       	r0 = r3 << r0
 1e021be:    08 22             	if (r1 == 0) goto 16 <usb_set_dieh+0x34 : 1e021d0 >			  ## gpio.c:211:13
 1e021c0:    01 44             	r1 = [r2 + 0]			  ## gpio.c:212:29
 1e021c2:    50 b2             	r0 |= r1			  ## gpio.c:212:29
 1e021c4:    08 18             	goto 16 <usb_set_dieh+0x3A : 1e021d6 >			  ## gpio.c:212:29
 1e021c6:    91 44             	r1 = [r2 + 36]			  ## gpio.c:207:30
 1e021c8:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:207:30
 1e021cc:    98 44             	[r2 + 36] = r0
 1e021ce:    20 00             	rts
 1e021d0:    01 44             	r1 = [r2 + 0]			  ## gpio.c:214:29
 1e021d2:    e3 fd 00 01       	r0 = r1 & ~r0			  ## gpio.c:214:29
 1e021d6:    08 44             	[r2 + 0] = r0
 1e021d8:    20 00             	rts


gpio_dieh:
 1e021da:    77 01             	[--sp] = {rets, r7-r4}			  ## gpio.c:920:0
 1e021dc:    24 08             	r4 = r2			  ## gpio.c:920:0
 1e021de:    15 08             	r5 = r1			  ## gpio.c:920:0
 1e021e0:    10 e3 11 30       	if (r0 < 49) goto 34 <gpio_dieh+0x2C : 1e02206 >			  ## gpio.c:925:9
 1e021e4:    1e 2a             	if (r5 == 0) goto 60 <gpio_dieh+0x48 : 1e02222 >
 1e021e6:    06 70             	r6 = 0
 1e021e8:    17 70             	r7 = 1
 1e021ea:    f8 fd 60 17       	r1 = r7 << r6			  ## gpio.c:928:27
 1e021ee:    60 fc 31 00       	r0 = r6 + 49			  ## gpio.c:928:27
 1e021f2:    41 f0 02 00       	if ((r1 & r4) == 0) goto 4 <gpio_dieh+0x20 : 1e021fa >			  ## gpio.c:928:21
 1e021f6:    11 70             	r1 = 1			  ## gpio.c:929:21
 1e021f8:    01 18             	goto 2 <gpio_dieh+0x22 : 1e021fc >			  ## gpio.c:929:21
 1e021fa:    01 70             	r1 = 0			  ## gpio.c:931:21
 1e021fc:    cf 17             	call -98 <usb_set_dieh : 1e0219c >
 1e021fe:    16 80             	r6 += 1			  ## gpio.c:927:45
 1e02200:    65 f2 f3 1f       	if (r5 != r6) goto -26 <gpio_dieh+0x10 : 1e021ea >
 1e02204:    57 01             	{pc, r7-r4} = [sp++]
 1e02206:    80 d0             	r0 = r0 >> 2			  ## gpio.c:50:31
 1e02208:    c1 ff fc ff ff 3f 	r1 = 1073741820 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## gpio.c:50:46
 1e0220e:    50 b3             	r0 &= r1			  ## gpio.c:50:46
 1e02210:    c1 ff 10 e7 e0 01 	r1 = 31516432 <gpio_regs : 1e0e710 >			  ## gpio.c:50:31
 1e02216:    80 f6 00 01       	r0 = [r0+r1]			  ## gpio.c:50:31
 1e0221a:    03 20             	if (r0 == 0) goto 6 <gpio_dieh+0x48 : 1e02222 >
 1e0221c:    81 40             	r1 = [r0 + 32]			  ## gpio.c:954:18
 1e0221e:    51 b9             	r1 &= r4			  ## gpio.c:960:13
 1e02220:    89 40             	[r0 + 32] = r1			  ## gpio.c:969:13
 1e02222:    57 01             	{pc, r7-r4} = [sp++]


close_gpio:
 1e02224:    74 01             	[--sp] = {rets, r4}			  ## board_ac632n_demo.c:403:0
 1e02226:    fc 0b             	sp += -8			  ## board_ac632n_demo.c:403:0
 1e02228:    c0 ff 5c e2 e0 01 	r0 = 31515228 <wk_param+0x4C : 1e0e25c >			  ## board_ac632n_demo.c:404:9
 1e0222e:    21 50             	r1 = h[r0 + 4] (u)			  ## board_ac632n_demo.c:404:9
 1e02230:    12 50             	r2 = h[r0 + 2] (u)			  ## board_ac632n_demo.c:404:9
 1e02232:    00 50             	r0 = h[r0 + 0] (u)			  ## board_ac632n_demo.c:404:9
 1e02234:    91 f5 04 00       	h[sp+4] = r1			  ## board_ac632n_demo.c:404:9
 1e02238:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## board_ac632n_demo.c:404:9
 1e0223c:    08 02             	[sp] = r0			  ## board_ac632n_demo.c:404:9
 1e0223e:    c0 ff 92 18 1a 00 	r0 = 1710226 <uECC_vli_cmp_unsafe+0x9A896 : 1a1892 >			  ## board_ac632n_demo.c:410:5
 1e02244:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:410:5
 1e02246:    03 f3 04 00       	if ((r0 & 8) == 0) goto 8 <close_gpio+0x2E : 1e02252 >			  ## board_ac632n_demo.c:410:5
 1e0224a:    00 fb fb 03       	r0 = 1019 <BTCTLER_LE_RAM_TOTAL+0x1D : 3fb >			  ## board_ac632n_demo.c:397:41
 1e0224e:    90 f5 02 00       	h[sp+2] = r0			  ## board_ac632n_demo.c:397:41
 1e02252:    c0 ff 48 18 1a 00 	r0 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## board_ac632n_demo.c:415:5
 1e02258:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:415:5
 1e0225a:    00 f3 19 00       	if ((r0 & 1) == 0) goto 50 <close_gpio+0x6C : 1e02290 >			  ## board_ac632n_demo.c:415:5
 1e0225e:    c0 ff c0 18 1a 00 	r0 = 1710272 <uECC_vli_cmp_unsafe+0x9A8C4 : 1a18c0 >			  ## board_ac632n_demo.c:417:17
 1e02264:    00 60             	r0 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:417:17
 1e02266:    01 fc ff ff       	r1 = r0 + -1			  ## board_ac632n_demo.c:418:22
 1e0226a:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:418:22
 1e0226c:    91 e0 0e 90       	if (r1 <= 9) goto 28 <close_gpio+0x68 : 1e0228c >			  ## board_ac632n_demo.c:418:22
 1e02270:    01 fc f5 ff       	r1 = r0 + -11			  ## board_ac632n_demo.c:421:29
 1e02274:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:421:29
 1e02276:    91 e0 02 80       	if (r1 > 9) goto 4 <close_gpio+0x5A : 1e0227e >			  ## board_ac632n_demo.c:421:29
 1e0227a:    50 80             	r0 += 5			  ## board_ac632n_demo.c:422:43
 1e0227c:    06 18             	goto 12 <close_gpio+0x66 : 1e0228a >			  ## board_ac632n_demo.c:422:43
 1e0227e:    01 fc eb ff       	r1 = r0 + -21			  ## board_ac632n_demo.c:424:29
 1e02282:    41 04             	r1 = r1.b0 (u)			  ## board_ac632n_demo.c:424:29
 1e02284:    41 e0 91 80       	if (r1 > 4) goto 290 <close_gpio+0x186 : 1e023aa >			  ## board_ac632n_demo.c:424:29
 1e02288:    b0 80             	r0 += 11			  ## board_ac632n_demo.c:425:43
 1e0228a:    01 04             	r1 = r0.b0 (u)
 1e0228c:    00 a0             	r0 = sp + 0
 1e0228e:    a0 16             	call -704 <port_protect : 1e01fd0 >
 1e02290:    84 f5 00 00       	r4 = h[sp] (u)			  ## board_ac632n_demo.c:461:27
 1e02294:    00 70             	r0 = 0			  ## board_ac632n_demo.c:461:5
 1e02296:    91 70             	r1 = 9			  ## board_ac632n_demo.c:461:5
 1e02298:    42 08             	r2 = r4			  ## board_ac632n_demo.c:461:5
 1e0229a:    ae 16             	call -676 <gpio_dir : 1e01ff8 >			  ## board_ac632n_demo.c:461:5
 1e0229c:    d4 b9             	r4 = ~r4			  ## board_ac632n_demo.c:462:30
 1e0229e:    00 70             	r0 = 0			  ## board_ac632n_demo.c:462:5
 1e022a0:    91 70             	r1 = 9			  ## board_ac632n_demo.c:462:5
 1e022a2:    42 08             	r2 = r4			  ## board_ac632n_demo.c:462:5
 1e022a4:    ed 16             	call -550 <gpio_set_pu : 1e02080 >			  ## board_ac632n_demo.c:462:5
 1e022a6:    00 70             	r0 = 0			  ## board_ac632n_demo.c:463:5
 1e022a8:    91 70             	r1 = 9			  ## board_ac632n_demo.c:463:5
 1e022aa:    42 08             	r2 = r4			  ## board_ac632n_demo.c:463:5
 1e022ac:    0e 17             	call -484 <gpio_set_pd : 1e020ca >			  ## board_ac632n_demo.c:463:5
 1e022ae:    00 70             	r0 = 0			  ## board_ac632n_demo.c:464:5
 1e022b0:    91 70             	r1 = 9			  ## board_ac632n_demo.c:464:5
 1e022b2:    42 08             	r2 = r4			  ## board_ac632n_demo.c:464:5
 1e022b4:    4e 17             	call -356 <gpio_die : 1e02152 >			  ## board_ac632n_demo.c:464:5
 1e022b6:    00 70             	r0 = 0			  ## board_ac632n_demo.c:465:5
 1e022b8:    91 70             	r1 = 9			  ## board_ac632n_demo.c:465:5
 1e022ba:    42 08             	r2 = r4			  ## board_ac632n_demo.c:465:5
 1e022bc:    8e 17             	call -228 <gpio_dieh : 1e021da >			  ## board_ac632n_demo.c:465:5
 1e022be:    84 f5 02 00       	r4 = h[sp+2] (u)			  ## board_ac632n_demo.c:467:28
 1e022c2:    00 71             	r0 = 16			  ## board_ac632n_demo.c:467:5
 1e022c4:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:467:5
 1e022c6:    42 08             	r2 = r4			  ## board_ac632n_demo.c:467:5
 1e022c8:    97 16             	call -722 <gpio_dir : 1e01ff8 >			  ## board_ac632n_demo.c:467:5
 1e022ca:    d4 b9             	r4 = ~r4			  ## board_ac632n_demo.c:468:31
 1e022cc:    00 71             	r0 = 16			  ## board_ac632n_demo.c:468:5
 1e022ce:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:468:5
 1e022d0:    42 08             	r2 = r4			  ## board_ac632n_demo.c:468:5
 1e022d2:    d6 16             	call -596 <gpio_set_pu : 1e02080 >			  ## board_ac632n_demo.c:468:5
 1e022d4:    00 71             	r0 = 16			  ## board_ac632n_demo.c:469:5
 1e022d6:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:469:5
 1e022d8:    42 08             	r2 = r4			  ## board_ac632n_demo.c:469:5
 1e022da:    f7 16             	call -530 <gpio_set_pd : 1e020ca >			  ## board_ac632n_demo.c:469:5
 1e022dc:    00 71             	r0 = 16			  ## board_ac632n_demo.c:470:5
 1e022de:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:470:5
 1e022e0:    42 08             	r2 = r4			  ## board_ac632n_demo.c:470:5
 1e022e2:    37 17             	call -402 <gpio_die : 1e02152 >			  ## board_ac632n_demo.c:470:5
 1e022e4:    00 71             	r0 = 16			  ## board_ac632n_demo.c:471:5
 1e022e6:    a1 70             	r1 = 10			  ## board_ac632n_demo.c:471:5
 1e022e8:    42 08             	r2 = r4			  ## board_ac632n_demo.c:471:5
 1e022ea:    77 17             	call -274 <gpio_dieh : 1e021da >			  ## board_ac632n_demo.c:471:5
 1e022ec:    c1 ff 00 18 1e 00 	r1 = 1972224 <uECC_vli_cmp_unsafe+0xDA804 : 1e1800 >
 1e022f2:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e022f4:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e022f6:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e022f8:    10 fc 00 3c       	r0 = r1 + 15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e022fc:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02300:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02302:    72 b2             	r2 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02304:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02306:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e02308:    72 b3             	r2 &= 4294967231			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e0230a:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e0230c:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0230e:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02310:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02312:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02316:    00 f4 04 09       	[r0 + 0] |= 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0231a:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0231c:    72 b4             	r2 &= 4294967039			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0231e:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e02320:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e02322:    72 b5             	r2 &= 4294966271			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e02324:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e02326:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02328:    f2 b2             	r2 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0232a:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0232c:    02 40             	r2 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e0232e:    f2 b3             	r2 &= 4294967167			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e02330:    0a 40             	[r0 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e02332:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02334:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02336:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02338:    00 f4 50 0a       	[r0 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0233c:    00 f4 08 09       	[r0 + 0] |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e02340:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e02342:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e02344:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e02346:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e02348:    f1 b5             	r1 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e0234a:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e0234c:    01 fc 00 06       	r1 = r0 + 1536
 1e02350:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02352:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02354:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02356:    09 f4 50 0a       	[r0 + 36] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0235a:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0235c:    72 b2             	r2 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0235e:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02360:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e02362:    72 b3             	r2 &= 4294967231			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e02364:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e02366:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02368:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0236a:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0236c:    09 f4 50 0a       	[r0 + 36] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02370:    09 f4 04 09       	[r0 + 36] |= 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02374:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e02376:    72 b4             	r2 &= 4294967039			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e02378:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0237a:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e0237c:    72 b5             	r2 &= 4294966271			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e0237e:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e02380:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02382:    f2 b2             	r2 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02384:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e02386:    92 40             	r2 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e02388:    f2 b3             	r2 &= 4294967167			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e0238a:    9a 40             	[r0 + 36] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:167:30
 1e0238c:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0238e:    72 b0             	r2 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02390:    0a 42             	[r1 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02392:    09 f4 50 0a       	[r0 + 36] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e02396:    09 f4 08 09       	[r0 + 36] |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:246:23
 1e0239a:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0239c:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e0239e:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e023a0:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e023a2:    f1 b5             	r1 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e023a4:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e023a6:    04 0a             	sp += 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:207:30
 1e023a8:    54 01             	{pc, r4} = [sp++]			  ## board_ac632n_demo.c:507:1
 1e023aa:    60 8e             	r0 += -26			  ## board_ac632n_demo.c:427:12
 1e023ac:    30 e0 70 8f       	if (r0 > 3) goto -288 <close_gpio+0x6C : 1e02290 >			  ## board_ac632n_demo.c:427:12
 1e023b0:    a0 00             	tbb [r0]


.GJTIS243_0_0_:
 1e023b2:    02     < 2 : 0x2 >
 1e023b3:    02     < 2 : 0x2 >
 1e023b4:    02     < 2 : 0x2 >
 1e023b5:    02     < 2 : 0x2 >
 1e023b6:    00 70             	r0 = 0
 1e023b8:    90 f5 06 00       	h[sp+6] = r0
 1e023bc:    69 1f             	goto -302 <close_gpio+0x6C : 1e02290 >


sleep_enter_callback:
 1e023be:    34 00             	[--sp] = rets			  ## board_ac632n_demo.c:618:0
 1e023c0:    10 e0 01 00       	if (r0 == 1) goto 2 <sleep_enter_callback+0x8 : 1e023c6 >			  ## board_ac632n_demo.c:618:0
 1e023c4:    2f 17             	call -418 <close_gpio : 1e02224 >			  ## board_ac632n_demo.c:625:3
 1e023c6:    30 00             	pc = [sp++]			  ## board_ac632n_demo.c:627:1


sleep_exit_callback:
 1e023c8:    20 00             	rts			  ## board_ac632n_demo.c:612:0


mask_softflag_config:
 1e023ca:    c1 ff 30 18 1a 00 	r1 = 1710128 <uECC_vli_cmp_unsafe+0x9A834 : 1a1830 >			  ## power_hw.c:1274:0
 1e023d0:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:1275:17
 1e023d2:    12 b3             	r2 |= 64			  ## power_hw.c:1275:17
 1e023d4:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:1275:17
 1e023d6:    02 60             	r2 = b[r0 + 0] (u)			  ## power_hw.c:1276:38
 1e023d8:    8a 62             	b[r1 + 8] = r2			  ## power_hw.c:1276:20
 1e023da:    12 60             	r2 = b[r0 + 1] (u)			  ## power_hw.c:1277:38
 1e023dc:    9a 62             	b[r1 + 9] = r2			  ## power_hw.c:1277:20
 1e023de:    22 60             	r2 = b[r0 + 2] (u)			  ## power_hw.c:1278:38
 1e023e0:    aa 63             	b[r1 + 26] = r2			  ## power_hw.c:1278:20
 1e023e2:    30 60             	r0 = b[r0 + 3] (u)			  ## power_hw.c:1279:38
 1e023e4:    b8 63             	b[r1 + 27] = r0			  ## power_hw.c:1279:20
 1e023e6:    20 00             	rts			  ## power_hw.c:1280:1


board_set_soft_poweroff:
 1e023e8:    34 00             	[--sp] = rets			  ## board_ac632n_demo.c:596:0
 1e023ea:    fe 0b             	sp += -4			  ## board_ac632n_demo.c:596:0
 1e023ec:    c0 ff 14 54 1e 00 	r0 = 1987604 <uECC_vli_cmp_unsafe+0xDE418 : 1e5414 >			  ## board_ac632n_demo.c:325:58
 1e023f2:    00 40             	r0 = [r0 + 0]			  ## board_ac632n_demo.c:325:58
 1e023f4:    80 d3             	r0 = r0 >> 14			  ## board_ac632n_demo.c:325:46
 1e023f6:    20 fd 04 09       	r0 = r0 & 4			  ## board_ac632n_demo.c:325:46
 1e023fa:    d0 f5 00 00       	b[sp] = r0			  ## board_ac632n_demo.c:325:46
 1e023fe:    00 70             	r0 = 0			  ## board_ac632n_demo.c:331:37
 1e02400:    d0 f5 01 00       	b[sp+1] = r0			  ## board_ac632n_demo.c:331:37
 1e02404:    d0 f5 02 00       	b[sp+2] = r0			  ## board_ac632n_demo.c:334:38
 1e02408:    d0 f5 03 00       	b[sp+3] = r0			  ## board_ac632n_demo.c:337:38
 1e0240c:    00 a0             	r0 = sp + 0			  ## board_ac632n_demo.c:337:38
 1e0240e:    dd 17             	call -70 <mask_softflag_config : 1e023ca >			  ## board_ac632n_demo.c:338:5
 1e02410:    09 17             	call -494 <close_gpio : 1e02224 >			  ## board_ac632n_demo.c:604:2
 1e02412:    02 0a             	sp += 4			  ## board_ac632n_demo.c:604:2
 1e02414:    30 00             	pc = [sp++]			  ## board_ac632n_demo.c:605:1


aport_wakeup_callback:
 1e02416:    20 00             	rts			  ## board_ac632n_demo.c:649:0


port_wakeup_callback:
 1e02418:    20 00             	rts			  ## board_ac632n_demo.c:635:0


uart_enter_deepsleep:
 1e0241a:    c0 ff 14 56 1e 00 	r0 = 1988116 <uECC_vli_cmp_unsafe+0xDE618 : 1e5614 >			  ## uart.c:384:0
 1e02420:    00 40             	r0 = [r0 + 0]			  ## uart.c:385:28
 1e02422:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## uart.c:386:17
 1e02428:    38 43             	[r1 + 76] = r0			  ## uart.c:385:17
 1e0242a:    20 fb 71 04       	r0 = 1974272			  ## uart.c:386:29
 1e0242e:    00 40             	r0 = [r0 + 0]			  ## uart.c:386:29
 1e02430:    48 43             	[r1 + 80] = r0			  ## uart.c:386:17
 1e02432:    20 00             	rts			  ## uart.c:387:1


uart_exit_deepsleep:
 1e02434:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## uart.c:390:0
 1e0243a:    31 41             	r1 = [r0 + 76]			  ## uart.c:391:24
 1e0243c:    c2 ff 08 50 1e 00 	r2 = 1986568 <uECC_vli_cmp_unsafe+0xDE00C : 1e5008 >			  ## uart.c:391:24
 1e02442:    11 f6 0c 26       	[r2 + 1548] = r1			  ## uart.c:391:22
 1e02446:    01 44             	r1 = [r2 + 0]			  ## uart.c:392:19
 1e02448:    f1 b2             	r1 &= 4294967263			  ## uart.c:392:19
 1e0244a:    09 44             	[r2 + 0] = r1			  ## uart.c:392:19
 1e0244c:    20 fb 71 14       	r1 = 1974272			  ## uart.c:392:19
 1e02450:    c2 f4 ff 1f       	[r1 + 8] = 4294967295			  ## uart.c:393:20
 1e02454:    40 41             	r0 = [r0 + 80]			  ## uart.c:394:22
 1e02456:    08 42             	[r1 + 0] = r0			  ## uart.c:394:20
 1e02458:    00 f4 34 1a       	[r1 + 0] |= 13312			  ## uart.c:395:20
 1e0245c:    20 00             	rts			  ## uart.c:398:1


clock_critical_enter.810:
 1e0245e:    20 00             	rts			  ## uart.c:197:0


clock_critical_exit.811:
 1e02460:    20 00             	rts			  ## uart.c:200:0


exception_analyze:
 1e02462:    60 f3 00 00       	trigger			  ## debug.c:896:0
 1e02466:    c0 ff 4a 18 1a 00 	r0 = 1710154 <uECC_vli_cmp_unsafe+0x9A84E : 1a184a >			  ## debug.c:888:18
 1e0246c:    b1 7a             	r1 = 171			  ## debug.c:888:18
 1e0246e:    09 60             	b[r0 + 0] = r1			  ## debug.c:888:18
 1e02470:    d0 f3 46 07       	goto 2100876 <p33_soft_reset : 3300 >			  ## cpu.h:148:5


_vm_area_erase:
 1e02474:    78 01             	[--sp] = {rets, r8-r4}			  ## vm.c:268:0
 1e02476:    08 08             	r8 = r0			  ## vm.c:268:0
 1e02478:    10 40             	r0 = [r0 + 4]			  ## vm.c:268:0
 1e0247a:    c1 ff 60 26 00 00 	r1 = 9824 <vm_obj : 2660 >			  ## vm.c:273:9
 1e02480:    01 f9 6d 11       	r1 = b[r1 + 365] (u)			  ## vm.c:273:9
 1e02484:    05 f6 00 80       	r5 = [r8 + 0]			  ## vm.c:269:33
 1e02488:    22 f3 12 10       	if ((r1 & 4) != 0) goto 36 <_vm_area_erase+0x3C : 1e024b0 >
 1e0248c:    00 d3             	r0 = r0 >> 12			  ## vm.c:284:30
 1e0248e:    26 04             	r6 = r0.l (u)			  ## vm.c:285:29
 1e02490:    1e 2c             	if (r6 == 0) goto 60 <_vm_area_erase+0x5A : 1e024ce >			  ## vm.c:285:29
 1e02492:    17 70             	r7 = 1
 1e02494:    04 fb 00 f0       	r4 = -4096 <bank_code_load_addr+0x1E4754 : 1fff000 >
 1e02498:    e2 fd 40 15       	r1 = r5 & r4
 1e0249c:    80 7c             	r0 = 200			  ## vm.c:1458:5
 1e0249e:    bf f3 e3 f2       	call -6714 <norflash_ioctl : 1e00a68 >			  ## vm.c:1458:5
 1e024a2:    e0 05             	r0 = r7.l (u)			  ## vm.c:285:23
 1e024a4:    17 80             	r7 += 1			  ## vm.c:285:9
 1e024a6:    55 fc 00 10       	r5 = r5 + 4096			  ## vm.c:291:24
 1e024aa:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x24 : 1e02498 >
 1e024ae:    0f 18             	goto 30 <_vm_area_erase+0x5A : 1e024ce >
 1e024b0:    00 d2             	r0 = r0 >> 8			  ## vm.c:274:30
 1e024b2:    26 04             	r6 = r0.l (u)			  ## vm.c:275:29
 1e024b4:    0c 2c             	if (r6 == 0) goto 24 <_vm_area_erase+0x5A : 1e024ce >			  ## vm.c:275:29
 1e024b6:    14 70             	r4 = 1
 1e024b8:    31 fd ff 59       	r1 = r5 & 4294967040
 1e024bc:    c0 7c             	r0 = 204			  ## vm.c:1458:5
 1e024be:    bf f3 d3 f2       	call -6746 <norflash_ioctl : 1e00a68 >			  ## vm.c:1458:5
 1e024c2:    20 05             	r0 = r4.l (u)			  ## vm.c:275:23
 1e024c4:    14 80             	r4 += 1			  ## vm.c:275:9
 1e024c6:    55 fc 00 01       	r5 = r5 + 256			  ## vm.c:281:24
 1e024ca:    60 f2 f5 3f       	if (r0 < r6) goto -22 <_vm_area_erase+0x44 : 1e024b8 >
 1e024ce:    00 70             	r0 = 0			  ## vm.c:295:30
 1e024d0:    10 f7 08 80       	h[r8 + 8] = r0			  ## vm.c:295:30
 1e024d4:    58 01             	{pc, r8-r4} = [sp++]			  ## vm.c:295:30


vm_reset:
 1e024d6:    75 01             	[--sp] = {rets, r5, r4}			  ## vm.c:596:0
 1e024d8:    fe 0b             	sp += -4			  ## vm.c:596:0
 1e024da:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:599:9
 1e024e0:    08 02             	[sp] = r0			  ## vm.c:599:9
 1e024e2:    c4 ff 60 26 00 00 	r4 = 9824 <vm_obj : 2660 >			  ## vm.c:609:5
 1e024e8:    40 08             	r0 = r4			  ## vm.c:601:5
 1e024ea:    c4 17             	call -120 <_vm_area_erase : 1e02474 >			  ## vm.c:601:5
 1e024ec:    c0 98             	r0 = r4 + 12			  ## vm.c:602:5
 1e024ee:    c2 17             	call -124 <_vm_area_erase : 1e02474 >			  ## vm.c:602:5
 1e024f0:    45 fc 68 01       	r5 = r4 + 360			  ## vm.c:602:5
 1e024f4:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:604:19
 1e024f6:    f0 b0             	r0 &= 4294967293			  ## vm.c:604:19
 1e024f8:    58 6a             	b[r5 + 5] = r0			  ## vm.c:604:19
 1e024fa:    02 48             	r2 = [r4 + 0]			  ## vm.c:606:38
 1e024fc:    00 a0             	r0 = sp + 0
 1e024fe:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e02500:    bf f3 1a f4       	call -6092 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e02504:    50 6a             	r0 = b[r5 + 5] (u)			  ## vm.c:607:19
 1e02506:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:607:19
 1e0250a:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:607:19
 1e0250e:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:607:19
 1e02512:    40 80             	r0 += 4			  ## vm.c:607:46
 1e02514:    08 4a             	[r5 + 0] = r0			  ## vm.c:607:17
 1e02516:    80 99             	r0 = r4 + 24			  ## vm.c:609:5
 1e02518:    01 70             	r1 = 0			  ## vm.c:609:5
 1e0251a:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:609:5
 1e0251e:    98 f3 e7 24       	call 3164622 <memset : 106ef0 >			  ## vm.c:609:5
 1e02522:    02 0a             	sp += 4			  ## vm.c:609:5
 1e02524:    55 01             	{pc, r5, r4} = [sp++]			  ## vm.c:609:5


vm_area_check:
 1e02526:    34 00             	[--sp] = rets			  ## vm.c:549:0
 1e02528:    13 08             	r3 = r1			  ## vm.c:549:0
 1e0252a:    90 f3 1b 09       	call 2101814 <flash_addr2cpu_addr : 3764 >			  ## vm.c:550:20
 1e0252e:    08 26             	if (r3 == 0) goto 16 <vm_area_check+0x1A : 1e02540 >
 1e02530:    01 60             	r1 = b[r0 + 0] (u)			  ## vm_commom.c:7:13
 1e02532:    10 80             	r0 += 1			  ## vm_commom.c:7:15
 1e02534:    f3 8f             	r3 += -1			  ## vm_commom.c:6:15
 1e02536:    00 ff ff 10 f9 ff 	if (r1 == 255) goto -14 <vm_area_check+0x8 : 1e0252e >
 1e0253c:    00 70             	r0 = 0
 1e0253e:    30 00             	pc = [sp++]			  ## vm.c:557:1
 1e02540:    10 70             	r0 = 1
 1e02542:    30 00             	pc = [sp++]			  ## vm.c:557:1


_vm_defrag:
 1e02544:    7f 01             	[--sp] = {rets, r15-r4}			  ## vm.c:428:0
 1e02546:    fc 0b             	sp += -8			  ## vm.c:428:0
 1e02548:    c8 ff 60 26 00 00 	r8 = 9824 <vm_obj : 2660 >			  ## vm.c:428:0
 1e0254e:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:437:9
 1e02552:    40 d0             	r0 = r0 >> 1			  ## vm.c:437:9
 1e02554:    19 70             	r9 = 1			  ## vm.c:437:9
 1e02556:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:437:9
 1e0255a:    ca 70             	r10 = 12			  ## vm.c:437:9
 1e0255c:    81 08             	r1 = r8			  ## vm.c:437:9
 1e0255e:    80 fe a0 10       	r1 += r0 * r10			  ## vm.c:437:9
 1e02562:    41 52             	r1 = h[r1 + 8] (u)			  ## vm.c:437:9
 1e02564:    b2 32             	if (r1 != 0) goto 356 <_vm_defrag+0x186 : 1e026ca >			  ## vm.c:437:9
 1e02566:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:446:19
 1e0256a:    81 f6 00 08       	r1 = [r0+r8]			  ## vm.c:446:19
 1e0256e:    41 80             	r1 += 4			  ## vm.c:446:47
 1e02570:    11 f6 68 81       	[r8 + 360] = r1			  ## vm.c:446:17
 1e02574:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:449:38
 1e02578:    c0 ff 77 bb ee dd 	r0 = 3723410295 <bank_code_load_addr+0xD12CB : 1eebb77 >			  ## vm.c:448:14
 1e0257e:    08 02             	[sp] = r0			  ## vm.c:448:14
 1e02580:    00 a0             	r0 = sp + 0			  ## vm.c:448:14
 1e02582:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e02584:    bf f3 d8 f3       	call -6224 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e02588:    0b 70             	r11 = 0
 1e0258a:    f0 fd 08 0b       	r0 = r11 << 1			  ## vm.c:481:17
 1e0258e:    80 fb 80 c0       	r12 = r0 + r8			  ## vm.c:481:17
 1e02592:    00 f7 18 c0       	r0 = h[r12 + 24] (u)			  ## vm.c:481:17
 1e02596:    67 20             	if (r0 == 0) goto 206 <_vm_defrag+0x122 : 1e02666 >			  ## vm.c:481:17
 1e02598:    8d fc 68 01       	r13 = r8 + 360
 1e0259c:    01 f9 05 d0       	r1 = b[r13 + 5] (u)			  ## vm.c:483:54
 1e025a0:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:483:54
 1e025a4:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:483:54
 1e025a8:    81 f6 00 18       	r1 = [r1+r8]			  ## vm.c:483:54
 1e025ac:    02 b2             	r2 = r1 + r0			  ## vm.c:483:52
 1e025ae:    40 a0             	r0 = sp + 4
 1e025b0:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e025b2:    bf f3 1f f2       	call -7106 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e025b6:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:486:68
 1e025ba:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:486:68
 1e025be:    11 fd 01 09       	r1 = r0 ^ 1			  ## vm.c:486:68
 1e025c2:    82 08             	r2 = r8			  ## vm.c:486:68
 1e025c4:    80 fe a0 21       	r2 += r1 * r10			  ## vm.c:486:68
 1e025c8:    01 44             	r1 = [r2 + 0]			  ## vm.c:486:68
 1e025ca:    12 44             	r2 = [r2 + 4]			  ## vm.c:486:98
 1e025cc:    c3 f5 07 00       	r3 = b[sp+7] (u)			  ## vm.c:484:23
 1e025d0:    c5 f5 06 00       	r5 = b[sp+6] (u)			  ## vm.c:484:23
 1e025d4:    04 f6 00 d0       	r4 = [r13 + 0]			  ## vm.c:486:21
 1e025d8:    12 09             	r2 += r1			  ## vm.c:486:96
 1e025da:    c8 fd 40 53       	r5 <= insert(r3, p:8, l:8)			  ## vm.c:484:23
 1e025de:    29 d1             	r1 = r5 >> 4			  ## vm.c:484:23
 1e025e0:    43 b8             	r3 = r4 + r1			  ## vm.c:486:33
 1e025e2:    43 80             	r3 += 4			  ## vm.c:486:60
 1e025e4:    23 f2 70 80       	if (r3 > r2) goto 224 <_vm_defrag+0x184 : 1e026c8 >			  ## vm.c:486:60
 1e025e8:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:499:43
 1e025ec:    85 f6 00 08       	r5 = [r0+r8]			  ## vm.c:499:43
 1e025f0:    07 f7 18 c0       	r7 = h[r12 + 24] (u)			  ## vm.c:499:72
 1e025f4:    00 fb 00 01       	r0 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:344:15
 1e025f8:    4e 92             	r14 = r1 + 4			  ## vm.c:499:114
 1e025fa:    80 f3 31 40       	call 32866 <malloc : 1e0a660 >			  ## vm.c:344:15
 1e025fe:    0f 08             	r15 = r0			  ## vm.c:344:15
 1e02600:    1f 20             	if (r0 == 0) goto 62 <_vm_defrag+0xFC : 1e02640 >
 1e02602:    e6 08             	r6 = r14			  ## vm.c:348:21
 1e02604:    03 ff 00 61 02 00 	if (r6 < 256) goto 4 <_vm_defrag+0xCA : 1e0260e >			  ## vm.c:348:21
 1e0260a:    06 fb 00 01       	r6 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:348:21
 1e0260e:    57 09             	r7 += r5			  ## vm.c:499:70
 1e02610:    e5 08             	r5 = r14
 1e02612:    f0 08             	r0 = r15			  ## vm.c:1522:5
 1e02614:    61 08             	r1 = r6			  ## vm.c:1522:5
 1e02616:    72 08             	r2 = r7			  ## vm.c:1522:5
 1e02618:    bf f3 ec f1       	call -7208 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e0261c:    f0 08             	r0 = r15			  ## vm.c:1504:5
 1e0261e:    61 08             	r1 = r6			  ## vm.c:1504:5
 1e02620:    42 08             	r2 = r4			  ## vm.c:1504:5
 1e02622:    bf f3 89 f3       	call -6382 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e02626:    67 09             	r7 += r6			  ## vm.c:357:22
 1e02628:    64 09             	r4 += r6			  ## vm.c:356:22
 1e0262a:    a5 bb             	r5 = r5 - r6			  ## vm.c:355:17
 1e0262c:    56 08             	r6 = r5			  ## vm.c:348:21
 1e0262e:    03 ff 00 51 02 00 	if (r5 < 256) goto 4 <_vm_defrag+0xF4 : 1e02638 >
 1e02634:    06 fb 00 01       	r6 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:348:21
 1e02638:    ec 3d             	if (r6 != 0) goto -40 <_vm_defrag+0xCE : 1e02612 >
 1e0263a:    f0 08             	r0 = r15			  ## vm.c:359:9
 1e0263c:    80 f3 23 40       	call 32838 <free : 1e0a686 >			  ## vm.c:359:9
 1e02640:    00 f9 05 d0       	r0 = b[r13 + 5] (u)			  ## vm.c:500:49
 1e02644:    40 d0             	r0 = r0 >> 1			  ## vm.c:500:49
 1e02646:    e3 fd 00 09       	r0 = r9 & ~r0			  ## vm.c:500:49
 1e0264a:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:500:49
 1e0264e:    80 f6 00 08       	r0 = [r0+r8]			  ## vm.c:500:49
 1e02652:    01 f6 00 d0       	r1 = [r13 + 0]			  ## vm.c:500:35
 1e02656:    20 b2             	r0 = r1 - r0			  ## vm.c:500:47
 1e02658:    10 f7 18 c0       	h[r12 + 24] = r0			  ## vm.c:500:33
 1e0265c:    00 f6 00 d0       	r0 = [r13 + 0]			  ## vm.c:501:29
 1e02660:    e0 09             	r0 += r14			  ## vm.c:501:29
 1e02662:    10 f6 00 d0       	[r13 + 0] = r0			  ## vm.c:501:29
 1e02666:    1b 80             	r11 += 1			  ## vm.c:451:46
 1e02668:    0b e8 8f 3f       	if (r11 < 128) goto -226 <_vm_defrag+0x46 : 1e0258a >			  ## vm.c:451:46
 1e0266c:    85 fc 6d 01       	r5 = r8 + 365
 1e02670:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:514:38
 1e02672:    40 d0             	r0 = r0 >> 1			  ## vm.c:514:38
 1e02674:    11 70             	r1 = 1			  ## vm.c:514:38
 1e02676:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:514:38
 1e0267a:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:514:38
 1e0267e:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:514:38
 1e02682:    c0 ff 55 aa ee dd 	r0 = 3723405909 <bank_code_load_addr+0xD01A9 : 1eeaa55 >			  ## vm.c:513:14
 1e02688:    08 02             	[sp] = r0			  ## vm.c:513:14
 1e0268a:    04 a0             	r4 = sp + 0			  ## vm.c:513:14
 1e0268c:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e0268e:    40 08             	r0 = r4			  ## vm.c:1504:5
 1e02690:    bf f3 52 f3       	call -6492 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e02694:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:517:37
 1e02696:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## vm.c:517:37
 1e0269a:    c2 70             	r2 = 12			  ## vm.c:517:37
 1e0269c:    80 08             	r0 = r8			  ## vm.c:517:25
 1e0269e:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:517:25
 1e026a2:    e8 16             	call -560 <_vm_area_erase : 1e02474 >			  ## vm.c:517:9
 1e026a4:    00 6a             	r0 = b[r5 + 0] (u)			  ## vm.c:530:21
 1e026a6:    b0 b0             	r0 ^= 2			  ## vm.c:530:19
 1e026a8:    08 6a             	b[r5 + 0] = r0			  ## vm.c:530:19
 1e026aa:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:533:38
 1e026ae:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:533:38
 1e026b2:    82 f6 00 08       	r2 = [r0+r8]			  ## vm.c:533:38
 1e026b6:    c0 ff 55 aa aa 55 	r0 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:532:14
 1e026bc:    08 02             	[sp] = r0			  ## vm.c:532:14
 1e026be:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e026c0:    40 08             	r0 = r4			  ## vm.c:1504:5
 1e026c2:    bf f3 39 f3       	call -6542 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e026c6:    01 18             	goto 2 <_vm_defrag+0x186 : 1e026ca >
 1e026c8:    06 17             	call -500 <vm_reset : 1e024d6 >			  ## vm.c:489:21
 1e026ca:    04 0a             	sp += 8
 1e026cc:    5f 01             	{pc, r15-r4} = [sp++]


vm_warning_line_check:
 1e026ce:    c0 ff 60 26 00 00 	r0 = 9824 <vm_obj : 2660 >			  ## vm.c:567:0
 1e026d4:    01 fc 68 01       	r1 = r0 + 360			  ## vm.c:570:33
 1e026d8:    52 62             	r2 = b[r1 + 5] (u)			  ## vm.c:570:33
 1e026da:    81 fd 08 22       	r2 = uextra(r2, p:1, l:1)			  ## vm.c:570:33
 1e026de:    c3 70             	r3 = 12			  ## vm.c:570:33
 1e026e0:    80 fe 30 02       	r0 += r2 * r3			  ## vm.c:570:33
 1e026e4:    12 40             	r2 = [r0 + 4]			  ## vm.c:570:33
 1e026e6:    43 62             	r3 = b[r1 + 4] (u)			  ## vm.c:570:23
 1e026e8:    d2 0e             	r2 = r2 * r3			  ## vm.c:570:31
 1e026ea:    00 40             	r0 = [r0 + 0]			  ## vm.c:580:24
 1e026ec:    01 42             	r1 = [r1 + 0]			  ## vm.c:580:9
 1e026ee:    43 76             	r3 = 100			  ## vm.c:571:17
 1e026f0:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## vm.c:571:17
 1e026f4:    02 09             	r2 += r0			  ## vm.c:580:51
 1e026f6:    10 70             	r0 = 1			  ## vm.c:580:51
 1e026f8:    21 f2 01 80       	if (r1 > r2) goto 2 <vm_warning_line_check+0x30 : 1e026fe >			  ## vm.c:580:51
 1e026fc:    00 70             	r0 = 0			  ## vm.c:580:21
 1e026fe:    20 00             	rts			  ## vm.c:585:1


syscfg_vm_init:
 1e02700:    7c 01             	[--sp] = {rets, r12-r4}			  ## vm.c:1645:0
 1e02702:    f8 0b             	sp += -16			  ## vm.c:1645:0
 1e02704:    c6 ff 04 23 00 00 	r6 = 8964 <flash_info+0x20 : 2304 >			  ## vm_sfc.c:1432:9
 1e0270a:    84 9d             	r4 = r6 + 24			  ## vm_sfc.c:1385:5
 1e0270c:    f1 07             	r1 = -1			  ## vm_sfc.c:1385:5
 1e0270e:    40 08             	r0 = r4			  ## vm_sfc.c:1385:5
 1e02710:    98 f3 88 23       	call 3163920 <os_mutex_pend : 106e24 >			  ## vm_sfc.c:1385:5
 1e02714:    15 4c             	r5 = [r6 + 4]			  ## vm_sfc.c:1432:9
 1e02716:    07 6c             	r7 = b[r6 + 0] (u)			  ## vm_sfc.c:1432:9
 1e02718:    36 4c             	r6 = [r6 + 12]			  ## vm_sfc.c:1432:9
 1e0271a:    40 08             	r0 = r4			  ## vm_sfc.c:1440:5
 1e0271c:    98 f3 84 23       	call 3163912 <os_mutex_post : 106e28 >			  ## vm_sfc.c:1440:5
 1e02720:    23 ff 40 6a 02 00 	if (r6 < 16384) goto 4 <syscfg_vm_init+0x2A : 1e0272a >			  ## vm_sfc.c:1440:5
 1e02726:    06 fb 00 40       	r6 = 16384 <check_flash_type+0x4C : 4000 >
 1e0272a:    c8 ff 60 26 00 00 	r8 = 9824 <vm_obj : 2660 >
 1e02730:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:234:9
 1e02734:    20 f3 24 00       	if ((r0 & 1) != 0) goto 72 <syscfg_vm_init+0x80 : 1e02780 >			  ## vm.c:234:9
 1e02738:    03 ff 00 62 21 00 	if (r6 < 512) goto 66 <syscfg_vm_init+0x80 : 1e02780 >
 1e0273e:    01 70             	r1 = 0
 1e02740:    12 70             	r2 = 1
 1e02742:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x48 : 1e02748 >
 1e02746:    02 70             	r2 = 0			  ## vm.c:1657:18
 1e02748:    92 c0             	r2 = r2 << 2			  ## vm.c:849:18
 1e0274a:    17 e0 01 00       	if (r7 == 1) goto 2 <syscfg_vm_init+0x50 : 1e02750 >			  ## vm.c:849:18
 1e0274e:    21 08             	r1 = r2			  ## vm.c:856:29
 1e02750:    b3 d3             	r3 = r6 >> 14			  ## vm.c:856:40
 1e02752:    01 36             	if (r3 != 0) goto 2 <syscfg_vm_init+0x56 : 1e02756 >			  ## vm.c:856:40
 1e02754:    21 08             	r1 = r2			  ## vm.c:856:29
 1e02756:    70 b1             	r0 &= 4294967291			  ## vm.c:849:18
 1e02758:    50 b2             	r0 |= r1			  ## vm.c:856:29
 1e0275a:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:849:18
 1e0275e:    40 bd             	r0 = r6 + r5			  ## vm.c:873:30
 1e02760:    12 22             	if (r1 == 0) goto 36 <syscfg_vm_init+0x86 : 1e02786 >			  ## vm.c:873:30
 1e02762:    51 fc ff 00       	r1 = r5 + 255			  ## vm.c:872:28
 1e02766:    34 fd ff 19       	r4 = r1 & 4294967040			  ## vm.c:872:28
 1e0276a:    20 b1             	r0 = r0 - r4			  ## vm.c:873:30
 1e0276c:    01 fb 00 fe       	r1 = -512 <bank_code_load_addr+0x1E5554 : 1fffe00 >			  ## vm.c:874:55
 1e02770:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:874:55
 1e02774:    23 ff 20 5a 16 00 	if (r5 < 8192) goto 44 <syscfg_vm_init+0xA6 : 1e027a6 >
 1e0277a:    05 fb 00 20       	r5 = 8192 <btif_cfg+0x4C : 2000 >			  ## vm.c:877:13
 1e0277e:    13 18             	goto 38 <syscfg_vm_init+0xA6 : 1e027a6 >
 1e02780:    90 f3 be 05       	call 2100092 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e02784:    db 18             	goto 438 <syscfg_vm_init+0x23C : 1e0293c >			  ## cpu.h:148:5
 1e02786:    51 fc ff 0f       	r1 = r5 + 4095			  ## vm.c:862:28
 1e0278a:    02 fb 00 f0       	r2 = -4096 <bank_code_load_addr+0x1E4754 : 1fff000 >			  ## vm.c:862:28
 1e0278e:    e2 fd 20 41       	r4 = r1 & r2			  ## vm.c:862:28
 1e02792:    20 b1             	r0 = r0 - r4			  ## vm.c:863:30
 1e02794:    01 fb 00 e0       	r1 = -8192 <bank_code_load_addr+0x1E3754 : 1ffe000 >			  ## vm.c:864:57
 1e02798:    e2 fd 10 50       	r5 = r0 & r1			  ## vm.c:864:57
 1e0279c:    23 ff 02 5b 02 00 	if (r5 < 131072) goto 4 <syscfg_vm_init+0xA6 : 1e027a6 >
 1e027a2:    20 fb 02 5b       	r5 = 131072			  ## vm.c:867:13
 1e027a6:    80 fc 18 00       	r0 = r8 + 24			  ## vm.c:889:5
 1e027aa:    01 70             	r1 = 0			  ## vm.c:889:5
 1e027ac:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm.c:889:5
 1e027b0:    98 f3 9e 23       	call 3163964 <memset : 106ef0 >			  ## vm.c:889:5
 1e027b4:    68 d0             	r0 = r5 >> 1			  ## vm.c:891:12
 1e027b6:    10 f6 04 80       	[r8 + 4] = r0			  ## vm.c:892:25
 1e027ba:    14 f6 00 80       	[r8 + 0] = r4			  ## vm.c:893:25
 1e027be:    10 f6 10 80       	[r8 + 16] = r0			  ## vm.c:894:25
 1e027c2:    40 09             	r0 += r4			  ## vm.c:895:35
 1e027c4:    10 f6 0c 80       	[r8 + 12] = r0			  ## vm.c:895:25
 1e027c8:    00 75             	r0 = 80			  ## vm.c:896:13
 1e027ca:    10 f9 6c 81       	b[r8 + 364] = r0			  ## vm.c:896:13
 1e027ce:    40 a0             	r0 = sp + 4			  ## vm.c:896:13
 1e027d0:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e027d2:    42 08             	r2 = r4			  ## vm.c:1522:5
 1e027d4:    bf f3 0e f1       	call -7652 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e027d8:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:915:33
 1e027dc:    00 a0             	r0 = sp + 0
 1e027de:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e027e0:    bf f3 08 f1       	call -7664 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e027e4:    10 02             	r0 = [sp+4]			  ## vm.c:919:13
 1e027e6:    e0 ef 1a d0       	ifs (r0 <= -2) goto 52 <syscfg_vm_init+0x11E : 1e0281e >
 1e027ea:    11 90             	r1 = r0 + 1
 1e027ec:    21 e0 20 30       	if (r1 < 2) goto 64 <syscfg_vm_init+0x130 : 1e02830 >
 1e027f0:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >
 1e027f6:    10 f2 25 10       	if (r0 != r1) goto 74 <syscfg_vm_init+0x144 : 1e02844 >
 1e027fa:    01 02             	r1 = [sp]			  ## vm.c:921:13
 1e027fc:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e02800:    c2 ff 55 aa ee dd 	r2 = 3723405909 <bank_code_load_addr+0xD01A9 : 1eeaa55 >			  ## vm.c:921:24
 1e02806:    21 f2 2f 10       	if (r1 != r2) goto 94 <syscfg_vm_init+0x168 : 1e02868 >			  ## vm.c:921:13
 1e0280a:    02 f6 0c 80       	r2 = [r8 + 12]			  ## vm.c:923:46
 1e0280e:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:922:24
 1e02812:    28 02             	[sp+8] = r0			  ## vm.c:922:22
 1e02814:    80 a0             	r0 = sp + 8			  ## vm.c:922:22
 1e02816:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e02818:    bf f3 8e f2       	call -6884 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e0281c:    0f 18             	goto 30 <syscfg_vm_init+0x13C : 1e0283c >
 1e0281e:    c1 ff 55 aa ee dd 	r1 = 3723405909 <bank_code_load_addr+0xD01A9 : 1eeaa55 >
 1e02824:    10 f2 10 00       	if (r0 == r1) goto 32 <syscfg_vm_init+0x148 : 1e02848 >
 1e02828:    11 fc 22 11       	r1 = r1 + 4386
 1e0282c:    10 f2 0a 10       	if (r0 != r1) goto 20 <syscfg_vm_init+0x144 : 1e02844 >
 1e02830:    00 02             	r0 = [sp]			  ## vm.c:940:13
 1e02832:    c1 ff 55 aa aa 55 	r1 = 1437248085 <uECC_vli_cmp_unsafe+0x19A3A59 : 1aaaa55 >			  ## vm.c:940:24
 1e02838:    10 f2 04 10       	if (r0 != r1) goto 8 <syscfg_vm_init+0x144 : 1e02844 >			  ## vm.c:940:24
 1e0283c:    00 f9 6d 81       	r0 = b[r8 + 365] (u)
 1e02840:    90 b0             	r0 |= 2
 1e02842:    13 18             	goto 38 <syscfg_vm_init+0x16A : 1e0286a >
 1e02844:    48 16             	call -880 <vm_reset : 1e024d6 >
 1e02846:    13 18             	goto 38 <syscfg_vm_init+0x16E : 1e0286e >
 1e02848:    84 fc 6c 01       	r4 = r8 + 364
 1e0284c:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:932:20
 1e0284e:    02 f6 00 80       	r2 = [r8 + 0]			  ## vm.c:933:42
 1e02852:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:932:20
 1e02856:    28 02             	[sp+8] = r0			  ## vm.c:932:18
 1e02858:    80 a0             	r0 = sp + 8			  ## vm.c:932:18
 1e0285a:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e0285c:    bf f3 6c f2       	call -6952 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e02860:    10 68             	r0 = b[r4 + 1] (u)			  ## vm.c:934:23
 1e02862:    f0 b0             	r0 &= 4294967293			  ## vm.c:934:23
 1e02864:    18 68             	b[r4 + 1] = r0			  ## vm.c:934:23
 1e02866:    03 18             	goto 6 <syscfg_vm_init+0x16E : 1e0286e >
 1e02868:    f0 b0             	r0 &= 4294967293			  ## vm.c:926:27
 1e0286a:    10 f9 6d 81       	b[r8 + 365] = r0
 1e0286e:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:958:45
 1e02872:    70 d0             	r0 = r6 >> 1			  ## vm.c:958:45
 1e02874:    11 70             	r1 = 1			  ## vm.c:958:45
 1e02876:    e3 fd 00 01       	r0 = r1 & ~r0			  ## vm.c:958:45
 1e0287a:    c5 70             	r5 = 12			  ## vm.c:958:45
 1e0287c:    84 08             	r4 = r8			  ## vm.c:958:62
 1e0287e:    80 fe 50 40       	r4 += r0 * r5			  ## vm.c:958:62
 1e02882:    11 48             	r1 = [r4 + 4]			  ## vm.c:958:91
 1e02884:    00 48             	r0 = [r4 + 0]			  ## vm.c:958:62
 1e02886:    4f 16             	call -866 <vm_area_check : 1e02526 >			  ## vm.c:958:18
 1e02888:    04 30             	if (r0 != 0) goto 8 <syscfg_vm_init+0x192 : 1e02892 >			  ## vm.c:958:18
 1e0288a:    40 08             	r0 = r4			  ## vm.c:960:9
 1e0288c:    f3 15             	call -1050 <_vm_area_erase : 1e02474 >			  ## vm.c:960:9
 1e0288e:    06 f9 6d 81       	r6 = b[r8 + 365] (u)			  ## vm.c:960:9
 1e02892:    81 fd 08 06       	r0 = uextra(r6, p:1, l:1)			  ## vm.c:964:69
 1e02896:    81 08             	r1 = r8			  ## vm.c:376:33
 1e02898:    80 fe 50 10       	r1 += r0 * r5			  ## vm.c:376:33
 1e0289c:    0a f6 00 10       	r10 = [r1 + 0]			  ## vm.c:376:33
 1e028a0:    10 42             	r0 = [r1 + 4]			  ## vm.c:379:50
 1e028a2:    ab fc 04 00       	r11 = r10 + 4			  ## vm.c:376:38
 1e028a6:    80 fb 00 9b       	r9 = r11 + r0			  ## vm.c:379:37
 1e028aa:    c0 a0             	r0 = sp + 12
 1e028ac:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e028ae:    b2 08             	r2 = r11			  ## vm.c:1522:5
 1e028b0:    bf f3 a0 f0       	call -7872 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e028b4:    c7 f5 0e 00       	r7 = b[sp+14] (u)			  ## vm.c:394:18
 1e028b8:    c0 f5 0f 00       	r0 = b[sp+15] (u)			  ## vm.c:394:18
 1e028bc:    cc f5 0c 00       	r12 = b[sp+12] (u)			  ## vm.c:400:13
 1e028c0:    c4 f5 0d 00       	r4 = b[sp+13] (u)			  ## vm.c:395:18
 1e028c4:    71 08             	r1 = r7			  ## vm.c:394:18
 1e028c6:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## vm.c:394:18
 1e028ca:    0d d1             	r5 = r1 >> 4			  ## vm.c:394:18
 1e028cc:    b6 fc 04 00       	r6 = r11 + 4			  ## vm.c:398:46
 1e028d0:    60 08             	r0 = r6			  ## vm.c:398:46
 1e028d2:    90 f3 47 07       	call 2100878 <flash_addr2cpu_addr : 3764 >			  ## vm.c:398:46
 1e028d6:    51 08             	r1 = r5			  ## vm.c:398:26
 1e028d8:    bf f3 70 f0       	call -7968 <CRC16 : 1e009bc >			  ## vm.c:398:26
 1e028dc:    00 04             	r0 = r0.b0 (u)			  ## vm.c:400:23
 1e028de:    0c f2 0e 10       	if (r12 != r0) goto 28 <syscfg_vm_init+0x1FE : 1e028fe >			  ## vm.c:400:23
 1e028e2:    90 fb a0 0b       	r0 = r11 - r10			  ## vm.c:401:45
 1e028e6:    39 c2             	r1 = r7 << 8			  ## vm.c:395:18
 1e028e8:    21 fd 0f 1a       	r1 = r1 & 3840			  ## vm.c:395:18
 1e028ec:    51 b8             	r1 |= r4			  ## vm.c:395:18
 1e028ee:    49 c0             	r1 = r1 << 1			  ## vm.c:401:13
 1e028f0:    81 09             	r1 += r8			  ## vm.c:401:13
 1e028f2:    8b bb             	r11 = r5 + r6			  ## vm.c:403:24
 1e028f4:    b2 fc 04 00       	r2 = r11 + 4			  ## vm.c:405:28
 1e028f8:    c8 52             	h[r1 + 24] = r0			  ## vm.c:401:32
 1e028fa:    92 f2 d6 3f       	if (r2 < r9) goto -84 <syscfg_vm_init+0x1AA : 1e028aa >			  ## vm.c:401:32
 1e028fe:    1b f6 68 81       	[r8 + 360] = r11			  ## vm.c:964:17
 1e02902:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:966:45
 1e02906:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:966:45
 1e0290a:    c1 70             	r1 = 12			  ## vm.c:966:45
 1e0290c:    82 08             	r2 = r8			  ## vm.c:966:74
 1e0290e:    80 fe 10 20       	r2 += r0 * r1			  ## vm.c:966:74
 1e02912:    00 44             	r0 = [r2 + 0]			  ## vm.c:966:74
 1e02914:    11 44             	r1 = [r2 + 4]			  ## vm.c:966:103
 1e02916:    90 fb b0 00       	r0 = r0 - r11			  ## vm.c:966:101
 1e0291a:    01 09             	r1 += r0			  ## vm.c:966:130
 1e0291c:    b0 08             	r0 = r11			  ## vm.c:966:18
 1e0291e:    03 16             	call -1018 <vm_area_check : 1e02526 >			  ## vm.c:966:18
 1e02920:    01 30             	if (r0 != 0) goto 2 <syscfg_vm_init+0x224 : 1e02924 >			  ## vm.c:966:18
 1e02922:    10 16             	call -992 <_vm_defrag : 1e02544 >			  ## vm.c:968:9
 1e02924:    d4 16             	call -600 <vm_warning_line_check : 1e026ce >			  ## vm.c:972:9
 1e02926:    01 20             	if (r0 == 0) goto 2 <syscfg_vm_init+0x22A : 1e0292a >			  ## vm.c:972:9
 1e02928:    0d 16             	call -998 <_vm_defrag : 1e02544 >			  ## vm.c:974:9
 1e0292a:    80 fc 18 01       	r0 = r8 + 280			  ## vm.c:977:5
 1e0292e:    98 f3 75 22       	call 3163370 <os_mutex_create : 106e1c >			  ## vm.c:977:5
 1e02932:    00 f9 6d 81       	r0 = b[r8 + 365] (u)			  ## vm.c:979:18
 1e02936:    10 b0             	r0 |= 1			  ## vm.c:979:18
 1e02938:    10 f9 6d 81       	b[r8 + 365] = r0			  ## vm.c:979:18
 1e0293c:    00 70             	r0 = 0			  ## vm.c:1682:5
 1e0293e:    08 0a             	sp += 16			  ## vm.c:1682:5
 1e02940:    5c 01             	{pc, r12-r4} = [sp++]			  ## vm.c:1682:5


vm_check_id:
 1e02942:    f0 8f             	r0 += -1			  ## vm.c:1636:0
 1e02944:    21 04             	r1 = r0.l (u)			  ## vm.c:1637:44
 1e02946:    10 70             	r0 = 1			  ## vm.c:1637:44
 1e02948:    f1 e7 01 30       	if (r1 < 127) goto 2 <vm_check_id+0xC : 1e0294e >			  ## vm.c:1637:44
 1e0294c:    00 70             	r0 = 0			  ## vm.c:1637:44
 1e0294e:    20 00             	rts			  ## vm.c:1642:1


vm_read:
 1e02950:    7b 01             	[--sp] = {rets, r11-r4}			  ## vm.c:1173:0
 1e02952:    fe 0b             	sp += -4			  ## vm.c:1173:0
 1e02954:    c4 ff 60 26 00 00 	r4 = 9824 <vm_obj : 2660 >			  ## vm.c:1173:0
 1e0295a:    03 f9 6d 41       	r3 = b[r4 + 365] (u)			  ## vm.c:234:9
 1e0295e:    26 08             	r6 = r2			  ## vm.c:234:9
 1e02960:    19 08             	r9 = r1
 1e02962:    05 08             	r5 = r0
 1e02964:    07 fb 06 ff       	r7 = -250 <bank_code_load_addr+0x1E565A : 1ffff06 >
 1e02968:    00 f3 55 30       	if ((r3 & 1) == 0) goto 170 <vm_read+0xC6 : 1e02a16 >
 1e0296c:    a7 8f             	r7 += -6
 1e0296e:    f5 e7 52 80       	if (r5 > 127) goto 164 <vm_read+0xC6 : 1e02a16 >
 1e02972:    50 2c             	if (r6 == 0) goto 160 <vm_read+0xC4 : 1e02a14 >
 1e02974:    48 fc 18 01       	r8 = r4 + 280			  ## vm.c:1196:5
 1e02978:    f1 07             	r1 = -1			  ## vm.c:1196:5
 1e0297a:    80 08             	r0 = r8			  ## vm.c:1196:5
 1e0297c:    98 f3 52 22       	call 3163300 <os_mutex_pend : 106e24 >			  ## vm.c:1196:5
 1e02980:    68 c0             	r0 = r5 << 1			  ## vm.c:1224:13
 1e02982:    0a b1             	r10 = r0 + r4			  ## vm.c:1224:13
 1e02984:    00 f7 18 a0       	r0 = h[r10 + 24] (u)			  ## vm.c:1224:13
 1e02988:    47 80             	r7 += 4			  ## vm.c:1224:13
 1e0298a:    40 20             	if (r0 == 0) goto 128 <vm_read+0xBC : 1e02a0c >			  ## vm.c:1224:13
 1e0298c:    01 f9 6d 41       	r1 = b[r4 + 365] (u)			  ## vm.c:1227:32
 1e02990:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1227:32
 1e02994:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1227:32
 1e02998:    81 f6 00 14       	r1 = [r1+r4]			  ## vm.c:1227:32
 1e0299c:    02 b2             	r2 = r1 + r0			  ## vm.c:1227:59
 1e0299e:    00 a0             	r0 = sp + 0
 1e029a0:    41 70             	r1 = 4			  ## vm.c:1522:5
 1e029a2:    bf f3 27 f0       	call -8114 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e029a6:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1232:50
 1e029aa:    c1 f5 03 00       	r1 = b[sp+3] (u)			  ## vm.c:1229:22
 1e029ae:    c3 f5 02 00       	r3 = b[sp+2] (u)			  ## vm.c:1229:22
 1e029b2:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1232:50
 1e029b6:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1232:50
 1e029ba:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1232:50
 1e029be:    02 f7 18 a0       	r2 = h[r10 + 24] (u)			  ## vm.c:1232:50
 1e029c2:    cb f5 00 00       	r11 = b[sp] (u)			  ## vm.c:1234:17
 1e029c6:    d8 fd 40 31       	r3 <= insert(r1, p:8, l:24)			  ## vm.c:1229:22
 1e029ca:    20 09             	r0 += r2			  ## vm.c:1232:50
 1e029cc:    40 80             	r0 += 4			  ## vm.c:1232:50
 1e029ce:    90 f3 c9 06       	call 2100626 <flash_addr2cpu_addr : 3764 >			  ## vm.c:1232:50
 1e029d2:    8c fd 20 53       	r5 = uextra(r3, p:4, l:12)			  ## vm.c:1229:22
 1e029d6:    51 08             	r1 = r5			  ## vm.c:1232:30
 1e029d8:    bf f3 f0 ef       	call -8224 <CRC16 : 1e009bc >			  ## vm.c:1232:30
 1e029dc:    00 04             	r0 = r0.b0 (u)			  ## vm.c:1234:27
 1e029de:    0b f2 15 10       	if (r11 != r0) goto 42 <vm_read+0xBC : 1e02a0c >			  ## vm.c:1234:27
 1e029e2:    60 05             	r0 = r5.l (u)			  ## vm.c:1235:28
 1e029e4:    60 f2 01 80       	if (r0 > r6) goto 2 <vm_read+0x9A : 1e029ea >			  ## vm.c:1235:28
 1e029e8:    56 08             	r6 = r5			  ## vm.c:1235:21
 1e029ea:    00 f9 6d 41       	r0 = b[r4 + 365] (u)			  ## vm.c:1239:36
 1e029ee:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## vm.c:1239:36
 1e029f2:    00 fe 0c 09       	r0 = r0 * 12			  ## vm.c:1239:36
 1e029f6:    80 f6 00 04       	r0 = [r0+r4]			  ## vm.c:1239:36
 1e029fa:    01 f7 18 a0       	r1 = h[r10 + 24] (u)			  ## vm.c:1239:92
 1e029fe:    a7 05             	r7 = r6.l (u)			  ## vm.c:1238:23
 1e02a00:    10 09             	r0 += r1			  ## vm.c:1239:63
 1e02a02:    42 90             	r2 = r0 + 4			  ## vm.c:1239:90
 1e02a04:    90 08             	r0 = r9			  ## vm.c:1522:5
 1e02a06:    71 08             	r1 = r7			  ## vm.c:1522:5
 1e02a08:    bf f3 f4 ef       	call -8216 <norflash_read : 1e009f4 >			  ## vm.c:1522:5
 1e02a0c:    80 08             	r0 = r8			  ## vm.c:1254:5
 1e02a0e:    98 f3 0b 22       	call 3163158 <os_mutex_post : 106e28 >			  ## vm.c:1254:5
 1e02a12:    01 18             	goto 2 <vm_read+0xC6 : 1e02a16 >			  ## vm.c:1254:5
 1e02a14:    07 70             	r7 = 0
 1e02a16:    70 08             	r0 = r7			  ## vm.c:1256:1
 1e02a18:    02 0a             	sp += 4			  ## vm.c:1256:1
 1e02a1a:    5b 01             	{pc, r11-r4} = [sp++]			  ## vm.c:1256:1


vm_write:
 1e02a1c:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm.c:1063:0
 1e02a1e:    fe 0b             	sp += -4			  ## vm.c:1063:0
 1e02a20:    c7 ff 60 26 00 00 	r7 = 9824 <vm_obj : 2660 >			  ## vm.c:1063:0
 1e02a26:    03 f9 6d 71       	r3 = b[r7 + 365] (u)			  ## vm.c:234:9
 1e02a2a:    24 08             	r4 = r2			  ## vm.c:234:9
 1e02a2c:    19 08             	r9 = r1
 1e02a2e:    05 08             	r5 = r0
 1e02a30:    06 fb 06 ff       	r6 = -250 <bank_code_load_addr+0x1E565A : 1ffff06 >
 1e02a34:    00 f3 a7 30       	if ((r3 & 1) == 0) goto 334 <vm_write+0x16A : 1e02b86 >
 1e02a38:    a6 8f             	r6 += -6
 1e02a3a:    f5 e7 a4 80       	if (r5 > 127) goto 328 <vm_write+0x16A : 1e02b86 >
 1e02a3e:    20 d3             	r0 = r4 >> 12			  ## vm.c:1076:13
 1e02a40:    26 80             	r6 += 2			  ## vm.c:1076:13
 1e02a42:    a1 30             	if (r0 != 0) goto 322 <vm_write+0x16A : 1e02b86 >			  ## vm.c:1076:13
 1e02a44:    78 fc 18 01       	r8 = r7 + 280			  ## vm.c:1289:5
 1e02a48:    f1 07             	r1 = -1			  ## vm.c:1289:5
 1e02a4a:    80 08             	r0 = r8			  ## vm.c:1289:5
 1e02a4c:    98 f3 ea 21       	call 3163092 <os_mutex_pend : 106e24 >			  ## vm.c:1289:5
 1e02a50:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1289:5
 1e02a54:    40 d0             	r0 = r0 >> 1			  ## vm.c:1289:5
 1e02a56:    11 70             	r1 = 1			  ## vm.c:1289:5
 1e02a58:    e3 fd 00 11       	r1 = r1 & ~r0			  ## vm.c:1289:5
 1e02a5c:    c2 70             	r2 = 12			  ## vm.c:1289:5
 1e02a5e:    70 08             	r0 = r7			  ## vm.c:1289:5
 1e02a60:    80 fe 20 01       	r0 += r1 * r2			  ## vm.c:1289:5
 1e02a64:    41 50             	r1 = h[r0 + 8] (u)			  ## vm.c:1289:5
 1e02a66:    01 22             	if (r1 == 0) goto 2 <vm_write+0x4E : 1e02a6a >			  ## vm.c:1289:5
 1e02a68:    05 15             	call -1526 <_vm_area_erase : 1e02474 >			  ## vm.c:1293:13
 1e02a6a:    80 08             	r0 = r8			  ## vm.c:1335:5
 1e02a6c:    98 f3 dc 21       	call 3163064 <os_mutex_post : 106e28 >			  ## vm.c:1335:5
 1e02a70:    00 f9 6d 71       	r0 = b[r7 + 365] (u)			  ## vm.c:1335:5
 1e02a74:    00 f3 0b 00       	if ((r0 & 1) == 0) goto 22 <vm_write+0x72 : 1e02a8e >
 1e02a78:    f1 07             	r1 = -1			  ## vm.c:1354:5
 1e02a7a:    80 08             	r0 = r8			  ## vm.c:1354:5
 1e02a7c:    98 f3 d2 21       	call 3163044 <os_mutex_pend : 106e24 >			  ## vm.c:1354:5
 1e02a80:    26 16             	call -948 <vm_warning_line_check : 1e026ce >			  ## vm.c:1355:17
 1e02a82:    10 e0 01 10       	if (r0 != 1) goto 2 <vm_write+0x6C : 1e02a88 >			  ## vm.c:1355:17
 1e02a86:    5e 15             	call -1348 <_vm_defrag : 1e02544 >			  ## vm.c:1356:15
 1e02a88:    80 08             	r0 = r8			  ## vm.c:1365:5
 1e02a8a:    98 f3 cd 21       	call 3163034 <os_mutex_post : 106e28 >			  ## vm.c:1365:5
 1e02a8e:    40 08             	r0 = r4			  ## vm.c:1084:20
 1e02a90:    80 f3 e6 3d       	call 31692 <malloc : 1e0a660 >			  ## vm.c:1084:20
 1e02a94:    06 08             	r6 = r0			  ## vm.c:1084:20
 1e02a96:    10 2c             	if (r6 == 0) goto 32 <vm_write+0x9C : 1e02ab8 >
 1e02a98:    50 08             	r0 = r5			  ## vm.c:1087:20
 1e02a9a:    61 08             	r1 = r6			  ## vm.c:1087:20
 1e02a9c:    42 08             	r2 = r4			  ## vm.c:1087:20
 1e02a9e:    58 17             	call -336 <vm_read : 1e02950 >			  ## vm.c:1087:20
 1e02aa0:    20 04             	r0 = r0.l (u)			  ## vm.c:1088:13
 1e02aa2:    40 f2 06 10       	if (r0 != r4) goto 12 <vm_write+0x96 : 1e02ab2 >			  ## vm.c:1088:13
 1e02aa6:    60 08             	r0 = r6			  ## vm.c:1089:22
 1e02aa8:    91 08             	r1 = r9			  ## vm.c:1089:22
 1e02aaa:    42 08             	r2 = r4			  ## vm.c:1089:22
 1e02aac:    98 f3 1e 22       	call 3163196 <memcmp : 106eec >			  ## vm.c:1089:22
 1e02ab0:    6d 20             	if (r0 == 0) goto 218 <vm_write+0x170 : 1e02b8c >			  ## vm.c:1089:22
 1e02ab2:    60 08             	r0 = r6			  ## vm.c:1095:9
 1e02ab4:    80 f3 e7 3d       	call 31694 <free : 1e0a686 >			  ## vm.c:1095:9
 1e02ab8:    f1 07             	r1 = -1			  ## vm.c:1099:5
 1e02aba:    80 08             	r0 = r8			  ## vm.c:1099:5
 1e02abc:    98 f3 b2 21       	call 3162980 <os_mutex_pend : 106e24 >			  ## vm.c:1099:5
 1e02ac0:    90 08             	r0 = r9			  ## vm.c:1102:33
 1e02ac2:    41 08             	r1 = r4			  ## vm.c:1102:33
 1e02ac4:    bf f3 7a ef       	call -8460 <CRC16 : 1e009bc >			  ## vm.c:1102:33
 1e02ac8:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## vm.c:1102:33
 1e02acc:    d0 f5 00 00       	b[sp] = r0			  ## vm.c:1104:17
 1e02ad0:    d5 f5 01 00       	b[sp+1] = r5			  ## vm.c:1105:17
 1e02ad4:    84 fd 40 05       	r0 = uextra(r5, p:8, l:4)			  ## vm.c:1106:65
 1e02ad8:    81 fd 08 21       	r2 = uextra(r1, p:1, l:1)			  ## vm.c:1106:65
 1e02adc:    02 fe 0c 29       	r2 = r2 * 12			  ## vm.c:1106:65
 1e02ae0:    83 f6 00 27       	r3 = [r2+r7]			  ## vm.c:1106:65
 1e02ae4:    02 f6 68 71       	r2 = [r7 + 360]			  ## vm.c:1106:65
 1e02ae8:    d0 fd 20 04       	r0 <= insert(r4, p:4, l:16)			  ## vm.c:1106:47
 1e02aec:    d0 f5 02 00       	b[sp+2] = r0			  ## vm.c:1106:17
 1e02af0:    20 d1             	r0 = r4 >> 4			  ## vm.c:1107:19
 1e02af2:    d0 f5 03 00       	b[sp+3] = r0			  ## vm.c:1107:17
 1e02af6:    32 f2 06 80       	if (r2 > r3) goto 12 <vm_write+0xEA : 1e02b06 >			  ## vm.c:1107:17
 1e02afa:    90 f3 01 04       	call 2099202 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e02afe:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e02b02:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e02b06:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)
 1e02b0a:    c3 70             	r3 = 12
 1e02b0c:    76 08             	r6 = r7
 1e02b0e:    80 fe 30 60       	r6 += r0 * r3
 1e02b12:    00 4c             	r0 = [r6 + 0]
 1e02b14:    16 4c             	r6 = [r6 + 4]
 1e02b16:    20 b4             	r0 = r2 - r0
 1e02b18:    60 f2 06 30       	if (r0 < r6) goto 12 <vm_write+0x10C : 1e02b28 >
 1e02b1c:    90 f3 f0 03       	call 2099168 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e02b20:    02 f6 68 71       	r2 = [r7 + 360]			  ## cpu.h:148:5
 1e02b24:    01 f9 6d 71       	r1 = b[r7 + 365] (u)			  ## cpu.h:148:5
 1e02b28:    81 fd 08 01       	r0 = uextra(r1, p:1, l:1)			  ## vm.c:1112:46
 1e02b2c:    71 08             	r1 = r7			  ## vm.c:1112:46
 1e02b2e:    80 fe 30 10       	r1 += r0 * r3			  ## vm.c:1112:46
 1e02b32:    00 42             	r0 = [r1 + 0]			  ## vm.c:1112:46
 1e02b34:    11 42             	r1 = [r1 + 4]			  ## vm.c:1112:75
 1e02b36:    10 09             	r0 += r1			  ## vm.c:1112:73
 1e02b38:    a0 b0             	r0 = r0 - r2			  ## vm.c:1112:102
 1e02b3a:    4a 98             	r10 = r4 + 4			  ## vm.c:1112:34
 1e02b3c:    06 fb 05 ff       	r6 = -251 <bank_code_load_addr+0x1E5659 : 1ffff05 >			  ## vm.c:1112:34
 1e02b40:    0a f2 1e 80       	if (r10 > r0) goto 60 <vm_write+0x164 : 1e02b80 >			  ## vm.c:1112:34
 1e02b44:    00 a0             	r0 = sp + 0
 1e02b46:    41 70             	r1 = 4			  ## vm.c:1504:5
 1e02b48:    bf f3 f6 f0       	call -7700 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e02b4c:    07 28             	if (r4 == 0) goto 14 <vm_write+0x140 : 1e02b5c >
 1e02b4e:    00 f6 68 71       	r0 = [r7 + 360]			  ## vm.c:1115:33
 1e02b52:    42 90             	r2 = r0 + 4			  ## vm.c:1115:45
 1e02b54:    90 08             	r0 = r9			  ## vm.c:1504:5
 1e02b56:    41 08             	r1 = r4			  ## vm.c:1504:5
 1e02b58:    bf f3 ee f0       	call -7716 <norflash_write : 1e00d38 >			  ## vm.c:1504:5
 1e02b5c:    70 fc 68 01       	r0 = r7 + 360
 1e02b60:    51 60             	r1 = b[r0 + 5] (u)			  ## vm.c:1117:41
 1e02b62:    81 fd 08 11       	r1 = uextra(r1, p:1, l:1)			  ## vm.c:1117:41
 1e02b66:    01 fe 0c 19       	r1 = r1 * 12			  ## vm.c:1117:41
 1e02b6a:    81 f6 00 17       	r1 = [r1+r7]			  ## vm.c:1117:41
 1e02b6e:    02 40             	r2 = [r0 + 0]			  ## vm.c:1117:27
 1e02b70:    6b c0             	r3 = r5 << 1			  ## vm.c:1117:9
 1e02b72:    73 09             	r3 += r7			  ## vm.c:1117:9
 1e02b74:    61 b4             	r1 = r2 - r1			  ## vm.c:1117:39
 1e02b76:    c9 56             	h[r3 + 24] = r1			  ## vm.c:1117:25
 1e02b78:    01 40             	r1 = [r0 + 0]			  ## vm.c:1123:21
 1e02b7a:    a1 09             	r1 += r10			  ## vm.c:1123:21
 1e02b7c:    09 40             	[r0 + 0] = r1			  ## vm.c:1123:21
 1e02b7e:    46 08             	r6 = r4			  ## vm.c:1123:21
 1e02b80:    80 08             	r0 = r8			  ## vm.c:1167:5
 1e02b82:    98 f3 51 21       	call 3162786 <os_mutex_post : 106e28 >			  ## vm.c:1167:5
 1e02b86:    60 08             	r0 = r6			  ## vm.c:1170:1
 1e02b88:    02 0a             	sp += 4			  ## vm.c:1170:1
 1e02b8a:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm.c:1170:1
 1e02b8c:    60 08             	r0 = r6			  ## vm.c:1091:17
 1e02b8e:    80 f3 7a 3d       	call 31476 <free : 1e0a686 >			  ## vm.c:1091:17
 1e02b92:    46 08             	r6 = r4			  ## vm.c:1091:17
 1e02b94:    f8 1f             	goto -16 <vm_write+0x16A : 1e02b86 >


power_set_soft_poweroff_prepare:
 1e02b96:    75 01             	[--sp] = {rets, r5, r4}			  ## pmu_analog.c:863:0
 1e02b98:    98 f3 00 21       	call 3162624 <local_irq_disable : 106d9c >			  ## pmu_analog.c:864:5
 1e02b9c:    08 00             	csync			  ## pmu_analog.c:864:5
 1e02b9e:    c4 ff c0 4e 00 00 	r4 = 20160 <nvbss_begin : 4ec0 >			  ## pmu_analog.c:864:5
 1e02ba4:    00 f6 40 43       	r0 = [r4 + 832]			  ## pmu_analog.c:866:20
 1e02ba8:    01 20             	if (r0 == 0) goto 2 <power_set_soft_poweroff_prepare+0x16 : 1e02bac >			  ## pmu_analog.c:866:20
 1e02baa:    80 00             	call r0			  ## pmu_analog.c:868:9
 1e02bac:    c0 ff 45 18 1a 00 	r0 = 1710149 <uECC_vli_cmp_unsafe+0x9A849 : 1a1845 >
 1e02bb2:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:873:17
 1e02bb4:    01 fd 07 19       	r1 = r1 | 7			  ## pmu_analog.c:873:17
 1e02bb8:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:873:17
 1e02bba:    01 fc d0 ff       	r1 = r0 + -48			  ## pmu_analog.c:873:17
 1e02bbe:    50 62             	r0 = b[r1 + 5] (u)			  ## pmu_analog.c:876:5
 1e02bc0:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:876:5
 1e02bc2:    58 62             	b[r1 + 5] = r0			  ## pmu_analog.c:876:5
 1e02bc4:    10 fc 7c 00       	r0 = r1 + 124			  ## pmu_analog.c:876:5
 1e02bc8:    02 61             	r2 = b[r0 + 16] (u)			  ## pmu_analog.c:879:5
 1e02bca:    72 b0             	r2 &= 4294967294			  ## pmu_analog.c:879:5
 1e02bcc:    0a 61             	b[r0 + 16] = r2			  ## pmu_analog.c:879:5
 1e02bce:    12 61             	r2 = b[r0 + 17] (u)			  ## pmu_analog.c:881:5
 1e02bd0:    22 fd fc 29       	r2 = r2 & 252			  ## pmu_analog.c:881:5
 1e02bd4:    1a 61             	b[r0 + 17] = r2			  ## pmu_analog.c:881:5
 1e02bd6:    02 62             	r2 = b[r1 + 0] (u)			  ## pmu_analog.c:884:5
 1e02bd8:    92 b2             	r2 |= 32			  ## pmu_analog.c:884:5
 1e02bda:    0a 62             	b[r1 + 0] = r2			  ## pmu_analog.c:884:5
 1e02bdc:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:887:5
 1e02bde:    21 fd e1 19       	r1 = r1 & 225			  ## pmu_analog.c:887:5
 1e02be2:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:887:5
 1e02be4:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:888:5
 1e02be6:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:888:5
 1e02be8:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:888:5
 1e02bea:    31 60             	r1 = b[r0 + 3] (u)			  ## pmu_analog.c:889:5
 1e02bec:    f1 b2             	r1 &= 4294967263			  ## pmu_analog.c:889:5
 1e02bee:    39 60             	b[r0 + 3] = r1			  ## pmu_analog.c:889:5
 1e02bf0:    01 60             	r1 = b[r0 + 0] (u)			  ## pmu_analog.c:892:5
 1e02bf2:    f1 b1             	r1 &= 4294967287			  ## pmu_analog.c:892:5
 1e02bf4:    09 60             	b[r0 + 0] = r1			  ## pmu_analog.c:892:5
 1e02bf6:    c1 ff 0c 00 1e 00 	r1 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## pmu_analog.c:892:5
 1e02bfc:    00 f4 01 19       	[r1 + 0] |= 1			  ## pmu_analog.c:824:24
 1e02c00:    12 42             	r2 = [r1 + 4]			  ## pmu_analog.c:825:5
 1e02c02:    32 fd 07 2a       	r2 = r2 & 4294965503			  ## pmu_analog.c:825:5
 1e02c06:    02 fd 03 2a       	r2 = r2 | 768			  ## pmu_analog.c:825:5
 1e02c0a:    1a 42             	[r1 + 4] = r2			  ## pmu_analog.c:825:5
 1e02c0c:    08 00             	csync			  ## pmu_analog.c:826:5
 1e02c0e:    11 fc f4 30       	r1 = r1 + 12532			  ## pmu_analog.c:833:17
 1e02c12:    02 70             	r2 = 0			  ## pmu_analog.c:833:17
 1e02c14:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:833:17
 1e02c16:    11 fc 00 e7       	r1 = r1 + -6400			  ## pmu_analog.c:843:18
 1e02c1a:    0a 42             	[r1 + 0] = r2			  ## pmu_analog.c:843:18
 1e02c1c:    11 fc 00 3d       	r1 = r1 + 15616			  ## pmu_analog.c:843:18
 1e02c20:    12 f6 00 15       	[r1 + 1280] = r2			  ## pmu_analog.c:845:19
 1e02c24:    13 fc 00 f2       	r3 = r1 + -3584			  ## pmu_analog.c:845:19
 1e02c28:    0a 46             	[r3 + 0] = r2			  ## pmu_analog.c:848:22
 1e02c2a:    1a 46             	[r3 + 4] = r2			  ## pmu_analog.c:849:22
 1e02c2c:    c3 ff c0 95 07 00 	r3 = 497088 <text_size+0x613E0 : 795c0 >			  ## pmu_analog.c:849:22
 1e02c32:    05 70             	r5 = 0			  ## pmu_analog.c:849:22
 1e02c34:    b2 f6 00 53       	[r5+r3<<2] = r2			  ## pmu_analog.c:853:39
 1e02c38:    45 80             	r5 += 4			  ## pmu_analog.c:852:23
 1e02c3a:    01 ff e4 50 fa ff 	if (r5 != 228) goto -12 <power_set_soft_poweroff_prepare+0x9E : 1e02c34 >			  ## pmu_analog.c:852:5
 1e02c40:    03 8c             	r3 += -64
 1e02c42:    05 70             	r5 = 0
 1e02c44:    b2 f6 00 53       	[r5+r3<<2] = r2			  ## pmu_analog.c:857:36
 1e02c48:    45 80             	r5 += 4			  ## pmu_analog.c:856:23
 1e02c4a:    85 e7 fb 1f       	if (r5 != 120) goto -10 <power_set_soft_poweroff_prepare+0xAE : 1e02c44 >			  ## pmu_analog.c:856:5
 1e02c4e:    12 fc 00 c7       	r2 = r1 + -14592			  ## pmu_analog.c:898:18
 1e02c52:    03 70             	r3 = 0			  ## pmu_analog.c:898:18
 1e02c54:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:898:18
 1e02c56:    12 fc 00 c8       	r2 = r1 + -14336			  ## pmu_analog.c:899:18
 1e02c5a:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:899:18
 1e02c5c:    12 fc 00 c9       	r2 = r1 + -14080			  ## pmu_analog.c:900:18
 1e02c60:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:900:18
 1e02c62:    12 fc 00 cf       	r2 = r1 + -12544			  ## pmu_analog.c:904:18
 1e02c66:    0b 44             	[r2 + 0] = r3			  ## pmu_analog.c:904:18
 1e02c68:    0b 42             	[r1 + 0] = r3			  ## pmu_analog.c:906:19
 1e02c6a:    51 60             	r1 = b[r0 + 5] (u)			  ## pmu_analog.c:909:5
 1e02c6c:    21 fd f8 19       	r1 = r1 & 248			  ## pmu_analog.c:909:5
 1e02c70:    01 fd 06 19       	r1 = r1 | 6			  ## pmu_analog.c:909:5
 1e02c74:    59 60             	b[r0 + 5] = r1			  ## pmu_analog.c:909:5
 1e02c76:    a1 60             	r1 = b[r0 + 10] (u)			  ## pmu_analog.c:910:5
 1e02c78:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:910:5
 1e02c7c:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:910:5
 1e02c80:    a9 60             	b[r0 + 10] = r1			  ## pmu_analog.c:910:5
 1e02c82:    b1 60             	r1 = b[r0 + 11] (u)			  ## pmu_analog.c:911:5
 1e02c84:    21 fd f0 19       	r1 = r1 & 240			  ## pmu_analog.c:911:5
 1e02c88:    01 fd 09 19       	r1 = r1 | 9			  ## pmu_analog.c:911:5
 1e02c8c:    b9 60             	b[r0 + 11] = r1			  ## pmu_analog.c:911:5
 1e02c8e:    41 60             	r1 = b[r0 + 4] (u)			  ## pmu_analog.c:914:5
 1e02c90:    02 f9 2c 43       	r2 = b[r4 + 812] (u)			  ## pmu_analog.c:914:5
 1e02c94:    21 fd c7 19       	r1 = r1 & 199			  ## pmu_analog.c:914:5
 1e02c98:    d2 c0             	r2 = r2 << 3			  ## pmu_analog.c:914:5
 1e02c9a:    22 fd 38 29       	r2 = r2 & 56			  ## pmu_analog.c:914:5
 1e02c9e:    51 b4             	r1 |= r2			  ## pmu_analog.c:914:5
 1e02ca0:    49 60             	b[r0 + 4] = r1			  ## pmu_analog.c:914:5
 1e02ca2:    55 01             	{pc, r5, r4} = [sp++]			  ## pmu_analog.c:915:1


power_set_soft_poweroff:
 1e02ca4:    c1 ff c0 4e 00 00 	r1 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:1381:0
 1e02caa:    02 f9 37 10       	r2 = b[r1 + 55] (u)			  ## power_hw.c:1385:30
 1e02cae:    c0 ff b1 0f 1a 00 	r0 = 1707953 <uECC_vli_cmp_unsafe+0x99FB5 : 1a0fb1 >			  ## power_hw.c:1385:30
 1e02cb4:    0a 60             	b[r0 + 0] = r2			  ## power_hw.c:1385:20
 1e02cb6:    02 70             	r2 = 0			  ## power_hw.c:1386:18
 1e02cb8:    1a 60             	b[r0 + 1] = r2			  ## power_hw.c:1386:18
 1e02cba:    3a 61             	b[r0 + 19] = r2			  ## power_hw.c:1388:18
 1e02cbc:    01 f9 40 10       	r1 = b[r1 + 64] (u)			  ## power_hw.c:1390:17
 1e02cc0:    02 22             	if (r1 == 0) goto 4 <power_set_soft_poweroff+0x22 : 1e02cc6 >			  ## power_hw.c:1390:17
 1e02cc2:    11 70             	r1 = 1			  ## power_hw.c:1391:22
 1e02cc4:    39 61             	b[r0 + 19] = r1			  ## power_hw.c:1391:22
 1e02cc6:    31 61             	r1 = b[r0 + 19] (u)			  ## power_hw.c:1394:9
 1e02cc8:    02 32             	if (r1 != 0) goto 4 <power_set_soft_poweroff+0x2A : 1e02cce >			  ## power_hw.c:1394:9
 1e02cca:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1394:25
 1e02ccc:    02 22             	if (r1 == 0) goto 4 <power_set_soft_poweroff+0x2E : 1e02cd2 >			  ## power_hw.c:1394:25
 1e02cce:    11 70             	r1 = 1			  ## power_hw.c:1395:22
 1e02cd0:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:1395:22
 1e02cd2:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1398:36
 1e02cd4:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1399:34
 1e02cd6:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1400:34
 1e02cd8:    31 61             	r1 = b[r0 + 19] (u)			  ## power_hw.c:1402:9
 1e02cda:    04 32             	if (r1 != 0) goto 8 <power_set_soft_poweroff+0x40 : 1e02ce4 >			  ## power_hw.c:1402:9
 1e02cdc:    00 60             	r0 = b[r0 + 0] (u)			  ## power_hw.c:1407:9
 1e02cde:    90 f3 2e 0d       	call 2103900 <power_set_soft_poweroff_legacy : 473e >			  ## power_hw.c:1407:9
 1e02ce2:    ff 1f             	goto -2 <power_set_soft_poweroff+0x3E : 1e02ce2 >			  ## power_hw.c:1407:9
 1e02ce4:    90 f3 0f 0d       	call 2103838 <power_set_soft_poweroff_advance : 4706 >			  ## power_hw.c:1403:9
 1e02ce8:    ff 1f             	goto -2 <power_set_soft_poweroff+0x44 : 1e02ce8 >			  ## power_hw.c:1403:9


set_alarm_ctrl:
 1e02cea:    77 01             	[--sp] = {rets, r7-r4}			  ## rtc.c:296:0
 1e02cec:    d0 70             	r0 = 13			  ## rtc.c:297:17
 1e02cee:    00 60             	r0 = b[r0 + 0] (u)			  ## rtc.c:297:17
 1e02cf0:    40 e0 2b 10       	if (r0 != 4) goto 86 <set_alarm_ctrl+0x60 : 1e02d4a >			  ## rtc.c:297:9
 1e02cf4:    98 f3 52 20       	call 3162276 <local_irq_disable : 106d9c >			  ## rtc.c:298:9
 1e02cf8:    50 70             	r0 = 5			  ## rtc.c:298:9
 1e02cfa:    c6 ff b3 0f 1a 00 	r6 = 1707955 <uECC_vli_cmp_unsafe+0x99FB7 : 1a0fb3 >			  ## rtc.c:298:9
 1e02d00:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:298:9
 1e02d02:    00 71             	r0 = 16			  ## rtc.c:298:9
 1e02d04:    64 fc 40 10       	r4 = r6 + 4160			  ## rtc.c:298:9
 1e02d08:    78 68             	b[r4 + 7] = r0			  ## rtc.c:298:9
 1e02d0a:    45 fc 7c ef       	r5 = r4 + -4228			  ## rtc.c:298:9
 1e02d0e:    08 00             	csync			  ## rtc.c:298:9
 1e02d10:    10 68             	r0 = b[r4 + 1] (u)			  ## rtc.c:298:9
 1e02d12:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <set_alarm_ctrl+0x24 : 1e02d0e >			  ## rtc.c:298:9
 1e02d16:    00 6a             	r0 = b[r5 + 0] (u)			  ## rtc.c:298:9
 1e02d18:    50 e0 f9 1f       	if (r0 != 5) goto -14 <set_alarm_ctrl+0x24 : 1e02d0e >			  ## rtc.c:298:9
 1e02d1c:    07 71             	r7 = 16			  ## rtc.c:298:9
 1e02d1e:    0f 68             	b[r4 + 0] = r7			  ## rtc.c:298:9
 1e02d20:    98 f3 3a 20       	call 3162228 <local_irq_enable : 106d98 >			  ## rtc.c:298:9
 1e02d24:    00 70             	r0 = 0			  ## rtc.c:299:26
 1e02d26:    d8 6c             	b[r6 + 13] = r0			  ## rtc.c:299:26
 1e02d28:    98 f3 38 20       	call 3162224 <local_irq_disable : 106d9c >			  ## rtc.c:300:9
 1e02d2c:    40 70             	r0 = 4			  ## rtc.c:300:9
 1e02d2e:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:300:9
 1e02d30:    7f 68             	b[r4 + 7] = r7			  ## rtc.c:300:9
 1e02d32:    08 00             	csync			  ## rtc.c:300:9
 1e02d34:    10 68             	r0 = b[r4 + 1] (u)			  ## rtc.c:300:9
 1e02d36:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <set_alarm_ctrl+0x48 : 1e02d32 >			  ## rtc.c:300:9
 1e02d3a:    00 6a             	r0 = b[r5 + 0] (u)			  ## rtc.c:300:9
 1e02d3c:    40 e0 f9 1f       	if (r0 != 4) goto -14 <set_alarm_ctrl+0x48 : 1e02d32 >			  ## rtc.c:300:9
 1e02d40:    00 71             	r0 = 16			  ## rtc.c:300:9
 1e02d42:    08 68             	b[r4 + 0] = r0			  ## rtc.c:300:9
 1e02d44:    17 01             	{rets, r7-r4} = [sp++]			  ## rtc.c:300:9
 1e02d46:    d8 f3 27 20       	goto 3162190 <local_irq_enable : 106d98 >			  ## rtc.c:300:9
 1e02d4a:    c0 ff 80 14 1a 00 	r0 = 1709184 <uECC_vli_cmp_unsafe+0x9A484 : 1a1480 >
 1e02d50:    01 60             	r1 = b[r0 + 0] (u)
 1e02d52:    71 b0             	r1 &= 4294967294			  ## rtc.c:305:24
 1e02d54:    09 60             	b[r0 + 0] = r1			  ## rtc.c:305:24
 1e02d56:    57 01             	{pc, r7-r4} = [sp++]			  ## rtc.c:308:1


alm_wakeup_isr:
 1e02d58:    34 00             	[--sp] = rets			  ## rtc.c:334:0
 1e02d5a:    80 70             	r0 = 8			  ## rtc.c:335:17
 1e02d5c:    01 40             	r1 = [r0 + 0]			  ## rtc.c:335:17
 1e02d5e:    02 22             	if (r1 == 0) goto 4 <alm_wakeup_isr+0xC : 1e02d64 >			  ## rtc.c:335:17
 1e02d60:    00 70             	r0 = 0			  ## rtc.c:336:9
 1e02d62:    81 00             	call r1			  ## rtc.c:336:9
 1e02d64:    30 00             	pc = [sp++]			  ## rtc.c:338:1


__hw_p2m_irq:
 1e02d66:    e9 01             	[--sp] = {psr, rets, reti}			  ## power_hw.c:1500:0
 1e02d68:    78 f3 3f 00       	[--sp] = {r5-r0}			  ## power_hw.c:1500:0
 1e02d6c:    c4 ff f3 1f 1a 00 	r4 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1500:0
 1e02d72:    10 68             	r0 = b[r4 + 1] (u)			  ## power_hw.c:1501:14
 1e02d74:    01 68             	r1 = b[r4 + 0] (u)			  ## power_hw.c:1506:21
 1e02d76:    51 b0             	r1 |= r0			  ## power_hw.c:1506:21
 1e02d78:    09 68             	b[r4 + 0] = r1			  ## power_hw.c:1506:21
 1e02d7a:    41 fc b5 f8       	r1 = r4 + -1867			  ## power_wakeup.c:691:16
 1e02d7e:    02 62             	r2 = b[r1 + 0] (u)
 1e02d80:    11 8a             	r1 += -95
 1e02d82:    00 f3 03 20       	if ((r2 & 1) == 0) goto 6 <__hw_p2m_irq+0x26 : 1e02d8c >
 1e02d86:    03 62             	r3 = b[r1 + 0] (u)			  ## power_wakeup.c:696:21
 1e02d88:    13 b3             	r3 |= 64			  ## power_wakeup.c:696:21
 1e02d8a:    0b 62             	b[r1 + 0] = r3			  ## power_wakeup.c:696:21
 1e02d8c:    01 f3 04 20       	if ((r2 & 2) == 0) goto 8 <__hw_p2m_irq+0x32 : 1e02d98 >
 1e02d90:    d3 62             	r3 = b[r1 + 13] (u)			  ## power_wakeup.c:700:21
 1e02d92:    e5 62             	r5 = b[r1 + 14] (u)			  ## power_wakeup.c:701:21
 1e02d94:    fb 62             	b[r1 + 15] = r3			  ## power_wakeup.c:702:23
 1e02d96:    0d 63             	b[r1 + 16] = r5			  ## power_wakeup.c:703:23
 1e02d98:    02 f3 10 20       	if ((r2 & 4) == 0) goto 32 <__hw_p2m_irq+0x56 : 1e02dbc >
 1e02d9c:    c2 63             	r2 = b[r1 + 28] (u)			  ## power_wakeup.c:708:23
 1e02d9e:    d3 63             	r3 = b[r1 + 29] (u)			  ## power_wakeup.c:709:23
 1e02da0:    ea 63             	b[r1 + 30] = r2			  ## power_wakeup.c:710:25
 1e02da2:    f2 93             	r2 = r1 + 31			  ## power_wakeup.c:711:25
 1e02da4:    0b 64             	b[r2 + 0] = r3			  ## power_wakeup.c:711:25
 1e02da6:    02 70             	r2 = 0
 1e02da8:    02 18             	goto 4 <__hw_p2m_irq+0x48 : 1e02dae >
 1e02daa:    83 63             	r3 = b[r1 + 24] (u)			  ## power_wakeup.c:597:28
 1e02dac:    12 80             	r2 += 1			  ## power_wakeup.c:591:29
 1e02dae:    a3 04             	r3 = r2.l (u)			  ## power_wakeup.c:592:13
 1e02db0:    fc 27             	if (r3 == 0) goto -8 <__hw_p2m_irq+0x44 : 1e02daa >			  ## power_wakeup.c:592:13
 1e02db2:    93 63             	r3 = b[r1 + 25] (u)			  ## power_wakeup.c:594:28
 1e02db4:    12 80             	r2 += 1			  ## power_wakeup.c:591:29
 1e02db6:    a3 04             	r3 = r2.l (u)			  ## power_wakeup.c:591:29
 1e02db8:    23 e0 f9 1f       	if (r3 != 2) goto -14 <__hw_p2m_irq+0x48 : 1e02dae >			  ## power_wakeup.c:591:29
 1e02dbc:    22 f3 10 00       	if ((r0 & 4) != 0) goto 32 <__hw_p2m_irq+0x7A : 1e02de0 >
 1e02dc0:    05 f3 50 00       	if ((r0 & 32) == 0) goto 160 <__hw_p2m_irq+0xFE : 1e02e64 >
 1e02dc4:    d0 70             	r0 = 13			  ## rtc.c:361:17
 1e02dc6:    00 60             	r0 = b[r0 + 0] (u)			  ## rtc.c:361:17
 1e02dc8:    40 e0 15 10       	if (r0 != 4) goto 42 <__hw_p2m_irq+0x90 : 1e02df6 >			  ## rtc.c:361:9
 1e02dcc:    15 fc 26 f7       	r5 = r1 + -2266
 1e02dd0:    10 6a             	r0 = b[r5 + 1] (u)			  ## rtc.c:362:18
 1e02dd2:    10 e0 2d 00       	if (r0 == 1) goto 90 <__hw_p2m_irq+0xCA : 1e02e30 >			  ## rtc.c:364:13
 1e02dd6:    20 e0 32 10       	if (r0 != 2) goto 100 <__hw_p2m_irq+0xD8 : 1e02e3e >
 1e02dda:    87 17             	call -242 <set_alarm_ctrl : 1e02cea >			  ## rtc.c:365:13
 1e02ddc:    bd 17             	call -134 <alm_wakeup_isr : 1e02d58 >			  ## rtc.c:366:13
 1e02dde:    2f 18             	goto 94 <__hw_p2m_irq+0xD8 : 1e02e3e >			  ## rtc.c:366:13
 1e02de0:    28 fb 00 03       	r0 = rets			  ## wdt.c:60:5
 1e02de4:    28 fb 00 00       	r0 = reti			  ## wdt.c:61:5
 1e02de8:    28 fb 00 0e       	r0 = sp			  ## wdt.c:67:5
 1e02dec:    28 fb 00 0c       	r0 = usp			  ## wdt.c:69:5
 1e02df0:    28 fb 00 0d       	r0 = ssp			  ## wdt.c:71:5
 1e02df4:    ff 1f             	goto -2 <__hw_p2m_irq+0x8E : 1e02df4 >			  ## wdt.c:73:5
 1e02df6:    14 fc 58 fc       	r4 = r1 + -936
 1e02dfa:    75 68             	r5 = b[r4 + 7] (u)			  ## rtc.c:374:18
 1e02dfc:    00 f3 02 50       	if ((r5 & 1) == 0) goto 4 <__hw_p2m_irq+0x9E : 1e02e04 >			  ## rtc.c:374:18
 1e02e00:    74 17             	call -280 <set_alarm_ctrl : 1e02cea >			  ## rtc.c:378:13
 1e02e02:    aa 17             	call -172 <alm_wakeup_isr : 1e02d58 >			  ## rtc.c:379:13
 1e02e04:    04 f3 03 50       	if ((r5 & 16) == 0) goto 6 <__hw_p2m_irq+0xA8 : 1e02e0e >
 1e02e08:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:383:13
 1e02e0a:    10 b0             	r0 |= 1			  ## rtc.c:383:13
 1e02e0c:    08 68             	b[r4 + 0] = r0			  ## rtc.c:383:13
 1e02e0e:    05 f3 03 50       	if ((r5 & 32) == 0) goto 6 <__hw_p2m_irq+0xB2 : 1e02e18 >
 1e02e12:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:387:13
 1e02e14:    90 b0             	r0 |= 2			  ## rtc.c:387:13
 1e02e16:    08 68             	b[r4 + 0] = r0			  ## rtc.c:387:13
 1e02e18:    50 05             	r0 = r5.b0 (s)			  ## rtc.c:374:18
 1e02e1a:    06 f3 03 50       	if ((r5 & 64) == 0) goto 6 <__hw_p2m_irq+0xBE : 1e02e24 >			  ## rtc.c:374:18
 1e02e1e:    01 68             	r1 = b[r4 + 0] (u)			  ## rtc.c:391:13
 1e02e20:    11 b1             	r1 |= 4			  ## rtc.c:391:13
 1e02e22:    09 68             	b[r4 + 0] = r1			  ## rtc.c:391:13
 1e02e24:    f0 ef 1e c0       	ifs (r0 > -1) goto 60 <__hw_p2m_irq+0xFE : 1e02e64 >
 1e02e28:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:395:13
 1e02e2a:    90 b1             	r0 |= 8			  ## rtc.c:395:13
 1e02e2c:    08 68             	b[r4 + 0] = r0			  ## rtc.c:395:13
 1e02e2e:    1a 18             	goto 52 <__hw_p2m_irq+0xFE : 1e02e64 >			  ## rtc.c:395:13
 1e02e30:    c1 ff 70 2e e0 01 	r1 = 31469168 <p2m_rtc_cmd_trim : 1e02e70 >			  ## rtc.c:368:13
 1e02e36:    00 70             	r0 = 0			  ## rtc.c:368:13
 1e02e38:    a2 70             	r2 = 10			  ## rtc.c:368:13
 1e02e3a:    80 f3 be 44       	call 35196 <sys_timeout_add : 1e0b7ba >			  ## rtc.c:368:13
 1e02e3e:    98 f3 ad 1f       	call 3161946 <local_irq_disable : 106d9c >			  ## rtc.c:371:9
 1e02e42:    40 fc c0 ef       	r0 = r4 + -4160			  ## rtc.c:371:9
 1e02e46:    41 70             	r1 = 4			  ## rtc.c:371:9
 1e02e48:    09 60             	b[r0 + 0] = r1			  ## rtc.c:371:9
 1e02e4a:    00 71             	r0 = 16			  ## rtc.c:371:9
 1e02e4c:    78 68             	b[r4 + 7] = r0			  ## rtc.c:371:9
 1e02e4e:    08 00             	csync			  ## rtc.c:371:9
 1e02e50:    10 68             	r0 = b[r4 + 1] (u)			  ## rtc.c:371:9
 1e02e52:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <__hw_p2m_irq+0xE8 : 1e02e4e >			  ## rtc.c:371:9
 1e02e56:    00 6a             	r0 = b[r5 + 0] (u)			  ## rtc.c:371:9
 1e02e58:    40 e0 f9 1f       	if (r0 != 4) goto -14 <__hw_p2m_irq+0xE8 : 1e02e4e >			  ## rtc.c:371:9
 1e02e5c:    00 71             	r0 = 16			  ## rtc.c:371:9
 1e02e5e:    08 68             	b[r4 + 0] = r0			  ## rtc.c:371:9
 1e02e60:    98 f3 9a 1f       	call 3161908 <local_irq_enable : 106d98 >			  ## rtc.c:371:9
 1e02e64:    70 f3 3f 00       	{r5-r0} = [sp++]			  ## power_hw.c:1519:1
 1e02e68:    a9 01             	{psr, rets, reti} = [sp++]			  ## power_hw.c:1519:1
 1e02e6a:    22 00             	rti			  ## power_hw.c:1519:1


__wakeup_is_idle:
 1e02e6c:    10 70             	r0 = 1			  ## power_wakeup.c:107:0
 1e02e6e:    20 00             	rts			  ## power_wakeup.c:111:5


p2m_rtc_cmd_trim:
 1e02e70:    77 01             	[--sp] = {rets, r7-r4}			  ## rtc.c:346:0
 1e02e72:    98 f3 93 1f       	call 3161894 <local_irq_disable : 106d9c >			  ## rtc.c:348:5
 1e02e76:    50 70             	r0 = 5			  ## rtc.c:348:5
 1e02e78:    c6 ff b3 0f 1a 00 	r6 = 1707955 <uECC_vli_cmp_unsafe+0x99FB7 : 1a0fb3 >			  ## rtc.c:348:5
 1e02e7e:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:348:5
 1e02e80:    00 71             	r0 = 16			  ## rtc.c:348:5
 1e02e82:    65 fc 40 10       	r5 = r6 + 4160			  ## rtc.c:348:5
 1e02e86:    78 6a             	b[r5 + 7] = r0			  ## rtc.c:348:5
 1e02e88:    54 fc 7c ef       	r4 = r5 + -4228			  ## rtc.c:348:5
 1e02e8c:    08 00             	csync			  ## rtc.c:348:5
 1e02e8e:    10 6a             	r0 = b[r5 + 1] (u)			  ## rtc.c:348:5
 1e02e90:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <p2m_rtc_cmd_trim+0x1C : 1e02e8c >			  ## rtc.c:348:5
 1e02e94:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:348:5
 1e02e96:    50 e0 f9 1f       	if (r0 != 5) goto -14 <p2m_rtc_cmd_trim+0x1C : 1e02e8c >			  ## rtc.c:348:5
 1e02e9a:    07 71             	r7 = 16			  ## rtc.c:348:5
 1e02e9c:    0f 6a             	b[r5 + 0] = r7			  ## rtc.c:348:5
 1e02e9e:    98 f3 7b 1f       	call 3161846 <local_irq_enable : 106d98 >			  ## rtc.c:348:5
 1e02ea2:    90 f3 99 0c       	call 2103602 <__get_lrc_hz : 47d8 >			  ## rtc.c:349:18
 1e02ea6:    f8 6c             	b[r6 + 15] = r0			  ## rtc.c:350:18
 1e02ea8:    00 d2             	r0 = r0 >> 8			  ## rtc.c:351:38
 1e02eaa:    08 6d             	b[r6 + 16] = r0			  ## rtc.c:351:18
 1e02eac:    98 f3 76 1f       	call 3161836 <local_irq_disable : 106d9c >			  ## rtc.c:352:5
 1e02eb0:    40 70             	r0 = 4			  ## rtc.c:352:5
 1e02eb2:    08 6c             	b[r6 + 0] = r0			  ## rtc.c:352:5
 1e02eb4:    7f 6a             	b[r5 + 7] = r7			  ## rtc.c:352:5
 1e02eb6:    08 00             	csync			  ## rtc.c:352:5
 1e02eb8:    10 6a             	r0 = b[r5 + 1] (u)			  ## rtc.c:352:5
 1e02eba:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <p2m_rtc_cmd_trim+0x46 : 1e02eb6 >			  ## rtc.c:352:5
 1e02ebe:    00 68             	r0 = b[r4 + 0] (u)			  ## rtc.c:352:5
 1e02ec0:    40 e0 f9 1f       	if (r0 != 4) goto -14 <p2m_rtc_cmd_trim+0x46 : 1e02eb6 >			  ## rtc.c:352:5
 1e02ec4:    00 71             	r0 = 16			  ## rtc.c:352:5
 1e02ec6:    08 6a             	b[r5 + 0] = r0			  ## rtc.c:352:5
 1e02ec8:    98 f3 66 1f       	call 3161804 <local_irq_enable : 106d98 >			  ## rtc.c:352:5
 1e02ecc:    20 68             	r0 = b[r4 + 2] (u)			  ## rtc.c:353:9
 1e02ece:    01 30             	if (r0 != 0) goto 2 <p2m_rtc_cmd_trim+0x62 : 1e02ed2 >			  ## rtc.c:353:9
 1e02ed0:    57 01             	{pc, r7-r4} = [sp++]			  ## rtc.c:356:1
 1e02ed2:    e8 16             	call -560 <power_set_soft_poweroff : 1e02ca4 >			  ## rtc.c:354:9
 1e02ed4:    ff 1f             	goto -2 <p2m_rtc_cmd_trim+0x64 : 1e02ed4 >			  ## rtc.c:354:9


usb_dev_idle_query:
 1e02ed6:    10 70             	r0 = 1			  ## otg.c:593:0
 1e02ed8:    20 00             	rts			  ## otg.c:602:1


tmr_enter_deepsleep:
 1e02eda:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:256:0
 1e02ee0:    11 40             	r1 = [r0 + 4]			  ## timer.c:257:29
 1e02ee2:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:259:16
 1e02ee8:    79 45             	[r2 + 92] = r1			  ## timer.c:257:16
 1e02eea:    21 40             	r1 = [r0 + 8]			  ## timer.c:258:29
 1e02eec:    89 45             	[r2 + 96] = r1			  ## timer.c:258:16
 1e02eee:    00 40             	r0 = [r0 + 0]			  ## timer.c:259:29
 1e02ef0:    98 45             	[r2 + 100] = r0			  ## timer.c:259:16
 1e02ef2:    20 00             	rts			  ## timer.c:260:1


timer1_isr:
 1e02ef4:    e9 01             	[--sp] = {psr, rets, reti}			  ## timer.c:100:0
 1e02ef6:    78 f3 1f 00       	[--sp] = {r4-r0}			  ## timer.c:106:20
 1e02efa:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:106:20
 1e02f00:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## timer.c:106:20
 1e02f04:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:106:20
 1e02f0a:    a0 49             	r0 = [r4 + 104]			  ## timer.c:111:5
 1e02f0c:    10 80             	r0 += 1			  ## timer.c:111:5
 1e02f0e:    a8 49             	[r4 + 104] = r0			  ## timer.c:111:5
 1e02f10:    b0 49             	r0 = [r4 + 108]			  ## timer.c:113:28
 1e02f12:    c1 49             	r1 = [r4 + 112]			  ## timer.c:113:17
 1e02f14:    10 09             	r0 += r1			  ## timer.c:113:17
 1e02f16:    c8 49             	[r4 + 112] = r0			  ## timer.c:113:17
 1e02f18:    80 f3 77 44       	call 35054 <usr_timer_schedule : 1e0b80a >			  ## timer.c:115:5
 1e02f1c:    d0 49             	r0 = [r4 + 116]			  ## timer.c:119:9
 1e02f1e:    03 20             	if (r0 == 0) goto 6 <timer1_isr+0x32 : 1e02f26 >			  ## timer.c:119:9
 1e02f20:    d0 49             	r0 = [r4 + 116]			  ## timer.c:120:18
 1e02f22:    f0 8f             	r0 += -1			  ## timer.c:120:18
 1e02f24:    d8 49             	[r4 + 116] = r0			  ## timer.c:120:18
 1e02f26:    70 f3 1f 00       	{r4-r0} = [sp++]			  ## timer.c:125:1
 1e02f2a:    a9 01             	{psr, rets, reti} = [sp++]			  ## timer.c:125:1
 1e02f2c:    22 00             	rti			  ## timer.c:125:1


clock_critical_enter.1451:
 1e02f2e:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:241:0
 1e02f34:    01 f9 78 00       	r1 = b[r0 + 120] (u)			  ## timer.c:241:0
 1e02f38:    07 22             	if (r1 == 0) goto 14 <clock_critical_enter.1451+0x1A : 1e02f48 >			  ## timer.c:241:0
 1e02f3a:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:241:0
 1e02f40:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e02f42:    fa 41             	[r0 + 124] = r2			  ## timer.c:136:23
 1e02f44:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e02f48:    20 00             	rts			  ## timer.c:243:1


clock_critical_exit.1452:
 1e02f4a:    ff f3 cc f1       	goto -7272 <timer1_resume : 1e012e6 >			  ## timer.c:246:0


__power_suspend_post:
 1e02f4e:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:172:0
 1e02f54:    01 f9 78 00       	r1 = b[r0 + 120] (u)			  ## timer.c:172:0
 1e02f58:    07 22             	if (r1 == 0) goto 14 <__power_suspend_post+0x1A : 1e02f68 >			  ## timer.c:172:0
 1e02f5a:    c1 ff 00 05 1e 00 	r1 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:172:0
 1e02f60:    12 42             	r2 = [r1 + 4]			  ## timer.c:136:36
 1e02f62:    fa 41             	[r0 + 124] = r2			  ## timer.c:136:23
 1e02f64:    c0 f4 00 19       	[r1 + 0] = 0			  ## timer.c:137:24
 1e02f68:    20 00             	rts			  ## timer.c:174:1


__power_resume:
 1e02f6a:    34 00             	[--sp] = rets			  ## timer.c:177:0
 1e02f6c:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:179:17
 1e02f72:    c2 41             	r2 = [r0 + 112]			  ## timer.c:179:17
 1e02f74:    03 fb e8 03       	r3 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## timer.c:179:25
 1e02f78:    c0 fe 30 11       	r1 = r1 / r3 (u)			  ## timer.c:179:25
 1e02f7c:    21 09             	r1 += r2			  ## timer.c:179:17
 1e02f7e:    c9 41             	[r0 + 112] = r1			  ## timer.c:179:17
 1e02f80:    bf f3 b1 f1       	call -7326 <timer1_resume : 1e012e6 >			  ## timer.c:182:5
 1e02f84:    88 01             	{rets} = [sp++]			  ## timer.c:184:5
 1e02f86:    c0 f3 40 44       	goto 34944 <usr_timer_schedule : 1e0b80a >			  ## timer.c:184:5


lrc_critical_enter:
 1e02f8a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## lrc_hw.c:186:0
 1e02f90:    00 f9 84 00       	r0 = b[r0 + 132] (u)			  ## lrc_hw.c:186:0
 1e02f94:    08 20             	if (r0 == 0) goto 16 <lrc_critical_enter+0x1C : 1e02fa6 >			  ## lrc_hw.c:186:0
 1e02f96:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:186:0
 1e02f9c:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e02f9e:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e02fa0:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e02fa2:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e02fa6:    20 00             	rts			  ## lrc_hw.c:188:1


__hw_lrc_enable:
 1e02fa8:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## lrc_hw.c:93:0
 1e02fae:    01 f9 84 10       	r1 = b[r1 + 132] (u)			  ## lrc_hw.c:93:0
 1e02fb2:    0b 22             	if (r1 == 0) goto 22 <__hw_lrc_enable+0x22 : 1e02fca >			  ## lrc_hw.c:93:0
 1e02fb4:    c1 ff 00 36 1e 00 	r1 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:93:0
 1e02fba:    02 42             	r2 = [r1 + 0]			  ## lrc_hw.c:98:18
 1e02fbc:    72 b0             	r2 &= 4294967294			  ## lrc_hw.c:98:18
 1e02fbe:    0a 42             	[r1 + 0] = r2			  ## lrc_hw.c:98:18
 1e02fc0:    00 f4 40 19       	[r1 + 0] |= 64			  ## lrc_hw.c:100:18
 1e02fc4:    02 20             	if (r0 == 0) goto 4 <__hw_lrc_enable+0x22 : 1e02fca >			  ## lrc_hw.c:100:18
 1e02fc6:    00 f4 01 19       	[r1 + 0] |= 1			  ## lrc_hw.c:103:22
 1e02fca:    20 00             	rts			  ## lrc_hw.c:105:1


lrc_critical_exit:
 1e02fcc:    10 70             	r0 = 1			  ## lrc_hw.c:191:0
 1e02fce:    ec 1f             	goto -40 <__hw_lrc_enable : 1e02fa8 >			  ## lrc_hw.c:192:5


lrc_timeout_handler:
 1e02fd0:    78 01             	[--sp] = {rets, r8-r4}			  ## lrc_hw.c:134:0
 1e02fd2:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:134:0
 1e02fd8:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:137:19
 1e02fda:    00 f3 6f 10       	if ((r1 & 1) == 0) goto 222 <lrc_timeout_handler+0xEC : 1e030bc >			  ## lrc_hw.c:137:19
 1e02fde:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:141:22
 1e02fe0:    51 04             	r1 = r1.b0 (s)			  ## lrc_hw.c:141:36
 1e02fe2:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <lrc_timeout_handler+0xE : 1e02fde >			  ## lrc_hw.c:141:5
 1e02fe6:    12 40             	r2 = [r0 + 4]			  ## lrc_hw.c:145:24
 1e02fe8:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >
 1e02fee:    01 f9 84 80       	r1 = b[r8 + 132] (u)
 1e02ff2:    05 22             	if (r1 == 0) goto 10 <lrc_timeout_handler+0x2E : 1e02ffe >
 1e02ff4:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:98:18
 1e02ff6:    71 b0             	r1 &= 4294967294			  ## lrc_hw.c:98:18
 1e02ff8:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:98:18
 1e02ffa:    00 f4 40 09       	[r0 + 0] |= 64			  ## lrc_hw.c:100:18
 1e02ffe:    2a 24             	if (r2 == 0) goto 84 <lrc_timeout_handler+0x84 : 1e03054 >
 1e03000:    c0 ff 7c 30 00 00 	r0 = 12412 <hdl.5 : 307c >			  ## clock.c:1778:20
 1e03006:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:1778:12
 1e03008:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xDC060 : f4240 >			  ## clock.c:1778:35
 1e0300e:    40 0e             	r0 = r0 * r1			  ## clock.c:1778:35
 1e03010:    c1 d6             	r1 = r0 >> 27			  ## clock.c:2281:9
 1e03012:    40 c1             	r0 = r0 << 5			  ## clock.c:2281:9
 1e03014:    03 70             	r3 = 0			  ## lrc_hw.c:159:80
 1e03016:    80 f3 e6 16       	call 11724 <__udivdi3 : 1e05de6 >			  ## lrc_hw.c:159:80
 1e0301a:    10 f6 90 80       	[r8 + 144] = r0			  ## lrc_hw.c:159:20
 1e0301e:    01 f9 8c 80       	r1 = b[r8 + 140] (u)
 1e03022:    42 71             	r2 = 20
 1e03024:    01 32             	if (r1 != 0) goto 2 <lrc_timeout_handler+0x58 : 1e03028 >
 1e03026:    02 70             	r2 = 0
 1e03028:    c3 ff 40 24 00 00 	r3 = 9280 <lrc.7 : 2440 >
 1e0302e:    05 46             	r5 = [r3 + 0]			  ## lrc_hw.c:115:9
 1e03030:    14 2a             	if (r5 == 0) goto 40 <lrc_timeout_handler+0x8A : 1e0305a >			  ## lrc_hw.c:115:9
 1e03032:    85 04             	r5 = r2.b0 (u)			  ## lrc_hw.c:120:25
 1e03034:    f5 8f             	r5 += -1			  ## lrc_hw.c:120:27
 1e03036:    15 e0 0a b0       	ifs (r5 < 1) goto 20 <lrc_timeout_handler+0x7E : 1e0304e >			  ## lrc_hw.c:120:27
 1e0303a:    07 70             	r7 = 0
 1e0303c:    16 70             	r6 = 1
 1e0303e:    bf c0             	r7 = r7 << 2			  ## lrc_hw.c:121:54
 1e03040:    37 09             	r7 += r3			  ## lrc_hw.c:121:13
 1e03042:    14 4e             	r4 = [r7 + 4]			  ## lrc_hw.c:121:35
 1e03044:    0c 4e             	[r7 + 0] = r4			  ## lrc_hw.c:121:33
 1e03046:    87 05             	r7 = r6.b0 (u)			  ## lrc_hw.c:120:21
 1e03048:    16 80             	r6 += 1			  ## lrc_hw.c:120:9
 1e0304a:    57 f2 f8 bf       	ifs (r7 < r5) goto -16 <lrc_timeout_handler+0x6E : 1e0303e >			  ## lrc_hw.c:120:9
 1e0304e:    b0 f6 00 35       	[r3+r5<<2] = r0			  ## lrc_hw.c:123:33
 1e03052:    0d 18             	goto 26 <lrc_timeout_handler+0x9E : 1e0306e >			  ## lrc_hw.c:123:33
 1e03054:    00 f4 01 09       	[r0 + 0] |= 1			  ## lrc_hw.c:152:22
 1e03058:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1
 1e0305a:    05 70             	r5 = 0
 1e0305c:    12 22             	if (r1 == 0) goto 36 <lrc_timeout_handler+0xB2 : 1e03082 >
 1e0305e:    85 04             	r5 = r2.b0 (u)			  ## lrc_hw.c:116:21
 1e03060:    06 70             	r6 = 0			  ## lrc_hw.c:116:21
 1e03062:    37 08             	r7 = r3			  ## lrc_hw.c:116:21
 1e03064:    16 80             	r6 += 1			  ## lrc_hw.c:116:29
 1e03066:    50 f6 04 70       	[r7 ++= 4] = r0			  ## lrc_hw.c:117:33
 1e0306a:    56 f2 fb 3f       	if (r6 < r5) goto -10 <lrc_timeout_handler+0x94 : 1e03064 >			  ## lrc_hw.c:117:33
 1e0306e:    05 70             	r5 = 0
 1e03070:    08 22             	if (r1 == 0) goto 16 <lrc_timeout_handler+0xB2 : 1e03082 >
 1e03072:    80 04             	r0 = r2.b0 (u)			  ## lrc_hw.c:126:17
 1e03074:    06 70             	r6 = 0			  ## lrc_hw.c:126:17
 1e03076:    44 f6 04 30       	r4 = [r3 ++= 4]			  ## lrc_hw.c:127:16
 1e0307a:    16 80             	r6 += 1			  ## lrc_hw.c:126:25
 1e0307c:    45 09             	r5 += r4			  ## lrc_hw.c:127:13
 1e0307e:    06 f2 fa 3f       	if (r6 < r0) goto -12 <lrc_timeout_handler+0xA6 : 1e03076 >
 1e03082:    80 04             	r0 = r2.b0 (u)			  ## lrc_hw.c:126:21
 1e03084:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:130:30
 1e03088:    10 f6 88 80       	[r8 + 136] = r0			  ## lrc_hw.c:130:24
 1e0308c:    40 71             	r0 = 20			  ## lrc_hw.c:168:31
 1e0308e:    01 32             	if (r1 != 0) goto 2 <lrc_timeout_handler+0xC2 : 1e03092 >			  ## lrc_hw.c:168:31
 1e03090:    00 70             	r0 = 0
 1e03092:    c1 ff e4 1d 00 00 	r1 = 7652 <lrc.4 : 1de4 >
 1e03098:    02 62             	r2 = b[r1 + 0] (u)			  ## lrc_hw.c:168:17
 1e0309a:    02 f2 0d 80       	if (r2 > r0) goto 26 <lrc_timeout_handler+0xE8 : 1e030b8 >			  ## lrc_hw.c:168:17
 1e0309e:    12 80             	r2 += 1			  ## lrc_hw.c:169:27
 1e030a0:    83 04             	r3 = r2.b0 (u)			  ## lrc_hw.c:173:13
 1e030a2:    0a 62             	b[r1 + 0] = r2			  ## lrc_hw.c:169:27
 1e030a4:    03 f2 08 10       	if (r3 != r0) goto 16 <lrc_timeout_handler+0xE8 : 1e030b8 >			  ## lrc_hw.c:169:27
 1e030a8:    c0 ff e6 1d 00 00 	r0 = 7654 <lrc.2 : 1de6 >			  ## lrc_hw.c:176:38
 1e030ae:    00 60             	r0 = b[r0 + 0] (u)			  ## lrc_hw.c:176:38
 1e030b0:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## lrc_hw.c:176:13
 1e030b4:    80 f3 1f 44       	call 34878 <usr_timer_modify : 1e0b8f6 >			  ## lrc_hw.c:176:13
 1e030b8:    10 70             	r0 = 1			  ## lrc_hw.c:180:5
 1e030ba:    76 17             	call -276 <__hw_lrc_enable : 1e02fa8 >			  ## lrc_hw.c:180:5
 1e030bc:    58 01             	{pc, r8-r4} = [sp++]			  ## lrc_hw.c:183:1


__hw_btosc_time_set:
 1e030be:    7c 01             	[--sp] = {rets, r12-r4}			  ## power_hw.c:387:0
 1e030c0:    ca ff c0 4e 00 00 	r10 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:398:19
 1e030c6:    a0 fc 20 03       	r0 = r10 + 800			  ## power_hw.c:398:19
 1e030ca:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:388:23
 1e030cc:    89 d1             	r1 = r1 >> 6			  ## power_hw.c:388:23
 1e030ce:    09 40             	[r0 + 0] = r1			  ## power_hw.c:388:23
 1e030d0:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## power_hw.c:388:23
 1e030d6:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:390:5
 1e030d8:    22 fd fc 29       	r2 = r2 & 252			  ## power_hw.c:390:5
 1e030dc:    12 b0             	r2 |= 1			  ## power_hw.c:390:5
 1e030de:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:390:5
 1e030e0:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:392:5
 1e030e2:    02 fd 0c 29       	r2 = r2 | 12			  ## power_hw.c:392:5
 1e030e6:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:392:5
 1e030e8:    01 fb b8 0b       	r1 = 3000 <BTCTLER_CL_CODE_TOTAL+0x1EA : bb8 >			  ## power_hw.c:392:5
 1e030ec:    11 f6 24 a0       	[r10 + 36] = r1			  ## power_hw.c:394:29
 1e030f0:    09 f6 00 00       	r9 = [r0 + 0]			  ## power_hw.c:300:18
 1e030f4:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e030f6:    02 fb ec 13       	r2 = 5100 <_cpu0_sstack_begin+0x3BC : 13ec >			  ## power_hw.c:300:16
 1e030fa:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e030fc:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e030fe:    80 f3 57 16       	call 11438 <__muldi3 : 1e05db0 >			  ## power_hw.c:300:16
 1e03102:    06 08             	r6 = r0			  ## power_hw.c:300:16
 1e03104:    17 08             	r7 = r1			  ## power_hw.c:300:16
 1e03106:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xDC060 : f4240 >			  ## power_hw.c:300:16
 1e0310c:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e0310e:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e03110:    80 f3 6d 17       	call 11994 <__umoddi3 : 1e05fee >			  ## power_hw.c:302:11
 1e03114:    04 08             	r4 = r0			  ## power_hw.c:302:11
 1e03116:    15 08             	r5 = r1			  ## power_hw.c:302:11
 1e03118:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e0311a:    60 08             	r0 = r6			  ## power_hw.c:302:11
 1e0311c:    71 08             	r1 = r7			  ## power_hw.c:302:11
 1e0311e:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e03120:    80 f3 61 16       	call 11458 <__udivdi3 : 1e05de6 >			  ## power_hw.c:302:11
 1e03124:    e0 fd 50 24       	r2 = r4 | r5			  ## power_hw.c:306:9
 1e03128:    1b 70             	r11 = 1			  ## power_hw.c:306:9
 1e0312a:    11 70             	r1 = 1			  ## power_hw.c:306:9
 1e0312c:    01 34             	if (r2 != 0) goto 2 <__hw_btosc_time_set+0x72 : 1e03130 >			  ## power_hw.c:306:9
 1e0312e:    01 70             	r1 = 0			  ## power_hw.c:306:9
 1e03130:    0c b2             	r12 = r1 + r0			  ## power_hw.c:306:9
 1e03132:    1c f6 20 a0       	[r10 + 32] = r12			  ## power_hw.c:396:20
 1e03136:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e03138:    02 fb b8 0b       	r2 = 3000 <BTCTLER_CL_CODE_TOTAL+0x1EA : bb8 >			  ## power_hw.c:300:16
 1e0313c:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e0313e:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e03140:    80 f3 36 16       	call 11372 <__muldi3 : 1e05db0 >			  ## power_hw.c:300:16
 1e03144:    04 08             	r4 = r0			  ## power_hw.c:300:16
 1e03146:    15 08             	r5 = r1			  ## power_hw.c:300:16
 1e03148:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e0314a:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e0314c:    80 f3 4f 17       	call 11934 <__umoddi3 : 1e05fee >			  ## power_hw.c:302:11
 1e03150:    06 08             	r6 = r0			  ## power_hw.c:302:11
 1e03152:    17 08             	r7 = r1			  ## power_hw.c:302:11
 1e03154:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e03156:    40 08             	r0 = r4			  ## power_hw.c:302:11
 1e03158:    51 08             	r1 = r5			  ## power_hw.c:302:11
 1e0315a:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e0315c:    80 f3 43 16       	call 11398 <__udivdi3 : 1e05de6 >			  ## power_hw.c:302:11
 1e03160:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:306:9
 1e03164:    01 32             	if (r1 != 0) goto 2 <__hw_btosc_time_set+0xAA : 1e03168 >			  ## power_hw.c:306:9
 1e03166:    0b 70             	r11 = 0			  ## power_hw.c:306:9
 1e03168:    b0 09             	r0 += r11			  ## power_hw.c:306:9
 1e0316a:    10 f6 28 a0       	[r10 + 40] = r0			  ## power_hw.c:397:20
 1e0316e:    c0 09             	r0 += r12			  ## power_hw.c:398:35
 1e03170:    10 f6 2c a0       	[r10 + 44] = r0			  ## power_hw.c:398:19
 1e03174:    5c 01             	{pc, r12-r4} = [sp++]			  ## power_hw.c:399:1


adc_get_value:
 1e03176:    c1 ff b8 21 00 00 	r1 = 8632 <vbat_value_array : 21b8 >			  ## adc_api.c:131:0
 1e0317c:    d0 e0 14 00       	if (r0 == 13) goto 40 <adc_get_value+0x32 : 1e031a8 >			  ## adc_api.c:131:0
 1e03180:    c2 ff 0d 00 05 00 	r2 = 327693 <text_size+0x37E2D : 5000d >			  ## adc_api.c:131:0
 1e03186:    20 f2 10 00       	if (r0 == r2) goto 32 <adc_get_value+0x34 : 1e031aa >			  ## adc_api.c:131:0
 1e0318a:    c1 ff e4 24 00 00 	r1 = 9444 <adc_queue+0x4 : 24e4 >			  ## adc_api.c:131:0
 1e03190:    02 70             	r2 = 0			  ## adc_api.c:131:0
 1e03192:    06 18             	goto 12 <adc_get_value+0x2A : 1e031a0 >			  ## adc_api.c:131:0
 1e03194:    03 f6 fc 1f       	r3 = [r1 + -4]			  ## adc_api.c:139:26
 1e03198:    03 f2 14 00       	if (r3 == r0) goto 40 <adc_get_value+0x4E : 1e031c4 >			  ## adc_api.c:139:13
 1e0319c:    01 81             	r1 += 16			  ## adc_api.c:138:5
 1e0319e:    12 80             	r2 += 1			  ## adc_api.c:138:38
 1e031a0:    92 e0 f8 df       	ifs (r2 <= 9) goto -16 <adc_get_value+0x1E : 1e03194 >
 1e031a4:    10 70             	r0 = 1
 1e031a6:    20 00             	rts
 1e031a8:    41 81             	r1 += 20
 1e031aa:    20 92             	r0 = r1 + 2			  ## adc_api.c:124:10
 1e031ac:    01 70             	r1 = 0
 1e031ae:    02 70             	r2 = 0
 1e031b0:    04 18             	goto 8 <adc_get_value+0x44 : 1e031ba >
 1e031b2:    03 f8 00 01       	r3 = h[r0+r1] (u)			  ## adc_api.c:125:16
 1e031b6:    32 09             	r2 += r3			  ## adc_api.c:125:13
 1e031b8:    21 80             	r1 += 2			  ## adc_api.c:124:5
 1e031ba:    01 e1 fa 1f       	if (r1 != 16) goto -12 <adc_get_value+0x3C : 1e031b2 >
 1e031be:    90 fd 18 02       	r0 = uextra(r2, p:3, l:16)
 1e031c2:    20 00             	rts			  ## adc_api.c:144:1
 1e031c4:    00 52             	r0 = h[r1 + 0] (u)			  ## adc_api.c:140:20
 1e031c6:    20 00             	rts


adc_value_to_voltage:
 1e031c8:    74 01             	[--sp] = {rets, r4}			  ## adc_api.c:148:0
 1e031ca:    c2 ff 00 08 00 00 	r2 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e031d0:    f2 54             	r2 = h[r2 + 30] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e031d2:    14 d1             	r4 = r2 >> 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:34
 1e031d4:    22 fd 0f 49       	r2 = r4 & 15			  ## adc_api.c:153:21
 1e031d8:    03 fe 03 29       	r3 = r2 * 3
 1e031dc:    62 fb 00 39       	r2 = 0 - r3			  ## adc_api.c:154:11
 1e031e0:    24 f3 01 40       	if ((r4 & 16) != 0) goto 2 <adc_value_to_voltage+0x1E : 1e031e6 >
 1e031e4:    32 08             	r2 = r3			  ## adc_api.c:154:11
 1e031e6:    22 fc 21 03       	r2 = r2 + 801			  ## adc_api.c:154:11
 1e031ea:    51 0e             	r1 = r2 * r1			  ## adc_api.c:155:23
 1e031ec:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## adc_api.c:155:29
 1e031f0:    54 01             	{pc, r4} = [sp++]			  ## adc_api.c:157:5


adc_get_voltage:
 1e031f2:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:161:0
 1e031f4:    04 08             	r4 = r0			  ## adc_api.c:161:0
 1e031f6:    d0 70             	r0 = 13			  ## adc_api.c:166:19
 1e031f8:    be 17             	call -132 <adc_get_value : 1e03176 >			  ## adc_api.c:166:19
 1e031fa:    05 08             	r5 = r0			  ## adc_api.c:166:19
 1e031fc:    40 08             	r0 = r4			  ## adc_api.c:167:19
 1e031fe:    bb 17             	call -138 <adc_get_value : 1e03176 >			  ## adc_api.c:167:19
 1e03200:    01 08             	r1 = r0			  ## adc_api.c:167:19
 1e03202:    50 08             	r0 = r5			  ## adc_api.c:168:12
 1e03204:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:168:12
 1e03206:    e0 1f             	goto -64 <adc_value_to_voltage : 1e031c8 >			  ## adc_api.c:168:12


__hw_lrc_time_set:
 1e03208:    7d 01             	[--sp] = {rets, r13-r4}			  ## power_hw.c:402:0
 1e0320a:    05 08             	r5 = r0			  ## power_hw.c:402:0
 1e0320c:    04 fb ec 13       	r4 = 5100 <_cpu0_sstack_begin+0x3BC : 13ec >			  ## power_hw.c:402:0
 1e03210:    25 e0 1b 00       	if (r5 == 2) goto 54 <__hw_lrc_time_set+0x42 : 1e0324a >			  ## power_hw.c:402:0
 1e03214:    c0 ff 0d 00 03 00 	r0 = 196621 <text_size+0x17E2D : 3000d >			  ## xosc_fsck.c:317:14
 1e0321a:    eb 17             	call -42 <adc_get_voltage : 1e031f2 >			  ## xosc_fsck.c:317:14
 1e0321c:    c1 ff 78 30 00 00 	r1 = 12408 <hdl.27 : 3078 >
 1e03222:    03 42             	r3 = [r1 + 0]			  ## xosc_fsck.c:322:26
 1e03224:    c2 ff 74 30 00 00 	r2 = 12404 <update_bss_end : 3074 >			  ## xosc_fsck.c:322:26
 1e0322a:    04 70             	r4 = 0			  ## xosc_fsck.c:322:26
 1e0322c:    0c 64             	b[r2 + 0] = r4			  ## xosc_fsck.c:322:26
 1e0322e:    e3 b0             	r3 = r0 - r3			  ## xosc_fsck.c:322:16
 1e03230:    dc df             	r4 = r3 >>> 31			  ## xosc_fsck.c:322:16
 1e03232:    43 09             	r3 += r4			  ## xosc_fsck.c:322:16
 1e03234:    d3 b8             	r3 ^= r4			  ## xosc_fsck.c:322:16
 1e03236:    04 fb ec 13       	r4 = 5100 <_cpu0_sstack_begin+0x3BC : 13ec >			  ## xosc_fsck.c:322:16
 1e0323a:    e3 e1 05 b0       	ifs (r3 < 30) goto 10 <__hw_lrc_time_set+0x40 : 1e03248 >			  ## xosc_fsck.c:322:16
 1e0323e:    13 70             	r3 = 1
 1e03240:    0b 64             	b[r2 + 0] = r3
 1e03242:    08 42             	[r1 + 0] = r0			  ## xosc_fsck.c:324:34
 1e03244:    04 fb 8c 23       	r4 = 9100 <sys_timer_sem+0x20 : 238c >			  ## xosc_fsck.c:324:34
 1e03248:    0c 2a             	if (r5 == 0) goto 24 <__hw_lrc_time_set+0x5A : 1e03262 >
 1e0324a:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >
 1e03250:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:412:9
 1e03252:    21 fd fc 19       	r1 = r1 & 252			  ## power_hw.c:412:9
 1e03256:    91 b0             	r1 |= 2			  ## power_hw.c:412:9
 1e03258:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:412:9
 1e0325a:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:414:9
 1e0325c:    21 fd f3 19       	r1 = r1 & 243			  ## power_hw.c:414:9
 1e03260:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:414:9
 1e03262:    cb ff c0 4e 00 00 	r11 = 20160 <nvbss_begin : 4ec0 >
 1e03268:    00 f6 28 b3       	r0 = [r11 + 808]			  ## power_hw.c:417:96
 1e0326c:    00 fc d8 0e       	r0 = r0 + 3800			  ## power_hw.c:417:83
 1e03270:    10 f6 24 b0       	[r11 + 36] = r0			  ## power_hw.c:417:29
 1e03274:    90 f3 04 07       	call 2100744 <check_ze_flash_id : 4080 >			  ## power_hw.c:420:9
 1e03278:    0a f6 24 b0       	r10 = [r11 + 36]			  ## power_hw.c:420:9
 1e0327c:    04 20             	if (r0 == 0) goto 8 <__hw_lrc_time_set+0x7E : 1e03286 >			  ## power_hw.c:420:9
 1e0327e:    aa fc d0 07       	r10 = r10 + 2000			  ## power_hw.c:421:33
 1e03282:    1a f6 24 b0       	[r11 + 36] = r10			  ## power_hw.c:421:33
 1e03286:    09 f6 20 b3       	r9 = [r11 + 800]			  ## power_hw.c:300:18
 1e0328a:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e0328c:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e0328e:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e03290:    42 08             	r2 = r4			  ## power_hw.c:300:16
 1e03292:    80 f3 8d 15       	call 11034 <__muldi3 : 1e05db0 >			  ## power_hw.c:300:16
 1e03296:    07 08             	r7 = r0			  ## power_hw.c:300:16
 1e03298:    14 08             	r4 = r1			  ## power_hw.c:300:16
 1e0329a:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xDC060 : f4240 >			  ## power_hw.c:300:16
 1e032a0:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e032a2:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e032a4:    80 f3 a3 16       	call 11590 <__umoddi3 : 1e05fee >			  ## power_hw.c:302:11
 1e032a8:    06 08             	r6 = r0			  ## power_hw.c:302:11
 1e032aa:    15 08             	r5 = r1			  ## power_hw.c:302:11
 1e032ac:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e032ae:    70 08             	r0 = r7			  ## power_hw.c:302:11
 1e032b0:    41 08             	r1 = r4			  ## power_hw.c:302:11
 1e032b2:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e032b4:    80 f3 97 15       	call 11054 <__udivdi3 : 1e05de6 >			  ## power_hw.c:302:11
 1e032b8:    e0 fd 50 26       	r2 = r6 | r5			  ## power_hw.c:306:9
 1e032bc:    1c 70             	r12 = 1			  ## power_hw.c:306:9
 1e032be:    11 70             	r1 = 1			  ## power_hw.c:306:9
 1e032c0:    01 34             	if (r2 != 0) goto 2 <__hw_lrc_time_set+0xBC : 1e032c4 >			  ## power_hw.c:306:9
 1e032c2:    01 70             	r1 = 0			  ## power_hw.c:306:9
 1e032c4:    0d b2             	r13 = r1 + r0			  ## power_hw.c:306:9
 1e032c6:    1d f6 20 b0       	[r11 + 32] = r13			  ## power_hw.c:424:20
 1e032ca:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e032cc:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e032ce:    90 08             	r0 = r9			  ## power_hw.c:300:16
 1e032d0:    a2 08             	r2 = r10			  ## power_hw.c:300:16
 1e032d2:    80 f3 6d 15       	call 10970 <__muldi3 : 1e05db0 >			  ## power_hw.c:300:16
 1e032d6:    04 08             	r4 = r0			  ## power_hw.c:300:16
 1e032d8:    15 08             	r5 = r1			  ## power_hw.c:300:16
 1e032da:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e032dc:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e032de:    80 f3 86 16       	call 11532 <__umoddi3 : 1e05fee >			  ## power_hw.c:302:11
 1e032e2:    06 08             	r6 = r0			  ## power_hw.c:302:11
 1e032e4:    17 08             	r7 = r1			  ## power_hw.c:302:11
 1e032e6:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e032e8:    40 08             	r0 = r4			  ## power_hw.c:302:11
 1e032ea:    51 08             	r1 = r5			  ## power_hw.c:302:11
 1e032ec:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e032ee:    80 f3 7a 15       	call 10996 <__udivdi3 : 1e05de6 >			  ## power_hw.c:302:11
 1e032f2:    e0 fd 70 16       	r1 = r6 | r7			  ## power_hw.c:306:9
 1e032f6:    01 32             	if (r1 != 0) goto 2 <__hw_lrc_time_set+0xF2 : 1e032fa >			  ## power_hw.c:306:9
 1e032f8:    0c 70             	r12 = 0			  ## power_hw.c:306:9
 1e032fa:    c0 09             	r0 += r12			  ## power_hw.c:306:9
 1e032fc:    10 f6 28 b0       	[r11 + 40] = r0			  ## power_hw.c:425:20
 1e03300:    d0 09             	r0 += r13			  ## power_hw.c:426:35
 1e03302:    10 f6 2c b0       	[r11 + 44] = r0			  ## power_hw.c:426:19
 1e03306:    5d 01             	{pc, r13-r4} = [sp++]			  ## power_hw.c:431:1


low_power_group_query:
 1e03308:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:1022:0
 1e0330a:    04 08             	r4 = r0			  ## power_hw.c:1022:0
 1e0330c:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e0330e:    45 f2 15 00       	if (r5 == r4) goto 42 <low_power_group_query+0x34 : 1e0333c >			  ## list.h:124:18
 1e03312:    f6 07             	r6 = -1
 1e03314:    31 4a             	r1 = [r5 + 12]			  ## power_hw.c:1032:16
 1e03316:    f0 07             	r0 = -1			  ## power_hw.c:1032:16
 1e03318:    05 22             	if (r1 == 0) goto 10 <low_power_group_query+0x1C : 1e03324 >			  ## power_hw.c:1032:16
 1e0331a:    11 42             	r1 = [r1 + 4]			  ## power_hw.c:1032:31
 1e0331c:    03 22             	if (r1 == 0) goto 6 <low_power_group_query+0x1C : 1e03324 >			  ## power_hw.c:1032:31
 1e0331e:    20 4a             	r0 = [r5 + 8]			  ## power_hw.c:1033:43
 1e03320:    81 00             	call r1			  ## power_hw.c:1033:20
 1e03322:    0e 20             	if (r0 == 0) goto 28 <low_power_group_query+0x38 : 1e03340 >
 1e03324:    06 f2 01 80       	if (r6 > r0) goto 2 <low_power_group_query+0x22 : 1e0332a >
 1e03328:    60 08             	r0 = r6			  ## power_hw.c:1042:13
 1e0332a:    05 4a             	r5 = [r5 + 0]
 1e0332c:    06 08             	r6 = r0
 1e0332e:    45 f2 f1 1f       	if (r5 != r4) goto -30 <low_power_group_query+0xC : 1e03314 >
 1e03332:    01 70             	r1 = 0			  ## power_hw.c:1050:9
 1e03334:    f0 ef 05 00       	if (r0 == -1) goto 10 <low_power_group_query+0x3A : 1e03342 >			  ## power_hw.c:1050:9
 1e03338:    01 08             	r1 = r0			  ## power_hw.c:1050:9
 1e0333a:    03 18             	goto 6 <low_power_group_query+0x3A : 1e03342 >			  ## power_hw.c:1050:9
 1e0333c:    f1 07             	r1 = -1
 1e0333e:    01 18             	goto 2 <low_power_group_query+0x3A : 1e03342 >
 1e03340:    01 70             	r1 = 0
 1e03342:    10 08             	r0 = r1			  ## power_hw.c:1055:1
 1e03344:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:1055:1


__lp_timer_is_running:
 1e03346:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:261:0
 1e0334c:    00 60             	r0 = b[r0 + 0] (u)			  ## lp_timer_hw.c:262:13
 1e0334e:    81 fd 28 00       	r0 = uextra(r0, p:5, l:1)			  ## lp_timer_hw.c:262:12
 1e03352:    20 00             	rts			  ## lp_timer_hw.c:262:5


__lp_timer_dump:
 1e03354:    c0 ff d3 1f 1a 00 	r0 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:47:0
 1e0335a:    01 60             	r1 = b[r0 + 0] (u)			  ## lp_timer_hw.c:48:5
 1e0335c:    11 b3             	r1 |= 64			  ## lp_timer_hw.c:48:5
 1e0335e:    09 60             	b[r0 + 0] = r1			  ## lp_timer_hw.c:48:5
 1e03360:    21 f9 00 00       	r1 = b[r0 + 0] (s)			  ## lp_timer_hw.c:49:13
 1e03364:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__lp_timer_dump+0xC : 1e03360 >			  ## lp_timer_hw.c:49:5
 1e03368:    20 00             	rts			  ## lp_timer_hw.c:71:1


__lp_timer_set_time:
 1e0336a:    75 01             	[--sp] = {rets, r5, r4}			  ## lp_timer_hw.c:75:0
 1e0336c:    02 08             	r2 = r0			  ## lp_timer_hw.c:75:0
 1e0336e:    c5 ff c0 4e 00 00 	r5 = 20160 <nvbss_begin : 4ec0 >			  ## lp_timer_hw.c:75:0
 1e03374:    00 f6 20 53       	r0 = [r5 + 800]			  ## power_hw.c:336:18
 1e03378:    01 70             	r1 = 0			  ## power_hw.c:336:16
 1e0337a:    03 70             	r3 = 0			  ## power_hw.c:336:16
 1e0337c:    04 70             	r4 = 0			  ## power_hw.c:336:16
 1e0337e:    80 f3 17 15       	call 10798 <__muldi3 : 1e05db0 >			  ## power_hw.c:336:16
 1e03382:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDC060 : f4240 >			  ## power_hw.c:338:11
 1e03388:    03 70             	r3 = 0			  ## power_hw.c:338:11
 1e0338a:    80 f3 2c 15       	call 10840 <__udivdi3 : 1e05de6 >			  ## power_hw.c:338:11
 1e0338e:    b1 4a             	r1 = [r5 + 44]			  ## lp_timer_hw.c:80:25
 1e03390:    10 f2 17 30       	if (r0 < r1) goto 46 <__lp_timer_set_time+0x58 : 1e033c2 >
 1e03394:    a1 4a             	r1 = [r5 + 40]			  ## lp_timer_hw.c:86:29
 1e03396:    61 b0             	r1 = r0 - r1			  ## lp_timer_hw.c:86:19
 1e03398:    0a d6             	r2 = r1 >> 24			  ## lp_timer_hw.c:90:27
 1e0339a:    c3 ff d1 1f 1a 00 	r3 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## lp_timer_hw.c:90:27
 1e033a0:    aa 66             	b[r3 + 10] = r2			  ## lp_timer_hw.c:90:19
 1e033a2:    0a d4             	r2 = r1 >> 16			  ## lp_timer_hw.c:91:27
 1e033a4:    9a 66             	b[r3 + 9] = r2			  ## lp_timer_hw.c:91:19
 1e033a6:    0a d2             	r2 = r1 >> 8			  ## lp_timer_hw.c:92:27
 1e033a8:    8a 66             	b[r3 + 8] = r2			  ## lp_timer_hw.c:92:19
 1e033aa:    79 66             	b[r3 + 7] = r1			  ## lp_timer_hw.c:93:19
 1e033ac:    01 d6             	r1 = r0 >> 24			  ## lp_timer_hw.c:98:27
 1e033ae:    69 66             	b[r3 + 6] = r1			  ## lp_timer_hw.c:98:19
 1e033b0:    01 d4             	r1 = r0 >> 16			  ## lp_timer_hw.c:99:27
 1e033b2:    59 66             	b[r3 + 5] = r1			  ## lp_timer_hw.c:99:19
 1e033b4:    01 d2             	r1 = r0 >> 8			  ## lp_timer_hw.c:100:27
 1e033b6:    49 66             	b[r3 + 4] = r1			  ## lp_timer_hw.c:100:19
 1e033b8:    38 66             	b[r3 + 3] = r0			  ## lp_timer_hw.c:101:19
 1e033ba:    00 66             	r0 = b[r3 + 0] (u)			  ## lp_timer_hw.c:103:5
 1e033bc:    10 b0             	r0 |= 1			  ## lp_timer_hw.c:103:5
 1e033be:    08 66             	b[r3 + 0] = r0			  ## lp_timer_hw.c:103:5
 1e033c0:    14 70             	r4 = 1			  ## lp_timer_hw.c:103:5
 1e033c2:    40 08             	r0 = r4			  ## lp_timer_hw.c:108:1
 1e033c4:    55 01             	{pc, r5, r4} = [sp++]			  ## lp_timer_hw.c:108:1


__tus_cnt:
 1e033c6:    34 00             	[--sp] = rets			  ## power_hw.c:361:0
 1e033c8:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDC060 : f4240 >			  ## power_hw.c:365:18
 1e033ce:    01 70             	r1 = 0			  ## power_hw.c:365:18
 1e033d0:    03 70             	r3 = 0			  ## power_hw.c:365:18
 1e033d2:    80 f3 ed 14       	call 10714 <__muldi3 : 1e05db0 >			  ## power_hw.c:365:18
 1e033d6:    c2 ff c0 4e 00 00 	r2 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:367:25
 1e033dc:    02 f6 20 23       	r2 = [r2 + 800]			  ## power_hw.c:367:13
 1e033e0:    03 70             	r3 = 0			  ## power_hw.c:367:11
 1e033e2:    88 01             	{rets} = [sp++]			  ## power_hw.c:367:11
 1e033e4:    c0 f3 ff 14       	goto 10750 <__udivdi3 : 1e05de6 >			  ## power_hw.c:367:11


__lp_timer_get_period:
 1e033e8:    c1 ff d4 1f 1a 00 	r1 = 1712084 <uECC_vli_cmp_unsafe+0x9AFD8 : 1a1fd4 >			  ## lp_timer_hw.c:162:0
 1e033ee:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:165:11
 1e033f0:    12 62             	r2 = b[r1 + 1] (u)			  ## lp_timer_hw.c:166:13
 1e033f2:    23 62             	r3 = b[r1 + 2] (u)			  ## lp_timer_hw.c:167:13
 1e033f4:    31 62             	r1 = b[r1 + 3] (u)			  ## lp_timer_hw.c:168:13
 1e033f6:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:166:9
 1e033fa:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:167:9
 1e033fe:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:168:9
 1e03402:    e1 1f             	goto -62 <__tus_cnt : 1e033c6 >			  ## lp_timer_hw.c:170:12


__low_power_suspend:
 1e03404:    76 01             	[--sp] = {rets, r6-r4}			  ## power_hw.c:659:0
 1e03406:    04 08             	r4 = r0			  ## power_hw.c:659:0
 1e03408:    06 48             	r6 = [r4 + 0]			  ## power_hw.c:659:0
 1e0340a:    15 08             	r5 = r1			  ## power_hw.c:659:0
 1e0340c:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x20 : 1e03424 >			  ## power_hw.c:659:0
 1e03410:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:663:16
 1e03412:    04 20             	if (r0 == 0) goto 8 <__low_power_suspend+0x18 : 1e0341c >			  ## power_hw.c:663:16
 1e03414:    21 40             	r1 = [r0 + 8]			  ## power_hw.c:663:31
 1e03416:    02 22             	if (r1 == 0) goto 4 <__low_power_suspend+0x18 : 1e0341c >			  ## power_hw.c:663:31
 1e03418:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:664:38
 1e0341a:    81 00             	call r1			  ## power_hw.c:664:13
 1e0341c:    06 4c             	r6 = [r6 + 0]
 1e0341e:    46 f2 f7 1f       	if (r6 != r4) goto -18 <__low_power_suspend+0xC : 1e03410 >
 1e03422:    06 48             	r6 = [r4 + 0]
 1e03424:    46 f2 0a 00       	if (r6 == r4) goto 20 <__low_power_suspend+0x38 : 1e0343c >
 1e03428:    30 4c             	r0 = [r6 + 12]			  ## power_hw.c:668:16
 1e0342a:    05 20             	if (r0 == 0) goto 10 <__low_power_suspend+0x32 : 1e03436 >			  ## power_hw.c:668:16
 1e0342c:    32 40             	r2 = [r0 + 12]			  ## power_hw.c:668:31
 1e0342e:    03 24             	if (r2 == 0) goto 6 <__low_power_suspend+0x32 : 1e03436 >			  ## power_hw.c:668:31
 1e03430:    20 4c             	r0 = [r6 + 8]			  ## power_hw.c:669:37
 1e03432:    51 08             	r1 = r5			  ## power_hw.c:669:13
 1e03434:    82 00             	call r2			  ## power_hw.c:669:13
 1e03436:    06 4c             	r6 = [r6 + 0]
 1e03438:    46 f2 f6 1f       	if (r6 != r4) goto -20 <__low_power_suspend+0x24 : 1e03428 >
 1e0343c:    56 01             	{pc, r6-r4} = [sp++]			  ## power_hw.c:672:1


__hw_xosc_fsck_run:
 1e0343e:    c0 ff 00 11 1e 00 	r0 = 1970432 <uECC_vli_cmp_unsafe+0xDA104 : 1e1100 >			  ## xosc_fsck.c:43:0
 1e03444:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:45:5
 1e03448:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:47:5
 1e0344a:    31 fd 70 1a       	r1 = r1 & 4294938623			  ## xosc_fsck.c:47:5
 1e0344e:    11 b7             	r1 |= 16384			  ## xosc_fsck.c:47:5
 1e03450:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:47:5
 1e03452:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:48:5
 1e03454:    31 fd 0e 19       	r1 = r1 & 4294967281			  ## xosc_fsck.c:48:5
 1e03458:    01 fd 0c 19       	r1 = r1 | 12			  ## xosc_fsck.c:48:5
 1e0345c:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:48:5
 1e0345e:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:49:5
 1e03460:    31 fd 0f 1a       	r1 = r1 & 4294963455			  ## xosc_fsck.c:49:5
 1e03464:    01 fd 07 1a       	r1 = r1 | 1792			  ## xosc_fsck.c:49:5
 1e03468:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:49:5
 1e0346a:    00 f4 40 09       	[r0 + 0] |= 64			  ## xosc_fsck.c:51:5
 1e0346e:    00 f4 01 09       	[r0 + 0] |= 1			  ## xosc_fsck.c:52:5
 1e03472:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:55:24
 1e03474:    51 04             	r1 = r1.b0 (s)			  ## xosc_fsck.c:55:12
 1e03476:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <__hw_xosc_fsck_run+0x34 : 1e03472 >			  ## xosc_fsck.c:55:5
 1e0347a:    11 40             	r1 = [r0 + 4]			  ## xosc_fsck.c:60:86
 1e0347c:    01 40             	r1 = [r0 + 0]			  ## xosc_fsck.c:65:5
 1e0347e:    71 b0             	r1 &= 4294967294			  ## xosc_fsck.c:65:5
 1e03480:    09 40             	[r0 + 0] = r1			  ## xosc_fsck.c:65:5
 1e03482:    20 00             	rts			  ## xosc_fsck.c:66:1


__lp_timer_get_pass_time:
 1e03484:    c1 ff d3 1f 1a 00 	r1 = 1712083 <uECC_vli_cmp_unsafe+0x9AFD7 : 1a1fd3 >			  ## lp_timer_hw.c:146:0
 1e0348a:    00 62             	r0 = b[r1 + 0] (u)			  ## lp_timer_hw.c:147:5
 1e0348c:    10 b3             	r0 |= 64			  ## lp_timer_hw.c:147:5
 1e0348e:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:147:5
 1e03490:    00 00             	nop			  ## lp_timer_hw.c:148:5
 1e03492:    00 00             	nop			  ## lp_timer_hw.c:149:5
 1e03494:    20 f9 00 10       	r0 = b[r1 + 0] (s)			  ## lp_timer_hw.c:150:13
 1e03498:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <__lp_timer_get_pass_time+0x10 : 1e03494 >			  ## lp_timer_hw.c:150:5
 1e0349c:    90 62             	r0 = b[r1 + 9] (u)			  ## lp_timer_hw.c:153:12
 1e0349e:    a2 62             	r2 = b[r1 + 10] (u)			  ## lp_timer_hw.c:154:14
 1e034a0:    b3 62             	r3 = b[r1 + 11] (u)			  ## lp_timer_hw.c:155:14
 1e034a2:    c1 62             	r1 = b[r1 + 12] (u)			  ## lp_timer_hw.c:156:14
 1e034a4:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## lp_timer_hw.c:154:10
 1e034a8:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## lp_timer_hw.c:155:10
 1e034ac:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## lp_timer_hw.c:156:10
 1e034b0:    8a 1f             	goto -236 <__tus_cnt : 1e033c6 >			  ## lp_timer_hw.c:158:12


__tcnt_us:
 1e034b2:    78 01             	[--sp] = {rets, r8-r4}			  ## power_hw.c:295:0
 1e034b4:    02 08             	r2 = r0			  ## power_hw.c:295:0
 1e034b6:    c0 ff c0 4e 00 00 	r0 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:300:30
 1e034bc:    00 f6 20 03       	r0 = [r0 + 800]			  ## power_hw.c:300:18
 1e034c0:    01 70             	r1 = 0			  ## power_hw.c:300:16
 1e034c2:    03 70             	r3 = 0			  ## power_hw.c:300:16
 1e034c4:    80 f3 74 14       	call 10472 <__muldi3 : 1e05db0 >			  ## power_hw.c:300:16
 1e034c8:    04 08             	r4 = r0			  ## power_hw.c:300:16
 1e034ca:    15 08             	r5 = r1			  ## power_hw.c:300:16
 1e034cc:    c8 ff 40 42 0f 00 	r8 = 1000000 <text_size+0xDC060 : f4240 >			  ## power_hw.c:302:11
 1e034d2:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e034d4:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e034d6:    80 f3 8a 15       	call 11028 <__umoddi3 : 1e05fee >			  ## power_hw.c:302:11
 1e034da:    07 08             	r7 = r0			  ## power_hw.c:302:11
 1e034dc:    16 08             	r6 = r1			  ## power_hw.c:302:11
 1e034de:    03 70             	r3 = 0			  ## power_hw.c:302:11
 1e034e0:    40 08             	r0 = r4			  ## power_hw.c:302:11
 1e034e2:    51 08             	r1 = r5			  ## power_hw.c:302:11
 1e034e4:    82 08             	r2 = r8			  ## power_hw.c:302:11
 1e034e6:    80 f3 7e 14       	call 10492 <__udivdi3 : 1e05de6 >			  ## power_hw.c:302:11
 1e034ea:    e0 fd 60 27       	r2 = r7 | r6			  ## power_hw.c:306:9
 1e034ee:    11 70             	r1 = 1			  ## power_hw.c:306:9
 1e034f0:    01 34             	if (r2 != 0) goto 2 <__tcnt_us+0x42 : 1e034f4 >			  ## power_hw.c:306:9
 1e034f2:    01 70             	r1 = 0			  ## power_hw.c:306:9
 1e034f4:    10 09             	r0 += r1			  ## power_hw.c:306:9
 1e034f6:    58 01             	{pc, r8-r4} = [sp++]			  ## power_hw.c:309:5


wdt_clear:
 1e034f8:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:29:0
 1e034fe:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:30:18
 1e03500:    11 b3             	r1 |= 64			  ## wdt.c:30:18
 1e03502:    09 60             	b[r0 + 0] = r1			  ## wdt.c:30:18
 1e03504:    20 00             	rts			  ## wdt.c:31:1


wdt_close:
 1e03506:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:13:0
 1e0350c:    01 60             	r1 = b[r0 + 0] (u)			  ## wdt.c:14:18
 1e0350e:    71 b2             	r1 &= 4294967279			  ## wdt.c:14:18
 1e03510:    09 60             	b[r0 + 0] = r1			  ## wdt.c:14:18
 1e03512:    20 00             	rts			  ## wdt.c:15:1


norflash_open:
 1e03514:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:941:0
 1e03516:    c5 ff 70 22 00 00 	r5 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:941:0
 1e0351c:    01 f9 87 50       	r1 = b[r5 + 135] (u)			  ## vm_sfc.c:944:21
 1e03520:    04 08             	r4 = r0			  ## vm_sfc.c:944:21
 1e03522:    18 32             	if (r1 != 0) goto 48 <norflash_open+0x40 : 1e03554 >			  ## vm_sfc.c:944:21
 1e03524:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >
 1e0352a:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:928:18
 1e0352c:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:928:18
 1e0352e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:928:18
 1e03530:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:929:18
 1e03532:    31 fd 0c 1a       	r1 = r1 & 4294964223			  ## vm_sfc.c:929:18
 1e03536:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:929:18
 1e03538:    00 f4 60 0a       	[r0 + 0] |= 24576			  ## vm_sfc.c:930:18
 1e0353c:    00 fc 14 38       	r0 = r0 + 14356			  ## vm_sfc.c:930:18
 1e03540:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:931:20
 1e03542:    f1 b9             	r1 &= 4294443007			  ## vm_sfc.c:931:20
 1e03544:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:931:20
 1e03546:    50 fc ac 00       	r0 = r5 + 172			  ## vm_sfc.c:934:5
 1e0354a:    98 f3 67 1c       	call 3160270 <os_mutex_create : 106e1c >			  ## vm_sfc.c:934:5
 1e0354e:    10 70             	r0 = 1			  ## vm_sfc.c:936:21
 1e03550:    10 f9 87 50       	b[r5 + 135] = r0			  ## vm_sfc.c:936:21
 1e03554:    0a 28             	if (r4 == 0) goto 20 <norflash_open+0x56 : 1e0356a >
 1e03556:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:950:32
 1e0355c:    01 fc 84 01       	r1 = r0 + 388			  ## vm_sfc.c:949:17
 1e03560:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:949:17
 1e03562:    51 fc 74 00       	r1 = r5 + 116			  ## vm_sfc.c:950:32
 1e03566:    11 f6 94 01       	[r0 + 404] = r1			  ## vm_sfc.c:950:32
 1e0356a:    c0 ff 94 4b 00 00 	r0 = 19348 <lmp_conn_for_link : 4b94 >			  ## vm_sfc.c:953:5
 1e03570:    c1 ff 94 4b 00 00 	r1 = 19348 <lmp_conn_for_link : 4b94 >			  ## vm_sfc.c:953:5
 1e03576:    21 b2             	r1 = r1 - r0			  ## vm_sfc.c:953:5
 1e03578:    10 70             	r0 = 1			  ## vm_sfc.c:953:5
 1e0357a:    28 ff 10 1a 01 00 	if (r1 > 4096) goto 2 <norflash_open+0x6E : 1e03582 >			  ## vm_sfc.c:953:5
 1e03580:    00 70             	r0 = 0			  ## vm_sfc.c:953:5
 1e03582:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:953:5


p11_init:
 1e03584:    77 01             	[--sp] = {rets, r7-r4}			  ## power_hw.c:1478:0
 1e03586:    c0 ff 04 3e 1e 00 	r0 = 1981956 <uECC_vli_cmp_unsafe+0xDCE08 : 1e3e04 >			  ## power_hw.c:1478:0
 1e0358c:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1482:14
 1e0358e:    05 f3 fd 1f       	if ((r1 & 32) == 0) goto -6 <p11_init+0x8 : 1e0358c >			  ## power_hw.c:1482:30
 1e03592:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:1482:33
 1e03594:    06 f3 fa 1f       	if ((r1 & 64) == 0) goto -12 <p11_init+0x8 : 1e0358c >			  ## power_hw.c:1482:33
 1e03598:    f1 7f             	r1 = 255
 1e0359a:    c2 ff 80 1f 1a 00 	r2 = 1712000 <uECC_vli_cmp_unsafe+0x9AF84 : 1a1f80 >
 1e035a0:    e3 7e             	r3 = 238
 1e035a2:    b4 7a             	r4 = 171
 1e035a4:    e5 70             	r5 = 14
 1e035a6:    56 75             	r6 = 85
 1e035a8:    09 64             	b[r2 + 0] = r1			  ## power_hw.c:1488:20
 1e035aa:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1489:20
 1e035ac:    0c 64             	b[r2 + 0] = r4			  ## power_hw.c:1490:20
 1e035ae:    0d 64             	b[r2 + 0] = r5			  ## power_hw.c:1491:20
 1e035b0:    0e 64             	b[r2 + 0] = r6			  ## power_hw.c:1492:20
 1e035b2:    07 40             	r7 = [r0 + 0]			  ## power_hw.c:1493:15
 1e035b4:    00 f3 f8 7f       	if ((r7 & 1) == 0) goto -16 <p11_init+0x24 : 1e035a8 >			  ## power_hw.c:1493:5
 1e035b8:    57 01             	{pc, r7-r4} = [sp++]			  ## power_hw.c:1495:1


wdt_init:
 1e035ba:    c0 71             	r0 = 28			  ## wdt.c:79:0
 1e035bc:    c1 ff 88 1f 1a 00 	r1 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >			  ## wdt.c:79:0
 1e035c2:    08 62             	b[r1 + 0] = r0			  ## wdt.c:79:0
 1e035c4:    00 70             	r0 = 0			  ## wdt.c:79:0
 1e035c6:    18 62             	b[r1 + 1] = r0			  ## wdt.c:79:0
 1e035c8:    20 00             	rts			  ## wdt.c:87:1


reset_source_dump:
 1e035ca:    76 01             	[--sp] = {rets, r6-r4}			  ## power_reset.c:100:0
 1e035cc:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## power_reset.c:100:0
 1e035d2:    d6 f4 00 09       	[r0 + 88] = 0			  ## power_reset.c:103:24
 1e035d6:    c1 ff f4 1f 1a 00 	r1 = 1712116 <uECC_vli_cmp_unsafe+0x9AFF8 : 1a1ff4 >			  ## power_reset.c:103:24
 1e035dc:    42 62             	r2 = b[r1 + 4] (u)			  ## power_reset.c:106:5
 1e035de:    72 b2             	r2 &= 4294967279			  ## power_reset.c:106:5
 1e035e0:    4a 62             	b[r1 + 4] = r2			  ## power_reset.c:106:5
 1e035e2:    13 fc 1e f8       	r3 = r1 + -2018			  ## power_reset.c:106:5
 1e035e6:    32 66             	r2 = b[r3 + 3] (u)			  ## power_reset.c:107:5
 1e035e8:    f2 b2             	r2 &= 4294967263			  ## power_reset.c:107:5
 1e035ea:    3a 66             	b[r3 + 3] = r2			  ## power_reset.c:107:5
 1e035ec:    20 fb 1e 2b       	r2 = 1966080			  ## power_reset.c:107:5
 1e035f0:    04 44             	r4 = [r2 + 0]			  ## power_reset.c:109:20
 1e035f2:    14 05             	r4 = r4.b0 (s)			  ## power_reset.c:109:38
 1e035f4:    04 e0 03 b0       	ifs (r4 < 0) goto 6 <reset_source_dump+0x34 : 1e035fe >			  ## power_reset.c:109:9
 1e035f8:    16 f4 80 09       	[r0 + 88] |= 128			  ## power_reset.c:110:28
 1e035fc:    56 01             	{pc, r6-r4} = [sp++]			  ## power_reset.c:110:28
 1e035fe:    00 f4 40 29       	[r2 + 0] |= 64			  ## power_reset.c:114:23
 1e03602:    02 f6 c0 20       	r2 = [r2 + 192]			  ## power_reset.c:116:19
 1e03606:    64 41             	r4 = [r0 + 88]			  ## power_reset.c:117:24
 1e03608:    85 04             	r5 = r2.b0 (u)			  ## power_reset.c:117:27
 1e0360a:    54 ba             	r4 |= r5			  ## power_reset.c:117:24
 1e0360c:    6c 41             	[r0 + 88] = r4			  ## power_reset.c:117:24
 1e0360e:    00 f3 36 20       	if ((r2 & 1) == 0) goto 108 <reset_source_dump+0xB4 : 1e0367e >			  ## power_reset.c:117:24
 1e03612:    25 f9 78 37       	r5 = b[r3 + 1912] (s)			  ## power_reset.c:63:10
 1e03616:    05 e0 04 b0       	ifs (r5 < 0) goto 8 <reset_source_dump+0x58 : 1e03622 >			  ## power_reset.c:63:9
 1e0361a:    03 fd 80 4a       	r3 = r4 | 32768			  ## power_reset.c:64:28
 1e0361e:    6b 41             	[r0 + 88] = r3			  ## power_reset.c:64:28
 1e03620:    2e 18             	goto 92 <reset_source_dump+0xB4 : 1e0367e >			  ## power_reset.c:64:28
 1e03622:    14 fc 96 ff       	r4 = r1 + -106
 1e03626:    05 68             	r5 = b[r4 + 0] (u)			  ## power_reset.c:69:17
 1e03628:    15 b3             	r5 |= 64			  ## power_reset.c:69:17
 1e0362a:    0d 68             	b[r4 + 0] = r5			  ## power_reset.c:69:17
 1e0362c:    45 68             	r5 = b[r4 + 4] (u)			  ## power_reset.c:72:28
 1e0362e:    64 41             	r4 = [r0 + 88]			  ## power_reset.c:72:24
 1e03630:    2e c2             	r6 = r5 << 8			  ## power_reset.c:72:32
 1e03632:    54 bc             	r4 |= r6			  ## power_reset.c:72:24
 1e03634:    6c 41             	[r0 + 88] = r4			  ## power_reset.c:72:24
 1e03636:    02 f3 22 50       	if ((r5 & 4) == 0) goto 68 <reset_source_dump+0xB4 : 1e0367e >			  ## power_reset.c:72:24
 1e0363a:    25 f9 1e 30       	r5 = b[r3 + 30] (s)			  ## power_reset.c:14:10
 1e0363e:    05 e0 04 b0       	ifs (r5 < 0) goto 8 <reset_source_dump+0x80 : 1e0364a >			  ## power_reset.c:14:9
 1e03642:    03 fd 80 4b       	r3 = r4 | 8388608			  ## power_reset.c:15:28
 1e03646:    6b 41             	[r0 + 88] = r3			  ## power_reset.c:15:28
 1e03648:    1a 18             	goto 52 <reset_source_dump+0xB4 : 1e0367e >			  ## power_reset.c:15:28
 1e0364a:    e4 97             	r4 = r3 + 30
 1e0364c:    05 68             	r5 = b[r4 + 0] (u)			  ## power_reset.c:20:17
 1e0364e:    15 b3             	r5 |= 64			  ## power_reset.c:20:17
 1e03650:    0d 68             	b[r4 + 0] = r5			  ## power_reset.c:20:17
 1e03652:    05 66             	r5 = b[r3 + 0] (u)			  ## power_reset.c:23:28
 1e03654:    63 41             	r3 = [r0 + 88]			  ## power_reset.c:23:24
 1e03656:    2e c4             	r6 = r5 << 16			  ## power_reset.c:23:32
 1e03658:    53 bc             	r3 |= r6			  ## power_reset.c:23:24
 1e0365a:    6b 41             	[r0 + 88] = r3			  ## power_reset.c:23:24
 1e0365c:    05 f3 0f 50       	if ((r5 & 32) == 0) goto 30 <reset_source_dump+0xB4 : 1e0367e >			  ## power_reset.c:23:24
 1e03660:    a5 69             	r5 = b[r4 + 26] (u)			  ## power_reset.c:45:13
 1e03662:    01 ff ab 50 02 00 	if (r5 != 171) goto 4 <reset_source_dump+0xA2 : 1e0366c >			  ## power_reset.c:45:13
 1e03668:    13 bc             	r3 |= 16777216			  ## power_reset.c:47:32
 1e0366a:    05 18             	goto 10 <reset_source_dump+0xAC : 1e03676 >			  ## power_reset.c:47:32
 1e0366c:    a5 69             	r5 = b[r4 + 26] (u)			  ## power_reset.c:49:20
 1e0366e:    01 ff ac 50 05 00 	if (r5 != 172) goto 10 <reset_source_dump+0xB4 : 1e0367e >			  ## power_reset.c:49:20
 1e03674:    93 bc             	r3 |= 33554432			  ## power_reset.c:51:32
 1e03676:    6b 41             	[r0 + 88] = r3
 1e03678:    a3 69             	r3 = b[r4 + 26] (u)
 1e0367a:    03 70             	r3 = 0
 1e0367c:    ab 69             	b[r4 + 26] = r3
 1e0367e:    06 f3 05 20       	if ((r2 & 64) == 0) goto 10 <reset_source_dump+0xC2 : 1e0368c >
 1e03682:    01 62             	r1 = b[r1 + 0] (u)			  ## power_reset.c:137:13
 1e03684:    05 f3 02 10       	if ((r1 & 32) == 0) goto 4 <reset_source_dump+0xC2 : 1e0368c >			  ## power_reset.c:137:13
 1e03688:    16 f4 04 0c       	[r0 + 88] |= 67108864			  ## power_reset.c:138:32
 1e0368c:    56 01             	{pc, r6-r4} = [sp++]


timer1_init:
 1e0368e:    34 00             	[--sp] = rets			  ## timer.c:197:0
 1e03690:    c0 ff 00 05 1e 00 	r0 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:198:20
 1e03696:    c0 f4 40 0a       	[r0 + 0] = 16384			  ## timer.c:198:20
 1e0369a:    c2 ff f4 2e e0 01 	r2 = 31469300 <timer1_isr : 1e02ef4 >			  ## timer.c:200:5
 1e036a0:    50 70             	r0 = 5			  ## timer.c:200:5
 1e036a2:    11 70             	r1 = 1			  ## timer.c:200:5
 1e036a4:    80 f3 b5 38       	call 29034 <request_irq : 1e0a812 >			  ## timer.c:200:5
 1e036a8:    00 70             	r0 = 0			  ## timer.c:204:5
 1e036aa:    30 00             	pc = [sp++]			  ## timer.c:204:5


get_dev_id:
 1e036ac:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:154:0
 1e036ae:    04 08             	r4 = r0			  ## debug.c:154:0
 1e036b0:    98 f3 24 1c       	call 3160136 <strlen : 106efc >			  ## debug.c:158:48
 1e036b4:    05 08             	r5 = r0			  ## debug.c:158:48
 1e036b6:    07 70             	r7 = 0			  ## debug.c:158:48
 1e036b8:    c6 ff a8 e2 e0 01 	r6 = 31515304 <dev_id_list : 1e0e2a8 >			  ## debug.c:158:48
 1e036be:    60 08             	r0 = r6			  ## debug.c:158:14
 1e036c0:    41 08             	r1 = r4			  ## debug.c:158:14
 1e036c2:    52 08             	r2 = r5			  ## debug.c:158:14
 1e036c4:    98 f3 12 1c       	call 3160100 <memcmp : 106eec >			  ## debug.c:158:14
 1e036c8:    06 20             	if (r0 == 0) goto 12 <get_dev_id+0x2A : 1e036d6 >			  ## debug.c:158:14
 1e036ca:    17 80             	r7 += 1			  ## debug.c:157:47
 1e036cc:    16 81             	r6 += 17			  ## debug.c:157:19
 1e036ce:    27 e3 f6 3f       	if (r7 < 50) goto -20 <get_dev_id+0x12 : 1e036be >			  ## debug.c:157:19
 1e036d2:    f0 07             	r0 = -1
 1e036d4:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1
 1e036d6:    00 6d             	r0 = b[r6 + 16] (u)			  ## debug.c:159:20
 1e036d8:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:164:1


mpu_privilege:
 1e036da:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1344:0
 1e036dc:    16 fc d0 ff       	r6 = r1 + -48			  ## debug.c:1347:5
 1e036e0:    64 02             	r4 = [sp+24]			  ## debug.c:1347:5
 1e036e2:    55 02             	r5 = [sp+20]			  ## debug.c:1347:5
 1e036e4:    80 c0             	r0 = r0 << 2
 1e036e6:    c7 ff 00 03 1b 00 	r7 = 1770240 <uECC_vli_cmp_unsafe+0xA9304 : 1b0300 >
 1e036ec:    70 09             	r0 += r7
 1e036ee:    36 e0 13 20       	if (r6 >= 3) goto 38 <mpu_privilege+0x3E : 1e03718 >
 1e036f2:    03 41             	r3 = [r0 + 64]			  ## debug.c:1361:26
 1e036f4:    81 05             	r1 = r6.b0 (u)			  ## debug.c:1361:29
 1e036f6:    ce c0             	r6 = r1 << 3			  ## debug.c:1361:29
 1e036f8:    82 0d             	r2 <<= r6			  ## debug.c:1361:29
 1e036fa:    52 b6             	r2 |= r3			  ## debug.c:1361:26
 1e036fc:    0a 41             	[r0 + 64] = r2			  ## debug.c:1361:26
 1e036fe:    12 70             	r2 = 1			  ## debug.c:1362:29
 1e03700:    13 70             	r3 = 1			  ## debug.c:1362:29
 1e03702:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x2C : 1e03706 >			  ## debug.c:1362:29
 1e03704:    03 70             	r3 = 0			  ## debug.c:1362:29
 1e03706:    95 92             	r5 = r1 + 9			  ## debug.c:1362:29
 1e03708:    43 0d             	r3 <<= r5			  ## debug.c:1362:29
 1e0370a:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x34 : 1e0370e >			  ## debug.c:1362:29
 1e0370c:    02 70             	r2 = 0			  ## debug.c:1362:29
 1e0370e:    11 81             	r1 += 17			  ## debug.c:1362:29
 1e03710:    f8 fd 10 12       	r1 = r2 << r1			  ## debug.c:1362:29
 1e03714:    51 b6             	r1 |= r3			  ## debug.c:1362:29
 1e03716:    1b 18             	goto 54 <mpu_privilege+0x74 : 1e0374e >			  ## debug.c:1362:29
 1e03718:    01 e5 10 00       	if (r1 == 80) goto 32 <mpu_privilege+0x62 : 1e0373c >
 1e0371c:    31 e4 1a 10       	if (r1 != 67) goto 52 <mpu_privilege+0x7A : 1e03754 >
 1e03720:    12 70             	r2 = 1
 1e03722:    16 70             	r6 = 1			  ## debug.c:1350:30
 1e03724:    01 36             	if (r3 != 0) goto 2 <mpu_privilege+0x4E : 1e03728 >			  ## debug.c:1350:30
 1e03726:    06 70             	r6 = 0			  ## debug.c:1350:30
 1e03728:    11 70             	r1 = 1			  ## debug.c:1350:52
 1e0372a:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x54 : 1e0372e >
 1e0372c:    01 70             	r1 = 0			  ## debug.c:1350:52
 1e0372e:    c1 fd 10 16       	r1 <= insert(r6, p:2, l:1)			  ## debug.c:1350:49
 1e03732:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x5C : 1e03736 >			  ## debug.c:1350:49
 1e03734:    02 70             	r2 = 0			  ## debug.c:1350:74
 1e03736:    c1 fd 08 12       	r1 <= insert(r2, p:1, l:1)			  ## debug.c:1350:71
 1e0373a:    09 18             	goto 18 <mpu_privilege+0x74 : 1e0374e >			  ## debug.c:1350:71
 1e0373c:    11 70             	r1 = 1
 1e0373e:    12 70             	r2 = 1			  ## debug.c:1354:53
 1e03740:    01 38             	if (r4 != 0) goto 2 <mpu_privilege+0x6A : 1e03744 >			  ## debug.c:1354:53
 1e03742:    02 70             	r2 = 0			  ## debug.c:1354:53
 1e03744:    01 3a             	if (r5 != 0) goto 2 <mpu_privilege+0x6E : 1e03748 >
 1e03746:    01 70             	r1 = 0			  ## debug.c:1354:30
 1e03748:    09 c2             	r1 = r1 << 8			  ## debug.c:1354:30
 1e0374a:    c1 fd 80 12       	r1 <= insert(r2, p:16, l:1)			  ## debug.c:1354:50
 1e0374e:    02 40             	r2 = [r0 + 0]
 1e03750:    51 b4             	r1 |= r2
 1e03752:    09 40             	[r0 + 0] = r1
 1e03754:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1367:1


mpu_set:
 1e03756:    77 01             	[--sp] = {rets, r7-r4}			  ## debug.c:1424:0
 1e03758:    f8 0b             	sp += -16			  ## debug.c:1424:0
 1e0375a:    04 08             	r4 = r0			  ## debug.c:1424:0
 1e0375c:    34 e0 72 c0       	ifs (r4 > 3) goto 228 <mpu_set+0xEE : 1e03844 >			  ## debug.c:1424:0
 1e03760:    c5 ff fc 03 1b 00 	r5 = 1770492 <uECC_vli_cmp_unsafe+0xA9400 : 1b03fc >			  ## debug.c:1424:0
 1e03766:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e03768:    96 02             	r6 = [sp+36]			  ## debug.c:572:14
 1e0376a:    20 f3 05 00       	if ((r0 & 1) != 0) goto 10 <mpu_set+0x22 : 1e03778 >			  ## debug.c:572:14
 1e0376e:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:573:9
 1e03772:    00 4a             	r0 = [r5 + 0]			  ## debug.c:572:14
 1e03774:    00 f3 fb 0f       	if ((r0 & 1) == 0) goto -10 <mpu_set+0x18 : 1e0376e >			  ## debug.c:572:14
 1e03778:    50 fc 84 ff       	r0 = r5 + -124			  ## debug.c:1432:5
 1e0377c:    b1 f6 00 04       	[r0+r4<<2] = r1			  ## debug.c:1432:22
 1e03780:    00 84             	r0 += 64			  ## debug.c:1433:5
 1e03782:    b2 f6 00 04       	[r0+r4<<2] = r2			  ## debug.c:1433:22
 1e03786:    01 fc 40 ff       	r1 = r0 + -192			  ## debug.c:1435:5
 1e0378a:    00 70             	r0 = 0
 1e0378c:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1435:22
 1e03790:    01 84             	r1 += 64			  ## debug.c:1436:5
 1e03792:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## debug.c:1436:22
 1e03796:    81 a2             	r1 = sp + 40			  ## debug.c:1436:22
 1e03798:    29 02             	[sp+8] = r1			  ## debug.c:1443:5
 1e0379a:    39 02             	[sp+12] = r1
 1e0379c:    01 6c             	r1 = b[r6 + 0] (u)			  ## debug.c:1377:12
 1e0379e:    02 70             	r2 = 0			  ## debug.c:1377:12
 1e037a0:    03 70             	r3 = 0
 1e037a2:    3e 22             	if (r1 == 0) goto 124 <mpu_set+0xCA : 1e03820 >
 1e037a4:    51 04             	r1 = r1.b0 (s)			  ## debug.c:1378:17
 1e037a6:    f1 e4 17 c0       	ifs (r1 > 79) goto 46 <mpu_set+0x82 : 1e037d8 >			  ## debug.c:1378:9
 1e037aa:    17 fc d0 ff       	r7 = r1 + -48
 1e037ae:    47 e0 21 20       	if (r7 >= 4) goto 66 <mpu_set+0x9E : 1e037f4 >
 1e037b2:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1395:13
 1e037b6:    19 02             	[sp+4] = r1			  ## debug.c:1395:13
 1e037b8:    27 fd 02 39       	r7 = r3 & 2			  ## debug.c:1395:13
 1e037bc:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1395:13
 1e037be:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1395:13
 1e037c0:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1395:13
 1e037c4:    0f 02             	[sp] = r7			  ## debug.c:1395:13
 1e037c6:    40 08             	r0 = r4			  ## debug.c:1395:13
 1e037c8:    88 17             	call -240 <mpu_privilege : 1e036da >			  ## debug.c:1395:13
 1e037ca:    30 02             	r0 = [sp+12]			  ## debug.c:1396:19
 1e037cc:    41 90             	r1 = r0 + 4			  ## debug.c:1396:19
 1e037ce:    39 02             	[sp+12] = r1			  ## debug.c:1396:19
 1e037d0:    02 40             	r2 = [r0 + 0]			  ## debug.c:1396:19
 1e037d2:    00 6c             	r0 = b[r6 + 0] (u)			  ## debug.c:1397:20
 1e037d4:    03 70             	r3 = 0			  ## debug.c:1397:20
 1e037d6:    21 18             	goto 66 <mpu_set+0xC4 : 1e0381a >			  ## debug.c:1397:20
 1e037d8:    61 e7 06 c0       	ifs (r1 > 118) goto 12 <mpu_set+0x92 : 1e037e8 >
 1e037dc:    01 e5 0c 00       	if (r1 == 80) goto 24 <mpu_set+0xA2 : 1e037f8 >
 1e037e0:    21 e7 1b 10       	if (r1 != 114) goto 54 <mpu_set+0xC4 : 1e0381a >
 1e037e4:    93 b0             	r3 |= 2			  ## debug.c:1405:23
 1e037e6:    19 18             	goto 50 <mpu_set+0xC4 : 1e0381a >			  ## debug.c:1405:23
 1e037e8:    71 e7 16 00       	if (r1 == 119) goto 44 <mpu_set+0xC2 : 1e03818 >
 1e037ec:    81 e7 15 10       	if (r1 != 120) goto 42 <mpu_set+0xC4 : 1e0381a >
 1e037f0:    13 b1             	r3 |= 4			  ## debug.c:1408:23
 1e037f2:    13 18             	goto 38 <mpu_set+0xC4 : 1e0381a >			  ## debug.c:1408:23
 1e037f4:    31 e4 11 10       	if (r1 != 67) goto 34 <mpu_set+0xC4 : 1e0381a >
 1e037f8:    21 fd 01 39       	r1 = r3 & 1
 1e037fc:    19 02             	[sp+4] = r1
 1e037fe:    27 fd 02 39       	r7 = r3 & 2
 1e03802:    01 04             	r1 = r0.b0 (u)
 1e03804:    82 04             	r2 = r2.b0 (u)
 1e03806:    23 fd 04 39       	r3 = r3 & 4
 1e0380a:    0f 02             	[sp] = r7
 1e0380c:    40 08             	r0 = r4
 1e0380e:    65 17             	call -310 <mpu_privilege : 1e036da >
 1e03810:    00 6c             	r0 = b[r6 + 0] (u)
 1e03812:    02 70             	r2 = 0
 1e03814:    03 70             	r3 = 0
 1e03816:    01 18             	goto 2 <mpu_set+0xC4 : 1e0381a >
 1e03818:    13 b0             	r3 |= 1			  ## debug.c:1402:23
 1e0381a:    11 6c             	r1 = b[r6 + 1] (u)			  ## debug.c:1377:12
 1e0381c:    16 80             	r6 += 1			  ## debug.c:1414:15
 1e0381e:    c2 33             	if (r1 != 0) goto -124 <mpu_set+0x4E : 1e037a4 >
 1e03820:    21 fd 01 39       	r1 = r3 & 1			  ## debug.c:1416:5
 1e03824:    19 02             	[sp+4] = r1			  ## debug.c:1416:5
 1e03826:    26 fd 02 39       	r6 = r3 & 2			  ## debug.c:1416:5
 1e0382a:    01 04             	r1 = r0.b0 (u)			  ## debug.c:1416:5
 1e0382c:    82 04             	r2 = r2.b0 (u)			  ## debug.c:1416:5
 1e0382e:    23 fd 04 39       	r3 = r3 & 4			  ## debug.c:1416:5
 1e03832:    0e 02             	[sp] = r6			  ## debug.c:1416:5
 1e03834:    40 08             	r0 = r4			  ## debug.c:1416:5
 1e03836:    51 17             	call -350 <mpu_privilege : 1e036da >			  ## debug.c:1416:5
 1e03838:    02 18             	goto 4 <mpu_set+0xE8 : 1e0383e >			  ## debug.c:1416:5
 1e0383a:    c0 f4 e7 59       	[r5 + 0] = 231			  ## debug.c:580:9
 1e0383e:    00 4a             	r0 = [r5 + 0]
 1e03840:    20 f3 fb 0f       	if ((r0 & 1) != 0) goto -10 <mpu_set+0xE4 : 1e0383a >
 1e03844:    08 0a             	sp += 16
 1e03846:    57 01             	{pc, r7-r4} = [sp++]			  ## debug.c:1457:1


debug_init:
 1e03848:    76 01             	[--sp] = {rets, r6-r4}			  ## debug.c:1606:0
 1e0384a:    fa 0b             	sp += -12			  ## debug.c:1606:0
 1e0384c:    c0 ff 17 00 00 80 	r0 = 2147483671 <report_overlay_size+0x13 : 17 >			  ## debug.c:1612:14
 1e03852:    c1 ff c0 e1 1b 00 	r1 = 1827264 <uECC_vli_cmp_unsafe+0xB71C4 : 1be1c0 >			  ## debug.c:1612:14
 1e03858:    08 43             	[r1 + 64] = r0			  ## debug.c:1612:14
 1e0385a:    c0 f4 01 19       	[r1 + 0] = 1			  ## debug.c:1619:14
 1e0385e:    db f4 10 1b       	[r1 + 108] = 1048576			  ## debug.c:598:19
 1e03862:    da f4 11 1b       	[r1 + 104] = 1114112			  ## debug.c:599:19
 1e03866:    c4 ff e0 30 00 00 	r4 = 12512 <report_data_code_begin : 30e0 >			  ## debug.c:592:19
 1e0386c:    9c 43             	[r1 + 100] = r4			  ## debug.c:592:19
 1e0386e:    c6 ff 08 52 00 00 	r6 = 21000 <report_overlay_end : 5208 >			  ## debug.c:1619:14
 1e03874:    8e 43             	[r1 + 96] = r6			  ## debug.c:593:19
 1e03876:    c0 ff 20 01 e0 01 	r0 = 31457568 <text_begin : 1e00120 >			  ## debug.c:586:19
 1e0387c:    78 43             	[r1 + 92] = r0			  ## debug.c:586:19
 1e0387e:    c0 ff 00 83 e1 01 	r0 = 31556352 <text_end : 1e18300 >			  ## debug.c:587:19
 1e03884:    68 43             	[r1 + 88] = r0			  ## debug.c:587:19
 1e03886:    c0 ff 18 09 00 00 	r0 = 2328 <data_magic : 918 >			  ## debug.c:1655:5
 1e0388c:    f1 7f             	r1 = 255			  ## debug.c:1655:5
 1e0388e:    02 74             	r2 = 64			  ## debug.c:1655:5
 1e03890:    98 f3 2e 1b       	call 3159644 <memset : 106ef0 >			  ## debug.c:1655:5
 1e03894:    c0 ff 42 df e0 01 	r0 = 31514434 <update_target_end+0x62 : 1e0df42 >			  ## debug.c:1662:99
 1e0389a:    08 17             	call -496 <get_dev_id : 1e036ac >			  ## debug.c:1662:99
 1e0389c:    05 08             	r5 = r0			  ## debug.c:1662:99
 1e0389e:    c0 ff 4a df e0 01 	r0 = 31514442 <update_target_end+0x6A : 1e0df4a >			  ## debug.c:1662:122
 1e038a4:    03 17             	call -506 <get_dev_id : 1e036ac >			  ## debug.c:1662:122
 1e038a6:    28 02             	[sp+8] = r0			  ## debug.c:1662:5
 1e038a8:    1d 02             	[sp+4] = r5			  ## debug.c:1662:5
 1e038aa:    c1 ff 51 df e0 01 	r1 = 31514449 <update_target_end+0x71 : 1e0df51 >			  ## debug.c:1662:5
 1e038b0:    62 fc ff ff       	r2 = r6 + -1			  ## debug.c:1619:14
 1e038b4:    00 70             	r0 = 0			  ## debug.c:1662:5
 1e038b6:    09 02             	[sp] = r1			  ## debug.c:1662:5
 1e038b8:    41 08             	r1 = r4			  ## debug.c:1662:5
 1e038ba:    4d 17             	call -358 <mpu_set : 1e03756 >			  ## debug.c:1662:5
 1e038bc:    06 0a             	sp += 12			  ## debug.c:1662:5
 1e038be:    56 01             	{pc, r6-r4} = [sp++]			  ## debug.c:1702:1


__crc16_mutex_init:
 1e038c0:    c0 ff 3c 1d 00 00 	r0 = 7484 <mutex : 1d3c >			  ## crc16.c:14:0
 1e038c6:    d8 f3 a9 1a       	goto 3159378 <os_mutex_create : 106e1c >			  ## crc16.c:15:5


setup_arch:
 1e038ca:    76 01             	[--sp] = {rets, r6-r4}			  ## setup.c:144:0
 1e038cc:    20 fb 71 04       	r0 = 1974272			  ## setup.c:152:20
 1e038d0:    00 f4 04 09       	[r0 + 0] |= 4			  ## setup.c:152:20
 1e038d4:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## setup.c:152:20
 1e038da:    01 f9 94 00       	r1 = b[r0 + 148] (u)			  ## setup.c:152:20
 1e038de:    46 32             	if (r1 != 0) goto 140 <setup_arch+0xA2 : 1e0396c >			  ## setup.c:152:20
 1e038e0:    14 70             	r4 = 1
 1e038e2:    c2 ff 08 52 00 00 	r2 = 21000 <report_overlay_end : 5208 >
 1e038e8:    c3 ff 60 fb 00 00 	r3 = 64352 <report_heap_end : fb60 >
 1e038ee:    a1 b6             	r1 = r3 - r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e038f0:    c9 d1             	r1 = r1 >> 7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:45:5
 1e038f2:    14 f9 94 00       	b[r0 + 148] = r4
 1e038f6:    0b ff 01 14 02 00 	ifs (r1 < 1025) goto 4 <setup_arch+0x36 : 1e03900 >
 1e038fc:    8f f3 00 fd       	call 2095616 <p33_soft_reset : 3300 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e03900:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e03902:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e03904:    98 f3 cc 1a       	call 3159448 <pmalloc_init : 106ea0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:58:9
 1e03908:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e0390e:    01 fb 00 08       	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e03912:    98 f3 d1 1a       	call 3159458 <vmm_init_ : 106eb8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e03916:    c5 ff 90 25 00 00 	r5 = 9616 <stack_mem : 2590 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/sbrk.c:60:9
 1e0391c:    cf f4 20 5b       	[r5 + 60] = 2097152			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:610:29
 1e03920:    c0 ff 00 f0 20 00 	r0 = 2158592 <uECC_vli_cmp_unsafe+0x108004 : 20f000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e03926:    08 4b             	[r5 + 64] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:611:29
 1e03928:    d1 f4 f0 5a       	[r5 + 68] = 61440			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:612:29
 1e0392c:    d2 f4 f0 55       	[r5 + 72] = 31457280			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:615:29
 1e03930:    00 fb e0 01       	r0 = 480 <BTCTLER_CL_BSS_SIZE+0x1C : 1e0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:616:29
 1e03934:    10 f7 4c 50       	h[r5 + 76] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:617:29
 1e03938:    50 fc 50 00       	r0 = r5 + 80			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e0393c:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e0393e:    92 77             	r2 = 121			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03940:    06 70             	r6 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03942:    98 f3 d5 1a       	call 3159466 <memset : 106ef0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e03946:    c0 ff fc ff ff 1f 	r0 = 536870908 <bank_code_load_addr+0x1E5750 : 1fffffc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:620:5
 1e0394c:    f1 d0             	r1 = r6 >> 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:9
 1e0394e:    51 b1             	r1 &= r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:25
 1e03950:    82 f6 00 15       	r2 = [r1+r5]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e03954:    23 fd 1f 69       	r3 = r6 & 31			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e03958:    f8 fd 30 34       	r3 = r4 << r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:40
 1e0395c:    52 b6             	r2 |= r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e0395e:    92 f6 00 15       	[r1+r5] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:623:37
 1e03962:    01 f7 4a 50       	r1 = h[r5 + 74] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:622:44
 1e03966:    16 80             	r6 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/cpu/bd19/memory/heap_mmu.c:622:65
 1e03968:    16 f2 f0 3f       	if (r6 < r1) goto -32 <setup_arch+0x82 : 1e0394c >
 1e0396c:    c0 ff 20 10 00 00 	r0 = 4128 <stack_magic : 1020 >			  ## setup.c:155:5
 1e03972:    a1 75             	r1 = 90			  ## setup.c:155:5
 1e03974:    02 71             	r2 = 16			  ## setup.c:155:5
 1e03976:    98 f3 bb 1a       	call 3159414 <memset : 106ef0 >			  ## setup.c:155:5
 1e0397a:    c0 ff 30 18 00 00 	r0 = 6192 <stack_magic0 : 1830 >			  ## setup.c:156:5
 1e03980:    a1 75             	r1 = 90			  ## setup.c:156:5
 1e03982:    02 71             	r2 = 16			  ## setup.c:156:5
 1e03984:    98 f3 b4 1a       	call 3159400 <memset : 106ef0 >			  ## setup.c:156:5
 1e03988:    fd 15             	call -1030 <p11_init : 1e03584 >			  ## setup.c:159:5
 1e0398a:    17 16             	call -978 <wdt_init : 1e035ba >			  ## setup.c:161:5
 1e0398c:    80 f3 be a3       	call 83836 <clk_voltage_init : 1e1810c >			  ## setup.c:164:5
 1e03990:    80 f3 c2 a3       	call 83844 <clk_early_init : 1e18118 >			  ## setup.c:165:5
 1e03994:    80 f3 ea 3d       	call 31700 <tick_timer_init : 1e0b56c >			  ## setup.c:167:5
 1e03998:    18 16             	call -976 <reset_source_dump : 1e035ca >			  ## setup.c:197:5
 1e0399a:    c4 ff 80 4b 00 00 	r4 = 19328 <exception_irq_handler : 4b80 >			  ## setup.c:202:5
 1e039a0:    00 70             	r0 = 0			  ## setup.c:202:5
 1e039a2:    21 70             	r1 = 2			  ## setup.c:202:5
 1e039a4:    42 08             	r2 = r4			  ## setup.c:202:5
 1e039a6:    80 f3 34 37       	call 28264 <request_irq : 1e0a812 >			  ## setup.c:202:5
 1e039aa:    10 70             	r0 = 1			  ## setup.c:203:5
 1e039ac:    21 70             	r1 = 2			  ## setup.c:203:5
 1e039ae:    42 08             	r2 = r4			  ## setup.c:203:5
 1e039b0:    80 f3 2f 37       	call 28254 <request_irq : 1e0a812 >			  ## setup.c:203:5
 1e039b4:    80 f3 d7 3f       	call 32686 <sys_timer_init : 1e0b966 >			  ## setup.c:205:5
 1e039b8:    47 17             	call -370 <debug_init : 1e03848 >			  ## setup.c:207:5
 1e039ba:    16 01             	{rets, r6-r4} = [sp++]			  ## setup.c:212:5
 1e039bc:    81 1f             	goto -254 <__crc16_mutex_init : 1e038c0 >			  ## setup.c:212:5


low_power_sys_get:
 1e039be:    74 01             	[--sp] = {rets, r4}			  ## power_hw.c:1196:0
 1e039c0:    04 08             	r4 = r0			  ## power_hw.c:1196:0
 1e039c2:    00 71             	r0 = 16			  ## power_hw.c:1199:13
 1e039c4:    80 f3 4c 36       	call 27800 <malloc : 1e0a660 >			  ## power_hw.c:1199:13
 1e039c8:    0d 20             	if (r0 == 0) goto 26 <low_power_sys_get+0x26 : 1e039e4 >			  ## power_hw.c:1199:13
 1e039ca:    3c 40             	[r0 + 12] = r4			  ## power_hw.c:1204:16
 1e039cc:    c2 f4 00 09       	[r0 + 8] = 0			  ## power_hw.c:1205:17
 1e039d0:    c1 ff c0 4e 00 00 	r1 = 20160 <nvbss_begin : 4ec0 >			  ## list.h:154:28
 1e039d6:    42 42             	r2 = [r1 + 16]			  ## list.h:154:28
 1e039d8:    48 42             	[r1 + 16] = r0			  ## list.h:137:16
 1e039da:    c1 80             	r1 += 12			  ## list.h:137:16
 1e039dc:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e039de:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e039e0:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e039e2:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1210:1
 1e039e4:    8f f3 8c fc       	call 2095384 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e039e8:    00 70             	r0 = 0			  ## cpu.h:148:5
 1e039ea:    54 01             	{pc, r4} = [sp++]			  ## power_hw.c:1210:1


power_init:
 1e039ec:    7b 01             	[--sp] = {rets, r11-r4}			  ## power_hw.c:1660:0
 1e039ee:    ea 0b             	sp += -44			  ## power_hw.c:1660:0
 1e039f0:    c0 ff f3 1f 1a 00 	r0 = 1712115 <uECC_vli_cmp_unsafe+0x9AFF7 : 1a1ff3 >			  ## power_hw.c:1660:0
 1e039f6:    31 60             	r1 = b[r0 + 3] (u)			  ## power_hw.c:1566:5
 1e039f8:    f1 b2             	r1 &= 4294967263			  ## power_hw.c:1566:5
 1e039fa:    39 60             	b[r0 + 3] = r1			  ## power_hw.c:1566:5
 1e039fc:    06 fc 20 f8       	r6 = r0 + -2016			  ## power_hw.c:1566:5
 1e03a00:    41 6c             	r1 = b[r6 + 4] (u)			  ## power_hw.c:1568:5
 1e03a02:    f1 b0             	r1 &= 4294967293			  ## power_hw.c:1568:5
 1e03a04:    49 6c             	b[r6 + 4] = r1			  ## power_hw.c:1568:5
 1e03a06:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1523:9
 1e03a08:    c9 ff c0 4e 00 00 	r9 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:1523:9
 1e03a0e:    03 22             	if (r1 == 0) goto 6 <power_init+0x2A : 1e03a16 >			  ## power_hw.c:1523:9
 1e03a10:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:1526:27
 1e03a12:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1526:25
 1e03a14:    51 18             	goto 162 <power_init+0xCC : 1e03ab8 >			  ## power_hw.c:1526:25
 1e03a16:    00 f9 35 90       	r0 = b[r9 + 53] (u)			  ## power_hw.c:1530:17
 1e03a1a:    4e 30             	if (r0 != 0) goto 156 <power_init+0xCC : 1e03ab8 >			  ## power_hw.c:1530:17
 1e03a1c:    10 70             	r0 = 1			  ## power_hw.c:1533:26
 1e03a1e:    10 f9 35 90       	b[r9 + 53] = r0			  ## power_hw.c:1533:26
 1e03a22:    67 fc 77 07       	r7 = r6 + 1911			  ## power_hw.c:1533:26
 1e03a26:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1539:22
 1e03a28:    90 b0             	r0 |= 2			  ## power_hw.c:1539:22
 1e03a2a:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1539:22
 1e03a2c:    20 6e             	r0 = b[r7 + 2] (u)			  ## power_hw.c:1540:22
 1e03a2e:    90 b1             	r0 |= 8			  ## power_hw.c:1540:22
 1e03a30:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:1540:22
 1e03a32:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1543:9
 1e03a34:    20 fd cf 09       	r0 = r0 & 207			  ## power_hw.c:1543:9
 1e03a38:    10 b2             	r0 |= 16			  ## power_hw.c:1543:9
 1e03a3a:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1543:9
 1e03a3c:    10 6e             	r0 = b[r7 + 1] (u)			  ## power_hw.c:1551:22
 1e03a3e:    90 b1             	r0 |= 8			  ## power_hw.c:1551:22
 1e03a40:    18 6e             	b[r7 + 1] = r0			  ## power_hw.c:1551:22
 1e03a42:    80 a0             	r0 = sp + 8
 1e03a44:    01 70             	r1 = 0			  ## power_hw.c:155:21
 1e03a46:    42 72             	r2 = 36			  ## power_hw.c:155:21
 1e03a48:    98 f3 52 1a       	call 3159204 <memset : 106ef0 >			  ## power_hw.c:155:21
 1e03a4c:    c0 ff 5c df e0 01 	r0 = 31514460 <update_target_end+0x7C : 1e0df5c >			  ## power_hw.c:157:15
 1e03a52:    c1 ff 81 df e0 01 	r1 = 31514497 <update_target_end+0xA1 : 1e0df81 >			  ## power_hw.c:157:15
 1e03a58:    80 f3 0b 4e       	call 39958 <fopen : 1e0d672 >			  ## power_hw.c:157:15
 1e03a5c:    04 08             	r4 = r0			  ## power_hw.c:157:15
 1e03a5e:    26 28             	if (r4 == 0) goto 76 <power_init+0xC0 : 1e03aac >
 1e03a60:    81 a0             	r1 = sp + 8
 1e03a62:    80 f3 26 4f       	call 40524 <fget_attrs : 1e0d8b2 >			  ## power_hw.c:163:5
 1e03a66:    32 02             	r2 = [sp+12]			  ## power_hw.c:164:30
 1e03a68:    43 02             	r3 = [sp+16]			  ## power_hw.c:165:36
 1e03a6a:    22 ff 01 2d 02 00 	if (r2 >= 65537) goto 4 <power_init+0x88 : 1e03a74 >
 1e03a70:    03 34             	if (r2 != 0) goto 6 <power_init+0x8C : 1e03a78 >
 1e03a72:    0a 18             	goto 20 <power_init+0x9C : 1e03a88 >
 1e03a74:    8f f3 44 fc       	call 2095240 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03a78:    20 fb 1a 0b       	r0 = 1703936
 1e03a7c:    81 f9 01 30       	r1 = b[r3 ++= 1] (u)			  ## power_hw.c:171:26
 1e03a80:    91 f9 01 00       	b[r0 ++= 1] = r1			  ## power_hw.c:171:24
 1e03a84:    52 f3 fa ff       	if (--r2 != 0) goto -12 <power_init+0x90 : 1e03a7c >
 1e03a88:    40 08             	r0 = r4			  ## power_hw.c:174:5
 1e03a8a:    80 f3 cd 4e       	call 40346 <fclose : 1e0d828 >			  ## power_hw.c:174:5
 1e03a8e:    c0 ff 78 df e0 01 	r0 = 31514488 <update_target_end+0x98 : 1e0df78 >			  ## power_hw.c:180:87
 1e03a94:    0b 16             	call -1002 <get_dev_id : 1e036ac >			  ## power_hw.c:180:87
 1e03a96:    18 02             	[sp+4] = r0			  ## power_hw.c:180:5
 1e03a98:    c3 ff 80 df e0 01 	r3 = 31514496 <update_target_end+0xA0 : 1e0df80 >			  ## power_hw.c:180:5
 1e03a9e:    62 fc 56 f7       	r2 = r6 + -2218			  ## power_hw.c:180:5
 1e03aa2:    30 70             	r0 = 3			  ## power_hw.c:180:5
 1e03aa4:    20 fb 1a 1b       	r1 = 1703936			  ## power_hw.c:180:5
 1e03aa8:    0b 02             	[sp] = r3			  ## power_hw.c:180:5
 1e03aaa:    55 16             	call -854 <mpu_set : 1e03756 >			  ## power_hw.c:180:5
 1e03aac:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1557:21
 1e03aae:    90 b2             	r0 |= 32			  ## power_hw.c:1557:21
 1e03ab0:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:1557:21
 1e03ab2:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:1558:16
 1e03ab4:    25 f3 fd 0f       	if ((r0 & 32) != 0) goto -6 <power_init+0xC6 : 1e03ab2 >			  ## power_hw.c:1558:16
 1e03ab8:    c2 ff 66 2d e0 01 	r2 = 31468902 <__hw_p2m_irq : 1e02d66 >			  ## power_hw.c:1572:5
 1e03abe:    a0 70             	r0 = 10			  ## power_hw.c:1572:5
 1e03ac0:    01 70             	r1 = 0			  ## power_hw.c:1572:5
 1e03ac2:    04 70             	r4 = 0			  ## power_hw.c:1572:5
 1e03ac4:    80 f3 a5 36       	call 27978 <request_irq : 1e0a812 >			  ## power_hw.c:1572:5
 1e03ac8:    40 70             	r0 = 4			  ## power_hw.c:1666:20
 1e03aca:    97 fc 30 00       	r7 = r9 + 48			  ## power_hw.c:1666:20
 1e03ace:    38 6e             	b[r7 + 3] = r0			  ## power_hw.c:1666:20
 1e03ad0:    6c 6e             	b[r7 + 6] = r4			  ## power_hw.c:1668:23
 1e03ad2:    0c 6f             	b[r7 + 16] = r4			  ## power_hw.c:1670:21
 1e03ad4:    7c 6e             	b[r7 + 7] = r4			  ## power_hw.c:1672:24
 1e03ad6:    8c 6e             	b[r7 + 8] = r4			  ## power_hw.c:1674:35
 1e03ad8:    9c 6f             	b[r7 + 25] = r4			  ## power_hw.c:1676:33
 1e03ada:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## power_hw.c:1676:33
 1e03ade:    92 fc 20 03       	r2 = r9 + 800			  ## power_hw.c:1676:33
 1e03ae2:    29 44             	[r2 + 8] = r1			  ## power_hw.c:1676:33
 1e03ae4:    c8 6f             	b[r7 + 28] = r0			  ## power_hw.c:1686:33
 1e03ae6:    7c 6f             	b[r7 + 23] = r4			  ## power_hw.c:467:25
 1e03ae8:    8c 6f             	b[r7 + 24] = r4			  ## power_hw.c:469:30
 1e03aea:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## power_hw.c:471:25
 1e03af0:    18 44             	[r2 + 4] = r0			  ## power_hw.c:471:25
 1e03af2:    c0 f4 7d 2a       	[r2 + 0] = 32000			  ## power_hw.c:473:23
 1e03af6:    80 71             	r0 = 24			  ## power_hw.c:477:27
 1e03af8:    58 6f             	b[r7 + 21] = r0			  ## power_hw.c:477:27


system_code_size:
 1e03afa:    bc 6f             	b[r7 + 27] = r4			  ## power_hw.c:480:30
 1e03afc:    c0 75             	r0 = 92			  ## lp_timer_hw.c:220:19
 1e03afe:    61 fc be 07       	r1 = r6 + 1982			  ## lp_timer_hw.c:220:19
 1e03b02:    08 62             	b[r1 + 0] = r0			  ## lp_timer_hw.c:220:19
 1e03b04:    30 75             	r0 = 83			  ## lp_timer_hw.c:222:19
 1e03b06:    18 62             	b[r1 + 1] = r0			  ## lp_timer_hw.c:222:19
 1e03b08:    2c 62             	b[r1 + 2] = r4			  ## lp_timer_hw.c:224:19
 1e03b0a:    10 72             	r0 = 33			  ## lrc_hw.c:81:17
 1e03b0c:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:81:17
 1e03b0e:    10 74             	r0 = 65			  ## lrc_hw.c:82:17
 1e03b10:    18 6c             	b[r6 + 1] = r0			  ## lrc_hw.c:82:17
 1e03b12:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >			  ## lrc_hw.c:82:17
 1e03b18:    10 70             	r0 = 1			  ## lrc_hw.c:82:17
 1e03b1a:    86 fc 84 00       	r6 = r8 + 132			  ## lrc_hw.c:82:17
 1e03b1e:    08 6c             	b[r6 + 0] = r0			  ## lrc_hw.c:82:17
 1e03b20:    c1 ff e4 1d 00 00 	r1 = 7652 <lrc.4 : 1de4 >			  ## lrc_hw.c:228:24
 1e03b26:    0c 62             	b[r1 + 0] = r4			  ## lrc_hw.c:228:24
 1e03b28:    88 6c             	b[r6 + 8] = r0			  ## lrc_hw.c:228:24
 1e03b2a:    c0 ff 00 36 1e 00 	r0 = 1979904 <uECC_vli_cmp_unsafe+0xDC604 : 1e3600 >			  ## lrc_hw.c:228:24
 1e03b30:    01 40             	r1 = [r0 + 0]			  ## lrc_hw.c:232:5
 1e03b32:    31 fd 3e 19       	r1 = r1 & 4294967233			  ## lrc_hw.c:232:5
 1e03b36:    09 40             	[r0 + 0] = r1			  ## lrc_hw.c:232:5
 1e03b38:    f0 71             	r0 = 31			  ## lrc_hw.c:67:17
 1e03b3a:    c4 ff ac 0f 1a 00 	r4 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >
 1e03b40:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e03b42:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e03b44:    2a 73             	r10 = 50			  ## lrc_hw.c:68:27
 1e03b46:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e03b4a:    28 68             	b[r4 + 2] = r0			  ## lrc_hw.c:68:22
 1e03b4c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e03b4e:    8b 7c             	r11 = 200			  ## lrc_hw.c:69:29
 1e03b50:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e03b54:    38 68             	b[r4 + 3] = r0			  ## lrc_hw.c:69:23
 1e03b56:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e03b58:    05 fb 58 02       	r5 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## lrc_hw.c:70:29
 1e03b5c:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e03b60:    48 68             	b[r4 + 4] = r0			  ## lrc_hw.c:70:23
 1e03b62:    10 70             	r0 = 1			  ## lrc_hw.c:237:5
 1e03b64:    bf f3 20 fa       	call -3008 <__hw_lrc_enable : 1e02fa8 >			  ## lrc_hw.c:237:5
 1e03b68:    00 70             	r0 = 0			  ## lrc_hw.c:239:5
 1e03b6a:    bf f3 31 fa       	call -2974 <lrc_timeout_handler : 1e02fd0 >			  ## lrc_hw.c:239:5
 1e03b6e:    10 4c             	r0 = [r6 + 4]			  ## lrc_hw.c:245:28
 1e03b70:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xDC060 : f4240 >			  ## lrc_hw.c:65:24
 1e03b76:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## lrc_hw.c:65:24
 1e03b7a:    08 68             	b[r4 + 0] = r0			  ## lrc_hw.c:67:17
 1e03b7c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:68:29
 1e03b7e:    c0 fe 00 0a       	r0 = r10 / r0 (u)			  ## lrc_hw.c:68:27
 1e03b82:    28 68             	b[r4 + 2] = r0			  ## lrc_hw.c:68:22
 1e03b84:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:69:31
 1e03b86:    c0 fe 00 0b       	r0 = r11 / r0 (u)			  ## lrc_hw.c:69:29
 1e03b8a:    38 68             	b[r4 + 3] = r0			  ## lrc_hw.c:69:23
 1e03b8c:    00 68             	r0 = b[r4 + 0] (u)			  ## lrc_hw.c:70:31
 1e03b8e:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## lrc_hw.c:70:29
 1e03b92:    48 68             	b[r4 + 4] = r0			  ## lrc_hw.c:70:23
 1e03b94:    c0 ff d0 2f e0 01 	r0 = 31469520 <lrc_timeout_handler : 1e02fd0 >			  ## lrc_hw.c:239:5
 1e03b9a:    80 f3 6e 3f       	call 32476 <usr_timer_add : 1e0ba7a >			  ## lrc_hw.c:247:21
 1e03b9e:    71 6f             	r1 = b[r7 + 23] (u)			  ## power_hw.c:486:24
 1e03ba0:    c2 ff e6 1d 00 00 	r2 = 7654 <lrc.2 : 1de6 >			  ## lrc_hw.c:247:19
 1e03ba6:    08 64             	b[r2 + 0] = r0			  ## lrc_hw.c:247:19
 1e03ba8:    05 22             	if (r1 == 0) goto 10 <system_code_size+0xBA : 1e03bb4 >			  ## power_hw.c:486:5
 1e03baa:    11 e0 06 10       	if (r1 != 1) goto 12 <system_code_size+0xC0 : 1e03bba >
 1e03bae:    bf f3 86 fa       	call -2804 <__hw_btosc_time_set : 1e030be >			  ## power_hw.c:488:9
 1e03bb2:    03 18             	goto 6 <system_code_size+0xC0 : 1e03bba >			  ## power_hw.c:488:9
 1e03bb4:    20 70             	r0 = 2			  ## power_hw.c:491:9
 1e03bb6:    bf f3 27 fb       	call -2482 <__hw_lrc_time_set : 1e03208 >			  ## power_hw.c:491:9
 1e03bba:    00 fb 04 05       	r0 = 1284 <BTCTLER_CONTROLLER_DATA_SIZE+0x46 : 504 >			  ## power_hw.c:504:27
 1e03bbe:    10 f7 2c 93       	h[r9 + 812] = r0			  ## power_hw.c:504:27
 1e03bc2:    40 fc e9 08       	r0 = r4 + 2281			  ## power_hw.c:504:27
 1e03bc6:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:505:5
 1e03bc8:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:505:5
 1e03bcc:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:505:5
 1e03bce:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:506:5
 1e03bd0:    21 fd f8 19       	r1 = r1 & 248			  ## power_hw.c:506:5
 1e03bd4:    01 fd 05 19       	r1 = r1 | 5			  ## power_hw.c:506:5
 1e03bd8:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:506:5
 1e03bda:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:513:5
 1e03bdc:    71 b3             	r1 &= 4294967231			  ## power_hw.c:513:5
 1e03bde:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:513:5
 1e03be0:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:514:5
 1e03be2:    91 b3             	r1 |= 128			  ## power_hw.c:514:5
 1e03be4:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:514:5
 1e03be6:    11 60             	r1 = b[r0 + 1] (u)			  ## power_hw.c:515:5
 1e03be8:    01 fd 18 19       	r1 = r1 | 24			  ## power_hw.c:515:5
 1e03bec:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:515:5
 1e03bee:    01 fc b0 ff       	r1 = r0 + -80			  ## power_hw.c:515:5
 1e03bf2:    02 62             	r2 = b[r1 + 0] (u)			  ## power_hw.c:518:17
 1e03bf4:    22 fd f8 29       	r2 = r2 & 248			  ## power_hw.c:518:17
 1e03bf8:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:518:17
 1e03bfa:    81 60             	r1 = b[r0 + 8] (u)			  ## power_hw.c:521:5
 1e03bfc:    71 b3             	r1 &= 4294967231			  ## power_hw.c:521:5
 1e03bfe:    89 60             	b[r0 + 8] = r1			  ## power_hw.c:521:5
 1e03c00:    19 f6 00 90       	[r9 + 0] = r9			  ## list.h:188:16
 1e03c04:    19 f6 04 90       	[r9 + 4] = r9			  ## list.h:189:16
 1e03c08:    90 fc 0c 00       	r0 = r9 + 12			  ## list.h:188:16
 1e03c0c:    10 f6 0c 90       	[r9 + 12] = r0			  ## list.h:188:16
 1e03c10:    10 f6 10 90       	[r9 + 16] = r0			  ## list.h:189:16
 1e03c14:    00 f9 33 90       	r0 = b[r9 + 51] (u)			  ## power_hw.c:1701:17
 1e03c18:    08 20             	if (r0 == 0) goto 16 <system_code_size+0x130 : 1e03c2a >
 1e03c1a:    80 f3 c0 3c       	call 31104 <vPortSysSleepInit : 1e0b59e >			  ## power_hw.c:1702:9
 1e03c1e:    c0 ff a8 e6 e0 01 	r0 = 31516328 <timer_power_ops : 1e0e6a8 >			  ## timer.c:209:26
 1e03c24:    cc 16             	call -616 <low_power_sys_get : 1e039be >			  ## timer.c:209:26
 1e03c26:    10 f6 80 80       	[r8 + 128] = r0			  ## timer.c:209:24
 1e03c2a:    16 0a             	sp += 44
 1e03c2c:    5b 01             	{pc, r11-r4} = [sp++]			  ## power_hw.c:1718:1


gpio_longpress_pin0_reset_config:
 1e03c2e:    c0 ff 48 18 1a 00 	r0 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## gpio.c:1287:0
 1e03c34:    01 70             	r1 = 0			  ## gpio.c:1347:21
 1e03c36:    09 60             	b[r0 + 0] = r1			  ## gpio.c:1347:21
 1e03c38:    20 00             	rts			  ## gpio.c:1350:1


gpio_shortpress_reset_config:
 1e03c3a:    c0 ff 92 18 1a 00 	r0 = 1710226 <uECC_vli_cmp_unsafe+0x9A896 : 1a1892 >			  ## gpio.c:1388:0
 1e03c40:    01 60             	r1 = b[r0 + 0] (u)			  ## gpio.c:1396:21
 1e03c42:    f1 b1             	r1 &= 4294967287			  ## gpio.c:1396:21
 1e03c44:    09 60             	b[r0 + 0] = r1			  ## gpio.c:1396:21
 1e03c46:    20 00             	rts			  ## gpio.c:1398:1


power_set_callback:
 1e03c48:    c0 ff be 23 e0 01 	r0 = 31466430 <sleep_enter_callback : 1e023be >			  ## power_hw.c:1457:0
 1e03c4e:    c1 ff f0 51 00 00 	r1 = 20976 <nvbss_begin+0x330 : 51f0 >			  ## power_hw.c:1461:37
 1e03c54:    08 42             	[r1 + 0] = r0			  ## power_hw.c:1459:33
 1e03c56:    c0 ff c8 23 e0 01 	r0 = 31466440 <sleep_exit_callback : 1e023c8 >			  ## power_hw.c:1460:33
 1e03c5c:    18 42             	[r1 + 4] = r0			  ## power_hw.c:1460:33
 1e03c5e:    c0 ff e8 23 e0 01 	r0 = 31466472 <board_set_soft_poweroff : 1e023e8 >			  ## power_hw.c:1461:37
 1e03c64:    48 42             	[r1 + 16] = r0			  ## power_hw.c:1461:37
 1e03c66:    20 00             	rts			  ## power_hw.c:1462:1


power_keep_dacvdd_en:
 1e03c68:    c0 ff c0 4e 00 00 	r0 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:1448:0
 1e03c6e:    01 70             	r1 = 0			  ## power_hw.c:1449:25
 1e03c70:    11 f9 34 00       	b[r0 + 52] = r1			  ## power_hw.c:1449:25
 1e03c74:    20 00             	rts			  ## power_hw.c:1450:1


__hw_power_set_wakeup_IO:
 1e03c76:    77 01             	[--sp] = {rets, r7-r4}			  ## power_wakeup.c:521:0
 1e03c78:    13 08             	r3 = r1			  ## power_wakeup.c:521:0
 1e03c7a:    31 66             	r1 = b[r3 + 3] (u)			  ## power_wakeup.c:532:50
 1e03c7c:    25 66             	r5 = b[r3 + 2] (u)			  ## power_wakeup.c:531:50
 1e03c7e:    16 66             	r6 = b[r3 + 1] (u)			  ## power_wakeup.c:530:50
 1e03c80:    07 66             	r7 = b[r3 + 0] (u)			  ## power_wakeup.c:530:50
 1e03c82:    04 08             	r4 = r0			  ## power_wakeup.c:530:50
 1e03c84:    c0 ff 8c 1d 00 00 	r0 = 7564 <hdl : 1d8c >
 1e03c8a:    04 24             	if (r2 == 0) goto 8 <system_code_total_size+0x4 : 1e03c94 >			  ## power_wakeup.c:522:9
 1e03c8c:    52 70             	r2 = 5
 1e03c8e:    80 fe 20 04       	r0 += r4 * r2			  ## power_wakeup.c:523:9


system_code_total_size:
 1e03c90:    20 04             	r0 = r0.l (u)			  ## power_wakeup.c:523:9
 1e03c92:    04 18             	goto 8 <system_code_total_size+0xC : 1e03c9c >			  ## power_wakeup.c:523:9
 1e03c94:    52 70             	r2 = 5
 1e03c96:    80 fe 20 04       	r0 += r4 * r2			  ## power_wakeup.c:529:9
 1e03c9a:    c0 83             	r0 += 60			  ## power_wakeup.c:529:9
 1e03c9c:    0f 60             	b[r0 + 0] = r7
 1e03c9e:    1e 60             	b[r0 + 1] = r6
 1e03ca0:    2d 60             	b[r0 + 2] = r5
 1e03ca2:    32 90             	r2 = r0 + 3
 1e03ca4:    09 64             	b[r2 + 0] = r1
 1e03ca6:    41 66             	r1 = b[r3 + 4] (u)
 1e03ca8:    49 60             	b[r0 + 4] = r1
 1e03caa:    40 66             	r0 = b[r3 + 4] (u)			  ## power_wakeup.c:538:15
 1e03cac:    00 e3 03 80       	if (r0 > 48) goto 6 <system_code_total_size+0x26 : 1e03cb6 >			  ## power_wakeup.c:538:9
 1e03cb0:    21 fd f0 09       	r1 = r0 & 240			  ## power_wakeup.c:539:46
 1e03cb4:    0e 18             	goto 28 <system_code_total_size+0x42 : 1e03cd2 >			  ## power_wakeup.c:539:46
 1e03cb6:    01 fc cd ff       	r1 = r0 + -51			  ## power_wakeup.c:551:13
 1e03cba:    41 04             	r1 = r1.b0 (u)			  ## power_wakeup.c:551:13
 1e03cbc:    32 73             	r2 = 51			  ## power_wakeup.c:551:13
 1e03cbe:    21 e0 01 30       	if (r1 < 2) goto 2 <system_code_total_size+0x34 : 1e03cc4 >			  ## power_wakeup.c:551:13
 1e03cc2:    12 73             	r2 = 49			  ## power_wakeup.c:551:13
 1e03cc4:    01 fc cb ff       	r1 = r0 + -53			  ## power_wakeup.c:554:41
 1e03cc8:    45 04             	r5 = r1.b0 (u)			  ## power_wakeup.c:554:41
 1e03cca:    51 73             	r1 = 53			  ## power_wakeup.c:554:41
 1e03ccc:    45 e0 01 30       	if (r5 < 4) goto 2 <system_code_total_size+0x42 : 1e03cd2 >
 1e03cd0:    21 08             	r1 = r2			  ## power_wakeup.c:554:41
 1e03cd2:    c2 ff 50 18 1a 00 	r2 = 1710160 <uECC_vli_cmp_unsafe+0x9A854 : 1a1850 >
 1e03cd8:    f1 e2 29 d0       	ifs (r1 <= 47) goto 82 <.GJTIE425_1_1_+0x30 : 1e03d2e >
 1e03cdc:    01 8d             	r1 += -48
 1e03cde:    51 e0 4c 80       	if (r1 > 5) goto 152 <.GJTIE425_2_2_+0x2C : 1e03d7a >
 1e03ce2:    a1 00             	tbb [r1]


.GJTIS425_0_0_:
 1e03ce4:    2a     < 42 : 0x2A >
 1e03ce5:    03     < 3 : 0x3 >
 1e03ce6:    4b     < 75 : 0x4B >
 1e03ce7:    03     < 3 : 0x3 >
 1e03ce8:    4b     < 75 : 0x4B >
 1e03ce9:    43     < 67 : 0x43 >
 1e03cea:    01 fc cf ff       	r1 = r0 + -49			  ## power_wakeup.c:345:5
 1e03cee:    31 e0 6e 80       	if (r1 > 3) goto 220 <.GJTIE425_2_2_+0x80 : 1e03dce >			  ## power_wakeup.c:345:5
 1e03cf2:    c0 ff 00 54 1e 00 	r0 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >
 1e03cf8:    a1 00             	tbb [r1]


.GJTIS425_1_1_:
 1e03cfa:    02     < 2 : 0x2 >
 1e03cfb:    72     < 114 : 0x72 >
 1e03cfc:    89     < 137 : 0x89 >
 1e03cfd:    a0     < 160 : 0xA0 >
 1e03cfe:    00 f4 04 0a       	[r0 + 0] |= 1024			  ## power_wakeup.c:349:9
 1e03d02:    00 f4 04 09       	[r0 + 0] |= 4			  ## power_wakeup.c:350:9
 1e03d06:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:351:19
 1e03d08:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:351:19
 1e03d0a:    05 e0 42 01       	if (r5 == 0) goto 644 <.GJTIE425_2_2_+0x244 : 1e03f92 >			  ## power_wakeup.c:351:13
 1e03d0e:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_1_1_+0x1C : 1e03d1a >
 1e03d10:    00 f4 10 09       	[r0 + 0] |= 16			  ## power_wakeup.c:353:17
 1e03d14:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:354:17
 1e03d16:    71 b3             	r1 &= 4294967231			  ## power_wakeup.c:354:17
 1e03d18:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:354:17
 1e03d1a:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03d1c:    11 70             	r1 = 1			  ## power_wakeup.c:356:30
 1e03d1e:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:356:30
 1e03d22:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e03d24:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e03d26:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e03d28:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03d2a:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e03d2c:    43 19             	goto 646 <.GJTIE425_2_2_+0x266 : 1e03fb4 >			  ## power_wakeup.c:100:1
 1e03d2e:    04 22             	if (r1 == 0) goto 8 <.GJTIE425_1_1_+0x3A : 1e03d38 >
 1e03d30:    01 e1 02 00       	if (r1 == 16) goto 4 <.GJTIE425_1_1_+0x3A : 1e03d38 >
 1e03d34:    01 e2 21 10       	if (r1 != 32) goto 66 <.GJTIE425_2_2_+0x2C : 1e03d7a >
 1e03d38:    01 d1             	r1 = r0 >> 4			  ## power_wakeup.c:220:5
 1e03d3a:    31 e0 20 80       	if (r1 > 3) goto 64 <.GJTIE425_2_2_+0x30 : 1e03d7e >			  ## power_wakeup.c:220:5
 1e03d3e:    25 fd 0f 09       	r5 = r0 & 15			  ## power_wakeup.c:217:24
 1e03d42:    c0 ff 40 e6 e0 01 	r0 = 31516224 <PB_valid : 1e0e640 >			  ## power_wakeup.c:217:24
 1e03d48:    a1 00             	tbb [r1]			  ## power_wakeup.c:217:24


.GJTIS425_2_2_:
 1e03d4a:    02     < 2 : 0x2 >
 1e03d4b:    1b     < 27 : 0x1B >
 1e03d4c:    29     < 41 : 0x29 >
 1e03d4d:    3a     < 58 : 0x3A >
 1e03d4e:    01 70             	r1 = 0
 1e03d50:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:224:22
 1e03d54:    65 f2 88 00       	if (r5 == r6) goto 272 <.GJTIE425_2_2_+0x11A : 1e03e68 >			  ## power_wakeup.c:224:22
 1e03d58:    11 80             	r1 += 1			  ## power_wakeup.c:223:48
 1e03d5a:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE425_2_2_+0x2 : 1e03d50 >			  ## power_wakeup.c:223:48
 1e03d5e:    8f f3 cf fa       	call 2094494 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03d62:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## cpu.h:148:5
 1e03d68:    29 18             	goto 82 <.GJTIE425_2_2_+0x6E : 1e03dbc >			  ## cpu.h:148:5
 1e03d6a:    50 e3 da 00       	if (r0 == 53) goto 436 <.GJTIE425_2_2_+0x1D4 : 1e03f22 >			  ## power_wakeup.c:445:5
 1e03d6e:    80 e3 da 00       	if (r0 == 56) goto 436 <.GJTIE425_2_2_+0x1D8 : 1e03f26 >
 1e03d72:    70 e3 da 10       	if (r0 != 55) goto 436 <.GJTIE425_2_2_+0x1DC : 1e03f2a >
 1e03d76:    14 70             	r4 = 1
 1e03d78:    da 18             	goto 436 <.GJTIE425_2_2_+0x1E0 : 1e03f2e >
 1e03d7a:    8f f3 c1 fa       	call 2094466 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03d7e:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1
 1e03d80:    01 70             	r1 = 0
 1e03d82:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:237:22
 1e03d86:    65 f2 78 00       	if (r5 == r6) goto 240 <.GJTIE425_2_2_+0x12C : 1e03e7a >			  ## power_wakeup.c:237:22
 1e03d8a:    11 80             	r1 += 1			  ## power_wakeup.c:236:48
 1e03d8c:    91 e0 f9 9f       	if (r1 <= 9) goto -14 <.GJTIE425_2_2_+0x34 : 1e03d82 >			  ## power_wakeup.c:236:48
 1e03d90:    8f f3 b6 fa       	call 2094444 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03d94:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## cpu.h:148:5
 1e03d9a:    10 18             	goto 32 <.GJTIE425_2_2_+0x6E : 1e03dbc >			  ## cpu.h:148:5
 1e03d9c:    00 70             	r0 = 0
 1e03d9e:    c1 ff 5e e6 e0 01 	r1 = 31516254 <PD_valid : 1e0e65e >
 1e03da4:    06 fa 00 01       	r6 = b[r0+r1] (u)			  ## power_wakeup.c:250:22
 1e03da8:    65 f2 70 00       	if (r5 == r6) goto 224 <.GJTIE425_2_2_+0x13E : 1e03e8c >			  ## power_wakeup.c:250:22
 1e03dac:    10 80             	r0 += 1			  ## power_wakeup.c:249:48
 1e03dae:    40 e0 f9 9f       	if (r0 <= 4) goto -14 <.GJTIE425_2_2_+0x56 : 1e03da4 >			  ## power_wakeup.c:249:48
 1e03db2:    8f f3 a5 fa       	call 2094410 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03db6:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## cpu.h:148:5
 1e03dbc:    6f 18             	goto 222 <.GJTIE425_2_2_+0x14E : 1e03e9c >
 1e03dbe:    c7 ff 00 59 1e 00 	r7 = 1988864 <uECC_vli_cmp_unsafe+0xDE904 : 1e5900 >
 1e03dc4:    e6 71             	r6 = 30
 1e03dc6:    6a 2a             	if (r5 == 0) goto 212 <.GJTIE425_2_2_+0x14E : 1e03e9c >
 1e03dc8:    8f f3 9a fa       	call 2094388 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03dcc:    67 18             	goto 206 <.GJTIE425_2_2_+0x14E : 1e03e9c >			  ## cpu.h:148:5
 1e03dce:    10 70             	r0 = 1			  ## power_wakeup.c:438:23
 1e03dd0:    f8 fd 40 30       	r3 = r0 << r4			  ## power_wakeup.c:438:23
 1e03dd4:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:99:1
 1e03dd6:    8f f3 93 fa       	call 2094374 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03dda:    00 70             	r0 = 0			  ## cpu.h:148:5
 1e03ddc:    29 19             	goto 594 <.GJTIE425_2_2_+0x2E2 : 1e04030 >			  ## cpu.h:148:5
 1e03dde:    00 f4 08 0a       	[r0 + 0] |= 2048			  ## power_wakeup.c:369:9
 1e03de2:    00 f4 08 09       	[r0 + 0] |= 8			  ## power_wakeup.c:370:9
 1e03de6:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:371:19
 1e03de8:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:371:19
 1e03dea:    e7 2a             	if (r5 == 0) goto 462 <.GJTIE425_2_2_+0x26C : 1e03fba >			  ## power_wakeup.c:371:13
 1e03dec:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_2_2_+0xAA : 1e03df8 >
 1e03dee:    00 f4 20 09       	[r0 + 0] |= 32			  ## power_wakeup.c:373:17
 1e03df2:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:374:17
 1e03df4:    f1 b3             	r1 &= 4294967167			  ## power_wakeup.c:374:17
 1e03df6:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:374:17
 1e03df8:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03dfa:    11 70             	r1 = 1			  ## power_wakeup.c:376:30
 1e03dfc:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:376:30
 1e03e00:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e03e02:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e03e04:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e03e06:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03e08:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e03e0a:    e8 18             	goto 464 <.GJTIE425_2_2_+0x28E : 1e03fdc >			  ## power_wakeup.c:100:1
 1e03e0c:    09 f4 04 0a       	[r0 + 36] |= 1024			  ## power_wakeup.c:389:9
 1e03e10:    09 f4 04 09       	[r0 + 36] |= 4			  ## power_wakeup.c:390:9
 1e03e14:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:391:19
 1e03e16:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:391:19
 1e03e18:    e4 2a             	if (r5 == 0) goto 456 <.GJTIE425_2_2_+0x294 : 1e03fe2 >			  ## power_wakeup.c:391:13
 1e03e1a:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_2_2_+0xD8 : 1e03e26 >
 1e03e1c:    09 f4 10 09       	[r0 + 36] |= 16			  ## power_wakeup.c:393:17
 1e03e20:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:394:17
 1e03e22:    71 b3             	r1 &= 4294967231			  ## power_wakeup.c:394:17
 1e03e24:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:394:17
 1e03e26:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03e28:    11 70             	r1 = 1			  ## power_wakeup.c:396:30
 1e03e2a:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:396:30
 1e03e2e:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e03e30:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e03e32:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e03e34:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03e36:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e03e38:    e5 18             	goto 458 <.GJTIE425_2_2_+0x2B6 : 1e04004 >			  ## power_wakeup.c:100:1
 1e03e3a:    09 f4 08 0a       	[r0 + 36] |= 2048			  ## power_wakeup.c:409:9
 1e03e3e:    09 f4 08 09       	[r0 + 36] |= 8			  ## power_wakeup.c:410:9
 1e03e42:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:411:19
 1e03e44:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:411:19
 1e03e46:    e1 2a             	if (r5 == 0) goto 450 <.GJTIE425_2_2_+0x2BC : 1e0400a >			  ## power_wakeup.c:411:13
 1e03e48:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_2_2_+0x106 : 1e03e54 >
 1e03e4a:    09 f4 20 09       	[r0 + 36] |= 32			  ## power_wakeup.c:413:17
 1e03e4e:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:414:17
 1e03e50:    f1 b3             	r1 &= 4294967167			  ## power_wakeup.c:414:17
 1e03e52:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:414:17
 1e03e54:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03e56:    11 70             	r1 = 1			  ## power_wakeup.c:416:30
 1e03e58:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:416:30
 1e03e5c:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e03e5e:    50 ba             	r0 |= r5			  ## power_wakeup.c:100:1
 1e03e60:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e03e62:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03e64:    50 b6             	r0 |= r3			  ## power_wakeup.c:100:1
 1e03e66:    e2 18             	goto 452 <.GJTIE425_2_2_+0x2DE : 1e0402c >			  ## power_wakeup.c:100:1
 1e03e68:    c0 ff 4a e6 e0 01 	r0 = 31516234 <PA_map_tbl : 1e0e64a >			  ## power_wakeup.c:225:23
 1e03e6e:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:225:23
 1e03e72:    c7 ff 00 50 1e 00 	r7 = 1986560 <uECC_vli_cmp_unsafe+0xDE004 : 1e5000 >			  ## power_wakeup.c:225:23
 1e03e78:    11 18             	goto 34 <.GJTIE425_2_2_+0x14E : 1e03e9c >			  ## power_wakeup.c:225:23
 1e03e7a:    c0 ff 54 e6 e0 01 	r0 = 31516244 <PB_map_tbl : 1e0e654 >			  ## power_wakeup.c:238:23
 1e03e80:    06 fa 00 10       	r6 = b[r1+r0] (u)			  ## power_wakeup.c:238:23
 1e03e84:    c7 ff 00 51 1e 00 	r7 = 1986816 <uECC_vli_cmp_unsafe+0xDE104 : 1e5100 >			  ## power_wakeup.c:238:23
 1e03e8a:    08 18             	goto 16 <.GJTIE425_2_2_+0x14E : 1e03e9c >			  ## power_wakeup.c:238:23
 1e03e8c:    c1 ff 63 e6 e0 01 	r1 = 31516259 <PD_map_tbl : 1e0e663 >			  ## power_wakeup.c:251:23
 1e03e92:    06 fa 00 01       	r6 = b[r0+r1] (u)			  ## power_wakeup.c:251:23
 1e03e96:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## power_wakeup.c:251:23
 1e03e9c:    21 4e             	r1 = [r7 + 8]			  ## power_wakeup.c:283:15
 1e03e9e:    10 70             	r0 = 1			  ## power_wakeup.c:283:15
 1e03ea0:    40 0d             	r0 <<= r5			  ## power_wakeup.c:283:18
 1e03ea2:    51 b0             	r1 |= r0			  ## power_wakeup.c:283:15
 1e03ea4:    29 4e             	[r7 + 8] = r1			  ## power_wakeup.c:283:15
 1e03ea6:    31 4e             	r1 = [r7 + 12]			  ## power_wakeup.c:284:15
 1e03ea8:    51 b0             	r1 |= r0			  ## power_wakeup.c:284:15
 1e03eaa:    39 4e             	[r7 + 12] = r1			  ## power_wakeup.c:284:15
 1e03eac:    81 4e             	r1 = [r7 + 32]			  ## power_wakeup.c:285:16
 1e03eae:    51 b0             	r1 |= r0			  ## power_wakeup.c:285:16
 1e03eb0:    89 4e             	[r7 + 32] = r1			  ## power_wakeup.c:285:16
 1e03eb2:    15 66             	r5 = b[r3 + 1] (u)			  ## power_wakeup.c:287:15
 1e03eb4:    01 66             	r1 = b[r3 + 0] (u)			  ## power_wakeup.c:287:15
 1e03eb6:    12 2a             	if (r5 == 0) goto 36 <.GJTIE425_2_2_+0x18E : 1e03edc >			  ## power_wakeup.c:287:9
 1e03eb8:    07 22             	if (r1 == 0) goto 14 <.GJTIE425_2_2_+0x17A : 1e03ec8 >
 1e03eba:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:289:22
 1e03ebc:    51 b0             	r1 |= r0			  ## power_wakeup.c:289:22
 1e03ebe:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:289:22
 1e03ec0:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:290:22
 1e03ec2:    e3 fd 00 01       	r0 = r1 & ~r0			  ## power_wakeup.c:290:22
 1e03ec6:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:290:22
 1e03ec8:    33 64             	r3 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03eca:    10 70             	r0 = 1			  ## power_wakeup.c:292:26
 1e03ecc:    00 0d             	r0 <<= r4			  ## power_wakeup.c:292:26
 1e03ece:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e03ed0:    53 b2             	r3 |= r1			  ## power_wakeup.c:100:1
 1e03ed2:    3b 64             	b[r2 + 3] = r3			  ## power_wakeup.c:100:1
 1e03ed4:    23 64             	r3 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03ed6:    25 04             	r5 = r0.l (u)			  ## power_wakeup.c:100:1
 1e03ed8:    53 ba             	r3 |= r5			  ## power_wakeup.c:100:1
 1e03eda:    14 18             	goto 40 <.GJTIE425_2_2_+0x1B6 : 1e03f04 >			  ## power_wakeup.c:100:1
 1e03edc:    07 22             	if (r1 == 0) goto 14 <.GJTIE425_2_2_+0x19E : 1e03eec >
 1e03ede:    41 4e             	r1 = [r7 + 16]			  ## power_wakeup.c:295:22
 1e03ee0:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:295:22
 1e03ee4:    49 4e             	[r7 + 16] = r1			  ## power_wakeup.c:295:22
 1e03ee6:    51 4e             	r1 = [r7 + 20]			  ## power_wakeup.c:296:22
 1e03ee8:    50 b2             	r0 |= r1			  ## power_wakeup.c:296:22
 1e03eea:    58 4e             	[r7 + 20] = r0			  ## power_wakeup.c:296:22
 1e03eec:    33 64             	r3 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03eee:    10 70             	r0 = 1			  ## power_wakeup.c:298:27
 1e03ef0:    00 0d             	r0 <<= r4			  ## power_wakeup.c:298:27
 1e03ef2:    01 d2             	r1 = r0 >> 8			  ## power_wakeup.c:100:1
 1e03ef4:    e3 fd 10 33       	r3 = r3 & ~r1			  ## power_wakeup.c:100:1
 1e03ef8:    3b 64             	b[r2 + 3] = r3			  ## power_wakeup.c:100:1
 1e03efa:    23 64             	r3 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03efc:    25 04             	r5 = r0.l (u)			  ## power_wakeup.c:100:1
 1e03efe:    15 fd ff 59       	r5 = r5 ^ 255			  ## power_wakeup.c:100:1
 1e03f02:    53 bb             	r3 &= r5			  ## power_wakeup.c:100:1
 1e03f04:    2b 64             	b[r2 + 2] = r3			  ## power_wakeup.c:100:1
 1e03f06:    23 fc 70 00       	r3 = r2 + 112			  ## power_wakeup.c:302:5
 1e03f0a:    16 fa 00 43       	b[r4+r3] = r6			  ## power_wakeup.c:302:21
 1e03f0e:    03 d2             	r3 = r0 >> 8			  ## power_wakeup.c:101:1
 1e03f10:    9b 64             	b[r2 + 9] = r3			  ## power_wakeup.c:101:1
 1e03f12:    88 64             	b[r2 + 8] = r0			  ## power_wakeup.c:101:1
 1e03f14:    13 64             	r3 = b[r2 + 1] (u)			  ## power_wakeup.c:99:1
 1e03f16:    51 b6             	r1 |= r3			  ## power_wakeup.c:99:1
 1e03f18:    19 64             	b[r2 + 1] = r1			  ## power_wakeup.c:99:1
 1e03f1a:    01 64             	r1 = b[r2 + 0] (u)			  ## power_wakeup.c:99:1
 1e03f1c:    50 b2             	r0 |= r1			  ## power_wakeup.c:99:1
 1e03f1e:    08 64             	b[r2 + 0] = r0			  ## power_wakeup.c:99:1
 1e03f20:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1
 1e03f22:    24 70             	r4 = 2
 1e03f24:    04 18             	goto 8 <.GJTIE425_2_2_+0x1E0 : 1e03f2e >
 1e03f26:    04 70             	r4 = 0
 1e03f28:    02 18             	goto 4 <.GJTIE425_2_2_+0x1E0 : 1e03f2e >
 1e03f2a:    8f f3 e9 f9       	call 2094034 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e03f2e:    30 66             	r0 = b[r3 + 3] (u)			  ## power_wakeup.c:467:29
 1e03f30:    21 fc 30 00       	r1 = r2 + 48			  ## power_wakeup.c:467:5
 1e03f34:    10 fa 00 41       	b[r4+r1] = r0			  ## power_wakeup.c:467:21
 1e03f38:    01 65             	r1 = b[r2 + 16] (u)			  ## power_wakeup.c:498:17
 1e03f3a:    10 70             	r0 = 1			  ## power_wakeup.c:498:17
 1e03f3c:    00 0d             	r0 <<= r4			  ## power_wakeup.c:498:20
 1e03f3e:    51 b0             	r1 |= r0			  ## power_wakeup.c:498:17
 1e03f40:    09 65             	b[r2 + 16] = r1			  ## power_wakeup.c:498:17
 1e03f42:    71 65             	r1 = b[r2 + 23] (u)			  ## power_wakeup.c:500:21
 1e03f44:    51 b0             	r1 |= r0			  ## power_wakeup.c:500:21
 1e03f46:    79 65             	b[r2 + 23] = r1			  ## power_wakeup.c:500:21
 1e03f48:    81 65             	r1 = b[r2 + 24] (u)			  ## power_wakeup.c:501:21
 1e03f4a:    51 b0             	r1 |= r0			  ## power_wakeup.c:501:21
 1e03f4c:    89 65             	b[r2 + 24] = r1			  ## power_wakeup.c:501:21
 1e03f4e:    11 66             	r1 = b[r3 + 1] (u)			  ## power_wakeup.c:503:15
 1e03f50:    11 e0 0a 00       	if (r1 == 1) goto 20 <.GJTIE425_2_2_+0x21A : 1e03f68 >			  ## power_wakeup.c:503:9
 1e03f54:    21 e0 12 10       	if (r1 != 2) goto 36 <.GJTIE425_2_2_+0x22E : 1e03f7c >
 1e03f58:    11 65             	r1 = b[r2 + 17] (u)			  ## power_wakeup.c:504:23
 1e03f5a:    51 b0             	r1 |= r0			  ## power_wakeup.c:504:23
 1e03f5c:    19 65             	b[r2 + 17] = r1			  ## power_wakeup.c:504:23
 1e03f5e:    22 65             	r2 = b[r2 + 18] (u)			  ## power_wakeup.c:505:23
 1e03f60:    c1 ff 62 18 1a 00 	r1 = 1710178 <uECC_vli_cmp_unsafe+0x9A866 : 1a1862 >			  ## power_wakeup.c:505:23
 1e03f66:    12 18             	goto 36 <.GJTIE425_2_2_+0x23E : 1e03f8c >			  ## power_wakeup.c:505:23
 1e03f68:    21 65             	r1 = b[r2 + 18] (u)			  ## power_wakeup.c:508:23
 1e03f6a:    51 b0             	r1 |= r0			  ## power_wakeup.c:508:23
 1e03f6c:    29 65             	b[r2 + 18] = r1			  ## power_wakeup.c:508:23
 1e03f6e:    12 65             	r2 = b[r2 + 17] (u)			  ## power_wakeup.c:509:23
 1e03f70:    c1 ff 61 18 1a 00 	r1 = 1710177 <uECC_vli_cmp_unsafe+0x9A865 : 1a1861 >			  ## power_wakeup.c:509:23
 1e03f76:    e3 fd 00 02       	r0 = r2 & ~r0			  ## power_wakeup.c:509:23
 1e03f7a:    09 18             	goto 18 <.GJTIE425_2_2_+0x240 : 1e03f8e >			  ## power_wakeup.c:509:23
 1e03f7c:    21 65             	r1 = b[r2 + 18] (u)			  ## power_wakeup.c:512:23
 1e03f7e:    e3 fd 00 11       	r1 = r1 & ~r0			  ## power_wakeup.c:512:23
 1e03f82:    29 65             	b[r2 + 18] = r1			  ## power_wakeup.c:512:23
 1e03f84:    12 65             	r2 = b[r2 + 17] (u)			  ## power_wakeup.c:513:23
 1e03f86:    c1 ff 61 18 1a 00 	r1 = 1710177 <uECC_vli_cmp_unsafe+0x9A865 : 1a1861 >			  ## power_wakeup.c:513:23
 1e03f8c:    50 b4             	r0 |= r2
 1e03f8e:    08 62             	b[r1 + 0] = r0
 1e03f90:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1
 1e03f92:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_2_2_+0x250 : 1e03f9e >
 1e03f94:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:359:17
 1e03f96:    71 b2             	r1 &= 4294967279			  ## power_wakeup.c:359:17
 1e03f98:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:359:17
 1e03f9a:    00 f4 40 09       	[r0 + 0] |= 64			  ## power_wakeup.c:360:17
 1e03f9e:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03fa0:    11 70             	r1 = 1			  ## power_wakeup.c:362:31
 1e03fa2:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:362:31
 1e03fa6:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e03fa8:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e03fac:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e03fae:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03fb0:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e03fb4:    28 64             	b[r2 + 2] = r0
 1e03fb6:    a0 71             	r0 = 26
 1e03fb8:    3b 18             	goto 118 <.GJTIE425_2_2_+0x2E2 : 1e04030 >
 1e03fba:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_2_2_+0x278 : 1e03fc6 >
 1e03fbc:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:379:17
 1e03fbe:    f1 b2             	r1 &= 4294967263			  ## power_wakeup.c:379:17
 1e03fc0:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:379:17
 1e03fc2:    00 f4 80 09       	[r0 + 0] |= 128			  ## power_wakeup.c:380:17
 1e03fc6:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03fc8:    11 70             	r1 = 1			  ## power_wakeup.c:382:31
 1e03fca:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:382:31
 1e03fce:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e03fd0:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e03fd4:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e03fd6:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e03fd8:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e03fdc:    28 64             	b[r2 + 2] = r0
 1e03fde:    b0 71             	r0 = 27
 1e03fe0:    27 18             	goto 78 <.GJTIE425_2_2_+0x2E2 : 1e04030 >
 1e03fe2:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_2_2_+0x2A0 : 1e03fee >
 1e03fe4:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:399:17
 1e03fe6:    71 b2             	r1 &= 4294967279			  ## power_wakeup.c:399:17
 1e03fe8:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:399:17
 1e03fea:    09 f4 40 09       	[r0 + 36] |= 64			  ## power_wakeup.c:400:17
 1e03fee:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e03ff0:    11 70             	r1 = 1			  ## power_wakeup.c:402:31
 1e03ff2:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:402:31
 1e03ff6:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e03ff8:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e03ffc:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e03ffe:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e04000:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e04004:    28 64             	b[r2 + 2] = r0
 1e04006:    c0 71             	r0 = 28
 1e04008:    13 18             	goto 38 <.GJTIE425_2_2_+0x2E2 : 1e04030 >
 1e0400a:    05 22             	if (r1 == 0) goto 10 <.GJTIE425_2_2_+0x2C8 : 1e04016 >
 1e0400c:    91 40             	r1 = [r0 + 36]			  ## power_wakeup.c:419:17
 1e0400e:    f1 b2             	r1 &= 4294967263			  ## power_wakeup.c:419:17
 1e04010:    99 40             	[r0 + 36] = r1			  ## power_wakeup.c:419:17
 1e04012:    09 f4 80 09       	[r0 + 36] |= 128			  ## power_wakeup.c:420:17
 1e04016:    30 64             	r0 = b[r2 + 3] (u)			  ## power_wakeup.c:100:1
 1e04018:    11 70             	r1 = 1			  ## power_wakeup.c:422:31
 1e0401a:    f8 fd 40 31       	r3 = r1 << r4			  ## power_wakeup.c:422:31
 1e0401e:    1d d2             	r5 = r3 >> 8			  ## power_wakeup.c:100:1
 1e04020:    e3 fd 50 00       	r0 = r0 & ~r5			  ## power_wakeup.c:100:1
 1e04024:    38 64             	b[r2 + 3] = r0			  ## power_wakeup.c:100:1
 1e04026:    20 64             	r0 = b[r2 + 2] (u)			  ## power_wakeup.c:100:1
 1e04028:    e3 fd 30 00       	r0 = r0 & ~r3			  ## power_wakeup.c:100:1
 1e0402c:    28 64             	b[r2 + 2] = r0
 1e0402e:    d0 71             	r0 = 29
 1e04030:    21 fc 70 00       	r1 = r2 + 112			  ## power_wakeup.c:436:5
 1e04034:    10 fa 00 41       	b[r4+r1] = r0			  ## power_wakeup.c:436:21
 1e04038:    18 d2             	r0 = r3 >> 8			  ## power_wakeup.c:101:1
 1e0403a:    98 64             	b[r2 + 9] = r0			  ## power_wakeup.c:101:1
 1e0403c:    8b 64             	b[r2 + 8] = r3			  ## power_wakeup.c:101:1
 1e0403e:    10 64             	r0 = b[r2 + 1] (u)			  ## power_wakeup.c:99:1
 1e04040:    50 ba             	r0 |= r5			  ## power_wakeup.c:99:1
 1e04042:    18 64             	b[r2 + 1] = r0			  ## power_wakeup.c:99:1
 1e04044:    00 64             	r0 = b[r2 + 0] (u)			  ## power_wakeup.c:99:1
 1e04046:    50 b6             	r0 |= r3			  ## power_wakeup.c:99:1
 1e04048:    08 64             	b[r2 + 0] = r0			  ## power_wakeup.c:99:1
 1e0404a:    57 01             	{pc, r7-r4} = [sp++]			  ## power_wakeup.c:578:1


power_wakeup_init:
 1e0404c:    79 01             	[--sp] = {rets, r9-r4}			  ## power_wakeup.c:836:0
 1e0404e:    06 70             	r6 = 0			  ## power_wakeup.c:836:0
 1e04050:    c3 ff 0c 50 1e 00 	r3 = 1986572 <uECC_vli_cmp_unsafe+0xDE010 : 1e500c >			  ## power_wakeup.c:836:0
 1e04056:    0e 46             	[r3 + 0] = r6			  ## power_wakeup.c:782:19
 1e04058:    5e 46             	[r3 + 20] = r6			  ## power_wakeup.c:783:20
 1e0405a:    39 fc 00 01       	r9 = r3 + 256			  ## power_wakeup.c:783:20
 1e0405e:    16 f6 00 90       	[r9 + 0] = r6			  ## power_wakeup.c:786:19
 1e04062:    60 70             	r0 = 6			  ## power_wakeup.c:787:20
 1e04064:    10 f6 14 90       	[r9 + 20] = r0			  ## power_wakeup.c:787:20
 1e04068:    31 fc 00 03       	r1 = r3 + 768			  ## power_wakeup.c:787:20
 1e0406c:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:790:19
 1e0406e:    5e 42             	[r1 + 20] = r6			  ## power_wakeup.c:791:20
 1e04070:    10 fc f4 c4       	r0 = r1 + -15116			  ## power_wakeup.c:795:14
 1e04074:    0e 40             	[r0 + 0] = r6			  ## power_wakeup.c:795:14
 1e04076:    00 fc 00 3c       	r0 = r0 + 15360			  ## power_wakeup.c:795:14
 1e0407a:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:796:5
 1e0407c:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:796:5
 1e0407e:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:796:5
 1e04080:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:797:5
 1e04082:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:797:5
 1e04084:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:797:5
 1e04086:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:798:5
 1e04088:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:798:5
 1e0408a:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:798:5
 1e0408c:    04 40             	r4 = [r0 + 0]			  ## power_wakeup.c:799:5
 1e0408e:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:799:5
 1e04090:    0c 40             	[r0 + 0] = r4			  ## power_wakeup.c:799:5
 1e04092:    16 f6 f4 16       	[r1 + 1780] = r6			  ## power_wakeup.c:802:15
 1e04096:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:803:5
 1e04098:    f4 b4             	r4 &= 4294966783			  ## power_wakeup.c:803:5
 1e0409a:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:803:5
 1e0409c:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:804:5
 1e0409e:    f4 b5             	r4 &= 4294965247			  ## power_wakeup.c:804:5
 1e040a0:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:804:5
 1e040a2:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:805:5
 1e040a4:    74 b4             	r4 &= 4294967039			  ## power_wakeup.c:805:5
 1e040a6:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:805:5
 1e040a8:    94 40             	r4 = [r0 + 36]			  ## power_wakeup.c:806:5
 1e040aa:    74 b5             	r4 &= 4294966271			  ## power_wakeup.c:806:5
 1e040ac:    9c 40             	[r0 + 36] = r4			  ## power_wakeup.c:806:5
 1e040ae:    c5 ff 48 18 1a 00 	r5 = 1710152 <uECC_vli_cmp_unsafe+0x9A84C : 1a1848 >			  ## power_wakeup.c:806:5
 1e040b4:    04 6a             	r4 = b[r5 + 0] (u)			  ## power_wakeup.c:808:9
 1e040b6:    58 fc 60 00       	r8 = r5 + 96			  ## power_wakeup.c:808:9
 1e040ba:    00 f3 54 40       	if ((r4 & 1) == 0) goto 168 <.GJTIE426_0_0_+0x36 : 1e04166 >			  ## power_wakeup.c:808:9
 1e040be:    04 f9 18 80       	r4 = b[r8 + 24] (u)			  ## power_wakeup.c:809:23
 1e040c2:    47 fc ff ff       	r7 = r4 + -1			  ## power_wakeup.c:810:29
 1e040c6:    c2 05             	r2 = r7.b0 (u)			  ## power_wakeup.c:810:29
 1e040c8:    92 e0 09 80       	if (r2 > 9) goto 18 <power_wakeup_init+0x92 : 1e040de >			  ## power_wakeup.c:810:29
 1e040cc:    00 46             	r0 = [r3 + 0]			  ## power_wakeup.c:811:27
 1e040ce:    11 70             	r1 = 1			  ## power_wakeup.c:811:30
 1e040d0:    c1 0d             	r1 <<= r7			  ## power_wakeup.c:811:30
 1e040d2:    50 b2             	r0 |= r1			  ## power_wakeup.c:811:27
 1e040d4:    08 46             	[r3 + 0] = r0			  ## power_wakeup.c:811:27
 1e040d6:    52 46             	r2 = [r3 + 20]			  ## power_wakeup.c:812:28
 1e040d8:    40 97             	r0 = r3 + 20			  ## power_wakeup.c:812:28
 1e040da:    51 b4             	r1 |= r2			  ## power_wakeup.c:812:28
 1e040dc:    43 18             	goto 134 <.GJTIE426_0_0_+0x34 : 1e04164 >			  ## power_wakeup.c:812:28
 1e040de:    43 fc f5 ff       	r3 = r4 + -11			  ## power_wakeup.c:813:37
 1e040e2:    c2 04             	r2 = r3.b0 (u)			  ## power_wakeup.c:813:37
 1e040e4:    92 e0 0d 80       	if (r2 > 9) goto 26 <power_wakeup_init+0xB6 : 1e04102 >			  ## power_wakeup.c:813:37
 1e040e8:    00 f6 00 90       	r0 = [r9 + 0]			  ## power_wakeup.c:814:27
 1e040ec:    11 70             	r1 = 1			  ## power_wakeup.c:814:30
 1e040ee:    c1 0c             	r1 <<= r3			  ## power_wakeup.c:814:30
 1e040f0:    50 b2             	r0 |= r1			  ## power_wakeup.c:814:27
 1e040f2:    10 f6 00 90       	[r9 + 0] = r0			  ## power_wakeup.c:814:27
 1e040f6:    02 f6 14 90       	r2 = [r9 + 20]			  ## power_wakeup.c:815:28
 1e040fa:    90 fc 14 00       	r0 = r9 + 20			  ## power_wakeup.c:815:28
 1e040fe:    51 b4             	r1 |= r2			  ## power_wakeup.c:815:28
 1e04100:    31 18             	goto 98 <.GJTIE426_0_0_+0x34 : 1e04164 >			  ## power_wakeup.c:815:28
 1e04102:    42 fc eb ff       	r2 = r4 + -21			  ## power_wakeup.c:816:37
 1e04106:    83 04             	r3 = r2.b0 (u)			  ## power_wakeup.c:816:37
 1e04108:    43 e0 0b 80       	if (r3 > 4) goto 22 <power_wakeup_init+0xD6 : 1e04122 >			  ## power_wakeup.c:816:37
 1e0410c:    00 42             	r0 = [r1 + 0]			  ## power_wakeup.c:817:27
 1e0410e:    13 70             	r3 = 1			  ## power_wakeup.c:817:30
 1e04110:    f8 fd 20 23       	r2 = r3 << r2			  ## power_wakeup.c:817:30
 1e04114:    50 b4             	r0 |= r2			  ## power_wakeup.c:817:27
 1e04116:    08 42             	[r1 + 0] = r0			  ## power_wakeup.c:817:27
 1e04118:    51 42             	r1 = [r1 + 20]			  ## power_wakeup.c:818:28
 1e0411a:    90 fc 14 02       	r0 = r9 + 532			  ## power_wakeup.c:818:28
 1e0411e:    51 b4             	r1 |= r2			  ## power_wakeup.c:818:28
 1e04120:    21 18             	goto 66 <.GJTIE426_0_0_+0x34 : 1e04164 >			  ## power_wakeup.c:818:28
 1e04122:    41 fc e6 ff       	r1 = r4 + -26			  ## power_wakeup.c:819:20
 1e04126:    31 e0 1e 80       	if (r1 > 3) goto 60 <.GJTIE426_0_0_+0x36 : 1e04166 >			  ## power_wakeup.c:819:20
 1e0412a:    a1 00             	tbb [r1]


.GJTIS426_0_0_:
 1e0412c:    02     < 2 : 0x2 >
 1e0412d:    07     < 7 : 0x7 >
 1e0412e:    0c     < 12 : 0xC >
 1e0412f:    14     < 20 : 0x14 >
 1e04130:    00 f4 01 0a       	[r0 + 0] |= 256			  ## power_wakeup.c:820:13
 1e04134:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:821:13
 1e04136:    11 b5             	r1 |= 1024			  ## power_wakeup.c:821:13
 1e04138:    15 18             	goto 42 <.GJTIE426_0_0_+0x34 : 1e04164 >			  ## power_wakeup.c:821:13
 1e0413a:    00 f4 02 0a       	[r0 + 0] |= 512			  ## power_wakeup.c:823:13
 1e0413e:    01 40             	r1 = [r0 + 0]			  ## power_wakeup.c:824:13
 1e04140:    91 b5             	r1 |= 2048			  ## power_wakeup.c:824:13
 1e04142:    10 18             	goto 32 <.GJTIE426_0_0_+0x34 : 1e04164 >			  ## power_wakeup.c:824:13
 1e04144:    09 f4 01 0a       	[r0 + 36] |= 256			  ## power_wakeup.c:826:13
 1e04148:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:827:13
 1e0414a:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:827:13
 1e0414e:    01 fd 04 0a       	r1 = r0 | 1024			  ## power_wakeup.c:827:13
 1e04152:    07 18             	goto 14 <.GJTIE426_0_0_+0x32 : 1e04162 >			  ## power_wakeup.c:827:13
 1e04154:    09 f4 02 0a       	[r0 + 36] |= 512			  ## power_wakeup.c:829:13
 1e04158:    90 40             	r0 = [r0 + 36]			  ## power_wakeup.c:830:13
 1e0415a:    92 fc 18 03       	r2 = r9 + 792			  ## power_wakeup.c:830:13
 1e0415e:    01 fd 08 0a       	r1 = r0 | 2048			  ## power_wakeup.c:830:13
 1e04162:    20 08             	r0 = r2
 1e04164:    09 40             	[r0 + 0] = r1
 1e04166:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## power_wakeup.c:843:16
 1e0416a:    e0 6a             	r0 = b[r5 + 14] (u)			  ## power_wakeup.c:845:16
 1e0416c:    f0 6a             	r0 = b[r5 + 15] (u)			  ## power_wakeup.c:845:32
 1e0416e:    d0 6b             	r0 = b[r5 + 29] (u)			  ## power_wakeup.c:847:19
 1e04170:    e0 6b             	r0 = b[r5 + 30] (u)			  ## power_wakeup.c:849:19
 1e04172:    50 fc 60 fc       	r0 = r5 + -928			  ## power_wakeup.c:851:19
 1e04176:    00 60             	r0 = b[r0 + 0] (u)			  ## power_wakeup.c:851:19
 1e04178:    98 f3 10 16       	call 3157024 <local_irq_disable : 106d9c >			  ## power_wakeup.c:646:5
 1e0417c:    08 00             	csync			  ## power_wakeup.c:646:5
 1e0417e:    c7 ff 10 e2 e0 01 	r7 = 31515152 <wk_param : 1e0e210 >
 1e04184:    04 70             	r4 = 0
 1e04186:    81 f6 00 67       	r1 = [r6+r7]			  ## power_wakeup.c:649:16
 1e0418a:    03 22             	if (r1 == 0) goto 6 <.GJTIE426_0_0_+0x62 : 1e04192 >
 1e0418c:    00 05             	r0 = r4.b0 (u)			  ## power_wakeup.c:651:13
 1e0418e:    12 70             	r2 = 1			  ## power_wakeup.c:651:13
 1e04190:    72 15             	call -1308 <__hw_power_set_wakeup_IO : 1e03c76 >			  ## power_wakeup.c:651:13
 1e04192:    46 80             	r6 += 4			  ## power_wakeup.c:648:23
 1e04194:    14 80             	r4 += 1			  ## power_wakeup.c:648:23
 1e04196:    06 e3 f6 1f       	if (r6 != 48) goto -20 <.GJTIE426_0_0_+0x56 : 1e04186 >			  ## power_wakeup.c:648:23
 1e0419a:    06 70             	r6 = 0
 1e0419c:    04 70             	r4 = 0
 1e0419e:    c0 b9             	r0 = r4 + r7			  ## power_wakeup.c:656:16
 1e041a0:    c1 40             	r1 = [r0 + 48]			  ## power_wakeup.c:656:16
 1e041a2:    03 22             	if (r1 == 0) goto 6 <.GJTIE426_0_0_+0x7A : 1e041aa >
 1e041a4:    80 05             	r0 = r6.b0 (u)			  ## power_wakeup.c:658:13
 1e041a6:    02 70             	r2 = 0			  ## power_wakeup.c:658:13
 1e041a8:    66 15             	call -1332 <__hw_power_set_wakeup_IO : 1e03c76 >			  ## power_wakeup.c:658:13
 1e041aa:    44 80             	r4 += 4			  ## power_wakeup.c:655:22
 1e041ac:    16 80             	r6 += 1			  ## power_wakeup.c:655:22
 1e041ae:    c4 e0 f6 1f       	if (r4 != 12) goto -20 <.GJTIE426_0_0_+0x6E : 1e0419e >			  ## power_wakeup.c:655:22
 1e041b2:    f0 7f             	r0 = 255			  ## power_wakeup.c:663:19
 1e041b4:    08 6b             	b[r5 + 16] = r0			  ## power_wakeup.c:663:19
 1e041b6:    18 6b             	b[r5 + 17] = r0			  ## power_wakeup.c:664:19
 1e041b8:    f8 6b             	b[r5 + 31] = r0			  ## power_wakeup.c:665:21
 1e041ba:    54 fc 20 00       	r4 = r5 + 32			  ## power_wakeup.c:665:21
 1e041be:    08 68             	b[r4 + 0] = r0			  ## power_wakeup.c:666:21
 1e041c0:    98 f3 ea 15       	call 3156948 <local_irq_enable : 106d98 >			  ## power_wakeup.c:668:5
 1e041c4:    80 6a             	r0 = b[r5 + 8] (u)			  ## power_wakeup.c:133:45
 1e041c6:    90 6a             	r0 = b[r5 + 9] (u)			  ## power_wakeup.c:134:45
 1e041c8:    a0 6a             	r0 = b[r5 + 10] (u)			  ## power_wakeup.c:135:45
 1e041ca:    b0 6a             	r0 = b[r5 + 11] (u)			  ## power_wakeup.c:136:45
 1e041cc:    c0 6a             	r0 = b[r5 + 12] (u)			  ## power_wakeup.c:137:45
 1e041ce:    d0 6a             	r0 = b[r5 + 13] (u)			  ## power_wakeup.c:138:45
 1e041d0:    e0 6a             	r0 = b[r5 + 14] (u)			  ## power_wakeup.c:139:45
 1e041d2:    f0 6a             	r0 = b[r5 + 15] (u)			  ## power_wakeup.c:140:45
 1e041d4:    80 6b             	r0 = b[r5 + 24] (u)			  ## power_wakeup.c:142:45
 1e041d6:    90 6b             	r0 = b[r5 + 25] (u)			  ## power_wakeup.c:143:45
 1e041d8:    a0 6b             	r0 = b[r5 + 26] (u)			  ## power_wakeup.c:144:45
 1e041da:    b0 6b             	r0 = b[r5 + 27] (u)			  ## power_wakeup.c:145:45
 1e041dc:    d0 6b             	r0 = b[r5 + 29] (u)			  ## power_wakeup.c:146:45
 1e041de:    e0 6b             	r0 = b[r5 + 30] (u)			  ## power_wakeup.c:147:45
 1e041e0:    80 69             	r0 = b[r4 + 24] (u)			  ## power_wakeup.c:148:45
 1e041e2:    90 69             	r0 = b[r4 + 25] (u)			  ## power_wakeup.c:149:45
 1e041e4:    a0 69             	r0 = b[r4 + 26] (u)			  ## power_wakeup.c:150:45
 1e041e6:    c0 6b             	r0 = b[r5 + 28] (u)			  ## power_wakeup.c:152:45
 1e041e8:    00 f9 18 80       	r0 = b[r8 + 24] (u)			  ## power_wakeup.c:157:42
 1e041ec:    00 f9 19 80       	r0 = b[r8 + 25] (u)			  ## power_wakeup.c:158:42
 1e041f0:    00 f9 1a 80       	r0 = b[r8 + 26] (u)			  ## power_wakeup.c:159:42
 1e041f4:    00 f9 1b 80       	r0 = b[r8 + 27] (u)			  ## power_wakeup.c:160:42
 1e041f8:    00 f9 1c 80       	r0 = b[r8 + 28] (u)			  ## power_wakeup.c:161:42
 1e041fc:    00 f9 1d 80       	r0 = b[r8 + 29] (u)			  ## power_wakeup.c:162:42
 1e04200:    00 f9 1e 80       	r0 = b[r8 + 30] (u)			  ## power_wakeup.c:163:42
 1e04204:    00 f9 1f 80       	r0 = b[r8 + 31] (u)			  ## power_wakeup.c:164:42
 1e04208:    40 fc 60 00       	r0 = r4 + 96			  ## power_wakeup.c:164:42
 1e0420c:    01 60             	r1 = b[r0 + 0] (u)			  ## power_wakeup.c:165:42
 1e0420e:    11 60             	r1 = b[r0 + 1] (u)			  ## power_wakeup.c:166:42
 1e04210:    21 60             	r1 = b[r0 + 2] (u)			  ## power_wakeup.c:167:42
 1e04212:    31 60             	r1 = b[r0 + 3] (u)			  ## power_wakeup.c:168:42


BTSTACK_CODE_TOTAL_SIZE:
 1e04214:    01 fc c0 ff       	r1 = r0 + -64			  ## power_wakeup.c:168:42
 1e04218:    02 62             	r2 = b[r1 + 0] (u)			  ## power_wakeup.c:170:41
 1e0421a:    12 62             	r2 = b[r1 + 1] (u)			  ## power_wakeup.c:171:41
 1e0421c:    22 62             	r2 = b[r1 + 2] (u)			  ## power_wakeup.c:172:41
 1e0421e:    02 fc 2e 07       	r2 = r0 + 1838			  ## power_wakeup.c:172:41
 1e04222:    03 64             	r3 = b[r2 + 0] (u)			  ## power_wakeup.c:674:5
 1e04224:    93 b2             	r3 |= 32			  ## power_wakeup.c:674:5
 1e04226:    0b 64             	b[r2 + 0] = r3			  ## power_wakeup.c:674:5
 1e04228:    02 70             	r2 = 0			  ## power_wakeup.c:860:15
 1e0422a:    ca 63             	b[r1 + 28] = r2			  ## power_wakeup.c:860:15
 1e0422c:    8a 60             	b[r0 + 8] = r2			  ## power_wakeup.c:861:18
 1e0422e:    9a 60             	b[r0 + 9] = r2			  ## power_wakeup.c:862:18
 1e04230:    aa 60             	b[r0 + 10] = r2			  ## power_wakeup.c:863:18
 1e04232:    ba 60             	b[r0 + 11] = r2			  ## power_wakeup.c:864:18
 1e04234:    ca 60             	b[r0 + 12] = r2			  ## power_wakeup.c:865:18
 1e04236:    59 01             	{pc, r9-r4} = [sp++]			  ## power_wakeup.c:866:1


aport_edge_wkup_set_callback:
 1e04238:    c0 ff e0 1d 00 00 	r0 = 7648 <aport_edge_wakeup_callback : 1de0 >			  ## power_wakeup.c:978:0
 1e0423e:    c1 ff 16 24 e0 01 	r1 = 31466518 <aport_wakeup_callback : 1e02416 >			  ## power_wakeup.c:979:32
 1e04244:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:979:32
 1e04246:    20 00             	rts			  ## power_wakeup.c:980:1


port_edge_wkup_set_callback:
 1e04248:    c0 ff dc 1d 00 00 	r0 = 7644 <port_edge_wakeup_callback : 1ddc >			  ## power_wakeup.c:973:0
 1e0424e:    c1 ff 18 24 e0 01 	r1 = 31466520 <port_wakeup_callback : 1e02418 >			  ## power_wakeup.c:974:31
 1e04254:    09 40             	[r0 + 0] = r1			  ## power_wakeup.c:974:31
 1e04256:    20 00             	rts			  ## power_wakeup.c:975:1


adc_pmu_detect_en:
 1e04258:    c0 ff 94 18 1a 00 	r0 = 1710228 <uECC_vli_cmp_unsafe+0x9A898 : 1a1894 >			  ## p33.c:112:0
 1e0425e:    01 60             	r1 = b[r0 + 0] (u)			  ## p33.c:113:5
 1e04260:    11 b0             	r1 |= 1			  ## p33.c:113:5
 1e04262:    09 60             	b[r0 + 0] = r1			  ## p33.c:113:5
 1e04264:    10 70             	r0 = 1			  ## p33.c:114:5
 1e04266:    ff f3 03 e0       	goto -16378 <adc_pmu_ch_select : 1e00270 >			  ## p33.c:114:5


check_wvdd_pvdd_trim:
 1e0426a:    78 01             	[--sp] = {rets, r8-r4}			  ## pmu_calibrate.c:304:0
 1e0426c:    c8 ff 70 22 00 00 	r8 = 8816 <trans_server_adv_config : 2270 >			  ## pmu_calibrate.c:304:0
 1e04272:    84 fc 4c 01       	r4 = r8 + 332			  ## pmu_calibrate.c:305:5
 1e04276:    f1 7f             	r1 = 255			  ## pmu_calibrate.c:305:5
 1e04278:    42 78             	r2 = 132			  ## pmu_calibrate.c:305:5
 1e0427a:    40 08             	r0 = r4			  ## pmu_calibrate.c:305:5
 1e0427c:    98 f3 38 16       	call 3157104 <memset : 106ef0 >			  ## pmu_calibrate.c:305:5
 1e04280:    30 76             	r0 = 99			  ## pmu_calibrate.c:307:18
 1e04282:    42 78             	r2 = 132			  ## pmu_calibrate.c:307:18
 1e04284:    41 08             	r1 = r4			  ## pmu_calibrate.c:307:18
 1e04286:    80 f3 60 42       	call 33984 <syscfg_read : 1e0c74a >			  ## pmu_calibrate.c:307:18
 1e0428a:    01 08             	r1 = r0			  ## pmu_calibrate.c:307:18
 1e0428c:    10 70             	r0 = 1
 1e0428e:    11 e0 31 b0       	ifs (r1 < 1) goto 98 <check_wvdd_pvdd_trim+0x8A : 1e042f4 >
 1e04292:    83 fc cc 01       	r3 = r8 + 460
 1e04296:    12 66             	r2 = b[r3 + 1] (u)			  ## pmu_calibrate.c:314:26
 1e04298:    00 ff ff 20 2b 00 	if (r2 == 255) goto 86 <check_wvdd_pvdd_trim+0x8A : 1e042f4 >			  ## pmu_calibrate.c:314:26
 1e0429e:    36 66             	r6 = b[r3 + 3] (u)			  ## pmu_calibrate.c:314:62
 1e042a0:    00 ff ff 60 27 00 	if (r6 == 255) goto 78 <check_wvdd_pvdd_trim+0x8A : 1e042f4 >			  ## pmu_calibrate.c:314:62
 1e042a6:    01 66             	r1 = b[r3 + 0] (u)			  ## pmu_calibrate.c:314:102
 1e042a8:    00 ff ff 10 23 00 	if (r1 == 255) goto 70 <check_wvdd_pvdd_trim+0x8A : 1e042f4 >
 1e042ae:    23 66             	r3 = b[r3 + 2] (u)			  ## pmu_calibrate.c:314:138
 1e042b0:    00 ff ff 30 1f 00 	if (r3 == 255) goto 62 <check_wvdd_pvdd_trim+0x8A : 1e042f4 >			  ## pmu_calibrate.c:314:138
 1e042b6:    c7 ff 70 20 00 00 	r7 = 8304 <gatt_client_conn_handle : 2070 >			  ## power_reset.c:4:12
 1e042bc:    67 4f             	r7 = [r7 + 88]			  ## power_reset.c:4:12
 1e042be:    c5 ff 00 08 00 03 	r5 = 50333696 <uECC_vli_cmp_unsafe+0xEF9804 : 1000800 >			  ## pmu_calibrate.c:320:47
 1e042c4:    57 f0 15 00       	if ((r7 & r5) == 0) goto 42 <check_wvdd_pvdd_trim+0x88 : 1e042f2 >			  ## pmu_calibrate.c:320:47
 1e042c8:    17 9c             	r7 = r6 + 1			  ## pmu_calibrate.c:322:45
 1e042ca:    e7 e0 05 80       	if (r7 > 14) goto 10 <check_wvdd_pvdd_trim+0x6E : 1e042d8 >
 1e042ce:    a2 bc             	r2 = r6 - r2			  ## pmu_calibrate.c:323:48
 1e042d0:    12 e0 10 c0       	ifs (r2 > 1) goto 32 <check_wvdd_pvdd_trim+0x8A : 1e042f4 >			  ## pmu_calibrate.c:323:48
 1e042d4:    17 f9 cf 81       	b[r8 + 463] = r7			  ## pmu_calibrate.c:324:47
 1e042d8:    12 96             	r2 = r3 + 1			  ## pmu_calibrate.c:331:45
 1e042da:    e2 e0 05 80       	if (r2 > 14) goto 10 <check_wvdd_pvdd_trim+0x7E : 1e042e8 >			  ## pmu_calibrate.c:331:45
 1e042de:    61 b6             	r1 = r3 - r1			  ## pmu_calibrate.c:332:48
 1e042e0:    11 e0 08 c0       	ifs (r1 > 1) goto 16 <check_wvdd_pvdd_trim+0x8A : 1e042f4 >			  ## pmu_calibrate.c:332:48
 1e042e4:    12 f9 ce 81       	b[r8 + 462] = r2			  ## pmu_calibrate.c:333:47
 1e042e8:    30 76             	r0 = 99			  ## pmu_calibrate.c:340:22
 1e042ea:    42 78             	r2 = 132			  ## pmu_calibrate.c:340:22
 1e042ec:    41 08             	r1 = r4			  ## pmu_calibrate.c:340:22
 1e042ee:    80 f3 91 42       	call 34082 <syscfg_write : 1e0c814 >			  ## pmu_calibrate.c:340:22
 1e042f2:    00 70             	r0 = 0
 1e042f4:    58 01             	{pc, r8-r4} = [sp++]			  ## pmu_calibrate.c:353:1


adc_wait_pnd:
 1e042f6:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:349:0
 1e042fc:    01 40             	r1 = [r0 + 0]			  ## adc_api.c:350:22
 1e042fe:    51 04             	r1 = r1.b0 (s)			  ## adc_api.c:350:12
 1e04300:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <adc_wait_pnd+0x6 : 1e042fc >			  ## adc_api.c:350:5
 1e04304:    11 40             	r1 = [r0 + 4]			  ## adc_api.c:351:27
 1e04306:    00 00             	nop			  ## adc_api.c:352:5
 1e04308:    00 f4 40 09       	[r0 + 0] |= 64			  ## adc_api.c:353:17
 1e0430c:    60 04             	r0 = r1.l (u)			  ## adc_api.c:354:5
 1e0430e:    20 00             	rts			  ## adc_api.c:354:5


get_vdd_voltage:
 1e04310:    75 01             	[--sp] = {rets, r5, r4}			  ## adc_api.c:410:0
 1e04312:    04 08             	r4 = r0			  ## adc_api.c:410:0
 1e04314:    d0 70             	r0 = 13			  ## adc_api.c:414:5
 1e04316:    bf f3 c4 df       	call -16504 <adc_sample : 1e002a2 >			  ## adc_api.c:414:5
 1e0431a:    05 70             	r5 = 0			  ## adc_api.c:414:5
 1e0431c:    a2 70             	r2 = 10
 1e0431e:    03 18             	goto 6 <get_vdd_voltage+0x16 : 1e04326 >
 1e04320:    ea 17             	call -44 <adc_wait_pnd : 1e042f6 >			  ## adc_api.c:416:22
 1e04322:    05 09             	r5 += r0			  ## adc_api.c:416:19
 1e04324:    f2 8f             	r2 += -1			  ## adc_api.c:415:5
 1e04326:    fc 35             	if (r2 != 0) goto -8 <get_vdd_voltage+0x10 : 1e04320 >			  ## adc_api.c:415:5
 1e04328:    40 08             	r0 = r4			  ## adc_api.c:419:5
 1e0432a:    bf f3 ba df       	call -16524 <adc_sample : 1e002a2 >			  ## adc_api.c:419:5
 1e0432e:    02 70             	r2 = 0			  ## adc_api.c:419:5
 1e04330:    a3 70             	r3 = 10
 1e04332:    03 18             	goto 6 <get_vdd_voltage+0x2A : 1e0433a >
 1e04334:    e0 17             	call -64 <adc_wait_pnd : 1e042f6 >			  ## adc_api.c:421:23
 1e04336:    02 09             	r2 += r0			  ## adc_api.c:421:20
 1e04338:    f3 8f             	r3 += -1			  ## adc_api.c:420:5
 1e0433a:    fc 37             	if (r3 != 0) goto -8 <get_vdd_voltage+0x24 : 1e04334 >
 1e0433c:    a1 70             	r1 = 10			  ## adc_api.c:424:29
 1e0433e:    c0 fe 10 05       	r0 = r5 / r1 (u)			  ## adc_api.c:424:29
 1e04342:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## adc_api.c:425:30
 1e04346:    15 01             	{rets, r5, r4} = [sp++]			  ## adc_api.c:427:12
 1e04348:    ff f3 3e f7       	goto -4484 <adc_value_to_voltage : 1e031c8 >			  ## adc_api.c:427:12


get_wvdd_trim_level:
 1e0434c:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## pmu_calibrate.c:283:0
 1e04352:    00 f9 cf 01       	r0 = b[r0 + 463] (u)			  ## pmu_calibrate.c:284:5
 1e04356:    20 00             	rts			  ## pmu_calibrate.c:284:5


get_pvdd_trim_level:
 1e04358:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## pmu_calibrate.c:288:0
 1e0435e:    00 f9 ce 01       	r0 = b[r0 + 462] (u)			  ## pmu_calibrate.c:289:5
 1e04362:    20 00             	rts			  ## pmu_calibrate.c:289:5


update_wvdd_pvdd_trim_level:
 1e04364:    c3 ff bc 23 00 00 	r3 = 9148 <pmu_voltage : 23bc >			  ## pmu_calibrate.c:293:0
 1e0436a:    32 fc 80 00       	r2 = r3 + 128			  ## pmu_calibrate.c:295:28
 1e0436e:    38 64             	b[r2 + 3] = r0			  ## pmu_calibrate.c:294:57
 1e04370:    18 64             	b[r2 + 1] = r0			  ## pmu_calibrate.c:294:28
 1e04372:    29 64             	b[r2 + 2] = r1			  ## pmu_calibrate.c:295:57
 1e04374:    09 64             	b[r2 + 0] = r1			  ## pmu_calibrate.c:295:28
 1e04376:    30 76             	r0 = 99			  ## pmu_calibrate.c:297:18
 1e04378:    42 78             	r2 = 132			  ## pmu_calibrate.c:297:18
 1e0437a:    31 08             	r1 = r3			  ## pmu_calibrate.c:297:18
 1e0437c:    c0 f3 4a 42       	goto 33940 <syscfg_write : 1e0c814 >			  ## pmu_calibrate.c:297:18


adc_add_sample_ch:
 1e04380:    c1 ff e0 24 00 00 	r1 = 9440 <adc_queue : 24e0 >			  ## adc_api.c:51:0
 1e04386:    02 70             	r2 = 0			  ## adc_api.c:51:0
 1e04388:    07 18             	goto 14 <adc_add_sample_ch+0x18 : 1e04398 >			  ## adc_api.c:51:0
 1e0438a:    03 42             	r3 = [r1 + 0]			  ## adc_api.c:55:26
 1e0438c:    03 f2 0d 00       	if (r3 == r0) goto 26 <adc_add_sample_ch+0x2A : 1e043aa >			  ## adc_api.c:55:26
 1e04390:    f3 ef 05 00       	if (r3 == -1) goto 10 <adc_add_sample_ch+0x1E : 1e0439e >
 1e04394:    01 81             	r1 += 16			  ## adc_api.c:53:5
 1e04396:    12 80             	r2 += 1			  ## adc_api.c:53:34
 1e04398:    92 e0 f7 9f       	if (r2 <= 9) goto -18 <adc_add_sample_ch+0xA : 1e0438a >
 1e0439c:    20 00             	rts
 1e0439e:    08 42             	[r1 + 0] = r0			  ## adc_api.c:58:29
 1e043a0:    10 70             	r0 = 1			  ## adc_api.c:59:32
 1e043a2:    28 52             	h[r1 + 4] = r0			  ## adc_api.c:59:32
 1e043a4:    00 70             	r0 = 0			  ## adc_api.c:59:32
 1e043a6:    28 42             	[r1 + 8] = r0			  ## adc_api.c:60:34
 1e043a8:    38 42             	[r1 + 12] = r0			  ## adc_api.c:61:40
 1e043aa:    20 00             	rts


adc_set_sample_freq:
 1e043ac:    c1 ff ec 24 00 00 	r1 = 9452 <adc_queue+0xC : 24ec >			  ## adc_api.c:70:0
 1e043b2:    02 70             	r2 = 0			  ## adc_api.c:70:0
 1e043b4:    06 18             	goto 12 <adc_set_sample_freq+0x16 : 1e043c2 >			  ## adc_api.c:70:0
 1e043b6:    03 f6 f4 1f       	r3 = [r1 + -12]			  ## adc_api.c:73:26
 1e043ba:    03 f2 05 00       	if (r3 == r0) goto 10 <adc_set_sample_freq+0x1C : 1e043c8 >			  ## adc_api.c:73:26
 1e043be:    01 81             	r1 += 16			  ## adc_api.c:72:5
 1e043c0:    12 80             	r2 += 1			  ## adc_api.c:72:34
 1e043c2:    92 e0 f8 9f       	if (r2 <= 9) goto -16 <adc_set_sample_freq+0xA : 1e043b6 >
 1e043c6:    20 00             	rts
 1e043c8:    c0 f4 64 19       	[r1 + 0] = 100			  ## adc_api.c:74:40
 1e043cc:    c0 ff 94 08 00 00 	r0 = 2196 <jiffies : 894 >			  ## adc_api.c:75:59
 1e043d2:    00 40             	r0 = [r0 + 0]			  ## adc_api.c:75:59
 1e043d4:    40 86             	r0 += 100			  ## adc_api.c:75:57
 1e043d6:    10 f6 fc 1f       	[r1 + -4] = r0			  ## adc_api.c:75:34
 1e043da:    20 00             	rts


board_init:
 1e043dc:    7a 01             	[--sp] = {rets, r10-r4}			  ## board_ac632n_demo.c:344:0
 1e043de:    b4 0b             	sp += -152			  ## board_ac632n_demo.c:344:0
 1e043e0:    bf f3 04 fb       	call -2552 <power_init : 1e039ec >			  ## board_ac632n_demo.c:667:5
 1e043e4:    24 14             	call -1976 <gpio_longpress_pin0_reset_config : 1e03c2e >			  ## board_ac632n_demo.c:669:5
 1e043e6:    29 14             	call -1966 <gpio_shortpress_reset_config : 1e03c3a >			  ## board_ac632n_demo.c:670:5
 1e043e8:    2f 14             	call -1954 <power_set_callback : 1e03c48 >			  ## board_ac632n_demo.c:676:5
 1e043ea:    3e 14             	call -1924 <power_keep_dacvdd_en : 1e03c68 >			  ## board_ac632n_demo.c:680:5
 1e043ec:    2f 16             	call -930 <power_wakeup_init : 1e0404c >			  ## board_ac632n_demo.c:682:2
 1e043ee:    24 17             	call -440 <aport_edge_wkup_set_callback : 1e04238 >			  ## board_ac632n_demo.c:684:5
 1e043f0:    2b 17             	call -426 <port_edge_wkup_set_callback : 1e04248 >			  ## board_ac632n_demo.c:685:5
 1e043f2:    32 17             	call -412 <adc_pmu_detect_en : 1e04258 >			  ## adc_api.c:608:5
 1e043f4:    3a 17             	call -396 <check_wvdd_pvdd_trim : 1e0426a >			  ## adc_api.c:612:15
 1e043f6:    09 08             	r9 = r0			  ## adc_api.c:612:15
 1e043f8:    c8 ff ad 0f 1a 00 	r8 = 1707949 <uECC_vli_cmp_unsafe+0x99FB1 : 1a0fad >
 1e043fe:    8a fc 96 08       	r10 = r8 + 2198
 1e04402:    49 20             	if (r0 == 0) goto 146 <board_init+0xBA : 1e04496 >			  ## adc_api.c:435:9
 1e04404:    84 fc e4 08       	r4 = r8 + 2276
 1e04408:    c0 68             	r0 = b[r4 + 12] (u)			  ## adc_api.c:436:9
 1e0440a:    20 fd f0 09       	r0 = r0 & 240			  ## adc_api.c:436:9
 1e0440e:    c8 68             	b[r4 + 12] = r0			  ## adc_api.c:436:9
 1e04410:    c0 68             	r0 = b[r4 + 12] (u)			  ## adc_api.c:437:9
 1e04412:    10 b2             	r0 |= 16			  ## adc_api.c:437:9
 1e04414:    c8 68             	b[r4 + 12] = r0			  ## adc_api.c:437:9
 1e04416:    00 68             	r0 = b[r4 + 0] (u)			  ## adc_api.c:438:9
 1e04418:    90 b1             	r0 |= 8			  ## adc_api.c:438:9
 1e0441a:    08 68             	b[r4 + 0] = r0			  ## adc_api.c:438:9
 1e0441c:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:439:9
 1e04420:    90 f3 98 03       	call 2098992 <delay : 4b54 >			  ## adc_api.c:439:9
 1e04424:    05 70             	r5 = 0			  ## adc_api.c:439:9
 1e04426:    c6 ff 0d 00 0e 00 	r6 = 917517 <text_size+0xC7E2D : e000d >			  ## adc_api.c:439:9
 1e0442c:    c0 68             	r0 = b[r4 + 12] (u)			  ## adc_api.c:441:13
 1e0442e:    20 fd f0 09       	r0 = r0 & 240			  ## adc_api.c:441:13
 1e04432:    50 ba             	r0 |= r5			  ## adc_api.c:441:13
 1e04434:    c8 68             	b[r4 + 12] = r0			  ## adc_api.c:441:13
 1e04436:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:442:13
 1e0443a:    90 f3 8b 03       	call 2098966 <delay : 4b54 >			  ## adc_api.c:442:13
 1e0443e:    60 08             	r0 = r6			  ## adc_api.c:443:17
 1e04440:    67 17             	call -306 <get_vdd_voltage : 1e04310 >			  ## adc_api.c:443:17
 1e04442:    08 ff 8a 02 04 00 	if (r0 > 650) goto 8 <board_init+0x74 : 1e04450 >			  ## adc_api.c:443:17
 1e04448:    15 80             	r5 += 1			  ## adc_api.c:446:22
 1e0444a:    40 05             	r0 = r5.b0 (u)			  ## adc_api.c:446:22
 1e0444c:    80 e0 ee 3f       	if (r0 < 8) goto -36 <board_init+0x50 : 1e0442c >			  ## adc_api.c:446:22
 1e04450:    c0 68             	r0 = b[r4 + 12] (u)			  ## adc_api.c:448:9
 1e04452:    70 b2             	r0 &= 4294967279			  ## adc_api.c:448:9
 1e04454:    c8 68             	b[r4 + 12] = r0			  ## adc_api.c:448:9
 1e04456:    00 68             	r0 = b[r4 + 0] (u)			  ## adc_api.c:449:9
 1e04458:    f0 b1             	r0 &= 4294967287			  ## adc_api.c:449:9
 1e0445a:    08 68             	b[r4 + 0] = r0			  ## adc_api.c:449:9
 1e0445c:    15 f9 00 80       	b[r8 + 0] = r5			  ## adc_api.c:458:15
 1e04460:    f4 70             	r4 = 15
 1e04462:    08 70             	r8 = 0
 1e04464:    07 7f             	r7 = 240
 1e04466:    c6 ff 0d 00 08 00 	r6 = 524301 <text_size+0x67E2D : 8000d >
 1e0446c:    00 70             	r0 = 0
 1e0446e:    11 18             	goto 34 <board_init+0xB6 : 1e04492 >
 1e04470:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## adc_api.c:468:13
 1e04474:    e0 fd 40 07       	r0 = r7 | r4			  ## adc_api.c:468:13
 1e04478:    10 f9 01 a0       	b[r10 + 1] = r0			  ## adc_api.c:468:13
 1e0447c:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:469:13
 1e04480:    90 f3 68 03       	call 2098896 <delay : 4b54 >			  ## adc_api.c:469:13
 1e04484:    60 08             	r0 = r6			  ## adc_api.c:470:17
 1e04486:    44 17             	call -376 <get_vdd_voltage : 1e04310 >			  ## adc_api.c:470:17
 1e04488:    03 ff 1a 04 0b 00 	if (r0 < 1050) goto 22 <board_init+0xC8 : 1e044a4 >
 1e0448e:    07 8f             	r7 += -16			  ## adc_api.c:467:9
 1e04490:    f4 8f             	r4 += -1			  ## adc_api.c:467:24
 1e04492:    ee 3f             	if (r7 != 0) goto -36 <board_init+0x94 : 1e04470 >
 1e04494:    08 18             	goto 16 <board_init+0xCA : 1e044a6 >
 1e04496:    5a 17             	call -332 <get_wvdd_trim_level : 1e0434c >			  ## adc_api.c:453:20
 1e04498:    05 08             	r5 = r0			  ## adc_api.c:453:20
 1e0449a:    15 f9 00 80       	b[r8 + 0] = r5			  ## adc_api.c:458:15
 1e0449e:    5c 17             	call -328 <get_pvdd_trim_level : 1e04358 >			  ## adc_api.c:483:15
 1e044a0:    01 08             	r1 = r0			  ## adc_api.c:483:15
 1e044a2:    0e 18             	goto 28 <board_init+0xE4 : 1e044c0 >
 1e044a4:    48 08             	r8 = r4
 1e044a6:    11 70             	r1 = 1
 1e044a8:    12 70             	r2 = 1			  ## adc_api.c:475:15
 1e044aa:    03 ff e8 03 01 00 	if (r0 < 1000) goto 2 <board_init+0xD6 : 1e044b2 >			  ## adc_api.c:475:15
 1e044b0:    02 70             	r2 = 0			  ## adc_api.c:475:15
 1e044b2:    f8 e0 01 30       	if (r8 < 15) goto 2 <board_init+0xDC : 1e044b8 >
 1e044b6:    01 70             	r1 = 0			  ## adc_api.c:476:21
 1e044b8:    e2 fd 20 01       	r0 = r1 & r2			  ## adc_api.c:475:13
 1e044bc:    80 fb 80 10       	r1 = r0 + r8			  ## adc_api.c:475:13
 1e044c0:    00 f9 01 a0       	r0 = b[r10 + 1] (u)			  ## adc_api.c:486:5
 1e044c4:    08 c1             	r0 = r1 << 4			  ## adc_api.c:486:5
 1e044c6:    50 b2             	r0 |= r1			  ## adc_api.c:486:5
 1e044c8:    10 f9 01 a0       	b[r10 + 1] = r0			  ## adc_api.c:486:5
 1e044cc:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## adc_api.c:487:5
 1e044d0:    90 f3 40 03       	call 2098816 <delay : 4b54 >			  ## adc_api.c:487:5
 1e044d4:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## adc_api.c:488:5
 1e044d8:    10 fc fa 00       	r0 = r1 + 250			  ## adc_api.c:488:5
 1e044dc:    00 fd 70 09       	r0 = r0 | 112			  ## adc_api.c:488:5
 1e044e0:    10 f9 00 a0       	b[r10 + 0] = r0			  ## adc_api.c:488:5
 1e044e4:    09 e0 03 00       	if (r9 == 0) goto 6 <board_init+0x112 : 1e044ee >			  ## adc_api.c:488:5
 1e044e8:    40 05             	r0 = r5.b0 (u)			  ## adc_api.c:617:9
 1e044ea:    41 04             	r1 = r1.b0 (u)			  ## adc_api.c:617:9
 1e044ec:    3b 17             	call -394 <update_wvdd_pvdd_trim_level : 1e04364 >			  ## adc_api.c:617:9
 1e044ee:    c0 ff e0 24 00 00 	r0 = 9440 <adc_queue : 24e0 >			  ## adc_api.c:359:5
 1e044f4:    f1 7f             	r1 = 255			  ## adc_api.c:359:5
 1e044f6:    02 7b             	r2 = 176			  ## adc_api.c:359:5
 1e044f8:    98 f3 fa 14       	call 3156468 <memset : 106ef0 >			  ## adc_api.c:359:5
 1e044fc:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >			  ## adc_api.c:359:5
 1e04502:    85 fc 5c 01       	r5 = r8 + 348			  ## adc_api.c:360:5
 1e04506:    01 70             	r1 = 0			  ## adc_api.c:360:5
 1e04508:    42 71             	r2 = 20			  ## adc_api.c:360:5
 1e0450a:    06 70             	r6 = 0			  ## adc_api.c:360:5
 1e0450c:    50 08             	r0 = r5			  ## adc_api.c:360:5
 1e0450e:    98 f3 ef 14       	call 3156446 <memset : 106ef0 >			  ## adc_api.c:360:5
 1e04512:    84 fc 48 01       	r4 = r8 + 328			  ## adc_api.c:361:5
 1e04516:    01 70             	r1 = 0			  ## adc_api.c:361:5
 1e04518:    42 71             	r2 = 20			  ## adc_api.c:361:5
 1e0451a:    40 08             	r0 = r4			  ## adc_api.c:361:5
 1e0451c:    98 f3 e8 14       	call 3156432 <memset : 106ef0 >			  ## adc_api.c:361:5
 1e04520:    c0 ff 00 31 1e 00 	r0 = 1978624 <uECC_vli_cmp_unsafe+0xDC104 : 1e3100 >			  ## adc_api.c:363:17
 1e04526:    0e 40             	[r0 + 0] = r6			  ## adc_api.c:363:17
 1e04528:    c6 ff 0d 00 05 00 	r6 = 327693 <text_size+0x37E2D : 5000d >			  ## adc_api.c:365:5
 1e0452e:    60 08             	r0 = r6			  ## adc_api.c:365:5
 1e04530:    27 17             	call -434 <adc_add_sample_ch : 1e04380 >			  ## adc_api.c:365:5
 1e04532:    60 08             	r0 = r6			  ## adc_api.c:366:5
 1e04534:    3b 17             	call -394 <adc_set_sample_freq : 1e043ac >			  ## adc_api.c:366:5
 1e04536:    d0 70             	r0 = 13			  ## adc_api.c:368:5
 1e04538:    23 17             	call -442 <adc_add_sample_ch : 1e04380 >			  ## adc_api.c:368:5
 1e0453a:    d0 70             	r0 = 13			  ## adc_api.c:369:5
 1e0453c:    37 17             	call -402 <adc_set_sample_freq : 1e043ac >			  ## adc_api.c:369:5
 1e0453e:    d0 70             	r0 = 13			  ## adc_api.c:371:5
 1e04540:    bf f3 af de       	call -17058 <adc_sample : 1e002a2 >			  ## adc_api.c:371:5
 1e04544:    93 70             	r3 = 9
 1e04546:    06 18             	goto 12 <board_init+0x178 : 1e04554 >
 1e04548:    d6 16             	call -596 <adc_wait_pnd : 1e042f6 >			  ## adc_api.c:374:41
 1e0454a:    01 08             	r1 = r0			  ## adc_api.c:374:41
 1e0454c:    50 08             	r0 = r5			  ## adc_api.c:374:9
 1e0454e:    bf f3 85 de       	call -17142 <adc_value_push : 1e0025c >			  ## adc_api.c:374:9
 1e04552:    f3 8f             	r3 += -1			  ## adc_api.c:373:5
 1e04554:    f9 37             	if (r3 != 0) goto -14 <board_init+0x16C : 1e04548 >			  ## adc_api.c:373:5
 1e04556:    60 08             	r0 = r6			  ## adc_api.c:379:5
 1e04558:    bf f3 a3 de       	call -17082 <adc_sample : 1e002a2 >			  ## adc_api.c:379:5
 1e0455c:    93 70             	r3 = 9
 1e0455e:    06 18             	goto 12 <board_init+0x190 : 1e0456c >
 1e04560:    ca 16             	call -620 <adc_wait_pnd : 1e042f6 >			  ## adc_api.c:381:42
 1e04562:    01 08             	r1 = r0			  ## adc_api.c:381:42
 1e04564:    40 08             	r0 = r4			  ## adc_api.c:381:9
 1e04566:    bf f3 79 de       	call -17166 <adc_value_push : 1e0025c >			  ## adc_api.c:381:9
 1e0456a:    f3 8f             	r3 += -1			  ## adc_api.c:380:5
 1e0456c:    f9 37             	if (r3 != 0) goto -14 <board_init+0x184 : 1e04560 >
 1e0456e:    c2 ff 9c 03 e0 01 	r2 = 31458204 <adc_isr : 1e0039c >			  ## adc_api.c:396:5
 1e04574:    70 71             	r0 = 23			  ## adc_api.c:396:5
 1e04576:    01 70             	r1 = 0			  ## adc_api.c:396:5
 1e04578:    80 f3 4b 31       	call 25238 <request_irq : 1e0a812 >			  ## adc_api.c:396:5
 1e0457c:    c0 ff e0 02 e0 01 	r0 = 31458016 <adc_scan : 1e002e0 >			  ## adc_api.c:398:5
 1e04582:    80 f3 7a 3a       	call 29940 <usr_timer_add : 1e0ba7a >			  ## adc_api.c:398:5
 1e04586:    84 a1             	r4 = sp + 24
 1e04588:    01 70             	r1 = 0			  ## user_cfg.c:183:8
 1e0458a:    02 78             	r2 = 128			  ## user_cfg.c:183:8
 1e0458c:    40 08             	r0 = r4			  ## user_cfg.c:183:8
 1e0458e:    98 f3 af 14       	call 3156318 <memset : 106ef0 >			  ## user_cfg.c:183:8
 1e04592:    01 70             	r1 = 0			  ## user_cfg.c:186:5
 1e04594:    02 78             	r2 = 128			  ## user_cfg.c:186:5
 1e04596:    40 08             	r0 = r4			  ## user_cfg.c:186:5
 1e04598:    98 f3 aa 14       	call 3156308 <memset : 106ef0 >			  ## user_cfg.c:186:5
 1e0459c:    50 76             	r0 = 101			  ## user_cfg.c:199:11
 1e0459e:    02 72             	r2 = 32			  ## user_cfg.c:199:11
 1e045a0:    41 08             	r1 = r4			  ## user_cfg.c:199:11
 1e045a2:    80 f3 d2 40       	call 33188 <syscfg_read : 1e0c74a >			  ## user_cfg.c:199:11
 1e045a6:    04 08             	r4 = r0			  ## user_cfg.c:199:11
 1e045a8:    c6 ff b0 08 00 00 	r6 = 2224 <ble_device_name_len : 8b0 >
 1e045ae:    04 e0 16 b0       	ifs (r4 < 0) goto 44 <board_init+0x202 : 1e045de >
 1e045b2:    65 fc 34 00       	r5 = r6 + 52			  ## user_cfg.c:203:9
 1e045b6:    01 70             	r1 = 0			  ## user_cfg.c:203:9
 1e045b8:    02 72             	r2 = 32			  ## user_cfg.c:203:9
 1e045ba:    07 70             	r7 = 0			  ## user_cfg.c:203:9
 1e045bc:    50 08             	r0 = r5			  ## user_cfg.c:203:9
 1e045be:    98 f3 97 14       	call 3156270 <memset : 106ef0 >			  ## user_cfg.c:203:9
 1e045c2:    81 a1             	r1 = sp + 24			  ## user_cfg.c:203:9
 1e045c4:    04 e2 07 b0       	ifs (r4 < 32) goto 14 <board_init+0x1FA : 1e045d6 >			  ## user_cfg.c:202:16
 1e045c8:    02 72             	r2 = 32			  ## user_cfg.c:204:9
 1e045ca:    50 08             	r0 = r5			  ## user_cfg.c:204:9
 1e045cc:    98 f3 8a 14       	call 3156244 <memcpy : 106ee4 >			  ## user_cfg.c:204:9
 1e045d0:    17 f9 53 60       	b[r6 + 83] = r7			  ## user_cfg.c:205:45
 1e045d4:    04 18             	goto 8 <board_init+0x202 : 1e045de >			  ## user_cfg.c:205:45
 1e045d6:    50 08             	r0 = r5			  ## user_cfg.c:208:9
 1e045d8:    42 08             	r2 = r4			  ## user_cfg.c:208:9
 1e045da:    98 f3 83 14       	call 3156230 <memcpy : 106ee4 >			  ## user_cfg.c:208:9
 1e045de:    c4 ff 70 22 00 00 	r4 = 8816 <trans_server_adv_config : 2270 >
 1e045e4:    41 fc 26 00       	r1 = r4 + 38			  ## user_cfg.c:215:11
 1e045e8:    00 fb 59 02       	r0 = 601 <BTCTLER_CL_RAM_TOTAL+0x75 : 259 >			  ## user_cfg.c:215:11
 1e045ec:    12 70             	r2 = 1			  ## user_cfg.c:215:11
 1e045ee:    80 f3 ac 40       	call 33112 <syscfg_read : 1e0c74a >			  ## user_cfg.c:215:11
 1e045f2:    00 e0 03 b0       	ifs (r0 < 0) goto 6 <board_init+0x220 : 1e045fc >			  ## user_cfg.c:216:9
 1e045f6:    00 f9 26 40       	r0 = b[r4 + 38] (u)
 1e045fa:    03 18             	goto 6 <board_init+0x226 : 1e04602 >
 1e045fc:    a0 70             	r0 = 10
 1e045fe:    10 f9 26 40       	b[r4 + 38] = r0			  ## user_cfg.c:218:26
 1e04602:    80 f3 d7 52       	call 42414 <bt_max_pwr_set : 1e0ebb4 >			  ## user_cfg.c:220:5
 1e04606:    e0 70             	r0 = 14			  ## user_cfg.c:224:26
 1e04608:    10 f9 20 40       	b[r4 + 32] = r0			  ## user_cfg.c:224:26
 1e0460c:    10 f9 22 40       	b[r4 + 34] = r0			  ## user_cfg.c:225:26
 1e04610:    00 fb 4a 01       	r0 = 330 <DRIVER_RAM_TOTAL+0x58 : 14a >			  ## user_cfg.c:267:29
 1e04614:    e8 59             	h[r4 + 60] = r0			  ## user_cfg.c:267:29
 1e04616:    ce f4 aa 45       	[r4 + 56] = 22282240			  ## user_cfg.c:281:27
 1e0461a:    00 70             	r0 = 0			  ## user_cfg.c:281:27
 1e0461c:    90 f5 10 00       	h[sp+16] = r0			  ## user_cfg.c:290:8
 1e04620:    38 02             	[sp+12] = r0			  ## user_cfg.c:290:8
 1e04622:    21 a1             	r1 = sp + 18			  ## user_cfg.c:290:8
 1e04624:    60 76             	r0 = 102			  ## user_cfg.c:304:19
 1e04626:    62 70             	r2 = 6			  ## user_cfg.c:304:19
 1e04628:    80 f3 8f 40       	call 33054 <syscfg_read : 1e0c74a >			  ## user_cfg.c:304:19
 1e0462c:    c4 ff fc e1 e0 01 	r4 = 31515132 <trans_connection_param_table+0x18 : 1e0e1fc >
 1e04632:    60 e0 0c 10       	if (r0 != 6) goto 24 <board_init+0x272 : 1e0464e >
 1e04636:    20 a1             	r0 = sp + 18
 1e04638:    62 70             	r2 = 6			  ## user_cfg.c:305:32
 1e0463a:    41 08             	r1 = r4			  ## user_cfg.c:305:32
 1e0463c:    98 f3 56 14       	call 3156140 <memcmp : 106eec >			  ## user_cfg.c:305:32
 1e04640:    06 20             	if (r0 == 0) goto 12 <board_init+0x272 : 1e0464e >			  ## user_cfg.c:305:32
 1e04642:    20 a1             	r0 = sp + 18
 1e04644:    c1 a0             	r1 = sp + 12
 1e04646:    62 70             	r2 = 6			  ## user_cfg.c:305:68
 1e04648:    98 f3 50 14       	call 3156128 <memcmp : 106eec >			  ## user_cfg.c:305:68
 1e0464c:    0a 30             	if (r0 != 0) goto 20 <board_init+0x286 : 1e04662 >			  ## user_cfg.c:305:68
 1e0464e:    25 a1             	r5 = sp + 18
 1e04650:    61 70             	r1 = 6			  ## user_cfg.c:306:17
 1e04652:    50 08             	r0 = r5			  ## user_cfg.c:306:17
 1e04654:    80 f3 ea 8a       	call 71124 <get_random_number : 1e15c2c >			  ## user_cfg.c:306:17
 1e04658:    60 76             	r0 = 102			  ## user_cfg.c:307:17
 1e0465a:    62 70             	r2 = 6			  ## user_cfg.c:307:17
 1e0465c:    51 08             	r1 = r5			  ## user_cfg.c:307:17
 1e0465e:    80 f3 d9 40       	call 33202 <syscfg_write : 1e0c814 >			  ## user_cfg.c:307:17
 1e04662:    85 fc 00 01       	r5 = r8 + 256			  ## user_cfg.c:311:5
 1e04666:    60 76             	r0 = 102			  ## user_cfg.c:311:5
 1e04668:    62 70             	r2 = 6			  ## user_cfg.c:311:5
 1e0466a:    51 08             	r1 = r5			  ## user_cfg.c:311:5
 1e0466c:    80 f3 6d 40       	call 32986 <syscfg_read : 1e0c74a >			  ## user_cfg.c:311:5
 1e04670:    62 70             	r2 = 6			  ## user_cfg.c:312:10
 1e04672:    50 08             	r0 = r5			  ## user_cfg.c:312:10
 1e04674:    41 08             	r1 = r4			  ## user_cfg.c:312:10
 1e04676:    98 f3 39 14       	call 3156082 <memcmp : 106eec >			  ## user_cfg.c:312:10
 1e0467a:    09 30             	if (r0 != 0) goto 18 <board_init+0x2B2 : 1e0468e >			  ## user_cfg.c:312:10
 1e0467c:    61 70             	r1 = 6			  ## user_cfg.c:313:9
 1e0467e:    50 08             	r0 = r5			  ## user_cfg.c:313:9
 1e04680:    80 f3 d4 8a       	call 71080 <get_random_number : 1e15c2c >			  ## user_cfg.c:313:9
 1e04684:    60 76             	r0 = 102			  ## user_cfg.c:314:9
 1e04686:    62 70             	r2 = 6			  ## user_cfg.c:314:9
 1e04688:    51 08             	r1 = r5			  ## user_cfg.c:314:9
 1e0468a:    80 f3 c3 40       	call 33158 <syscfg_write : 1e0c814 >			  ## user_cfg.c:314:9
 1e0468e:    60 fc 54 00       	r0 = r6 + 84			  ## user_cfg.c:320:5
 1e04692:    21 a1             	r1 = sp + 18			  ## user_cfg.c:320:5
 1e04694:    62 70             	r2 = 6			  ## user_cfg.c:320:5
 1e04696:    98 f3 25 14       	call 3156042 <memcpy : 106ee4 >			  ## user_cfg.c:320:5
 1e0469a:    01 a0             	r1 = sp + 0			  ## user_cfg.c:320:5
 1e0469c:    00 fb 5f 02       	r0 = 607 <BTCTLER_CL_RAM_TOTAL+0x7B : 25f >			  ## user_cfg.c:333:11
 1e046a0:    92 70             	r2 = 9			  ## user_cfg.c:333:11
 1e046a2:    80 f3 52 40       	call 32932 <syscfg_read : 1e0c74a >			  ## user_cfg.c:333:11
 1e046a6:    10 e0 0f b0       	ifs (r0 < 1) goto 30 <board_init+0x2EC : 1e046c8 >
 1e046aa:    80 f5 00 00       	r0 = h[sp] (u)			  ## user_cfg.c:337:46
 1e046ae:    68 5c             	h[r6 + 12] = r0			  ## user_cfg.c:337:36
 1e046b0:    80 f5 02 00       	r0 = h[sp+2] (u)			  ## user_cfg.c:338:46
 1e046b4:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## user_cfg.c:339:46
 1e046b8:    82 f5 06 00       	r2 = h[sp+6] (u)			  ## user_cfg.c:340:46
 1e046bc:    c3 f5 08 00       	r3 = b[sp+8] (u)			  ## user_cfg.c:341:46
 1e046c0:    78 5c             	h[r6 + 14] = r0			  ## user_cfg.c:338:36
 1e046c2:    89 5c             	h[r6 + 16] = r1			  ## user_cfg.c:339:36
 1e046c4:    9a 5c             	h[r6 + 18] = r2			  ## user_cfg.c:340:36
 1e046c6:    4b 6d             	b[r6 + 20] = r3			  ## user_cfg.c:341:36
 1e046c8:    80 f3 ab 8c       	call 72022 <lp_winsize_init : 1e16022 >			  ## user_cfg.c:344:5
 1e046cc:    80 f3 77 49       	call 37614 <devices_init : 1e0d9be >			  ## board_ac632n_demo.c:349:2
 1e046d0:    a0 fc d7 ff       	r0 = r10 + -41			  ## board_ac632n_demo.c:349:2
 1e046d4:    01 60             	r1 = b[r0 + 0] (u)			  ## board_ac632n_demo.c:310:5
 1e046d6:    71 b0             	r1 &= 4294967294			  ## board_ac632n_demo.c:310:5
 1e046d8:    09 60             	b[r0 + 0] = r1			  ## board_ac632n_demo.c:310:5
 1e046da:    00 f9 74 81       	r0 = b[r8 + 372] (u)			  ## charge.c:98:20
 1e046de:    bf f3 44 e5       	call -13688 <power_set_mode : 1e0116a >			  ## board_ac632n_demo.c:360:3
 1e046e2:    4c 0a             	sp += 152			  ## board_ac632n_demo.c:360:3
 1e046e4:    5a 01             	{pc, r10-r4} = [sp++]			  ## board_ac632n_demo.c:384:1


app_main:
 1e046e6:    76 01             	[--sp] = {rets, r6-r4}			  ## app_main.c:212:0
 1e046e8:    f8 0b             	sp += -16			  ## app_main.c:212:0
 1e046ea:    c4 ff 00 54 1e 00 	r4 = 1987584 <uECC_vli_cmp_unsafe+0xDE404 : 1e5400 >			  ## app_main.c:212:0
 1e046f0:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e046f2:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e046f4:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e046f6:    00 f4 02 4a       	[r4 + 0] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e046fa:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e046fc:    f0 b3             	r0 &= 4294967167			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e046fe:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e04700:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e04702:    f0 b2             	r0 &= 4294967263			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e04704:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e04706:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e04708:    70 b5             	r0 &= 4294966271			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e0470a:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:214:29
 1e0470c:    00 f4 01 4a       	[r4 + 0] |= 256			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:810:13
 1e04710:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e04712:    70 b3             	r0 &= 4294967231			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e04714:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:174:29
 1e04716:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e04718:    70 b2             	r0 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0471a:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:577:13
 1e0471c:    46 fc 00 c4       	r6 = r4 + -15360
 1e04720:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04722:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04724:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04726:    00 f4 50 4a       	[r4 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0472a:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e0472c:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e0472e:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e04730:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e04732:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e04734:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e04736:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e04738:    f0 b0             	r0 &= 4294967293			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e0473a:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e0473c:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0473e:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04740:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04742:    00 f4 50 4a       	[r4 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04746:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e04748:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e0474a:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e0474c:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0474e:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e04750:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e04752:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e04754:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e04756:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e04758:    40 fc 10 fc       	r0 = r4 + -1008
 1e0475c:    00 f4 02 0a       	[r0 + 0] |= 512			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:592:15
 1e04760:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e04762:    f1 b4             	r1 &= 4294966783			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e04764:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:680:15
 1e04766:    c1 ff 5e 13 e0 01 	r1 = 31462238 <stopPower : 1e0135e >			  ## app_main.c:219:19
 1e0476c:    c2 ff c0 d4 01 00 	r2 = 120000 <text_size+0x52E0 : 1d4c0 >			  ## app_main.c:219:19
 1e04772:    00 70             	r0 = 0			  ## app_main.c:219:19
 1e04774:    05 70             	r5 = 0			  ## app_main.c:219:19
 1e04776:    80 f3 20 38       	call 28736 <sys_timeout_add : 1e0b7ba >			  ## app_main.c:219:19
 1e0477a:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0477c:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0477e:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04780:    00 f4 50 4a       	[r4 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04784:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e04786:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e04788:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e0478a:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0478c:    f0 b1             	r0 &= 4294967287			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e0478e:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e04790:    00 f4 02 49       	[r4 + 0] |= 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e04794:    00 4c             	r0 = [r6 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04796:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e04798:    08 4c             	[r6 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0479a:    00 f4 50 4a       	[r4 + 0] |= 20480			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:236:22
 1e0479e:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e047a0:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e047a2:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:114:29
 1e047a4:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e047a6:    70 b1             	r0 &= 4294967291			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e047a8:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:415:13
 1e047aa:    00 48             	r0 = [r4 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e047ac:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e047ae:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/gpio.c:416:13
 1e047b0:    c1 ff 98 12 e0 01 	r1 = 31462040 <endRelayFunc : 1e01298 >			  ## app_main.c:221:15
 1e047b6:    00 70             	r0 = 0			  ## app_main.c:221:15
 1e047b8:    22 73             	r2 = 50			  ## app_main.c:221:15
 1e047ba:    80 f3 fe 37       	call 28668 <sys_timeout_add : 1e0b7ba >			  ## app_main.c:221:15
 1e047be:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## app_main.c:221:15
 1e047c4:    c8 54             	h[r2 + 24] = r0			  ## app_main.c:221:13
 1e047c6:    c0 55             	r0 = h[r2 + 56] (u)			  ## update.c:212:15
 1e047c8:    0a 20             	if (r0 == 0) goto 20 <app_main+0xF8 : 1e047de >			  ## update.c:212:15
 1e047ca:    20 ff 5a 0a 07 00 	if (r0 == 23040) goto 14 <app_main+0xF8 : 1e047de >
 1e047d0:    63 70             	r3 = 6
 1e047d2:    bf f3 91 f6       	call -4830 <wdt_clear : 1e034f8 >			  ## update.c:237:9
 1e047d6:    f3 8f             	r3 += -1			  ## update.c:256:27
 1e047d8:    61 ff ff 39 fa ff 	if ((r3 & 255) != 0) goto -12 <app_main+0xEC : 1e047d2 >			  ## update.c:256:27
 1e047de:    00 f9 74 21       	r0 = b[r2 + 372] (u)			  ## charge.c:98:20
 1e047e2:    2d 02             	[sp+8] = r5			  ## app_main.c:276:5
 1e047e4:    3d 02             	[sp+12] = r5			  ## app_main.c:276:5
 1e047e6:    c0 ff 25 df e0 01 	r0 = 31514405 <update_target_end+0x45 : 1e0df25 >			  ## app_main.c:279:13
 1e047ec:    08 02             	[sp] = r0			  ## app_main.c:279:13
 1e047ee:    10 70             	r0 = 1			  ## app_main.c:280:15
 1e047f0:    18 02             	[sp+4] = r0			  ## app_main.c:280:15
 1e047f2:    00 a0             	r0 = sp + 0			  ## app_main.c:280:15
 1e047f4:    80 f3 29 3f       	call 32338 <start_app : 1e0c64a >			  ## app_main.c:336:5
 1e047f8:    08 0a             	sp += 16
 1e047fa:    56 01             	{pc, r6-r4} = [sp++]			  ## app_main.c:341:1


cpu_reset.136:
 1e047fc:    cf f3 80 f5       	goto 2091776 <p33_soft_reset : 3300 >			  ## cpu.h:146:0


ble_profile_init:
 1e04800:    76 01             	[--sp] = {rets, r6-r4}			  ## le_gatt_common.c:701:0
 1e04802:    fe 0b             	sp += -4			  ## le_gatt_common.c:701:0
 1e04804:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >			  ## le_gatt_common.c:701:0
 1e0480a:    00 70             	r0 = 0			  ## le_gatt_common.c:701:0
 1e0480c:    28 6a             	b[r5 + 2] = r0			  ## le_gatt_common.c:703:5
 1e0480e:    b0 4a             	r0 = [r5 + 44]			  ## le_gatt_common.c:705:10
 1e04810:    01 30             	if (r0 != 0) goto 2 <ble_profile_init+0x14 : 1e04814 >			  ## le_gatt_common.c:705:10
 1e04812:    f4 17             	call -24 <cpu_reset.136 : 1e047fc >			  ## le_gatt_common.c:707:9
 1e04814:    80 f3 0d 12       	call 9242 <ble_stack_gatt_role : 1e06c32 >			  ## le_gatt_common.c:715:9
 1e04818:    80 f3 4a 2a       	call 21652 <att_server_register_packet_handler : 1e09cb0 >			  ## le_gatt_common.c:744:9
 1e0481c:    c4 ff 70 22 00 00 	r4 = 8816 <trans_server_adv_config : 2270 >			  ## le_gatt_server.c:935:31
 1e04822:    20 49             	r0 = [r4 + 72]			  ## le_gatt_server.c:933:51
 1e04824:    11 40             	r1 = [r0 + 4]			  ## le_gatt_server.c:934:44
 1e04826:    00 40             	r0 = [r0 + 0]			  ## le_gatt_server.c:933:66
 1e04828:    80 f3 4a 2a       	call 21652 <att_server_init : 1e09cc0 >			  ## le_gatt_server.c:933:5
 1e0482c:    10 70             	r0 = 1			  ## le_gatt_server.c:935:31
 1e0482e:    10 f9 56 40       	b[r4 + 86] = r0			  ## le_gatt_server.c:935:31
 1e04832:    80 f3 10 12       	call 9248 <hci_event_callback_set : 1e06c56 >			  ## le_gatt_common.c:754:5
 1e04836:    80 f3 19 12       	call 9266 <le_l2cap_register_packet_handler : 1e06c6c >			  ## le_gatt_common.c:755:5
 1e0483a:    c6 ff 40 08 00 00 	r6 = 2112 <trans_gatt_control_block : 840 >			  ## le_gatt_common.c:755:5
 1e04840:    11 5c             	r1 = h[r6 + 2] (u)			  ## le_gatt_common.c:759:53
 1e04842:    00 5c             	r0 = h[r6 + 0] (u)			  ## le_gatt_common.c:759:42
 1e04844:    c3 4a             	r3 = [r5 + 48]			  ## le_gatt_common.c:760:14
 1e04846:    01 09             	r1 += r0			  ## le_gatt_common.c:759:51
 1e04848:    14 fc bc 00       	r4 = r1 + 188			  ## le_gatt_common.c:759:18
 1e0484c:    0b 36             	if (r3 != 0) goto 22 <ble_profile_init+0x64 : 1e04864 >
 1e0484e:    40 08             	r0 = r4			  ## le_gatt_common.c:761:31
 1e04850:    80 f3 06 2f       	call 24076 <malloc : 1e0a660 >			  ## le_gatt_common.c:761:31
 1e04854:    c8 4a             	[r5 + 48] = r0			  ## le_gatt_common.c:761:29
 1e04856:    14 20             	if (r0 == 0) goto 40 <ble_profile_init+0x80 : 1e04880 >			  ## le_gatt_common.c:761:29
 1e04858:    01 70             	r1 = 0			  ## le_gatt_common.c:767:13
 1e0485a:    42 08             	r2 = r4			  ## le_gatt_common.c:767:13
 1e0485c:    98 f3 48 13       	call 3155600 <memset : 106ef0 >			  ## le_gatt_common.c:767:13
 1e04860:    c3 4a             	r3 = [r5 + 48]			  ## le_gatt_common.c:767:13
 1e04862:    00 5c             	r0 = h[r6 + 0] (u)			  ## le_gatt_common.c:767:13
 1e04864:    80 f3 0a 12       	call 9236 <ble_vendor_set_default_att_mtu : 1e06c7c >			  ## le_gatt_common.c:770:44
 1e04868:    02 5c             	r2 = h[r6 + 0] (u)			  ## le_gatt_common.c:774:9
 1e0486a:    80 71             	r0 = 24			  ## le_gatt_common.c:774:9
 1e0486c:    31 70             	r1 = 3			  ## le_gatt_common.c:774:9
 1e0486e:    0a 02             	[sp] = r2			  ## le_gatt_common.c:774:9
 1e04870:    32 08             	r2 = r3			  ## le_gatt_common.c:774:9
 1e04872:    43 08             	r3 = r4			  ## le_gatt_common.c:774:9
 1e04874:    80 f3 fc 0e       	call 7672 <ble_user_cmd_prepare : 1e06670 >			  ## le_gatt_common.c:774:9
 1e04878:    80 f3 10 12       	call 9248 <multi_att_ccc_config_init : 1e06c9c >			  ## le_gatt_common.c:776:13
 1e0487c:    02 0a             	sp += 4			  ## le_gatt_common.c:776:13
 1e0487e:    56 01             	{pc, r6-r4} = [sp++]			  ## le_gatt_common.c:781:1
 1e04880:    bd 17             	call -134 <cpu_reset.136 : 1e047fc >			  ## le_gatt_common.c:764:17
 1e04882:    ff 1f             	goto -2 <ble_profile_init+0x82 : 1e04882 >			  ## le_gatt_common.c:765:17


bredr_tx_bulk_alloc:
 1e04884:    76 01             	[--sp] = {rets, r6-r4}			  ## link_bulk.c:386:0
 1e04886:    c5 91             	r5 = r0 + 28			  ## link_bulk.c:386:0
 1e04888:    c6 ff 14 20 00 00 	r6 = 8212 <acl_tx_bulk_sem : 2014 >			  ## link_bulk.c:386:0
 1e0488e:    00 70             	r0 = 0			  ## link_bulk.c:394:14
 1e04890:    51 08             	r1 = r5			  ## link_bulk.c:394:14
 1e04892:    80 f3 48 49       	call 37520 <lbuf_alloc : 1e0db26 >			  ## link_bulk.c:394:14
 1e04896:    04 08             	r4 = r0			  ## link_bulk.c:394:14
 1e04898:    13 38             	if (r4 != 0) goto 38 <bredr_tx_bulk_alloc+0x3C : 1e048c0 >			  ## link_bulk.c:395:13
 1e0489a:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e0489e:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e048a2:    04 70             	r4 = 0
 1e048a4:    01 ff 00 03 12 00 	if (r0 != 768) goto 36 <bredr_tx_bulk_alloc+0x4A : 1e048ce >
 1e048aa:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e048ae:    61 ff ff 09 0d 00 	if ((r0 & 255) != 0) goto 26 <bredr_tx_bulk_alloc+0x4A : 1e048ce >
 1e048b4:    01 70             	r1 = 0			  ## link_bulk.c:403:13
 1e048b6:    60 08             	r0 = r6			  ## link_bulk.c:403:13
 1e048b8:    98 f3 a6 12       	call 3155276 <os_sem_pend : 106e08 >			  ## link_bulk.c:403:13
 1e048bc:    e8 21             	if (r0 == 0) goto -48 <bredr_tx_bulk_alloc+0xA : 1e0488e >			  ## link_bulk.c:403:13
 1e048be:    07 18             	goto 14 <bredr_tx_bulk_alloc+0x4A : 1e048ce >			  ## link_bulk.c:403:13
 1e048c0:    01 70             	r1 = 0			  ## link_bulk.c:409:5
 1e048c2:    c2 71             	r2 = 28			  ## link_bulk.c:409:5
 1e048c4:    98 f3 14 13       	call 3155496 <memset : 106ef0 >			  ## link_bulk.c:409:5
 1e048c8:    00 99             	r0 = r4 + 16			  ## link_bulk.c:414:25
 1e048ca:    48 48             	[r4 + 16] = r0			  ## list.h:188:16
 1e048cc:    58 48             	[r4 + 20] = r0			  ## list.h:189:16
 1e048ce:    40 08             	r0 = r4			  ## link_bulk.c:417:1
 1e048d0:    56 01             	{pc, r6-r4} = [sp++]			  ## link_bulk.c:417:1


__vsprintf:
 1e048d2:    7b 01             	[--sp] = {rets, r11-r4}			  ## vsprintf.c:72:0
 1e048d4:    fe 0b             	sp += -4			  ## vsprintf.c:72:0
 1e048d6:    14 08             	r4 = r1			  ## vsprintf.c:72:0
 1e048d8:    0a 02             	[sp] = r2			  ## vsprintf.c:72:0
 1e048da:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:77:12
 1e048dc:    08 08             	r8 = r0			  ## vsprintf.c:77:12
 1e048de:    86 08             	r6 = r8
 1e048e0:    bd 22             	if (r1 == 0) goto 378 <.GJTIE502_0_0_+0xFE : 1e04a5c >
 1e048e2:    49 76             	r9 = 100
 1e048e4:    aa 70             	r10 = 10
 1e048e6:    50 04             	r0 = r1.b0 (s)			  ## vsprintf.c:78:17
 1e048e8:    20 e5 2e d0       	ifs (r0 <= 82) goto 92 <__vsprintf+0x76 : 1e04948 >			  ## vsprintf.c:78:17
 1e048ec:    20 e6 1f c0       	ifs (r0 > 98) goto 62 <__vsprintf+0x5C : 1e0492e >
 1e048f0:    30 e5 3f 00       	if (r0 == 83) goto 126 <.GJTIE502_0_0_+0x14 : 1e04972 >
 1e048f4:    20 e6 af 10       	if (r0 != 98) goto 350 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e048f8:    20 f9 02 40       	r0 = b[r4 + 2] (s)			  ## vsprintf.c:101:21
 1e048fc:    22 f9 01 40       	r2 = b[r4 + 1] (s)			  ## vsprintf.c:99:20
 1e04900:    01 08             	r1 = r0			  ## vsprintf.c:101:17
 1e04902:    80 fe a0 12       	r1 += r2 * r10			  ## vsprintf.c:101:17
 1e04906:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:101:17
 1e0490a:    24 80             	r4 += 2			  ## vsprintf.c:100:13
 1e0490c:    a4 22             	if (r1 == 0) goto 328 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e0490e:    02 fe 0a 29       	r2 = r2 * 10			  ## vsprintf.c:99:35
 1e04912:    63 08             	r3 = r6			  ## vsprintf.c:99:35
 1e04914:    05 02             	r5 = [sp]			  ## vsprintf.c:104:24
 1e04916:    47 9a             	r7 = r5 + 4			  ## vsprintf.c:104:24
 1e04918:    0f 02             	[sp] = r7			  ## vsprintf.c:104:24
 1e0491a:    05 4a             	r5 = [r5 + 0]			  ## vsprintf.c:104:24
 1e0491c:    f1 8f             	r1 += -1			  ## vsprintf.c:103:23
 1e0491e:    95 f9 01 30       	b[r3 ++= 1] = r5			  ## vsprintf.c:105:25
 1e04922:    f8 33             	if (r1 != 0) goto -16 <__vsprintf+0x42 : 1e04914 >			  ## vsprintf.c:103:13
 1e04924:    20 09             	r0 += r2			  ## vsprintf.c:103:23
 1e04926:    60 09             	r0 += r6			  ## vsprintf.c:103:23
 1e04928:    06 fc f0 fd       	r6 = r0 + -528			  ## vsprintf.c:103:23
 1e0492c:    94 18             	goto 296 <.GJTIE502_0_0_+0xF8 : 1e04a56 >			  ## vsprintf.c:103:23
 1e0492e:    30 e6 2d 00       	if (r0 == 99) goto 90 <.GJTIE502_0_0_+0x2E : 1e0498c >
 1e04932:    c0 e6 90 10       	if (r0 != 108) goto 288 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e04936:    00 02             	r0 = [sp]			  ## vsprintf.c:155:24
 1e04938:    41 90             	r1 = r0 + 4			  ## vsprintf.c:155:24
 1e0493a:    09 02             	[sp] = r1			  ## vsprintf.c:155:24
 1e0493c:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:155:24
 1e04940:    1b f9 00 60       	b[r6 + 0] = r11			  ## vsprintf.c:156:21
 1e04944:    16 80             	r6 += 1
 1e04946:    87 18             	goto 270 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e04948:    01 fc bf ff       	r1 = r0 + -65
 1e0494c:    b1 e0 31 80       	if (r1 > 11) goto 98 <.GJTIE502_0_0_+0x54 : 1e049b2 >
 1e04950:    a1 00             	tbb [r1]


.GJTIS502_0_0_:
 1e04952:    06     < 6 : 0x6 >
 1e04953:    50     < 80 : 0x50 >
 1e04954:    5a     < 90 : 0x5A >
 1e04955:    82     < 130 : 0x82 >
 1e04956:    82     < 130 : 0x82 >
 1e04957:    82     < 130 : 0x82 >
 1e04958:    82     < 130 : 0x82 >
 1e04959:    72     < 114 : 0x72 >
 1e0495a:    82     < 130 : 0x82 >
 1e0495b:    82     < 130 : 0x82 >
 1e0495c:    82     < 130 : 0x82 >
 1e0495d:    7b     < 123 : 0x7B >
 1e0495e:    00 02             	r0 = [sp]			  ## vsprintf.c:137:20
 1e04960:    41 90             	r1 = r0 + 4			  ## vsprintf.c:137:20
 1e04962:    09 02             	[sp] = r1			  ## vsprintf.c:137:20
 1e04964:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:137:20
 1e04966:    62 70             	r2 = 6			  ## vsprintf.c:138:13
 1e04968:    60 08             	r0 = r6			  ## vsprintf.c:138:13
 1e0496a:    98 f3 bb 12       	call 3155318 <memcpy : 106ee4 >			  ## vsprintf.c:138:13
 1e0496e:    66 80             	r6 += 6			  ## vsprintf.c:139:18
 1e04970:    72 18             	goto 228 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e04972:    00 02             	r0 = [sp]			  ## vsprintf.c:131:20
 1e04974:    41 90             	r1 = r0 + 4			  ## vsprintf.c:131:20
 1e04976:    09 02             	[sp] = r1			  ## vsprintf.c:131:20
 1e04978:    05 40             	r5 = [r0 + 0]			  ## vsprintf.c:131:20
 1e0497a:    60 08             	r0 = r6			  ## vsprintf.c:132:13
 1e0497c:    51 08             	r1 = r5			  ## vsprintf.c:132:13
 1e0497e:    98 f3 bb 12       	call 3155318 <strcpy : 106ef8 >			  ## vsprintf.c:132:13
 1e04982:    50 08             	r0 = r5			  ## vsprintf.c:133:19
 1e04984:    98 f3 ba 12       	call 3155316 <strlen : 106efc >			  ## vsprintf.c:133:19
 1e04988:    06 09             	r6 += r0			  ## vsprintf.c:134:18
 1e0498a:    65 18             	goto 202 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e0498c:    00 02             	r0 = [sp]			  ## vsprintf.c:114:20
 1e0498e:    22 f9 02 40       	r2 = b[r4 + 2] (s)			  ## vsprintf.c:113:21
 1e04992:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:111:20
 1e04996:    41 90             	r1 = r0 + 4			  ## vsprintf.c:114:20
 1e04998:    09 02             	[sp] = r1			  ## vsprintf.c:114:20
 1e0499a:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:114:20
 1e0499c:    80 fe a0 23       	r2 += r3 * r10			  ## vsprintf.c:113:17
 1e049a0:    25 fc f0 fd       	r5 = r2 + -528			  ## vsprintf.c:113:17
 1e049a4:    60 08             	r0 = r6			  ## vsprintf.c:115:13
 1e049a6:    52 08             	r2 = r5			  ## vsprintf.c:115:13
 1e049a8:    98 f3 9c 12       	call 3155256 <memcpy : 106ee4 >			  ## vsprintf.c:115:13
 1e049ac:    56 09             	r6 += r5			  ## vsprintf.c:116:18
 1e049ae:    24 80             	r4 += 2			  ## vsprintf.c:112:13
 1e049b0:    52 18             	goto 164 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e049b2:    01 fc cf ff       	r1 = r0 + -49
 1e049b6:    21 e0 13 30       	if (r1 < 2) goto 38 <.GJTIE502_0_0_+0x82 : 1e049e0 >
 1e049ba:    d0 8c             	r0 += -51
 1e049bc:    20 e0 4b 20       	if (r0 >= 2) goto 150 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e049c0:    00 02             	r0 = [sp]			  ## vsprintf.c:89:20
 1e049c2:    41 90             	r1 = r0 + 4			  ## vsprintf.c:89:20
 1e049c4:    09 02             	[sp] = r1			  ## vsprintf.c:89:20
 1e049c6:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:89:20
 1e049c8:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:90:21
 1e049ca:    01 d2             	r1 = r0 >> 8			  ## vsprintf.c:91:28
 1e049cc:    19 6c             	b[r6 + 1] = r1			  ## vsprintf.c:91:21
 1e049ce:    01 d4             	r1 = r0 >> 16			  ## vsprintf.c:92:28
 1e049d0:    29 6c             	b[r6 + 2] = r1			  ## vsprintf.c:92:21
 1e049d2:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:93:17
 1e049d4:    41 e3 3e 10       	if (r1 != 52) goto 124 <.GJTIE502_0_0_+0xF6 : 1e04a54 >			  ## vsprintf.c:93:17
 1e049d8:    00 d6             	r0 = r0 >> 24			  ## vsprintf.c:94:32
 1e049da:    38 6c             	b[r6 + 3] = r0			  ## vsprintf.c:94:25
 1e049dc:    46 80             	r6 += 4			  ## vsprintf.c:94:22
 1e049de:    3b 18             	goto 118 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e049e0:    00 02             	r0 = [sp]			  ## vsprintf.c:81:20
 1e049e2:    41 90             	r1 = r0 + 4			  ## vsprintf.c:81:20
 1e049e4:    09 02             	[sp] = r1			  ## vsprintf.c:81:20
 1e049e6:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:81:20
 1e049e8:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:82:21
 1e049ea:    01 68             	r1 = b[r4 + 0] (u)			  ## vsprintf.c:83:17
 1e049ec:    21 e3 aa 1f       	if (r1 != 50) goto -172 <__vsprintf+0x72 : 1e04944 >			  ## vsprintf.c:83:17
 1e049f0:    27 18             	goto 78 <.GJTIE502_0_0_+0xE2 : 1e04a40 >			  ## vsprintf.c:83:17
 1e049f2:    00 02             	r0 = [sp]			  ## vsprintf.c:150:20
 1e049f4:    41 90             	r1 = r0 + 4			  ## vsprintf.c:150:20
 1e049f6:    09 02             	[sp] = r1			  ## vsprintf.c:150:20
 1e049f8:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:150:20
 1e049fa:    60 08             	r0 = r6			  ## vsprintf.c:151:13
 1e049fc:    b2 08             	r2 = r11			  ## vsprintf.c:151:13
 1e049fe:    98 f3 71 12       	call 3155170 <memcpy : 106ee4 >			  ## vsprintf.c:151:13
 1e04a02:    b6 09             	r6 += r11			  ## vsprintf.c:152:18
 1e04a04:    28 18             	goto 80 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e04a06:    00 02             	r0 = [sp]			  ## vsprintf.c:126:20
 1e04a08:    22 f9 03 40       	r2 = b[r4 + 3] (s)			  ## vsprintf.c:124:21
 1e04a0c:    21 f9 02 40       	r1 = b[r4 + 2] (s)			  ## vsprintf.c:122:21
 1e04a10:    23 f9 01 40       	r3 = b[r4 + 1] (s)			  ## vsprintf.c:120:20
 1e04a14:    45 90             	r5 = r0 + 4			  ## vsprintf.c:126:20
 1e04a16:    0d 02             	[sp] = r5			  ## vsprintf.c:126:20
 1e04a18:    05 fe 0a 19       	r5 = r1 * 10			  ## vsprintf.c:122:36
 1e04a1c:    01 40             	r1 = [r0 + 0]			  ## vsprintf.c:126:20
 1e04a1e:    80 fe 90 53       	r5 += r3 * r9			  ## vsprintf.c:122:17
 1e04a22:    80 ba             	r0 = r5 + r2			  ## vsprintf.c:124:17
 1e04a24:    05 fc 30 eb       	r5 = r0 + -5328			  ## vsprintf.c:124:17
 1e04a28:    60 08             	r0 = r6			  ## vsprintf.c:127:13
 1e04a2a:    52 08             	r2 = r5			  ## vsprintf.c:127:13
 1e04a2c:    98 f3 5a 12       	call 3155124 <memcpy : 106ee4 >			  ## vsprintf.c:127:13
 1e04a30:    56 09             	r6 += r5			  ## vsprintf.c:128:18
 1e04a32:    34 80             	r4 += 3			  ## vsprintf.c:123:13
 1e04a34:    10 18             	goto 32 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e04a36:    00 02             	r0 = [sp]			  ## vsprintf.c:142:20
 1e04a38:    41 90             	r1 = r0 + 4			  ## vsprintf.c:142:20
 1e04a3a:    09 02             	[sp] = r1			  ## vsprintf.c:142:20
 1e04a3c:    00 40             	r0 = [r0 + 0]			  ## vsprintf.c:142:20
 1e04a3e:    08 6c             	b[r6 + 0] = r0			  ## vsprintf.c:143:21
 1e04a40:    00 d2             	r0 = r0 >> 8
 1e04a42:    18 6c             	b[r6 + 1] = r0
 1e04a44:    26 80             	r6 += 2
 1e04a46:    07 18             	goto 14 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e04a48:    00 02             	r0 = [sp]			  ## vsprintf.c:147:24
 1e04a4a:    41 90             	r1 = r0 + 4			  ## vsprintf.c:147:24
 1e04a4c:    09 02             	[sp] = r1			  ## vsprintf.c:147:24
 1e04a4e:    0b f6 00 00       	r11 = [r0 + 0]			  ## vsprintf.c:147:24
 1e04a52:    01 18             	goto 2 <.GJTIE502_0_0_+0xF8 : 1e04a56 >
 1e04a54:    36 80             	r6 += 3			  ## vsprintf.c:92:18
 1e04a56:    11 68             	r1 = b[r4 + 1] (u)			  ## vsprintf.c:77:12
 1e04a58:    14 80             	r4 += 1			  ## vsprintf.c:163:15
 1e04a5a:    45 33             	if (r1 != 0) goto -374 <__vsprintf+0x14 : 1e048e6 >
 1e04a5c:    90 fb 80 06       	r0 = r6 - r8			  ## vsprintf.c:166:17
 1e04a60:    02 0a             	sp += 4			  ## vsprintf.c:166:17
 1e04a62:    5b 01             	{pc, r11-r4} = [sp++]			  ## vsprintf.c:166:5


lmp_format_packet:
 1e04a64:    74 01             	[--sp] = {rets, r4}			  ## lmp_rxtx.c:23:0
 1e04a66:    fe 0b             	sp += -4			  ## lmp_rxtx.c:23:0
 1e04a68:    04 08             	r4 = r0			  ## lmp_rxtx.c:23:0
 1e04a6a:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:23:0
 1e04a6c:    0d 18             	goto 26 <lmp_format_packet+0x24 : 1e04a88 >			  ## lmp_rxtx.c:23:0
 1e04a6e:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:26:39
 1e04a70:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:26:39
 1e04a72:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:26:39
 1e04a74:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:26:39
 1e04a76:    10 b1             	r0 |= 4			  ## lmp_rxtx.c:26:28
 1e04a78:    08 68             	b[r4 + 0] = r0			  ## lmp_rxtx.c:26:26
 1e04a7a:    05 18             	goto 10 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:26:26
 1e04a7c:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:30:30
 1e04a7e:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:30:30
 1e04a80:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:30:30
 1e04a82:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:30:30
 1e04a84:    28 68             	b[r4 + 2] = r0			  ## lmp_rxtx.c:30:28
 1e04a86:    11 80             	r1 += 1			  ## lmp_rxtx.c:48:15
 1e04a88:    00 62             	r0 = b[r1 + 0] (u)
 1e04a8a:    c0 e4 1e d0       	ifs (r0 <= 76) goto 60 <.GJTIE503_1_1_+0x28 : 1e04aca >
 1e04a8e:    02 fc b3 ff       	r2 = r0 + -77
 1e04a92:    92 e0 35 80       	if (r2 > 9) goto 106 <.GJTIE503_0_0_+0x26 : 1e04b00 >
 1e04a96:    a2 00             	tbb [r2]


.GJTIS503_1_1_:
 1e04a98:    13     < 19 : 0x13 >
 1e04a99:    38     < 56 : 0x38 >
 1e04a9a:    38     < 56 : 0x38 >
 1e04a9b:    0f     < 15 : 0xF >
 1e04a9c:    38     < 56 : 0x38 >
 1e04a9d:    38     < 56 : 0x38 >
 1e04a9e:    0b     < 11 : 0xB >
 1e04a9f:    38     < 56 : 0x38 >
 1e04aa0:    38     < 56 : 0x38 >
 1e04aa1:    05     < 5 : 0x5 >
 1e04aa2:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:32:30
 1e04aa4:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:32:30
 1e04aa6:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:32:30
 1e04aa8:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:32:30
 1e04aaa:    38 68             	b[r4 + 3] = r0			  ## lmp_rxtx.c:32:28
 1e04aac:    ec 1f             	goto -40 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:32:28
 1e04aae:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:38:35
 1e04ab0:    10 b1             	r0 |= 4			  ## lmp_rxtx.c:38:35
 1e04ab2:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:38:35
 1e04ab4:    e8 1f             	goto -48 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:38:35
 1e04ab6:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:34:26
 1e04ab8:    10 b0             	r0 |= 1			  ## lmp_rxtx.c:34:26
 1e04aba:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:34:26
 1e04abc:    e4 1f             	goto -56 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:34:26
 1e04abe:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:44:34
 1e04ac0:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:44:34
 1e04ac2:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:44:34
 1e04ac4:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:44:34
 1e04ac6:    48 68             	b[r4 + 4] = r0			  ## lmp_rxtx.c:44:32
 1e04ac8:    de 1f             	goto -68 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:44:32
 1e04aca:    f0 8b             	r0 += -65
 1e04acc:    60 e0 1c 80       	if (r0 > 6) goto 56 <.GJTIE503_0_0_+0x2E : 1e04b08 >
 1e04ad0:    a0 00             	tbb [r0]


.GJTIS503_0_0_:
 1e04ad2:    13     < 19 : 0x13 >
 1e04ad3:    1b     < 27 : 0x1B >
 1e04ad4:    1b     < 27 : 0x1B >
 1e04ad5:    0f     < 15 : 0xF >
 1e04ad6:    08     < 8 : 0x8 >
 1e04ad7:    1b     < 27 : 0x1B >
 1e04ad8:    04     < 4 : 0x4 >
 1e04ad9:    00     < 0 : 0x0 >
 1e04ada:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:40:33
 1e04adc:    90 b1             	r0 |= 8			  ## lmp_rxtx.c:40:33
 1e04ade:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:40:33
 1e04ae0:    d2 1f             	goto -92 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:40:33
 1e04ae2:    00 02             	r0 = [sp]			  ## lmp_rxtx.c:28:39
 1e04ae4:    42 90             	r2 = r0 + 4			  ## lmp_rxtx.c:28:39
 1e04ae6:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:28:39
 1e04ae8:    00 40             	r0 = [r0 + 0]			  ## lmp_rxtx.c:28:39
 1e04aea:    10 b1             	r0 |= 4			  ## lmp_rxtx.c:28:28
 1e04aec:    18 68             	b[r4 + 1] = r0			  ## lmp_rxtx.c:28:26
 1e04aee:    cb 1f             	goto -106 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:28:26
 1e04af0:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:36:26
 1e04af2:    90 b0             	r0 |= 2			  ## lmp_rxtx.c:36:26
 1e04af4:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:36:26
 1e04af6:    c7 1f             	goto -114 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:36:26
 1e04af8:    50 68             	r0 = b[r4 + 5] (u)			  ## lmp_rxtx.c:42:25
 1e04afa:    10 b2             	r0 |= 16			  ## lmp_rxtx.c:42:25
 1e04afc:    58 68             	b[r4 + 5] = r0			  ## lmp_rxtx.c:42:25
 1e04afe:    c3 1f             	goto -122 <lmp_format_packet+0x22 : 1e04a86 >			  ## lmp_rxtx.c:42:25
 1e04b00:    60 e7 bc 0f       	if (r0 == 118) goto -136 <lmp_format_packet+0x18 : 1e04a7c >
 1e04b04:    50 e6 b3 0f       	if (r0 == 101) goto -154 <lmp_format_packet+0xA : 1e04a6e >
 1e04b08:    30 70             	r0 = 3			  ## lmp_rxtx.c:51:14
 1e04b0a:    68 68             	b[r4 + 6] = r0			  ## lmp_rxtx.c:51:14
 1e04b0c:    78 68             	b[r4 + 7] = r0			  ## lmp_rxtx.c:52:16
 1e04b0e:    02 02             	r2 = [sp]			  ## lmp_rxtx.c:53:44
 1e04b10:    c0 99             	r0 = r4 + 28			  ## lmp_rxtx.c:53:26
 1e04b12:    df 16             	call -578 <__vsprintf : 1e048d2 >			  ## lmp_rxtx.c:53:15
 1e04b14:    58 58             	h[r4 + 10] = r0			  ## lmp_rxtx.c:53:13
 1e04b16:    02 0a             	sp += 4			  ## lmp_rxtx.c:53:13
 1e04b18:    54 01             	{pc, r4} = [sp++]			  ## lmp_rxtx.c:54:1


bredr_rx_bulk_free:
 1e04b1a:    75 01             	[--sp] = {rets, r5, r4}			  ## link_bulk.c:311:0
 1e04b1c:    41 60             	r1 = b[r0 + 4] (u)			  ## link_bulk.c:313:29
 1e04b1e:    15 50             	r5 = h[r0 + 2] (u)			  ## link_bulk.c:312:20
 1e04b20:    61 b0             	r1 = r0 - r1			  ## link_bulk.c:313:27
 1e04b22:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:316:5
 1e04b26:    10 08             	r0 = r1			  ## link_bulk.c:319:21
 1e04b28:    80 f3 5c 48       	call 37048 <lbuf_real_size : 1e0dbe4 >			  ## link_bulk.c:319:21
 1e04b2c:    04 08             	r4 = r0			  ## link_bulk.c:319:21
 1e04b2e:    10 08             	r0 = r1			  ## link_bulk.c:320:9
 1e04b30:    80 f3 5b 48       	call 37046 <lbuf_free : 1e0dbea >			  ## link_bulk.c:320:9
 1e04b34:    0e 20             	if (r0 == 0) goto 28 <bredr_rx_bulk_free+0x38 : 1e04b52 >
 1e04b36:    81 fd 40 05       	r0 = uextra(r5, p:8, l:1)			  ## link_bulk.c:312:20
 1e04b3a:    80 c0             	r0 = r0 << 2			  ## link_bulk.c:321:18
 1e04b3c:    c1 ff 0c 20 00 00 	r1 = 8204 <link : 200c >			  ## link_bulk.c:321:18
 1e04b42:    10 09             	r0 += r1			  ## link_bulk.c:321:18
 1e04b44:    11 50             	r1 = h[r0 + 2] (u)			  ## link_bulk.c:321:28
 1e04b46:    21 b3             	r1 = r1 - r4			  ## link_bulk.c:321:28
 1e04b48:    72 04             	r2 = r1.l (s)			  ## link_bulk.c:321:28
 1e04b4a:    02 e0 01 c0       	ifs (r2 > 0) goto 2 <bredr_rx_bulk_free+0x36 : 1e04b50 >			  ## link_bulk.c:321:28
 1e04b4e:    01 70             	r1 = 0			  ## link_bulk.c:322:13
 1e04b50:    19 50             	h[r0 + 2] = r1			  ## link_bulk.c:323:32
 1e04b52:    55 01             	{pc, r5, r4} = [sp++]


bredr_tx_bulk_free:
 1e04b54:    74 01             	[--sp] = {rets, r4}			  ## link_bulk.c:443:0
 1e04b56:    04 08             	r4 = r0			  ## link_bulk.c:443:0
 1e04b58:    28 fb 00 03       	r0 = rets			  ## link_bulk.c:448:5
 1e04b5c:    98 f3 1e 11       	call 3154492 <local_irq_disable : 106d9c >			  ## link_bulk.c:451:5
 1e04b60:    40 48             	r0 = [r4 + 16]			  ## list.h:165:36
 1e04b62:    51 48             	r1 = [r4 + 20]			  ## list.h:165:23
 1e04b64:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e04b66:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e04b68:    98 f3 16 11       	call 3154476 <local_irq_enable : 106d98 >			  ## link_bulk.c:453:5
 1e04b6c:    80 68             	r0 = b[r4 + 8] (u)			  ## link_bulk.c:455:15
 1e04b6e:    09 20             	if (r0 == 0) goto 18 <bredr_tx_bulk_free+0x2E : 1e04b82 >			  ## link_bulk.c:455:9
 1e04b70:    02 b8             	r2 = r4 + r0			  ## link_bulk.c:457:14
 1e04b72:    41 64             	r1 = b[r2 + 4] (u)			  ## link_bulk.c:457:14
 1e04b74:    10 f2 02 00       	if (r0 == r1) goto 4 <bredr_tx_bulk_free+0x28 : 1e04b7c >			  ## link_bulk.c:457:14
 1e04b78:    8f f3 c2 f3       	call 2090884 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e04b7c:    20 08             	r0 = r2			  ## link_bulk.c:459:16
 1e04b7e:    14 01             	{rets, r4} = [sp++]			  ## link_bulk.c:459:16
 1e04b80:    cc 1f             	goto -104 <bredr_rx_bulk_free : 1e04b1a >			  ## link_bulk.c:459:16
 1e04b82:    50 68             	r0 = b[r4 + 5] (u)			  ## link_bulk.c:462:15
 1e04b84:    25 f3 08 00       	if ((r0 & 32) != 0) goto 16 <bredr_tx_bulk_free+0x44 : 1e04b98 >			  ## link_bulk.c:462:15
 1e04b88:    40 08             	r0 = r4			  ## link_bulk.c:463:9
 1e04b8a:    80 f3 2e 48       	call 36956 <lbuf_free : 1e0dbea >			  ## link_bulk.c:463:9
 1e04b8e:    c0 ff 14 20 00 00 	r0 = 8212 <acl_tx_bulk_sem : 2014 >			  ## link_bulk.c:464:9
 1e04b94:    98 f3 3a 11       	call 3154548 <os_sem_post : 106e0c >			  ## link_bulk.c:464:9
 1e04b98:    54 01             	{pc, r4} = [sp++]			  ## link_bulk.c:466:1


bredr_tx_bulk_pop:
 1e04b9a:    01 08             	r1 = r0			  ## link_bulk.c:435:0
 1e04b9c:    03 42             	r3 = [r1 + 0]			  ## list.h:124:18
 1e04b9e:    32 fc f0 ff       	r2 = r3 + -16			  ## link_bulk.c:437:16
 1e04ba2:    00 70             	r0 = 0			  ## link_bulk.c:437:16
 1e04ba4:    13 f2 01 00       	if (r3 == r1) goto 2 <bredr_tx_bulk_pop+0x10 : 1e04baa >			  ## link_bulk.c:437:16
 1e04ba8:    20 08             	r0 = r2			  ## link_bulk.c:436:9
 1e04baa:    20 00             	rts			  ## link_bulk.c:440:1


lmp_request:
 1e04bac:    62 01             	[--sp] = {r3, r2}			  ## lmp_rxtx.c:78:0
 1e04bae:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp_rxtx.c:78:0
 1e04bb0:    fe 0b             	sp += -4			  ## lmp_rxtx.c:78:0
 1e04bb2:    16 08             	r6 = r1			  ## lmp_rxtx.c:78:0
 1e04bb4:    04 08             	r4 = r0			  ## lmp_rxtx.c:78:0
 1e04bb6:    10 71             	r0 = 17			  ## lmp_rxtx.c:82:10
 1e04bb8:    65 16             	call -822 <bredr_tx_bulk_alloc : 1e04884 >			  ## lmp_rxtx.c:82:10
 1e04bba:    05 08             	r5 = r0			  ## lmp_rxtx.c:82:10
 1e04bbc:    02 3a             	if (r5 != 0) goto 4 <lmp_request+0x16 : 1e04bc2 >
 1e04bbe:    8f f3 9f f3       	call 2090814 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e04bc2:    42 a1             	r2 = sp + 20
 1e04bc4:    0a 02             	[sp] = r2			  ## lmp_rxtx.c:85:5
 1e04bc6:    50 08             	r0 = r5			  ## lmp_rxtx.c:86:5
 1e04bc8:    61 08             	r1 = r6			  ## lmp_rxtx.c:86:5
 1e04bca:    4c 17             	call -360 <lmp_format_packet : 1e04a64 >			  ## lmp_rxtx.c:86:5
 1e04bcc:    00 f9 8a 40       	r0 = b[r4 + 138] (u)			  ## lmp_rxtx.c:90:20
 1e04bd0:    10 e0 03 10       	if (r0 != 1) goto 6 <lmp_request+0x2E : 1e04bda >			  ## lmp_rxtx.c:90:20
 1e04bd4:    c0 6b             	r0 = b[r5 + 28] (u)			  ## lmp_rxtx.c:91:21
 1e04bd6:    10 b0             	r0 |= 1			  ## lmp_rxtx.c:91:21
 1e04bd8:    c8 6b             	b[r5 + 28] = r0			  ## lmp_rxtx.c:91:21
 1e04bda:    00 f6 dc 40       	r0 = [r4 + 220]			  ## lmp_rxtx.c:95:38
 1e04bde:    51 08             	r1 = r5			  ## lmp_rxtx.c:95:5
 1e04be0:    80 f3 74 8c       	call 71912 <link_conn_tx_bulk_avaiable : 1e164cc >			  ## lmp_rxtx.c:95:5
 1e04be4:    02 0a             	sp += 4			  ## lmp_rxtx.c:95:5
 1e04be6:    16 01             	{rets, r6-r4} = [sp++]			  ## lmp_rxtx.c:95:5
 1e04be8:    04 0a             	sp += 8			  ## lmp_rxtx.c:95:5
 1e04bea:    20 00             	rts			  ## lmp_rxtx.c:95:5


l2cap_connection_update_request_just:
 1e04bec:    34 00             	[--sp] = rets			  ## le_gatt_client.c:269:0
 1e04bee:    03 08             	r3 = r0			  ## le_gatt_client.c:269:0
 1e04bf0:    01 70             	r1 = 0			  ## le_gatt_client.c:287:9
 1e04bf2:    80 f3 c1 0b       	call 6018 <little_endian_read_16 : 1e06378 >			  ## le_gatt_client.c:287:9
 1e04bf6:    02 08             	r2 = r0			  ## le_gatt_client.c:287:9
 1e04bf8:    21 70             	r1 = 2			  ## le_gatt_client.c:287:44
 1e04bfa:    30 08             	r0 = r3			  ## le_gatt_client.c:287:44
 1e04bfc:    80 f3 bc 0b       	call 6008 <little_endian_read_16 : 1e06378 >			  ## le_gatt_client.c:287:44
 1e04c00:    01 08             	r1 = r0			  ## le_gatt_client.c:287:44
 1e04c02:    10 70             	r0 = 1			  ## le_gatt_client.c:287:44
 1e04c04:    12 f2 07 80       	if (r2 > r1) goto 14 <l2cap_connection_update_request_just+0x2A : 1e04c16 >			  ## le_gatt_client.c:287:44
 1e04c08:    62 e0 05 30       	if (r2 < 6) goto 10 <l2cap_connection_update_request_just+0x2A : 1e04c16 >
 1e04c0c:    80 71             	r0 = 24			  ## le_gatt_client.c:307:39
 1e04c0e:    01 60             	r1 = b[r0 + 0] (u)			  ## le_gatt_client.c:307:39
 1e04c10:    10 70             	r0 = 1			  ## le_gatt_client.c:307:12
 1e04c12:    01 22             	if (r1 == 0) goto 2 <l2cap_connection_update_request_just+0x2A : 1e04c16 >			  ## le_gatt_client.c:307:12
 1e04c14:    00 70             	r0 = 0			  ## le_gatt_client.c:307:12
 1e04c16:    30 00             	pc = [sp++]			  ## le_gatt_client.c:309:1


lmp_hci_private_free_acl_packet:
 1e04c18:    74 01             	[--sp] = {rets, r4}			  ## lmp_rxtx.c:209:0
 1e04c1a:    04 08             	r4 = r0			  ## lmp_rxtx.c:209:0
 1e04c1c:    98 f3 be 10       	call 3154300 <local_irq_disable : 106d9c >			  ## lmp_rxtx.c:212:5
 1e04c20:    00 f7 ee 4f       	r0 = h[r4 + -18] (u)			  ## lmp_rxtx.c:213:16
 1e04c24:    90 b1             	r0 |= 8			  ## lmp_rxtx.c:213:16
 1e04c26:    10 f7 ee 4f       	h[r4 + -18] = r0			  ## lmp_rxtx.c:213:16
 1e04c2a:    14 01             	{rets, r4} = [sp++]			  ## lmp_rxtx.c:214:5
 1e04c2c:    d8 f3 b4 10       	goto 3154280 <local_irq_enable : 106d98 >			  ## lmp_rxtx.c:214:5


att_iterator_fetch_next:
 1e04c30:    77 01             	[--sp] = {rets, r7-r4}			  ## att_db.c:123:0
 1e04c32:    02 08             	r2 = r0			  ## att_db.c:123:0
 1e04c34:    03 44             	r3 = [r2 + 0]			  ## att_db.c:124:44
 1e04c36:    01 70             	r1 = 0			  ## att_db.c:124:18
 1e04c38:    05 70             	r5 = 0			  ## att_db.c:124:18
 1e04c3a:    30 08             	r0 = r3			  ## att_db.c:124:18
 1e04c3c:    80 f3 9c 0b       	call 5944 <little_endian_read_16 : 1e06378 >			  ## att_db.c:124:18
 1e04c40:    04 08             	r4 = r0			  ## att_db.c:124:18
 1e04c42:    2c 54             	h[r2 + 4] = r4			  ## att_db.c:124:16
 1e04c44:    17 28             	if (r4 == 0) goto 46 <att_iterator_fetch_next+0x44 : 1e04c74 >			  ## att_db.c:124:16
 1e04c46:    21 70             	r1 = 2			  ## att_db.c:134:18
 1e04c48:    30 08             	r0 = r3			  ## att_db.c:134:18
 1e04c4a:    80 f3 95 0b       	call 5930 <little_endian_read_16 : 1e06378 >			  ## att_db.c:134:18
 1e04c4e:    05 08             	r5 = r0			  ## att_db.c:134:18
 1e04c50:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:134:16
 1e04c52:    41 70             	r1 = 4			  ## att_db.c:135:18
 1e04c54:    30 08             	r0 = r3			  ## att_db.c:135:18
 1e04c56:    80 f3 8f 0b       	call 5918 <little_endian_read_16 : 1e06378 >			  ## att_db.c:135:18
 1e04c5a:    01 b7             	r1 = r3 + r4			  ## att_db.c:146:17
 1e04c5c:    86 70             	r6 = 8			  ## att_db.c:138:9
 1e04c5e:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x34 : 1e04c64 >			  ## att_db.c:138:9
 1e04c62:    66 71             	r6 = 22			  ## att_db.c:138:9
 1e04c64:    36 09             	r6 += r3
 1e04c66:    87 07             	r7 = -8			  ## att_db.c:138:9
 1e04c68:    09 f3 01 50       	if ((r5 & 512) == 0) goto 2 <att_iterator_fetch_next+0x3E : 1e04c6e >			  ## att_db.c:138:9
 1e04c6c:    a7 06             	r7 = -22			  ## att_db.c:138:9
 1e04c6e:    74 09             	r4 += r7
 1e04c70:    65 96             	r5 = r3 + 6			  ## att_db.c:136:19
 1e04c72:    05 18             	goto 10 <att_iterator_fetch_next+0x4E : 1e04c7e >			  ## att_db.c:136:19
 1e04c74:    3d 54             	h[r2 + 6] = r5			  ## att_db.c:126:19
 1e04c76:    00 70             	r0 = 0			  ## att_db.c:126:19
 1e04c78:    04 70             	r4 = 0			  ## att_db.c:126:19
 1e04c7a:    06 70             	r6 = 0			  ## att_db.c:126:19
 1e04c7c:    01 70             	r1 = 0			  ## att_db.c:126:19
 1e04c7e:    48 54             	h[r2 + 8] = r0			  ## att_db.c:135:16
 1e04c80:    3d 44             	[r2 + 12] = r5			  ## att_db.c:136:16
 1e04c82:    8c 54             	h[r2 + 16] = r4			  ## att_db.c:136:16
 1e04c84:    5e 44             	[r2 + 20] = r6			  ## att_db.c:136:16
 1e04c86:    09 44             	[r2 + 0] = r1			  ## att_db.c:131:21
 1e04c88:    57 01             	{pc, r7-r4} = [sp++]			  ## att_db.c:147:1


is_Bluetooth_Base_UUID:
 1e04c8a:    74 01             	[--sp] = {rets, r4}			  ## att_db.c:78:0
 1e04c8c:    04 08             	r4 = r0			  ## att_db.c:78:0
 1e04c8e:    c1 ff de e6 e0 01 	r1 = 31516382 <bluetooth_base_uuid : 1e0e6de >			  ## att_db.c:79:9
 1e04c94:    c2 70             	r2 = 12			  ## att_db.c:79:9
 1e04c96:    98 f3 29 11       	call 3154514 <memcmp : 106eec >			  ## att_db.c:79:9
 1e04c9a:    01 08             	r1 = r0			  ## att_db.c:79:9
 1e04c9c:    00 70             	r0 = 0			  ## att_db.c:79:9
 1e04c9e:    07 32             	if (r1 != 0) goto 14 <is_Bluetooth_Base_UUID+0x24 : 1e04cae >			  ## att_db.c:79:9
 1e04ca0:    f0 68             	r0 = b[r4 + 15] (u)			  ## att_db.c:82:9
 1e04ca2:    e1 68             	r1 = b[r4 + 14] (u)			  ## att_db.c:82:9
 1e04ca4:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## att_db.c:82:9
 1e04ca8:    10 70             	r0 = 1			  ## att_db.c:82:9
 1e04caa:    01 22             	if (r1 == 0) goto 2 <is_Bluetooth_Base_UUID+0x24 : 1e04cae >			  ## att_db.c:82:9
 1e04cac:    00 70             	r0 = 0			  ## att_db.c:82:9
 1e04cae:    54 01             	{pc, r4} = [sp++]			  ## att_db.c:87:1


att_iterator_match_uuid16:
 1e04cb0:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:150:0
 1e04cb2:    42 50             	r2 = h[r0 + 8] (u)			  ## att_db.c:151:13
 1e04cb4:    14 08             	r4 = r1			  ## att_db.c:151:13
 1e04cb6:    05 70             	r5 = 0
 1e04cb8:    11 24             	if (r2 == 0) goto 34 <att_iterator_match_uuid16+0x2C : 1e04cdc >
 1e04cba:    71 60             	r1 = b[r0 + 7] (u)			  ## att_db.c:154:19
 1e04cbc:    36 40             	r6 = [r0 + 12]			  ## att_db.c:154:19
 1e04cbe:    21 f3 02 10       	if ((r1 & 2) != 0) goto 4 <att_iterator_match_uuid16+0x16 : 1e04cc6 >			  ## att_db.c:154:19
 1e04cc2:    01 70             	r1 = 0			  ## att_db.c:160:12
 1e04cc4:    04 18             	goto 8 <att_iterator_match_uuid16+0x1E : 1e04cce >			  ## att_db.c:160:12
 1e04cc6:    60 08             	r0 = r6			  ## att_db.c:155:14
 1e04cc8:    e0 17             	call -64 <is_Bluetooth_Base_UUID : 1e04c8a >			  ## att_db.c:155:14
 1e04cca:    08 20             	if (r0 == 0) goto 16 <att_iterator_match_uuid16+0x2C : 1e04cdc >			  ## att_db.c:155:14
 1e04ccc:    c1 70             	r1 = 12			  ## att_db.c:158:16
 1e04cce:    60 08             	r0 = r6
 1e04cd0:    80 f3 52 0b       	call 5796 <little_endian_read_16 : 1e06378 >
 1e04cd4:    15 70             	r5 = 1
 1e04cd6:    40 f2 01 00       	if (r0 == r4) goto 2 <att_iterator_match_uuid16+0x2C : 1e04cdc >
 1e04cda:    05 70             	r5 = 0
 1e04cdc:    50 08             	r0 = r5			  ## att_db.c:161:1
 1e04cde:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:161:1


att_iterator_match_uuid:
 1e04ce0:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:164:0
 1e04ce2:    05 08             	r5 = r0			  ## att_db.c:164:0
 1e04ce4:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:165:13
 1e04ce6:    16 08             	r6 = r1			  ## att_db.c:165:13
 1e04ce8:    04 70             	r4 = 0
 1e04cea:    26 20             	if (r0 == 0) goto 76 <att_iterator_match_uuid+0x58 : 1e04d38 >
 1e04cec:    22 e0 09 10       	if (r2 != 2) goto 18 <att_iterator_match_uuid+0x22 : 1e04d02 >			  ## att_db.c:169:9
 1e04cf0:    01 70             	r1 = 0			  ## att_db.c:170:46
 1e04cf2:    60 08             	r0 = r6			  ## att_db.c:170:46
 1e04cf4:    80 f3 40 0b       	call 5760 <little_endian_read_16 : 1e06378 >			  ## att_db.c:170:46
 1e04cf8:    01 08             	r1 = r0			  ## att_db.c:170:46
 1e04cfa:    50 08             	r0 = r5			  ## att_db.c:170:16
 1e04cfc:    d9 17             	call -78 <att_iterator_match_uuid16 : 1e04cb0 >			  ## att_db.c:170:16
 1e04cfe:    04 08             	r4 = r0			  ## att_db.c:170:16
 1e04d00:    1b 18             	goto 54 <att_iterator_match_uuid+0x58 : 1e04d38 >			  ## att_db.c:170:16
 1e04d02:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:173:19
 1e04d04:    21 f3 11 00       	if ((r0 & 2) != 0) goto 34 <att_iterator_match_uuid+0x4A : 1e04d2a >			  ## att_db.c:173:19
 1e04d08:    60 08             	r0 = r6			  ## att_db.c:177:10
 1e04d0a:    bf 17             	call -130 <is_Bluetooth_Base_UUID : 1e04c8a >			  ## att_db.c:177:10
 1e04d0c:    15 20             	if (r0 == 0) goto 42 <att_iterator_match_uuid+0x58 : 1e04d38 >
 1e04d0e:    c1 70             	r1 = 12			  ## att_db.c:180:12
 1e04d10:    60 08             	r0 = r6			  ## att_db.c:180:12
 1e04d12:    80 f3 31 0b       	call 5730 <little_endian_read_16 : 1e06378 >			  ## att_db.c:180:12
 1e04d16:    32 4a             	r2 = [r5 + 12]			  ## att_db.c:180:73
 1e04d18:    03 08             	r3 = r0			  ## att_db.c:180:12
 1e04d1a:    01 70             	r1 = 0			  ## att_db.c:180:47
 1e04d1c:    20 08             	r0 = r2			  ## att_db.c:180:47
 1e04d1e:    80 f3 2b 0b       	call 5718 <little_endian_read_16 : 1e06378 >			  ## att_db.c:180:47
 1e04d22:    14 70             	r4 = 1			  ## att_db.c:180:44
 1e04d24:    03 f2 07 10       	if (r3 != r0) goto 14 <att_iterator_match_uuid+0x56 : 1e04d36 >			  ## att_db.c:180:44
 1e04d28:    07 18             	goto 14 <att_iterator_match_uuid+0x58 : 1e04d38 >			  ## att_db.c:180:44
 1e04d2a:    30 4a             	r0 = [r5 + 12]			  ## att_db.c:174:27
 1e04d2c:    02 71             	r2 = 16			  ## att_db.c:174:16
 1e04d2e:    98 f3 dd 10       	call 3154362 <memcmp : 106eec >			  ## att_db.c:174:16
 1e04d32:    14 70             	r4 = 1			  ## att_db.c:174:43
 1e04d34:    01 20             	if (r0 == 0) goto 2 <att_iterator_match_uuid+0x58 : 1e04d38 >			  ## att_db.c:174:43
 1e04d36:    04 70             	r4 = 0
 1e04d38:    40 08             	r0 = r4			  ## att_db.c:181:1
 1e04d3a:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:181:1


att_validate_security:
 1e04d3c:    75 01             	[--sp] = {rets, r5, r4}			  ## att_db.c:400:0
 1e04d3e:    0d d3             	r5 = r1 >> 12			  ## att_db.c:400:0
 1e04d40:    23 fd 0f 59       	r3 = r5 & 15			  ## att_db.c:401:46
 1e04d44:    14 96             	r4 = r3 + 1			  ## att_db.c:403:33
 1e04d46:    02 70             	r2 = 0
 1e04d48:    60 ff 0f 59 01 00 	if ((r5 & 15) == 0) goto 2 <att_validate_security+0x14 : 1e04d50 >
 1e04d4e:    42 08             	r2 = r4			  ## att_db.c:402:9
 1e04d50:    0a f3 02 10       	if ((r1 & 1024) == 0) goto 4 <att_validate_security+0x1C : 1e04d58 >
 1e04d54:    74 60             	r4 = b[r0 + 7] (u)			  ## att_db.c:407:79
 1e04d56:    10 28             	if (r4 == 0) goto 32 <att_validate_security+0x3C : 1e04d78 >			  ## att_db.c:407:79
 1e04d58:    0b f3 02 10       	if ((r1 & 2048) == 0) goto 4 <att_validate_security+0x24 : 1e04d60 >
 1e04d5c:    81 60             	r1 = b[r0 + 8] (u)			  ## att_db.c:410:78
 1e04d5e:    0e 22             	if (r1 == 0) goto 28 <att_validate_security+0x40 : 1e04d7c >			  ## att_db.c:410:78
 1e04d60:    11 70             	r1 = 1			  ## att_db.c:413:38
 1e04d62:    01 36             	if (r3 != 0) goto 2 <att_validate_security+0x2A : 1e04d66 >			  ## att_db.c:413:38
 1e04d64:    01 70             	r1 = 0
 1e04d66:    63 60             	r3 = b[r0 + 6] (u)
 1e04d68:    02 36             	if (r3 != 0) goto 4 <att_validate_security+0x32 : 1e04d6e >
 1e04d6a:    f0 70             	r0 = 15
 1e04d6c:    08 32             	if (r1 != 0) goto 16 <att_validate_security+0x42 : 1e04d7e >
 1e04d6e:    c0 70             	r0 = 12			  ## att_db.c:417:9
 1e04d70:    32 f2 05 80       	if (r2 > r3) goto 10 <att_validate_security+0x42 : 1e04d7e >			  ## att_db.c:417:9
 1e04d74:    00 70             	r0 = 0			  ## att_db.c:417:9
 1e04d76:    03 18             	goto 6 <att_validate_security+0x42 : 1e04d7e >			  ## att_db.c:417:9
 1e04d78:    50 70             	r0 = 5
 1e04d7a:    01 18             	goto 2 <att_validate_security+0x42 : 1e04d7e >
 1e04d7c:    80 70             	r0 = 8
 1e04d7e:    00 04             	r0 = r0.b0 (u)			  ## att_db.c:420:1
 1e04d80:    55 01             	{pc, r5, r4} = [sp++]			  ## att_db.c:420:1


att_service_handler_for_handle:
 1e04d82:    34 00             	[--sp] = rets			  ## att_db.c:201:0
 1e04d84:    fa 0b             	sp += -12			  ## att_db.c:201:0
 1e04d86:    03 08             	r3 = r0			  ## att_db.c:201:0
 1e04d88:    c1 ff f8 1c 00 00 	r1 = 7416 <att_global_info+0x20 : 1cf8 >			  ## att_db.c:203:5
 1e04d8e:    00 a0             	r0 = sp + 0			  ## att_db.c:203:5
 1e04d90:    80 f3 7e 15       	call 11004 <btstack_linked_list_iterator_init : 1e07890 >			  ## att_db.c:203:5
 1e04d94:    00 a0             	r0 = sp + 0
 1e04d96:    80 f3 7e 0d       	call 6908 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## att_db.c:204:12
 1e04d9a:    0a 20             	if (r0 == 0) goto 20 <att_service_handler_for_handle+0x2E : 1e04db0 >
 1e04d9c:    00 a0             	r0 = sp + 0
 1e04d9e:    80 f3 88 0d       	call 6928 <btstack_linked_list_iterator_next : 1e068b2 >			  ## att_db.c:205:68
 1e04da2:    21 50             	r1 = h[r0 + 4] (u)			  ## att_db.c:206:22
 1e04da4:    31 f2 f6 8f       	if (r1 > r3) goto -20 <att_service_handler_for_handle+0x12 : 1e04d94 >			  ## att_db.c:206:22
 1e04da8:    31 50             	r1 = h[r0 + 6] (u)			  ## att_db.c:209:22
 1e04daa:    31 f2 f3 3f       	if (r1 < r3) goto -26 <att_service_handler_for_handle+0x12 : 1e04d94 >			  ## att_db.c:209:22
 1e04dae:    01 18             	goto 2 <att_service_handler_for_handle+0x30 : 1e04db2 >			  ## att_db.c:209:22
 1e04db0:    00 70             	r0 = 0
 1e04db2:    06 0a             	sp += 12
 1e04db4:    30 00             	pc = [sp++]			  ## att_db.c:215:1


att_update_value_len:
 1e04db6:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:251:0
 1e04db8:    fe 0b             	sp += -4			  ## att_db.c:251:0
 1e04dba:    04 08             	r4 = r0			  ## att_db.c:251:0
 1e04dbc:    70 68             	r0 = b[r4 + 7] (u)			  ## att_db.c:252:44
 1e04dbe:    15 08             	r5 = r1			  ## att_db.c:252:44
 1e04dc0:    00 f3 12 00       	if ((r0 & 1) == 0) goto 36 <att_update_value_len+0x32 : 1e04de8 >
 1e04dc4:    40 58             	r0 = h[r4 + 8] (u)			  ## att_db.c:219:38
 1e04dc6:    dd 17             	call -70 <att_service_handler_for_handle : 1e04d82 >			  ## att_db.c:219:38
 1e04dc8:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e04dca:    c1 ff ec 1c 00 00 	r1 = 7404 <att_global_info+0x14 : 1cec >			  ## att_db.c:220:9
 1e04dd0:    01 20             	if (r0 == 0) goto 2 <att_update_value_len+0x1E : 1e04dd4 >			  ## att_db.c:220:9
 1e04dd2:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e04dd4:    06 42             	r6 = [r1 + 0]
 1e04dd6:    08 2c             	if (r6 == 0) goto 16 <att_update_value_len+0x32 : 1e04de8 >
 1e04dd8:    41 58             	r1 = h[r4 + 8] (u)			  ## att_db.c:259:21
 1e04dda:    00 70             	r0 = 0			  ## att_db.c:259:21
 1e04ddc:    02 70             	r2 = 0			  ## att_db.c:259:21
 1e04dde:    03 70             	r3 = 0			  ## att_db.c:259:21
 1e04de0:    08 02             	[sp] = r0			  ## att_db.c:259:21
 1e04de2:    50 08             	r0 = r5			  ## att_db.c:259:21
 1e04de4:    86 00             	call r6			  ## att_db.c:259:21
 1e04de6:    88 58             	h[r4 + 16] = r0			  ## att_db.c:259:19
 1e04de8:    02 0a             	sp += 4
 1e04dea:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:261:1


att_copy_value:
 1e04dec:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:265:0
 1e04dee:    fe 0b             	sp += -4			  ## att_db.c:265:0
 1e04df0:    05 08             	r5 = r0			  ## att_db.c:265:0
 1e04df2:    70 6a             	r0 = b[r5 + 7] (u)			  ## att_db.c:268:19
 1e04df4:    36 08             	r6 = r3
 1e04df6:    28 08             	r8 = r2
 1e04df8:    17 08             	r7 = r1
 1e04dfa:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <att_copy_value+0x2C : 1e04e18 >
 1e04dfe:    80 5a             	r0 = h[r5 + 16] (u)			  ## att_db.c:277:34
 1e04e00:    e0 b1             	r0 = r0 - r7			  ## att_db.c:277:44
 1e04e02:    21 04             	r1 = r0.l (u)			  ## att_db.c:277:44
 1e04e04:    61 f2 01 80       	if (r1 > r6) goto 2 <att_copy_value+0x1E : 1e04e0a >			  ## att_db.c:277:44
 1e04e08:    06 08             	r6 = r0			  ## att_db.c:278:9
 1e04e0a:    51 4a             	r1 = [r5 + 20]			  ## att_db.c:281:24
 1e04e0c:    a5 05             	r5 = r6.l (u)			  ## att_db.c:281:31
 1e04e0e:    80 08             	r0 = r8			  ## att_db.c:281:5
 1e04e10:    52 08             	r2 = r5			  ## att_db.c:281:5
 1e04e12:    98 f3 67 10       	call 3154126 <memcpy : 106ee4 >			  ## att_db.c:281:5
 1e04e16:    13 18             	goto 38 <att_copy_value+0x52 : 1e04e3e >			  ## att_db.c:281:5
 1e04e18:    40 5a             	r0 = h[r5 + 8] (u)			  ## att_db.c:219:38
 1e04e1a:    b3 17             	call -154 <att_service_handler_for_handle : 1e04d82 >			  ## att_db.c:219:38
 1e04e1c:    82 90             	r2 = r0 + 8			  ## att_db.c:221:25
 1e04e1e:    c1 ff ec 1c 00 00 	r1 = 7404 <att_global_info+0x14 : 1cec >			  ## att_db.c:220:9
 1e04e24:    01 20             	if (r0 == 0) goto 2 <att_copy_value+0x3C : 1e04e28 >			  ## att_db.c:220:9
 1e04e26:    21 08             	r1 = r2			  ## att_db.c:220:9
 1e04e28:    04 42             	r4 = [r1 + 0]
 1e04e2a:    08 28             	if (r4 == 0) goto 16 <att_copy_value+0x50 : 1e04e3c >
 1e04e2c:    70 02             	r0 = [sp+28]
 1e04e2e:    41 5a             	r1 = h[r5 + 8] (u)			  ## att_db.c:273:16
 1e04e30:    0e 02             	[sp] = r6			  ## att_db.c:273:16
 1e04e32:    72 08             	r2 = r7			  ## att_db.c:273:16
 1e04e34:    83 08             	r3 = r8			  ## att_db.c:273:16
 1e04e36:    84 00             	call r4			  ## att_db.c:273:16
 1e04e38:    05 08             	r5 = r0			  ## att_db.c:273:16
 1e04e3a:    01 18             	goto 2 <att_copy_value+0x52 : 1e04e3e >
 1e04e3c:    05 70             	r5 = 0
 1e04e3e:    50 08             	r0 = r5			  ## att_db.c:283:1
 1e04e40:    02 0a             	sp += 4			  ## att_db.c:283:1
 1e04e42:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:283:1


att_find_handle:
 1e04e44:    76 01             	[--sp] = {rets, r6-r4}			  ## att_db.c:185:0
 1e04e46:    15 08             	r5 = r1			  ## att_db.c:185:0
 1e04e48:    06 08             	r6 = r0			  ## att_db.c:185:0
 1e04e4a:    04 70             	r4 = 0			  ## att_db.c:185:0
 1e04e4c:    0f 2a             	if (r5 == 0) goto 30 <att_find_handle+0x28 : 1e04e6c >			  ## att_db.c:185:0
 1e04e4e:    c0 ff d8 1c 00 00 	r0 = 7384 <att_global_info : 1cd8 >			  ## att_db.c:114:27
 1e04e54:    30 40             	r0 = [r0 + 12]			  ## att_db.c:114:27
 1e04e56:    08 4c             	[r6 + 0] = r0			  ## att_db.c:114:17
 1e04e58:    09 20             	if (r0 == 0) goto 18 <att_find_handle+0x28 : 1e04e6c >			  ## att_db.c:114:17
 1e04e5a:    60 08             	r0 = r6			  ## att_db.c:191:9
 1e04e5c:    e9 16             	call -558 <att_iterator_fetch_next : 1e04c30 >			  ## att_db.c:191:9
 1e04e5e:    40 5c             	r0 = h[r6 + 8] (u)			  ## att_db.c:192:17
 1e04e60:    50 f2 03 00       	if (r0 == r5) goto 6 <att_find_handle+0x26 : 1e04e6a >			  ## att_db.c:192:17
 1e04e64:    00 4c             	r0 = [r6 + 0]
 1e04e66:    f9 31             	if (r0 != 0) goto -14 <att_find_handle+0x16 : 1e04e5a >
 1e04e68:    01 18             	goto 2 <att_find_handle+0x28 : 1e04e6c >
 1e04e6a:    14 70             	r4 = 1
 1e04e6c:    40 08             	r0 = r4			  ## att_db.c:198:1
 1e04e6e:    56 01             	{pc, r6-r4} = [sp++]			  ## att_db.c:198:1


att_notify_write_callbacks:
 1e04e70:    78 01             	[--sp] = {rets, r8-r4}			  ## att_db.c:1150:0
 1e04e72:    f6 0b             	sp += -20			  ## att_db.c:1150:0
 1e04e74:    14 08             	r4 = r1			  ## att_db.c:1150:0
 1e04e76:    05 08             	r5 = r0			  ## att_db.c:1150:0
 1e04e78:    c8 ff d8 1c 00 00 	r8 = 7384 <att_global_info : 1cd8 >			  ## att_db.c:1150:0
 1e04e7e:    81 fc 20 00       	r1 = r8 + 32			  ## att_db.c:1153:5
 1e04e82:    80 a0             	r0 = sp + 8			  ## att_db.c:1153:5
 1e04e84:    80 f3 04 15       	call 10760 <btstack_linked_list_iterator_init : 1e07890 >			  ## att_db.c:1153:5
 1e04e88:    80 f3 05 0d       	call 6666 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## att_db.c:1154:12
 1e04e8c:    11 20             	if (r0 == 0) goto 34 <att_notify_write_callbacks+0x40 : 1e04eb0 >			  ## att_db.c:1154:12
 1e04e8e:    07 70             	r7 = 0
 1e04e90:    80 a0             	r0 = sp + 8
 1e04e92:    80 f3 0e 0d       	call 6684 <btstack_linked_list_iterator_next : 1e068b2 >			  ## att_db.c:1155:68
 1e04e96:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1156:23
 1e04e98:    07 2c             	if (r6 == 0) goto 14 <att_notify_write_callbacks+0x38 : 1e04ea8 >			  ## att_db.c:1156:23
 1e04e9a:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1159:9
 1e04e9c:    1f 02             	[sp+4] = r7			  ## att_db.c:1159:9
 1e04e9e:    01 70             	r1 = 0			  ## att_db.c:1159:9
 1e04ea0:    03 70             	r3 = 0			  ## att_db.c:1159:9
 1e04ea2:    0f 02             	[sp] = r7			  ## att_db.c:1159:9
 1e04ea4:    42 08             	r2 = r4			  ## att_db.c:1159:9
 1e04ea6:    86 00             	call r6			  ## att_db.c:1159:9
 1e04ea8:    80 a0             	r0 = sp + 8
 1e04eaa:    80 f3 f4 0c       	call 6632 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## att_db.c:1154:12
 1e04eae:    f0 31             	if (r0 != 0) goto -32 <att_notify_write_callbacks+0x20 : 1e04e90 >
 1e04eb0:    06 f6 18 80       	r6 = [r8 + 24]			  ## att_db.c:1161:18
 1e04eb4:    08 2c             	if (r6 == 0) goto 16 <att_notify_write_callbacks+0x56 : 1e04ec6 >			  ## att_db.c:1161:18
 1e04eb6:    00 5a             	r0 = h[r5 + 0] (u)			  ## att_db.c:1164:5
 1e04eb8:    02 70             	r2 = 0			  ## att_db.c:1164:5
 1e04eba:    1a 02             	[sp+4] = r2			  ## att_db.c:1164:5
 1e04ebc:    01 70             	r1 = 0			  ## att_db.c:1164:5
 1e04ebe:    03 70             	r3 = 0			  ## att_db.c:1164:5
 1e04ec0:    0a 02             	[sp] = r2			  ## att_db.c:1164:5
 1e04ec2:    42 08             	r2 = r4			  ## att_db.c:1164:5
 1e04ec4:    86 00             	call r6			  ## att_db.c:1164:5
 1e04ec6:    0a 0a             	sp += 20
 1e04ec8:    58 01             	{pc, r8-r4} = [sp++]			  ## att_db.c:1165:1


att_handle_request:
 1e04eca:    7f 01             	[--sp] = {rets, r15-r4}			  ## att_db.c:1304:0
 1e04ecc:    78 0b             	sp += -272			  ## att_db.c:1304:0
 1e04ece:    16 08             	r6 = r1			  ## att_db.c:1304:0
 1e04ed0:    01 6c             	r1 = b[r6 + 0] (u)			  ## att_db.c:1304:0
 1e04ed2:    3d 08             	r13 = r3			  ## att_db.c:1304:0
 1e04ed4:    27 08             	r7 = r2			  ## att_db.c:1304:0
 1e04ed6:    0c 08             	r12 = r0			  ## att_db.c:1304:0
 1e04ed8:    10 fc fe ff       	r0 = r1 + -2			  ## att_db.c:1308:5
 1e04edc:    0e 70             	r14 = 0			  ## att_db.c:1308:5
 1e04ede:    ca ff d8 1c 00 00 	r10 = 7384 <att_global_info : 1cd8 >			  ## att_db.c:1308:5
 1e04ee4:    60 e1 32 80       	if (r0 > 22) goto 100 <.GJTIE652_0_0_+0x2E : 1e04f4c >			  ## att_db.c:1308:5
 1e04ee8:    0f f7 02 c0       	r15 = h[r12 + 2] (u)			  ## att_db.c:1306:53
 1e04eec:    41 c0             	r1 = r0 << 1			  ## att_db.c:1306:53
 1e04eee:    b1 00             	tbh [r1]			  ## att_db.c:1306:53


.GJTIL652_0_0_:
 1e04ef0:    17 00     < 23 : 0x17 >
 1e04ef2:    5e 00     < 94 : 0x5E >
 1e04ef4:    70 00     < 112 : 0x70 >
 1e04ef6:    bb 04     < 1211 : 0x4BB >
 1e04ef8:    c7 00     < 199 : 0xC7 >
 1e04efa:    bb 04     < 1211 : 0x4BB >
 1e04efc:    35 01     < 309 : 0x135 >
 1e04efe:    bb 04     < 1211 : 0x4BB >
 1e04f00:    ba 01     < 442 : 0x1BA >
 1e04f02:    bb 04     < 1211 : 0x4BB >
 1e04f04:    d2 01     < 466 : 0x1D2 >
 1e04f06:    bb 04     < 1211 : 0x4BB >
 1e04f08:    ef 01     < 495 : 0x1EF >
 1e04f0a:    bb 04     < 1211 : 0x4BB >
 1e04f0c:    31 02     < 561 : 0x231 >
 1e04f0e:    bb 04     < 1211 : 0x4BB >
 1e04f10:    61 02     < 609 : 0x261 >
 1e04f12:    bb 04     < 1211 : 0x4BB >
 1e04f14:    bb 04     < 1211 : 0x4BB >
 1e04f16:    bb 04     < 1211 : 0x4BB >
 1e04f18:    7f 02     < 639 : 0x27F >
 1e04f1a:    bb 04     < 1211 : 0x4BB >
 1e04f1c:    a9 02     < 681 : 0x2A9 >
 1e04f1e:    11 70             	r1 = 1			  ## att_db.c:431:30
 1e04f20:    60 08             	r0 = r6			  ## att_db.c:431:30
 1e04f22:    80 f3 29 0a       	call 5202 <little_endian_read_16 : 1e06378 >			  ## att_db.c:431:30
 1e04f26:    01 f7 04 c0       	r1 = h[r12 + 4] (u)			  ## att_db.c:434:41
 1e04f2a:    10 f2 01 30       	if (r0 < r1) goto 2 <.GJTIE652_0_0_+0x12 : 1e04f30 >			  ## att_db.c:434:41
 1e04f2e:    10 08             	r0 = r1			  ## att_db.c:436:5
 1e04f30:    10 f7 02 c0       	h[r12 + 2] = r0
 1e04f34:    3e 70             	r14 = 3
 1e04f36:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:440:24
 1e04f3a:    02 f7 02 c0       	r2 = h[r12 + 2] (u)			  ## att_db.c:441:5
 1e04f3e:    11 70             	r1 = 1			  ## att_db.c:441:5
 1e04f40:    d0 08             	r0 = r13			  ## att_db.c:441:5
 1e04f42:    80 f3 8c 0c       	call 6424 <little_endian_store_16 : 1e0685e >			  ## att_db.c:441:5
 1e04f46:    01 f7 02 c0       	r1 = h[r12 + 2] (u)			  ## att_db.c:442:5
 1e04f4a:    3c 18             	goto 120 <.GJTIE652_0_0_+0xA6 : 1e04fc4 >			  ## att_db.c:442:5
 1e04f4c:    21 e5 8b 14       	if (r1 != 82) goto 2326 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e04f50:    11 70             	r1 = 1			  ## att_db.c:1237:23
 1e04f52:    60 08             	r0 = r6			  ## att_db.c:1237:23
 1e04f54:    80 f3 10 0a       	call 5152 <little_endian_read_16 : 1e06378 >			  ## att_db.c:1237:23
 1e04f58:    04 08             	r4 = r0			  ## att_db.c:1237:23
 1e04f5a:    13 17             	call -474 <att_service_handler_for_handle : 1e04d82 >			  ## att_db.c:228:38
 1e04f5c:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e04f5e:    a1 fc 18 00       	r1 = r10 + 24			  ## att_db.c:229:9
 1e04f62:    01 20             	if (r0 == 0) goto 2 <.GJTIE652_0_0_+0x48 : 1e04f66 >			  ## att_db.c:229:9
 1e04f64:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e04f66:    08 f6 00 10       	r8 = [r1 + 0]
 1e04f6a:    08 e0 7c 04       	if (r8 == 0) goto 2296 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e04f6e:    80 af             	r0 = sp + 248
 1e04f70:    41 08             	r1 = r4			  ## att_db.c:1244:14
 1e04f72:    68 17             	call -304 <att_find_handle : 1e04e44 >			  ## att_db.c:1244:14
 1e04f74:    00 e0 77 04       	if (r0 == 0) goto 2286 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e04f78:    81 f5 fe 00       	r1 = h[sp+254] (u)			  ## att_db.c:1248:13
 1e04f7c:    00 fb 04 01       	r0 = 260 <DRIVER_RAM_TOTAL+0x12 : 104 >			  ## att_db.c:1248:9
 1e04f80:    50 b3             	r0 &= r1			  ## att_db.c:1248:9
 1e04f82:    01 ff 04 01 6f 04 	if (r0 != 260) goto 2270 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:1248:9
 1e04f88:    c0 08             	r0 = r12			  ## att_db.c:1254:9
 1e04f8a:    d8 16             	call -592 <att_validate_security : 1e04d3c >			  ## att_db.c:1254:9
 1e04f8c:    00 e0 6b 14       	if (r0 != 0) goto 2262 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:1254:9
 1e04f90:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1257:5
 1e04f94:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1257:115
 1e04f98:    61 04             	r1 = r1.l (u)			  ## att_db.c:1257:5
 1e04f9a:    19 02             	[sp+4] = r1			  ## att_db.c:1257:5
 1e04f9c:    31 9c             	r1 = r6 + 3			  ## att_db.c:1257:98
 1e04f9e:    02 70             	r2 = 0			  ## att_db.c:1257:5
 1e04fa0:    03 70             	r3 = 0			  ## att_db.c:1257:5
 1e04fa2:    09 02             	[sp] = r1			  ## att_db.c:1257:5
 1e04fa4:    41 08             	r1 = r4			  ## att_db.c:1257:5
 1e04fa6:    88 00             	call r8			  ## att_db.c:1257:5
 1e04fa8:    c0 f3 5d 04       	goto 2234 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:1257:5
 1e04fac:    11 70             	r1 = 1			  ## att_db.c:451:30
 1e04fae:    60 08             	r0 = r6			  ## att_db.c:451:30
 1e04fb0:    80 f3 e2 09       	call 5060 <little_endian_read_16 : 1e06378 >			  ## att_db.c:451:30
 1e04fb4:    02 f7 04 c0       	r2 = h[r12 + 4] (u)			  ## att_db.c:454:41
 1e04fb8:    01 08             	r1 = r0			  ## att_db.c:451:30
 1e04fba:    21 f2 01 30       	if (r1 < r2) goto 2 <.GJTIE652_0_0_+0xA2 : 1e04fc0 >			  ## att_db.c:451:30
 1e04fbe:    21 08             	r1 = r2			  ## att_db.c:456:5
 1e04fc0:    11 f7 02 c0       	h[r12 + 2] = r1
 1e04fc4:    00 f7 00 c0       	r0 = h[r12 + 0] (u)
 1e04fc8:    80 f3 a5 29       	call 21322 <gatt_client_sync_mtu : 1e0a316 >
 1e04fcc:    c0 f3 4b 04       	goto 2198 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e04fd0:    11 70             	r1 = 1			  ## att_db.c:544:100
 1e04fd2:    1e 70             	r14 = 1			  ## att_db.c:544:100
 1e04fd4:    60 08             	r0 = r6			  ## att_db.c:544:100
 1e04fd6:    80 f3 cf 09       	call 5022 <little_endian_read_16 : 1e06378 >			  ## att_db.c:544:100
 1e04fda:    05 08             	r5 = r0			  ## att_db.c:544:100
 1e04fdc:    31 70             	r1 = 3			  ## att_db.c:544:142
 1e04fde:    60 08             	r0 = r6			  ## att_db.c:544:142
 1e04fe0:    80 f3 ca 09       	call 5012 <little_endian_read_16 : 1e06378 >			  ## att_db.c:544:142
 1e04fe4:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:479:35
 1e04fe8:    61 04             	r1 = r1.l (u)			  ## att_db.c:479:35
 1e04fea:    06 08             	r6 = r0			  ## att_db.c:544:142
 1e04fec:    61 f2 42 22       	if (r1 >= r6) goto 1156 <.GJTIE652_0_0_+0x556 : 1e05474 >
 1e04ff0:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e04ff4:    58 02             	[sp+20] = r0			  ## att_db.c:114:17
 1e04ff6:    08 70             	r8 = 0			  ## att_db.c:114:17
 1e04ff8:    37 18             	goto 110 <.GJTIE652_0_0_+0x14A : 1e05068 >			  ## att_db.c:114:17
 1e04ffa:    40 a1             	r0 = sp + 20
 1e04ffc:    19 16             	call -974 <att_iterator_fetch_next : 1e04c30 >			  ## att_db.c:489:9
 1e04ffe:    82 f5 1c 00       	r2 = h[sp+28] (u)			  ## att_db.c:490:17
 1e05002:    20 fc ff ff       	r0 = r2 + -1			  ## att_db.c:490:13
 1e05006:    20 04             	r0 = r0.l (u)			  ## att_db.c:490:13
 1e05008:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE652_0_0_+0x14E : 1e0506c >			  ## att_db.c:490:13
 1e0500c:    52 f2 2c 30       	if (r2 < r5) goto 88 <.GJTIE652_0_0_+0x14A : 1e05068 >
 1e05010:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## att_db.c:502:38
 1e05014:    00 71             	r0 = 16			  ## att_db.c:502:34
 1e05016:    29 f3 01 10       	if ((r1 & 512) != 0) goto 2 <.GJTIE652_0_0_+0xFE : 1e0501c >			  ## att_db.c:502:34
 1e0501a:    20 70             	r0 = 2			  ## att_db.c:502:34
 1e0501c:    e6 fd 00 3e       	r3 = r14.l (u)			  ## att_db.c:505:13
 1e05020:    23 e0 05 30       	if (r3 < 2) goto 10 <.GJTIE652_0_0_+0x110 : 1e0502e >			  ## att_db.c:505:13
 1e05024:    e6 fd 00 48       	r4 = r8.l (u)
 1e05028:    27 04             	r7 = r0.l (u)
 1e0502a:    47 f2 1f 10       	if (r7 != r4) goto 62 <.GJTIE652_0_0_+0x14E : 1e0506c >
 1e0502e:    13 e0 09 10       	if (r3 != 1) goto 18 <.GJTIE652_0_0_+0x126 : 1e05044 >
 1e05032:    21 fd 02 1a       	r1 = r1 & 512			  ## att_db.c:502:44
 1e05036:    87 fd 48 11       	r1 = uextra(r1, p:9, l:7)			  ## att_db.c:515:39
 1e0503a:    11 80             	r1 += 1			  ## att_db.c:515:39
 1e0503c:    11 fa 00 d3       	b[r13+r3] = r1			  ## att_db.c:515:37
 1e05040:    2e 70             	r14 = 2			  ## att_db.c:515:37
 1e05042:    08 08             	r8 = r0			  ## att_db.c:515:37
 1e05044:    e6 fd 00 38       	r3 = r8.l (u)			  ## att_db.c:520:26
 1e05048:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:520:13
 1e0504c:    24 92             	r4 = r1 + 2			  ## att_db.c:520:20
 1e0504e:    c7 b8             	r7 = r4 + r3			  ## att_db.c:520:24
 1e05050:    f7 f2 7e 82       	if (r7 > r15) goto 1276 <.GJTIE652_0_0_+0x632 : 1e05550 >			  ## att_db.c:520:24
 1e05054:    d0 08             	r0 = r13			  ## att_db.c:525:9
 1e05056:    80 f3 02 0c       	call 6148 <little_endian_store_16 : 1e0685e >			  ## att_db.c:525:9
 1e0505a:    81 02             	r1 = [sp+32]			  ## att_db.c:528:45
 1e0505c:    20 05             	r0 = r4.l (u)			  ## att_db.c:528:34
 1e0505e:    d0 09             	r0 += r13			  ## att_db.c:528:32
 1e05060:    32 08             	r2 = r3			  ## att_db.c:528:9
 1e05062:    98 f3 3f 0f       	call 3153534 <memcpy : 106ee4 >			  ## att_db.c:528:9
 1e05066:    7e 08             	r14 = r7			  ## att_db.c:528:9
 1e05068:    50 02             	r0 = [sp+20]			  ## att_db.c:119:16
 1e0506a:    c7 31             	if (r0 != 0) goto -114 <.GJTIE652_0_0_+0xDC : 1e04ffa >			  ## att_db.c:119:16
 1e0506c:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:532:16
 1e05070:    10 e0 6e 12       	if (r0 != 1) goto 1244 <.GJTIE652_0_0_+0x632 : 1e05550 >			  ## att_db.c:532:16
 1e05074:    10 70             	r0 = 1
 1e05076:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e0507a:    40 70             	r0 = 4			  ## att_db.c:367:24
 1e0507c:    de 1b             	goto 1980 <.GJTIE652_0_0_+0x91C : 1e0583a >			  ## att_db.c:367:24
 1e0507e:    11 70             	r1 = 1			  ## att_db.c:629:102
 1e05080:    14 70             	r4 = 1			  ## att_db.c:629:102
 1e05082:    60 08             	r0 = r6			  ## att_db.c:629:102
 1e05084:    80 f3 78 09       	call 4848 <little_endian_read_16 : 1e06378 >			  ## att_db.c:629:102
 1e05088:    05 08             	r5 = r0			  ## att_db.c:629:102
 1e0508a:    31 70             	r1 = 3			  ## att_db.c:630:13
 1e0508c:    60 08             	r0 = r6			  ## att_db.c:630:13
 1e0508e:    80 f3 73 09       	call 4838 <little_endian_read_16 : 1e06378 >			  ## att_db.c:630:13
 1e05092:    08 08             	r8 = r0			  ## att_db.c:630:13
 1e05094:    51 70             	r1 = 5			  ## att_db.c:630:55
 1e05096:    5e 70             	r14 = 5			  ## att_db.c:630:55
 1e05098:    60 08             	r0 = r6			  ## att_db.c:630:55
 1e0509a:    80 f3 6d 09       	call 4826 <little_endian_read_16 : 1e06378 >			  ## att_db.c:630:55
 1e0509e:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:570:35
 1e050a2:    61 04             	r1 = r1.l (u)			  ## att_db.c:570:35
 1e050a4:    09 08             	r9 = r0			  ## att_db.c:630:55
 1e050a6:    81 f2 f2 21       	if (r1 >= r8) goto 996 <.GJTIE652_0_0_+0x570 : 1e0548e >
 1e050aa:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e050ae:    7a 9c             	r10 = r6 + 7			  ## att_db.c:630:113
 1e050b0:    71 fc f9 ff       	r1 = r7 + -7			  ## att_db.c:628:37
 1e050b4:    b8 02             	[sp+44] = r0			  ## att_db.c:114:17
 1e050b6:    6b 04             	r11 = r1.l (u)			  ## att_db.c:114:17
 1e050b8:    0c 70             	r12 = 0			  ## att_db.c:114:17
 1e050ba:    07 70             	r7 = 0
 1e050bc:    3a 18             	goto 116 <.GJTIE652_0_0_+0x214 : 1e05132 >
 1e050be:    c0 a2             	r0 = sp + 44
 1e050c0:    b7 15             	call -1170 <att_iterator_fetch_next : 1e04c30 >			  ## att_db.c:581:9
 1e050c2:    86 f5 34 00       	r6 = h[sp+52] (u)			  ## att_db.c:583:16
 1e050c6:    02 2c             	if (r6 == 0) goto 4 <.GJTIE652_0_0_+0x1AE : 1e050cc >
 1e050c8:    56 f2 33 30       	if (r6 < r5) goto 102 <.GJTIE652_0_0_+0x214 : 1e05132 >
 1e050cc:    86 f2 33 80       	if (r6 > r8) goto 102 <.GJTIE652_0_0_+0x218 : 1e05136 >
 1e050d0:    e6 fd 00 0c       	r0 = r12.l (u)			  ## att_db.c:591:22
 1e050d4:    15 20             	if (r0 == 0) goto 42 <.GJTIE652_0_0_+0x1E2 : 1e05100 >			  ## att_db.c:591:22
 1e050d6:    0a 2c             	if (r6 == 0) goto 20 <.GJTIE652_0_0_+0x1CE : 1e050ec >
 1e050d8:    c0 a2             	r0 = sp + 44
 1e050da:    01 fb 00 28       	r1 = 10240 <btctler_bss_start+0x20 : 2800 >			  ## att_db.c:592:32
 1e050de:    e8 15             	call -1072 <att_iterator_match_uuid16 : 1e04cb0 >			  ## att_db.c:592:32
 1e050e0:    05 30             	if (r0 != 0) goto 10 <.GJTIE652_0_0_+0x1CE : 1e050ec >
 1e050e2:    c0 a2             	r0 = sp + 44
 1e050e4:    01 fb 01 28       	r1 = 10241 <btctler_bss_start+0x21 : 2801 >			  ## att_db.c:592:93
 1e050e8:    e3 15             	call -1082 <att_iterator_match_uuid16 : 1e04cb0 >			  ## att_db.c:592:93
 1e050ea:    0d 20             	if (r0 == 0) goto 26 <.GJTIE652_0_0_+0x1E8 : 1e05106 >
 1e050ec:    21 05             	r1 = r4.l (u)			  ## att_db.c:595:13
 1e050ee:    d0 08             	r0 = r13			  ## att_db.c:595:13
 1e050f0:    72 08             	r2 = r7			  ## att_db.c:595:13
 1e050f2:    80 f3 b4 0b       	call 5992 <little_endian_store_16 : 1e0685e >			  ## att_db.c:595:13
 1e050f6:    24 80             	r4 += 2			  ## att_db.c:596:20
 1e050f8:    20 05             	r0 = r4.l (u)			  ## att_db.c:600:17
 1e050fa:    40 80             	r0 += 4			  ## att_db.c:600:24
 1e050fc:    f0 f2 1b 80       	if (r0 > r15) goto 54 <.GJTIE652_0_0_+0x218 : 1e05136 >			  ## att_db.c:600:24
 1e05100:    0c 70             	r12 = 0
 1e05102:    07 70             	r7 = 0
 1e05104:    16 2c             	if (r6 == 0) goto 44 <.GJTIE652_0_0_+0x214 : 1e05132 >
 1e05106:    c0 a2             	r0 = sp + 44
 1e05108:    91 08             	r1 = r9			  ## att_db.c:609:26
 1e0510a:    d2 15             	call -1116 <att_iterator_match_uuid16 : 1e04cb0 >			  ## att_db.c:609:26
 1e0510c:    67 08             	r7 = r6
 1e0510e:    11 20             	if (r0 == 0) goto 34 <.GJTIE652_0_0_+0x214 : 1e05132 >
 1e05110:    80 f5 3c 00       	r0 = h[sp+60] (u)			  ## att_db.c:609:96
 1e05114:    b0 f2 0d 10       	if (r0 != r11) goto 26 <.GJTIE652_0_0_+0x214 : 1e05132 >			  ## att_db.c:609:96
 1e05118:    01 03             	r1 = [sp+64]			  ## att_db.c:609:136
 1e0511a:    a0 08             	r0 = r10			  ## att_db.c:609:109
 1e0511c:    b2 08             	r2 = r11			  ## att_db.c:609:109
 1e0511e:    98 f3 e5 0e       	call 3153354 <memcmp : 106eec >			  ## att_db.c:609:109
 1e05122:    07 30             	if (r0 != 0) goto 14 <.GJTIE652_0_0_+0x214 : 1e05132 >			  ## att_db.c:609:109
 1e05124:    21 05             	r1 = r4.l (u)			  ## att_db.c:611:13
 1e05126:    d0 08             	r0 = r13			  ## att_db.c:611:13
 1e05128:    62 08             	r2 = r6			  ## att_db.c:611:13
 1e0512a:    80 f3 98 0b       	call 5936 <little_endian_store_16 : 1e0685e >			  ## att_db.c:611:13
 1e0512e:    24 80             	r4 += 2			  ## att_db.c:612:20
 1e05130:    1c 70             	r12 = 1
 1e05132:    b0 02             	r0 = [sp+44]			  ## att_db.c:119:16
 1e05134:    c4 31             	if (r0 != 0) goto -120 <.GJTIE652_0_0_+0x1A0 : 1e050be >			  ## att_db.c:119:16
 1e05136:    20 05             	r0 = r4.l (u)			  ## att_db.c:617:16
 1e05138:    10 e0 0c 12       	if (r0 != 1) goto 1048 <.GJTIE652_0_0_+0x636 : 1e05554 >			  ## att_db.c:617:9
 1e0513c:    10 70             	r0 = 1
 1e0513e:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05142:    60 70             	r0 = 6			  ## att_db.c:368:24
 1e05144:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e05148:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e0514a:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e0514c:    52 08             	r2 = r5			  ## att_db.c:369:5
 1e0514e:    80 f3 86 0b       	call 5900 <little_endian_store_16 : 1e0685e >			  ## att_db.c:369:5
 1e05152:    a0 70             	r0 = 10			  ## att_db.c:370:24
 1e05154:    10 f9 04 d0       	b[r13 + 4] = r0			  ## att_db.c:370:24
 1e05158:    86 1b             	goto 1804 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:370:24
 1e0515a:    22 70             	r2 = 2			  ## att_db.c:750:5
 1e0515c:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE652_0_0_+0x244 : 1e05162 >			  ## att_db.c:750:5
 1e05160:    02 71             	r2 = 16			  ## att_db.c:750:5
 1e05162:    11 70             	r1 = 1			  ## att_db.c:753:96
 1e05164:    13 70             	r3 = 1			  ## att_db.c:753:96
 1e05166:    60 08             	r0 = r6			  ## att_db.c:753:96
 1e05168:    80 f3 06 09       	call 4620 <little_endian_read_16 : 1e06378 >			  ## att_db.c:753:96
 1e0516c:    07 08             	r7 = r0			  ## att_db.c:753:96
 1e0516e:    31 70             	r1 = 3			  ## att_db.c:753:138
 1e05170:    60 08             	r0 = r6			  ## att_db.c:753:138
 1e05172:    80 f3 01 09       	call 4610 <little_endian_read_16 : 1e06378 >			  ## att_db.c:753:138
 1e05176:    71 fc ff ff       	r1 = r7 + -1			  ## att_db.c:645:35
 1e0517a:    61 04             	r1 = r1.l (u)			  ## att_db.c:645:35
 1e0517c:    08 08             	r8 = r0			  ## att_db.c:753:138
 1e0517e:    01 f2 90 21       	if (r1 >= r0) goto 800 <.GJTIE652_0_0_+0x584 : 1e054a2 >			  ## att_db.c:753:138
 1e05182:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e05186:    18 03             	[sp+68] = r0			  ## att_db.c:114:17
 1e05188:    00 e0 4c 02       	if (r0 == 0) goto 1176 <.GJTIE652_0_0_+0x706 : 1e05624 >
 1e0518c:    59 9c             	r9 = r6 + 5			  ## att_db.c:753:201
 1e0518e:    f0 fc fe ff       	r0 = r15 + -2			  ## att_db.c:753:201
 1e05192:    48 02             	[sp+16] = r0			  ## att_db.c:753:201
 1e05194:    f0 fc fc ff       	r0 = r15 + -4			  ## att_db.c:753:201
 1e05198:    38 02             	[sp+12] = r0			  ## att_db.c:753:201
 1e0519a:    1e 70             	r14 = 1			  ## att_db.c:753:201
 1e0519c:    0b 70             	r11 = 0			  ## att_db.c:753:201
 1e0519e:    a6 04             	r6 = r2.l (u)			  ## att_db.c:753:201
 1e051a0:    05 70             	r5 = 0
 1e051a2:    b4 08             	r4 = r11
 1e051a4:    4b 08             	r11 = r4
 1e051a6:    40 a4             	r0 = sp + 68
 1e051a8:    43 15             	call -1402 <att_iterator_fetch_next : 1e04c30 >			  ## att_db.c:658:9
 1e051aa:    84 f5 4c 00       	r4 = h[sp+76] (u)			  ## att_db.c:660:17
 1e051ae:    0a 70             	r10 = 0			  ## att_db.c:660:17
 1e051b0:    04 e0 52 03       	if (r4 == 0) goto 1700 <.GJTIE652_0_0_+0x93A : 1e05858 >			  ## att_db.c:660:17
 1e051b4:    74 f2 07 30       	if (r4 < r7) goto 14 <.GJTIE652_0_0_+0x2A8 : 1e051c6 >
 1e051b8:    84 f2 4e 83       	if (r4 > r8) goto 1692 <.GJTIE652_0_0_+0x93A : 1e05858 >
 1e051bc:    40 a4             	r0 = sp + 68
 1e051be:    91 08             	r1 = r9			  ## att_db.c:671:14
 1e051c0:    62 08             	r2 = r6			  ## att_db.c:671:14
 1e051c2:    8e 15             	call -1252 <att_iterator_match_uuid : 1e04ce0 >			  ## att_db.c:671:14
 1e051c4:    03 30             	if (r0 != 0) goto 6 <.GJTIE652_0_0_+0x2AE : 1e051cc >
 1e051c6:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e051c8:    ee 31             	if (r0 != 0) goto -36 <.GJTIE652_0_0_+0x288 : 1e051a6 >			  ## att_db.c:119:16
 1e051ca:    46 1b             	goto 1676 <.GJTIE652_0_0_+0x93A : 1e05858 >			  ## att_db.c:119:16
 1e051cc:    81 f5 4a 00       	r1 = h[sp+74] (u)			  ## att_db.c:676:17
 1e051d0:    21 f3 09 10       	if ((r1 & 2) != 0) goto 18 <.GJTIE652_0_0_+0x2C8 : 1e051e6 >			  ## att_db.c:676:13
 1e051d4:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## att_db.c:677:17
 1e051da:    0b f0 01 00       	if ((r11 & r0) == 0) goto 2 <.GJTIE652_0_0_+0x2C2 : 1e051e0 >			  ## att_db.c:677:17
 1e051de:    b4 08             	r4 = r11			  ## att_db.c:677:17
 1e051e0:    10 03             	r0 = [sp+68]			  ## att_db.c:119:16
 1e051e2:    e0 31             	if (r0 != 0) goto -64 <.GJTIE652_0_0_+0x286 : 1e051a4 >			  ## att_db.c:119:16
 1e051e4:    38 1b             	goto 1648 <.GJTIE652_0_0_+0x938 : 1e05856 >			  ## att_db.c:119:16
 1e051e6:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE652_0_0_+0x2D4 : 1e051f2 >
 1e051ea:    c0 08             	r0 = r12			  ## att_db.c:685:26
 1e051ec:    a7 15             	call -1202 <att_validate_security : 1e04d3c >			  ## att_db.c:685:26
 1e051ee:    00 e0 5c 13       	if (r0 != 0) goto 1720 <.GJTIE652_0_0_+0x98C : 1e058aa >			  ## att_db.c:685:26
 1e051f2:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:691:9
 1e051f6:    40 a4             	r0 = sp + 68			  ## att_db.c:691:9
 1e051f8:    de 15             	call -1092 <att_update_value_len : 1e04db6 >			  ## att_db.c:691:9
 1e051fa:    83 f5 54 00       	r3 = h[sp+84] (u)			  ## att_db.c:694:41
 1e051fe:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:695:13
 1e05202:    20 96             	r0 = r3 + 2			  ## att_db.c:694:36
 1e05204:    21 e0 04 30       	if (r1 < 2) goto 8 <.GJTIE652_0_0_+0x2F2 : 1e05210 >			  ## att_db.c:694:36
 1e05208:    22 04             	r2 = r0.l (u)
 1e0520a:    64 05             	r4 = r5.l (u)
 1e0520c:    24 f2 24 13       	if (r4 != r2) goto 1608 <.GJTIE652_0_0_+0x93A : 1e05858 >
 1e05210:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE652_0_0_+0x2FE : 1e0521c >
 1e05214:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:704:37
 1e05218:    2e 70             	r14 = 2			  ## att_db.c:704:37
 1e0521a:    05 08             	r5 = r0			  ## att_db.c:704:37
 1e0521c:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:709:13
 1e05220:    60 05             	r0 = r5.l (u)			  ## att_db.c:709:22
 1e05222:    10 09             	r0 += r1			  ## att_db.c:709:20
 1e05224:    f0 f2 09 90       	if (r0 <= r15) goto 18 <.GJTIE652_0_0_+0x31C : 1e0523a >			  ## att_db.c:709:20
 1e05228:    21 e0 1a 83       	if (r1 > 2) goto 1588 <.GJTIE652_0_0_+0x942 : 1e05860 >
 1e0522c:    32 02             	r2 = [sp+12]
 1e0522e:    92 f5 54 00       	h[sp+84] = r2			  ## att_db.c:713:26
 1e05232:    40 02             	r0 = [sp+16]			  ## att_db.c:714:32
 1e05234:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:714:32
 1e05238:    23 08             	r3 = r2			  ## att_db.c:720:85
 1e0523a:    82 f5 4c 00       	r2 = h[sp+76] (u)			  ## att_db.c:718:9
 1e0523e:    d0 08             	r0 = r13			  ## att_db.c:718:9
 1e05240:    80 f3 0d 0b       	call 5658 <little_endian_store_16 : 1e0685e >			  ## att_db.c:718:9
 1e05244:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:720:33
 1e05248:    08 02             	[sp] = r0			  ## att_db.c:720:33
 1e0524a:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:719:16
 1e0524e:    24 04             	r4 = r0.l (u)			  ## att_db.c:720:74
 1e05250:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:720:72
 1e05254:    e3 04             	r3 = r3.l (u)			  ## att_db.c:720:33
 1e05256:    40 a4             	r0 = sp + 68			  ## att_db.c:720:33
 1e05258:    01 70             	r1 = 0			  ## att_db.c:720:33
 1e0525a:    c8 15             	call -1136 <att_copy_value : 1e04dec >			  ## att_db.c:720:33
 1e0525c:    11 03             	r1 = [sp+68]			  ## att_db.c:119:16
 1e0525e:    0e b1             	r14 = r0 + r4			  ## att_db.c:721:16
 1e05260:    a0 33             	if (r1 != 0) goto -192 <.GJTIE652_0_0_+0x284 : 1e051a2 >			  ## att_db.c:721:16
 1e05262:    fa 1a             	goto 1524 <.GJTIE652_0_0_+0x93A : 1e05858 >			  ## att_db.c:721:16
 1e05264:    11 70             	r1 = 1			  ## att_db.c:804:88
 1e05266:    17 70             	r7 = 1			  ## att_db.c:804:88
 1e05268:    60 08             	r0 = r6			  ## att_db.c:804:88
 1e0526a:    80 f3 85 08       	call 4362 <little_endian_read_16 : 1e06378 >			  ## att_db.c:804:88
 1e0526e:    04 08             	r4 = r0			  ## att_db.c:804:88
 1e05270:    c0 a5             	r0 = sp + 92
 1e05272:    41 08             	r1 = r4			  ## att_db.c:766:14
 1e05274:    e7 15             	call -1074 <att_find_handle : 1e04e44 >			  ## att_db.c:766:14
 1e05276:    00 e0 23 01       	if (r0 == 0) goto 582 <.GJTIE652_0_0_+0x5A2 : 1e054c0 >
 1e0527a:    81 f5 62 00       	r1 = h[sp+98] (u)			  ## att_db.c:772:13
 1e0527e:    21 f3 47 11       	if ((r1 & 2) != 0) goto 654 <.GJTIE652_0_0_+0x5F2 : 1e05510 >			  ## att_db.c:772:9
 1e05282:    10 70             	r0 = 1
 1e05284:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05288:    a0 70             	r0 = 10			  ## att_db.c:368:24
 1e0528a:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e0528e:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e05290:    23 70             	r3 = 2			  ## att_db.c:369:5
 1e05292:    e8 19             	goto 976 <.GJTIE652_0_0_+0x746 : 1e05664 >			  ## att_db.c:369:5
 1e05294:    11 70             	r1 = 1			  ## att_db.c:858:93
 1e05296:    14 70             	r4 = 1			  ## att_db.c:858:93
 1e05298:    60 08             	r0 = r6			  ## att_db.c:858:93
 1e0529a:    80 f3 6d 08       	call 4314 <little_endian_read_16 : 1e06378 >			  ## att_db.c:858:93
 1e0529e:    07 08             	r7 = r0			  ## att_db.c:858:93
 1e052a0:    31 70             	r1 = 3			  ## att_db.c:858:135
 1e052a2:    60 08             	r0 = r6			  ## att_db.c:858:135
 1e052a4:    80 f3 68 08       	call 4304 <little_endian_read_16 : 1e06378 >			  ## att_db.c:858:135
 1e052a8:    06 08             	r6 = r0			  ## att_db.c:858:135
 1e052aa:    40 a7             	r0 = sp + 116
 1e052ac:    71 08             	r1 = r7			  ## att_db.c:816:14
 1e052ae:    ca 15             	call -1132 <att_find_handle : 1e04e44 >			  ## att_db.c:816:14
 1e052b0:    00 e0 13 01       	if (r0 == 0) goto 550 <.GJTIE652_0_0_+0x5BC : 1e054da >
 1e052b4:    81 f5 7a 00       	r1 = h[sp+122] (u)			  ## att_db.c:822:13
 1e052b8:    21 f3 35 11       	if ((r1 & 2) != 0) goto 618 <.GJTIE652_0_0_+0x608 : 1e05526 >			  ## att_db.c:822:9
 1e052bc:    10 70             	r0 = 1
 1e052be:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e052c2:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e052c4:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e052c8:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e052ca:    23 70             	r3 = 2			  ## att_db.c:369:5
 1e052cc:    f0 18             	goto 480 <.GJTIE652_0_0_+0x590 : 1e054ae >			  ## att_db.c:369:5
 1e052ce:    c0 ff ff ff 01 00 	r0 = 131071 <text_size+0x7E1F : 1ffff >			  ## att_db.c:928:36
 1e052d4:    70 09             	r0 += r7			  ## att_db.c:928:36
 1e052d6:    40 d0             	r0 = r0 >> 1			  ## att_db.c:928:41
 1e052d8:    28 04             	r8 = r0.l (u)			  ## att_db.c:929:97
 1e052da:    08 e0 07 01       	if (r8 == 0) goto 526 <.GJTIE652_0_0_+0x5CE : 1e054ec >
 1e052de:    1a 9c             	r10 = r6 + 1			  ## att_db.c:929:111
 1e052e0:    f9 fc ff ff       	r9 = r15 + -1
 1e052e4:    1e 70             	r14 = 1
 1e052e6:    07 70             	r7 = 0
 1e052e8:    06 70             	r6 = 0
 1e052ea:    a0 08             	r0 = r10			  ## att_db.c:880:18
 1e052ec:    71 08             	r1 = r7			  ## att_db.c:880:18
 1e052ee:    80 f3 43 08       	call 4230 <little_endian_read_16 : 1e06378 >			  ## att_db.c:880:18
 1e052f2:    04 08             	r4 = r0			  ## att_db.c:880:18
 1e052f4:    04 e0 a0 01       	if (r4 == 0) goto 832 <.GJTIE652_0_0_+0x71A : 1e05638 >			  ## att_db.c:880:18
 1e052f8:    c0 a8             	r0 = sp + 140
 1e052fa:    41 08             	r1 = r4			  ## att_db.c:888:18
 1e052fc:    a3 15             	call -1210 <att_find_handle : 1e04e44 >			  ## att_db.c:888:18
 1e052fe:    00 e0 a5 01       	if (r0 == 0) goto 842 <.GJTIE652_0_0_+0x72E : 1e0564c >
 1e05302:    81 f5 92 00       	r1 = h[sp+146] (u)			  ## att_db.c:894:17
 1e05306:    01 f3 a5 11       	if ((r1 & 2) == 0) goto 842 <.GJTIE652_0_0_+0x736 : 1e05654 >			  ## att_db.c:894:17
 1e0530a:    20 f3 05 10       	if ((r1 & 1) != 0) goto 10 <.GJTIE652_0_0_+0x3FA : 1e05318 >
 1e0530e:    c0 08             	r0 = r12			  ## att_db.c:901:26
 1e05310:    15 15             	call -1494 <att_validate_security : 1e04d3c >			  ## att_db.c:901:26
 1e05312:    03 08             	r3 = r0			  ## att_db.c:901:26
 1e05314:    03 e0 9f 11       	if (r3 != 0) goto 830 <.GJTIE652_0_0_+0x738 : 1e05656 >			  ## att_db.c:901:26
 1e05318:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:906:9
 1e0531c:    c0 a8             	r0 = sp + 140			  ## att_db.c:906:9
 1e0531e:    4b 15             	call -1386 <att_update_value_len : 1e04db6 >			  ## att_db.c:906:9
 1e05320:    80 f5 9c 00       	r0 = h[sp+156] (u)			  ## att_db.c:909:25
 1e05324:    e6 fd 00 4e       	r4 = r14.l (u)			  ## att_db.c:909:13
 1e05328:    01 b1             	r1 = r0 + r4			  ## att_db.c:909:20
 1e0532a:    f1 f2 03 90       	if (r1 <= r15) goto 6 <.GJTIE652_0_0_+0x416 : 1e05334 >			  ## att_db.c:909:20
 1e0532e:    99 f5 9c 00       	h[sp+156] = r9			  ## att_db.c:910:26
 1e05332:    90 08             	r0 = r9			  ## att_db.c:914:85
 1e05334:    05 f7 00 c0       	r5 = h[r12 + 0] (u)			  ## att_db.c:914:33
 1e05338:    80 fb 40 2d       	r2 = r13 + r4			  ## att_db.c:914:72
 1e0533c:    23 04             	r3 = r0.l (u)			  ## att_db.c:914:33
 1e0533e:    c0 a8             	r0 = sp + 140			  ## att_db.c:914:33
 1e05340:    01 70             	r1 = 0			  ## att_db.c:914:33
 1e05342:    0d 02             	[sp] = r5			  ## att_db.c:914:33
 1e05344:    53 15             	call -1370 <att_copy_value : 1e04dec >			  ## att_db.c:914:33
 1e05346:    0e b1             	r14 = r0 + r4			  ## att_db.c:915:16
 1e05348:    16 80             	r6 += 1			  ## att_db.c:879:35
 1e0534a:    27 80             	r7 += 2			  ## att_db.c:879:19
 1e0534c:    86 f2 cd bf       	ifs (r6 < r8) goto -102 <.GJTIE652_0_0_+0x3CC : 1e052ea >			  ## att_db.c:879:19
 1e05350:    ce 18             	goto 412 <.GJTIE652_0_0_+0x5D0 : 1e054ee >			  ## att_db.c:879:19
 1e05352:    24 70             	r4 = 2			  ## att_db.c:1052:5
 1e05354:    87 e0 01 30       	if (r7 < 8) goto 2 <.GJTIE652_0_0_+0x43C : 1e0535a >			  ## att_db.c:1052:5
 1e05358:    04 71             	r4 = 16			  ## att_db.c:1052:5
 1e0535a:    11 70             	r1 = 1			  ## att_db.c:1055:102
 1e0535c:    13 70             	r3 = 1			  ## att_db.c:1055:102
 1e0535e:    60 08             	r0 = r6			  ## att_db.c:1055:102
 1e05360:    80 f3 0a 08       	call 4116 <little_endian_read_16 : 1e06378 >			  ## att_db.c:1055:102
 1e05364:    05 08             	r5 = r0			  ## att_db.c:1055:102
 1e05366:    31 70             	r1 = 3			  ## att_db.c:1055:144
 1e05368:    60 08             	r0 = r6			  ## att_db.c:1055:144
 1e0536a:    80 f3 05 08       	call 4106 <little_endian_read_16 : 1e06378 >			  ## att_db.c:1055:144
 1e0536e:    51 fc ff ff       	r1 = r5 + -1			  ## att_db.c:959:35
 1e05372:    61 04             	r1 = r1.l (u)			  ## att_db.c:959:35
 1e05374:    08 08             	r8 = r0			  ## att_db.c:1055:144
 1e05376:    01 f2 9d 20       	if (r1 >= r0) goto 314 <.GJTIE652_0_0_+0x596 : 1e054b4 >
 1e0537a:    56 80             	r6 += 5			  ## att_db.c:1055:207
 1e0537c:    01 70             	r1 = 0
 1e0537e:    87 e0 04 30       	if (r7 < 8) goto 8 <.GJTIE652_0_0_+0x46C : 1e0538a >
 1e05382:    60 08             	r0 = r6			  ## att_db.c:94:10
 1e05384:    82 14             	call -1788 <is_Bluetooth_Base_UUID : 1e04c8a >			  ## att_db.c:94:10
 1e05386:    c1 70             	r1 = 12			  ## att_db.c:94:10
 1e05388:    d9 20             	if (r0 == 0) goto 434 <.GJTIE652_0_0_+0x61E : 1e0553c >			  ## att_db.c:94:10
 1e0538a:    60 08             	r0 = r6			  ## att_db.c:97:12
 1e0538c:    80 f3 f4 07       	call 4072 <little_endian_read_16 : 1e06378 >			  ## att_db.c:97:12
 1e05390:    70 b0             	r0 &= 4294967294			  ## att_db.c:965:45
 1e05392:    21 ff 28 0a d2 00 	if (r0 != 10240) goto 420 <.GJTIE652_0_0_+0x61E : 1e0553c >			  ## att_db.c:965:45
 1e05398:    00 f6 0c a0       	r0 = [r10 + 12]			  ## att_db.c:114:27
 1e0539c:    10 f5 a4 00       	[sp+164] = r0			  ## att_db.c:114:17
 1e053a0:    02 70             	r2 = 0			  ## att_db.c:114:17
 1e053a2:    1e 70             	r14 = 1
 1e053a4:    20 05             	r0 = r4.l (u)
 1e053a6:    38 02             	[sp+12] = r0
 1e053a8:    04 70             	r4 = 0
 1e053aa:    0c 70             	r12 = 0
 1e053ac:    00 70             	r0 = 0
 1e053ae:    48 02             	[sp+16] = r0
 1e053b0:    ea 19             	goto 980 <.GJTIE652_0_0_+0x868 : 1e05786 >
 1e053b2:    11 70             	r1 = 1			  ## att_db.c:1068:23
 1e053b4:    14 70             	r4 = 1			  ## att_db.c:1068:23
 1e053b6:    60 08             	r0 = r6			  ## att_db.c:1068:23
 1e053b8:    80 f3 de 07       	call 4028 <little_endian_read_16 : 1e06378 >			  ## att_db.c:1068:23
 1e053bc:    08 08             	r8 = r0			  ## att_db.c:1068:23
 1e053be:    c0 ab             	r0 = sp + 188			  ## att_db.c:1068:23
 1e053c0:    81 08             	r1 = r8			  ## att_db.c:1070:14
 1e053c2:    40 15             	call -1408 <att_find_handle : 1e04e44 >			  ## att_db.c:1070:14
 1e053c4:    96 20             	if (r0 == 0) goto 300 <.GJTIE652_0_0_+0x5D4 : 1e054f2 >
 1e053c6:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e053c8:    dc 14             	call -1608 <att_service_handler_for_handle : 1e04d82 >			  ## att_db.c:228:38
 1e053ca:    a1 fc 18 00       	r1 = r10 + 24			  ## att_db.c:229:9
 1e053ce:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e053d0:    01 20             	if (r0 == 0) goto 2 <.GJTIE652_0_0_+0x4B6 : 1e053d4 >			  ## att_db.c:230:25
 1e053d2:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e053d4:    04 42             	r4 = [r1 + 0]
 1e053d6:    06 28             	if (r4 == 0) goto 12 <.GJTIE652_0_0_+0x4C6 : 1e053e4 >
 1e053d8:    81 f5 c2 00       	r1 = h[sp+194] (u)			  ## att_db.c:1078:13
 1e053dc:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE652_0_0_+0x4C6 : 1e053e4 >			  ## att_db.c:1078:13
 1e053e0:    28 f3 5d 11       	if ((r1 & 256) != 0) goto 698 <.GJTIE652_0_0_+0x780 : 1e0569e >
 1e053e4:    10 70             	r0 = 1
 1e053e6:    10 f9 00 d0       	b[r13 + 0] = r0
 1e053ea:    20 71             	r0 = 18
 1e053ec:    21 18             	goto 66 <.GJTIE652_0_0_+0x512 : 1e05430 >
 1e053ee:    11 70             	r1 = 1			  ## att_db.c:1107:23
 1e053f0:    60 08             	r0 = r6			  ## att_db.c:1107:23
 1e053f2:    80 f3 c1 07       	call 3970 <little_endian_read_16 : 1e06378 >			  ## att_db.c:1107:23
 1e053f6:    08 08             	r8 = r0			  ## att_db.c:1107:23
 1e053f8:    31 70             	r1 = 3			  ## att_db.c:1108:23
 1e053fa:    60 08             	r0 = r6			  ## att_db.c:1108:23
 1e053fc:    80 f3 bc 07       	call 3960 <little_endian_read_16 : 1e06378 >			  ## att_db.c:1108:23
 1e05400:    09 08             	r9 = r0			  ## att_db.c:1108:23
 1e05402:    80 08             	r0 = r8			  ## att_db.c:228:38
 1e05404:    be 14             	call -1668 <att_service_handler_for_handle : 1e04d82 >			  ## att_db.c:228:38
 1e05406:    c2 90             	r2 = r0 + 12			  ## att_db.c:230:25
 1e05408:    a1 fc 18 00       	r1 = r10 + 24			  ## att_db.c:229:9
 1e0540c:    01 20             	if (r0 == 0) goto 2 <.GJTIE652_0_0_+0x4F2 : 1e05410 >			  ## att_db.c:229:9
 1e0540e:    21 08             	r1 = r2			  ## att_db.c:229:9
 1e05410:    04 42             	r4 = [r1 + 0]
 1e05412:    0a 28             	if (r4 == 0) goto 20 <.GJTIE652_0_0_+0x50A : 1e05428 >
 1e05414:    40 ad             	r0 = sp + 212
 1e05416:    81 08             	r1 = r8			  ## att_db.c:1114:14
 1e05418:    15 15             	call -1494 <att_find_handle : 1e04e44 >			  ## att_db.c:1114:14
 1e0541a:    a1 20             	if (r0 == 0) goto 322 <.GJTIE652_0_0_+0x640 : 1e0555e >
 1e0541c:    81 f5 da 00       	r1 = h[sp+218] (u)			  ## att_db.c:1118:13
 1e05420:    03 f3 02 10       	if ((r1 & 8) == 0) goto 4 <.GJTIE652_0_0_+0x50A : 1e05428 >			  ## att_db.c:1118:13
 1e05424:    28 f3 55 11       	if ((r1 & 256) != 0) goto 682 <.GJTIE652_0_0_+0x7B4 : 1e056d2 >
 1e05428:    10 70             	r0 = 1
 1e0542a:    10 f9 00 d0       	b[r13 + 0] = r0
 1e0542e:    60 71             	r0 = 22
 1e05430:    10 f9 01 d0       	b[r13 + 1] = r0
 1e05434:    21 70             	r1 = 2
 1e05436:    d0 08             	r0 = r13
 1e05438:    82 08             	r2 = r8
 1e0543a:    80 f3 10 0a       	call 5152 <little_endian_store_16 : 1e0685e >
 1e0543e:    30 70             	r0 = 3
 1e05440:    04 1a             	goto 1032 <.GJTIE652_0_0_+0x92C : 1e0584a >
 1e05442:    10 6c             	r0 = b[r6 + 1] (u)			  ## att_db.c:1206:9
 1e05444:    63 20             	if (r0 == 0) goto 198 <.GJTIE652_0_0_+0x5EE : 1e0550c >			  ## att_db.c:1206:9
 1e05446:    00 f9 1c a0       	r0 = b[r10 + 28] (u)			  ## att_db.c:1208:21
 1e0544a:    8d 20             	if (r0 == 0) goto 282 <.GJTIE652_0_0_+0x648 : 1e05566 >			  ## att_db.c:1208:21
 1e0544c:    31 70             	r1 = 3			  ## att_db.c:1193:5
 1e0544e:    c0 08             	r0 = r12			  ## att_db.c:1193:5
 1e05450:    0f 15             	call -1506 <att_notify_write_callbacks : 1e04e70 >			  ## att_db.c:1193:5
 1e05452:    03 f9 1c a0       	r3 = b[r10 + 28] (u)			  ## att_db.c:1214:43
 1e05456:    02 f7 1e a0       	r2 = h[r10 + 30] (u)			  ## att_db.c:369:5
 1e0545a:    00 70             	r0 = 0			  ## att_db.c:369:5
 1e0545c:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:345:42
 1e05460:    10 f7 1e a0       	h[r10 + 30] = r0			  ## att_db.c:346:44
 1e05464:    10 70             	r0 = 1			  ## att_db.c:346:44
 1e05466:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e0546a:    80 71             	r0 = 24			  ## att_db.c:368:24
 1e0546c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e05470:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e05472:    ea 18             	goto 468 <.GJTIE652_0_0_+0x72A : 1e05648 >			  ## att_db.c:369:5
 1e05474:    1e f9 00 30       	b[r3 + 0] = r14			  ## att_db.c:367:24
 1e05478:    40 70             	r0 = 4			  ## att_db.c:367:24
 1e0547a:    18 66             	b[r3 + 1] = r0			  ## att_db.c:368:24
 1e0547c:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e0547e:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e05480:    52 08             	r2 = r5			  ## att_db.c:369:5
 1e05482:    80 f3 ec 09       	call 5080 <little_endian_store_16 : 1e0685e >			  ## att_db.c:369:5
 1e05486:    1e f9 04 00       	b[r0 + 4] = r14			  ## att_db.c:370:24
 1e0548a:    5e 70             	r14 = 5			  ## att_db.c:370:24
 1e0548c:    ec 19             	goto 984 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:370:24
 1e0548e:    0c 66             	b[r3 + 0] = r4			  ## att_db.c:367:24
 1e05490:    60 70             	r0 = 6			  ## att_db.c:368:24
 1e05492:    18 66             	b[r3 + 1] = r0			  ## att_db.c:368:24
 1e05494:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e05496:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e05498:    52 08             	r2 = r5			  ## att_db.c:369:5
 1e0549a:    80 f3 e0 09       	call 5056 <little_endian_store_16 : 1e0685e >			  ## att_db.c:369:5
 1e0549e:    4c 60             	b[r0 + 4] = r4			  ## att_db.c:370:24
 1e054a0:    e2 19             	goto 964 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:370:24
 1e054a2:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e054a6:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e054a8:    10 f9 01 d0       	b[r13 + 1] = r0
 1e054ac:    21 70             	r1 = 2
 1e054ae:    d0 08             	r0 = r13
 1e054b0:    72 08             	r2 = r7
 1e054b2:    1d 19             	goto 570 <.GJTIE652_0_0_+0x7D0 : 1e056ee >
 1e054b4:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e054b8:    00 71             	r0 = 16			  ## att_db.c:368:24
 1e054ba:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e054be:    44 18             	goto 136 <.GJTIE652_0_0_+0x62A : 1e05548 >			  ## att_db.c:368:24
 1e054c0:    17 f9 00 d0       	b[r13 + 0] = r7			  ## att_db.c:367:24
 1e054c4:    a0 70             	r0 = 10			  ## att_db.c:368:24
 1e054c6:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e054ca:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e054cc:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e054ce:    42 08             	r2 = r4			  ## att_db.c:369:5
 1e054d0:    80 f3 c5 09       	call 5002 <little_endian_store_16 : 1e0685e >			  ## att_db.c:369:5
 1e054d4:    4f 60             	b[r0 + 4] = r7			  ## att_db.c:370:24
 1e054d6:    5e 70             	r14 = 5			  ## att_db.c:370:24
 1e054d8:    c6 19             	goto 908 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:370:24
 1e054da:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:367:24
 1e054de:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e054e0:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e054e4:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e054e6:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e054e8:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e054ea:    0b 18             	goto 22 <.GJTIE652_0_0_+0x5E4 : 1e05502 >			  ## att_db.c:369:5
 1e054ec:    1e 70             	r14 = 1
 1e054ee:    f0 70             	r0 = 15			  ## att_db.c:922:24
 1e054f0:    b8 19             	goto 880 <.GJTIE652_0_0_+0x944 : 1e05862 >			  ## att_db.c:922:24
 1e054f2:    14 f9 00 d0       	b[r13 + 0] = r4			  ## att_db.c:367:24
 1e054f6:    20 71             	r0 = 18			  ## att_db.c:368:24
 1e054f8:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e054fc:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e054fe:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e05500:    82 08             	r2 = r8			  ## att_db.c:369:5
 1e05502:    80 f3 ac 09       	call 4952 <little_endian_store_16 : 1e0685e >
 1e05506:    4c 60             	b[r0 + 4] = r4
 1e05508:    5e 70             	r14 = 5
 1e0550a:    ad 19             	goto 858 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e0550c:    31 70             	r1 = 3			  ## att_db.c:1193:5
 1e0550e:    f8 18             	goto 496 <.GJTIE652_0_0_+0x7E2 : 1e05700 >			  ## att_db.c:1193:5
 1e05510:    20 f3 58 10       	if ((r1 & 1) != 0) goto 176 <.GJTIE652_0_0_+0x6A6 : 1e055c4 >
 1e05514:    c0 08             	r0 = r12			  ## att_db.c:778:30
 1e05516:    12 14             	call -2012 <att_validate_security : 1e04d3c >			  ## att_db.c:778:30
 1e05518:    03 08             	r3 = r0			  ## att_db.c:778:30
 1e0551a:    54 26             	if (r3 == 0) goto 168 <.GJTIE652_0_0_+0x6A6 : 1e055c4 >			  ## att_db.c:778:30
 1e0551c:    10 70             	r0 = 1
 1e0551e:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05522:    a0 70             	r0 = 10			  ## att_db.c:368:24
 1e05524:    9c 18             	goto 312 <.GJTIE652_0_0_+0x740 : 1e0565e >			  ## att_db.c:368:24
 1e05526:    20 f3 67 10       	if ((r1 & 1) != 0) goto 206 <.GJTIE652_0_0_+0x6DA : 1e055f8 >
 1e0552a:    c0 08             	r0 = r12			  ## att_db.c:828:30
 1e0552c:    07 14             	call -2034 <att_validate_security : 1e04d3c >			  ## att_db.c:828:30
 1e0552e:    03 08             	r3 = r0			  ## att_db.c:828:30
 1e05530:    63 26             	if (r3 == 0) goto 198 <.GJTIE652_0_0_+0x6DA : 1e055f8 >			  ## att_db.c:828:30
 1e05532:    10 70             	r0 = 1
 1e05534:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05538:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e0553a:    b6 1f             	goto -148 <.GJTIE652_0_0_+0x58A : 1e054a8 >			  ## att_db.c:368:24
 1e0553c:    10 70             	r0 = 1
 1e0553e:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05542:    03 71             	r3 = 16			  ## att_db.c:368:24
 1e05544:    13 f9 01 d0       	b[r13 + 1] = r3			  ## att_db.c:368:24
 1e05548:    21 70             	r1 = 2
 1e0554a:    d0 08             	r0 = r13
 1e0554c:    52 08             	r2 = r5
 1e0554e:    cf 18             	goto 414 <.GJTIE652_0_0_+0x7D0 : 1e056ee >
 1e05550:    50 70             	r0 = 5			  ## att_db.c:536:24
 1e05552:    87 19             	goto 782 <.GJTIE652_0_0_+0x944 : 1e05862 >			  ## att_db.c:536:24
 1e05554:    70 70             	r0 = 7			  ## att_db.c:621:24
 1e05556:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:621:24
 1e0555a:    4e 08             	r14 = r4			  ## att_db.c:621:24
 1e0555c:    84 19             	goto 776 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:621:24
 1e0555e:    13 70             	r3 = 1
 1e05560:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e05564:    be 18             	goto 380 <.GJTIE652_0_0_+0x7C4 : 1e056e2 >			  ## att_db.c:367:24
 1e05566:    a1 fc 20 00       	r1 = r10 + 32			  ## att_db.c:1171:5
 1e0556a:    c0 ae             	r0 = sp + 236			  ## att_db.c:1171:5
 1e0556c:    80 f3 90 11       	call 8992 <btstack_linked_list_iterator_init : 1e07890 >			  ## att_db.c:1171:5
 1e05570:    04 70             	r4 = 0
 1e05572:    c0 ae             	r0 = sp + 236
 1e05574:    80 f3 8f 09       	call 4894 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## att_db.c:1172:12
 1e05578:    13 20             	if (r0 == 0) goto 38 <.GJTIE652_0_0_+0x682 : 1e055a0 >			  ## att_db.c:1172:5
 1e0557a:    c0 ae             	r0 = sp + 236
 1e0557c:    80 f3 99 09       	call 4914 <btstack_linked_list_iterator_next : 1e068b2 >			  ## att_db.c:1173:68
 1e05580:    36 40             	r6 = [r0 + 12]			  ## att_db.c:1174:23
 1e05582:    f7 2d             	if (r6 == 0) goto -18 <.GJTIE652_0_0_+0x654 : 1e05572 >
 1e05584:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1177:30
 1e05588:    1c 02             	[sp+4] = r4			  ## att_db.c:1177:30
 1e0558a:    01 70             	r1 = 0			  ## att_db.c:1177:30
 1e0558c:    42 70             	r2 = 4			  ## att_db.c:1177:30
 1e0558e:    03 70             	r3 = 0			  ## att_db.c:1177:30
 1e05590:    0c 02             	[sp] = r4			  ## att_db.c:1177:30
 1e05592:    86 00             	call r6			  ## att_db.c:1177:30
 1e05594:    60 ff ff 09 ec ff 	if ((r0 & 255) == 0) goto -40 <.GJTIE652_0_0_+0x654 : 1e05572 >			  ## att_db.c:1177:30
 1e0559a:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:1209:50
 1e0559e:    56 1f             	goto -340 <.GJTIE652_0_0_+0x52E : 1e0544c >			  ## att_db.c:1209:50
 1e055a0:    04 f6 18 a0       	r4 = [r10 + 24]			  ## att_db.c:1182:18
 1e055a4:    a9 28             	if (r4 == 0) goto 338 <.GJTIE652_0_0_+0x7DA : 1e056f8 >			  ## att_db.c:1182:18
 1e055a6:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1185:12
 1e055aa:    05 70             	r5 = 0			  ## att_db.c:1185:12
 1e055ac:    1d 02             	[sp+4] = r5			  ## att_db.c:1185:12
 1e055ae:    01 70             	r1 = 0			  ## att_db.c:1185:12
 1e055b0:    42 70             	r2 = 4			  ## att_db.c:1185:12
 1e055b2:    03 70             	r3 = 0			  ## att_db.c:1185:12
 1e055b4:    0d 02             	[sp] = r5			  ## att_db.c:1185:12
 1e055b6:    84 00             	call r4			  ## att_db.c:1185:12
 1e055b8:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:1209:50
 1e055bc:    61 ff ff 09 45 ff 	if ((r0 & 255) != 0) goto -374 <.GJTIE652_0_0_+0x52E : 1e0544c >			  ## att_db.c:1209:50
 1e055c2:    9d 18             	goto 314 <.GJTIE652_0_0_+0x7E0 : 1e056fe >			  ## att_db.c:1209:50
 1e055c4:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:784:5
 1e055c8:    c0 a5             	r0 = sp + 92			  ## att_db.c:784:5
 1e055ca:    bf f3 f4 fb       	call -2072 <att_update_value_len : 1e04db6 >			  ## att_db.c:784:5
 1e055ce:    80 f5 6c 00       	r0 = h[sp+108] (u)			  ## att_db.c:788:21
 1e055d2:    11 90             	r1 = r0 + 1			  ## att_db.c:788:16
 1e055d4:    f1 f2 04 90       	if (r1 <= r15) goto 8 <.GJTIE652_0_0_+0x6C2 : 1e055e0 >			  ## att_db.c:788:16
 1e055d8:    f0 fc ff ff       	r0 = r15 + -1			  ## att_db.c:789:45
 1e055dc:    90 f5 6c 00       	h[sp+108] = r0			  ## att_db.c:789:22
 1e055e0:    04 f7 00 c0       	r4 = h[r12 + 0] (u)			  ## att_db.c:793:29
 1e055e4:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:793:68
 1e055e8:    23 04             	r3 = r0.l (u)			  ## att_db.c:793:29
 1e055ea:    c0 a5             	r0 = sp + 92			  ## att_db.c:793:29
 1e055ec:    01 70             	r1 = 0			  ## att_db.c:793:29
 1e055ee:    0c 02             	[sp] = r4			  ## att_db.c:793:29
 1e055f0:    bf f3 fc fb       	call -2056 <att_copy_value : 1e04dec >			  ## att_db.c:793:29
 1e055f4:    b1 70             	r1 = 11			  ## att_db.c:796:24
 1e055f6:    4f 18             	goto 158 <.GJTIE652_0_0_+0x778 : 1e05696 >			  ## att_db.c:796:24
 1e055f8:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:834:5
 1e055fc:    40 a7             	r0 = sp + 116			  ## att_db.c:834:5
 1e055fe:    bf f3 da fb       	call -2124 <att_update_value_len : 1e04db6 >			  ## att_db.c:834:5
 1e05602:    80 f5 84 00       	r0 = h[sp+132] (u)			  ## att_db.c:836:27
 1e05606:    60 f2 30 20       	if (r0 >= r6) goto 96 <.GJTIE652_0_0_+0x74C : 1e0566a >			  ## att_db.c:836:9
 1e0560a:    10 70             	r0 = 1
 1e0560c:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05610:    c0 70             	r0 = 12			  ## att_db.c:368:24
 1e05612:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e05616:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e05618:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e0561a:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e0561c:    80 f3 1f 09       	call 4670 <little_endian_store_16 : 1e0685e >			  ## att_db.c:369:5
 1e05620:    70 70             	r0 = 7			  ## att_db.c:370:24
 1e05622:    13 19             	goto 550 <.GJTIE652_0_0_+0x92C : 1e0584a >			  ## att_db.c:370:24
 1e05624:    10 70             	r0 = 1
 1e05626:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e0562a:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e0562c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e05630:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e05632:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e05634:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e05636:    06 19             	goto 524 <.GJTIE652_0_0_+0x926 : 1e05844 >			  ## att_db.c:369:5
 1e05638:    13 70             	r3 = 1
 1e0563a:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e0563e:    e0 70             	r0 = 14			  ## att_db.c:368:24
 1e05640:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e05644:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e05646:    02 70             	r2 = 0			  ## att_db.c:369:5
 1e05648:    d0 08             	r0 = r13
 1e0564a:    51 18             	goto 162 <.GJTIE652_0_0_+0x7D0 : 1e056ee >
 1e0564c:    13 70             	r3 = 1
 1e0564e:    13 f9 00 d0       	b[r13 + 0] = r3			  ## att_db.c:367:24
 1e05652:    04 18             	goto 8 <.GJTIE652_0_0_+0x73E : 1e0565c >			  ## att_db.c:367:24
 1e05654:    23 70             	r3 = 2
 1e05656:    10 70             	r0 = 1
 1e05658:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e0565c:    e0 70             	r0 = 14
 1e0565e:    10 f9 01 d0       	b[r13 + 1] = r0
 1e05662:    21 70             	r1 = 2
 1e05664:    d0 08             	r0 = r13
 1e05666:    42 08             	r2 = r4
 1e05668:    42 18             	goto 132 <.GJTIE652_0_0_+0x7D0 : 1e056ee >
 1e0566a:    61 fb 01 69       	r1 = 1 - r6			  ## att_db.c:842:16
 1e0566e:    01 09             	r1 += r0			  ## att_db.c:842:31
 1e05670:    f1 f2 05 d0       	ifs (r1 <= r15) goto 10 <.GJTIE652_0_0_+0x760 : 1e0567e >			  ## att_db.c:842:31
 1e05674:    80 fb 60 0f       	r0 = r15 + r6			  ## att_db.c:843:45
 1e05678:    f0 8f             	r0 += -1			  ## att_db.c:843:49
 1e0567a:    90 f5 84 00       	h[sp+132] = r0			  ## att_db.c:843:22
 1e0567e:    01 f7 00 c0       	r1 = h[r12 + 0] (u)			  ## att_db.c:847:29
 1e05682:    a0 b1             	r0 = r0 - r6			  ## att_db.c:847:102
 1e05684:    23 04             	r3 = r0.l (u)			  ## att_db.c:847:29
 1e05686:    d2 fc 01 00       	r2 = r13 + 1			  ## att_db.c:847:79
 1e0568a:    40 a7             	r0 = sp + 116			  ## att_db.c:847:79
 1e0568c:    09 02             	[sp] = r1			  ## att_db.c:847:29
 1e0568e:    61 08             	r1 = r6			  ## att_db.c:847:29
 1e05690:    bf f3 ac fb       	call -2216 <att_copy_value : 1e04dec >			  ## att_db.c:847:29
 1e05694:    d1 70             	r1 = 13			  ## att_db.c:850:24
 1e05696:    11 f9 00 d0       	b[r13 + 0] = r1
 1e0569a:    1e 90             	r14 = r0 + 1
 1e0569c:    e4 18             	goto 456 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e0569e:    c0 08             	r0 = r12			  ## att_db.c:1085:26
 1e056a0:    bf f3 4c fb       	call -2408 <att_validate_security : 1e04d3c >			  ## att_db.c:1085:26
 1e056a4:    03 08             	r3 = r0			  ## att_db.c:1085:26
 1e056a6:    10 36             	if (r3 != 0) goto 32 <.GJTIE652_0_0_+0x7AA : 1e056c8 >			  ## att_db.c:1085:26
 1e056a8:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1089:18
 1e056ac:    71 fc fd ff       	r1 = r7 + -3			  ## att_db.c:1089:128
 1e056b0:    61 04             	r1 = r1.l (u)			  ## att_db.c:1089:18
 1e056b2:    19 02             	[sp+4] = r1			  ## att_db.c:1089:18
 1e056b4:    31 9c             	r1 = r6 + 3			  ## att_db.c:1089:111
 1e056b6:    02 70             	r2 = 0			  ## att_db.c:1089:18
 1e056b8:    03 70             	r3 = 0			  ## att_db.c:1089:18
 1e056ba:    09 02             	[sp] = r1			  ## att_db.c:1089:18
 1e056bc:    81 08             	r1 = r8			  ## att_db.c:1089:18
 1e056be:    84 00             	call r4			  ## att_db.c:1089:18
 1e056c0:    03 08             	r3 = r0			  ## att_db.c:1089:18
 1e056c2:    60 ff ff 39 51 00 	if ((r3 & 255) == 0) goto 162 <.GJTIE652_0_0_+0x84C : 1e0576a >			  ## att_db.c:1089:18
 1e056c8:    10 70             	r0 = 1
 1e056ca:    10 f9 00 d0       	b[r13 + 0] = r0
 1e056ce:    20 71             	r0 = 18
 1e056d0:    09 18             	goto 18 <.GJTIE652_0_0_+0x7C6 : 1e056e4 >
 1e056d2:    c0 08             	r0 = r12			  ## att_db.c:1125:26
 1e056d4:    bf f3 32 fb       	call -2460 <att_validate_security : 1e04d3c >			  ## att_db.c:1125:26
 1e056d8:    03 08             	r3 = r0			  ## att_db.c:1125:26
 1e056da:    1a 26             	if (r3 == 0) goto 52 <.GJTIE652_0_0_+0x7F2 : 1e05710 >			  ## att_db.c:1126:9
 1e056dc:    10 70             	r0 = 1
 1e056de:    10 f9 00 d0       	b[r13 + 0] = r0
 1e056e2:    60 71             	r0 = 22
 1e056e4:    10 f9 01 d0       	b[r13 + 1] = r0
 1e056e8:    21 70             	r1 = 2
 1e056ea:    d0 08             	r0 = r13
 1e056ec:    82 08             	r2 = r8
 1e056ee:    80 f3 b6 08       	call 4460 <little_endian_store_16 : 1e0685e >
 1e056f2:    4b 60             	b[r0 + 4] = r3
 1e056f4:    5e 70             	r14 = 5
 1e056f6:    b7 18             	goto 366 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e056f8:    00 70             	r0 = 0			  ## att_db.c:1209:50
 1e056fa:    10 f9 1c a0       	b[r10 + 28] = r0			  ## att_db.c:1209:50
 1e056fe:    21 70             	r1 = 2			  ## att_db.c:1219:9
 1e05700:    c0 08             	r0 = r12
 1e05702:    bf f3 b5 fb       	call -2198 <att_notify_write_callbacks : 1e04e70 >
 1e05706:    90 71             	r0 = 25			  ## att_db.c:1223:24
 1e05708:    10 f9 00 d0       	b[r13 + 0] = r0
 1e0570c:    1e 70             	r14 = 1
 1e0570e:    ab 18             	goto 342 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e05710:    00 f7 00 c0       	r0 = h[r12 + 0] (u)			  ## att_db.c:1130:18
 1e05714:    71 fc fb ff       	r1 = r7 + -5			  ## att_db.c:1130:135
 1e05718:    61 04             	r1 = r1.l (u)			  ## att_db.c:1130:18
 1e0571a:    19 02             	[sp+4] = r1			  ## att_db.c:1130:18
 1e0571c:    51 9c             	r1 = r6 + 5			  ## att_db.c:1130:118
 1e0571e:    12 70             	r2 = 1			  ## att_db.c:1130:18
 1e05720:    09 02             	[sp] = r1			  ## att_db.c:1130:18
 1e05722:    81 08             	r1 = r8			  ## att_db.c:1130:18
 1e05724:    93 08             	r3 = r9			  ## att_db.c:1130:18
 1e05726:    84 00             	call r4			  ## att_db.c:1130:18
 1e05728:    03 08             	r3 = r0			  ## att_db.c:1130:18
 1e0572a:    60 ff ff 39 13 00 	if ((r3 & 255) == 0) goto 38 <.GJTIE652_0_0_+0x838 : 1e05756 >			  ## att_db.c:1130:18
 1e05730:    c0 04             	r0 = r3.b0 (u)			  ## att_db.c:1130:18
 1e05732:    d0 e0 02 00       	if (r0 == 13) goto 4 <.GJTIE652_0_0_+0x81C : 1e0573a >			  ## att_db.c:1130:18
 1e05736:    70 e0 d1 1f       	if (r0 != 7) goto -94 <.GJTIE652_0_0_+0x7BE : 1e056dc >
 1e0573a:    01 f9 1c a0       	r1 = b[r10 + 28] (u)			  ## att_db.c:352:89
 1e0573e:    d0 e0 03 10       	if (r0 != 13) goto 6 <.GJTIE652_0_0_+0x82A : 1e05748 >			  ## att_db.c:352:89
 1e05742:    c2 04             	r2 = r3.b0 (u)
 1e05744:    21 f2 03 10       	if (r1 != r2) goto 6 <.GJTIE652_0_0_+0x830 : 1e0574e >
 1e05748:    70 e0 05 10       	if (r0 != 7) goto 10 <.GJTIE652_0_0_+0x838 : 1e05756 >
 1e0574c:    04 32             	if (r1 != 0) goto 8 <.GJTIE652_0_0_+0x838 : 1e05756 >
 1e0574e:    13 f9 1c a0       	b[r10 + 28] = r3
 1e05752:    18 f7 1e a0       	h[r10 + 30] = r8
 1e05756:    d0 08             	r0 = r13			  ## att_db.c:1144:5
 1e05758:    61 08             	r1 = r6			  ## att_db.c:1144:5
 1e0575a:    72 08             	r2 = r7			  ## att_db.c:1144:5
 1e0575c:    98 f3 c2 0b       	call 3151748 <memcpy : 106ee4 >			  ## att_db.c:1144:5
 1e05760:    70 71             	r0 = 23			  ## att_db.c:1145:24
 1e05762:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:1145:24
 1e05766:    7e 08             	r14 = r7			  ## att_db.c:1145:24
 1e05768:    7e 18             	goto 252 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:1145:24
 1e0576a:    30 71             	r0 = 19			  ## att_db.c:1093:24
 1e0576c:    cd 1f             	goto -102 <.GJTIE652_0_0_+0x7EA : 1e05708 >			  ## att_db.c:1093:24
 1e0576e:    22 02             	r2 = [sp+8]
 1e05770:    11 e0 04 10       	if (r1 != 1) goto 8 <.GJTIE652_0_0_+0x85E : 1e0577c >
 1e05774:    10 fa 00 d1       	b[r13+r1] = r0			  ## att_db.c:1029:41
 1e05778:    2e 70             	r14 = 2			  ## att_db.c:1029:41
 1e0577a:    02 08             	r2 = r0			  ## att_db.c:1029:41
 1e0577c:    00 f5 b8 00       	r0 = [sp+184]			  ## att_db.c:1034:37
 1e05780:    48 02             	[sp+16] = r0
 1e05782:    14 70             	r4 = 1
 1e05784:    7c 08             	r12 = r7
 1e05786:    2a 02             	[sp+8] = r2
 1e05788:    aa 04             	r10 = r2.l (u)
 1e0578a:    ab fc fc ff       	r11 = r10 + -4
 1e0578e:    c9 08             	r9 = r12
 1e05790:    00 f5 a4 00       	r0 = [sp+164]			  ## att_db.c:119:16
 1e05794:    4a 20             	if (r0 == 0) goto 148 <.GJTIE652_0_0_+0x90C : 1e0582a >			  ## att_db.c:119:16
 1e05796:    40 aa             	r0 = sp + 164
 1e05798:    bf f3 4a fa       	call -2924 <att_iterator_fetch_next : 1e04c30 >			  ## att_db.c:979:9
 1e0579c:    87 f5 ac 00       	r7 = h[sp+172] (u)			  ## att_db.c:981:16
 1e057a0:    02 2e             	if (r7 == 0) goto 4 <.GJTIE652_0_0_+0x888 : 1e057a6 >
 1e057a2:    57 f2 f5 3f       	if (r7 < r5) goto -22 <.GJTIE652_0_0_+0x872 : 1e05790 >
 1e057a6:    87 f2 40 80       	if (r7 > r8) goto 128 <.GJTIE652_0_0_+0x90C : 1e0582a >
 1e057aa:    20 05             	r0 = r4.l (u)			  ## att_db.c:991:22
 1e057ac:    2a 20             	if (r0 == 0) goto 84 <.GJTIE652_0_0_+0x8E4 : 1e05802 >			  ## att_db.c:991:22
 1e057ae:    0c 2e             	if (r7 == 0) goto 24 <.GJTIE652_0_0_+0x8AA : 1e057c8 >
 1e057b0:    40 aa             	r0 = sp + 164
 1e057b2:    01 fb 00 28       	r1 = 10240 <btctler_bss_start+0x20 : 2800 >			  ## att_db.c:992:32
 1e057b6:    bf f3 7b fa       	call -2826 <att_iterator_match_uuid16 : 1e04cb0 >			  ## att_db.c:992:32
 1e057ba:    06 30             	if (r0 != 0) goto 12 <.GJTIE652_0_0_+0x8AA : 1e057c8 >
 1e057bc:    40 aa             	r0 = sp + 164
 1e057be:    01 fb 01 28       	r1 = 10241 <btctler_bss_start+0x21 : 2801 >			  ## att_db.c:992:93
 1e057c2:    bf f3 75 fa       	call -2838 <att_iterator_match_uuid16 : 1e04cb0 >			  ## att_db.c:992:93
 1e057c6:    20 20             	if (r0 == 0) goto 64 <.GJTIE652_0_0_+0x8EA : 1e05808 >
 1e057c8:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:995:13
 1e057cc:    d0 08             	r0 = r13			  ## att_db.c:995:13
 1e057ce:    c2 08             	r2 = r12			  ## att_db.c:995:13
 1e057d0:    80 f3 45 08       	call 4234 <little_endian_store_16 : 1e0685e >			  ## att_db.c:995:13
 1e057d4:    e0 fc 02 00       	r0 = r14 + 2			  ## att_db.c:996:20
 1e057d8:    21 04             	r1 = r0.l (u)			  ## att_db.c:997:13
 1e057da:    d0 08             	r0 = r13			  ## att_db.c:997:13
 1e057dc:    92 08             	r2 = r9			  ## att_db.c:997:13
 1e057de:    80 f3 3e 08       	call 4220 <little_endian_store_16 : 1e0685e >			  ## att_db.c:997:13
 1e057e2:    e0 fc 04 00       	r0 = r14 + 4			  ## att_db.c:998:20
 1e057e6:    24 04             	r4 = r0.l (u)			  ## att_db.c:999:38
 1e057e8:    80 fb 40 0d       	r0 = r13 + r4			  ## att_db.c:999:36
 1e057ec:    41 02             	r1 = [sp+16]			  ## att_db.c:999:13
 1e057ee:    b2 08             	r2 = r11			  ## att_db.c:999:13
 1e057f0:    98 f3 78 0b       	call 3151600 <memcpy : 106ee4 >			  ## att_db.c:999:13
 1e057f4:    80 fb b0 e4       	r14 = r4 + r11			  ## att_db.c:1000:20
 1e057f8:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1004:17
 1e057fc:    a0 09             	r0 += r10			  ## att_db.c:1004:24
 1e057fe:    f0 f2 14 80       	if (r0 > r15) goto 40 <.GJTIE652_0_0_+0x90C : 1e0582a >
 1e05802:    04 70             	r4 = 0
 1e05804:    09 70             	r9 = 0
 1e05806:    c4 2f             	if (r7 == 0) goto -120 <.GJTIE652_0_0_+0x872 : 1e05790 >
 1e05808:    40 aa             	r0 = sp + 164
 1e0580a:    61 08             	r1 = r6			  ## att_db.c:1014:26
 1e0580c:    32 02             	r2 = [sp+12]			  ## att_db.c:1014:26
 1e0580e:    bf f3 67 fa       	call -2866 <att_iterator_match_uuid : 1e04ce0 >			  ## att_db.c:1014:26
 1e05812:    79 08             	r9 = r7
 1e05814:    bd 21             	if (r0 == 0) goto -134 <.GJTIE652_0_0_+0x872 : 1e05790 >
 1e05816:    80 f5 b4 00       	r0 = h[sp+180] (u)			  ## att_db.c:1017:45
 1e0581a:    e6 fd 00 1e       	r1 = r14.l (u)			  ## att_db.c:1018:17
 1e0581e:    40 80             	r0 += 4			  ## att_db.c:1017:40
 1e05820:    21 e0 a5 3f       	if (r1 < 2) goto -182 <.GJTIE652_0_0_+0x850 : 1e0576e >			  ## att_db.c:1017:40
 1e05824:    22 04             	r2 = r0.l (u)
 1e05826:    a2 f2 a2 0f       	if (r2 == r10) goto -188 <.GJTIE652_0_0_+0x850 : 1e0576e >
 1e0582a:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1039:16
 1e0582e:    10 e0 10 10       	if (r0 != 1) goto 32 <.GJTIE652_0_0_+0x934 : 1e05852 >			  ## att_db.c:1039:9
 1e05832:    10 70             	r0 = 1
 1e05834:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05838:    00 71             	r0 = 16			  ## att_db.c:368:24
 1e0583a:    10 f9 01 d0       	b[r13 + 1] = r0
 1e0583e:    21 70             	r1 = 2
 1e05840:    d0 08             	r0 = r13
 1e05842:    52 08             	r2 = r5
 1e05844:    80 f3 0b 08       	call 4118 <little_endian_store_16 : 1e0685e >
 1e05848:    a0 70             	r0 = 10
 1e0584a:    10 f9 04 d0       	b[r13 + 4] = r0
 1e0584e:    5e 70             	r14 = 5
 1e05850:    0a 18             	goto 20 <.GJTIE652_0_0_+0x948 : 1e05866 >
 1e05852:    10 71             	r0 = 17			  ## att_db.c:1043:24
 1e05854:    06 18             	goto 12 <.GJTIE652_0_0_+0x944 : 1e05862 >			  ## att_db.c:1043:24
 1e05856:    4b 08             	r11 = r4
 1e05858:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:725:16
 1e0585c:    20 e0 07 30       	if (r0 < 2) goto 14 <.GJTIE652_0_0_+0x950 : 1e0586e >			  ## att_db.c:725:16
 1e05860:    90 70             	r0 = 9			  ## att_db.c:726:28
 1e05862:    10 f9 00 d0       	b[r13 + 0] = r0
 1e05866:    e6 fd 00 0e       	r0 = r14.l (u)			  ## att_db.c:1360:5
 1e0586a:    88 0a             	sp += 272			  ## att_db.c:1360:5
 1e0586c:    5f 01             	{pc, r15-r4} = [sp++]			  ## att_db.c:1360:5
 1e0586e:    0a e0 0f 00       	if (r10 == 0) goto 30 <.GJTIE652_0_0_+0x972 : 1e05890 >			  ## att_db.c:731:9
 1e05872:    10 70             	r0 = 1
 1e05874:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05878:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e0587a:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e0587e:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e05880:    d0 08             	r0 = r13			  ## att_db.c:369:5
 1e05882:    72 08             	r2 = r7			  ## att_db.c:369:5
 1e05884:    80 f3 eb 07       	call 4054 <little_endian_store_16 : 1e0685e >			  ## att_db.c:369:5
 1e05888:    1a f9 04 00       	b[r0 + 4] = r10			  ## att_db.c:370:24
 1e0588c:    5e 70             	r14 = 5			  ## att_db.c:370:24
 1e0588e:    eb 1f             	goto -42 <.GJTIE652_0_0_+0x948 : 1e05866 >			  ## att_db.c:370:24
 1e05890:    10 70             	r0 = 1
 1e05892:    10 f9 00 d0       	b[r13 + 0] = r0			  ## att_db.c:367:24
 1e05896:    80 70             	r0 = 8			  ## att_db.c:368:24
 1e05898:    e6 fd 00 2b       	r2 = r11.l (u)			  ## att_db.c:736:9
 1e0589c:    10 f9 01 d0       	b[r13 + 1] = r0			  ## att_db.c:368:24
 1e058a0:    02 e0 c6 0e       	if (r2 == 0) goto -628 <.GJTIE652_0_0_+0x712 : 1e05630 >			  ## att_db.c:368:24
 1e058a4:    21 70             	r1 = 2			  ## att_db.c:369:5
 1e058a6:    23 70             	r3 = 2			  ## att_db.c:369:5
 1e058a8:    cf 1e             	goto -610 <.GJTIE652_0_0_+0x72A : 1e05648 >			  ## att_db.c:369:5
 1e058aa:    0a 08             	r10 = r0
 1e058ac:    d5 1f             	goto -86 <.GJTIE652_0_0_+0x93A : 1e05858 >


lbuf_init_btctrler:
 1e058ae:    34 00             	[--sp] = rets			  ## lbuf.c:28:0
 1e058b0:    13 08             	r3 = r1			  ## lbuf.c:28:0
 1e058b2:    02 08             	r2 = r0			  ## lbuf.c:28:0
 1e058b4:    60 ff 03 29 06 00 	if ((r2 & 3) == 0) goto 12 <lbuf_init_btctrler+0x18 : 1e058c6 >			  ## lbuf.c:28:0
 1e058ba:    20 fd 03 29       	r0 = r2 & 3			  ## lbuf.c:32:18
 1e058be:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:33:22
 1e058c2:    02 09             	r2 += r0			  ## lbuf.c:34:13
 1e058c4:    23 b6             	r3 = r3 - r0			  ## lbuf.c:33:17
 1e058c6:    60 ff 03 29 02 00 	if ((r2 & 3) == 0) goto 4 <lbuf_init_btctrler+0x22 : 1e058d0 >
 1e058cc:    8f f3 18 ed       	call 2087472 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e058d0:    c0 ff e4 ff 00 00 	r0 = 65508 <_IRQ_MEM_ADDR+0xE4 : ffe4 >			  ## lbuf.c:43:41
 1e058d6:    30 09             	r0 += r3			  ## lbuf.c:43:41
 1e058d8:    c8 54             	h[r2 + 24] = r0			  ## lbuf.c:43:15
 1e058da:    0a 44             	[r2 + 0] = r2			  ## list.h:188:16
 1e058dc:    1a 44             	[r2 + 4] = r2			  ## list.h:189:16
 1e058de:    00 95             	r0 = r2 + 16			  ## lbuf.c:42:34
 1e058e0:    38 44             	[r2 + 12] = r0			  ## list.h:137:16
 1e058e2:    81 94             	r1 = r2 + 8			  ## lbuf.c:50:27
 1e058e4:    49 44             	[r2 + 16] = r1			  ## list.h:138:16
 1e058e6:    59 44             	[r2 + 20] = r1			  ## list.h:139:16
 1e058e8:    28 44             	[r2 + 8] = r0			  ## list.h:140:16
 1e058ea:    20 08             	r0 = r2			  ## lbuf.c:54:5
 1e058ec:    30 00             	pc = [sp++]			  ## lbuf.c:54:5


crc_get_32bit:
 1e058ee:    74 01             	[--sp] = {rets, r4}			  ## misc_hw.c:32:0
 1e058f0:    02 70             	r2 = 0			  ## misc_hw.c:32:0
 1e058f2:    c1 ff 00 35 1e 00 	r1 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >			  ## misc_hw.c:32:0
 1e058f8:    1a 42             	[r1 + 4] = r2			  ## misc_hw.c:36:17
 1e058fa:    04 60             	r4 = b[r0 + 0] (u)			  ## misc_hw.c:36:17
 1e058fc:    13 90             	r3 = r0 + 1			  ## misc_hw.c:37:5
 1e058fe:    14 05             	r4 = r4.b0 (s)			  ## misc_hw.c:39:24
 1e05900:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:39:22
 1e05902:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## misc_hw.c:40:14
 1e05906:    12 80             	r2 += 1			  ## misc_hw.c:40:5
 1e05908:    fa 39             	if (r4 != 0) goto -12 <crc_get_32bit+0x10 : 1e058fe >			  ## misc_hw.c:40:5
 1e0590a:    08 00             	csync			  ## misc_hw.c:42:5
 1e0590c:    13 42             	r3 = [r1 + 4]			  ## misc_hw.c:43:19
 1e0590e:    c1 f4 00 19       	[r1 + 4] = 0			  ## misc_hw.c:45:17
 1e05912:    24 fa 00 02       	r4 = b[r0+r2] (s)			  ## misc_hw.c:48:24
 1e05916:    0c 42             	[r1 + 0] = r4			  ## misc_hw.c:48:22
 1e05918:    52 f3 fb ff       	if (--r2 != 0) goto -10 <crc_get_32bit+0x24 : 1e05912 >			  ## misc_hw.c:49:5
 1e0591c:    08 00             	csync			  ## misc_hw.c:51:5
 1e0591e:    10 42             	r0 = [r1 + 4]			  ## misc_hw.c:52:20
 1e05920:    00 c4             	r0 = r0 << 16			  ## misc_hw.c:52:24
 1e05922:    50 b6             	r0 |= r3			  ## misc_hw.c:52:9
 1e05924:    54 01             	{pc, r4} = [sp++]			  ## misc_hw.c:54:5


thread_create:
 1e05926:    79 01             	[--sp] = {rets, r9-r4}			  ## thread.c:85:0
 1e05928:    34 08             	r4 = r3			  ## thread.c:85:0
 1e0592a:    28 08             	r8 = r2			  ## thread.c:85:0
 1e0592c:    19 08             	r9 = r1			  ## thread.c:85:0
 1e0592e:    05 08             	r5 = r0			  ## thread.c:85:0
 1e05930:    90 08             	r0 = r9			  ## thread.c:63:22
 1e05932:    dd 17             	call -70 <crc_get_32bit : 1e058ee >			  ## thread.c:63:22
 1e05934:    06 48             	r6 = [r4 + 0]			  ## thread.c:63:22
 1e05936:    07 08             	r7 = r0			  ## thread.c:63:22
 1e05938:    46 f2 09 00       	if (r6 == r4) goto 18 <thread_create+0x28 : 1e0594e >
 1e0593c:    30 4c             	r0 = [r6 + 12]			  ## thread.c:69:44
 1e0593e:    d7 17             	call -82 <crc_get_32bit : 1e058ee >			  ## thread.c:69:27
 1e05940:    07 f2 1c 00       	if (r7 == r0) goto 56 <thread_create+0x56 : 1e0597c >			  ## thread.c:69:27
 1e05944:    06 4c             	r6 = [r6 + 0]
 1e05946:    46 f2 f9 1f       	if (r6 != r4) goto -14 <thread_create+0x16 : 1e0593c >
 1e0594a:    00 48             	r0 = [r4 + 0]
 1e0594c:    01 18             	goto 2 <thread_create+0x2A : 1e05950 >
 1e0594e:    40 08             	r0 = r4			  ## list.h:124:18
 1e05950:    18 f6 10 50       	[r5 + 16] = r8			  ## thread.c:95:13
 1e05954:    11 70             	r1 = 1			  ## thread.c:96:20
 1e05956:    59 6b             	b[r5 + 21] = r1			  ## thread.c:96:20
 1e05958:    01 70             	r1 = 0			  ## thread.c:97:25
 1e0595a:    69 6b             	b[r5 + 22] = r1			  ## thread.c:97:25
 1e0595c:    19 f6 0c 50       	[r5 + 12] = r9			  ## thread.c:98:14
 1e05960:    2c 4a             	[r5 + 8] = r4			  ## thread.c:99:15
 1e05962:    40 f2 06 10       	if (r0 != r4) goto 12 <thread_create+0x4C : 1e05972 >			  ## thread.c:99:15
 1e05966:    22 48             	r2 = [r4 + 8]			  ## thread.c:104:26
 1e05968:    c0 ff ec 5b e0 01 	r0 = 31480812 <thread_schedule : 1e05bec >			  ## thread.c:104:15
 1e0596e:    82 00             	call r2			  ## thread.c:104:15
 1e05970:    06 30             	if (r0 != 0) goto 12 <thread_create+0x58 : 1e0597e >
 1e05972:    10 48             	r0 = [r4 + 4]			  ## list.h:154:28
 1e05974:    1d 48             	[r4 + 4] = r5			  ## list.h:137:16
 1e05976:    0c 4a             	[r5 + 0] = r4			  ## list.h:138:16
 1e05978:    18 4a             	[r5 + 4] = r0			  ## list.h:139:16
 1e0597a:    0d 40             	[r0 + 0] = r5			  ## list.h:140:16
 1e0597c:    00 70             	r0 = 0
 1e0597e:    59 01             	{pc, r9-r4} = [sp++]			  ## thread.c:118:1


__vsprintf_len:
 1e05980:    77 01             	[--sp] = {rets, r7-r4}			  ## vsprintf.c:5:0
 1e05982:    fe 0b             	sp += -4			  ## vsprintf.c:5:0
 1e05984:    09 02             	[sp] = r1			  ## vsprintf.c:5:0
 1e05986:    01 70             	r1 = 0			  ## vsprintf.c:5:0
 1e05988:    72 20             	if (r0 == 0) goto 228 <.GJTIE713_0_0_+0xA6 : 1e05a6e >			  ## vsprintf.c:5:0
 1e0598a:    04 60             	r4 = b[r0 + 0] (u)			  ## vsprintf.c:12:12
 1e0598c:    70 28             	if (r4 == 0) goto 224 <.GJTIE713_0_0_+0xA6 : 1e05a6e >			  ## vsprintf.c:12:12
 1e0598e:    42 76             	r2 = 100
 1e05990:    a3 70             	r3 = 10
 1e05992:    14 05             	r4 = r4.b0 (s)			  ## vsprintf.c:13:17
 1e05994:    14 e6 0d d0       	ifs (r4 <= 97) goto 26 <__vsprintf_len+0x32 : 1e059b2 >			  ## vsprintf.c:13:17
 1e05998:    24 e6 1b 00       	if (r4 == 98) goto 54 <.GJTIE713_0_0_+0xA : 1e059d2 >
 1e0599c:    34 e6 2a 00       	if (r4 == 99) goto 84 <.GJTIE713_0_0_+0x2C : 1e059f4 >
 1e059a0:    c4 e6 62 10       	if (r4 != 108) goto 196 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e059a4:    04 02             	r4 = [sp]			  ## vsprintf.c:62:25
 1e059a6:    45 98             	r5 = r4 + 4			  ## vsprintf.c:62:25
 1e059a8:    0d 02             	[sp] = r5			  ## vsprintf.c:62:25
 1e059aa:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:62:25
 1e059ac:    41 09             	r1 += r4			  ## vsprintf.c:62:23
 1e059ae:    11 80             	r1 += 1			  ## vsprintf.c:62:17
 1e059b0:    5b 18             	goto 182 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e059b2:    45 fc bf ff       	r5 = r4 + -65
 1e059b6:    b5 e0 2b 80       	if (r5 > 11) goto 86 <.GJTIE713_0_0_+0x48 : 1e05a10 >
 1e059ba:    a5 00             	tbb [r5]


.GJTIS713_0_0_:
 1e059bc:    06     < 6 : 0x6 >
 1e059bd:    36     < 54 : 0x36 >
 1e059be:    3a     < 58 : 0x3A >
 1e059bf:    56     < 86 : 0x56 >
 1e059c0:    56     < 86 : 0x56 >
 1e059c1:    56     < 86 : 0x56 >
 1e059c2:    56     < 86 : 0x56 >
 1e059c3:    4c     < 76 : 0x4C >
 1e059c4:    56     < 86 : 0x56 >
 1e059c5:    56     < 86 : 0x56 >
 1e059c6:    56     < 86 : 0x56 >
 1e059c7:    51     < 81 : 0x51 >
 1e059c8:    04 02             	r4 = [sp]			  ## vsprintf.c:49:13
 1e059ca:    44 80             	r4 += 4			  ## vsprintf.c:49:13
 1e059cc:    0c 02             	[sp] = r4			  ## vsprintf.c:49:13
 1e059ce:    61 80             	r1 += 6			  ## vsprintf.c:48:17
 1e059d0:    4b 18             	goto 150 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e059d2:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## vsprintf.c:23:20
 1e059d6:    24 f9 02 00       	r4 = b[r0 + 2] (s)			  ## vsprintf.c:25:21
 1e059da:    80 fe 30 41       	r4 += r1 * r3			  ## vsprintf.c:25:17
 1e059de:    41 fc f0 fd       	r1 = r4 + -528			  ## vsprintf.c:25:17
 1e059e2:    20 80             	r0 += 2			  ## vsprintf.c:24:13
 1e059e4:    1f 22             	if (r1 == 0) goto 62 <.GJTIE713_0_0_+0x5C : 1e05a24 >
 1e059e6:    14 08             	r4 = r1
 1e059e8:    05 02             	r5 = [sp]			  ## vsprintf.c:28:17
 1e059ea:    45 80             	r5 += 4			  ## vsprintf.c:28:17
 1e059ec:    f4 8f             	r4 += -1			  ## vsprintf.c:27:28
 1e059ee:    0d 02             	[sp] = r5			  ## vsprintf.c:28:17
 1e059f0:    fb 39             	if (r4 != 0) goto -10 <.GJTIE713_0_0_+0x20 : 1e059e8 >			  ## vsprintf.c:28:17
 1e059f2:    3a 18             	goto 116 <.GJTIE713_0_0_+0xA0 : 1e05a68 >			  ## vsprintf.c:28:17
 1e059f4:    04 02             	r4 = [sp]			  ## vsprintf.c:36:13
 1e059f6:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:35:21
 1e059fa:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:33:21
 1e059fe:    44 80             	r4 += 4			  ## vsprintf.c:36:13
 1e05a00:    0c 02             	[sp] = r4			  ## vsprintf.c:36:13
 1e05a02:    51 09             	r1 += r5			  ## vsprintf.c:33:17
 1e05a04:    80 fe 30 16       	r1 += r6 * r3			  ## vsprintf.c:35:29
 1e05a08:    11 fc f0 fd       	r1 = r1 + -528			  ## vsprintf.c:35:17
 1e05a0c:    20 80             	r0 += 2			  ## vsprintf.c:34:13
 1e05a0e:    2c 18             	goto 88 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e05a10:    45 fc cf ff       	r5 = r4 + -49
 1e05a14:    45 e0 28 20       	if (r5 >= 4) goto 80 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e05a18:    05 02             	r5 = [sp]			  ## vsprintf.c:19:13
 1e05a1a:    45 80             	r5 += 4			  ## vsprintf.c:19:13
 1e05a1c:    0d 02             	[sp] = r5			  ## vsprintf.c:19:13
 1e05a1e:    41 09             	r1 += r4			  ## vsprintf.c:18:28
 1e05a20:    01 8d             	r1 += -48			  ## vsprintf.c:18:17
 1e05a22:    22 18             	goto 68 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e05a24:    01 70             	r1 = 0
 1e05a26:    20 18             	goto 64 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e05a28:    04 02             	r4 = [sp]			  ## vsprintf.c:59:13
 1e05a2a:    44 80             	r4 += 4			  ## vsprintf.c:59:13
 1e05a2c:    0c 02             	[sp] = r4			  ## vsprintf.c:59:13
 1e05a2e:    1c 18             	goto 56 <.GJTIE713_0_0_+0xA0 : 1e05a68 >			  ## vsprintf.c:59:13
 1e05a30:    04 02             	r4 = [sp]			  ## vsprintf.c:45:13
 1e05a32:    25 f9 02 00       	r5 = b[r0 + 2] (s)			  ## vsprintf.c:42:21
 1e05a36:    26 f9 01 00       	r6 = b[r0 + 1] (s)			  ## vsprintf.c:40:21
 1e05a3a:    27 f9 03 00       	r7 = b[r0 + 3] (s)			  ## vsprintf.c:44:21
 1e05a3e:    44 80             	r4 += 4			  ## vsprintf.c:45:13
 1e05a40:    0c 02             	[sp] = r4			  ## vsprintf.c:45:13
 1e05a42:    80 fe 20 16       	r1 += r6 * r2			  ## vsprintf.c:40:17
 1e05a46:    71 09             	r1 += r7			  ## vsprintf.c:42:17
 1e05a48:    80 fe 30 15       	r1 += r5 * r3			  ## vsprintf.c:44:29
 1e05a4c:    11 fc 30 eb       	r1 = r1 + -5328			  ## vsprintf.c:44:17
 1e05a50:    30 80             	r0 += 3			  ## vsprintf.c:43:13
 1e05a52:    0a 18             	goto 20 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e05a54:    04 02             	r4 = [sp]			  ## vsprintf.c:53:13
 1e05a56:    44 80             	r4 += 4			  ## vsprintf.c:53:13
 1e05a58:    0c 02             	[sp] = r4			  ## vsprintf.c:53:13
 1e05a5a:    21 80             	r1 += 2			  ## vsprintf.c:52:17
 1e05a5c:    05 18             	goto 10 <.GJTIE713_0_0_+0xA0 : 1e05a68 >
 1e05a5e:    04 02             	r4 = [sp]			  ## vsprintf.c:56:20
 1e05a60:    45 98             	r5 = r4 + 4			  ## vsprintf.c:56:20
 1e05a62:    0d 02             	[sp] = r5			  ## vsprintf.c:56:20
 1e05a64:    04 48             	r4 = [r4 + 0]			  ## vsprintf.c:56:20
 1e05a66:    41 09             	r1 += r4			  ## vsprintf.c:56:17
 1e05a68:    14 60             	r4 = b[r0 + 1] (u)			  ## vsprintf.c:12:12
 1e05a6a:    10 80             	r0 += 1			  ## vsprintf.c:65:15
 1e05a6c:    92 39             	if (r4 != 0) goto -220 <__vsprintf_len+0x12 : 1e05992 >
 1e05a6e:    10 08             	r0 = r1			  ## vsprintf.c:69:1
 1e05a70:    02 0a             	sp += 4			  ## vsprintf.c:69:1
 1e05a72:    57 01             	{pc, r7-r4} = [sp++]			  ## vsprintf.c:69:1


lbuf_alloc_btctrler:
 1e05a74:    77 01             	[--sp] = {rets, r7-r4}			  ## lbuf.c:60:0
 1e05a76:    04 08             	r4 = r0			  ## lbuf.c:60:0
 1e05a78:    06 93             	r6 = r1 + 16			  ## lbuf.c:68:9
 1e05a7a:    20 fd 03 69       	r0 = r6 & 3			  ## lbuf.c:69:13
 1e05a7e:    60 fb 04 09       	r0 = 4 - r0			  ## lbuf.c:70:18
 1e05a82:    05 70             	r5 = 0			  ## lbuf.c:70:18
 1e05a84:    07 70             	r7 = 0			  ## lbuf.c:69:9
 1e05a86:    60 ff 03 69 01 00 	if ((r6 & 3) == 0) goto 2 <lbuf_alloc_btctrler+0x1A : 1e05a8e >			  ## lbuf.c:69:9
 1e05a8c:    07 08             	r7 = r0			  ## lbuf.c:69:9
 1e05a8e:    98 f3 85 09       	call 3150602 <local_irq_disable : 106d9c >			  ## lbuf.c:74:5
 1e05a92:    20 48             	r0 = [r4 + 8]			  ## lbuf.c:76:5
 1e05a94:    82 98             	r2 = r4 + 8			  ## lbuf.c:76:5
 1e05a96:    20 f2 1f 00       	if (r0 == r2) goto 62 <lbuf_alloc_btctrler+0x64 : 1e05ad8 >			  ## lbuf.c:76:5
 1e05a9a:    81 bf             	r1 = r7 + r6			  ## lbuf.c:69:9
 1e05a9c:    46 50             	r6 = h[r0 + 8] (u)			  ## lbuf.c:77:13
 1e05a9e:    16 f2 04 20       	if (r6 >= r1) goto 8 <lbuf_alloc_btctrler+0x36 : 1e05aaa >			  ## lbuf.c:77:13
 1e05aa2:    00 40             	r0 = [r0 + 0]			  ## lbuf.c:76:5
 1e05aa4:    20 f2 fa 1f       	if (r0 != r2) goto -12 <lbuf_alloc_btctrler+0x28 : 1e05a9c >
 1e05aa8:    17 18             	goto 46 <lbuf_alloc_btctrler+0x64 : 1e05ad8 >
 1e05aaa:    03 40             	r3 = [r0 + 0]			  ## lbuf.c:83:61
 1e05aac:    12 40             	r2 = [r0 + 4]			  ## lbuf.c:83:46
 1e05aae:    c5 92             	r5 = r1 + 12			  ## lbuf.c:80:26
 1e05ab0:    56 f2 07 90       	if (r6 <= r5) goto 14 <lbuf_alloc_btctrler+0x4E : 1e05ac2 >
 1e05ab4:    45 b0             	r5 = r0 + r1			  ## lbuf.c:81:44
 1e05ab6:    66 bc             	r6 = r6 - r1			  ## lbuf.c:82:31
 1e05ab8:    4e 5a             	h[r5 + 8] = r6			  ## lbuf.c:82:22
 1e05aba:    1d 46             	[r3 + 4] = r5			  ## list.h:137:16
 1e05abc:    0b 4a             	[r5 + 0] = r3			  ## list.h:138:16
 1e05abe:    53 08             	r3 = r5			  ## list.h:138:16
 1e05ac0:    01 18             	goto 2 <lbuf_alloc_btctrler+0x50 : 1e05ac4 >
 1e05ac2:    61 08             	r1 = r6
 1e05ac4:    1a 46             	[r3 + 4] = r2
 1e05ac6:    0b 44             	[r2 + 0] = r3
 1e05ac8:    2c 40             	[r0 + 8] = r4			  ## lbuf.c:95:21
 1e05aca:    02 70             	r2 = 0			  ## lbuf.c:96:22
 1e05acc:    ea 60             	b[r0 + 14] = r2			  ## lbuf.c:96:22
 1e05ace:    69 50             	h[r0 + 12] = r1			  ## lbuf.c:97:20
 1e05ad0:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:98:20
 1e05ad2:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e05ad4:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e05ad6:    05 91             	r5 = r0 + 16			  ## lbuf.c:105:21
 1e05ad8:    98 f3 5e 09       	call 3150524 <local_irq_enable : 106d98 >			  ## lbuf.c:115:5
 1e05adc:    50 08             	r0 = r5			  ## lbuf.c:116:5
 1e05ade:    57 01             	{pc, r7-r4} = [sp++]			  ## lbuf.c:116:5


hw_dma_alloc:
 1e05ae0:    34 00             	[--sp] = rets			  ## hw_dma.c:45:0
 1e05ae2:    12 08             	r2 = r1			  ## hw_dma.c:45:0
 1e05ae4:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## hw_dma.c:45:0
 1e05aea:    06 20             	if (r0 == 0) goto 12 <hw_dma_alloc+0x18 : 1e05af8 >			  ## hw_dma.c:45:0
 1e05aec:    00 f6 b8 10       	r0 = [r1 + 184]			  ## hw_dma.c:45:0
 1e05af0:    13 fc b8 00       	r3 = r1 + 184			  ## hw_dma.c:45:0
 1e05af4:    08 30             	if (r0 != 0) goto 16 <hw_dma_alloc+0x26 : 1e05b06 >			  ## hw_dma.c:45:0
 1e05af6:    05 18             	goto 10 <hw_dma_alloc+0x22 : 1e05b02 >			  ## hw_dma.c:45:0
 1e05af8:    00 f6 b4 10       	r0 = [r1 + 180]			  ## hw_dma.c:45:0
 1e05afc:    13 fc b4 00       	r3 = r1 + 180			  ## hw_dma.c:45:0
 1e05b00:    02 30             	if (r0 != 0) goto 4 <hw_dma_alloc+0x26 : 1e05b06 >			  ## hw_dma.c:45:0
 1e05b02:    8f f3 fd eb       	call 2086906 <p33_soft_reset : 3300 >			  ## hw_dma.c:45:0
 1e05b06:    00 46             	r0 = [r3 + 0]			  ## hw_dma.c:45:0
 1e05b08:    21 08             	r1 = r2			  ## hw_dma.c:52:16
 1e05b0a:    88 01             	{rets} = [sp++]			  ## hw_dma.c:52:16
 1e05b0c:    b3 1f             	goto -154 <lbuf_alloc_btctrler : 1e05a74 >			  ## hw_dma.c:52:16


hw_dma_push:
 1e05b0e:    75 01             	[--sp] = {rets, r5, r4}			  ## hw_dma.c:68:0
 1e05b10:    14 08             	r4 = r1			  ## hw_dma.c:68:0
 1e05b12:    05 08             	r5 = r0			  ## hw_dma.c:68:0
 1e05b14:    98 f3 42 09       	call 3150468 <local_irq_disable : 106d9c >			  ## hw_dma.c:69:5
 1e05b18:    10 4a             	r0 = [r5 + 4]			  ## list.h:154:28
 1e05b1a:    1c 4a             	[r5 + 4] = r4			  ## list.h:137:16
 1e05b1c:    0d 48             	[r4 + 0] = r5			  ## list.h:138:16
 1e05b1e:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e05b20:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e05b22:    15 01             	{rets, r5, r4} = [sp++]			  ## hw_dma.c:71:5
 1e05b24:    d8 f3 38 09       	goto 3150448 <local_irq_enable : 106d98 >			  ## hw_dma.c:71:5


hw_dma_pop:
 1e05b28:    74 01             	[--sp] = {rets, r4}			  ## hw_dma.c:93:0
 1e05b2a:    04 40             	r4 = [r0 + 0]			  ## list.h:124:18
 1e05b2c:    04 f2 0b 00       	if (r4 == r0) goto 22 <hw_dma_pop+0x1E : 1e05b46 >			  ## list.h:124:18
 1e05b30:    98 f3 34 09       	call 3150440 <local_irq_disable : 106d9c >			  ## hw_dma.c:103:5
 1e05b34:    00 48             	r0 = [r4 + 0]			  ## list.h:171:36
 1e05b36:    11 48             	r1 = [r4 + 4]			  ## list.h:171:23
 1e05b38:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e05b3a:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e05b3c:    0c 48             	[r4 + 0] = r4			  ## list.h:172:17
 1e05b3e:    1c 48             	[r4 + 4] = r4			  ## list.h:173:17
 1e05b40:    98 f3 2a 09       	call 3150420 <local_irq_enable : 106d98 >			  ## hw_dma.c:105:5
 1e05b44:    01 18             	goto 2 <hw_dma_pop+0x20 : 1e05b48 >
 1e05b46:    04 70             	r4 = 0
 1e05b48:    40 08             	r0 = r4			  ## hw_dma.c:108:1
 1e05b4a:    54 01             	{pc, r4} = [sp++]			  ## hw_dma.c:108:1


btctler_little_endian_read_16:
 1e05b4c:    10 09             	r0 += r1			  ## btcontroller_util.c:43:0
 1e05b4e:    11 60             	r1 = b[r0 + 1] (u)			  ## btcontroller_util.c:44:51
 1e05b50:    00 60             	r0 = b[r0 + 0] (u)			  ## btcontroller_util.c:44:23
 1e05b52:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## btcontroller_util.c:44:48
 1e05b56:    20 04             	r0 = r0.l (u)			  ## btcontroller_util.c:44:5
 1e05b58:    20 00             	rts			  ## btcontroller_util.c:44:5


lbuf_push_btctrler:
 1e05b5a:    74 01             	[--sp] = {rets, r4}			  ## lbuf.c:197:0
 1e05b5c:    04 08             	r4 = r0			  ## lbuf.c:197:0
 1e05b5e:    98 f3 1d 09       	call 3150394 <local_irq_disable : 106d9c >			  ## lbuf.c:201:5
 1e05b62:    01 70             	r1 = 0			  ## lbuf.c:203:14
 1e05b64:    40 fc f0 ff       	r0 = r4 + -16			  ## lbuf.c:203:14
 1e05b68:    e9 60             	b[r0 + 14] = r1			  ## lbuf.c:203:14
 1e05b6a:    f1 60             	r1 = b[r0 + 15] (u)			  ## lbuf.c:204:15
 1e05b6c:    12 92             	r2 = r1 + 1			  ## lbuf.c:204:15
 1e05b6e:    fa 60             	b[r0 + 15] = r2			  ## lbuf.c:204:15
 1e05b70:    06 32             	if (r1 != 0) goto 12 <lbuf_push_btctrler+0x24 : 1e05b7e >			  ## lbuf.c:204:15
 1e05b72:    21 40             	r1 = [r0 + 8]			  ## lbuf.c:205:38
 1e05b74:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e05b76:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e05b78:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e05b7a:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e05b7c:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e05b7e:    14 01             	{rets, r4} = [sp++]			  ## lbuf.c:208:5
 1e05b80:    d8 f3 0a 09       	goto 3150356 <local_irq_enable : 106d98 >			  ## lbuf.c:208:5


thread_resume:
 1e05b84:    74 01             	[--sp] = {rets, r4}			  ## thread.c:143:0
 1e05b86:    04 08             	r4 = r0			  ## thread.c:143:0
 1e05b88:    98 f3 08 09       	call 3150352 <local_irq_disable : 106d9c >			  ## thread.c:150:5
 1e05b8c:    00 70             	r0 = 0			  ## thread.c:150:5
 1e05b8e:    68 69             	b[r4 + 22] = r0			  ## thread.c:151:25
 1e05b90:    50 69             	r0 = b[r4 + 21] (u)			  ## thread.c:152:27
 1e05b92:    11 70             	r1 = 1			  ## thread.c:152:22
 1e05b94:    01 ff ff 00 01 00 	if (r0 != 255) goto 2 <thread_resume+0x18 : 1e05b9c >			  ## thread.c:152:22
 1e05b9a:    01 70             	r1 = 0			  ## thread.c:152:22
 1e05b9c:    10 09             	r0 += r1			  ## thread.c:152:22
 1e05b9e:    58 69             	b[r4 + 21] = r0			  ## thread.c:152:20
 1e05ba0:    98 f3 fa 08       	call 3150324 <local_irq_enable : 106d98 >			  ## thread.c:154:5
 1e05ba4:    20 48             	r0 = [r4 + 8]			  ## thread.c:156:9
 1e05ba6:    50 40             	r0 = [r0 + 20]			  ## thread.c:156:16
 1e05ba8:    14 01             	{rets, r4} = [sp++]			  ## thread.c:156:5
 1e05baa:    90 00             	goto r0			  ## thread.c:156:5


btctler_nv_memory_malloc:
 1e05bac:    75 01             	[--sp] = {rets, r5, r4}			  ## btcontroller_heap.c:221:0
 1e05bae:    05 08             	r5 = r0			  ## btcontroller_heap.c:221:0
 1e05bb0:    80 f3 56 25       	call 19116 <malloc : 1e0a660 >			  ## btcontroller_heap.c:227:9
 1e05bb4:    04 08             	r4 = r0			  ## btcontroller_heap.c:227:9
 1e05bb6:    05 28             	if (r4 == 0) goto 10 <btctler_nv_memory_malloc+0x16 : 1e05bc2 >			  ## btcontroller_heap.c:228:9
 1e05bb8:    01 70             	r1 = 0			  ## btcontroller_heap.c:229:9
 1e05bba:    52 08             	r2 = r5			  ## btcontroller_heap.c:229:9
 1e05bbc:    98 f3 98 09       	call 3150640 <memset : 106ef0 >			  ## btcontroller_heap.c:229:9
 1e05bc0:    04 18             	goto 8 <btctler_nv_memory_malloc+0x1E : 1e05bca >			  ## btcontroller_heap.c:229:9
 1e05bc2:    28 fb 00 03       	r0 = rets			  ## btcontroller_heap.c:235:9
 1e05bc6:    8f f3 9b eb       	call 2086710 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e05bca:    40 08             	r0 = r4			  ## btcontroller_heap.c:239:5
 1e05bcc:    55 01             	{pc, r5, r4} = [sp++]			  ## btcontroller_heap.c:239:5


__bt_malloc:
 1e05bce:    34 00             	[--sp] = rets			  ## btcontroller_heap.c:259:0
 1e05bd0:    ed 17             	call -38 <btctler_nv_memory_malloc : 1e05bac >			  ## btcontroller_heap.c:262:9
 1e05bd2:    02 08             	r2 = r0			  ## btcontroller_heap.c:262:9
 1e05bd4:    02 34             	if (r2 != 0) goto 4 <__bt_malloc+0xC : 1e05bda >
 1e05bd6:    8f f3 93 eb       	call 2086694 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e05bda:    20 08             	r0 = r2			  ## btcontroller_heap.c:265:5
 1e05bdc:    30 00             	pc = [sp++]			  ## btcontroller_heap.c:265:5


sys_timer_register:
 1e05bde:    02 08             	r2 = r0			  ## sys_timer.c:30:0
 1e05be0:    00 70             	r0 = 0			  ## sys_timer.c:31:12
 1e05be2:    c0 f3 f2 2d       	goto 23524 <sys_timer_add : 1e0b7ca >			  ## sys_timer.c:31:12


sys_timer_set_context:
 1e05be6:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:57:0
 1e05be8:    c0 f3 0e 30       	goto 24604 <sys_timer_set_user_data : 1e0bc08 >			  ## sys_timer.c:58:5


thread_schedule:
 1e05bec:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:27:0
 1e05bee:    04 08             	r4 = r0			  ## thread.c:27:0
 1e05bf0:    02 48             	r2 = [r4 + 0]			  ## thread.c:33:5
 1e05bf2:    42 f2 0a 00       	if (r2 == r4) goto 20 <thread_schedule+0x1E : 1e05c0a >
 1e05bf6:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:35:16
 1e05bf8:    05 44             	r5 = [r2 + 0]			  ## thread.c:35:16
 1e05bfa:    03 20             	if (r0 == 0) goto 6 <thread_schedule+0x16 : 1e05c02 >
 1e05bfc:    41 44             	r1 = [r2 + 16]			  ## thread.c:37:16
 1e05bfe:    20 08             	r0 = r2			  ## thread.c:37:13
 1e05c00:    81 00             	call r1			  ## thread.c:37:13
 1e05c02:    52 08             	r2 = r5
 1e05c04:    45 f2 f7 1f       	if (r5 != r4) goto -18 <thread_schedule+0xA : 1e05bf6 >
 1e05c08:    02 48             	r2 = [r4 + 0]
 1e05c0a:    42 f2 0f 00       	if (r2 == r4) goto 30 <thread_schedule+0x40 : 1e05c2c >
 1e05c0e:    50 65             	r0 = b[r2 + 21] (u)			  ## thread.c:43:16
 1e05c10:    04 20             	if (r0 == 0) goto 8 <thread_schedule+0x2E : 1e05c1a >			  ## thread.c:43:16
 1e05c12:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:43:34
 1e05c14:    0f 20             	if (r0 == 0) goto 30 <thread_schedule+0x48 : 1e05c34 >			  ## thread.c:43:34
 1e05c16:    8f f3 73 eb       	call 2086630 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e05c1a:    60 65             	r0 = b[r2 + 22] (u)			  ## thread.c:50:31
 1e05c1c:    03 f2 01 c0       	ifs (r3 > r0) goto 2 <thread_schedule+0x36 : 1e05c22 >
 1e05c20:    30 08             	r0 = r3			  ## thread.c:50:13
 1e05c22:    02 44             	r2 = [r2 + 0]
 1e05c24:    03 08             	r3 = r0
 1e05c26:    42 f2 f2 1f       	if (r2 != r4) goto -28 <thread_schedule+0x22 : 1e05c0e >
 1e05c2a:    00 00             	nop
 1e05c2c:    42 48             	r2 = [r4 + 16]			  ## thread.c:55:12
 1e05c2e:    01 04             	r1 = r0.b0 (u)			  ## thread.c:55:5
 1e05c30:    00 70             	r0 = 0			  ## thread.c:55:5
 1e05c32:    82 00             	call r2			  ## thread.c:55:5
 1e05c34:    55 01             	{pc, r5, r4} = [sp++]			  ## thread.c:56:1


thread_run:
 1e05c36:    da 1f             	goto -76 <thread_schedule : 1e05bec >			  ## thread.c:175:0


thread_suspend:
 1e05c38:    75 01             	[--sp] = {rets, r5, r4}			  ## thread.c:122:0
 1e05c3a:    15 08             	r5 = r1			  ## thread.c:122:0
 1e05c3c:    04 08             	r4 = r0			  ## thread.c:122:0
 1e05c3e:    98 f3 ad 08       	call 3150170 <local_irq_disable : 106d9c >			  ## thread.c:129:5
 1e05c42:    6d 69             	b[r4 + 22] = r5			  ## thread.c:130:25
 1e05c44:    07 3a             	if (r5 != 0) goto 14 <thread_suspend+0x1C : 1e05c54 >			  ## thread.c:130:25
 1e05c46:    52 69             	r2 = b[r4 + 21] (u)			  ## thread.c:133:31
 1e05c48:    21 fc ff ff       	r1 = r2 + -1			  ## thread.c:133:61
 1e05c4c:    00 70             	r0 = 0			  ## thread.c:133:26
 1e05c4e:    01 24             	if (r2 == 0) goto 2 <thread_suspend+0x1A : 1e05c52 >			  ## thread.c:133:26
 1e05c50:    10 08             	r0 = r1			  ## thread.c:133:26
 1e05c52:    58 69             	b[r4 + 21] = r0			  ## thread.c:133:24
 1e05c54:    15 01             	{rets, r5, r4} = [sp++]			  ## thread.c:137:5
 1e05c56:    d8 f3 9f 08       	goto 3150142 <local_irq_enable : 106d98 >			  ## thread.c:137:5


low_power_request:
 1e05c5a:    c0 ff c0 4e 00 00 	r0 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:700:0
 1e05c60:    01 f9 32 00       	r1 = b[r0 + 50] (u)			  ## power_hw.c:701:17
 1e05c64:    03 22             	if (r1 == 0) goto 6 <low_power_request+0x12 : 1e05c6c >			  ## power_hw.c:701:17
 1e05c66:    11 70             	r1 = 1			  ## power_hw.c:702:25
 1e05c68:    11 f9 30 00       	b[r0 + 48] = r1			  ## power_hw.c:702:25
 1e05c6c:    20 00             	rts			  ## power_hw.c:708:1


sdk_meky_check:
 1e05c6e:    c1 ff 7e 5c e0 01 	r1 = 31480958 <_mkey_check : 1e05c7e >			  ## key0_decode.c:137:0
 1e05c74:    00 70             	r0 = 0			  ## key0_decode.c:138:5
 1e05c76:    02 fb 40 1f       	r2 = 8000 <timer_pool+0xE4 : 1f40 >			  ## key0_decode.c:138:5
 1e05c7a:    c0 f3 9e 2d       	goto 23356 <sys_timeout_add : 1e0b7ba >			  ## key0_decode.c:138:5


_mkey_check:
 1e05c7e:    78 01             	[--sp] = {rets, r8-r4}			  ## key0_decode.c:80:0
 1e05c80:    de 0b             	sp += -68			  ## key0_decode.c:80:0
 1e05c82:    c6 ff a0 08 00 00 	r6 = 2208 <puk : 8a0 >			  ## key0_decode.c:80:0
 1e05c88:    07 4c             	r7 = [r6 + 0]			  ## key0_decode.c:84:22
 1e05c8a:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >
 1e05c90:    00 f6 00 80       	r0 = [r8 + 0]			  ## key0_decode.c:86:41
 1e05c94:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## key0_decode.c:86:46
 1e05c98:    08 03             	[sp+64] = r0
 1e05c9a:    00 03             	r0 = [sp+64]			  ## key0_decode.c:41:14
 1e05c9c:    04 03             	r4 = [sp+64]			  ## key0_decode.c:41:14
 1e05c9e:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <_mkey_check+0x28 : 1e05ca6 >			  ## key0_decode.c:41:9
 1e05ca2:    cc 02             	[sp+48] = r4			  ## key0_decode.c:42:33
 1e05ca4:    06 18             	goto 12 <_mkey_check+0x34 : 1e05cb2 >			  ## key0_decode.c:42:33
 1e05ca6:    00 a2             	r0 = sp + 32
 1e05ca8:    02 72             	r2 = 32			  ## key0_decode.c:44:9
 1e05caa:    41 08             	r1 = r4			  ## key0_decode.c:44:9
 1e05cac:    98 f3 1a 09       	call 3150388 <memcpy : 106ee4 >			  ## key0_decode.c:44:9
 1e05cb0:    c4 02             	r4 = [sp+48]			  ## key0_decode.c:44:9
 1e05cb2:    20 05             	r0 = r4.l (u)			  ## key0_decode.c:48:5
 1e05cb4:    05 a2             	r5 = sp + 32			  ## key0_decode.c:48:5
 1e05cb6:    02 72             	r2 = 32			  ## key0_decode.c:48:5
 1e05cb8:    03 70             	r3 = 0			  ## key0_decode.c:48:5
 1e05cba:    51 08             	r1 = r5			  ## key0_decode.c:48:5
 1e05cbc:    bf f3 59 d6       	call -21326 <doe : 1e00972 >			  ## key0_decode.c:48:5
 1e05cc0:    cc 02             	[sp+48] = r4			  ## key0_decode.c:50:29
 1e05cc2:    60 9a             	r0 = r5 + 6			  ## key0_decode.c:52:36
 1e05cc4:    a1 71             	r1 = 26			  ## key0_decode.c:52:15
 1e05cc6:    bf f3 79 d6       	call -21262 <CRC16 : 1e009bc >			  ## key0_decode.c:52:15
 1e05cca:    81 f5 24 00       	r1 = h[sp+36] (u)			  ## key0_decode.c:54:30
 1e05cce:    10 f2 06 10       	if (r0 != r1) goto 12 <_mkey_check+0x60 : 1e05cde >			  ## key0_decode.c:54:30
 1e05cd2:    00 03             	r0 = [sp+64]			  ## key0_decode.c:57:27
 1e05cd4:    c1 ff 98 36 6c f3 	r1 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:57:29
 1e05cda:    d0 b2             	r0 ^= r1			  ## key0_decode.c:57:29
 1e05cdc:    04 18             	goto 8 <_mkey_check+0x68 : 1e05ce6 >
 1e05cde:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:55:27
 1e05ce0:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:55:33
 1e05ce4:    d0 b2             	r0 ^= r1			  ## key0_decode.c:55:31
 1e05ce6:    08 4c             	[r6 + 0] = r0
 1e05ce8:    80 02             	r0 = [sp+32]			  ## key0_decode.c:60:37
 1e05cea:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:60:37
 1e05cec:    c5 ff 4a 4b 59 53 	r5 = 1398360906 <uECC_vli_cmp_unsafe+0x148DB4E : 1594b4a >			  ## key0_decode.c:60:20
 1e05cf2:    42 08             	r2 = r4			  ## key0_decode.c:60:20
 1e05cf4:    50 f2 02 00       	if (r0 == r5) goto 4 <_mkey_check+0x7E : 1e05cfc >			  ## key0_decode.c:60:20
 1e05cf8:    02 f6 04 80       	r2 = [r8 + 4]			  ## key0_decode.c:61:42
 1e05cfc:    d1 b4             	r1 ^= r2
 1e05cfe:    09 4c             	[r6 + 0] = r1
 1e05d00:    81 f5 3e 00       	r1 = h[sp+62] (u)			  ## key0_decode.c:66:25
 1e05d04:    f1 e0 03 10       	if (r1 != 15) goto 6 <_mkey_check+0x90 : 1e05d0e >			  ## key0_decode.c:66:9
 1e05d08:    c1 f5 27 00       	r1 = b[sp+39] (u)
 1e05d0c:    08 18             	goto 16 <_mkey_check+0xA0 : 1e05d1e >
 1e05d0e:    02 4c             	r2 = [r6 + 0]			  ## key0_decode.c:67:27
 1e05d10:    c1 f5 27 00       	r1 = b[sp+39] (u)			  ## key0_decode.c:67:47
 1e05d14:    03 f6 00 80       	r3 = [r8 + 0]			  ## key0_decode.c:67:68
 1e05d18:    d2 b2             	r2 ^= r1			  ## key0_decode.c:67:31
 1e05d1a:    d2 b6             	r2 ^= r3			  ## key0_decode.c:67:57
 1e05d1c:    0a 4c             	[r6 + 0] = r2			  ## key0_decode.c:67:13
 1e05d1e:    11 e0 01 10       	if (r1 != 1) goto 2 <_mkey_check+0xA6 : 1e05d24 >
 1e05d22:    40 08             	r0 = r4			  ## key0_decode.c:70:9
 1e05d24:    01 4c             	r1 = [r6 + 0]
 1e05d26:    d0 b2             	r0 ^= r1
 1e05d28:    08 4c             	[r6 + 0] = r0
 1e05d2a:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:89:17
 1e05d2c:    07 f2 3b 00       	if (r7 == r0) goto 118 <_mkey_check+0x128 : 1e05da6 >			  ## key0_decode.c:89:17
 1e05d30:    0f 4c             	[r6 + 0] = r7			  ## key0_decode.c:93:9
 1e05d32:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:95:14
 1e05d34:    c8 ff 98 36 6c f3 	r8 = 4083955352 <uECC_vli_cmp_unsafe+0x15BC69C : 16c3698 >			  ## key0_decode.c:95:18
 1e05d3a:    80 f2 37 00       	if (r0 == r8) goto 110 <_mkey_check+0x12E : 1e05dac >			  ## key0_decode.c:95:18
 1e05d3e:    00 4c             	r0 = [r6 + 0]			  ## key0_decode.c:98:27
 1e05d40:    e1 fd 80 00       	r0 = r0 ^ r8			  ## key0_decode.c:98:31
 1e05d44:    08 4c             	[r6 + 0] = r0			  ## key0_decode.c:98:13
 1e05d46:    01 4c             	r1 = [r6 + 0]			  ## key0_decode.c:100:23
 1e05d48:    04 a0             	r4 = sp + 0			  ## key0_decode.c:100:23
 1e05d4a:    02 72             	r2 = 32			  ## key0_decode.c:100:5
 1e05d4c:    40 08             	r0 = r4			  ## key0_decode.c:100:5
 1e05d4e:    98 f3 c9 08       	call 3150226 <memcpy : 106ee4 >			  ## key0_decode.c:100:5
 1e05d52:    47 02             	r7 = [sp+16]			  ## key0_decode.c:104:35
 1e05d54:    e0 05             	r0 = r7.l (u)			  ## key0_decode.c:105:5
 1e05d56:    02 72             	r2 = 32			  ## key0_decode.c:105:5
 1e05d58:    03 70             	r3 = 0			  ## key0_decode.c:105:5
 1e05d5a:    41 08             	r1 = r4			  ## key0_decode.c:105:5
 1e05d5c:    bf f3 09 d6       	call -21486 <doe : 1e00972 >			  ## key0_decode.c:105:5
 1e05d60:    4f 02             	[sp+16] = r7			  ## key0_decode.c:108:29
 1e05d62:    00 02             	r0 = [sp]			  ## key0_decode.c:110:37
 1e05d64:    50 f2 1f 10       	if (r0 != r5) goto 62 <_mkey_check+0x128 : 1e05da6 >			  ## key0_decode.c:110:37
 1e05d68:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## key0_decode.c:114:30
 1e05d6c:    10 e0 1b 10       	if (r0 != 1) goto 54 <_mkey_check+0x128 : 1e05da6 >			  ## key0_decode.c:114:30
 1e05d70:    80 f5 1e 00       	r0 = h[sp+30] (u)			  ## key0_decode.c:117:25
 1e05d74:    f0 e0 17 10       	if (r0 != 15) goto 46 <_mkey_check+0x128 : 1e05da6 >			  ## key0_decode.c:117:25
 1e05d78:    00 a0             	r0 = sp + 0
 1e05d7a:    60 80             	r0 += 6			  ## key0_decode.c:121:36
 1e05d7c:    a1 71             	r1 = 26			  ## key0_decode.c:121:15
 1e05d7e:    bf f3 1d d6       	call -21446 <CRC16 : 1e009bc >			  ## key0_decode.c:121:15
 1e05d82:    81 f5 04 00       	r1 = h[sp+4] (u)			  ## key0_decode.c:121:15
 1e05d86:    10 f2 02 00       	if (r0 == r1) goto 4 <_mkey_check+0x110 : 1e05d8e >			  ## key0_decode.c:121:15
 1e05d8a:    8f f3 b9 ea       	call 2086258 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e05d8e:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## efuse.c:9:22
 1e05d94:    e0 50             	r0 = h[r0 + 28] (u)			  ## efuse.c:9:22
 1e05d96:    81 f5 1a 00       	r1 = h[sp+26] (u)			  ## key0_decode.c:125:55
 1e05d9a:    82 f5 18 00       	r2 = h[sp+24] (u)			  ## key0_decode.c:125:30
 1e05d9e:    d0 b2             	r0 ^= r1			  ## key0_decode.c:125:42
 1e05da0:    50 b5             	r0 &= r2			  ## key0_decode.c:125:42
 1e05da2:    20 04             	r0 = r0.l (u)			  ## key0_decode.c:125:9
 1e05da4:    01 20             	if (r0 == 0) goto 2 <_mkey_check+0x12A : 1e05da8 >			  ## key0_decode.c:125:9
 1e05da6:    ff 1f             	goto -2 <_mkey_check+0x128 : 1e05da6 >			  ## key0_decode.c:133:5
 1e05da8:    18 f6 00 60       	[r6 + 0] = r8			  ## key0_decode.c:126:13
 1e05dac:    22 0a             	sp += 68
 1e05dae:    58 01             	{pc, r8-r4} = [sp++]			  ## key0_decode.c:134:1


__muldi3:
 1e05db0:    76 01             	[--sp] = {rets, r6-r4}
 1e05db2:    89 0e             	r1 = r1 * r2
 1e05db4:    80 fe 00 13       	r1 += r3 * r0
 1e05db8:    03 d4             	r3 = r0 >> 16
 1e05dba:    14 d4             	r4 = r2 >> 16
 1e05dbc:    80 fe 30 14       	r1 += r4 * r3
 1e05dc0:    20 04             	r0 = r0.l (u)
 1e05dc2:    a2 04             	r2 = r2.l (u)
 1e05dc4:    15 0e             	r5 = r2 * r0
 1e05dc6:    2e d4             	r6 = r5 >> 16
 1e05dc8:    80 fe 30 62       	r6 += r2 * r3
 1e05dcc:    32 d4             	r2 = r6 >> 16
 1e05dce:    81 b2             	r1 = r1 + r2
 1e05dd0:    a2 05             	r2 = r6.l (u)
 1e05dd2:    80 fe 00 24       	r2 += r4 * r0
 1e05dd6:    12 d4             	r2 = r2 >> 16
 1e05dd8:    81 b2             	r1 = r1 + r2
 1e05dda:    80 fe 00 64       	r6 += r4 * r0
 1e05dde:    60 05             	r0 = r5.l (u)
 1e05de0:    d0 fd 80 06       	r0 <= insert(r6, p:16, l:16)
 1e05de4:    56 01             	{pc, r6-r4} = [sp++]


__udivdi3:
 1e05de6:    74 01             	[--sp] = {rets, r4}
 1e05de8:    fe 0b             	sp += -4
 1e05dea:    04 70             	r4 = 0
 1e05dec:    0c 02             	[sp] = r4
 1e05dee:    80 f3 02 00       	call 4 <__udivmoddi4 : 1e05df6 >
 1e05df2:    02 0a             	sp += 4
 1e05df4:    54 01             	{pc, r4} = [sp++]


__udivmoddi4:
 1e05df6:    7e 01             	[--sp] = {rets, r14-r4}
 1e05df8:    08 f5 30 00       	r8 = [sp+48]
 1e05dfc:    10 22             	if (r1 == 0) goto 32 <__udivmoddi4+0x28 : 1e05e1e >
 1e05dfe:    19 24             	if (r2 == 0) goto 50 <__udivmoddi4+0x3C : 1e05e32 >
 1e05e00:    33 26             	if (r3 == 0) goto 102 <__udivmoddi4+0x72 : 1e05e68 >
 1e05e02:    e8 fd 00 41       	r4 = clz(r1)
 1e05e06:    e8 fd 00 53       	r5 = clz(r3)
 1e05e0a:    24 bb             	r4 = r5 - r4
 1e05e0c:    04 e2 48 30       	if (r4 < 32) goto 144 <__udivmoddi4+0xAA : 1e05ea0 >
 1e05e10:    08 e0 56 00       	if (r8 == 0) goto 172 <__udivmoddi4+0xCA : 1e05ec0 >
 1e05e14:    10 f6 00 80       	[r8 + 0] = r0
 1e05e18:    11 f6 04 80       	[r8 + 4] = r1
 1e05e1c:    51 18             	goto 162 <__udivmoddi4+0xCA : 1e05ec0 >
 1e05e1e:    34 26             	if (r3 == 0) goto 104 <__udivmoddi4+0x92 : 1e05e88 >
 1e05e20:    08 e0 4e 00       	if (r8 == 0) goto 156 <__udivmoddi4+0xCA : 1e05ec0 >
 1e05e24:    01 70             	r1 = 0
 1e05e26:    11 f6 04 80       	[r8 + 4] = r1
 1e05e2a:    10 f6 00 80       	[r8 + 0] = r0
 1e05e2e:    00 70             	r0 = 0
 1e05e30:    5e 01             	{pc, r14-r4} = [sp++]
 1e05e32:    3d 26             	if (r3 == 0) goto 122 <__udivmoddi4+0xB8 : 1e05eae >
 1e05e34:    54 20             	if (r0 == 0) goto 168 <__udivmoddi4+0xE8 : 1e05ede >
 1e05e36:    34 fc ff ff       	r4 = r3 + -1
 1e05e3a:    34 f0 81 00       	if ((r4 & r3) == 0) goto 258 <__udivmoddi4+0x14A : 1e05f40 >
 1e05e3e:    e8 fd 00 41       	r4 = clz(r1)
 1e05e42:    e8 fd 00 53       	r5 = clz(r3)
 1e05e46:    24 bb             	r4 = r5 - r4
 1e05e48:    f4 e1 e2 2f       	if (r4 >= 31) goto -60 <__udivmoddi4+0x1A : 1e05e10 >
 1e05e4c:    1c 98             	r12 = r4 + 1
 1e05e4e:    fa fd c0 90       	r9 = r0 >> r12
 1e05e52:    64 fb 1f 49       	r4 = 31 - r4
 1e05e56:    f8 fd 40 71       	r7 = r1 << r4
 1e05e5a:    fa fd c0 b1       	r11 = r1 >> r12
 1e05e5e:    e0 fd 90 17       	r1 = r7 | r9
 1e05e62:    00 0d             	r0 <<= r4
 1e05e64:    0d 70             	r13 = 0
 1e05e66:    8b 18             	goto 278 <__udivmoddi4+0x188 : 1e05f7e >
 1e05e68:    24 fc ff ff       	r4 = r2 + -1
 1e05e6c:    24 f0 43 00       	if ((r4 & r2) == 0) goto 134 <__udivmoddi4+0x100 : 1e05ef6 >
 1e05e70:    e8 fd 00 41       	r4 = clz(r1)
 1e05e74:    e8 fd 00 52       	r5 = clz(r2)
 1e05e78:    15 82             	r5 += 33
 1e05e7a:    2c bb             	r12 = r5 - r4
 1e05e7c:    0b 70             	r11 = 0
 1e05e7e:    0c e2 50 10       	if (r12 != 32) goto 160 <__udivmoddi4+0x12C : 1e05f22 >
 1e05e82:    0d 70             	r13 = 0
 1e05e84:    0c 72             	r12 = 32
 1e05e86:    7b 18             	goto 246 <__udivmoddi4+0x188 : 1e05f7e >
 1e05e88:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xA2 : 1e05e98 >
 1e05e8c:    c1 f4 00 89       	[r8 + 4] = 0
 1e05e90:    d0 fe 20 10       	r1 = r0 % r2 (u)
 1e05e94:    11 f6 00 80       	[r8 + 0] = r1
 1e05e98:    c0 fe 20 00       	r0 = r0 / r2 (u)
 1e05e9c:    01 70             	r1 = 0
 1e05e9e:    5e 01             	{pc, r14-r4} = [sp++]
 1e05ea0:    1c 98             	r12 = r4 + 1
 1e05ea2:    0d 70             	r13 = 0
 1e05ea4:    0c e2 0f 10       	if (r12 != 32) goto 30 <__udivmoddi4+0xD0 : 1e05ec6 >
 1e05ea8:    0b 70             	r11 = 0
 1e05eaa:    0c 72             	r12 = 32
 1e05eac:    68 18             	goto 208 <__udivmoddi4+0x188 : 1e05f7e >
 1e05eae:    08 e0 07 00       	if (r8 == 0) goto 14 <__udivmoddi4+0xCA : 1e05ec0 >
 1e05eb2:    00 70             	r0 = 0
 1e05eb4:    10 f6 04 80       	[r8 + 4] = r0
 1e05eb8:    10 f6 00 80       	[r8 + 0] = r0
 1e05ebc:    01 70             	r1 = 0
 1e05ebe:    5e 01             	{pc, r14-r4} = [sp++]
 1e05ec0:    00 70             	r0 = 0
 1e05ec2:    01 70             	r1 = 0
 1e05ec4:    5e 01             	{pc, r14-r4} = [sp++]
 1e05ec6:    fa fd c0 90       	r9 = r0 >> r12
 1e05eca:    64 fb 1f 49       	r4 = 31 - r4
 1e05ece:    f8 fd 40 a1       	r10 = r1 << r4
 1e05ed2:    fa fd c0 b1       	r11 = r1 >> r12
 1e05ed6:    e0 fd 90 1a       	r1 = r10 | r9
 1e05eda:    00 0d             	r0 <<= r4
 1e05edc:    50 18             	goto 160 <__udivmoddi4+0x188 : 1e05f7e >
 1e05ede:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0xF8 : 1e05eee >
 1e05ee2:    c0 f4 00 89       	[r8 + 0] = 0
 1e05ee6:    d0 fe 30 01       	r0 = r1 % r3 (u)
 1e05eea:    10 f6 04 80       	[r8 + 4] = r0
 1e05eee:    c0 fe 30 01       	r0 = r1 / r3 (u)
 1e05ef2:    01 70             	r1 = 0
 1e05ef4:    5e 01             	{pc, r14-r4} = [sp++]
 1e05ef6:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x110 : 1e05f06 >
 1e05efa:    c1 f4 00 89       	[r8 + 4] = 0
 1e05efe:    e2 fd 00 34       	r3 = r4 & r0
 1e05f02:    13 f6 00 80       	[r8 + 0] = r3
 1e05f06:    12 e0 71 00       	if (r2 == 1) goto 226 <__udivmoddi4+0x1F6 : 1e05fec >
 1e05f0a:    e3 fd 20 24       	r2 = r4 & ~r2
 1e05f0e:    e8 fd 00 22       	r2 = clz(r2)
 1e05f12:    f8 fd 20 31       	r3 = r1 << r2
 1e05f16:    62 fb 20 29       	r2 = 32 - r2
 1e05f1a:    a0 0c             	r0 >>= r2
 1e05f1c:    50 b6             	r0 |= r3
 1e05f1e:    a1 0c             	r1 >>= r2
 1e05f20:    5e 01             	{pc, r14-r4} = [sp++]
 1e05f22:    fc e1 1f 80       	if (r12 > 31) goto 62 <__udivmoddi4+0x16E : 1e05f64 >
 1e05f26:    fa fd c0 90       	r9 = r0 >> r12
 1e05f2a:    67 fb 20 c9       	r7 = 32 - r12
 1e05f2e:    f8 fd 70 41       	r4 = r1 << r7
 1e05f32:    fa fd c0 b1       	r11 = r1 >> r12
 1e05f36:    e0 fd 90 14       	r1 = r4 | r9
 1e05f3a:    c0 0d             	r0 <<= r7
 1e05f3c:    0d 70             	r13 = 0
 1e05f3e:    1f 18             	goto 62 <__udivmoddi4+0x188 : 1e05f7e >
 1e05f40:    08 e0 06 00       	if (r8 == 0) goto 12 <__udivmoddi4+0x15A : 1e05f50 >
 1e05f44:    10 f6 00 80       	[r8 + 0] = r0
 1e05f48:    e2 fd 10 04       	r0 = r4 & r1
 1e05f4c:    10 f6 04 80       	[r8 + 4] = r0
 1e05f50:    e3 fd 30 04       	r0 = r4 & ~r3
 1e05f54:    e8 fd 00 00       	r0 = clz(r0)
 1e05f58:    60 fb 20 09       	r0 = 32 - r0
 1e05f5c:    fa fd 00 01       	r0 = r1 >> r0
 1e05f60:    01 70             	r1 = 0
 1e05f62:    5e 01             	{pc, r14-r4} = [sp++]
 1e05f64:    c4 fc e0 ff       	r4 = r12 + -32
 1e05f68:    fa fd 40 90       	r9 = r0 >> r4
 1e05f6c:    67 fb 40 c9       	r7 = 64 - r12
 1e05f70:    f8 fd 70 a1       	r10 = r1 << r7
 1e05f74:    f8 fd 70 d0       	r13 = r0 << r7
 1e05f78:    e0 fd 90 0a       	r0 = r10 | r9
 1e05f7c:    21 0d             	r1 >>= r4
 1e05f7e:    f4 07             	r4 = -1
 1e05f80:    59 fb 01 29       	r9 = r2 - 1
 1e05f84:    a0 fb 40 a3       	r10 = r3 + r4 + c
 1e05f88:    0e 70             	r14 = 0
 1e05f8a:    1e 18             	goto 60 <__udivmoddi4+0x1D2 : 1e05fc8 >
 1e05f8c:    c6 d7             	r6 = r0 >> 31
 1e05f8e:    df fd 08 61       	r6 <= insert(r1, p:1, l:31)
 1e05f92:    cd d7             	r5 = r1 >> 31
 1e05f94:    df fd 08 5b       	r5 <= insert(r11, p:1, l:31)
 1e05f98:    90 fb 60 19       	r1 = r9 - r6
 1e05f9c:    b0 fb 50 1a       	r1 = r10 - r5 - !c
 1e05fa0:    cf df             	r7 = r1 >>> 31
 1e05fa2:    e2 fd 20 17       	r1 = r7 & r2
 1e05fa6:    e2 fd 30 47       	r4 = r7 & r3
 1e05faa:    61 bc             	r1 = r6 - r1
 1e05fac:    b0 fb 40 b5       	r11 = r5 - r4 - !c
 1e05fb0:    f0 fd 08 4d       	r4 = r13 << 1
 1e05fb4:    f2 fd f8 5d       	r5 = r13 >> 31
 1e05fb8:    e0 fd 40 de       	r13 = r14 | r4
 1e05fbc:    2e fd 01 79       	r14 = r7 & 1
 1e05fc0:    df fd 08 50       	r5 <= insert(r0, p:1, l:31)
 1e05fc4:    fc 8f             	r12 += -1
 1e05fc6:    50 08             	r0 = r5
 1e05fc8:    0c e0 e0 1f       	if (r12 != 0) goto -64 <__udivmoddi4+0x196 : 1e05f8c >
 1e05fcc:    f2 fd f8 2d       	r2 = r13 >> 31
 1e05fd0:    df fd 08 20       	r2 <= insert(r0, p:1, l:31)
 1e05fd4:    f0 fd 08 0d       	r0 = r13 << 1
 1e05fd8:    08 e0 04 00       	if (r8 == 0) goto 8 <__udivmoddi4+0x1EE : 1e05fe4 >
 1e05fdc:    1b f6 04 80       	[r8 + 4] = r11
 1e05fe0:    11 f6 00 80       	[r8 + 0] = r1
 1e05fe4:    70 b0             	r0 &= 4294967294
 1e05fe6:    e0 fd e0 00       	r0 = r0 | r14
 1e05fea:    21 08             	r1 = r2
 1e05fec:    5e 01             	{pc, r14-r4} = [sp++]


__umoddi3:
 1e05fee:    74 01             	[--sp] = {rets, r4}
 1e05ff0:    fa 0b             	sp += -12
 1e05ff2:    44 a0             	r4 = sp + 4
 1e05ff4:    0c 02             	[sp] = r4
 1e05ff6:    bf f3 fe fe       	call -516 <__udivmoddi4 : 1e05df6 >
 1e05ffa:    21 02             	r1 = [sp+8]
 1e05ffc:    10 02             	r0 = [sp+4]
 1e05ffe:    06 0a             	sp += 12
 1e06000:    54 01             	{pc, r4} = [sp++]


__addsf3:
 1e06002:    77 01             	[--sp] = {rets, r7-r4}
 1e06004:    33 fd 80 0c       	r3 = r0 & 2147483647
 1e06008:    32 fc ff ff       	r2 = r3 + -1
 1e0600c:    c4 ff fe ff 7f 7f 	r4 = 2139095038 <uECC_vli_cmp_unsafe+0x16F9002 : 17ffffe >
 1e06012:    35 fd 80 1c       	r5 = r1 & 2147483647
 1e06016:    42 f2 1c 80       	if (r2 > r4) goto 56 <__addsf3+0x50 : 1e06052 >
 1e0601a:    52 fc ff ff       	r2 = r5 + -1
 1e0601e:    14 98             	r4 = r4 + 1
 1e06020:    42 f2 17 20       	if (r2 >= r4) goto 46 <__addsf3+0x50 : 1e06052 >
 1e06024:    02 08             	r2 = r0
 1e06026:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x2A : 1e0602c >
 1e0602a:    12 08             	r2 = r1
 1e0602c:    c6 ff ff ff 7f 00 	r6 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e06032:    e2 fd 60 42       	r4 = r2 & r6
 1e06036:    35 f2 01 80       	if (r5 > r3) goto 2 <__addsf3+0x3A : 1e0603c >
 1e0603a:    01 08             	r1 = r0
 1e0603c:    e2 fd 60 31       	r3 = r1 & r6
 1e06040:    c8 d5             	r0 = r1 >> 23
 1e06042:    88 fd b8 52       	r5 = uextra(r2, p:23, l:8)
 1e06046:    60 ff ff 09 10 00 	if ((r0 & 255) == 0) goto 32 <__addsf3+0x6A : 1e0606c >
 1e0604c:    00 04             	r0 = r0.b0 (u)
 1e0604e:    1d 3a             	if (r5 != 0) goto 58 <__addsf3+0x88 : 1e0608a >
 1e06050:    15 18             	goto 42 <__addsf3+0x7A : 1e0607c >
 1e06052:    c2 ff 01 00 80 7f 	r2 = 2139095041 <uECC_vli_cmp_unsafe+0x16F9005 : 1800001 >
 1e06058:    23 f2 03 30       	if (r3 < r2) goto 6 <__addsf3+0x60 : 1e06062 >
 1e0605c:    02 fd 40 0b       	r2 = r0 | 4194304
 1e06060:    7a 18             	goto 244 <__addsf3+0x154 : 1e06156 >
 1e06062:    25 f2 66 30       	if (r5 < r2) goto 204 <__addsf3+0x130 : 1e06132 >
 1e06066:    02 fd 40 1b       	r2 = r1 | 4194304
 1e0606a:    75 18             	goto 234 <__addsf3+0x154 : 1e06156 >
 1e0606c:    e8 fd 00 03       	r0 = clz(r3)
 1e06070:    06 fc f8 ff       	r6 = r0 + -8
 1e06074:    83 0d             	r3 <<= r6
 1e06076:    60 fb 09 09       	r0 = 9 - r0
 1e0607a:    07 3a             	if (r5 != 0) goto 14 <__addsf3+0x88 : 1e0608a >
 1e0607c:    e8 fd 00 54       	r5 = clz(r4)
 1e06080:    56 fc f8 ff       	r6 = r5 + -8
 1e06084:    84 0d             	r4 <<= r6
 1e06086:    65 fb 09 59       	r5 = 9 - r5
 1e0608a:    65 b1             	r5 = r0 - r5
 1e0608c:    d2 b2             	r2 ^= r1
 1e0608e:    e4 c0             	r4 = r4 << 3
 1e06090:    14 bd             	r4 |= 67108864
 1e06092:    db c0             	r3 = r3 << 3
 1e06094:    0d 2a             	if (r5 == 0) goto 26 <__addsf3+0xAE : 1e060b0 >
 1e06096:    16 70             	r6 = 1
 1e06098:    f5 e1 0b 80       	if (r5 > 31) goto 22 <__addsf3+0xB0 : 1e060b2 >
 1e0609c:    66 fb 20 59       	r6 = 32 - r5
 1e060a0:    f8 fd 60 74       	r7 = r4 << r6
 1e060a4:    16 70             	r6 = 1
 1e060a6:    01 3e             	if (r7 != 0) goto 2 <__addsf3+0xA8 : 1e060aa >
 1e060a8:    06 70             	r6 = 0
 1e060aa:    64 0d             	r4 >>= r5
 1e060ac:    56 b8             	r6 |= r4
 1e060ae:    01 18             	goto 2 <__addsf3+0xB0 : 1e060b2 >
 1e060b0:    46 08             	r6 = r4
 1e060b2:    04 fd 04 3c       	r4 = r3 | 67108864
 1e060b6:    f2 ef 0a d0       	ifs (r2 <= -1) goto 20 <__addsf3+0xCC : 1e060ce >
 1e060ba:    02 bd             	r2 = r6 + r4
 1e060bc:    1b f3 10 20       	if ((r2 & 134217728) == 0) goto 32 <__addsf3+0xDE : 1e060e0 >
 1e060c0:    83 b7             	r3 = r3 + r6
 1e060c2:    23 fd 01 39       	r3 = r3 & 1
 1e060c6:    52 d0             	r2 = r2 >> 1
 1e060c8:    52 b6             	r2 |= r3
 1e060ca:    10 90             	r0 = r0 + 1
 1e060cc:    09 18             	goto 18 <__addsf3+0xDE : 1e060e0 >
 1e060ce:    a2 b9             	r2 = r4 - r6
 1e060d0:    3c 24             	if (r2 == 0) goto 120 <__addsf3+0x148 : 1e0614a >
 1e060d2:    93 d6             	r3 = r2 >> 26
 1e060d4:    05 36             	if (r3 != 0) goto 10 <__addsf3+0xDE : 1e060e0 >
 1e060d6:    e8 fd 00 32       	r3 = clz(r2)
 1e060da:    b3 8f             	r3 += -5
 1e060dc:    e0 b0             	r0 = r0 - r3
 1e060de:    c2 0c             	r2 <<= r3
 1e060e0:    21 fd 80 1c       	r1 = r1 & 2147483648
 1e060e4:    0b ff ff 00 03 00 	ifs (r0 < 255) goto 6 <__addsf3+0xEE : 1e060f0 >
 1e060ea:    02 fd ff 18       	r2 = r1 | 2139095040
 1e060ee:    33 18             	goto 102 <__addsf3+0x154 : 1e06156 >
 1e060f0:    00 e0 0c c0       	ifs (r0 > 0) goto 24 <__addsf3+0x10A : 1e0610c >
 1e060f4:    63 fb 01 09       	r3 = 1 - r0
 1e060f8:    60 fb 20 39       	r0 = 32 - r3
 1e060fc:    f8 fd 00 52       	r5 = r2 << r0
 1e06100:    00 70             	r0 = 0
 1e06102:    14 70             	r4 = 1
 1e06104:    01 3a             	if (r5 != 0) goto 2 <__addsf3+0x106 : 1e06108 >
 1e06106:    04 70             	r4 = 0
 1e06108:    e2 0c             	r2 >>= r3
 1e0610a:    52 b8             	r2 |= r4
 1e0610c:    23 fd 07 29       	r3 = r2 & 7
 1e06110:    14 70             	r4 = 1
 1e06112:    43 e0 01 80       	if (r3 > 4) goto 2 <__addsf3+0x116 : 1e06118 >
 1e06116:    04 70             	r4 = 0
 1e06118:    c0 c5             	r0 = r0 << 23
 1e0611a:    50 b2             	r0 |= r1
 1e0611c:    97 fd 18 12       	r1 = uextra(r2, p:3, l:23)
 1e06120:    50 b2             	r0 |= r1
 1e06122:    00 b1             	r0 = r0 + r4
 1e06124:    21 fd 01 09       	r1 = r0 & 1
 1e06128:    43 e0 01 00       	if (r3 == 4) goto 2 <__addsf3+0x12C : 1e0612e >
 1e0612c:    01 70             	r1 = 0
 1e0612e:    02 b2             	r2 = r1 + r0
 1e06130:    12 18             	goto 36 <__addsf3+0x154 : 1e06156 >
 1e06132:    21 ff ff 38 0b 00 	if (r3 != 2139095040) goto 22 <__addsf3+0x14C : 1e0614e >
 1e06138:    d1 b0             	r1 ^= r0
 1e0613a:    21 ff 80 1c 03 00 	if (r1 != 2147483648) goto 6 <__addsf3+0x144 : 1e06146 >
 1e06140:    c0 ff 00 00 c0 7f 	r0 = 2143289344 <uECC_vli_cmp_unsafe+0x1AF9004 : 1c00000 >
 1e06146:    02 08             	r2 = r0
 1e06148:    06 18             	goto 12 <__addsf3+0x154 : 1e06156 >
 1e0614a:    02 70             	r2 = 0
 1e0614c:    04 18             	goto 8 <__addsf3+0x154 : 1e06156 >
 1e0614e:    21 ff ff 58 03 00 	if (r5 != 2139095040) goto 6 <__addsf3+0x158 : 1e0615a >
 1e06154:    12 08             	r2 = r1
 1e06156:    20 08             	r0 = r2
 1e06158:    57 01             	{pc, r7-r4} = [sp++]
 1e0615a:    03 26             	if (r3 == 0) goto 6 <__addsf3+0x160 : 1e06162 >
 1e0615c:    02 08             	r2 = r0
 1e0615e:    62 3b             	if (r5 != 0) goto -316 <__addsf3+0x22 : 1e06024 >
 1e06160:    fa 1f             	goto -12 <__addsf3+0x154 : 1e06156 >
 1e06162:    12 08             	r2 = r1
 1e06164:    f8 3b             	if (r5 != 0) goto -16 <__addsf3+0x154 : 1e06156 >
 1e06166:    e2 fd 00 21       	r2 = r1 & r0
 1e0616a:    f5 1f             	goto -22 <__addsf3+0x154 : 1e06156 >


__fixsfsi:
 1e0616c:    74 01             	[--sp] = {rets, r4}
 1e0616e:    01 08             	r1 = r0
 1e06170:    88 fd b8 21       	r2 = uextra(r1, p:23, l:8)
 1e06174:    00 70             	r0 = 0
 1e06176:    f2 e7 1e 30       	if (r2 < 127) goto 60 <__fixsfsi+0x4A : 1e061b6 >
 1e0617a:    23 fc 81 ff       	r3 = r2 + -127
 1e0617e:    c8 df             	r0 = r1 >>> 31
 1e06180:    10 b0             	r0 |= 1
 1e06182:    03 e2 05 30       	if (r3 < 32) goto 10 <__fixsfsi+0x24 : 1e06190 >
 1e06186:    10 e0 0e 00       	if (r0 == 1) goto 28 <__fixsfsi+0x3A : 1e061a6 >
 1e0618a:    20 fb 80 0c       	r0 = 2147483648
 1e0618e:    54 01             	{pc, r4} = [sp++]
 1e06190:    c4 ff ff ff 7f 00 	r4 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >
 1e06196:    51 b9             	r1 &= r4
 1e06198:    91 bb             	r1 |= 8388608
 1e0619a:    63 e1 08 c0       	ifs (r3 > 22) goto 16 <__fixsfsi+0x42 : 1e061ae >
 1e0619e:    62 fb 96 29       	r2 = 150 - r2
 1e061a2:    a1 0c             	r1 >>= r2
 1e061a4:    07 18             	goto 14 <__fixsfsi+0x48 : 1e061b4 >
 1e061a6:    c0 ff ff ff ff 7f 	r0 = 2147483647 <bank_code_load_addr+0x1E5753 : 1ffffff >
 1e061ac:    54 01             	{pc, r4} = [sp++]
 1e061ae:    22 fc 6a ff       	r2 = r2 + -150
 1e061b2:    81 0c             	r1 <<= r2
 1e061b4:    08 0e             	r0 = r1 * r0
 1e061b6:    54 01             	{pc, r4} = [sp++]


__floatsisf:
 1e061b8:    75 01             	[--sp] = {rets, r5, r4}
 1e061ba:    10 20             	if (r0 == 0) goto 32 <__floatsisf+0x24 : 1e061dc >
 1e061bc:    c1 df             	r1 = r0 >>> 31
 1e061be:    42 b0             	r2 = r0 + r1
 1e061c0:    d2 b2             	r2 ^= r1
 1e061c2:    e8 fd 00 12       	r1 = clz(r2)
 1e061c6:    11 fd 1f 19       	r1 = r1 ^ 31
 1e061ca:    20 fd 80 0c       	r0 = r0 & 2147483648
 1e061ce:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatsisf+0x28 : 1e061e0 >
 1e061d2:    63 fb 17 19       	r3 = 23 - r1
 1e061d6:    c2 0c             	r2 <<= r3
 1e061d8:    b2 bb             	r2 ^= 8388608
 1e061da:    18 18             	goto 48 <__floatsisf+0x54 : 1e0620c >
 1e061dc:    00 70             	r0 = 0
 1e061de:    55 01             	{pc, r5, r4} = [sp++]
 1e061e0:    63 fb 37 19       	r3 = 55 - r1
 1e061e4:    f8 fd 30 42       	r4 = r2 << r3
 1e061e8:    13 70             	r3 = 1
 1e061ea:    28 ff 80 4c 01 00 	if (r4 > 2147483648) goto 2 <__floatsisf+0x3A : 1e061f2 >
 1e061f0:    03 70             	r3 = 0
 1e061f2:    15 fc e9 ff       	r5 = r1 + -23
 1e061f6:    62 0d             	r2 >>= r5
 1e061f8:    85 b6             	r5 = r3 + r2
 1e061fa:    25 fd 01 59       	r5 = r5 & 1
 1e061fe:    20 ff 80 4c 01 00 	if (r4 == 2147483648) goto 2 <__floatsisf+0x4E : 1e06206 >
 1e06204:    05 70             	r5 = 0
 1e06206:    b2 bb             	r2 ^= 8388608
 1e06208:    c2 b4             	r2 = r2 + r3
 1e0620a:    42 b5             	r2 = r2 + r5
 1e0620c:    c9 c5             	r1 = r1 << 23
 1e0620e:    81 b2             	r1 = r1 + r2
 1e06210:    41 fb 7e 18       	r1 = r1 + 1065353216
 1e06214:    50 b2             	r0 |= r1
 1e06216:    55 01             	{pc, r5, r4} = [sp++]


__floatunsisf:
 1e06218:    74 01             	[--sp] = {rets, r4}
 1e0621a:    0b 20             	if (r0 == 0) goto 22 <__floatunsisf+0x1A : 1e06232 >
 1e0621c:    e8 fd 00 10       	r1 = clz(r0)
 1e06220:    11 fd 1f 19       	r1 = r1 ^ 31
 1e06224:    71 e1 07 80       	if (r1 > 23) goto 14 <__floatunsisf+0x1E : 1e06236 >
 1e06228:    62 fb 17 19       	r2 = 23 - r1
 1e0622c:    80 0c             	r0 <<= r2
 1e0622e:    b0 bb             	r0 ^= 8388608
 1e06230:    18 18             	goto 48 <__floatunsisf+0x4A : 1e06262 >
 1e06232:    00 70             	r0 = 0
 1e06234:    54 01             	{pc, r4} = [sp++]
 1e06236:    62 fb 37 19       	r2 = 55 - r1
 1e0623a:    f8 fd 20 30       	r3 = r0 << r2
 1e0623e:    12 70             	r2 = 1
 1e06240:    28 ff 80 3c 01 00 	if (r3 > 2147483648) goto 2 <__floatunsisf+0x30 : 1e06248 >
 1e06246:    02 70             	r2 = 0
 1e06248:    14 fc e9 ff       	r4 = r1 + -23
 1e0624c:    20 0d             	r0 >>= r4
 1e0624e:    04 b4             	r4 = r2 + r0
 1e06250:    24 fd 01 49       	r4 = r4 & 1
 1e06254:    20 ff 80 3c 01 00 	if (r3 == 2147483648) goto 2 <__floatunsisf+0x44 : 1e0625c >
 1e0625a:    04 70             	r4 = 0
 1e0625c:    b0 bb             	r0 ^= 8388608
 1e0625e:    80 b0             	r0 = r0 + r2
 1e06260:    00 b1             	r0 = r0 + r4
 1e06262:    c9 c5             	r1 = r1 << 23
 1e06264:    40 b0             	r0 = r0 + r1
 1e06266:    40 fb 7e 08       	r0 = r0 + 1065353216
 1e0626a:    54 01             	{pc, r4} = [sp++]


__subsf3:
 1e0626c:    11 fd 80 1c       	r1 = r1 ^ 2147483648
 1e06270:    ff f3 c7 fe       	goto -626 <__addsf3 : 1e06002 >


btstack_code_start:
 1e06274:    01 00             	nop
 1e06276:    00 00             	nop
 1e06278:    e4 9a             	r4 = r5 + 14
 1e0627a:    e0 01             	[--sp] = {psr}
 1e0627c:    00 9b             	r0 = r5 + 16
 1e0627e:    e0 01             	[--sp] = {psr}
 1e06280:    02 9b             	r2 = r5 + 16
 1e06282:    e0 01             	[--sp] = {psr}
 1e06284:    00 00             	nop
 1e06286:    00 00             	nop
 1e06288:    86 9b             	r6 = r5 + 24
 1e0628a:    e0 01             	[--sp] = {psr}
 1e0628c:    00 00             	nop
 1e0628e:    00 00             	nop


sdp_record_item_end:
 1e06290:    56 91             	r6 = r0 + 21
 1e06292:    e0 01             	[--sp] = {psr}
 1e06294:    6c 91             	r12 = r0 + 22
 1e06296:    e0 01             	[--sp] = {psr}
 1e06298:    88 91             	r8 = r0 + 24
 1e0629a:    e0 01             	[--sp] = {psr}


bt_suspend_a2dp_resumea2dp_release:
 1e0629c:    c2 9a             	r2 = r5 + 12
 1e0629e:    e0 01             	[--sp] = {psr}
 1e062a0:    c6 9a             	r6 = r5 + 12
 1e062a2:    e0 01             	[--sp] = {psr}
 1e062a4:    ca 9a             	r10 = r5 + 12
 1e062a6:    e0 01             	[--sp] = {psr}


bt_suspend_avctp_resumeavctp_release:
 1e062a8:    88 9b             	r8 = r5 + 24
 1e062aa:    e0 01             	[--sp] = {psr}
 1e062ac:    8c 9b             	r12 = r5 + 24
 1e062ae:    e0 01             	[--sp] = {psr}
 1e062b0:    90 9b             	r0 = r5 + 25
 1e062b2:    e0 01             	[--sp] = {psr}


bt_suspend_hfp_resumehfp_release:
 1e062b4:    96 9b             	r6 = r5 + 25
 1e062b6:    e0 01             	[--sp] = {psr}
 1e062b8:    9a 9b             	r10 = r5 + 25
 1e062ba:    e0 01             	[--sp] = {psr}
 1e062bc:    9e 9b             	r14 = r5 + 25
 1e062be:    e0 01             	[--sp] = {psr}


bt_suspend_hid_resumehid_release:
 1e062c0:    a2 9b             	r2 = r5 + 26
 1e062c2:    e0 01             	[--sp] = {psr}
 1e062c4:    a6 9b             	r6 = r5 + 26
 1e062c6:    e0 01             	[--sp] = {psr}
 1e062c8:    aa 9b             	r10 = r5 + 26
 1e062ca:    e0 01             	[--sp] = {psr}


bt_suspend_spp_resumespp_release:
 1e062cc:    ae 9b             	r14 = r5 + 26
 1e062ce:    e0 01             	[--sp] = {psr}
 1e062d0:    b2 9b             	r2 = r5 + 27
 1e062d2:    e0 01             	[--sp] = {psr}
 1e062d4:    b6 9b             	r6 = r5 + 27
 1e062d6:    e0 01             	[--sp] = {psr}


bt_suspend_sdp_resumesdp_release:
 1e062d8:    ba 9b             	r10 = r5 + 27
 1e062da:    e0 01             	[--sp] = {psr}
 1e062dc:    be 9b             	r14 = r5 + 27
 1e062de:    e0 01             	[--sp] = {psr}
 1e062e0:    c2 9b             	r2 = r5 + 28
 1e062e2:    e0 01             	[--sp] = {psr}


bt_suspend_iap_resumeiap_release:
 1e062e4:    c6 9b             	r6 = r5 + 28
 1e062e6:    e0 01             	[--sp] = {psr}
 1e062e8:    ca 9b             	r10 = r5 + 28
 1e062ea:    e0 01             	[--sp] = {psr}
 1e062ec:    ce 9b             	r14 = r5 + 28
 1e062ee:    e0 01             	[--sp] = {psr}


l2cap_signaling_commands_format:
 1e062f0:    42 e0 e0 01       	if (r2 == 4) goto 960 <ble_user_cmd_prepare+0x44 : 1e066b4 >
 1e062f4:    a9 e0 e0 01       	if (r9 == 10) goto 960 <ble_user_cmd_prepare+0x48 : 1e066b8 >
 1e062f8:    46 e0 e0 01       	if (r6 == 4) goto 960 <ble_user_cmd_prepare+0x4C : 1e066bc >
 1e062fc:    41 e0 e0 01       	if (r1 == 4) goto 960 <ble_user_cmd_prepare+0x50 : 1e066c0 >
 1e06300:    40 e0 e0 01       	if (r0 == 4) goto 960 <ble_user_cmd_prepare+0x54 : 1e066c4 >
 1e06304:    a9 e0 e0 01       	if (r9 == 10) goto 960 <ble_user_cmd_prepare+0x58 : 1e066c8 >
 1e06308:    a9 e0 e0 01       	if (r9 == 10) goto 960 <ble_user_cmd_prepare+0x5C : 1e066cc >
 1e0630c:    43 e0 e0 01       	if (r3 == 4) goto 960 <ble_user_cmd_prepare+0x60 : 1e066d0 >
 1e06310:    43 e0 e0 01       	if (r3 == 4) goto 960 <ble_user_cmd_prepare+0x64 : 1e066d4 >
 1e06314:    b6 e0 e0 01       	if (r6 == 11) goto 960 <ble_user_cmd_prepare+0x68 : 1e066d8 >
 1e06318:    41 e0 e0 01       	if (r1 == 4) goto 960 <ble_user_cmd_prepare+0x6C : 1e066dc >
 1e0631c:    00 00             	nop
 1e0631e:    00 00             	nop
 1e06320:    00 00             	nop
 1e06322:    00 00             	nop
 1e06324:    00 00             	nop
 1e06326:    00 00             	nop
 1e06328:    00 00             	nop
 1e0632a:    00 00             	nop
 1e0632c:    00 00             	nop
 1e0632e:    00 00             	nop
 1e06330:    00 00             	nop
 1e06332:    00 00             	nop
 1e06334:    46 e0 e0 01       	if (r6 == 4) goto 960 <.GJTIE25_0_0_+0x4 : 1e066f8 >
 1e06338:    b6 e0 e0 01       	if (r6 == 11) goto 960 <.GJTIE25_0_0_+0x8 : 1e066fc >
 1e0633c:    45 e0 e0 01       	if (r5 == 4) goto 960 <.GJTIE25_0_0_+0xC : 1e06700 >
 1e06340:    45 e0 e0 01       	if (r5 == 4) goto 960 <.GJTIE25_0_0_+0x10 : 1e06704 >
 1e06344:    a9 e0 e0 01       	if (r9 == 10) goto 960 <.GJTIE25_0_0_+0x14 : 1e06708 >


own_private_linkkey:
 1e06348:    06 77             	r6 = 112
 1e0634a:    5f 87             	r15 += 117
 1e0634c:    91 8d             	r1 += -39
 1e0634e:    d4 23             	if (r1 == 0) goto -88 <l2cap_signaling_commands_format+0x8 : 1e062f8 >
 1e06350:    00 5d             	r0 = h[r6 + 32] (u)
 1e06352:    f1 d8             	r1 = r6 >>> 3
 1e06354:    cf 0c             	r15 <<= r3
 1e06356:    14 2b             	if (r5 == 0) goto -472 <__fixsfsi+0x14 : 1e06180 >


crc_ta:
 1e06358:    00 00             	nop
 1e0635a:    21 10             	call 66 <multi_att_get_ccc_config+0x18 : 1e0639e >
 1e0635c:    42 20             	if (r0 == 0) goto 132 <user_data_cbuf_is_write_able+0x28 : 1e063e2 >
 1e0635e:    63 30             	if (r0 != 0) goto 198 <user_data_cbuf_is_write_able+0x6C : 1e06426 >
 1e06360:    84 40             	r4 = [r0 + 32]
 1e06362:    a5 50             	r5 = h[r0 + 20] (u)
 1e06364:    c6 60             	r6 = b[r0 + 12] (u)
 1e06366:    e7 70             	r7 = 14
 1e06368:    08 81             	r8 += 16
 1e0636a:    29 91             	r9 = r0 + 18
 1e0636c:    4a a1             	r10 = sp + 20
 1e0636e:    6b b1             	r11 = r0 - r5
 1e06370:    8c c1             	r4 = r1 << 6
 1e06372:    ad d1             	r5 = r5 >> 6
 1e06374:    ce e1 ef f1       	if (r14 ?? 28) goto 990 <.GJTIE25_1_1_+0x3E : 1e06756 >


little_endian_read_16:
 1e06378:    10 09             	r0 += r1			  ## utils.c:69:0
 1e0637a:    11 60             	r1 = b[r0 + 1] (u)			  ## utils.c:70:40
 1e0637c:    00 60             	r0 = b[r0 + 0] (u)			  ## utils.c:70:12
 1e0637e:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## utils.c:70:37
 1e06382:    20 04             	r0 = r0.l (u)			  ## utils.c:70:5
 1e06384:    20 00             	rts			  ## utils.c:70:5


multi_att_get_ccc_config:
 1e06386:    75 01             	[--sp] = {rets, r5, r4}			  ## att_send.c:260:0
 1e06388:    c2 ff c0 1b 00 00 	r2 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:263:9
 1e0638e:    02 44             	r2 = [r2 + 0]			  ## att_send.c:263:9
 1e06390:    0e 24             	if (r2 == 0) goto 28 <multi_att_get_ccc_config+0x28 : 1e063ae >			  ## att_send.c:263:9
 1e06392:    22 80             	r2 += 2			  ## att_send.c:268:5
 1e06394:    03 70             	r3 = 0			  ## att_send.c:268:5
 1e06396:    04 54             	r4 = h[r2 + 0] (u)			  ## att_send.c:269:32
 1e06398:    25 d1             	r5 = r4 >> 4			  ## att_send.c:269:32
 1e0639a:    05 f2 04 10       	if (r5 != r0) goto 8 <multi_att_get_ccc_config+0x20 : 1e063a6 >			  ## att_send.c:269:32
 1e0639e:    05 f7 fe 2f       	r5 = h[r2 + -2] (u)			  ## att_send.c:269:65
 1e063a2:    15 f2 06 00       	if (r5 == r1) goto 12 <multi_att_get_ccc_config+0x2C : 1e063b2 >			  ## att_send.c:269:65
 1e063a6:    13 80             	r3 += 1			  ## att_send.c:268:48
 1e063a8:    42 80             	r2 += 4			  ## att_send.c:268:23
 1e063aa:    83 e1 f4 bf       	ifs (r3 < 24) goto -24 <multi_att_get_ccc_config+0x10 : 1e06396 >			  ## att_send.c:268:23
 1e063ae:    00 70             	r0 = 0
 1e063b0:    02 18             	goto 4 <multi_att_get_ccc_config+0x30 : 1e063b6 >
 1e063b2:    20 fd 0f 49       	r0 = r4 & 15			  ## att_send.c:270:35
 1e063b6:    20 04             	r0 = r0.l (u)			  ## att_send.c:275:1
 1e063b8:    55 01             	{pc, r5, r4} = [sp++]			  ## att_send.c:275:1


user_data_cbuf_is_write_able:
 1e063ba:    76 01             	[--sp] = {rets, r6-r4}			  ## att_send.c:332:0
 1e063bc:    c5 ff c0 1b 00 00 	r5 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:332:0
 1e063c2:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:336:9
 1e063c4:    14 08             	r4 = r1			  ## att_send.c:336:9
 1e063c6:    10 24             	if (r2 == 0) goto 32 <user_data_cbuf_is_write_able+0x2E : 1e063e8 >
 1e063c8:    21 fc 62 00       	r1 = r2 + 98			  ## att_send.c:121:52
 1e063cc:    02 70             	r2 = 0			  ## att_send.c:121:52
 1e063ce:    03 70             	r3 = 0			  ## att_send.c:121:52
 1e063d0:    06 f7 fe 1f       	r6 = h[r1 + -2] (u)			  ## att_send.c:121:52
 1e063d4:    b6 d1             	r6 = r6 >> 6			  ## att_send.c:121:52
 1e063d6:    06 f2 09 00       	if (r6 == r0) goto 18 <user_data_cbuf_is_write_able+0x32 : 1e063ec >			  ## att_send.c:121:13
 1e063da:    12 80             	r2 += 1			  ## att_send.c:120:23
 1e063dc:    13 80             	r3 += 1			  ## att_send.c:120:43
 1e063de:    41 80             	r1 += 4			  ## att_send.c:120:23
 1e063e0:    83 e0 f6 bf       	ifs (r3 < 8) goto -20 <user_data_cbuf_is_write_able+0x16 : 1e063d0 >			  ## att_send.c:120:23
 1e063e4:    46 71             	r6 = 20
 1e063e6:    07 18             	goto 14 <user_data_cbuf_is_write_able+0x3C : 1e063f6 >
 1e063e8:    05 70             	r5 = 0
 1e063ea:    28 18             	goto 80 <user_data_cbuf_is_write_able+0x82 : 1e0643c >
 1e063ec:    80 04             	r0 = r2.b0 (u)			  ## att_send.c:342:19
 1e063ee:    46 71             	r6 = 20
 1e063f0:    70 e0 01 80       	if (r0 > 7) goto 2 <user_data_cbuf_is_write_able+0x3C : 1e063f6 >
 1e063f4:    06 52             	r6 = h[r1 + 0] (u)			  ## att_send.c:344:5
 1e063f6:    98 f3 d1 04       	call 3148194 <local_irq_disable : 106d9c >			  ## att_send.c:350:5
 1e063fa:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:351:17
 1e063fc:    01 f6 9c 00       	r1 = [r0 + 156]			  ## att_send.c:351:17
 1e06400:    00 f6 98 00       	r0 = [r0 + 152]			  ## att_send.c:351:17
 1e06404:    80 f3 b0 1f       	call 16224 <system_text_start : 1e0a368 >			  ## att_send.c:351:59
 1e06408:    21 b2             	r1 = r1 - r0			  ## att_send.c:351:57
 1e0640a:    05 70             	r5 = 0
 1e0640c:    00 70             	r0 = 0
 1e0640e:    71 e0 10 30       	if (r1 < 7) goto 32 <user_data_cbuf_is_write_able+0x78 : 1e06432 >
 1e06412:    60 9c             	r0 = r6 + 6			  ## att_send.c:347:46
 1e06414:    20 04             	r0 = r0.l (u)			  ## att_send.c:354:28
 1e06416:    01 f2 03 20       	if (r1 >= r0) goto 6 <user_data_cbuf_is_write_able+0x66 : 1e06420 >			  ## att_send.c:354:16
 1e0641a:    10 fc fa ff       	r0 = r1 + -6			  ## att_send.c:355:27
 1e0641e:    09 18             	goto 18 <user_data_cbuf_is_write_able+0x78 : 1e06432 >
 1e06420:    d0 fe 00 21       	r2 = r1 % r0 (u)			  ## att_send.c:358:31
 1e06424:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## att_send.c:357:28
 1e06428:    80 0f             	r0 = r0 * r6			  ## att_send.c:357:41
 1e0642a:    72 e0 02 30       	if (r2 < 7) goto 4 <user_data_cbuf_is_write_able+0x78 : 1e06432 >
 1e0642e:    20 09             	r0 += r2			  ## att_send.c:360:33
 1e06430:    a0 8f             	r0 += -6			  ## att_send.c:360:19
 1e06432:    40 f2 01 30       	if (r0 < r4) goto 2 <user_data_cbuf_is_write_able+0x7E : 1e06438 >
 1e06436:    05 08             	r5 = r0			  ## att_send.c:363:9
 1e06438:    98 f3 ae 04       	call 3148124 <local_irq_enable : 106d98 >			  ## att_send.c:368:5
 1e0643c:    50 08             	r0 = r5			  ## att_send.c:370:1
 1e0643e:    56 01             	{pc, r6-r4} = [sp++]			  ## att_send.c:370:1


user_data_att_send:
 1e06440:    7c 01             	[--sp] = {rets, r12-r4}			  ## att_send.c:391:0
 1e06442:    fc 0b             	sp += -8			  ## att_send.c:391:0
 1e06444:    c8 ff c0 1b 00 00 	r8 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:391:0
 1e0644a:    04 f6 00 80       	r4 = [r8 + 0]			  ## att_send.c:396:9
 1e0644e:    3c 08             	r12 = r3			  ## att_send.c:396:9
 1e06450:    29 08             	r9 = r2
 1e06452:    06 08             	r6 = r0
 1e06454:    0b 28             	if (r4 == 0) goto 22 <user_data_att_send+0x2C : 1e0646c >
 1e06456:    96 f5 00 00       	h[sp] = r6			  ## att_send.c:400:27
 1e0645a:    91 f5 02 00       	h[sp+2] = r1			  ## att_send.c:401:27
 1e0645e:    09 26             	if (r3 == 0) goto 18 <user_data_att_send+0x32 : 1e06472 >			  ## att_send.c:401:27
 1e06460:    c0 02             	r0 = [sp+48]
 1e06462:    0a 20             	if (r0 == 0) goto 20 <user_data_att_send+0x38 : 1e06478 >
 1e06464:    05 c3             	r5 = r0 << 12			  ## att_send.c:415:29
 1e06466:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:415:29
 1e0646a:    10 18             	goto 32 <user_data_att_send+0x4C : 1e0648c >			  ## att_send.c:415:29
 1e0646c:    04 fb 9e ff       	r4 = -98 <bank_code_load_addr+0x1E56F2 : 1ffff9e >
 1e06470:    64 18             	goto 200 <user_data_att_send+0xFA : 1e0653a >
 1e06472:    04 fb a1 ff       	r4 = -95 <bank_code_load_addr+0x1E56F5 : 1ffffa1 >
 1e06476:    61 18             	goto 194 <user_data_att_send+0xFA : 1e0653a >
 1e06478:    10 92             	r0 = r1 + 1			  ## att_send.c:410:76
 1e0647a:    21 04             	r1 = r0.l (u)			  ## att_send.c:410:31
 1e0647c:    60 08             	r0 = r6			  ## att_send.c:410:31
 1e0647e:    83 17             	call -250 <multi_att_get_ccc_config : 1e06386 >			  ## att_send.c:410:31
 1e06480:    05 c3             	r5 = r0 << 12			  ## att_send.c:410:29
 1e06482:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:410:29
 1e06486:    60 ff 0f 09 55 00 	if ((r0 & 15) == 0) goto 170 <user_data_att_send+0xF6 : 1e06536 >			  ## att_send.c:410:29
 1e0648c:    40 fc 62 00       	r0 = r4 + 98			  ## att_send.c:120:5
 1e06490:    01 70             	r1 = 0			  ## att_send.c:120:5
 1e06492:    02 70             	r2 = 0			  ## att_send.c:120:5
 1e06494:    03 f7 fe 0f       	r3 = h[r0 + -2] (u)			  ## att_send.c:121:52
 1e06498:    9b d1             	r3 = r3 >> 6			  ## att_send.c:121:52
 1e0649a:    63 f2 07 00       	if (r3 == r6) goto 14 <user_data_att_send+0x6C : 1e064ac >			  ## att_send.c:121:13
 1e0649e:    11 80             	r1 += 1			  ## att_send.c:120:23
 1e064a0:    12 80             	r2 += 1			  ## att_send.c:120:43
 1e064a2:    40 80             	r0 += 4			  ## att_send.c:120:23
 1e064a4:    82 e0 f6 bf       	ifs (r2 < 8) goto -20 <user_data_att_send+0x54 : 1e06494 >			  ## att_send.c:120:23
 1e064a8:    4a 71             	r10 = 20
 1e064aa:    06 18             	goto 12 <user_data_att_send+0x78 : 1e064b8 >
 1e064ac:    41 04             	r1 = r1.b0 (u)			  ## att_send.c:423:19
 1e064ae:    4a 71             	r10 = 20			  ## att_send.c:423:19
 1e064b0:    71 e0 02 80       	if (r1 > 7) goto 4 <user_data_att_send+0x78 : 1e064b8 >			  ## att_send.c:423:19
 1e064b4:    0a f7 00 00       	r10 = h[r0 + 0] (u)			  ## att_send.c:424:52
 1e064b8:    98 f3 70 04       	call 3148000 <local_irq_disable : 106d9c >			  ## att_send.c:430:5
 1e064bc:    60 08             	r0 = r6			  ## att_send.c:431:9
 1e064be:    c1 08             	r1 = r12			  ## att_send.c:431:9
 1e064c0:    7c 17             	call -264 <user_data_cbuf_is_write_able : 1e063ba >			  ## att_send.c:431:9
 1e064c2:    2f 20             	if (r0 == 0) goto 94 <user_data_att_send+0xE2 : 1e06522 >			  ## att_send.c:431:9
 1e064c4:    0b fb ff 0f       	r11 = 4095 <sys_clock_limit+0x73 : fff >
 1e064c8:    e6 fd 00 0c       	r0 = r12.l (u)			  ## att_send.c:433:21
 1e064cc:    a4 08             	r4 = r10			  ## att_send.c:435:13
 1e064ce:    40 f2 01 80       	if (r0 > r4) goto 2 <user_data_att_send+0x94 : 1e064d4 >			  ## att_send.c:435:13
 1e064d2:    c4 08             	r4 = r12			  ## att_send.c:435:13
 1e064d4:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:379:24
 1e064d8:    29 d3             	r1 = r5 >> 12			  ## att_send.c:438:32
 1e064da:    45 08             	r5 = r4			  ## att_send.c:438:32
 1e064dc:    d4 fd 60 51       	r5 <= insert(r1, p:12, l:20)			  ## att_send.c:438:32
 1e064e0:    95 f5 04 00       	h[sp+4] = r5			  ## att_send.c:438:32
 1e064e4:    00 fc 80 00       	r0 = r0 + 128			  ## att_send.c:379:32
 1e064e8:    01 a0             	r1 = sp + 0			  ## att_send.c:379:32
 1e064ea:    62 70             	r2 = 6			  ## att_send.c:379:12
 1e064ec:    80 f3 3d 1f       	call 15994 <cbuf_write : 1e0a36a >			  ## att_send.c:379:12
 1e064f0:    01 f6 00 80       	r1 = [r8 + 0]			  ## att_send.c:380:25
 1e064f4:    06 08             	r6 = r0			  ## att_send.c:379:12
 1e064f6:    e2 fd b0 74       	r7 = r4 & r11			  ## att_send.c:438:32
 1e064fa:    10 fc 80 00       	r0 = r1 + 128			  ## att_send.c:380:33
 1e064fe:    91 08             	r1 = r9			  ## att_send.c:380:13
 1e06500:    72 08             	r2 = r7			  ## att_send.c:380:13
 1e06502:    80 f3 32 1f       	call 15972 <cbuf_write : 1e0a36a >			  ## att_send.c:380:13
 1e06506:    60 09             	r0 += r6			  ## att_send.c:380:10
 1e06508:    20 04             	r0 = r0.l (u)			  ## att_send.c:382:14
 1e0650a:    61 9e             	r1 = r7 + 6			  ## att_send.c:382:32
 1e0650c:    01 f2 0e 10       	if (r1 != r0) goto 28 <user_data_att_send+0xEC : 1e0652c >
 1e06510:    20 05             	r0 = r4.l (u)
 1e06512:    90 fb 40 cc       	r12 = r12 - r4			  ## att_send.c:446:17
 1e06516:    e6 fd 00 1c       	r1 = r12.l (u)			  ## att_send.c:432:9
 1e0651a:    09 09             	r9 += r0			  ## att_send.c:447:18
 1e0651c:    d5 33             	if (r1 != 0) goto -86 <user_data_att_send+0x88 : 1e064c8 >
 1e0651e:    04 70             	r4 = 0
 1e06520:    02 18             	goto 4 <user_data_att_send+0xE6 : 1e06526 >
 1e06522:    04 fb 9f ff       	r4 = -97 <bank_code_load_addr+0x1E56F3 : 1ffff9f >
 1e06526:    98 f3 37 04       	call 3147886 <local_irq_enable : 106d98 >			  ## att_send.c:453:5
 1e0652a:    07 18             	goto 14 <user_data_att_send+0xFA : 1e0653a >			  ## att_send.c:453:5
 1e0652c:    98 f3 34 04       	call 3147880 <local_irq_enable : 106d98 >			  ## att_send.c:443:17
 1e06530:    04 fb 9f ff       	r4 = -97 <bank_code_load_addr+0x1E56F3 : 1ffff9f >			  ## att_send.c:443:17
 1e06534:    02 18             	goto 4 <user_data_att_send+0xFA : 1e0653a >			  ## att_send.c:443:17
 1e06536:    04 fb a3 ff       	r4 = -93 <bank_code_load_addr+0x1E56F7 : 1ffffa3 >
 1e0653a:    40 08             	r0 = r4			  ## att_send.c:455:1
 1e0653c:    04 0a             	sp += 8			  ## att_send.c:455:1
 1e0653e:    5c 01             	{pc, r12-r4} = [sp++]			  ## att_send.c:455:1


att_get_default_conn_handle:
 1e06540:    c0 ff c0 1b 00 00 	r0 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:690:0
 1e06546:    00 40             	r0 = [r0 + 0]			  ## att_send.c:691:9
 1e06548:    09 20             	if (r0 == 0) goto 18 <att_get_default_conn_handle+0x1C : 1e0655c >			  ## att_send.c:691:9
 1e0654a:    00 86             	r0 += 96			  ## att_send.c:100:37
 1e0654c:    01 70             	r1 = 0			  ## att_send.c:100:37
 1e0654e:    82 f7 04 00       	r2 = h[r0 ++= 4] (u)			  ## att_send.c:100:37
 1e06552:    92 d1             	r2 = r2 >> 6			  ## att_send.c:100:37
 1e06554:    04 34             	if (r2 != 0) goto 8 <att_get_default_conn_handle+0x1E : 1e0655e >			  ## att_send.c:100:37
 1e06556:    11 80             	r1 += 1			  ## att_send.c:99:43
 1e06558:    71 e0 f9 df       	ifs (r1 <= 7) goto -14 <att_get_default_conn_handle+0xE : 1e0654e >
 1e0655c:    02 70             	r2 = 0
 1e0655e:    a0 04             	r0 = r2.l (u)			  ## att_send.c:695:1
 1e06560:    20 00             	rts			  ## att_send.c:695:1


att_send_init:
 1e06562:    7b 01             	[--sp] = {rets, r11-r4}			  ## att_send.c:699:0
 1e06564:    c9 ff c0 1b 00 00 	r9 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:699:0
 1e0656a:    c0 f4 00 99       	[r9 + 0] = 0			  ## att_send.c:703:15
 1e0656e:    35 08             	r5 = r3			  ## att_send.c:703:15
 1e06570:    2b 08             	r11 = r2
 1e06572:    17 08             	r7 = r1
 1e06574:    04 08             	r4 = r0
 1e06576:    4d 28             	if (r4 == 0) goto 154 <att_send_init+0xB0 : 1e06612 >
 1e06578:    4c 2e             	if (r7 == 0) goto 152 <att_send_init+0xB0 : 1e06612 >
 1e0657a:    50 fc c3 00       	r0 = r5 + 195			  ## att_send.c:708:44
 1e0657e:    02 f2 02 30       	if (r2 < r0) goto 4 <att_send_init+0x24 : 1e06586 >			  ## att_send.c:708:44
 1e06582:    35 e1 03 80       	if (r5 > 19) goto 6 <att_send_init+0x2A : 1e0658c >
 1e06586:    1b 01             	{rets, r11-r4} = [sp++]
 1e06588:    cf f3 ba e6       	goto 2084212 <p33_soft_reset : 3300 >
 1e0658c:    98 f3 06 04       	call 3147788 <local_irq_disable : 106d9c >			  ## att_send.c:721:5
 1e06590:    17 f6 00 90       	[r9 + 0] = r7			  ## att_send.c:723:15
 1e06594:    01 70             	r1 = 0			  ## att_send.c:726:5
 1e06596:    c2 7b             	r2 = 188			  ## att_send.c:726:5
 1e06598:    06 70             	r6 = 0			  ## att_send.c:726:5
 1e0659a:    70 08             	r0 = r7			  ## att_send.c:726:5
 1e0659c:    98 f3 a8 04       	call 3148112 <memset : 106ef0 >			  ## att_send.c:726:5
 1e065a0:    78 fc 80 00       	r8 = r7 + 128			  ## att_send.c:726:5
 1e065a4:    8a fc 3c 00       	r10 = r8 + 60			  ## att_send.c:724:13
 1e065a8:    1a f6 2c 80       	[r8 + 44] = r10			  ## att_send.c:728:27
 1e065ac:    15 f7 30 80       	h[r8 + 48] = r5			  ## att_send.c:729:30
 1e065b0:    40 71             	r0 = 20			  ## att_send.c:729:30
 1e065b2:    81 bf             	r1 = r7 + r6			  ## att_send.c:732:50
 1e065b4:    01 86             	r1 += 96			  ## att_send.c:732:50
 1e065b6:    18 52             	h[r1 + 2] = r0			  ## att_send.c:732:50
 1e065b8:    02 52             	r2 = h[r1 + 0] (u)			  ## att_send.c:733:44
 1e065ba:    02 fd 3c 29       	r2 = r2 | 60			  ## att_send.c:733:44
 1e065be:    46 80             	r6 += 4			  ## att_send.c:731:19
 1e065c0:    0a 52             	h[r1 + 0] = r2			  ## att_send.c:733:44
 1e065c2:    06 e2 f6 1f       	if (r6 != 32) goto -20 <att_send_init+0x50 : 1e065b2 >			  ## att_send.c:731:5
 1e065c6:    01 70             	r1 = 0			  ## att_send.c:143:5
 1e065c8:    02 76             	r2 = 96			  ## att_send.c:143:5
 1e065ca:    06 70             	r6 = 0			  ## att_send.c:143:5
 1e065cc:    70 08             	r0 = r7			  ## att_send.c:143:5
 1e065ce:    98 f3 8f 04       	call 3148062 <memset : 106ef0 >			  ## att_send.c:143:5
 1e065d2:    16 f9 b2 70       	b[r7 + 178] = r6			  ## att_send.c:740:23
 1e065d6:    80 fb 50 1a       	r1 = r10 + r5			  ## att_send.c:736:13
 1e065da:    b0 fc 44 ff       	r0 = r11 + -188			  ## att_send.c:725:14
 1e065de:    60 b1             	r0 = r0 - r5			  ## att_send.c:737:14
 1e065e0:    22 04             	r2 = r0.l (u)			  ## att_send.c:741:49
 1e065e2:    80 08             	r0 = r8			  ## att_send.c:741:5
 1e065e4:    80 f3 f4 1e       	call 15848 <cbuf_init : 1e0a3d0 >			  ## att_send.c:741:5
 1e065e8:    40 fc ff ff       	r0 = r4 + -1			  ## att_send.c:743:21
 1e065ec:    20 04             	r0 = r0.l (u)			  ## att_send.c:743:21
 1e065ee:    c1 ff fe ef 00 00 	r1 = 61438 <UPDATA_BREDR_BASE_BEG+0x49E : effe >			  ## att_send.c:743:21
 1e065f4:    10 f2 0b 80       	if (r0 > r1) goto 22 <att_send_init+0xAC : 1e0660e >			  ## att_send.c:743:21
 1e065f8:    00 f6 00 90       	r0 = [r9 + 0]			  ## att_send.c:682:9
 1e065fc:    08 20             	if (r0 == 0) goto 16 <att_send_init+0xAC : 1e0660e >			  ## att_send.c:682:9
 1e065fe:    01 f7 60 00       	r1 = h[r0 + 96] (u)			  ## att_send.c:685:41
 1e06602:    21 fd 3f 19       	r1 = r1 & 63			  ## att_send.c:685:41
 1e06606:    d0 fd 30 14       	r1 <= insert(r4, p:6, l:16)			  ## att_send.c:685:41
 1e0660a:    11 f7 60 00       	h[r0 + 96] = r1			  ## att_send.c:685:41
 1e0660e:    98 f3 c3 03       	call 3147654 <local_irq_enable : 106d98 >			  ## att_send.c:757:5
 1e06612:    5b 01             	{pc, r11-r4} = [sp++]			  ## att_send.c:759:1


stack_run_loop_resume:
 1e06614:    c0 ff 38 e0 e0 01 	r0 = 31514680 <update_target_end+0x158 : 1e0e038 >			  ## btstack_task.c:53:0
 1e0661a:    f1 7f             	r1 = 255			  ## btstack_task.c:54:15
 1e0661c:    02 70             	r2 = 0			  ## btstack_task.c:54:15
 1e0661e:    03 70             	r3 = 0			  ## btstack_task.c:54:15
 1e06620:    d8 f3 de 03       	goto 3147708 <os_taskq_post_type : 106de0 >			  ## btstack_task.c:54:15


btstack_linked_list_remove:
 1e06624:    07 22             	if (r1 == 0) goto 14 <btstack_linked_list_remove+0x10 : 1e06634 >			  ## btstack_linked_list.c:110:0
 1e06626:    02 08             	r2 = r0			  ## btstack_linked_list.c:110:0
 1e06628:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_remove+0x10 : 1e06634 >			  ## btstack_linked_list.c:110:0
 1e0662a:    00 44             	r0 = [r2 + 0]			  ## btstack_linked_list.c:116:17
 1e0662c:    10 f2 fb 1f       	if (r0 != r1) goto -10 <btstack_linked_list_remove+0x2 : 1e06626 >			  ## btstack_linked_list.c:116:17
 1e06630:    00 42             	r0 = [r1 + 0]			  ## btstack_linked_list.c:117:31
 1e06632:    08 44             	[r2 + 0] = r0			  ## btstack_linked_list.c:117:22
 1e06634:    20 00             	rts


stack_run_loop_remove:
 1e06636:    01 08             	r1 = r0			  ## run_loop.c:53:0
 1e06638:    c0 ff 68 09 00 00 	r0 = 2408 <stack_run_loop_head : 968 >			  ## run_loop.c:54:5
 1e0663e:    f2 1f             	goto -28 <btstack_linked_list_remove : 1e06624 >			  ## run_loop.c:54:5


ble_stack_exit:
 1e06640:    74 01             	[--sp] = {rets, r4}			  ## btstack_main.c:805:0
 1e06642:    c4 ff 20 1c 00 00 	r4 = 7200 <btstack_global_info : 1c20 >			  ## btstack_main.c:805:0
 1e06648:    01 f9 b4 40       	r1 = b[r4 + 180] (u)			  ## btstack_main.c:808:43
 1e0664c:    10 22             	if (r1 == 0) goto 32 <ble_stack_exit+0x2E : 1e0666e >			  ## btstack_main.c:808:43
 1e0664e:    20 fd 0f 09       	r0 = r0 & 15			  ## btstack_main.c:812:41
 1e06652:    00 fd a0 09       	r0 = r0 | 160			  ## btstack_main.c:812:41
 1e06656:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:812:39
 1e0665a:    dc 17             	call -72 <stack_run_loop_resume : 1e06614 >			  ## btstack_main.c:813:9
 1e0665c:    03 18             	goto 6 <ble_stack_exit+0x24 : 1e06664 >			  ## btstack_main.c:813:9
 1e0665e:    10 70             	r0 = 1			  ## btstack_main.c:815:13
 1e06660:    98 f3 aa 03       	call 3147604 <os_time_dly : 106db8 >			  ## btstack_main.c:815:13
 1e06664:    00 f9 b4 40       	r0 = b[r4 + 180] (u)
 1e06668:    fa 31             	if (r0 != 0) goto -12 <ble_stack_exit+0x1E : 1e0665e >
 1e0666a:    40 08             	r0 = r4			  ## btstack_main.c:818:9
 1e0666c:    e4 17             	call -56 <stack_run_loop_remove : 1e06636 >			  ## btstack_main.c:818:9
 1e0666e:    54 01             	{pc, r4} = [sp++]			  ## btstack_main.c:821:1


ble_user_cmd_prepare:
 1e06670:    62 01             	[--sp] = {r3, r2}			  ## btstack_main.c:853:0
 1e06672:    79 01             	[--sp] = {rets, r9-r4}			  ## btstack_main.c:853:0
 1e06674:    f0 0b             	sp += -32			  ## btstack_main.c:853:0
 1e06676:    16 08             	r6 = r1			  ## btstack_main.c:853:0
 1e06678:    04 08             	r4 = r0			  ## btstack_main.c:853:0
 1e0667a:    c7 ff 20 1c 00 00 	r7 = 7200 <btstack_global_info : 1c20 >			  ## btstack_main.c:853:0
 1e06680:    00 f9 b4 70       	r0 = b[r7 + 180] (u)			  ## btstack_main.c:858:31
 1e06684:    16 20             	if (r0 == 0) goto 44 <ble_user_cmd_prepare+0x42 : 1e066b2 >			  ## btstack_main.c:858:31
 1e06686:    05 fb 9d ff       	r5 = -99 <bank_code_load_addr+0x1E56F1 : 1ffff9d >
 1e0668a:    56 e0 14 c0       	ifs (r6 > 5) goto 40 <ble_user_cmd_prepare+0x46 : 1e066b6 >
 1e0668e:    30 c4             	r0 = r6 << 16			  ## btstack_main.c:867:21
 1e06690:    50 b8             	r0 |= r4			  ## btstack_main.c:867:28
 1e06692:    28 02             	[sp+8] = r0			  ## btstack_main.c:867:13
 1e06694:    98 f3 82 03       	call 3147524 <local_irq_disable : 106d9c >			  ## btstack_main.c:869:5
 1e06698:    a1 4e             	r1 = [r7 + 40]			  ## btstack_main.c:871:18
 1e0669a:    90 4e             	r0 = [r7 + 36]			  ## btstack_main.c:871:18
 1e0669c:    80 f3 64 1e       	call 15560 <system_text_start : 1e0a368 >			  ## btstack_main.c:871:18
 1e066a0:    20 b2             	r0 = r1 - r0			  ## btstack_main.c:871:18
 1e066a2:    80 d0             	r0 = r0 >> 2			  ## btstack_main.c:871:36
 1e066a4:    11 9c             	r1 = r6 + 1			  ## btstack_main.c:870:5
 1e066a6:    01 f2 0b 90       	if (r1 <= r0) goto 22 <ble_user_cmd_prepare+0x50 : 1e066c0 >			  ## btstack_main.c:871:9
 1e066aa:    98 f3 75 03       	call 3147498 <local_irq_enable : 106d98 >			  ## btstack_main.c:872:9
 1e066ae:    f5 8f             	r5 += -1
 1e066b0:    02 18             	goto 4 <ble_user_cmd_prepare+0x46 : 1e066b6 >
 1e066b2:    05 fb a2 ff       	r5 = -94 <bank_code_load_addr+0x1E56F6 : 1ffffa2 >
 1e066b6:    50 08             	r0 = r5			  ## btstack_main.c:978:1
 1e066b8:    10 0a             	sp += 32			  ## btstack_main.c:978:1
 1e066ba:    19 01             	{rets, r9-r4} = [sp++]			  ## btstack_main.c:978:1
 1e066bc:    04 0a             	sp += 8			  ## btstack_main.c:978:1
 1e066be:    20 00             	rts			  ## btstack_main.c:978:1
 1e066c0:    c0 a3             	r0 = sp + 60
 1e066c2:    18 02             	[sp+4] = r0			  ## btstack_main.c:876:5
 1e066c4:    21 e0 0a b0       	ifs (r1 < 2) goto 20 <ble_user_cmd_prepare+0x6C : 1e066dc >			  ## btstack_main.c:876:5
 1e066c8:    80 a0             	r0 = sp + 8
 1e066ca:    40 80             	r0 += 4			  ## btstack_main.c:878:19
 1e066cc:    12 02             	r2 = [sp+4]			  ## btstack_main.c:878:19
 1e066ce:    43 94             	r3 = r2 + 4			  ## btstack_main.c:878:19
 1e066d0:    1b 02             	[sp+4] = r3			  ## btstack_main.c:878:19
 1e066d2:    02 44             	r2 = [r2 + 0]			  ## btstack_main.c:878:19
 1e066d4:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btstack_main.c:878:17
 1e066d8:    56 f3 f8 ff       	if (--r6 != 0) goto -16 <ble_user_cmd_prepare+0x5C : 1e066cc >			  ## btstack_main.c:878:17
 1e066dc:    40 fc fd ff       	r0 = r4 + -3			  ## btstack_main.c:885:5
 1e066e0:    05 70             	r5 = 0			  ## btstack_main.c:885:5
 1e066e2:    b0 e0 0c 80       	if (r0 > 11) goto 24 <.GJTIE25_0_0_+0xA : 1e066fe >
 1e066e6:    a0 00             	tbb [r0]


.GJTIS25_0_0_:
 1e066e8:    06     < 6 : 0x6 >
 1e066e9:    06     < 6 : 0x6 >
 1e066ea:    22     < 34 : 0x22 >
 1e066eb:    22     < 34 : 0x22 >
 1e066ec:    2b     < 43 : 0x2B >
 1e066ed:    22     < 34 : 0x22 >
 1e066ee:    34     < 52 : 0x34 >
 1e066ef:    39     < 57 : 0x39 >
 1e066f0:    22     < 34 : 0x22 >
 1e066f1:    22     < 34 : 0x22 >
 1e066f2:    22     < 34 : 0x22 >
 1e066f3:    b3     < 179 : 0xB3 >
 1e066f4:    30 02             	r0 = [sp+12]			  ## btstack_main.c:944:13
 1e066f6:    15 8a             	r5 += -95
 1e066f8:    f0 e1 18 d0       	ifs (r0 <= 31) goto 48 <.GJTIE25_1_1_+0x14 : 1e0672c >
 1e066fc:    a8 18             	goto 336 <.GJTIE25_1_1_+0x136 : 1e0684e >
 1e066fe:    40 fc e8 ff       	r0 = r4 + -24
 1e06702:    80 e0 13 80       	if (r0 > 8) goto 38 <.GJTIE25_1_1_+0x14 : 1e0672c >
 1e06706:    c8 ff c0 1b 00 00 	r8 = 7104 <att_s_hdl : 1bc0 >
 1e0670c:    a0 00             	tbb [r0]


.GJTIS25_1_1_:
 1e0670e:    05     < 5 : 0x5 >
 1e0670f:    2f     < 47 : 0x2F >
 1e06710:    5a     < 90 : 0x5A >
 1e06711:    0f     < 15 : 0xF >
 1e06712:    67     < 103 : 0x67 >
 1e06713:    0f     < 15 : 0xF >
 1e06714:    0f     < 15 : 0xF >
 1e06715:    0f     < 15 : 0xF >
 1e06716:    6e     < 110 : 0x6E >
 1e06717:    00     < 0 : 0x0 >
 1e06718:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:923:13
 1e0671c:    82 f5 10 00       	r2 = h[sp+16] (u)			  ## btstack_main.c:923:13
 1e06720:    31 02             	r1 = [sp+12]			  ## btstack_main.c:923:43
 1e06722:    c0 ff f0 ff 00 00 	r0 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## btstack_main.c:923:13
 1e06728:    1c 17             	call -456 <att_send_init : 1e06562 >			  ## btstack_main.c:923:13
 1e0672a:    91 18             	goto 290 <.GJTIE25_1_1_+0x136 : 1e0684e >			  ## btstack_main.c:923:13
 1e0672c:    c0 9e             	r0 = r7 + 12			  ## btstack_main.c:959:9
 1e0672e:    8a c0             	r2 = r1 << 2			  ## btstack_main.c:959:63
 1e06730:    81 a0             	r1 = sp + 8			  ## btstack_main.c:959:63
 1e06732:    80 f3 1a 1e       	call 15412 <cbuf_write : 1e0a36a >			  ## btstack_main.c:959:9
 1e06736:    98 f3 2f 03       	call 3147358 <local_irq_enable : 106d98 >			  ## btstack_main.c:962:5
 1e0673a:    05 70             	r5 = 0			  ## btstack_main.c:962:5
 1e0673c:    8a 18             	goto 276 <.GJTIE25_1_1_+0x13A : 1e06852 >			  ## btstack_main.c:962:5
 1e0673e:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:916:13
 1e06742:    82 f5 14 00       	r2 = h[sp+20] (u)			  ## btstack_main.c:916:13
 1e06746:    41 02             	r1 = [sp+16]			  ## btstack_main.c:916:44
 1e06748:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:916:13
 1e0674c:    0a 17             	call -492 <att_send_init : 1e06562 >			  ## btstack_main.c:916:13
 1e0674e:    7f 18             	goto 254 <.GJTIE25_1_1_+0x136 : 1e0684e >			  ## btstack_main.c:916:13
 1e06750:    f7 16             	call -530 <att_get_default_conn_handle : 1e06540 >			  ## btstack_main.c:902:62
 1e06752:    01 70             	r1 = 0			  ## btstack_main.c:902:33
 1e06754:    32 16             	call -924 <user_data_cbuf_is_write_able : 1e063ba >			  ## btstack_main.c:902:33
 1e06756:    31 02             	r1 = [sp+12]			  ## btstack_main.c:902:22
 1e06758:    46 18             	goto 140 <.GJTIE25_1_1_+0xCE : 1e067e6 >			  ## btstack_main.c:902:22
 1e0675a:    f2 16             	call -540 <att_get_default_conn_handle : 1e06540 >			  ## btstack_main.c:895:38
 1e0675c:    83 f5 14 00       	r3 = h[sp+20] (u)			  ## btstack_main.c:895:19
 1e06760:    42 02             	r2 = [sp+16]			  ## btstack_main.c:895:86
 1e06762:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:895:19
 1e06766:    c5 f5 18 00       	r5 = b[sp+24] (u)			  ## btstack_main.c:895:19
 1e0676a:    34 18             	goto 104 <.GJTIE25_1_1_+0xBC : 1e067d4 >			  ## btstack_main.c:895:19
 1e0676c:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:770:9
 1e06770:    6e 20             	if (r0 == 0) goto 220 <.GJTIE25_1_1_+0x136 : 1e0684e >			  ## att_send.c:770:9
 1e06772:    56 02             	r6 = [sp+20]			  ## btstack_main.c:930:51
 1e06774:    47 02             	r7 = [sp+16]			  ## btstack_main.c:930:42
 1e06776:    09 f5 0c 00       	r9 = [sp+12]			  ## btstack_main.c:930:33
 1e0677a:    98 f3 0f 03       	call 3147294 <local_irq_disable : 106d9c >			  ## att_send.c:780:5
 1e0677e:    00 f6 00 80       	r0 = [r8 + 0]
 1e06782:    01 fc 60 00       	r1 = r0 + 96			  ## att_send.c:782:5
 1e06786:    02 70             	r2 = 0			  ## att_send.c:782:5
 1e06788:    03 52             	r3 = h[r1 + 0] (u)			  ## att_send.c:783:37
 1e0678a:    25 fd 03 39       	r5 = r3 & 3			  ## att_send.c:783:13
 1e0678e:    65 f2 04 10       	if (r5 != r6) goto 8 <.GJTIE25_1_1_+0x82 : 1e0679a >			  ## att_send.c:783:13
 1e06792:    84 fd 10 53       	r5 = uextra(r3, p:2, l:4)			  ## att_send.c:783:82
 1e06796:    75 f2 38 00       	if (r5 == r7) goto 112 <.GJTIE25_1_1_+0xF2 : 1e0680a >			  ## att_send.c:783:82
 1e0679a:    12 80             	r2 += 1			  ## att_send.c:782:39
 1e0679c:    41 80             	r1 += 4			  ## att_send.c:782:19
 1e0679e:    82 e0 f3 bf       	ifs (r2 < 8) goto -26 <.GJTIE25_1_1_+0x70 : 1e06788 >			  ## att_send.c:782:19
 1e067a2:    e6 fd 00 19       	r1 = r9.l (u)			  ## att_send.c:800:9
 1e067a6:    50 22             	if (r1 == 0) goto 160 <.GJTIE25_1_1_+0x130 : 1e06848 >			  ## att_send.c:800:9
 1e067a8:    01 fc 60 00       	r1 = r0 + 96			  ## att_send.c:802:41
 1e067ac:    02 70             	r2 = 0			  ## att_send.c:802:41
 1e067ae:    03 52             	r3 = h[r1 + 0] (u)			  ## att_send.c:802:41
 1e067b0:    23 fd 3c 39       	r3 = r3 & 60			  ## att_send.c:802:41
 1e067b4:    c3 e3 3b 00       	if (r3 == 60) goto 118 <.GJTIE25_1_1_+0x116 : 1e0682e >			  ## att_send.c:802:41
 1e067b8:    12 80             	r2 += 1			  ## att_send.c:801:43
 1e067ba:    41 80             	r1 += 4			  ## att_send.c:801:23
 1e067bc:    82 e0 f7 bf       	ifs (r2 < 8) goto -18 <.GJTIE25_1_1_+0x96 : 1e067ae >			  ## att_send.c:801:23
 1e067c0:    43 18             	goto 134 <.GJTIE25_1_1_+0x130 : 1e06848 >			  ## att_send.c:801:23
 1e067c2:    83 f5 18 00       	r3 = h[sp+24] (u)			  ## btstack_main.c:888:19
 1e067c6:    52 02             	r2 = [sp+20]			  ## btstack_main.c:888:64
 1e067c8:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:888:19
 1e067cc:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:888:19
 1e067d0:    c5 f5 1c 00       	r5 = b[sp+28] (u)			  ## btstack_main.c:888:19
 1e067d4:    0d 02             	[sp] = r5
 1e067d6:    34 16             	call -920 <user_data_att_send : 1e06440 >
 1e067d8:    05 08             	r5 = r0
 1e067da:    39 18             	goto 114 <.GJTIE25_1_1_+0x136 : 1e0684e >
 1e067dc:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:909:33
 1e067e0:    01 70             	r1 = 0			  ## btstack_main.c:909:33
 1e067e2:    eb 15             	call -1066 <user_data_cbuf_is_write_able : 1e063ba >			  ## btstack_main.c:909:33
 1e067e4:    41 02             	r1 = [sp+16]			  ## btstack_main.c:909:22
 1e067e6:    08 42             	[r1 + 0] = r0
 1e067e8:    32 18             	goto 100 <.GJTIE25_1_1_+0x136 : 1e0684e >
 1e067ea:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:836:9
 1e067ee:    2f 20             	if (r0 == 0) goto 94 <.GJTIE25_1_1_+0x136 : 1e0684e >			  ## att_send.c:836:9
 1e067f0:    98 f3 d4 02       	call 3147176 <local_irq_disable : 106d9c >			  ## att_send.c:840:5
 1e067f4:    00 f6 00 80       	r0 = [r8 + 0]			  ## att_send.c:841:5
 1e067f8:    15 f9 b2 00       	b[r0 + 178] = r5			  ## att_send.c:841:23
 1e067fc:    00 fc 80 00       	r0 = r0 + 128			  ## att_send.c:842:25
 1e06800:    80 f3 f2 1d       	call 15332 <cbuf_clear : 1e0a3e8 >			  ## att_send.c:842:5
 1e06804:    98 f3 c8 02       	call 3147152 <local_irq_enable : 106d98 >			  ## att_send.c:843:5
 1e06808:    22 18             	goto 68 <.GJTIE25_1_1_+0x136 : 1e0684e >			  ## att_send.c:843:5
 1e0680a:    22 fd 3f 39       	r2 = r3 & 63			  ## att_send.c:790:45
 1e0680e:    da fd 30 29       	r2 <= insert(r9, p:6, l:26)			  ## att_send.c:790:45
 1e06812:    0a 52             	h[r1 + 0] = r2			  ## att_send.c:790:45
 1e06814:    ba c0             	r2 = r7 << 2			  ## att_send.c:791:44
 1e06816:    20 09             	r0 += r2			  ## att_send.c:791:44
 1e06818:    42 71             	r2 = 20			  ## att_send.c:791:61
 1e0681a:    e6 fd 00 39       	r3 = r9.l (u)			  ## att_send.c:792:13
 1e0681e:    12 f7 62 00       	h[r0 + 98] = r2			  ## att_send.c:791:61
 1e06822:    12 36             	if (r3 != 0) goto 36 <.GJTIE25_1_1_+0x130 : 1e06848 >			  ## att_send.c:791:61
 1e06824:    f0 fd 30 09       	r0 = r9 << 6			  ## att_send.c:790:45
 1e06828:    00 fd 3c 09       	r0 = r0 | 60			  ## att_send.c:794:47
 1e0682c:    0c 18             	goto 24 <.GJTIE25_1_1_+0x12E : 1e06846 >			  ## att_send.c:794:47
 1e0682e:    ba c0             	r2 = r7 << 2			  ## att_send.c:813:40
 1e06830:    20 09             	r0 += r2			  ## att_send.c:815:40
 1e06832:    43 71             	r3 = 20			  ## att_send.c:815:57
 1e06834:    13 f7 62 00       	h[r0 + 98] = r3			  ## att_send.c:815:57
 1e06838:    20 fd 3c 29       	r0 = r2 & 60			  ## att_send.c:814:41
 1e0683c:    da fd 30 09       	r0 <= insert(r9, p:6, l:26)			  ## att_send.c:814:41
 1e06840:    22 fd 03 69       	r2 = r6 & 3			  ## att_send.c:816:39
 1e06844:    50 b4             	r0 |= r2			  ## att_send.c:816:39
 1e06846:    08 52             	h[r1 + 0] = r0
 1e06848:    98 f3 a6 02       	call 3147084 <local_irq_enable : 106d98 >			  ## att_send.c:820:5
 1e0684c:    05 70             	r5 = 0			  ## att_send.c:820:5
 1e0684e:    98 f3 a3 02       	call 3147078 <local_irq_enable : 106d98 >			  ## btstack_main.c:962:5
 1e06852:    e0 16             	call -576 <stack_run_loop_resume : 1e06614 >			  ## btstack_main.c:966:5
 1e06854:    e4 e0 2f 1f       	if (r4 != 14) goto -418 <ble_user_cmd_prepare+0x46 : 1e066b6 >			  ## btstack_main.c:966:5
 1e06858:    30 02             	r0 = [sp+12]			  ## btstack_main.c:970:24
 1e0685a:    f2 16             	call -540 <ble_stack_exit : 1e06640 >			  ## btstack_main.c:970:9
 1e0685c:    2c 1f             	goto -424 <ble_user_cmd_prepare+0x46 : 1e066b6 >			  ## btstack_main.c:970:9


little_endian_store_16:
 1e0685e:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:82:0
 1e06862:    12 d2             	r2 = r2 >> 8			  ## utils.c:84:21
 1e06864:    11 80             	r1 += 1			  ## utils.c:83:15
 1e06866:    61 04             	r1 = r1.l (u)			  ## utils.c:84:5
 1e06868:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:84:19
 1e0686c:    20 00             	rts			  ## utils.c:85:1


multi_att_clear_ccc_config:
 1e0686e:    75 01             	[--sp] = {rets, r5, r4}			  ## att_send.c:278:0
 1e06870:    c1 ff c0 1b 00 00 	r1 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:281:9
 1e06876:    01 42             	r1 = [r1 + 0]			  ## att_send.c:281:9
 1e06878:    0d 22             	if (r1 == 0) goto 26 <multi_att_clear_ccc_config+0x26 : 1e06894 >			  ## att_send.c:281:9
 1e0687a:    02 70             	r2 = 0
 1e0687c:    03 70             	r3 = 0
 1e0687e:    c4 b2             	r4 = r1 + r3			  ## att_send.c:287:32
 1e06880:    15 58             	r5 = h[r4 + 2] (u)			  ## att_send.c:287:32
 1e06882:    2d d1             	r5 = r5 >> 4			  ## att_send.c:287:32
 1e06884:    05 f2 03 10       	if (r5 != r0) goto 6 <multi_att_clear_ccc_config+0x20 : 1e0688e >			  ## att_send.c:287:32
 1e06888:    12 f8 00 13       	h[r1+r3] = r2			  ## att_send.c:289:24
 1e0688c:    1a 58             	h[r4 + 2] = r2			  ## att_send.c:290:21
 1e0688e:    43 80             	r3 += 4			  ## att_send.c:286:23
 1e06890:    03 e6 f5 1f       	if (r3 != 96) goto -22 <multi_att_clear_ccc_config+0x10 : 1e0687e >			  ## att_send.c:286:23
 1e06894:    55 01             	{pc, r5, r4} = [sp++]


btstack_linked_list_iterator_has_next:
 1e06896:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:167:0
 1e06898:    06 22             	if (r1 == 0) goto 12 <btstack_linked_list_iterator_has_next+0x10 : 1e068a6 >			  ## btstack_linked_list.c:169:14
 1e0689a:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:172:13
 1e0689c:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:172:19
 1e0689e:    20 40             	r0 = [r0 + 8]			  ## btstack_linked_list.c:172:31
 1e068a0:    01 f2 03 10       	if (r1 != r0) goto 6 <btstack_linked_list_iterator_has_next+0x14 : 1e068aa >
 1e068a4:    01 18             	goto 2 <btstack_linked_list_iterator_has_next+0x12 : 1e068a8 >
 1e068a6:    81 90             	r1 = r0 + 8			  ## btstack_linked_list.c:170:20
 1e068a8:    01 42             	r1 = [r1 + 0]
 1e068aa:    10 70             	r0 = 1
 1e068ac:    01 32             	if (r1 != 0) goto 2 <btstack_linked_list_iterator_has_next+0x1A : 1e068b0 >
 1e068ae:    00 70             	r0 = 0
 1e068b0:    20 00             	rts			  ## btstack_linked_list.c:178:1


btstack_linked_list_iterator_next:
 1e068b2:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:181:0
 1e068b4:    09 22             	if (r1 == 0) goto 18 <btstack_linked_list_iterator_next+0x16 : 1e068c8 >			  ## btstack_linked_list.c:182:9
 1e068b6:    11 40             	r1 = [r0 + 4]			  ## btstack_linked_list.c:183:17
 1e068b8:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:183:23
 1e068ba:    22 40             	r2 = [r0 + 8]			  ## btstack_linked_list.c:183:35
 1e068bc:    21 f2 02 10       	if (r1 != r2) goto 4 <btstack_linked_list_iterator_next+0x12 : 1e068c4 >			  ## btstack_linked_list.c:183:35
 1e068c0:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:184:22
 1e068c2:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:185:34
 1e068c4:    29 40             	[r0 + 8] = r1
 1e068c6:    03 18             	goto 6 <btstack_linked_list_iterator_next+0x1C : 1e068ce >
 1e068c8:    c0 f4 01 09       	[r0 + 0] = 1			  ## btstack_linked_list.c:191:29
 1e068cc:    21 40             	r1 = [r0 + 8]			  ## btstack_linked_list.c:191:29
 1e068ce:    10 08             	r0 = r1			  ## btstack_linked_list.c:193:5
 1e068d0:    20 00             	rts			  ## btstack_linked_list.c:193:5


le_hci_connection_for_handle:
 1e068d2:    34 00             	[--sp] = rets			  ## hci_vendor.c:2008:0
 1e068d4:    fa 0b             	sp += -12			  ## hci_vendor.c:2008:0
 1e068d6:    03 08             	r3 = r0			  ## hci_vendor.c:2008:0
 1e068d8:    c0 ff 40 18 00 00 	r0 = 6208 <report_irq_stack_end : 1840 >			  ## btstack_linked_list.c:162:14
 1e068de:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e068e0:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e068e2:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e068e4:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e068e6:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e068e8:    00 a0             	r0 = sp + 0
 1e068ea:    d5 17             	call -86 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## hci_vendor.c:2012:16
 1e068ec:    06 20             	if (r0 == 0) goto 12 <le_hci_connection_for_handle+0x28 : 1e068fa >
 1e068ee:    00 a0             	r0 = sp + 0
 1e068f0:    e0 17             	call -64 <btstack_linked_list_iterator_next : 1e068b2 >			  ## hci_vendor.c:2013:65
 1e068f2:    21 50             	r1 = h[r0 + 4] (u)			  ## hci_vendor.c:2014:23
 1e068f4:    31 f2 f8 1f       	if (r1 != r3) goto -16 <le_hci_connection_for_handle+0x16 : 1e068e8 >			  ## hci_vendor.c:2014:23
 1e068f8:    01 18             	goto 2 <le_hci_connection_for_handle+0x2A : 1e068fc >			  ## hci_vendor.c:2014:23
 1e068fa:    00 70             	r0 = 0
 1e068fc:    06 0a             	sp += 12
 1e068fe:    30 00             	pc = [sp++]			  ## hci_vendor.c:2021:1


check_le_conn_disconnet_flag:
 1e06900:    34 00             	[--sp] = rets			  ## att_send.c:562:0
 1e06902:    c0 ff c0 1b 00 00 	r0 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:563:10
 1e06908:    01 40             	r1 = [r0 + 0]			  ## att_send.c:563:10
 1e0690a:    10 70             	r0 = 1			  ## att_send.c:563:10
 1e0690c:    10 22             	if (r1 == 0) goto 32 <check_le_conn_disconnet_flag+0x2E : 1e0692e >			  ## att_send.c:563:10
 1e0690e:    01 86             	r1 += 96			  ## att_send.c:131:37
 1e06910:    02 70             	r2 = 0			  ## att_send.c:131:37
 1e06912:    83 f7 04 10       	r3 = h[r1 ++= 4] (u)			  ## att_send.c:131:37
 1e06916:    9b d1             	r3 = r3 >> 6			  ## att_send.c:131:37
 1e06918:    04 36             	if (r3 != 0) goto 8 <check_le_conn_disconnet_flag+0x22 : 1e06922 >			  ## att_send.c:131:37
 1e0691a:    12 80             	r2 += 1			  ## att_send.c:130:35
 1e0691c:    72 e0 f9 df       	ifs (r2 <= 7) goto -14 <check_le_conn_disconnet_flag+0x12 : 1e06912 >
 1e06920:    30 00             	pc = [sp++]			  ## att_send.c:578:1
 1e06922:    e0 04             	r0 = r3.l (u)			  ## hci_vendor.c:1266:39
 1e06924:    d6 17             	call -84 <le_hci_connection_for_handle : 1e068d2 >			  ## hci_vendor.c:1266:39
 1e06926:    01 08             	r1 = r0			  ## hci_vendor.c:1266:39
 1e06928:    10 70             	r0 = 1			  ## att_send.c:573:11
 1e0692a:    01 22             	if (r1 == 0) goto 2 <check_le_conn_disconnet_flag+0x2E : 1e0692e >			  ## att_send.c:573:11
 1e0692c:    00 70             	r0 = 0
 1e0692e:    30 00             	pc = [sp++]			  ## att_send.c:578:1


cal_crc16_private:
 1e06930:    76 01             	[--sp] = {rets, r6-r4}			  ## btstack_main.c:498:0
 1e06932:    19 22             	if (r1 == 0) goto 50 <cal_crc16_private+0x36 : 1e06966 >			  ## btstack_main.c:498:0
 1e06934:    c3 ff 58 63 e0 01 	r3 = 31482712 <crc_ta : 1e06358 >			  ## btstack_main.c:498:0
 1e0693a:    84 f9 01 00       	r4 = b[r0 ++= 1] (u)			  ## btstack_main.c:505:40
 1e0693e:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:503:14
 1e06942:    26 d1             	r6 = r4 >> 4			  ## btstack_main.c:505:45
 1e06944:    d5 bc             	r5 ^= r6			  ## btstack_main.c:505:37
 1e06946:    45 f8 00 35       	r5 = h[r3+r5<<1] (u)			  ## btstack_main.c:505:27
 1e0694a:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:504:24
 1e0694c:    d2 ba             	r2 ^= r5			  ## btstack_main.c:505:24
 1e0694e:    84 fd 60 52       	r5 = uextra(r2, p:12, l:4)			  ## btstack_main.c:506:14
 1e06952:    24 fd 0f 49       	r4 = r4 & 15			  ## btstack_main.c:508:45
 1e06956:    d4 ba             	r4 ^= r5			  ## btstack_main.c:508:37
 1e06958:    44 f8 00 34       	r4 = h[r3+r4<<1] (u)			  ## btstack_main.c:508:27
 1e0695c:    12 c1             	r2 = r2 << 4			  ## btstack_main.c:507:24
 1e0695e:    f1 8f             	r1 += -1			  ## btstack_main.c:510:12
 1e06960:    65 04             	r5 = r1.l (u)			  ## btstack_main.c:502:5
 1e06962:    d2 b8             	r2 ^= r4			  ## btstack_main.c:508:24
 1e06964:    ea 3b             	if (r5 != 0) goto -44 <cal_crc16_private+0xA : 1e0693a >
 1e06966:    a0 04             	r0 = r2.l (u)			  ## btstack_main.c:512:5
 1e06968:    56 01             	{pc, r6-r4} = [sp++]			  ## btstack_main.c:512:5


lib_make_ble_address:
 1e0696a:    75 01             	[--sp] = {rets, r5, r4}			  ## btstack_main.c:516:0
 1e0696c:    fe 0b             	sp += -4			  ## btstack_main.c:516:0
 1e0696e:    04 08             	r4 = r0			  ## btstack_main.c:516:0
 1e06970:    30 98             	r0 = r4 + 3			  ## btstack_main.c:518:13
 1e06972:    c5 ff b0 08 00 00 	r5 = 2224 <ble_device_name_len : 8b0 >			  ## btstack_main.c:521:15
 1e06978:    51 fc 57 00       	r1 = r5 + 87			  ## btstack_main.c:521:15
 1e0697c:    32 70             	r2 = 3			  ## btstack_main.c:518:5
 1e0697e:    98 f3 b1 02       	call 3147106 <memcpy : 106ee4 >			  ## btstack_main.c:518:5
 1e06982:    50 fc 54 00       	r0 = r5 + 84			  ## btstack_main.c:518:5
 1e06986:    61 70             	r1 = 6			  ## btstack_main.c:519:15
 1e06988:    02 70             	r2 = 0			  ## btstack_main.c:519:15
 1e0698a:    d2 17             	call -92 <cal_crc16_private : 1e06930 >			  ## btstack_main.c:519:15
 1e0698c:    02 08             	r2 = r0			  ## btstack_main.c:519:15
 1e0698e:    0a 02             	[sp] = r2			  ## btstack_main.c:519:13
 1e06990:    10 d2             	r0 = r2 >> 8			  ## btstack_main.c:520:5
 1e06992:    18 68             	b[r4 + 1] = r0			  ## btstack_main.c:520:5
 1e06994:    0a 68             	b[r4 + 0] = r2			  ## btstack_main.c:520:5
 1e06996:    05 f9 56 50       	r5 = b[r5 + 86] (u)			  ## btstack_main.c:521:15
 1e0699a:    00 a0             	r0 = sp + 0			  ## btstack_main.c:521:15
 1e0699c:    21 70             	r1 = 2			  ## btstack_main.c:521:32
 1e0699e:    c8 17             	call -112 <cal_crc16_private : 1e06930 >			  ## btstack_main.c:521:32
 1e069a0:    50 09             	r0 += r5			  ## btstack_main.c:521:30
 1e069a2:    28 68             	b[r4 + 2] = r0			  ## btstack_main.c:522:20
 1e069a4:    02 0a             	sp += 4			  ## btstack_main.c:522:20
 1e069a6:    55 01             	{pc, r5, r4} = [sp++]			  ## btstack_main.c:523:1


btstack_init:
 1e069a8:    34 00             	[--sp] = rets			  ## btstack_task.c:202:0
 1e069aa:    c0 ff 60 09 00 00 	r0 = 2400 <is_btstack_lowpower_active : 960 >			  ## btstack_task.c:202:0
 1e069b0:    11 70             	r1 = 1			  ## btstack_task.c:202:0
 1e069b2:    09 60             	b[r0 + 0] = r1			  ## btstack_task.c:202:0
 1e069b4:    c0 ff 64 09 00 00 	r0 = 2404 <btstack_task_create_flag : 964 >			  ## btstack_task.c:202:0
 1e069ba:    09 60             	b[r0 + 0] = r1			  ## btstack_task.c:202:0
 1e069bc:    80 f3 b4 52       	call 42344 <btctrler_task_init : 1e10f28 >			  ## btstack_task.c:213:5
 1e069c0:    03 18             	goto 6 <btstack_init+0x20 : 1e069c8 >			  ## btstack_task.c:213:5
 1e069c2:    20 70             	r0 = 2			  ## btstack_task.c:223:9
 1e069c4:    98 f3 f8 01       	call 3146736 <os_time_dly : 106db8 >			  ## btstack_task.c:223:9
 1e069c8:    80 f3 be 52       	call 42364 <btctrler_task_ready : 1e10f48 >
 1e069cc:    fa 21             	if (r0 == 0) goto -12 <btstack_init+0x1A : 1e069c2 >
 1e069ce:    c0 ff a4 87 e0 01 	r0 = 31492004 <btstack_task : 1e087a4 >			  ## btstack_task.c:225:12
 1e069d4:    c2 ff 38 e0 e0 01 	r2 = 31514680 <update_target_end+0x158 : 1e0e038 >			  ## btstack_task.c:225:12
 1e069da:    01 70             	r1 = 0			  ## btstack_task.c:225:12
 1e069dc:    88 01             	{rets} = [sp++]			  ## btstack_task.c:225:12
 1e069de:    c0 f3 e9 25       	goto 19410 <task_create : 1e0b5b4 >			  ## btstack_task.c:225:12


get_conn_for_addr:
 1e069e2:    76 01             	[--sp] = {rets, r6-r4}			  ## avctp_user.c:247:0
 1e069e4:    c6 ff 28 1b 00 00 	r6 = 6952 <__user_info+0x88 : 1b28 >			  ## avctp_user.c:247:0
 1e069ea:    05 08             	r5 = r0			  ## avctp_user.c:247:0
 1e069ec:    64 08             	r4 = r6			  ## avctp_user.c:247:0
 1e069ee:    62 70             	r2 = 6			  ## avctp_user.c:250:14
 1e069f0:    50 08             	r0 = r5			  ## avctp_user.c:250:14
 1e069f2:    41 08             	r1 = r4			  ## avctp_user.c:250:14
 1e069f4:    98 f3 7a 02       	call 3146996 <memcmp : 106eec >			  ## avctp_user.c:250:14
 1e069f8:    03 30             	if (r0 != 0) goto 6 <get_conn_for_addr+0x1E : 1e06a00 >			  ## avctp_user.c:250:14
 1e069fa:    30 48             	r0 = [r4 + 12]			  ## avctp_user.c:251:22
 1e069fc:    3d f3 05 00       	if ((r0 & 536870912) != 0) goto 10 <get_conn_for_addr+0x28 : 1e06a0a >			  ## avctp_user.c:251:22
 1e06a00:    84 81             	r4 += 24			  ## avctp_user.c:249:5
 1e06a02:    80 9d             	r0 = r6 + 24			  ## avctp_user.c:249:5
 1e06a04:    04 f2 f3 3f       	if (r4 < r0) goto -26 <get_conn_for_addr+0xC : 1e069ee >			  ## avctp_user.c:249:5
 1e06a08:    04 70             	r4 = 0
 1e06a0a:    40 08             	r0 = r4			  ## avctp_user.c:256:1
 1e06a0c:    56 01             	{pc, r6-r4} = [sp++]			  ## avctp_user.c:256:1


bt_event_update_to_user:
 1e06a0e:    76 01             	[--sp] = {rets, r6-r4}			  ## user_interface.c:317:0
 1e06a10:    f4 0b             	sp += -24			  ## user_interface.c:317:0
 1e06a12:    34 08             	r4 = r3			  ## user_interface.c:317:0
 1e06a14:    25 08             	r5 = r2			  ## user_interface.c:317:0
 1e06a16:    16 08             	r6 = r1			  ## user_interface.c:317:0
 1e06a18:    01 08             	r1 = r0			  ## user_interface.c:317:0
 1e06a1a:    00 71             	r0 = 16			  ## user_interface.c:320:12
 1e06a1c:    90 f5 00 00       	h[sp] = r0			  ## user_interface.c:320:12
 1e06a20:    00 a0             	r0 = sp + 0			  ## user_interface.c:320:12
 1e06a22:    05 22             	if (r1 == 0) goto 10 <bt_event_update_to_user+0x20 : 1e06a2e >			  ## user_interface.c:320:12
 1e06a24:    80 80             	r0 += 8
 1e06a26:    10 80             	r0 += 1			  ## user_interface.c:322:9
 1e06a28:    62 70             	r2 = 6			  ## user_interface.c:322:9
 1e06a2a:    98 f3 5b 02       	call 3146934 <memcpy : 106ee4 >			  ## user_interface.c:322:9
 1e06a2e:    1e 02             	[sp+4] = r6			  ## user_interface.c:324:12
 1e06a30:    d5 f5 08 00       	b[sp+8] = r5			  ## user_interface.c:325:18
 1e06a34:    4c 02             	[sp+16] = r4			  ## user_interface.c:326:18
 1e06a36:    00 a0             	r0 = sp + 0			  ## user_interface.c:326:18
 1e06a38:    80 f3 64 29       	call 21192 <sys_event_notify : 1e0bd04 >			  ## user_interface.c:327:5
 1e06a3c:    0c 0a             	sp += 24
 1e06a3e:    56 01             	{pc, r6-r4} = [sp++]			  ## user_interface.c:329:1


update_bt_current_status:
 1e06a40:    79 01             	[--sp] = {rets, r9-r4}			  ## avctp_user.c:720:0
 1e06a42:    28 08             	r8 = r2			  ## avctp_user.c:720:0
 1e06a44:    14 08             	r4 = r1			  ## avctp_user.c:720:0
 1e06a46:    05 08             	r5 = r0			  ## avctp_user.c:720:0
 1e06a48:    a6 7a             	r6 = 170			  ## avctp_user.c:720:0
 1e06a4a:    c9 ff a0 1a 00 00 	r9 = 6816 <__user_info : 1aa0 >			  ## avctp_user.c:720:0
 1e06a50:    1d 2a             	if (r5 == 0) goto 58 <update_bt_current_status+0x4C : 1e06a8c >			  ## avctp_user.c:720:0
 1e06a52:    c7 17             	call -114 <get_conn_for_addr : 1e069e2 >			  ## avctp_user.c:728:25
 1e06a54:    07 08             	r7 = r0			  ## avctp_user.c:728:25
 1e06a56:    1a 2e             	if (r7 == 0) goto 52 <update_bt_current_status+0x4C : 1e06a8c >
 1e06a58:    e4 e0 04 00       	if (r4 == 14) goto 8 <update_bt_current_status+0x24 : 1e06a64 >
 1e06a5c:    b4 e0 02 00       	if (r4 == 11) goto 4 <update_bt_current_status+0x24 : 1e06a64 >
 1e06a60:    30 5e             	r0 = h[r7 + 6] (u)			  ## avctp_user.c:739:19
 1e06a62:    06 20             	if (r0 == 0) goto 12 <update_bt_current_status+0x30 : 1e06a70 >			  ## avctp_user.c:739:19
 1e06a64:    90 fc c8 00       	r0 = r9 + 200
 1e06a68:    62 70             	r2 = 6
 1e06a6a:    51 08             	r1 = r5
 1e06a6c:    98 f3 3a 02       	call 3146868 <memcpy : 106ee4 >
 1e06a70:    00 6f             	r0 = b[r7 + 16] (u)
 1e06a72:    08 e0 09 00       	if (r8 == 0) goto 18 <update_bt_current_status+0x48 : 1e06a88 >
 1e06a76:    31 4e             	r1 = [r7 + 12]
 1e06a78:    21 fd 0f 19       	r1 = r1 & 15			  ## avctp_user.c:747:30
 1e06a7c:    11 fd 05 19       	r1 = r1 ^ 5			  ## avctp_user.c:747:30
 1e06a80:    01 22             	if (r1 == 0) goto 2 <update_bt_current_status+0x44 : 1e06a84 >			  ## avctp_user.c:747:30
 1e06a82:    e8 72             	r8 = 46			  ## avctp_user.c:749:9
 1e06a84:    18 f9 0b 70       	b[r7 + 11] = r8
 1e06a88:    81 fd 30 60       	r6 = uextra(r0, p:6, l:1)			  ## avctp_user.c:754:28
 1e06a8c:    09 28             	if (r4 == 0) goto 18 <update_bt_current_status+0x60 : 1e06aa0 >
 1e06a8e:    14 f9 10 91       	b[r9 + 272] = r4			  ## avctp_user.c:757:37
 1e06a92:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## avctp_user.c:758:9
 1e06a98:    50 08             	r0 = r5			  ## avctp_user.c:758:9
 1e06a9a:    42 08             	r2 = r4			  ## avctp_user.c:758:9
 1e06a9c:    63 08             	r3 = r6			  ## avctp_user.c:758:9
 1e06a9e:    b7 17             	call -146 <bt_event_update_to_user : 1e06a0e >			  ## avctp_user.c:758:9
 1e06aa0:    59 01             	{pc, r9-r4} = [sp++]			  ## avctp_user.c:761:1


btstack_exit:
 1e06aa2:    7a 01             	[--sp] = {rets, r10-r4}			  ## btstack_task.c:231:0
 1e06aa4:    fe 0b             	sp += -4			  ## btstack_task.c:231:0
 1e06aa6:    c8 ff 64 09 00 00 	r8 = 2404 <btstack_task_create_flag : 964 >			  ## btstack_task.c:231:0
 1e06aac:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## btstack_task.c:231:0
 1e06ab0:    46 20             	if (r0 == 0) goto 140 <btstack_exit+0x9C : 1e06b3e >			  ## btstack_task.c:231:0
 1e06ab2:    00 75             	r0 = 80			  ## btstack_task.c:238:19
 1e06ab4:    80 f3 d4 1d       	call 15272 <malloc : 1e0a660 >			  ## btstack_task.c:238:19
 1e06ab8:    09 08             	r9 = r0			  ## btstack_task.c:238:19
 1e06aba:    08 02             	[sp] = r0			  ## btstack_task.c:238:13
 1e06abc:    02 30             	if (r0 != 0) goto 4 <btstack_exit+0x20 : 1e06ac2 >			  ## btstack_task.c:238:13
 1e06abe:    8f f3 1f e4       	call 2082878 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e06ac2:    00 70             	r0 = 0			  ## btstack_task.c:242:5
 1e06ac4:    06 70             	r6 = 0			  ## btstack_task.c:242:5
 1e06ac6:    bc 15             	call -1160 <ble_stack_exit : 1e06640 >			  ## btstack_task.c:242:5
 1e06ac8:    80 f3 9e 52       	call 42300 <btctrler_task_exit : 1e11008 >			  ## btstack_task.c:244:5
 1e06acc:    c7 ff f0 62 e0 01 	r7 = 31482608 <l2cap_signaling_commands_format : 1e062f0 >			  ## btstack_task.c:244:5
 1e06ad2:    ca ff 90 62 e0 01 	r10 = 31482512 <sdp_record_item_end : 1e06290 >			  ## btstack_task.c:244:5
 1e06ad8:    7a f2 11 20       	if (r10 >= r7) goto 34 <btstack_exit+0x5C : 1e06afe >
 1e06adc:    04 70             	r4 = 0
 1e06ade:    a5 08             	r5 = r10
 1e06ae0:    20 4a             	r0 = [r5 + 8]			  ## avctp_user.c:3184:19
 1e06ae2:    80 00             	call r0			  ## avctp_user.c:3184:16
 1e06ae4:    40 09             	r0 += r4			  ## avctp_user.c:3183:5
 1e06ae6:    c5 80             	r5 += 12			  ## avctp_user.c:3183:49
 1e06ae8:    04 04             	r4 = r0.b0 (u)			  ## avctp_user.c:3183:5
 1e06aea:    75 f2 f9 3f       	if (r5 < r7) goto -14 <btstack_exit+0x3E : 1e06ae0 >			  ## avctp_user.c:3183:5
 1e06aee:    07 28             	if (r4 == 0) goto 14 <btstack_exit+0x5C : 1e06afe >
 1e06af0:    40 71             	r0 = 20			  ## btstack_task.c:249:9
 1e06af2:    98 f3 61 01       	call 3146434 <os_time_dly : 106db8 >			  ## btstack_task.c:249:9
 1e06af6:    16 80             	r6 += 1			  ## btstack_task.c:251:23
 1e06af8:    80 05             	r0 = r6.b0 (u)			  ## btstack_task.c:251:23
 1e06afa:    00 e1 ed 3f       	if (r0 < 16) goto -38 <btstack_exit+0x36 : 1e06ad8 >			  ## btstack_task.c:251:23
 1e06afe:    00 70             	r0 = 0			  ## btstack_task.c:260:5
 1e06b00:    41 70             	r1 = 4			  ## btstack_task.c:260:5
 1e06b02:    02 70             	r2 = 0			  ## btstack_task.c:260:5
 1e06b04:    05 70             	r5 = 0			  ## btstack_task.c:260:5
 1e06b06:    9c 17             	call -200 <update_bt_current_status : 1e06a40 >			  ## btstack_task.c:260:5
 1e06b08:    01 70             	r1 = 0			  ## btstack_task.c:262:5
 1e06b0a:    90 08             	r0 = r9			  ## btstack_task.c:262:5
 1e06b0c:    98 f3 78 01       	call 3146480 <os_sem_create : 106e00 >			  ## btstack_task.c:262:5
 1e06b10:    c4 ff 38 e0 e0 01 	r4 = 31514680 <update_target_end+0x158 : 1e0e038 >			  ## btstack_task.c:263:5
 1e06b16:    c1 ff 04 00 40 00 	r1 = 4194308 <uECC_vli_cmp_unsafe+0x2F9008 : 400004 >			  ## btstack_task.c:263:5
 1e06b1c:    03 a0             	r3 = sp + 0			  ## btstack_task.c:263:5
 1e06b1e:    12 70             	r2 = 1			  ## btstack_task.c:263:5
 1e06b20:    40 08             	r0 = r4			  ## btstack_task.c:263:5
 1e06b22:    98 f3 5d 01       	call 3146426 <os_taskq_post_type : 106de0 >			  ## btstack_task.c:263:5
 1e06b26:    00 02             	r0 = [sp]			  ## btstack_task.c:265:17
 1e06b28:    01 70             	r1 = 0			  ## btstack_task.c:265:5
 1e06b2a:    98 f3 6d 01       	call 3146458 <os_sem_pend : 106e08 >			  ## btstack_task.c:265:5
 1e06b2e:    00 02             	r0 = [sp]			  ## btstack_task.c:266:10
 1e06b30:    80 f3 a9 1d       	call 15186 <free : 1e0a686 >			  ## btstack_task.c:266:5
 1e06b34:    40 08             	r0 = r4			  ## btstack_task.c:269:5
 1e06b36:    80 f3 60 25       	call 19136 <task_kill : 1e0b5fa >			  ## btstack_task.c:269:5
 1e06b3a:    15 f9 00 80       	b[r8 + 0] = r5			  ## btstack_task.c:269:5
 1e06b3e:    02 0a             	sp += 4
 1e06b40:    5a 01             	{pc, r10-r4} = [sp++]


set_remote_test_flag:
 1e06b42:    76 01             	[--sp] = {rets, r6-r4}			  ## user_interface.c:220:0
 1e06b44:    c1 ff 70 09 00 00 	r1 = 2416 <stack_configs_app : 970 >			  ## user_interface.c:220:0
 1e06b4a:    44 63             	r4 = b[r1 + 20] (u)			  ## user_interface.c:220:0
 1e06b4c:    35 63             	r5 = b[r1 + 19] (u)			  ## user_interface.c:220:0
 1e06b4e:    26 63             	r6 = b[r1 + 18] (u)			  ## user_interface.c:220:0
 1e06b50:    13 63             	r3 = b[r1 + 17] (u)			  ## user_interface.c:220:0
 1e06b52:    52 63             	r2 = b[r1 + 21] (u)			  ## user_interface.c:220:0
 1e06b54:    c8 fd 40 54       	r5 <= insert(r4, p:8, l:8)			  ## user_interface.c:220:0
 1e06b58:    c8 fd 40 36       	r3 <= insert(r6, p:8, l:8)			  ## user_interface.c:220:0
 1e06b5c:    d0 fd 80 35       	r3 <= insert(r5, p:16, l:16)			  ## user_interface.c:220:0
 1e06b60:    07 20             	if (r0 == 0) goto 14 <set_remote_test_flag+0x2E : 1e06b70 >			  ## user_interface.c:220:0
 1e06b62:    24 fd 01 09       	r4 = r0 & 1			  ## user_interface.c:225:50
 1e06b66:    30 fd 04 3b       	r0 = r3 & 4294705151			  ## user_interface.c:225:50
 1e06b6a:    c1 fd 90 04       	r0 <= insert(r4, p:18, l:1)			  ## user_interface.c:225:50
 1e06b6e:    02 18             	goto 4 <set_remote_test_flag+0x32 : 1e06b74 >			  ## user_interface.c:225:50
 1e06b70:    30 fd 04 3b       	r0 = r3 & 4294705151			  ## user_interface.c:223:50
 1e06b74:    18 63             	b[r1 + 17] = r0
 1e06b76:    03 d6             	r3 = r0 >> 24
 1e06b78:    4b 63             	b[r1 + 20] = r3
 1e06b7a:    03 d4             	r3 = r0 >> 16
 1e06b7c:    3b 63             	b[r1 + 19] = r3
 1e06b7e:    00 d2             	r0 = r0 >> 8
 1e06b80:    28 63             	b[r1 + 18] = r0
 1e06b82:    5a 63             	b[r1 + 21] = r2
 1e06b84:    56 01             	{pc, r6-r4} = [sp++]			  ## user_interface.c:227:1


multi_att_set_ccc_config:
 1e06b86:    77 01             	[--sp] = {rets, r7-r4}			  ## att_send.c:216:0
 1e06b88:    c3 ff c0 1b 00 00 	r3 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:221:5
 1e06b8e:    04 46             	r4 = [r3 + 0]			  ## att_send.c:221:5
 1e06b90:    18 28             	if (r4 == 0) goto 48 <multi_att_set_ccc_config+0x3C : 1e06bc2 >			  ## att_send.c:221:5
 1e06b92:    23 98             	r3 = r4 + 2			  ## att_send.c:225:5
 1e06b94:    05 70             	r5 = 0			  ## att_send.c:225:5
 1e06b96:    06 56             	r6 = h[r3 + 0] (u)			  ## att_send.c:226:32
 1e06b98:    37 d1             	r7 = r6 >> 4			  ## att_send.c:226:32
 1e06b9a:    07 f2 04 10       	if (r7 != r0) goto 8 <multi_att_set_ccc_config+0x20 : 1e06ba6 >			  ## att_send.c:226:32
 1e06b9e:    07 f7 fe 3f       	r7 = h[r3 + -2] (u)			  ## att_send.c:226:66
 1e06ba2:    17 f2 0f 00       	if (r7 == r1) goto 30 <multi_att_set_ccc_config+0x3E : 1e06bc4 >			  ## att_send.c:226:66
 1e06ba6:    15 80             	r5 += 1			  ## att_send.c:225:48
 1e06ba8:    43 80             	r3 += 4			  ## att_send.c:225:23
 1e06baa:    85 e1 f4 bf       	ifs (r5 < 24) goto -24 <multi_att_set_ccc_config+0x10 : 1e06b96 >			  ## att_send.c:225:23
 1e06bae:    09 24             	if (r2 == 0) goto 18 <multi_att_set_ccc_config+0x3C : 1e06bc2 >
 1e06bb0:    23 98             	r3 = r4 + 2			  ## att_send.c:247:36
 1e06bb2:    04 70             	r4 = 0			  ## att_send.c:247:36
 1e06bb4:    05 56             	r5 = h[r3 + 0] (u)			  ## att_send.c:247:36
 1e06bb6:    f5 e0 0c 90       	if (r5 <= 15) goto 24 <multi_att_set_ccc_config+0x4C : 1e06bd2 >
 1e06bba:    14 80             	r4 += 1			  ## att_send.c:246:52
 1e06bbc:    43 80             	r3 += 4			  ## att_send.c:246:27
 1e06bbe:    84 e1 f9 bf       	ifs (r4 < 24) goto -14 <multi_att_set_ccc_config+0x2E : 1e06bb4 >			  ## att_send.c:246:27
 1e06bc2:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:256:1
 1e06bc4:    0e 24             	if (r2 == 0) goto 28 <multi_att_set_ccc_config+0x5C : 1e06be2 >			  ## att_send.c:227:17
 1e06bc6:    20 fd 0f 29       	r0 = r2 & 15			  ## att_send.c:229:25
 1e06bca:    31 fd 0f 69       	r1 = r6 & 4294967280			  ## att_send.c:229:25
 1e06bce:    50 b2             	r0 |= r1			  ## att_send.c:229:25
 1e06bd0:    0b 18             	goto 22 <multi_att_set_ccc_config+0x62 : 1e06be8 >			  ## att_send.c:229:25
 1e06bd2:    11 f7 fe 3f       	h[r3 + -2] = r1			  ## att_send.c:249:28
 1e06bd6:    21 fd 0f 29       	r1 = r2 & 15			  ## att_send.c:250:25
 1e06bda:    d0 fd 20 10       	r1 <= insert(r0, p:4, l:16)			  ## att_send.c:250:25
 1e06bde:    09 56             	h[r3 + 0] = r1			  ## att_send.c:250:25
 1e06be0:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:256:1
 1e06be2:    00 70             	r0 = 0
 1e06be4:    10 f7 fe 3f       	h[r3 + -2] = r0			  ## att_send.c:232:28
 1e06be8:    08 56             	h[r3 + 0] = r0			  ## att_send.c:229:25
 1e06bea:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:256:1


little_endian_read_32:
 1e06bec:    01 09             	r1 += r0			  ## utils.c:77:0
 1e06bee:    12 62             	r2 = b[r1 + 1] (u)			  ## utils.c:78:41
 1e06bf0:    00 62             	r0 = b[r1 + 0] (u)			  ## utils.c:78:13
 1e06bf2:    23 62             	r3 = b[r1 + 2] (u)			  ## utils.c:78:80
 1e06bf4:    31 62             	r1 = b[r1 + 3] (u)			  ## utils.c:78:120
 1e06bf6:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## utils.c:78:37
 1e06bfa:    c8 fd 80 03       	r0 <= insert(r3, p:16, l:8)			  ## utils.c:78:76
 1e06bfe:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## utils.c:78:116
 1e06c02:    20 00             	rts			  ## utils.c:78:5


btstack_lowpower_idle_query:
 1e06c04:    c0 ff 60 09 00 00 	r0 = 2400 <is_btstack_lowpower_active : 960 >			  ## btstack_task.c:277:0
 1e06c0a:    00 60             	r0 = b[r0 + 0] (u)			  ## btstack_task.c:277:0
 1e06c0c:    11 70             	r1 = 1			  ## btstack_task.c:277:0
 1e06c0e:    e3 fd 00 01       	r0 = r1 & ~r0			  ## btstack_task.c:278:5
 1e06c12:    20 00             	rts			  ## btstack_task.c:278:5


btstack_linked_list_add_tail:
 1e06c14:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:97:0
 1e06c16:    04 24             	if (r2 == 0) goto 8 <btstack_linked_list_add_tail+0xC : 1e06c20 >			  ## btstack_linked_list.c:100:5
 1e06c18:    20 08             	r0 = r2
 1e06c1a:    12 f2 fb 1f       	if (r2 != r1) goto -10 <btstack_linked_list_add_tail : 1e06c14 >
 1e06c1e:    20 00             	rts			  ## btstack_linked_list.c:107:1
 1e06c20:    c0 f4 00 19       	[r1 + 0] = 0			  ## btstack_linked_list.c:105:16
 1e06c24:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:106:14
 1e06c26:    20 00             	rts			  ## btstack_linked_list.c:107:1


hci_add_event_handler:
 1e06c28:    01 08             	r1 = r0			  ## hci_vendor.c:1960:0
 1e06c2a:    c0 ff 44 18 00 00 	r0 = 6212 <report_irq_stack_end+0x4 : 1844 >			  ## hci_vendor.c:1961:5
 1e06c30:    f1 1f             	goto -30 <btstack_linked_list_add_tail : 1e06c14 >			  ## hci_vendor.c:1961:5


ble_stack_gatt_role:
 1e06c32:    c0 ff 20 1c 00 00 	r0 = 7200 <btstack_global_info : 1c20 >			  ## btstack_main.c:1071:0
 1e06c38:    01 f9 b5 00       	r1 = b[r0 + 181] (u)			  ## btstack_main.c:1072:36
 1e06c3c:    21 fd f8 19       	r1 = r1 & 248			  ## btstack_main.c:1072:36
 1e06c40:    11 f9 b5 00       	b[r0 + 181] = r1			  ## btstack_main.c:1072:36
 1e06c44:    20 00             	rts			  ## btstack_main.c:1073:1


l2cap_register_fixed_channel:
 1e06c46:    c0 ff 88 1a 00 00 	r0 = 6792 <l2cap_fixed_channels : 1a88 >			  ## l2cap.c:2177:0
 1e06c4c:    c1 ff 08 9e e0 01 	r1 = 31497736 <att_packet_handler : 1e09e08 >			  ## l2cap.c:2182:42
 1e06c52:    09 40             	[r0 + 0] = r1			  ## l2cap.c:2182:42
 1e06c54:    20 00             	rts			  ## l2cap.c:2183:1


hci_event_callback_set:
 1e06c56:    c1 ff 6c 1a 00 00 	r1 = 6764 <hci_event_callback_registration : 1a6c >			  ## hci_vendor.c:1930:0
 1e06c5c:    c0 ff 94 06 e0 01 	r0 = 31458964 <__ble_comm_cbk_packet_handler : 1e00694 >			  ## hci_vendor.c:1931:46
 1e06c62:    18 42             	[r1 + 4] = r0			  ## hci_vendor.c:1931:46
 1e06c64:    c0 ff 44 18 00 00 	r0 = 6212 <report_irq_stack_end+0x4 : 1844 >			  ## hci_vendor.c:1931:46
 1e06c6a:    d4 1f             	goto -88 <btstack_linked_list_add_tail : 1e06c14 >			  ## hci_vendor.c:1961:5


le_l2cap_register_packet_handler:
 1e06c6c:    c0 ff 7c 1a 00 00 	r0 = 6780 <le_l2cap_event_packet_handler : 1a7c >			  ## l2cap.c:177:0
 1e06c72:    c1 ff 94 06 e0 01 	r1 = 31458964 <__ble_comm_cbk_packet_handler : 1e00694 >			  ## l2cap.c:177:0
 1e06c78:    09 40             	[r0 + 0] = r1			  ## l2cap.c:177:0
 1e06c7a:    20 00             	rts			  ## l2cap.c:185:1


ble_vendor_set_default_att_mtu:
 1e06c7c:    02 08             	r2 = r0			  ## l2cap.c:993:0
 1e06c7e:    70 e1 01 80       	if (r0 > 23) goto 2 <ble_vendor_set_default_att_mtu+0x8 : 1e06c84 >			  ## l2cap.c:996:16
 1e06c82:    72 71             	r2 = 23			  ## l2cap.c:996:16
 1e06c84:    01 fb 05 02       	r1 = 517 <BTCTLER_CL_RAM_TOTAL+0x21 : 205 >			  ## l2cap.c:994:18
 1e06c88:    08 ff 05 02 01 00 	if (r0 > 517) goto 2 <ble_vendor_set_default_att_mtu+0x14 : 1e06c90 >			  ## l2cap.c:994:18
 1e06c8e:    21 08             	r1 = r2			  ## l2cap.c:994:9
 1e06c90:    c0 ff 6c 09 00 00 	r0 = 2412 <le_att_mtu_size : 96c >
 1e06c96:    09 50             	h[r0 + 0] = r1
 1e06c98:    10 08             	r0 = r1			  ## l2cap.c:1001:5
 1e06c9a:    20 00             	rts			  ## l2cap.c:1001:5


multi_att_ccc_config_init:
 1e06c9c:    34 00             	[--sp] = rets			  ## att_send.c:210:0
 1e06c9e:    c0 ff c0 1b 00 00 	r0 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:142:5
 1e06ca4:    00 40             	r0 = [r0 + 0]			  ## att_send.c:142:5
 1e06ca6:    04 20             	if (r0 == 0) goto 8 <multi_att_ccc_config_init+0x14 : 1e06cb0 >			  ## att_send.c:142:5
 1e06ca8:    01 70             	r1 = 0			  ## att_send.c:143:5
 1e06caa:    02 76             	r2 = 96			  ## att_send.c:143:5
 1e06cac:    98 f3 20 01       	call 3146304 <memset : 106ef0 >			  ## att_send.c:143:5
 1e06cb0:    30 00             	pc = [sp++]			  ## att_send.c:212:1


btstack_task_init:
 1e06cb2:    76 01             	[--sp] = {rets, r6-r4}			  ## btstack_task.c:75:0
 1e06cb4:    c4 ff 40 18 00 00 	r4 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:1602:75
 1e06cba:    01 70             	r1 = 0			  ## hci_vendor.c:1583:5
 1e06cbc:    02 fb 2c 02       	r2 = 556 <BTCTLER_CL_RAM_TOTAL+0x48 : 22c >			  ## hci_vendor.c:1583:5
 1e06cc0:    05 70             	r5 = 0			  ## hci_vendor.c:1583:5
 1e06cc2:    40 08             	r0 = r4			  ## hci_vendor.c:1583:5
 1e06cc4:    98 f3 14 01       	call 3146280 <memset : 106ef0 >			  ## hci_vendor.c:1583:5
 1e06cc8:    80 f3 c4 74       	call 59784 <ll_hci_set_event_mask : 1e15654 >			  ## hci_vendor.c:1587:5
 1e06ccc:    c0 ff d4 0d 00 00 	r0 = 3540 <hci_param : dd4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e06cd2:    01 fb ff 3f       	r1 = 16383 <check_flash_type+0x4B : 3fff >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e06cd6:    39 50             	h[r0 + 6] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e06cd8:    41 fb c0 1a       	r1 = r1 + 49152			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e06cdc:    29 50             	h[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e06cde:    19 50             	h[r0 + 2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e06ce0:    09 50             	h[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/common/hci_device_manager.c:28:5
 1e06ce2:    80 f3 c3 74       	call 59782 <ll_hci_get_acl_data_len : 1e1566c >			  ## hci_vendor.c:1590:47
 1e06ce6:    41 fc 1a 02       	r1 = r4 + 538			  ## hci_vendor.c:1590:47
 1e06cea:    18 52             	h[r1 + 2] = r0			  ## hci_vendor.c:1590:45
 1e06cec:    80 f3 c4 74       	call 59784 <ll_hci_get_acl_total_num : 1e15678 >			  ## hci_vendor.c:1591:47
 1e06cf0:    08 62             	b[r1 + 0] = r0			  ## hci_vendor.c:1591:45
 1e06cf2:    60 70             	r0 = 6			  ## hci_vendor.c:1591:45
 1e06cf4:    28 52             	h[r1 + 4] = r0			  ## hci_vendor.c:1591:45
 1e06cf6:    00 fb 80 0c       	r0 = 3200 <BTCTLER_RAM_TOTAL+0x40 : c80 >			  ## hci_vendor.c:1598:69
 1e06cfa:    38 52             	h[r1 + 6] = r0			  ## hci_vendor.c:1598:69
 1e06cfc:    4d 52             	h[r1 + 8] = r5			  ## hci_vendor.c:1599:68
 1e06cfe:    02 fb f4 01       	r2 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## hci_vendor.c:1600:68
 1e06d02:    5a 52             	h[r1 + 10] = r2			  ## hci_vendor.c:1600:68
 1e06d04:    a2 70             	r2 = 10			  ## hci_vendor.c:1601:75
 1e06d06:    6a 52             	h[r1 + 12] = r2			  ## hci_vendor.c:1601:75
 1e06d08:    78 52             	h[r1 + 14] = r0			  ## hci_vendor.c:1602:75
 1e06d0a:    c4 ff fc 1b 00 00 	r4 = 7164 <btstack_stack : 1bfc >			  ## hci_vendor.c:1602:75
 1e06d10:    c0 ff c4 1b 00 00 	r0 = 7108 <profile_l2cap_hdl : 1bc4 >			  ## btstack_main.c:156:34
 1e06d16:    28 48             	[r4 + 8] = r0			  ## btstack_main.c:156:34
 1e06d18:    c0 ff 10 1c 00 00 	r0 = 7184 <profile_le_pool_hdl : 1c10 >			  ## btstack_main.c:176:9
 1e06d1e:    18 48             	[r4 + 4] = r0			  ## btstack_main.c:173:38
 1e06d20:    3d 40             	[r0 + 12] = r5			  ## btstack_main.c:176:9
 1e06d22:    2d 40             	[r0 + 8] = r5			  ## btstack_main.c:176:9
 1e06d24:    1d 40             	[r0 + 4] = r5			  ## btstack_main.c:176:9
 1e06d26:    0d 40             	[r0 + 0] = r5			  ## btstack_main.c:176:9
 1e06d28:    c6 ff 74 1a 00 00 	r6 = 6772 <le_stack_pool : 1a74 >			  ## btstack_main.c:176:9
 1e06d2e:    08 4c             	[r6 + 0] = r0			  ## btstack_memory.c:399:19
 1e06d30:    00 fb d4 04       	r0 = 1236 <BTCTLER_CONTROLLER_DATA_SIZE+0x16 : 4d4 >			  ## btstack_memory.c:404:45
 1e06d34:    80 f3 94 1c       	call 14632 <malloc : 1e0a660 >			  ## btstack_memory.c:404:45
 1e06d38:    03 08             	r3 = r0			  ## btstack_memory.c:404:45
 1e06d3a:    02 36             	if (r3 != 0) goto 4 <btstack_task_init+0x8E : 1e06d40 >			  ## btstack_memory.c:404:45
 1e06d3c:    8f f3 e0 e2       	call 2082240 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e06d40:    06 4c             	r6 = [r6 + 0]			  ## btstack_memory.c:406:9
 1e06d42:    2b 4c             	[r6 + 8] = r3			  ## btstack_memory.c:406:53
 1e06d44:    01 70             	r1 = 0			  ## btstack_memory.c:407:9
 1e06d46:    02 fb d4 04       	r2 = 1236 <BTCTLER_CONTROLLER_DATA_SIZE+0x16 : 4d4 >			  ## btstack_memory.c:407:9
 1e06d4a:    30 08             	r0 = r3			  ## btstack_memory.c:407:9
 1e06d4c:    98 f3 d0 00       	call 3146144 <memset : 106ef0 >			  ## btstack_memory.c:407:9
 1e06d50:    20 4c             	r0 = [r6 + 8]			  ## btstack_memory.c:409:68
 1e06d52:    0d 40             	[r0 + 0] = r5			  ## btstack_memory.c:45:25
 1e06d54:    08 4c             	[r6 + 0] = r0			  ## btstack_memory.c:46:25
 1e06d56:    24 48             	r4 = [r4 + 8]			  ## btstack_main.c:182:26
 1e06d58:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:182:26
 1e06d5a:    01 70             	r1 = 0			  ## btstack_main.c:182:5
 1e06d5c:    c2 72             	r2 = 44			  ## btstack_main.c:182:5
 1e06d5e:    98 f3 c7 00       	call 3146126 <memset : 106ef0 >			  ## btstack_main.c:182:5
 1e06d62:    c0 ff 78 1a 00 00 	r0 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:139:17
 1e06d68:    0c 40             	[r0 + 0] = r4			  ## l2cap.c:139:17
 1e06d6a:    f0 7f             	r0 = 255			  ## l2cap.c:141:52
 1e06d6c:    10 f9 34 40       	b[r4 + 52] = r0			  ## l2cap.c:141:52
 1e06d70:    00 74             	r0 = 64			  ## l2cap.c:142:52
 1e06d72:    b8 59             	h[r4 + 54] = r0			  ## l2cap.c:142:52
 1e06d74:    9d 48             	[r4 + 36] = r5			  ## l2cap.c:144:63
 1e06d76:    2d 48             	[r4 + 8] = r5			  ## l2cap.c:146:33
 1e06d78:    1d 48             	[r4 + 4] = r5			  ## l2cap.c:147:33
 1e06d7a:    c0 ff 00 93 e0 01 	r0 = 31494912 <packet_handler : 1e09300 >			  ## l2cap.c:149:33
 1e06d80:    08 48             	[r4 + 0] = r0			  ## l2cap.c:149:33
 1e06d82:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:150:53
 1e06d84:    c0 ff 7c 1a 00 00 	r0 = 6780 <le_l2cap_event_packet_handler : 1a7c >			  ## l2cap.c:152:35
 1e06d8a:    0d 40             	[r0 + 0] = r5			  ## l2cap.c:152:35
 1e06d8c:    c0 ff 80 1a 00 00 	r0 = 6784 <hci_event_callback_registration.1946 : 1a80 >			  ## l2cap.c:152:35
 1e06d92:    c1 ff 3c 91 e0 01 	r1 = 31494460 <l2cap_hci_event_handler : 1e0913c >			  ## l2cap.c:161:50
 1e06d98:    19 40             	[r0 + 4] = r1			  ## l2cap.c:161:50
 1e06d9a:    46 17             	call -372 <hci_add_event_handler : 1e06c28 >			  ## l2cap.c:162:9
 1e06d9c:    c4 ff 20 1c 00 00 	r4 = 7200 <btstack_global_info : 1c20 >			  ## btstack_main.c:1053:39
 1e06da2:    01 70             	r1 = 0			  ## btstack_main.c:1050:9
 1e06da4:    82 7b             	r2 = 184			  ## btstack_main.c:1050:9
 1e06da6:    40 08             	r0 = r4			  ## btstack_main.c:1050:9
 1e06da8:    98 f3 a2 00       	call 3146052 <memset : 106ef0 >			  ## btstack_main.c:1050:9
 1e06dac:    c0 98             	r0 = r4 + 12			  ## btstack_main.c:1050:9
 1e06dae:    41 fc 30 00       	r1 = r4 + 48			  ## btstack_main.c:1051:9
 1e06db2:    02 78             	r2 = 128			  ## btstack_main.c:1051:9
 1e06db4:    80 f3 0c 1b       	call 13848 <cbuf_init : 1e0a3d0 >			  ## btstack_main.c:1051:9
 1e06db8:    c0 ff 2c 97 e0 01 	r0 = 31495980 <__ble_thread_loop_handler : 1e0972c >			  ## run_loop.c:20:15
 1e06dbe:    18 48             	[r4 + 4] = r0			  ## run_loop.c:20:15
 1e06dc0:    2d 48             	[r4 + 8] = r5			  ## run_loop.c:21:15
 1e06dc2:    c0 ff 68 09 00 00 	r0 = 2408 <stack_run_loop_head : 968 >			  ## run_loop.c:22:5
 1e06dc8:    41 08             	r1 = r4			  ## run_loop.c:22:5
 1e06dca:    24 17             	call -440 <btstack_linked_list_add_tail : 1e06c14 >			  ## run_loop.c:22:5
 1e06dcc:    10 70             	r0 = 1			  ## btstack_main.c:1053:39
 1e06dce:    10 f9 b4 40       	b[r4 + 180] = r0			  ## btstack_main.c:1053:39
 1e06dd2:    80 f3 66 17       	call 11980 <att_global_info_init : 1e09ca2 >			  ## btstack_main.c:1057:13
 1e06dd6:    bf f3 13 ed       	call -9690 <ble_profile_init : 1e04800 >			  ## btstack_main.c:1058:13
 1e06dda:    56 01             	{pc, r6-r4} = [sp++]			  ## btstack_task.c:81:1


delete_link_key:
 1e06ddc:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:354:0
 1e06dde:    f0 0b             	sp += -32			  ## remote_device_db.c:354:0
 1e06de0:    06 06             	r6 = -32			  ## remote_device_db.c:354:0
 1e06de2:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:176:20
 1e06de4:    14 08             	r4 = r1			  ## remote_device_db.c:176:20
 1e06de6:    05 08             	r5 = r0
 1e06de8:    82 00             	call r2			  ## remote_device_db.c:176:10
 1e06dea:    39 20             	if (r0 == 0) goto 114 <delete_link_key+0x82 : 1e06e5e >			  ## remote_device_db.c:176:10
 1e06dec:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:181:25
 1e06dee:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:181:25
 1e06df0:    01 72             	r1 = 32			  ## remote_device_db.c:181:15
 1e06df2:    42 08             	r2 = r4			  ## remote_device_db.c:181:15
 1e06df4:    83 00             	call r3			  ## remote_device_db.c:181:15
 1e06df6:    00 e2 30 10       	if (r0 != 32) goto 96 <delete_link_key+0x7E : 1e06e5a >
 1e06dfa:    00 a0             	r0 = sp + 0
 1e06dfc:    a8 90             	r8 = r0 + 10
 1e06dfe:    07 2a             	if (r5 == 0) goto 14 <delete_link_key+0x32 : 1e06e0e >			  ## remote_device_db.c:185:13
 1e06e00:    62 70             	r2 = 6			  ## remote_device_db.c:186:18
 1e06e02:    50 08             	r0 = r5			  ## remote_device_db.c:186:18
 1e06e04:    81 08             	r1 = r8			  ## remote_device_db.c:186:18
 1e06e06:    98 f3 71 00       	call 3145954 <memcmp : 106eec >			  ## remote_device_db.c:186:18
 1e06e0a:    10 30             	if (r0 != 0) goto 32 <delete_link_key+0x50 : 1e06e2c >			  ## remote_device_db.c:186:18
 1e06e0c:    17 18             	goto 46 <delete_link_key+0x60 : 1e06e3c >			  ## remote_device_db.c:186:18
 1e06e0e:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:193:23
 1e06e10:    20 70             	r0 = 2			  ## remote_device_db.c:193:13
 1e06e12:    01 72             	r1 = 32			  ## remote_device_db.c:193:13
 1e06e14:    82 00             	call r2			  ## remote_device_db.c:193:13
 1e06e16:    07 a0             	r7 = sp + 0			  ## remote_device_db.c:193:13
 1e06e18:    f1 7f             	r1 = 255			  ## remote_device_db.c:194:13
 1e06e1a:    02 72             	r2 = 32			  ## remote_device_db.c:194:13
 1e06e1c:    70 08             	r0 = r7			  ## remote_device_db.c:194:13
 1e06e1e:    98 f3 67 00       	call 3145934 <memset : 106ef0 >			  ## remote_device_db.c:194:13
 1e06e22:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:195:23
 1e06e24:    01 72             	r1 = 32			  ## remote_device_db.c:195:13
 1e06e26:    70 08             	r0 = r7			  ## remote_device_db.c:195:13
 1e06e28:    42 08             	r2 = r4			  ## remote_device_db.c:195:13
 1e06e2a:    83 00             	call r3			  ## remote_device_db.c:195:13
 1e06e2c:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:181:25
 1e06e2e:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:181:25
 1e06e30:    01 72             	r1 = 32			  ## remote_device_db.c:181:15
 1e06e32:    42 08             	r2 = r4			  ## remote_device_db.c:181:15
 1e06e34:    83 00             	call r3			  ## remote_device_db.c:181:15
 1e06e36:    00 e2 e2 0f       	if (r0 == 32) goto -60 <delete_link_key+0x22 : 1e06dfe >
 1e06e3a:    0f 18             	goto 30 <delete_link_key+0x7E : 1e06e5a >
 1e06e3c:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:187:27
 1e06e3e:    20 70             	r0 = 2			  ## remote_device_db.c:187:17
 1e06e40:    01 72             	r1 = 32			  ## remote_device_db.c:187:17
 1e06e42:    82 00             	call r2			  ## remote_device_db.c:187:17
 1e06e44:    05 a0             	r5 = sp + 0			  ## remote_device_db.c:187:17
 1e06e46:    f1 7f             	r1 = 255			  ## remote_device_db.c:188:17
 1e06e48:    02 72             	r2 = 32			  ## remote_device_db.c:188:17
 1e06e4a:    50 08             	r0 = r5			  ## remote_device_db.c:188:17
 1e06e4c:    98 f3 50 00       	call 3145888 <memset : 106ef0 >			  ## remote_device_db.c:188:17
 1e06e50:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:189:27
 1e06e52:    01 72             	r1 = 32			  ## remote_device_db.c:189:17
 1e06e54:    50 08             	r0 = r5			  ## remote_device_db.c:189:17
 1e06e56:    42 08             	r2 = r4			  ## remote_device_db.c:189:17
 1e06e58:    83 00             	call r3			  ## remote_device_db.c:189:17
 1e06e5a:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:199:15
 1e06e5c:    80 00             	call r0			  ## remote_device_db.c:199:5
 1e06e5e:    10 0a             	sp += 32
 1e06e60:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:358:1


get_is_in_background_flag:
 1e06e62:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >			  ## avctp_user.c:3117:0
 1e06e68:    01 61             	r1 = b[r0 + 16] (u)			  ## avctp_user.c:3118:74
 1e06e6a:    10 70             	r0 = 1			  ## avctp_user.c:3118:50
 1e06e6c:    01 32             	if (r1 != 0) goto 2 <get_is_in_background_flag+0xE : 1e06e70 >			  ## avctp_user.c:3118:50
 1e06e6e:    00 70             	r0 = 0
 1e06e70:    c1 ff a0 1a 00 00 	r1 = 6816 <__user_info : 1aa0 >			  ## avctp_user.c:3118:50
 1e06e76:    01 f9 13 11       	r1 = b[r1 + 275] (u)			  ## avctp_user.c:3118:50
 1e06e7a:    50 b3             	r0 &= r1			  ## avctp_user.c:3118:50
 1e06e7c:    20 00             	rts			  ## avctp_user.c:3118:5


le_hci_emit_event:
 1e06e7e:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1950:0
 1e06e80:    fa 0b             	sp += -12			  ## hci_vendor.c:1950:0
 1e06e82:    14 08             	r4 = r1			  ## hci_vendor.c:1950:0
 1e06e84:    05 08             	r5 = r0			  ## hci_vendor.c:1950:0
 1e06e86:    00 70             	r0 = 0			  ## hci_vendor.c:1950:0
 1e06e88:    c1 ff 40 18 00 00 	r1 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:1950:0
 1e06e8e:    12 42             	r2 = [r1 + 4]			  ## btstack_linked_list.c:163:16
 1e06e90:    08 02             	[sp] = r0			  ## btstack_linked_list.c:161:25
 1e06e92:    40 92             	r0 = r1 + 4			  ## btstack_linked_list.c:161:25
 1e06e94:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e06e96:    2a 02             	[sp+8] = r2			  ## btstack_linked_list.c:163:14
 1e06e98:    00 a0             	r0 = sp + 0			  ## btstack_linked_list.c:163:14
 1e06e9a:    0a 18             	goto 20 <le_hci_emit_event+0x32 : 1e06eb0 >
 1e06e9c:    06 a0             	r6 = sp + 0
 1e06e9e:    60 08             	r0 = r6			  ## hci_vendor.c:1954:100
 1e06ea0:    08 15             	call -1520 <btstack_linked_list_iterator_next : 1e068b2 >			  ## hci_vendor.c:1954:100
 1e06ea2:    17 40             	r7 = [r0 + 4]			  ## hci_vendor.c:1955:16
 1e06ea4:    40 70             	r0 = 4			  ## hci_vendor.c:1955:9
 1e06ea6:    01 70             	r1 = 0			  ## hci_vendor.c:1955:9
 1e06ea8:    52 08             	r2 = r5			  ## hci_vendor.c:1955:9
 1e06eaa:    43 08             	r3 = r4			  ## hci_vendor.c:1955:9
 1e06eac:    87 00             	call r7			  ## hci_vendor.c:1955:9
 1e06eae:    60 08             	r0 = r6			  ## hci_vendor.c:1953:12
 1e06eb0:    f2 14             	call -1564 <btstack_linked_list_iterator_has_next : 1e06896 >
 1e06eb2:    f4 31             	if (r0 != 0) goto -24 <le_hci_emit_event+0x1E : 1e06e9c >
 1e06eb4:    06 0a             	sp += 12
 1e06eb6:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1957:1


get_remote_test_flag:
 1e06eb8:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >			  ## user_interface.c:212:0
 1e06ebe:    41 61             	r1 = b[r0 + 20] (u)			  ## user_interface.c:213:29
 1e06ec0:    32 61             	r2 = b[r0 + 19] (u)			  ## user_interface.c:213:29
 1e06ec2:    23 61             	r3 = b[r0 + 18] (u)			  ## user_interface.c:213:29
 1e06ec4:    10 61             	r0 = b[r0 + 17] (u)			  ## user_interface.c:213:29
 1e06ec6:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## user_interface.c:213:29
 1e06eca:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## user_interface.c:213:29
 1e06ece:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## user_interface.c:213:29
 1e06ed2:    81 fd 90 00       	r0 = uextra(r0, p:18, l:1)			  ## user_interface.c:218:1
 1e06ed6:    20 00             	rts			  ## user_interface.c:218:1


get_database:
 1e06ed8:    78 01             	[--sp] = {rets, r8-r4}			  ## remote_device_db.c:37:0
 1e06eda:    08 06             	r8 = -32			  ## remote_device_db.c:37:0
 1e06edc:    03 f6 00 80       	r3 = [r8 + 0]			  ## remote_device_db.c:41:20
 1e06ee0:    25 08             	r5 = r2			  ## remote_device_db.c:41:20
 1e06ee2:    16 08             	r6 = r1
 1e06ee4:    04 08             	r4 = r0
 1e06ee6:    83 00             	call r3			  ## remote_device_db.c:41:10
 1e06ee8:    20 20             	if (r0 == 0) goto 64 <get_database+0x52 : 1e06f2a >			  ## remote_device_db.c:41:10
 1e06eea:    a7 98             	r7 = r4 + 10
 1e06eec:    03 f6 08 80       	r3 = [r8 + 8]			  ## remote_device_db.c:46:25
 1e06ef0:    01 72             	r1 = 32			  ## remote_device_db.c:46:15
 1e06ef2:    40 08             	r0 = r4			  ## remote_device_db.c:46:15
 1e06ef4:    52 08             	r2 = r5			  ## remote_device_db.c:46:15
 1e06ef6:    83 00             	call r3			  ## remote_device_db.c:46:15
 1e06ef8:    00 e2 12 10       	if (r0 != 32) goto 36 <get_database+0x48 : 1e06f20 >
 1e06efc:    62 70             	r2 = 6			  ## remote_device_db.c:51:14
 1e06efe:    60 08             	r0 = r6			  ## remote_device_db.c:51:14
 1e06f00:    71 08             	r1 = r7			  ## remote_device_db.c:51:14
 1e06f02:    97 f3 f3 ff       	call 3145702 <memcmp : 106eec >			  ## remote_device_db.c:51:14
 1e06f06:    f2 31             	if (r0 != 0) goto -28 <get_database+0x14 : 1e06eec >			  ## remote_device_db.c:51:14
 1e06f08:    10 68             	r0 = b[r4 + 1] (u)			  ## remote_device_db.c:52:21
 1e06f0a:    85 f9 02 40       	r5 = b[r4 ++= 2] (u)			  ## remote_device_db.c:52:21
 1e06f0e:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## remote_device_db.c:52:21
 1e06f12:    e1 71             	r1 = 30			  ## remote_device_db.c:52:28
 1e06f14:    40 08             	r0 = r4			  ## remote_device_db.c:52:28
 1e06f16:    98 f3 0b 00       	call 3145750 <chip_crc16 : 106f30 >			  ## remote_device_db.c:52:28
 1e06f1a:    14 70             	r4 = 1			  ## remote_device_db.c:52:28
 1e06f1c:    05 f2 01 00       	if (r5 == r0) goto 2 <get_database+0x4A : 1e06f22 >
 1e06f20:    04 70             	r4 = 0
 1e06f22:    00 f6 04 80       	r0 = [r8 + 4]			  ## remote_device_db.c:62:15
 1e06f26:    80 00             	call r0			  ## remote_device_db.c:62:5
 1e06f28:    01 18             	goto 2 <get_database+0x54 : 1e06f2c >			  ## remote_device_db.c:62:5
 1e06f2a:    04 70             	r4 = 0
 1e06f2c:    40 08             	r0 = r4			  ## remote_device_db.c:65:1
 1e06f2e:    58 01             	{pc, r8-r4} = [sp++]			  ## remote_device_db.c:65:1


get_link_key:
 1e06f30:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:254:0
 1e06f32:    e8 0b             	sp += -48			  ## remote_device_db.c:254:0
 1e06f34:    25 08             	r5 = r2			  ## remote_device_db.c:254:0
 1e06f36:    14 08             	r4 = r1			  ## remote_device_db.c:254:0
 1e06f38:    06 08             	r6 = r0			  ## remote_device_db.c:254:0
 1e06f3a:    be 17             	call -132 <get_remote_test_flag : 1e06eb8 >			  ## remote_device_db.c:260:9
 1e06f3c:    08 20             	if (r0 == 0) goto 16 <get_link_key+0x1E : 1e06f4e >			  ## remote_device_db.c:260:9
 1e06f3e:    c1 ff 48 63 e0 01 	r1 = 31482696 <own_private_linkkey : 1e06348 >			  ## remote_device_db.c:261:9
 1e06f44:    02 71             	r2 = 16			  ## remote_device_db.c:261:9
 1e06f46:    40 08             	r0 = r4			  ## remote_device_db.c:261:9
 1e06f48:    97 f3 cc ff       	call 3145624 <memcpy : 106ee4 >
 1e06f4c:    0a 18             	goto 20 <get_link_key+0x32 : 1e06f62 >
 1e06f4e:    c0 ff 6f 09 00 00 	r0 = 2415 <temp_link_key_flag : 96f >			  ## remote_device_db.c:269:9
 1e06f54:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:269:9
 1e06f56:    09 20             	if (r0 == 0) goto 18 <get_link_key+0x3A : 1e06f6a >			  ## remote_device_db.c:269:9
 1e06f58:    01 70             	r1 = 0			  ## remote_device_db.c:270:9
 1e06f5a:    02 71             	r2 = 16			  ## remote_device_db.c:270:9
 1e06f5c:    40 08             	r0 = r4			  ## remote_device_db.c:270:9
 1e06f5e:    97 f3 c7 ff       	call 3145614 <memset : 106ef0 >			  ## remote_device_db.c:270:9
 1e06f62:    15 70             	r5 = 1
 1e06f64:    50 08             	r0 = r5			  ## remote_device_db.c:306:1
 1e06f66:    18 0a             	sp += 48			  ## remote_device_db.c:306:1
 1e06f68:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:306:1
 1e06f6a:    00 a0             	r0 = sp + 0
 1e06f6c:    61 08             	r1 = r6			  ## remote_device_db.c:274:10
 1e06f6e:    52 08             	r2 = r5			  ## remote_device_db.c:274:10
 1e06f70:    b3 17             	call -154 <get_database : 1e06ed8 >			  ## remote_device_db.c:274:10
 1e06f72:    05 70             	r5 = 0
 1e06f74:    f7 21             	if (r0 == 0) goto -18 <get_link_key+0x34 : 1e06f64 >
 1e06f76:    bd 02             	[sp+44] = r5			  ## remote_device_db.c:284:5
 1e06f78:    ad 02             	[sp+40] = r5			  ## remote_device_db.c:284:5
 1e06f7a:    9d 02             	[sp+36] = r5			  ## remote_device_db.c:284:5
 1e06f7c:    8d 02             	[sp+32] = r5			  ## remote_device_db.c:284:5
 1e06f7e:    00 a0             	r0 = sp + 0			  ## remote_device_db.c:284:5
 1e06f80:    06 91             	r6 = r0 + 16			  ## remote_device_db.c:285:32
 1e06f82:    00 a2             	r0 = sp + 32
 1e06f84:    02 71             	r2 = 16			  ## remote_device_db.c:285:10
 1e06f86:    61 08             	r1 = r6			  ## remote_device_db.c:285:10
 1e06f88:    97 f3 b0 ff       	call 3145568 <memcmp : 106eec >			  ## remote_device_db.c:285:10
 1e06f8c:    eb 21             	if (r0 == 0) goto -42 <get_link_key+0x34 : 1e06f64 >			  ## remote_device_db.c:285:10
 1e06f8e:    02 71             	r2 = 16			  ## remote_device_db.c:290:5
 1e06f90:    40 08             	r0 = r4			  ## remote_device_db.c:290:5
 1e06f92:    61 08             	r1 = r6			  ## remote_device_db.c:290:5
 1e06f94:    d9 1f             	goto -78 <get_link_key+0x18 : 1e06f48 >			  ## remote_device_db.c:290:5


put_database:
 1e06f96:    7f 01             	[--sp] = {rets, r15-r4}			  ## remote_device_db.c:69:0
 1e06f98:    c2 0b             	sp += -124			  ## remote_device_db.c:69:0
 1e06f9a:    06 06             	r6 = -32			  ## remote_device_db.c:69:0
 1e06f9c:    02 4c             	r2 = [r6 + 0]			  ## remote_device_db.c:442:20
 1e06f9e:    14 08             	r4 = r1			  ## remote_device_db.c:442:20
 1e06fa0:    0b 08             	r11 = r0			  ## remote_device_db.c:442:20
 1e06fa2:    82 00             	call r2			  ## remote_device_db.c:442:10
 1e06fa4:    79 20             	if (r0 == 0) goto 242 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:442:10
 1e06fa6:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:447:25
 1e06fa8:    c0 a5             	r0 = sp + 92			  ## remote_device_db.c:447:25
 1e06faa:    01 72             	r1 = 32			  ## remote_device_db.c:447:15
 1e06fac:    42 08             	r2 = r4			  ## remote_device_db.c:447:15
 1e06fae:    83 00             	call r3			  ## remote_device_db.c:447:15
 1e06fb0:    08 70             	r8 = 0
 1e06fb2:    00 e2 39 10       	if (r0 != 32) goto 114 <put_database+0x92 : 1e07028 >
 1e06fb6:    c0 a5             	r0 = sp + 92
 1e06fb8:    05 fd 02 09       	r5 = r0 | 2
 1e06fbc:    ca ff ff ff 00 00 	r10 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e06fc2:    1f 18             	goto 62 <put_database+0x6C : 1e07002 >
 1e06fc4:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:460:34
 1e06fc8:    98 f2 06 a0       	ifs (r8 >= r9) goto 12 <put_database+0x42 : 1e06fd8 >
 1e06fcc:    c0 a1             	r0 = sp + 28
 1e06fce:    c1 a5             	r1 = sp + 92
 1e06fd0:    02 72             	r2 = 32			  ## remote_device_db.c:462:13
 1e06fd2:    97 f3 87 ff       	call 3145486 <memcpy : 106ee4 >			  ## remote_device_db.c:462:13
 1e06fd6:    98 08             	r8 = r9			  ## remote_device_db.c:462:13
 1e06fd8:    a9 f2 1f 00       	if (r9 == r10) goto 62 <put_database+0x84 : 1e0701a >
 1e06fdc:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:468:18
 1e06fe0:    e1 71             	r1 = 30			  ## remote_device_db.c:468:25
 1e06fe2:    50 08             	r0 = r5			  ## remote_device_db.c:468:25
 1e06fe4:    97 f3 a4 ff       	call 3145544 <chip_crc16 : 106f30 >			  ## remote_device_db.c:468:25
 1e06fe8:    07 f2 17 10       	if (r7 != r0) goto 46 <put_database+0x84 : 1e0701a >			  ## remote_device_db.c:468:25
 1e06fec:    89 f5 5e 00       	r9 = h[sp+94] (u)			  ## remote_device_db.c:472:29
 1e06ff0:    98 f2 13 a0       	ifs (r8 >= r9) goto 38 <put_database+0x84 : 1e0701a >
 1e06ff4:    c0 a1             	r0 = sp + 28
 1e06ff6:    c1 a5             	r1 = sp + 92
 1e06ff8:    02 72             	r2 = 32			  ## remote_device_db.c:474:13
 1e06ffa:    97 f3 73 ff       	call 3145446 <memcpy : 106ee4 >			  ## remote_device_db.c:474:13
 1e06ffe:    98 08             	r8 = r9			  ## remote_device_db.c:474:13
 1e07000:    0c 18             	goto 24 <put_database+0x84 : 1e0701a >
 1e07002:    80 f5 5e 00       	r0 = h[sp+94] (u)			  ## remote_device_db.c:452:18
 1e07006:    a0 f2 08 00       	if (r0 == r10) goto 16 <put_database+0x84 : 1e0701a >			  ## remote_device_db.c:452:18
 1e0700a:    87 f5 5c 00       	r7 = h[sp+92] (u)			  ## remote_device_db.c:455:18
 1e0700e:    e1 71             	r1 = 30			  ## remote_device_db.c:455:25
 1e07010:    50 08             	r0 = r5			  ## remote_device_db.c:455:25
 1e07012:    97 f3 8d ff       	call 3145498 <chip_crc16 : 106f30 >			  ## remote_device_db.c:455:25
 1e07016:    07 f2 d5 0f       	if (r7 == r0) goto -86 <put_database+0x2E : 1e06fc4 >			  ## remote_device_db.c:455:25
 1e0701a:    23 4c             	r3 = [r6 + 8]
 1e0701c:    c0 a5             	r0 = sp + 92
 1e0701e:    01 72             	r1 = 32
 1e07020:    42 08             	r2 = r4
 1e07022:    83 00             	call r3
 1e07024:    00 e2 ed 0f       	if (r0 == 32) goto -38 <put_database+0x6C : 1e07002 >
 1e07028:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:479:15
 1e0702a:    80 00             	call r0			  ## remote_device_db.c:479:5
 1e0702c:    08 e0 34 00       	if (r8 == 0) goto 104 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:479:5
 1e07030:    b0 fc 0a 00       	r0 = r11 + 10			  ## remote_device_db.c:80:14
 1e07034:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:80:14
 1e07036:    a1 80             	r1 += 10			  ## remote_device_db.c:80:14
 1e07038:    62 70             	r2 = 6			  ## remote_device_db.c:80:14
 1e0703a:    97 f3 57 ff       	call 3145390 <memcmp : 106eec >			  ## remote_device_db.c:80:14
 1e0703e:    2c 30             	if (r0 != 0) goto 88 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:80:14
 1e07040:    b0 fc 10 00       	r0 = r11 + 16			  ## remote_device_db.c:81:14
 1e07044:    c1 a1             	r1 = sp + 28			  ## remote_device_db.c:81:14
 1e07046:    01 81             	r1 += 16			  ## remote_device_db.c:81:14
 1e07048:    02 71             	r2 = 16			  ## remote_device_db.c:81:14
 1e0704a:    97 f3 4f ff       	call 3145374 <memcmp : 106eec >			  ## remote_device_db.c:81:14
 1e0704e:    24 30             	if (r0 != 0) goto 72 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:81:14
 1e07050:    00 f9 06 b0       	r0 = b[r11 + 6] (u)			  ## remote_device_db.c:82:17
 1e07054:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## remote_device_db.c:82:42
 1e07058:    10 f2 1e 10       	if (r0 != r1) goto 60 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:82:42
 1e0705c:    00 f9 07 b0       	r0 = b[r11 + 7] (u)			  ## remote_device_db.c:83:17
 1e07060:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## remote_device_db.c:83:42
 1e07064:    10 f2 18 10       	if (r0 != r1) goto 48 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:83:42
 1e07068:    00 f9 04 b0       	r0 = b[r11 + 4] (u)			  ## remote_device_db.c:84:17
 1e0706c:    c1 f5 20 00       	r1 = b[sp+32] (u)			  ## remote_device_db.c:84:40
 1e07070:    10 f2 12 10       	if (r0 != r1) goto 36 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:84:40
 1e07074:    00 f9 08 b0       	r0 = b[r11 + 8] (u)			  ## remote_device_db.c:85:17
 1e07078:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## remote_device_db.c:85:47
 1e0707c:    10 f2 0c 10       	if (r0 != r1) goto 24 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:85:47
 1e07080:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## remote_device_db.c:86:17
 1e07084:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## remote_device_db.c:86:48
 1e07088:    10 f2 06 10       	if (r0 != r1) goto 12 <put_database+0x102 : 1e07098 >			  ## remote_device_db.c:86:48
 1e0708c:    00 f9 05 b0       	r0 = b[r11 + 5] (u)			  ## remote_device_db.c:87:17
 1e07090:    c1 f5 21 00       	r1 = b[sp+33] (u)			  ## remote_device_db.c:87:55
 1e07094:    10 f2 c7 00       	if (r0 == r1) goto 398 <put_database+0x290 : 1e07226 >			  ## remote_device_db.c:87:55
 1e07098:    00 4c             	r0 = [r6 + 0]			  ## remote_device_db.c:92:20
 1e0709a:    80 00             	call r0			  ## remote_device_db.c:92:10
 1e0709c:    c4 20             	if (r0 == 0) goto 392 <put_database+0x290 : 1e07226 >			  ## remote_device_db.c:92:10
 1e0709e:    c0 a3             	r0 = sp + 60
 1e070a0:    01 91             	r1 = r0 + 16
 1e070a2:    19 02             	[sp+4] = r1
 1e070a4:    b1 fc 10 00       	r1 = r11 + 16
 1e070a8:    09 02             	[sp] = r1
 1e070aa:    a1 90             	r1 = r0 + 10
 1e070ac:    39 02             	[sp+12] = r1
 1e070ae:    1b f5 10 00       	[sp+16] = r11
 1e070b2:    b1 fc 0a 00       	r1 = r11 + 10
 1e070b6:    29 02             	[sp+8] = r1
 1e070b8:    0d fd 02 09       	r13 = r0 | 2
 1e070bc:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e070c2:    05 70             	r5 = 0
 1e070c4:    8b 08             	r11 = r8
 1e070c6:    0f 70             	r15 = 0
 1e070c8:    00 70             	r0 = 0
 1e070ca:    58 02             	[sp+20] = r0
 1e070cc:    09 70             	r9 = 0
 1e070ce:    0c 70             	r12 = 0
 1e070d0:    5a 08             	r10 = r5
 1e070d2:    be 08             	r14 = r11
 1e070d4:    1f f5 18 00       	[sp+24] = r15
 1e070d8:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:97:25
 1e070da:    80 00             	call r0			  ## remote_device_db.c:97:15
 1e070dc:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:99:25
 1e070de:    07 08             	r7 = r0			  ## remote_device_db.c:97:15
 1e070e0:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:97:15
 1e070e2:    01 72             	r1 = 32			  ## remote_device_db.c:99:15
 1e070e4:    42 08             	r2 = r4			  ## remote_device_db.c:99:15
 1e070e6:    83 00             	call r3			  ## remote_device_db.c:99:15
 1e070e8:    cf 08             	r15 = r12			  ## remote_device_db.c:99:15
 1e070ea:    17 18             	goto 46 <put_database+0x184 : 1e0711a >			  ## remote_device_db.c:99:15
 1e070ec:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:112:23
 1e070ee:    20 70             	r0 = 2			  ## remote_device_db.c:112:13
 1e070f0:    01 72             	r1 = 32			  ## remote_device_db.c:112:13
 1e070f2:    82 00             	call r2			  ## remote_device_db.c:112:13
 1e070f4:    c5 a3             	r5 = sp + 60			  ## remote_device_db.c:112:13
 1e070f6:    f1 7f             	r1 = 255			  ## remote_device_db.c:113:13
 1e070f8:    02 72             	r2 = 32			  ## remote_device_db.c:113:13
 1e070fa:    50 08             	r0 = r5			  ## remote_device_db.c:113:13
 1e070fc:    97 f3 f8 fe       	call 3145200 <memset : 106ef0 >			  ## remote_device_db.c:113:13
 1e07100:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:114:23
 1e07102:    01 72             	r1 = 32			  ## remote_device_db.c:114:13
 1e07104:    50 08             	r0 = r5			  ## remote_device_db.c:114:13
 1e07106:    42 08             	r2 = r4			  ## remote_device_db.c:114:13
 1e07108:    83 00             	call r3			  ## remote_device_db.c:114:13
 1e0710a:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:97:25
 1e0710c:    80 00             	call r0			  ## remote_device_db.c:97:15
 1e0710e:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:99:25
 1e07110:    07 08             	r7 = r0			  ## remote_device_db.c:97:15
 1e07112:    01 72             	r1 = 32			  ## remote_device_db.c:99:15
 1e07114:    50 08             	r0 = r5			  ## remote_device_db.c:99:15
 1e07116:    42 08             	r2 = r4			  ## remote_device_db.c:99:15
 1e07118:    83 00             	call r3			  ## remote_device_db.c:99:15
 1e0711a:    20 04             	r0 = r0.l (u)
 1e0711c:    00 e2 52 10       	if (r0 != 32) goto 164 <put_database+0x22E : 1e071c4 >
 1e07120:    80 f5 3e 00       	r0 = h[sp+62] (u)			  ## remote_device_db.c:104:18
 1e07124:    80 f2 0f 10       	if (r0 != r8) goto 30 <put_database+0x1B0 : 1e07146 >			  ## remote_device_db.c:104:18
 1e07128:    60 4c             	r0 = [r6 + 24]			  ## remote_device_db.c:97:25
 1e0712a:    80 00             	call r0			  ## remote_device_db.c:97:15
 1e0712c:    23 4c             	r3 = [r6 + 8]			  ## remote_device_db.c:99:25
 1e0712e:    05 08             	r5 = r0			  ## remote_device_db.c:97:15
 1e07130:    c0 a3             	r0 = sp + 60			  ## remote_device_db.c:97:15
 1e07132:    01 72             	r1 = 32			  ## remote_device_db.c:99:15
 1e07134:    42 08             	r2 = r4			  ## remote_device_db.c:99:15
 1e07136:    83 00             	call r3			  ## remote_device_db.c:99:15
 1e07138:    20 04             	r0 = r0.l (u)			  ## remote_device_db.c:100:13
 1e0713a:    9f b0             	r15 |= 2			  ## remote_device_db.c:106:22
 1e0713c:    5f 02             	[sp+20] = r7			  ## remote_device_db.c:97:15
 1e0713e:    57 08             	r7 = r5			  ## remote_device_db.c:97:15
 1e07140:    00 e2 ee 0f       	if (r0 == 32) goto -36 <put_database+0x18A : 1e07120 >			  ## remote_device_db.c:97:15
 1e07144:    3f 18             	goto 126 <put_database+0x22E : 1e071c4 >			  ## remote_device_db.c:97:15
 1e07146:    85 f5 3c 00       	r5 = h[sp+60] (u)			  ## remote_device_db.c:110:18
 1e0714a:    e1 71             	r1 = 30			  ## remote_device_db.c:110:25
 1e0714c:    d0 08             	r0 = r13			  ## remote_device_db.c:110:25
 1e0714e:    97 f3 ef fe       	call 3145182 <chip_crc16 : 106f30 >			  ## remote_device_db.c:110:25
 1e07152:    05 f2 cb 1f       	if (r5 != r0) goto -106 <put_database+0x156 : 1e070ec >			  ## remote_device_db.c:110:25
 1e07156:    8b f5 3e 00       	r11 = h[sp+62] (u)			  ## remote_device_db.c:117:34
 1e0715a:    0c fd 04 f9       	r12 = r15 | 4			  ## remote_device_db.c:120:22
 1e0715e:    e6 fd 00 0e       	r0 = r14.l (u)			  ## remote_device_db.c:117:27
 1e07162:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1D2 : 1e07168 >			  ## remote_device_db.c:117:27
 1e07166:    fc 08             	r12 = r15			  ## remote_device_db.c:117:13
 1e07168:    7f 08             	r15 = r7			  ## remote_device_db.c:117:13
 1e0716a:    b0 f2 02 80       	if (r0 > r11) goto 4 <put_database+0x1DC : 1e07172 >			  ## remote_device_db.c:117:13
 1e0716e:    0f f5 18 00       	r15 = [sp+24]			  ## remote_device_db.c:117:13
 1e07172:    e6 fd 00 1a       	r1 = r10.l (u)			  ## remote_device_db.c:124:27
 1e07176:    b5 08             	r5 = r11			  ## remote_device_db.c:124:13
 1e07178:    51 f2 01 30       	if (r1 < r5) goto 2 <put_database+0x1E8 : 1e0717e >			  ## remote_device_db.c:124:13
 1e0717c:    a5 08             	r5 = r10			  ## remote_device_db.c:124:13
 1e0717e:    b0 f2 01 80       	if (r0 > r11) goto 2 <put_database+0x1EE : 1e07184 >
 1e07182:    eb 08             	r11 = r14			  ## remote_device_db.c:117:13
 1e07184:    e6 fd 00 09       	r0 = r9.l (u)			  ## remote_device_db.c:128:23
 1e07188:    5a 08             	r10 = r5			  ## remote_device_db.c:128:23
 1e0718a:    be 08             	r14 = r11			  ## remote_device_db.c:128:23
 1e0718c:    1f f5 18 00       	[sp+24] = r15			  ## remote_device_db.c:128:23
 1e07190:    a3 31             	if (r0 != 0) goto -186 <put_database+0x142 : 1e070d8 >			  ## remote_device_db.c:128:23
 1e07192:    62 70             	r2 = 6			  ## remote_device_db.c:128:27
 1e07194:    20 02             	r0 = [sp+8]			  ## remote_device_db.c:128:27
 1e07196:    31 02             	r1 = [sp+12]			  ## remote_device_db.c:128:27
 1e07198:    97 f3 a8 fe       	call 3145040 <memcmp : 106eec >			  ## remote_device_db.c:128:27
 1e0719c:    09 70             	r9 = 0			  ## remote_device_db.c:128:27
 1e0719e:    98 31             	if (r0 != 0) goto -208 <put_database+0x13A : 1e070d0 >			  ## remote_device_db.c:128:27
 1e071a0:    02 71             	r2 = 16			  ## remote_device_db.c:129:17
 1e071a2:    00 02             	r0 = [sp]			  ## remote_device_db.c:129:17
 1e071a4:    11 02             	r1 = [sp+4]			  ## remote_device_db.c:129:17
 1e071a6:    97 f3 a1 fe       	call 3145026 <memcmp : 106eec >			  ## remote_device_db.c:129:17
 1e071aa:    09 20             	if (r0 == 0) goto 18 <put_database+0x228 : 1e071be >			  ## remote_device_db.c:129:17
 1e071ac:    40 02             	r0 = [sp+16]
 1e071ae:    f1 7f             	r1 = 255
 1e071b0:    69 60             	b[r0 + 6] = r1			  ## remote_device_db.c:130:33
 1e071b2:    79 60             	b[r0 + 7] = r1			  ## remote_device_db.c:131:33
 1e071b4:    01 70             	r1 = 0			  ## remote_device_db.c:131:33
 1e071b6:    59 60             	b[r0 + 5] = r1			  ## remote_device_db.c:132:46
 1e071b8:    99 60             	b[r0 + 9] = r1			  ## remote_device_db.c:133:38
 1e071ba:    31 70             	r1 = 3			  ## remote_device_db.c:134:37
 1e071bc:    89 60             	b[r0 + 8] = r1			  ## remote_device_db.c:134:37
 1e071be:    1c b0             	r12 |= 1			  ## remote_device_db.c:138:22
 1e071c0:    79 08             	r9 = r7			  ## remote_device_db.c:138:22
 1e071c2:    86 1f             	goto -244 <put_database+0x13A : 1e070d0 >			  ## remote_device_db.c:138:22
 1e071c4:    a0 fc 01 00       	r0 = r10 + 1			  ## remote_device_db.c:143:35
 1e071c8:    22 04             	r2 = r0.l (u)			  ## remote_device_db.c:143:35
 1e071ca:    83 08             	r3 = r8			  ## remote_device_db.c:143:35
 1e071cc:    11 70             	r1 = 1			  ## remote_device_db.c:143:35
 1e071ce:    32 f2 01 00       	if (r2 == r3) goto 2 <put_database+0x23E : 1e071d4 >			  ## remote_device_db.c:143:35
 1e071d2:    01 08             	r1 = r0			  ## remote_device_db.c:144:9
 1e071d4:    45 02             	r5 = [sp+16]
 1e071d6:    29 6a             	b[r5 + 2] = r1			  ## remote_device_db.c:143:19
 1e071d8:    08 d2             	r0 = r1 >> 8			  ## remote_device_db.c:143:19
 1e071da:    38 6a             	b[r5 + 3] = r0			  ## remote_device_db.c:143:19
 1e071dc:    20 9a             	r0 = r5 + 2			  ## remote_device_db.c:143:9
 1e071de:    e1 71             	r1 = 30			  ## remote_device_db.c:147:15
 1e071e0:    97 f3 a6 fe       	call 3145036 <chip_crc16 : 106f30 >			  ## remote_device_db.c:147:15
 1e071e4:    08 6a             	b[r5 + 0] = r0			  ## remote_device_db.c:147:13
 1e071e6:    01 d2             	r1 = r0 >> 8			  ## remote_device_db.c:147:13
 1e071e8:    e6 fd 00 0f       	r0 = r15.l (u)			  ## remote_device_db.c:150:9
 1e071ec:    19 6a             	b[r5 + 1] = r1			  ## remote_device_db.c:147:13
 1e071ee:    0a 20             	if (r0 == 0) goto 20 <put_database+0x26E : 1e07204 >			  ## remote_device_db.c:147:13
 1e071f0:    20 f3 0d 00       	if ((r0 & 1) != 0) goto 26 <put_database+0x278 : 1e0720e >
 1e071f4:    09 f5 14 00       	r9 = [sp+20]
 1e071f8:    21 f3 09 00       	if ((r0 & 2) != 0) goto 18 <put_database+0x278 : 1e0720e >
 1e071fc:    09 f5 18 00       	r9 = [sp+24]
 1e07200:    22 f3 05 00       	if ((r0 & 4) != 0) goto 10 <put_database+0x278 : 1e0720e >
 1e07204:    60 4c             	r0 = [r6 + 24]
 1e07206:    80 00             	call r0
 1e07208:    81 fc e1 ff       	r1 = r8 + -31
 1e0720c:    49 b0             	r9 = r0 + r1
 1e0720e:    42 4c             	r2 = [r6 + 16]			  ## remote_device_db.c:163:15
 1e07210:    e6 fd 00 19       	r1 = r9.l (u)			  ## remote_device_db.c:163:23
 1e07214:    00 70             	r0 = 0			  ## remote_device_db.c:163:5
 1e07216:    82 00             	call r2			  ## remote_device_db.c:163:5
 1e07218:    33 4c             	r3 = [r6 + 12]			  ## remote_device_db.c:164:15
 1e0721a:    01 72             	r1 = 32			  ## remote_device_db.c:164:5
 1e0721c:    50 08             	r0 = r5			  ## remote_device_db.c:164:5
 1e0721e:    42 08             	r2 = r4			  ## remote_device_db.c:164:5
 1e07220:    83 00             	call r3			  ## remote_device_db.c:164:5
 1e07222:    10 4c             	r0 = [r6 + 4]			  ## remote_device_db.c:166:15
 1e07224:    80 00             	call r0			  ## remote_device_db.c:166:5
 1e07226:    3e 0a             	sp += 124
 1e07228:    5f 01             	{pc, r15-r4} = [sp++]


put_link_key:
 1e0722a:    77 01             	[--sp] = {rets, r7-r4}			  ## remote_device_db.c:309:0
 1e0722c:    f0 0b             	sp += -32			  ## remote_device_db.c:309:0
 1e0722e:    24 08             	r4 = r2			  ## remote_device_db.c:309:0
 1e07230:    15 08             	r5 = r1			  ## remote_device_db.c:309:0
 1e07232:    06 08             	r6 = r0			  ## remote_device_db.c:309:0
 1e07234:    41 16             	call -894 <get_remote_test_flag : 1e06eb8 >			  ## remote_device_db.c:312:9
 1e07236:    2a 30             	if (r0 != 0) goto 84 <put_link_key+0x62 : 1e0728c >			  ## remote_device_db.c:312:9
 1e07238:    c0 ff 6f 09 00 00 	r0 = 2415 <temp_link_key_flag : 96f >			  ## remote_device_db.c:316:9
 1e0723e:    00 60             	r0 = b[r0 + 0] (u)			  ## remote_device_db.c:316:9
 1e07240:    25 30             	if (r0 != 0) goto 74 <put_link_key+0x62 : 1e0728c >			  ## remote_device_db.c:316:9
 1e07242:    00 a0             	r0 = sp + 0
 1e07244:    61 08             	r1 = r6			  ## remote_device_db.c:324:10
 1e07246:    42 08             	r2 = r4			  ## remote_device_db.c:324:10
 1e07248:    47 16             	call -882 <get_database : 1e06ed8 >			  ## remote_device_db.c:324:10
 1e0724a:    12 30             	if (r0 != 0) goto 36 <put_link_key+0x46 : 1e07270 >
 1e0724c:    00 a0             	r0 = sp + 0
 1e0724e:    01 70             	r1 = 0			  ## remote_device_db.c:325:9
 1e07250:    02 72             	r2 = 32			  ## remote_device_db.c:325:9
 1e07252:    07 70             	r7 = 0			  ## remote_device_db.c:325:9
 1e07254:    97 f3 4c fe       	call 3144856 <memset : 106ef0 >			  ## remote_device_db.c:325:9
 1e07258:    f0 7f             	r0 = 255			  ## remote_device_db.c:326:30
 1e0725a:    d0 f5 07 00       	b[sp+7] = r0			  ## remote_device_db.c:326:30
 1e0725e:    d0 f5 06 00       	b[sp+6] = r0			  ## remote_device_db.c:327:31
 1e07262:    d7 f5 05 00       	b[sp+5] = r7			  ## remote_device_db.c:328:43
 1e07266:    d7 f5 09 00       	b[sp+9] = r7			  ## remote_device_db.c:329:36
 1e0726a:    30 70             	r0 = 3			  ## remote_device_db.c:330:35
 1e0726c:    d0 f5 08 00       	b[sp+8] = r0			  ## remote_device_db.c:330:35
 1e07270:    07 a0             	r7 = sp + 0
 1e07272:    a0 9e             	r0 = r7 + 10			  ## remote_device_db.c:332:5
 1e07274:    62 70             	r2 = 6			  ## remote_device_db.c:332:5
 1e07276:    61 08             	r1 = r6			  ## remote_device_db.c:332:5
 1e07278:    97 f3 34 fe       	call 3144808 <memcpy : 106ee4 >			  ## remote_device_db.c:332:5
 1e0727c:    00 9f             	r0 = r7 + 16			  ## remote_device_db.c:333:5
 1e0727e:    02 71             	r2 = 16			  ## remote_device_db.c:333:5
 1e07280:    51 08             	r1 = r5			  ## remote_device_db.c:333:5
 1e07282:    97 f3 2f fe       	call 3144798 <memcpy : 106ee4 >			  ## remote_device_db.c:333:5
 1e07286:    70 08             	r0 = r7			  ## remote_device_db.c:340:5
 1e07288:    41 08             	r1 = r4			  ## remote_device_db.c:340:5
 1e0728a:    85 16             	call -758 <put_database : 1e06f96 >			  ## remote_device_db.c:340:5
 1e0728c:    10 0a             	sp += 32
 1e0728e:    57 01             	{pc, r7-r4} = [sp++]			  ## remote_device_db.c:341:1


handle_remote_dev_type:
 1e07290:    76 01             	[--sp] = {rets, r6-r4}			  ## remote_device_db.c:587:0
 1e07292:    e8 0b             	sp += -48			  ## remote_device_db.c:587:0
 1e07294:    14 08             	r4 = r1			  ## remote_device_db.c:587:0
 1e07296:    05 08             	r5 = r0			  ## remote_device_db.c:587:0
 1e07298:    06 70             	r6 = 0			  ## remote_device_db.c:587:0
 1e0729a:    0e 16             	call -996 <get_remote_test_flag : 1e06eb8 >			  ## remote_device_db.c:590:17
 1e0729c:    03 20             	if (r0 == 0) goto 6 <handle_remote_dev_type+0x14 : 1e072a4 >			  ## remote_device_db.c:590:17
 1e0729e:    60 08             	r0 = r6			  ## remote_device_db.c:623:1
 1e072a0:    18 0a             	sp += 48			  ## remote_device_db.c:623:1
 1e072a2:    56 01             	{pc, r6-r4} = [sp++]			  ## remote_device_db.c:623:1
 1e072a4:    00 a1             	r0 = sp + 16
 1e072a6:    02 70             	r2 = 0			  ## remote_device_db.c:594:10
 1e072a8:    51 08             	r1 = r5			  ## remote_device_db.c:594:10
 1e072aa:    16 16             	call -980 <get_database : 1e06ed8 >			  ## remote_device_db.c:594:10
 1e072ac:    07 20             	if (r0 == 0) goto 14 <handle_remote_dev_type+0x2C : 1e072bc >
 1e072ae:    c0 f5 14 00       	r0 = b[sp+20] (u)
 1e072b2:    06 08             	r6 = r0
 1e072b4:    01 ff ff 40 22 00 	if (r4 != 255) goto 68 <handle_remote_dev_type+0x6E : 1e072fe >
 1e072ba:    f1 1f             	goto -30 <handle_remote_dev_type+0xE : 1e0729e >
 1e072bc:    00 ff ff 40 ee ff 	if (r4 == 255) goto -36 <handle_remote_dev_type+0xE : 1e0729e >
 1e072c2:    00 70             	r0 = 0
 1e072c4:    38 02             	[sp+12] = r0			  ## remote_device_db.c:600:13
 1e072c6:    28 02             	[sp+8] = r0			  ## remote_device_db.c:600:13
 1e072c8:    18 02             	[sp+4] = r0			  ## remote_device_db.c:600:13
 1e072ca:    08 02             	[sp] = r0			  ## remote_device_db.c:600:13
 1e072cc:    06 a1             	r6 = sp + 16			  ## remote_device_db.c:600:13
 1e072ce:    01 70             	r1 = 0			  ## remote_device_db.c:601:13
 1e072d0:    02 72             	r2 = 32			  ## remote_device_db.c:601:13
 1e072d2:    60 08             	r0 = r6			  ## remote_device_db.c:601:13
 1e072d4:    97 f3 0c fe       	call 3144728 <memset : 106ef0 >			  ## remote_device_db.c:601:13
 1e072d8:    a0 9c             	r0 = r6 + 10			  ## remote_device_db.c:602:13
 1e072da:    62 70             	r2 = 6			  ## remote_device_db.c:602:13
 1e072dc:    51 08             	r1 = r5			  ## remote_device_db.c:602:13
 1e072de:    97 f3 01 fe       	call 3144706 <memcpy : 106ee4 >			  ## remote_device_db.c:602:13
 1e072e2:    f0 7f             	r0 = 255			  ## remote_device_db.c:603:34
 1e072e4:    d0 f5 17 00       	b[sp+23] = r0			  ## remote_device_db.c:603:34
 1e072e8:    d0 f5 16 00       	b[sp+22] = r0			  ## remote_device_db.c:604:35
 1e072ec:    30 70             	r0 = 3			  ## remote_device_db.c:605:39
 1e072ee:    d0 f5 18 00       	b[sp+24] = r0			  ## remote_device_db.c:605:39
 1e072f2:    01 a0             	r1 = sp + 0			  ## remote_device_db.c:605:39
 1e072f4:    02 70             	r2 = 0			  ## remote_device_db.c:606:13
 1e072f6:    50 08             	r0 = r5			  ## remote_device_db.c:606:13
 1e072f8:    98 17             	call -208 <put_link_key : 1e0722a >			  ## remote_device_db.c:606:13
 1e072fa:    c0 f5 14 00       	r0 = b[sp+20] (u)			  ## remote_device_db.c:606:13
 1e072fe:    06 70             	r6 = 0
 1e07300:    40 f2 cd 0f       	if (r0 == r4) goto -102 <handle_remote_dev_type+0xE : 1e0729e >
 1e07304:    d4 f5 14 00       	b[sp+20] = r4			  ## remote_device_db.c:618:28
 1e07308:    00 a1             	r0 = sp + 16			  ## remote_device_db.c:618:28
 1e0730a:    01 70             	r1 = 0			  ## remote_device_db.c:620:9
 1e0730c:    44 16             	call -888 <put_database : 1e06f96 >			  ## remote_device_db.c:620:9
 1e0730e:    c7 1f             	goto -114 <handle_remote_dev_type+0xE : 1e0729e >


check_l2cap_authentication_flag:
 1e07310:    78 01             	[--sp] = {rets, r8-r4}			  ## l2cap.c:229:0
 1e07312:    c3 ff 78 1a 00 00 	r3 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:229:0
 1e07318:    03 46             	r3 = [r3 + 0]			  ## l2cap.c:229:0
 1e0731a:    28 08             	r8 = r2			  ## l2cap.c:229:0
 1e0731c:    16 08             	r6 = r1			  ## l2cap.c:229:0
 1e0731e:    07 08             	r7 = r0			  ## l2cap.c:229:0
 1e07320:    34 fc 2c 00       	r4 = r3 + 44			  ## l2cap.c:229:0
 1e07324:    62 70             	r2 = 6			  ## l2cap.c:232:14
 1e07326:    41 08             	r1 = r4			  ## l2cap.c:232:14
 1e07328:    97 f3 e0 fd       	call 3144640 <memcmp : 106eec >			  ## l2cap.c:232:14
 1e0732c:    0f 30             	if (r0 != 0) goto 30 <.GJTIE547_0_0_+0x6 : 1e0734c >			  ## l2cap.c:232:14
 1e0732e:    60 68             	r0 = b[r4 + 6] (u)			  ## l2cap.c:233:71
 1e07330:    21 fd 0f 09       	r1 = r0 & 15			  ## l2cap.c:233:71
 1e07334:    a1 e0 0a 10       	if (r1 != 10) goto 20 <.GJTIE547_0_0_+0x6 : 1e0734c >			  ## l2cap.c:233:71
 1e07338:    61 fc dc ff       	r1 = r6 + -36			  ## l2cap.c:235:17
 1e0733c:    31 e0 33 80       	if (r1 > 3) goto 102 <.GJTIE547_0_0_+0x60 : 1e073a6 >			  ## l2cap.c:235:17
 1e07340:    a1 00             	tbb [r1]


.GJTIS547_0_0_:
 1e07342:    02     < 2 : 0x2 >
 1e07343:    27     < 39 : 0x27 >
 1e07344:    2e     < 46 : 0x2E >
 1e07345:    34     < 52 : 0x34 >
 1e07346:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:242:93
 1e0734a:    2d 18             	goto 90 <.GJTIE547_0_0_+0x60 : 1e073a6 >			  ## l2cap.c:242:93
 1e0734c:    01 fd 02 69       	r1 = r6 | 2			  ## l2cap.c:255:9
 1e07350:    00 72             	r0 = 32			  ## l2cap.c:255:9
 1e07352:    61 e2 1c 10       	if (r1 != 38) goto 56 <.GJTIE547_0_0_+0x48 : 1e0738e >			  ## l2cap.c:255:9
 1e07356:    65 68             	r5 = b[r4 + 6] (u)
 1e07358:    21 fd 0f 59       	r1 = r5 & 15			  ## l2cap.c:257:71
 1e0735c:    a1 e0 17 00       	if (r1 == 10) goto 46 <.GJTIE547_0_0_+0x48 : 1e0738e >			  ## l2cap.c:257:71
 1e07360:    62 70             	r2 = 6			  ## l2cap.c:258:17
 1e07362:    40 08             	r0 = r4			  ## l2cap.c:258:17
 1e07364:    71 08             	r1 = r7			  ## l2cap.c:258:17
 1e07366:    97 f3 bd fd       	call 3144570 <memcpy : 106ee4 >			  ## l2cap.c:258:17
 1e0736a:    20 fd f0 59       	r0 = r5 & 240			  ## l2cap.c:259:79
 1e0736e:    00 fd 0a 09       	r0 = r0 | 10			  ## l2cap.c:259:79
 1e07372:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:259:79
 1e07374:    46 e2 04 10       	if (r6 != 36) goto 8 <.GJTIE547_0_0_+0x3A : 1e07380 >			  ## l2cap.c:260:21
 1e07378:    18 f9 07 40       	b[r4 + 7] = r8			  ## l2cap.c:262:96
 1e0737c:    a0 70             	r0 = 10			  ## l2cap.c:263:93
 1e0737e:    05 18             	goto 10 <.GJTIE547_0_0_+0x44 : 1e0738a >			  ## l2cap.c:263:93
 1e07380:    00 72             	r0 = 32			  ## l2cap.c:266:96
 1e07382:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:266:96
 1e07384:    a0 70             	r0 = 10			  ## l2cap.c:267:93
 1e07386:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:267:93
 1e0738a:    68 68             	b[r4 + 6] = r0
 1e0738c:    80 08             	r0 = r8
 1e0738e:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e07390:    00 70             	r0 = 0
 1e07392:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:238:90
 1e07394:    28 58             	h[r4 + 4] = r0			  ## l2cap.c:238:90
 1e07396:    08 48             	[r4 + 0] = r0			  ## l2cap.c:238:90
 1e07398:    00 72             	r0 = 32			  ## l2cap.c:239:93
 1e0739a:    78 68             	b[r4 + 7] = r0			  ## l2cap.c:239:93
 1e0739c:    04 18             	goto 8 <.GJTIE547_0_0_+0x60 : 1e073a6 >			  ## l2cap.c:239:93
 1e0739e:    a0 70             	r0 = 10			  ## l2cap.c:245:90
 1e073a0:    c8 fd 20 08       	r0 <= insert(r8, p:4, l:8)			  ## l2cap.c:245:90
 1e073a4:    68 68             	b[r4 + 6] = r0			  ## l2cap.c:245:90
 1e073a6:    70 68             	r0 = b[r4 + 7] (u)			  ## l2cap.c:250:78
 1e073a8:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1
 1e073aa:    00 d1             	r0 = r0 >> 4			  ## l2cap.c:248:78
 1e073ac:    58 01             	{pc, r8-r4} = [sp++]			  ## l2cap.c:274:1


remote_dev_company_ioctrl:
 1e073ae:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:278:0
 1e073b0:    24 08             	r4 = r2			  ## l2cap.c:278:0
 1e073b2:    16 08             	r6 = r1			  ## l2cap.c:278:0
 1e073b4:    05 08             	r5 = r0			  ## l2cap.c:278:0
 1e073b6:    71 72             	r1 = 39			  ## l2cap.c:278:0
 1e073b8:    01 2c             	if (r6 == 0) goto 2 <remote_dev_company_ioctrl+0xE : 1e073bc >			  ## l2cap.c:278:0
 1e073ba:    61 72             	r1 = 38			  ## l2cap.c:278:0
 1e073bc:    a9 17             	call -174 <check_l2cap_authentication_flag : 1e07310 >			  ## l2cap.c:285:11
 1e073be:    04 2c             	if (r6 == 0) goto 8 <remote_dev_company_ioctrl+0x1A : 1e073c8 >			  ## l2cap.c:285:11
 1e073c0:    03 28             	if (r4 == 0) goto 6 <remote_dev_company_ioctrl+0x1A : 1e073c8 >
 1e073c2:    50 08             	r0 = r5			  ## l2cap.c:287:9
 1e073c4:    41 08             	r1 = r4			  ## l2cap.c:287:9
 1e073c6:    64 17             	call -312 <handle_remote_dev_type : 1e07290 >			  ## l2cap.c:287:9
 1e073c8:    56 01             	{pc, r6-r4} = [sp++]


connection_address_for_handle:
 1e073ca:    c0 f3 4f 74       	goto 59550 <lmp_private_remote_addr_for_handler : 1e15c6c >			  ## hci_vendor.c:117:0


hci_disconnect_cmd:
 1e073ce:    c0 f3 a4 74       	goto 59720 <lmp_hci_disconnect : 1e15d1a >			  ## hci_vendor.c:1739:0


hci_get_outgoing_acl_packet_buffer:
 1e073d2:    74 01             	[--sp] = {rets, r4}			  ## hci_vendor.c:1325:0
 1e073d4:    04 08             	r4 = r0			  ## hci_vendor.c:1325:0
 1e073d6:    bf f3 55 ea       	call -11094 <bredr_tx_bulk_alloc : 1e04884 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:111:10
 1e073da:    03 20             	if (r0 == 0) goto 6 <hci_get_outgoing_acl_packet_buffer+0x10 : 1e073e2 >
 1e073dc:    5c 50             	h[r0 + 10] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:113:17
 1e073de:    80 81             	r0 += 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:115:16
 1e073e0:    54 01             	{pc, r4} = [sp++]			  ## hci_vendor.c:1328:5
 1e073e2:    00 70             	r0 = 0
 1e073e4:    54 01             	{pc, r4} = [sp++]			  ## hci_vendor.c:1328:5


bt_store_16:
 1e073e6:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:159:0
 1e073ea:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e073ec:    11 80             	r1 += 1			  ## utils.c:160:15
 1e073ee:    61 04             	r1 = r1.l (u)			  ## utils.c:161:5
 1e073f0:    12 fa 00 01       	b[r0+r1] = r2			  ## utils.c:161:19
 1e073f4:    20 00             	rts			  ## utils.c:162:1


l2cap_create_signaling_internal:
 1e073f6:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap_signaling.c:85:0
 1e073f8:    fe 0b             	sp += -4			  ## l2cap_signaling.c:85:0
 1e073fa:    76 02             	r6 = [sp+28]			  ## l2cap_signaling.c:85:0
 1e073fc:    25 08             	r5 = r2			  ## l2cap_signaling.c:85:0
 1e073fe:    04 08             	r4 = r0			  ## l2cap_signaling.c:85:0
 1e07400:    0e 02             	[sp] = r6			  ## l2cap_signaling.c:85:0
 1e07402:    02 fd 20 1a       	r2 = r1 | 8192			  ## l2cap_signaling.c:93:39
 1e07406:    01 70             	r1 = 0			  ## l2cap_signaling.c:93:5
 1e07408:    ee 17             	call -36 <bt_store_16 : 1e073e6 >			  ## l2cap_signaling.c:93:5
 1e0740a:    61 70             	r1 = 6			  ## l2cap_signaling.c:95:5
 1e0740c:    52 08             	r2 = r5			  ## l2cap_signaling.c:95:5
 1e0740e:    eb 17             	call -42 <bt_store_16 : 1e073e6 >			  ## l2cap_signaling.c:95:5
 1e07410:    60 02             	r0 = [sp+24]
 1e07412:    99 c0             	r1 = r3 << 2			  ## l2cap_signaling.c:103:50
 1e07414:    c2 ff f0 62 e0 01 	r2 = 31482608 <l2cap_signaling_commands_format : 1e062f0 >			  ## l2cap_signaling.c:103:14
 1e0741a:    21 09             	r1 += r2			  ## l2cap_signaling.c:103:50
 1e0741c:    06 f6 fc 1f       	r6 = [r1 + -4]			  ## l2cap_signaling.c:103:14
 1e07420:    8b 68             	b[r4 + 8] = r3			  ## l2cap_signaling.c:97:19
 1e07422:    98 68             	b[r4 + 9] = r0			  ## l2cap_signaling.c:99:19
 1e07424:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e07428:    2e 20             	if (r0 == 0) goto 92 <l2cap_create_signaling_internal+0x90 : 1e07486 >
 1e0742a:    c3 70             	r3 = 12
 1e0742c:    10 04             	r0 = r0.b0 (s)			  ## l2cap_signaling.c:105:17
 1e0742e:    01 fc cf ff       	r1 = r0 + -49			  ## l2cap_signaling.c:105:9
 1e07432:    21 e0 12 20       	if (r1 >= 2) goto 36 <l2cap_create_signaling_internal+0x64 : 1e0745a >			  ## l2cap_signaling.c:105:9
 1e07436:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:108:20
 1e07438:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:108:20
 1e0743a:    09 02             	[sp] = r1			  ## l2cap_signaling.c:108:20
 1e0743c:    00 40             	r0 = [r0 + 0]			  ## l2cap_signaling.c:108:20
 1e0743e:    e1 04             	r1 = r3.l (u)			  ## l2cap_signaling.c:110:13
 1e07440:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:110:31
 1e07444:    02 f9 ff 6f       	r2 = b[r6 + -1] (u)			  ## l2cap_signaling.c:111:17
 1e07448:    11 96             	r1 = r3 + 1			  ## l2cap_signaling.c:110:27
 1e0744a:    22 e3 17 10       	if (r2 != 50) goto 46 <l2cap_create_signaling_internal+0x86 : 1e0747c >			  ## l2cap_signaling.c:110:27
 1e0744e:    61 04             	r1 = r1.l (u)			  ## l2cap_signaling.c:112:17
 1e07450:    00 d2             	r0 = r0 >> 8			  ## l2cap_signaling.c:112:42
 1e07452:    10 fa 00 41       	b[r4+r1] = r0			  ## l2cap_signaling.c:112:35
 1e07456:    23 80             	r3 += 2			  ## l2cap_signaling.c:112:31
 1e07458:    12 18             	goto 36 <l2cap_create_signaling_internal+0x88 : 1e0747e >			  ## l2cap_signaling.c:112:31
 1e0745a:    40 e4 10 10       	if (r0 != 68) goto 32 <l2cap_create_signaling_internal+0x88 : 1e0747e >
 1e0745e:    00 02             	r0 = [sp]			  ## l2cap_signaling.c:117:20
 1e07460:    41 90             	r1 = r0 + 4			  ## l2cap_signaling.c:117:20
 1e07462:    09 02             	[sp] = r1			  ## l2cap_signaling.c:117:20
 1e07464:    01 02             	r1 = [sp]			  ## l2cap_signaling.c:119:20
 1e07466:    05 40             	r5 = [r0 + 0]			  ## l2cap_signaling.c:117:20
 1e07468:    40 92             	r0 = r1 + 4			  ## l2cap_signaling.c:119:20
 1e0746a:    08 02             	[sp] = r0			  ## l2cap_signaling.c:119:20
 1e0746c:    01 42             	r1 = [r1 + 0]			  ## l2cap_signaling.c:119:20
 1e0746e:    e7 04             	r7 = r3.l (u)			  ## l2cap_signaling.c:122:21
 1e07470:    c0 b9             	r0 = r4 + r7			  ## l2cap_signaling.c:122:21
 1e07472:    52 08             	r2 = r5			  ## l2cap_signaling.c:122:13
 1e07474:    97 f3 36 fd       	call 3144300 <memcpy : 106ee4 >			  ## l2cap_signaling.c:122:13
 1e07478:    c3 bb             	r3 = r5 + r7			  ## l2cap_signaling.c:124:17
 1e0747a:    01 18             	goto 2 <l2cap_create_signaling_internal+0x88 : 1e0747e >			  ## l2cap_signaling.c:124:17
 1e0747c:    13 08             	r3 = r1
 1e0747e:    80 f9 01 60       	r0 = b[r6 ++= 1] (u)			  ## l2cap_signaling.c:104:12
 1e07482:    d4 31             	if (r0 != 0) goto -88 <l2cap_create_signaling_internal+0x36 : 1e0742c >			  ## l2cap_signaling.c:104:12
 1e07484:    01 18             	goto 2 <l2cap_create_signaling_internal+0x92 : 1e07488 >			  ## l2cap_signaling.c:104:12
 1e07486:    c3 70             	r3 = 12
 1e07488:    30 fc fc ff       	r0 = r3 + -4			  ## l2cap_signaling.c:137:37
 1e0748c:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:137:5
 1e0748e:    21 70             	r1 = 2			  ## l2cap_signaling.c:137:5
 1e07490:    40 08             	r0 = r4			  ## l2cap_signaling.c:137:5
 1e07492:    a9 17             	call -174 <bt_store_16 : 1e073e6 >			  ## l2cap_signaling.c:137:5
 1e07494:    30 fc f8 ff       	r0 = r3 + -8			  ## l2cap_signaling.c:139:41
 1e07498:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:139:5
 1e0749a:    41 70             	r1 = 4			  ## l2cap_signaling.c:139:5
 1e0749c:    40 08             	r0 = r4			  ## l2cap_signaling.c:139:5
 1e0749e:    a3 17             	call -186 <bt_store_16 : 1e073e6 >			  ## l2cap_signaling.c:139:5
 1e074a0:    30 fc f4 ff       	r0 = r3 + -12			  ## l2cap_signaling.c:141:37
 1e074a4:    22 04             	r2 = r0.l (u)			  ## l2cap_signaling.c:141:5
 1e074a6:    a1 70             	r1 = 10			  ## l2cap_signaling.c:141:5
 1e074a8:    40 08             	r0 = r4			  ## l2cap_signaling.c:141:5
 1e074aa:    9d 17             	call -198 <bt_store_16 : 1e073e6 >			  ## l2cap_signaling.c:141:5
 1e074ac:    e0 04             	r0 = r3.l (u)			  ## l2cap_signaling.c:147:5
 1e074ae:    02 0a             	sp += 4			  ## l2cap_signaling.c:147:5
 1e074b0:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap_signaling.c:147:5


bredr_hci_send_acl_packet:
 1e074b2:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1332:0
 1e074b4:    04 fc e8 ff       	r4 = r0 + -24			  ## hci_vendor.c:1332:0
 1e074b8:    90 69             	r0 = b[r4 + 25] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e074ba:    82 69             	r2 = b[r4 + 24] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e074bc:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e074be:    00 c2             	r0 = r0 << 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e074c0:    20 fd 0f 0a       	r0 = r0 & 3840			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e074c4:    50 b4             	r0 |= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:123:18
 1e074c6:    80 f3 f9 73       	call 59378 <lmp_conn_for_handle : 1e15cbc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:124:35
 1e074ca:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:124:35
 1e074cc:    1e 2a             	if (r5 == 0) goto 60 <bredr_hci_send_acl_packet+0x58 : 1e0750a >
 1e074ce:    50 58             	r0 = h[r4 + 10] (u)
 1e074d0:    67 fc fc ff       	r7 = r6 + -4
 1e074d4:    07 f2 02 d0       	ifs (r7 <= r0) goto 4 <bredr_hci_send_acl_packet+0x2A : 1e074dc >
 1e074d8:    8f f3 12 df       	call 2080292 <p33_soft_reset : 3300 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e074dc:    81 9d             	r1 = r6 + 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/link_bulk.c:422:38
 1e074de:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/link_bulk.c:422:5
 1e074e0:    80 f3 eb 33       	call 26582 <lbuf_realloc : 1e0dcba >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/link_bulk.c:422:5
 1e074e4:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:143:21
 1e074e6:    68 58             	h[r4 + 12] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:143:21
 1e074e8:    5f 58             	h[r4 + 10] = r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:144:21
 1e074ea:    b0 70             	r0 = 11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:145:21
 1e074ec:    38 68             	b[r4 + 3] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:145:21
 1e074ee:    90 69             	r0 = b[r4 + 25] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:9
 1e074f0:    21 fd f0 09       	r1 = r0 & 240			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:32
 1e074f4:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:32
 1e074f6:    01 e1 01 00       	if (r1 == 16) goto 2 <bredr_hci_send_acl_packet+0x4A : 1e074fc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:32
 1e074fa:    20 70             	r0 = 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:147:9
 1e074fc:    68 68             	b[r4 + 6] = r0
 1e074fe:    00 f6 dc 50       	r0 = [r5 + 220]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:38
 1e07502:    41 08             	r1 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:5
 1e07504:    17 01             	{rets, r7-r4} = [sp++]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:5
 1e07506:    c0 f3 e1 77       	goto 61378 <link_conn_tx_bulk_avaiable : 1e164cc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:155:5
 1e0750a:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:128:9
 1e0750c:    17 01             	{rets, r7-r4} = [sp++]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:128:9
 1e0750e:    ff f3 21 eb       	goto -10686 <bredr_tx_bulk_free : 1e04b54 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:128:9


l2cap_send_signaling_packet:
 1e07512:    63 01             	[--sp] = {r3}			  ## l2cap.c:500:0
 1e07514:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:500:0
 1e07516:    f8 0b             	sp += -16			  ## l2cap.c:500:0
 1e07518:    26 08             	r6 = r2			  ## l2cap.c:500:0
 1e0751a:    14 08             	r4 = r1			  ## l2cap.c:500:0
 1e0751c:    05 08             	r5 = r0			  ## l2cap.c:500:0
 1e0751e:    a0 c0             	r0 = r4 << 2			  ## l2cap_signaling.c:159:50
 1e07520:    c1 ff f0 62 e0 01 	r1 = 31482608 <l2cap_signaling_commands_format : 1e062f0 >			  ## l2cap_signaling.c:159:14
 1e07526:    10 09             	r0 += r1			  ## l2cap_signaling.c:159:50
 1e07528:    01 f6 fc 0f       	r1 = [r0 + -4]			  ## l2cap_signaling.c:159:14
 1e0752c:    40 a2             	r0 = sp + 36
 1e0752e:    28 02             	[sp+8] = r0			  ## l2cap.c:506:5
 1e07530:    38 02             	[sp+12] = r0			  ## l2cap.c:506:5
 1e07532:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e07536:    1c 24             	if (r2 == 0) goto 56 <l2cap_send_signaling_packet+0x5E : 1e07570 >
 1e07538:    80 70             	r0 = 8
 1e0753a:    92 04             	r2 = r2.b0 (s)			  ## l2cap_signaling.c:161:17
 1e0753c:    23 fc cf ff       	r3 = r2 + -49			  ## l2cap_signaling.c:161:9
 1e07540:    23 e0 0a 20       	if (r3 >= 2) goto 20 <l2cap_send_signaling_packet+0x46 : 1e07558 >			  ## l2cap_signaling.c:161:9
 1e07544:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:164:20
 1e07546:    42 80             	r2 += 4			  ## l2cap_signaling.c:164:20
 1e07548:    3a 02             	[sp+12] = r2			  ## l2cap_signaling.c:164:20
 1e0754a:    03 f9 ff 1f       	r3 = b[r1 + -1] (u)			  ## l2cap_signaling.c:167:17
 1e0754e:    22 70             	r2 = 2			  ## l2cap_signaling.c:167:17
 1e07550:    23 e3 09 00       	if (r3 == 50) goto 18 <l2cap_send_signaling_packet+0x54 : 1e07566 >			  ## l2cap_signaling.c:167:17
 1e07554:    12 70             	r2 = 1
 1e07556:    07 18             	goto 14 <l2cap_send_signaling_packet+0x54 : 1e07566 >
 1e07558:    42 e4 06 10       	if (r2 != 68) goto 12 <l2cap_send_signaling_packet+0x56 : 1e07568 >
 1e0755c:    32 02             	r2 = [sp+12]			  ## l2cap_signaling.c:173:20
 1e0755e:    43 94             	r3 = r2 + 4			  ## l2cap_signaling.c:173:20
 1e07560:    3b 02             	[sp+12] = r3			  ## l2cap_signaling.c:173:20
 1e07562:    02 44             	r2 = [r2 + 0]			  ## l2cap_signaling.c:173:20
 1e07564:    20 04             	r0 = r0.l (u)			  ## l2cap_signaling.c:174:17
 1e07566:    20 09             	r0 += r2
 1e07568:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## l2cap_signaling.c:160:12
 1e0756c:    e6 35             	if (r2 != 0) goto -52 <l2cap_send_signaling_packet+0x28 : 1e0753a >			  ## l2cap_signaling.c:160:12
 1e0756e:    01 18             	goto 2 <l2cap_send_signaling_packet+0x60 : 1e07572 >			  ## l2cap_signaling.c:160:12
 1e07570:    80 70             	r0 = 8
 1e07572:    20 04             	r0 = r0.l (u)			  ## l2cap.c:510:18
 1e07574:    2e 17             	call -420 <hci_get_outgoing_acl_packet_buffer : 1e073d2 >			  ## l2cap.c:510:18
 1e07576:    07 08             	r7 = r0			  ## l2cap.c:510:18
 1e07578:    02 3e             	if (r7 != 0) goto 4 <l2cap_send_signaling_packet+0x6C : 1e0757e >
 1e0757a:    8f f3 c1 de       	call 2080130 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0757e:    40 a2             	r0 = sp + 36
 1e07580:    28 02             	[sp+8] = r0			  ## l2cap.c:512:5
 1e07582:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:188:12
 1e07584:    80 05             	r0 = r6.b0 (u)			  ## l2cap_signaling.c:188:72
 1e07586:    12 70             	r2 = 1			  ## l2cap_signaling.c:188:12
 1e07588:    08 02             	[sp] = r0			  ## l2cap_signaling.c:188:12
 1e0758a:    70 08             	r0 = r7			  ## l2cap_signaling.c:188:12
 1e0758c:    51 08             	r1 = r5			  ## l2cap_signaling.c:188:12
 1e0758e:    43 08             	r3 = r4			  ## l2cap_signaling.c:188:12
 1e07590:    32 17             	call -412 <l2cap_create_signaling_internal : 1e073f6 >			  ## l2cap_signaling.c:188:12
 1e07592:    01 08             	r1 = r0			  ## l2cap_signaling.c:188:12
 1e07594:    70 08             	r0 = r7			  ## l2cap.c:516:12
 1e07596:    8d 17             	call -230 <bredr_hci_send_acl_packet : 1e074b2 >			  ## l2cap.c:516:12
 1e07598:    08 0a             	sp += 16			  ## l2cap.c:516:12
 1e0759a:    17 01             	{rets, r7-r4} = [sp++]			  ## l2cap.c:516:12
 1e0759c:    02 0a             	sp += 4			  ## l2cap.c:516:12
 1e0759e:    20 00             	rts			  ## l2cap.c:516:12


hci_number_free_acl_slots_for_connection_type:
 1e075a0:    75 01             	[--sp] = {rets, r5, r4}			  ## hci_vendor.c:2043:0
 1e075a2:    c2 ff 40 18 00 00 	r2 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:2043:0
 1e075a8:    04 44             	r4 = [r2 + 0]			  ## hci_vendor.c:2043:0
 1e075aa:    01 70             	r1 = 0			  ## hci_vendor.c:2043:0
 1e075ac:    03 70             	r3 = 0			  ## hci_vendor.c:2043:0
 1e075ae:    09 28             	if (r4 == 0) goto 18 <hci_number_free_acl_slots_for_connection_type+0x22 : 1e075c2 >			  ## hci_vendor.c:2043:0
 1e075b0:    35 48             	r5 = [r4 + 12]			  ## hci_vendor.c:2050:25
 1e075b2:    00 ff ff 50 03 00 	if (r5 == 255) goto 6 <hci_number_free_acl_slots_for_connection_type+0x1E : 1e075be >			  ## hci_vendor.c:2050:25
 1e075b8:    05 f9 d2 44       	r5 = b[r4 + 1234] (u)
 1e075bc:    53 09             	r3 += r5			  ## hci_vendor.c:2054:33
 1e075be:    04 48             	r4 = [r4 + 0]
 1e075c0:    f7 39             	if (r4 != 0) goto -18 <hci_number_free_acl_slots_for_connection_type+0x10 : 1e075b0 >
 1e075c2:    02 f9 1a 22       	r2 = b[r2 + 538] (u)			  ## hci_vendor.c:2066:22
 1e075c6:    03 24             	if (r2 == 0) goto 6 <hci_number_free_acl_slots_for_connection_type+0x2E : 1e075ce >			  ## hci_vendor.c:2066:22
 1e075c8:    e1 b4             	r1 = r2 - r3			  ## hci_vendor.c:2068:63
 1e075ca:    01 e0 08 b0       	ifs (r1 < 0) goto 16 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e075de >
 1e075ce:    00 ff fe 00 05 00 	if (r0 == 254) goto 10 <hci_number_free_acl_slots_for_connection_type+0x3E : 1e075de >
 1e075d4:    01 ff ff 00 04 00 	if (r0 != 255) goto 8 <hci_number_free_acl_slots_for_connection_type+0x42 : 1e075e2 >
 1e075da:    10 70             	r0 = 1
 1e075dc:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2100:1
 1e075de:    00 70             	r0 = 0
 1e075e0:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2100:1
 1e075e2:    10 70             	r0 = 1			  ## hci_vendor.c:2098:9
 1e075e4:    01 24             	if (r2 == 0) goto 2 <hci_number_free_acl_slots_for_connection_type+0x48 : 1e075e8 >
 1e075e6:    10 08             	r0 = r1			  ## hci_vendor.c:2098:9
 1e075e8:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_vendor.c:2100:1


hci_number_free_acl_slots_for_handle:
 1e075ea:    34 00             	[--sp] = rets			  ## hci_vendor.c:2103:0
 1e075ec:    bf f3 71 f9       	call -3358 <le_hci_connection_for_handle : 1e068d2 >			  ## hci_vendor.c:2105:39
 1e075f0:    03 20             	if (r0 == 0) goto 6 <hci_number_free_acl_slots_for_handle+0xE : 1e075f8 >
 1e075f2:    30 40             	r0 = [r0 + 12]			  ## hci_vendor.c:2109:70
 1e075f4:    88 01             	{rets} = [sp++]			  ## hci_vendor.c:2109:12
 1e075f6:    d4 1f             	goto -88 <hci_number_free_acl_slots_for_connection_type : 1e075a0 >			  ## hci_vendor.c:2109:12
 1e075f8:    00 70             	r0 = 0
 1e075fa:    30 00             	pc = [sp++]			  ## hci_vendor.c:2110:1


hci_can_send_acl_packet_now:
 1e075fc:    34 00             	[--sp] = rets			  ## hci_vendor.c:1846:0
 1e075fe:    c1 ff 40 18 00 00 	r1 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:1847:22
 1e07604:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1847:22
 1e07608:    01 08             	r1 = r0			  ## hci_vendor.c:1847:22
 1e0760a:    00 70             	r0 = 0
 1e0760c:    07 34             	if (r2 != 0) goto 14 <hci_can_send_acl_packet_now+0x20 : 1e0761c >
 1e0760e:    10 08             	r0 = r1			  ## hci_vendor.c:2127:12
 1e07610:    ec 17             	call -40 <hci_number_free_acl_slots_for_handle : 1e075ea >			  ## hci_vendor.c:2127:12
 1e07612:    01 08             	r1 = r0			  ## hci_vendor.c:2127:12
 1e07614:    10 70             	r0 = 1			  ## hci_vendor.c:2127:61
 1e07616:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_packet_now+0x20 : 1e0761c >			  ## hci_vendor.c:2127:61
 1e0761a:    00 70             	r0 = 0			  ## hci_vendor.c:2127:61
 1e0761c:    30 00             	pc = [sp++]			  ## hci_vendor.c:1851:1


hci_reserve_packet_buffer:
 1e0761e:    c1 ff 40 18 00 00 	r1 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:1854:0
 1e07624:    02 f9 15 12       	r2 = b[r1 + 533] (u)			  ## hci_vendor.c:1855:22
 1e07628:    00 70             	r0 = 0			  ## hci_vendor.c:1855:22
 1e0762a:    03 34             	if (r2 != 0) goto 6 <hci_reserve_packet_buffer+0x14 : 1e07632 >			  ## hci_vendor.c:1855:22
 1e0762c:    10 70             	r0 = 1
 1e0762e:    10 f9 15 12       	b[r1 + 533] = r0			  ## hci_vendor.c:1858:45
 1e07632:    20 00             	rts			  ## hci_vendor.c:1860:1


le_hci_send_acl_packet_fragments:
 1e07634:    7b 01             	[--sp] = {rets, r11-r4}			  ## hci_vendor.c:1177:0
 1e07636:    cb ff 40 18 00 00 	r11 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:1177:0
 1e0763c:    04 f7 1c b2       	r4 = h[r11 + 540] (u)			  ## hci_vendor.c:1177:0
 1e07640:    0a 08             	r10 = r0			  ## hci_vendor.c:1177:0
 1e07642:    09 70             	r9 = 0			  ## hci_vendor.c:1177:0
 1e07644:    c8 ff ff df 00 00 	r8 = 57343 <_nv_pre_end+0x24FF : dfff >			  ## hci_vendor.c:1177:0
 1e0764a:    05 f7 16 b2       	r5 = h[r11 + 534] (u)			  ## hci_vendor.c:1185:54
 1e0764e:    00 f7 18 b2       	r0 = h[r11 + 536] (u)			  ## hci_vendor.c:1186:46
 1e07652:    67 b1             	r7 = r0 - r5			  ## hci_vendor.c:1186:88
 1e07654:    46 08             	r6 = r4			  ## hci_vendor.c:1190:13
 1e07656:    47 f2 01 c0       	ifs (r7 > r4) goto 2 <le_hci_send_acl_packet_fragments+0x28 : 1e0765c >			  ## hci_vendor.c:1190:13
 1e0765a:    76 08             	r6 = r7			  ## hci_vendor.c:1190:13
 1e0765c:    50 fc fc ff       	r0 = r5 + -4			  ## hci_vendor.c:1185:76
 1e07660:    23 04             	r3 = r0.l (u)			  ## hci_vendor.c:1185:76
 1e07662:    0e 26             	if (r3 == 0) goto 28 <le_hci_send_acl_packet_fragments+0x4C : 1e07680 >			  ## hci_vendor.c:1185:76
 1e07664:    00 f9 09 b0       	r0 = b[r11 + 9] (u)			  ## hci_vendor.c:1197:41
 1e07668:    01 f9 08 b0       	r1 = b[r11 + 8] (u)			  ## hci_vendor.c:1197:41
 1e0766c:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1198:60
 1e07670:    00 fd 10 1a       	r0 = r1 | 4096			  ## hci_vendor.c:1198:60
 1e07674:    e2 fd 80 20       	r2 = r0 & r8			  ## hci_vendor.c:1199:13
 1e07678:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1197:41
 1e0767c:    31 08             	r1 = r3			  ## hci_vendor.c:1199:13
 1e0767e:    b3 16             	call -666 <bt_store_16 : 1e073e6 >			  ## hci_vendor.c:1199:13
 1e07680:    b0 fc 08 00       	r0 = r11 + 8			  ## hci_vendor.c:1203:9
 1e07684:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1203:9
 1e07686:    51 fc fe ff       	r1 = r5 + -2			  ## hci_vendor.c:1203:68
 1e0768a:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1203:9
 1e0768c:    ac 16             	call -680 <bt_store_16 : 1e073e6 >			  ## hci_vendor.c:1203:9
 1e0768e:    00 f9 d2 a4       	r0 = b[r10 + 1234] (u)			  ## hci_vendor.c:1206:41
 1e07692:    10 80             	r0 += 1			  ## hci_vendor.c:1206:41
 1e07694:    10 f9 d2 a4       	b[r10 + 1234] = r0			  ## hci_vendor.c:1206:41
 1e07698:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x74 : 1e076a8 >			  ## hci_vendor.c:1209:13
 1e0769c:    00 f7 16 b2       	r0 = h[r11 + 534] (u)			  ## hci_vendor.c:1211:48
 1e076a0:    60 09             	r0 += r6			  ## hci_vendor.c:1211:48
 1e076a2:    10 f7 16 b2       	h[r11 + 534] = r0			  ## hci_vendor.c:1211:48
 1e076a6:    04 18             	goto 8 <le_hci_send_acl_packet_fragments+0x7C : 1e076b0 >			  ## hci_vendor.c:1211:48
 1e076a8:    19 f7 16 b2       	h[r11 + 534] = r9			  ## hci_vendor.c:1214:48
 1e076ac:    19 f7 18 b2       	h[r11 + 536] = r9			  ## hci_vendor.c:1215:55
 1e076b0:    80 fb b0 03       	r0 = r3 + r11			  ## hci_vendor.c:1219:28
 1e076b4:    80 80             	r0 += 8			  ## hci_vendor.c:1219:28
 1e076b6:    41 9c             	r1 = r6 + 4			  ## hci_vendor.c:1220:57
 1e076b8:    61 04             	r1 = r1.l (u)			  ## hci_vendor.c:1222:9
 1e076ba:    80 f3 38 4d       	call 39536 <le_hci_send_acl_packet : 1e1112e >			  ## hci_vendor.c:1222:9
 1e076be:    47 f2 06 d0       	ifs (r7 <= r4) goto 12 <le_hci_send_acl_packet_fragments+0x9A : 1e076ce >			  ## hci_vendor.c:1225:13
 1e076c2:    00 f7 04 a0       	r0 = h[r10 + 4] (u)			  ## hci_vendor.c:2127:12
 1e076c6:    91 17             	call -222 <hci_number_free_acl_slots_for_handle : 1e075ea >			  ## hci_vendor.c:2127:12
 1e076c8:    00 e0 bf cf       	ifs (r0 > 0) goto -130 <le_hci_send_acl_packet_fragments+0x16 : 1e0764a >			  ## hci_vendor.c:2127:12
 1e076cc:    5b 01             	{pc, r11-r4} = [sp++]			  ## hci_vendor.c:2127:12
 1e076ce:    b0 fc 15 02       	r0 = r11 + 533			  ## hci_vendor.c:1940:45
 1e076d2:    01 70             	r1 = 0			  ## hci_vendor.c:1940:45
 1e076d4:    52 70             	r2 = 5			  ## hci_vendor.c:1940:45
 1e076d6:    97 f3 0b fc       	call 3143702 <memset : 106ef0 >			  ## hci_vendor.c:1940:45
 1e076da:    5b 01             	{pc, r11-r4} = [sp++]


hci_le_send_acl_packet_buffer:
 1e076dc:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:1277:0
 1e076de:    c7 ff 40 18 00 00 	r7 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:1277:0
 1e076e4:    01 f9 15 72       	r1 = b[r7 + 533] (u)			  ## hci_vendor.c:1279:23
 1e076e8:    05 08             	r5 = r0			  ## hci_vendor.c:1279:23
 1e076ea:    74 75             	r4 = 87			  ## hci_vendor.c:1279:23
 1e076ec:    1e 22             	if (r1 == 0) goto 60 <hci_le_send_acl_packet_buffer+0x4E : 1e0772a >			  ## hci_vendor.c:1279:23
 1e076ee:    90 6e             	r0 = b[r7 + 9] (u)			  ## hci_vendor.c:1284:35
 1e076f0:    81 6e             	r1 = b[r7 + 8] (u)			  ## hci_vendor.c:1284:35
 1e076f2:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:1284:35
 1e076f4:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:1284:35
 1e076f8:    e0 fd 10 60       	r6 = r0 | r1			  ## hci_vendor.c:1284:35
 1e076fc:    60 08             	r0 = r6			  ## hci_vendor.c:2127:12
 1e076fe:    75 17             	call -278 <hci_number_free_acl_slots_for_handle : 1e075ea >			  ## hci_vendor.c:2127:12
 1e07700:    00 e0 0c d0       	ifs (r0 <= 0) goto 24 <hci_le_send_acl_packet_buffer+0x40 : 1e0771c >			  ## hci_vendor.c:2127:12
 1e07704:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1292:39
 1e07706:    bf f3 e4 f8       	call -3640 <le_hci_connection_for_handle : 1e068d2 >			  ## hci_vendor.c:1292:39
 1e0770a:    0c 20             	if (r0 == 0) goto 24 <hci_le_send_acl_packet_buffer+0x48 : 1e07724 >
 1e0770c:    15 f7 18 72       	h[r7 + 536] = r5			  ## hci_vendor.c:1304:47
 1e07710:    41 70             	r1 = 4			  ## hci_vendor.c:1306:40
 1e07712:    11 f7 16 72       	h[r7 + 534] = r1			  ## hci_vendor.c:1306:40
 1e07716:    8e 17             	call -228 <le_hci_send_acl_packet_fragments : 1e07634 >			  ## hci_vendor.c:1308:12
 1e07718:    04 70             	r4 = 0
 1e0771a:    07 18             	goto 14 <hci_le_send_acl_packet_buffer+0x4E : 1e0772a >
 1e0771c:    00 70             	r0 = 0			  ## hci_vendor.c:1940:45
 1e0771e:    10 f9 15 72       	b[r7 + 533] = r0			  ## hci_vendor.c:1940:45
 1e07722:    03 18             	goto 6 <hci_le_send_acl_packet_buffer+0x4E : 1e0772a >			  ## hci_vendor.c:1940:45
 1e07724:    04 70             	r4 = 0
 1e07726:    14 f9 15 72       	b[r7 + 533] = r4			  ## hci_vendor.c:1940:45
 1e0772a:    40 08             	r0 = r4			  ## hci_vendor.c:1309:1
 1e0772c:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:1309:1


l2cap_send_le_signaling_packet:
 1e0772e:    63 01             	[--sp] = {r3}			  ## l2cap.c:523:0
 1e07730:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:523:0
 1e07732:    fa 0b             	sp += -12			  ## l2cap.c:523:0
 1e07734:    26 08             	r6 = r2			  ## l2cap.c:523:0
 1e07736:    14 08             	r4 = r1			  ## l2cap.c:523:0
 1e07738:    05 08             	r5 = r0			  ## l2cap.c:523:0
 1e0773a:    60 17             	call -320 <hci_can_send_acl_packet_now : 1e075fc >			  ## l2cap.c:529:10
 1e0773c:    0e 20             	if (r0 == 0) goto 28 <l2cap_send_le_signaling_packet+0x2C : 1e0775a >			  ## l2cap.c:529:10
 1e0773e:    6f 17             	call -290 <hci_reserve_packet_buffer : 1e0761e >			  ## l2cap.c:533:5
 1e07740:    c0 a1             	r0 = sp + 28			  ## l2cap.c:533:5
 1e07742:    28 02             	[sp+8] = r0			  ## l2cap.c:537:5
 1e07744:    18 02             	[sp+4] = r0			  ## l2cap_signaling.c:194:12
 1e07746:    81 05             	r1 = r6.b0 (u)			  ## l2cap_signaling.c:194:72
 1e07748:    c0 ff 48 18 00 00 	r0 = 6216 <report_irq_stack_end+0x8 : 1848 >			  ## l2cap_signaling.c:194:12
 1e0774e:    52 70             	r2 = 5			  ## l2cap_signaling.c:194:12
 1e07750:    09 02             	[sp] = r1			  ## l2cap_signaling.c:194:12
 1e07752:    51 08             	r1 = r5			  ## l2cap_signaling.c:194:12
 1e07754:    43 08             	r3 = r4			  ## l2cap_signaling.c:194:12
 1e07756:    4f 16             	call -866 <l2cap_create_signaling_internal : 1e073f6 >			  ## l2cap_signaling.c:194:12
 1e07758:    c1 17             	call -126 <hci_le_send_acl_packet_buffer : 1e076dc >			  ## l2cap.c:541:5
 1e0775a:    06 0a             	sp += 12
 1e0775c:    16 01             	{rets, r6-r4} = [sp++]			  ## l2cap.c:542:1
 1e0775e:    02 0a             	sp += 4			  ## l2cap.c:542:1
 1e07760:    20 00             	rts			  ## l2cap.c:542:1


btstack_memory_l2cap_channel_free:
 1e07762:    41 70             	r1 = 4			  ## btstack_memory.c:133:0
 1e07764:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:133:0
 1e07766:    05 24             	if (r2 == 0) goto 10 <btstack_memory_l2cap_channel_free+0x10 : 1e07772 >			  ## btstack_memory.c:133:0
 1e07768:    23 08             	r3 = r2			  ## btstack_memory.c:133:0
 1e0776a:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_l2cap_channel_free+0x14 : 1e07776 >			  ## btstack_memory.c:133:0
 1e0776e:    03 46             	r3 = [r3 + 0]			  ## btstack_memory.c:133:0
 1e07770:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_l2cap_channel_free+0x8 : 1e0776a >			  ## btstack_memory.c:133:0
 1e07772:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e07774:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e07776:    20 00             	rts			  ## btstack_memory.c:135:1


l2cap_dispatch:
 1e07778:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:310:0
 1e0777a:    fe 0b             	sp += -4			  ## l2cap.c:310:0
 1e0777c:    36 40             	r6 = [r0 + 12]			  ## l2cap.c:311:18
 1e0777e:    f4 50             	r4 = h[r0 + 30] (u)			  ## l2cap.c:314:94
 1e07780:    25 08             	r5 = r2			  ## l2cap.c:314:94
 1e07782:    03 2c             	if (r6 == 0) goto 6 <l2cap_dispatch+0x12 : 1e0778a >			  ## l2cap.c:311:9
 1e07784:    10 08             	r0 = r1			  ## l2cap.c:312:9
 1e07786:    41 08             	r1 = r4			  ## l2cap.c:312:9
 1e07788:    09 18             	goto 18 <l2cap_dispatch+0x24 : 1e0779c >
 1e0778a:    c2 ff 78 1a 00 00 	r2 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:314:11
 1e07790:    02 44             	r2 = [r2 + 0]			  ## l2cap.c:314:11
 1e07792:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:314:49
 1e07794:    06 44             	r6 = [r2 + 0]			  ## l2cap.c:314:24
 1e07796:    0b 02             	[sp] = r3			  ## l2cap.c:314:9
 1e07798:    42 08             	r2 = r4			  ## l2cap.c:314:9
 1e0779a:    53 08             	r3 = r5			  ## l2cap.c:314:9
 1e0779c:    86 00             	call r6
 1e0779e:    02 0a             	sp += 4
 1e077a0:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:316:1


l2cap_emit_channel_opened:
 1e077a2:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:319:0
 1e077a4:    f4 0b             	sp += -24			  ## l2cap.c:319:0
 1e077a6:    04 08             	r4 = r0			  ## l2cap.c:319:0
 1e077a8:    00 77             	r0 = 112			  ## l2cap.c:325:14
 1e077aa:    d0 f5 03 00       	b[sp+3] = r0			  ## l2cap.c:325:14
 1e077ae:    30 71             	r0 = 19			  ## l2cap.c:325:14
 1e077b0:    d0 f5 04 00       	b[sp+4] = r0			  ## l2cap.c:326:14
 1e077b4:    d1 f5 05 00       	b[sp+5] = r1			  ## l2cap.c:327:14
 1e077b8:    35 a0             	r5 = sp + 3			  ## l2cap.c:327:14
 1e077ba:    30 9a             	r0 = r5 + 3			  ## l2cap.c:328:19
 1e077bc:    61 99             	r1 = r4 + 22			  ## l2cap.c:328:29
 1e077be:    62 70             	r2 = 6			  ## utils.c:188:5
 1e077c0:    97 f3 90 fb       	call 3143456 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e077c4:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:329:37
 1e077c6:    d0 f5 0c 00       	b[sp+12] = r0			  ## utils.c:160:19
 1e077ca:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e077cc:    d0 f5 0d 00       	b[sp+13] = r0			  ## utils.c:161:19
 1e077d0:    e0 58             	r0 = h[r4 + 28] (u)			  ## l2cap.c:330:55
 1e077d2:    d0 f5 0e 00       	b[sp+14] = r0			  ## utils.c:160:19
 1e077d6:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e077d8:    d0 f5 0f 00       	b[sp+15] = r0			  ## utils.c:161:19
 1e077dc:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:331:55
 1e077de:    d0 f5 10 00       	b[sp+16] = r0			  ## utils.c:160:19
 1e077e2:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e077e4:    d0 f5 11 00       	b[sp+17] = r0			  ## utils.c:161:19
 1e077e8:    00 59             	r0 = h[r4 + 32] (u)			  ## l2cap.c:332:55
 1e077ea:    d0 f5 12 00       	b[sp+18] = r0			  ## utils.c:160:19
 1e077ee:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e077f0:    d0 f5 13 00       	b[sp+19] = r0			  ## utils.c:161:19
 1e077f4:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:333:55
 1e077f6:    d0 f5 14 00       	b[sp+20] = r0			  ## utils.c:160:19
 1e077fa:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e077fc:    d0 f5 15 00       	b[sp+21] = r0			  ## utils.c:161:19
 1e07800:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:334:55
 1e07802:    d0 f5 16 00       	b[sp+22] = r0			  ## utils.c:160:19
 1e07806:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07808:    d0 f5 17 00       	b[sp+23] = r0			  ## utils.c:161:19
 1e0780c:    41 70             	r1 = 4			  ## l2cap.c:335:5
 1e0780e:    53 71             	r3 = 21			  ## l2cap.c:335:5
 1e07810:    40 08             	r0 = r4			  ## l2cap.c:335:5
 1e07812:    52 08             	r2 = r5			  ## l2cap.c:335:5
 1e07814:    b1 17             	call -158 <l2cap_dispatch : 1e07778 >			  ## l2cap.c:335:5
 1e07816:    0c 0a             	sp += 24			  ## l2cap.c:335:5
 1e07818:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:336:1


l2cap_emit_credits:
 1e0781a:    34 00             	[--sp] = rets			  ## l2cap.c:367:0
 1e0781c:    fc 0b             	sp += -8			  ## l2cap.c:367:0
 1e0781e:    42 77             	r2 = 116			  ## l2cap.c:372:14
 1e07820:    d2 f5 03 00       	b[sp+3] = r2			  ## l2cap.c:372:14
 1e07824:    32 70             	r2 = 3			  ## l2cap.c:372:14
 1e07826:    d2 f5 04 00       	b[sp+4] = r2			  ## l2cap.c:373:14
 1e0782a:    f2 50             	r2 = h[r0 + 30] (u)			  ## l2cap.c:374:54
 1e0782c:    d2 f5 05 00       	b[sp+5] = r2			  ## utils.c:160:19
 1e07830:    12 d2             	r2 = r2 >> 8			  ## utils.c:161:21
 1e07832:    d2 f5 06 00       	b[sp+6] = r2			  ## utils.c:161:19
 1e07836:    d1 f5 07 00       	b[sp+7] = r1			  ## l2cap.c:375:14
 1e0783a:    32 a0             	r2 = sp + 3			  ## l2cap.c:375:14
 1e0783c:    41 70             	r1 = 4			  ## l2cap.c:376:5
 1e0783e:    53 70             	r3 = 5			  ## l2cap.c:376:5
 1e07840:    9b 17             	call -202 <l2cap_dispatch : 1e07778 >			  ## l2cap.c:376:5
 1e07842:    04 0a             	sp += 8
 1e07844:    30 00             	pc = [sp++]			  ## l2cap.c:377:1


l2cap_emit_channel_closed:
 1e07846:    34 00             	[--sp] = rets			  ## l2cap.c:339:0
 1e07848:    fe 0b             	sp += -4			  ## l2cap.c:339:0
 1e0784a:    11 77             	r1 = 113			  ## l2cap.c:344:14
 1e0784c:    d1 f5 00 00       	b[sp] = r1			  ## l2cap.c:344:14
 1e07850:    21 70             	r1 = 2			  ## l2cap.c:344:14
 1e07852:    d1 f5 01 00       	b[sp+1] = r1			  ## l2cap.c:345:14
 1e07856:    f1 50             	r1 = h[r0 + 30] (u)			  ## l2cap.c:346:54
 1e07858:    d1 f5 02 00       	b[sp+2] = r1			  ## utils.c:160:19
 1e0785c:    09 d2             	r1 = r1 >> 8			  ## utils.c:161:21
 1e0785e:    d1 f5 03 00       	b[sp+3] = r1			  ## utils.c:161:19
 1e07862:    02 a0             	r2 = sp + 0			  ## utils.c:161:19
 1e07864:    41 70             	r1 = 4			  ## l2cap.c:347:5
 1e07866:    43 70             	r3 = 4			  ## l2cap.c:347:5
 1e07868:    87 17             	call -242 <l2cap_dispatch : 1e07778 >			  ## l2cap.c:347:5
 1e0786a:    02 0a             	sp += 4
 1e0786c:    30 00             	pc = [sp++]			  ## l2cap.c:348:1


l2cap_finialize_channel_close:
 1e0786e:    74 01             	[--sp] = {rets, r4}			  ## l2cap.c:2249:0
 1e07870:    04 08             	r4 = r0			  ## l2cap.c:2249:0
 1e07872:    10 70             	r0 = 1			  ## l2cap.c:2250:38
 1e07874:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:2250:38
 1e07876:    40 08             	r0 = r4			  ## l2cap.c:2251:5
 1e07878:    e6 17             	call -52 <l2cap_emit_channel_closed : 1e07846 >			  ## l2cap.c:2251:5
 1e0787a:    c0 ff 78 1a 00 00 	r0 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:2253:5
 1e07880:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:2253:5
 1e07882:    80 80             	r0 += 8			  ## l2cap.c:2253:5
 1e07884:    41 08             	r1 = r4			  ## l2cap.c:2253:5
 1e07886:    bf f3 cd f6       	call -4710 <btstack_linked_list_remove : 1e06624 >			  ## l2cap.c:2253:5
 1e0788a:    40 08             	r0 = r4			  ## l2cap.c:2267:5
 1e0788c:    14 01             	{rets, r4} = [sp++]			  ## l2cap.c:2267:5
 1e0788e:    69 1f             	goto -302 <btstack_memory_l2cap_channel_free : 1e07762 >			  ## l2cap.c:2267:5


btstack_linked_list_iterator_init:
 1e07890:    c0 f4 00 09       	[r0 + 0] = 0			  ## btstack_linked_list.c:160:0
 1e07894:    19 40             	[r0 + 4] = r1			  ## btstack_linked_list.c:162:14
 1e07896:    01 42             	r1 = [r1 + 0]			  ## btstack_linked_list.c:163:16
 1e07898:    29 40             	[r0 + 8] = r1			  ## btstack_linked_list.c:163:14
 1e0789a:    20 00             	rts			  ## btstack_linked_list.c:164:1


hci_connections_get_iterator:
 1e0789c:    c1 ff 40 18 00 00 	r1 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:1863:0
 1e078a2:    f6 1f             	goto -20 <btstack_linked_list_iterator_init : 1e07890 >			  ## hci_vendor.c:1864:5


l2cap_run:
 1e078a4:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:658:0
 1e078a6:    e6 0b             	sp += -52			  ## l2cap.c:658:0
 1e078a8:    cb ff 78 1a 00 00 	r11 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:658:0
 1e078ae:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:672:12
 1e078b2:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:672:42
 1e078b4:    70 22             	if (r1 == 0) goto 224 <l2cap_run+0xF2 : 1e07996 >			  ## l2cap.c:672:42
 1e078b6:    18 70             	r8 = 1
 1e078b8:    0a 70             	r10 = 0
 1e078ba:    49 70             	r9 = 4
 1e078bc:    17 70             	r7 = 1
 1e078be:    f1 60             	r1 = b[r0 + 15] (u)
 1e078c0:    96 50             	r6 = h[r0 + 18] (u)			  ## l2cap.c:676:73
 1e078c2:    e4 60             	r4 = b[r0 + 14] (u)			  ## l2cap.c:675:71
 1e078c4:    65 50             	r5 = h[r0 + 12] (u)			  ## l2cap.c:674:71
 1e078c6:    91 e0 12 d0       	ifs (r1 <= 9) goto 36 <l2cap_run+0x4A : 1e078ee >			  ## l2cap.c:674:71
 1e078ca:    a1 e0 1e 00       	if (r1 == 10) goto 60 <l2cap_run+0x66 : 1e0790a >
 1e078ce:    41 e1 28 00       	if (r1 == 20) goto 80 <l2cap_run+0x7E : 1e07922 >
 1e078d2:    f1 e1 43 10       	if (r1 != 31) goto 134 <l2cap_run+0xB8 : 1e0795c >
 1e078d6:    50 08             	r0 = r5			  ## l2cap.c:722:22
 1e078d8:    91 16             	call -734 <hci_can_send_acl_packet_now : 1e075fc >			  ## l2cap.c:722:22
 1e078da:    58 20             	if (r0 == 0) goto 176 <l2cap_run+0xE8 : 1e0798c >			  ## l2cap.c:722:22
 1e078dc:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:727:17
 1e078e0:    11 70             	r1 = 1			  ## l2cap.c:727:17
 1e078e2:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:727:17
 1e078e6:    50 08             	r0 = r5			  ## l2cap.c:727:17
 1e078e8:    42 08             	r2 = r4			  ## l2cap.c:727:17
 1e078ea:    63 08             	r3 = r6			  ## l2cap.c:727:17
 1e078ec:    28 18             	goto 80 <l2cap_run+0x9A : 1e0793e >			  ## l2cap.c:727:17
 1e078ee:    11 e0 28 00       	if (r1 == 1) goto 80 <l2cap_run+0x9E : 1e07942 >
 1e078f2:    21 e0 33 10       	if (r1 != 2) goto 102 <l2cap_run+0xB8 : 1e0795c >
 1e078f6:    18 f5 08 00       	[sp+8] = r8			  ## l2cap.c:682:13
 1e078fa:    1e 02             	[sp+4] = r6			  ## l2cap.c:682:13
 1e078fc:    31 70             	r1 = 3			  ## l2cap.c:682:13
 1e078fe:    03 70             	r3 = 0			  ## l2cap.c:682:13
 1e07900:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:682:13
 1e07904:    50 08             	r0 = r5			  ## l2cap.c:682:13
 1e07906:    42 08             	r2 = r4			  ## l2cap.c:682:13
 1e07908:    28 18             	goto 80 <l2cap_run+0xB6 : 1e0795a >			  ## l2cap.c:682:13
 1e0790a:    26 e0 1c 10       	if (r6 != 2) goto 56 <l2cap_run+0xA2 : 1e07946 >			  ## l2cap.c:692:17
 1e0790e:    a0 40             	r0 = [r0 + 40]			  ## l2cap.c:693:62
 1e07910:    78 02             	[sp+28] = r0			  ## l2cap.c:693:21
 1e07912:    c0 a1             	r0 = sp + 28			  ## l2cap.c:693:21
 1e07914:    28 02             	[sp+8] = r0			  ## l2cap.c:695:17
 1e07916:    19 f5 04 00       	[sp+4] = r9			  ## l2cap.c:695:17
 1e0791a:    b1 70             	r1 = 11			  ## l2cap.c:695:17
 1e0791c:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:695:17
 1e07920:    19 18             	goto 50 <l2cap_run+0xB0 : 1e07954 >			  ## l2cap.c:695:17
 1e07922:    50 08             	r0 = r5			  ## l2cap.c:710:22
 1e07924:    6b 16             	call -810 <hci_can_send_acl_packet_now : 1e075fc >			  ## l2cap.c:710:22
 1e07926:    32 20             	if (r0 == 0) goto 100 <l2cap_run+0xE8 : 1e0798c >			  ## l2cap.c:710:22
 1e07928:    3e 02             	[sp+12] = r6			  ## l2cap.c:715:17
 1e0792a:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:715:17
 1e0792e:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:715:17
 1e07932:    51 71             	r1 = 21			  ## l2cap.c:715:17
 1e07934:    03 70             	r3 = 0			  ## l2cap.c:715:17
 1e07936:    1a f5 00 00       	[sp] = r10			  ## l2cap.c:715:17
 1e0793a:    50 08             	r0 = r5			  ## l2cap.c:715:17
 1e0793c:    42 08             	r2 = r4			  ## l2cap.c:715:17
 1e0793e:    f7 16             	call -530 <l2cap_send_le_signaling_packet : 1e0772e >
 1e07940:    0d 18             	goto 26 <l2cap_run+0xB8 : 1e0795c >
 1e07942:    11 70             	r1 = 1			  ## l2cap.c:703:13
 1e07944:    07 18             	goto 14 <l2cap_run+0xB0 : 1e07954 >			  ## l2cap.c:703:13
 1e07946:    1a f5 08 00       	[sp+8] = r10			  ## l2cap.c:698:17
 1e0794a:    1a f5 04 00       	[sp+4] = r10			  ## l2cap.c:698:17
 1e0794e:    b1 70             	r1 = 11			  ## l2cap.c:698:17
 1e07950:    18 f5 00 00       	[sp] = r8			  ## l2cap.c:698:17
 1e07954:    50 08             	r0 = r5
 1e07956:    42 08             	r2 = r4
 1e07958:    63 08             	r3 = r6
 1e0795a:    db 15             	call -1098 <l2cap_send_signaling_packet : 1e07512 >
 1e0795c:    00 f6 00 b0       	r0 = [r11 + 0]
 1e07960:    91 40             	r1 = [r0 + 36]
 1e07962:    00 f3 11 70       	if ((r7 & 1) == 0) goto 34 <l2cap_run+0xE4 : 1e07988 >
 1e07966:    f1 8f             	r1 += -1			  ## l2cap.c:746:66
 1e07968:    99 40             	[r0 + 36] = r1			  ## l2cap.c:746:66
 1e0796a:    11 e0 0d b0       	ifs (r1 < 1) goto 26 <l2cap_run+0xE4 : 1e07988 >			  ## l2cap.c:746:66
 1e0796e:    42 91             	r2 = r0 + 20			  ## l2cap.c:749:21
 1e07970:    03 70             	r3 = 0			  ## l2cap.c:749:21
 1e07972:    11 44             	r1 = [r2 + 4]			  ## l2cap.c:749:13
 1e07974:    04 44             	r4 = [r2 + 0]			  ## l2cap.c:749:13
 1e07976:    11 f6 fc 2f       	[r2 + -4] = r1			  ## l2cap.c:749:13
 1e0797a:    14 f6 f8 2f       	[r2 + -8] = r4			  ## l2cap.c:749:13
 1e0797e:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:748:55
 1e07980:    13 80             	r3 += 1			  ## l2cap.c:749:128
 1e07982:    82 80             	r2 += 8			  ## l2cap.c:748:23
 1e07984:    13 f2 f5 bf       	ifs (r3 < r1) goto -22 <l2cap_run+0xCE : 1e07972 >			  ## l2cap.c:748:23
 1e07988:    9a 33             	if (r1 != 0) goto -204 <l2cap_run+0x1A : 1e078be >
 1e0798a:    05 18             	goto 10 <l2cap_run+0xF2 : 1e07996 >
 1e0798c:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:672:12
 1e07990:    91 40             	r1 = [r0 + 36]			  ## l2cap.c:672:42
 1e07992:    07 70             	r7 = 0			  ## l2cap.c:672:42
 1e07994:    94 33             	if (r1 != 0) goto -216 <l2cap_run+0x1A : 1e078be >			  ## l2cap.c:672:42
 1e07996:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:754:46
 1e07998:    05 e0 67 01       	if (r5 == 0) goto 718 <.GJTIE577_0_0_+0x28C : 1e07c6a >
 1e0799c:    c9 ff 70 09 00 00 	r9 = 2416 <stack_configs_app : 970 >
 1e079a2:    38 70             	r8 = 3
 1e079a4:    16 7e             	r6 = 225
 1e079a6:    0d fb 06 33       	r13 = 13062 <p33_soft_reset+0x6 : 3306 >
 1e079aa:    1a 70             	r10 = 1
 1e079ac:    0e 70             	r14 = 0
 1e079ae:    7f 70             	r15 = 7
 1e079b0:    9c 70             	r12 = 9
 1e079b2:    54 08             	r4 = r5
 1e079b4:    20 69             	r0 = b[r4 + 18] (u)
 1e079b6:    05 48             	r5 = [r4 + 0]			  ## l2cap.c:757:20
 1e079b8:    e0 8f             	r0 += -2			  ## l2cap.c:761:9
 1e079ba:    c0 e0 54 81       	if (r0 > 12) goto 680 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## l2cap.c:761:9
 1e079be:    41 c0             	r1 = r0 << 1
 1e079c0:    07 99             	r7 = r4 + 16			  ## l2cap.c:761:26
 1e079c2:    b1 00             	tbh [r1]			  ## l2cap.c:761:26


.GJTIL577_0_0_:
 1e079c4:    0d 00     < 13 : 0xD >
 1e079c6:    51 01     < 337 : 0x151 >
 1e079c8:    51 01     < 337 : 0x151 >
 1e079ca:    51 01     < 337 : 0x151 >
 1e079cc:    51 01     < 337 : 0x151 >
 1e079ce:    48 00     < 72 : 0x48 >
 1e079d0:    51 01     < 337 : 0x151 >
 1e079d2:    51 01     < 337 : 0x151 >
 1e079d4:    79 00     < 121 : 0x79 >
 1e079d6:    9a 00     < 154 : 0x9A >
 1e079d8:    ab 00     < 171 : 0xAB >
 1e079da:    ba 00     < 186 : 0xBA >
 1e079dc:    d1 00     < 209 : 0xD1 >
 1e079de:    18 f9 02 70       	b[r7 + 2] = r8			  ## l2cap.c:766:46
 1e079e2:    b0 6e             	r0 = b[r7 + 11] (u)			  ## l2cap.c:768:13
 1e079e4:    a1 6e             	r1 = b[r7 + 10] (u)			  ## l2cap.c:768:13
 1e079e6:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:768:13
 1e079ea:    91 f5 30 00       	h[sp+48] = r1			  ## l2cap.c:768:13
 1e079ee:    90 6e             	r0 = b[r7 + 9] (u)			  ## l2cap.c:768:13
 1e079f0:    81 6e             	r1 = b[r7 + 8] (u)			  ## l2cap.c:768:13
 1e079f2:    72 6e             	r2 = b[r7 + 7] (u)			  ## l2cap.c:768:13
 1e079f4:    63 6e             	r3 = b[r7 + 6] (u)			  ## l2cap.c:768:13
 1e079f6:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:768:13
 1e079fa:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## l2cap.c:768:13
 1e079fe:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## l2cap.c:768:13
 1e07a02:    bb 02             	[sp+44] = r3			  ## l2cap.c:768:13
 1e07a04:    01 70             	r1 = 0
 1e07a06:    00 70             	r0 = 0
 1e07a08:    d1 e0 08 00       	if (r1 == 13) goto 16 <.GJTIE577_0_0_+0x3E : 1e07a1c >
 1e07a0c:    fa fd 10 26       	r2 = r6 >> r1			  ## hci_vendor.c:1709:38
 1e07a10:    20 f3 04 20       	if ((r2 & 1) != 0) goto 8 <.GJTIE577_0_0_+0x3E : 1e07a1c >			  ## hci_vendor.c:1709:38
 1e07a14:    f8 fd 10 2a       	r2 = r10 << r1			  ## hci_vendor.c:1713:31
 1e07a18:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1713:26
 1e07a1a:    50 b4             	r0 |= r2			  ## hci_vendor.c:1713:26
 1e07a1c:    11 80             	r1 += 1			  ## hci_vendor.c:1708:26
 1e07a1e:    01 e1 f3 1f       	if (r1 != 16) goto -26 <.GJTIE577_0_0_+0x2A : 1e07a08 >
 1e07a22:    01 f9 14 90       	r1 = b[r9 + 20] (u)			  ## hci_vendor.c:1730:29
 1e07a26:    02 f9 13 90       	r2 = b[r9 + 19] (u)			  ## hci_vendor.c:1730:29
 1e07a2a:    03 f9 12 90       	r3 = b[r9 + 18] (u)			  ## hci_vendor.c:1730:29
 1e07a2e:    04 f9 11 90       	r4 = b[r9 + 17] (u)			  ## hci_vendor.c:1730:29
 1e07a32:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:1730:29
 1e07a36:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:1730:29
 1e07a3a:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:1730:29
 1e07a3e:    a1 fd a0 14       	r1 = sextra(r4, p:20, l:1)			  ## hci_vendor.c:1730:9
 1e07a42:    22 fd aa 19       	r2 = r1 & 170			  ## hci_vendor.c:1733:5
 1e07a46:    e1 fd d0 00       	r0 = r0 ^ r13			  ## hci_vendor.c:1717:18
 1e07a4a:    21 04             	r1 = r0.l (u)			  ## hci_vendor.c:1733:5
 1e07a4c:    c0 a2             	r0 = sp + 44			  ## hci_vendor.c:1733:5
 1e07a4e:    80 f3 cb 71       	call 58262 <lmp_hci_create_connection : 1e15de8 >			  ## hci_vendor.c:1733:5
 1e07a52:    09 19             	goto 530 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## hci_vendor.c:1733:5
 1e07a54:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:831:44
 1e07a56:    23 f3 90 00       	if ((r0 & 8) != 0) goto 288 <.GJTIE577_0_0_+0x19C : 1e07b7a >			  ## l2cap.c:831:44
 1e07a5a:    02 f3 f8 00       	if ((r0 & 4) == 0) goto 496 <.GJTIE577_0_0_+0x270 : 1e07c4e >
 1e07a5e:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:651:107
 1e07a62:    10 b2             	r0 |= 16			  ## l2cap.c:646:107
 1e07a64:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:646:42
 1e07a66:    01 f6 00 b0       	r1 = [r11 + 0]			  ## l2cap.c:123:9
 1e07a6a:    12 fc 28 00       	r2 = r1 + 40			  ## l2cap.c:123:9
 1e07a6e:    c7 64             	r7 = b[r2 + 12] (u)			  ## l2cap.c:123:39
 1e07a70:    13 9e             	r3 = r7 + 1			  ## l2cap.c:126:55
 1e07a72:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e07a74:    00 ff ff 70 01 00 	if (r7 == 255) goto 2 <.GJTIE577_0_0_+0x9E : 1e07a7c >			  ## l2cap.c:126:55
 1e07a7a:    31 08             	r1 = r3			  ## l2cap.c:123:9
 1e07a7c:    c9 64             	b[r2 + 12] = r1
 1e07a7e:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:880:57
 1e07a80:    02 64             	r2 = b[r2 + 0] (u)			  ## l2cap.c:881:21
 1e07a82:    24 f3 e4 20       	if ((r2 & 16) != 0) goto 456 <.GJTIE577_0_0_+0x270 : 1e07c4e >			  ## l2cap.c:881:21
 1e07a86:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:895:39
 1e07a8a:    20 70             	r0 = 2			  ## l2cap.c:896:39
 1e07a8c:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:896:39
 1e07a90:    10 59             	r0 = h[r4 + 34] (u)			  ## l2cap.c:897:85
 1e07a92:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e07a96:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07a98:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e07a9c:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:898:126
 1e07a9e:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:898:21
 1e07aa0:    02 a2             	r2 = sp + 32			  ## l2cap.c:898:21
 1e07aa2:    2a 02             	[sp+8] = r2			  ## l2cap.c:898:21
 1e07aa4:    42 70             	r2 = 4			  ## l2cap.c:898:21
 1e07aa6:    1a 02             	[sp+4] = r2			  ## l2cap.c:898:21
 1e07aa8:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:898:85
 1e07aaa:    41 70             	r1 = 4			  ## l2cap.c:898:21
 1e07aac:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:898:21
 1e07ab0:    30 15             	call -1440 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:898:21
 1e07ab2:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:898:21
 1e07ab4:    cc 18             	goto 408 <.GJTIE577_0_0_+0x270 : 1e07c4e >			  ## l2cap.c:898:21
 1e07ab6:    60 9e             	r0 = r7 + 6			  ## l2cap.c:811:49
 1e07ab8:    31 72             	r1 = 35			  ## l2cap.c:811:17
 1e07aba:    02 70             	r2 = 0			  ## l2cap.c:811:17
 1e07abc:    29 14             	call -1966 <check_l2cap_authentication_flag : 1e07310 >			  ## l2cap.c:811:17
 1e07abe:    10 e2 03 10       	if (r0 != 33) goto 6 <.GJTIE577_0_0_+0xEA : 1e07ac8 >			  ## l2cap.c:811:17
 1e07ac2:    00 f7 08 90       	r0 = h[r9 + 8] (u)			  ## l2cap.c:812:17
 1e07ac6:    cf 20             	if (r0 == 0) goto 414 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## l2cap.c:812:17
 1e07ac8:    20 6e             	r0 = b[r7 + 2] (u)			  ## l2cap.c:819:48
 1e07aca:    50 e0 04 01       	if (r0 == 5) goto 520 <.GJTIE577_0_0_+0x2F8 : 1e07cd6 >			  ## l2cap.c:819:48
 1e07ace:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e07ad2:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e07ad6:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e07ad8:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e07ada:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE577_0_0_+0x104 : 1e07ae2 >			  ## l2cap.c:126:55
 1e07ae0:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e07ae2:    11 f9 34 00       	b[r0 + 52] = r1
 1e07ae6:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:823:57
 1e07ae8:    50 70             	r0 = 5			  ## l2cap.c:824:51
 1e07aea:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:824:51
 1e07aec:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:825:17
 1e07aee:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:825:83
 1e07af0:    a1 70             	r1 = 10			  ## l2cap.c:825:17
 1e07af2:    23 70             	r3 = 2			  ## l2cap.c:825:17
 1e07af4:    0e 15             	call -1508 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:825:17
 1e07af6:    b7 18             	goto 366 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## l2cap.c:825:17
 1e07af8:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:777:79
 1e07afa:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:777:13
 1e07afc:    51 69             	r1 = b[r4 + 21] (u)			  ## l2cap.c:777:127
 1e07afe:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:777:13
 1e07b02:    19 02             	[sp+4] = r1			  ## l2cap.c:777:13
 1e07b04:    31 70             	r1 = 3			  ## l2cap.c:777:13
 1e07b06:    03 70             	r3 = 0			  ## l2cap.c:777:13
 1e07b08:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:777:13
 1e07b0c:    02 15             	call -1532 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:777:13
 1e07b0e:    50 69             	r0 = b[r4 + 21] (u)			  ## l2cap.c:778:44
 1e07b10:    10 e0 53 10       	if (r0 != 1) goto 166 <.GJTIE577_0_0_+0x1DC : 1e07bba >			  ## l2cap.c:778:17
 1e07b14:    f0 70             	r0 = 15			  ## l2cap.c:780:50
 1e07b16:    28 6e             	b[r7 + 2] = r0			  ## l2cap.c:780:50
 1e07b18:    a6 18             	goto 332 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## l2cap.c:780:50
 1e07b1a:    1f f9 12 40       	b[r4 + 18] = r15			  ## l2cap.c:790:46
 1e07b1e:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e07b20:    10 b1             	r0 |= 4			  ## l2cap.c:646:107
 1e07b22:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:646:42
 1e07b24:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:805:121
 1e07b26:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:805:79
 1e07b28:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:805:13
 1e07b2a:    04 59             	r4 = h[r4 + 32] (u)			  ## l2cap.c:805:159
 1e07b2c:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:805:13
 1e07b30:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:805:13
 1e07b34:    31 70             	r1 = 3			  ## l2cap.c:805:13
 1e07b36:    14 18             	goto 40 <.GJTIE577_0_0_+0x182 : 1e07b60 >			  ## l2cap.c:805:13
 1e07b38:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:123:9
 1e07b3c:    03 f9 34 00       	r3 = b[r0 + 52] (u)			  ## l2cap.c:123:39
 1e07b40:    12 96             	r2 = r3 + 1			  ## l2cap.c:126:55
 1e07b42:    11 70             	r1 = 1			  ## l2cap.c:126:55
 1e07b44:    00 ff ff 30 01 00 	if (r3 == 255) goto 2 <.GJTIE577_0_0_+0x16E : 1e07b4c >			  ## l2cap.c:126:55
 1e07b4a:    21 08             	r1 = r2			  ## l2cap.c:123:9
 1e07b4c:    11 f9 34 00       	b[r0 + 52] = r1
 1e07b50:    49 69             	b[r4 + 20] = r1			  ## l2cap.c:916:53
 1e07b52:    1c f9 12 40       	b[r4 + 18] = r12			  ## l2cap.c:917:46
 1e07b56:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:918:122
 1e07b58:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:918:13
 1e07b5a:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:918:161
 1e07b5c:    42 04             	r2 = r1.b0 (u)			  ## l2cap.c:918:81
 1e07b5e:    61 70             	r1 = 6			  ## l2cap.c:918:13
 1e07b60:    0c 02             	[sp] = r4
 1e07b62:    d7 14             	call -1618 <l2cap_send_signaling_packet : 1e07512 >
 1e07b64:    80 18             	goto 256 <.GJTIE577_0_0_+0x288 : 1e07c66 >
 1e07b66:    f3 58             	r3 = h[r4 + 30] (u)			  ## l2cap.c:910:124
 1e07b68:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:910:82
 1e07b6a:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:910:13
 1e07b6c:    07 59             	r7 = h[r4 + 32] (u)			  ## l2cap.c:910:162
 1e07b6e:    71 70             	r1 = 7			  ## l2cap.c:910:13
 1e07b70:    0f 02             	[sp] = r7			  ## l2cap.c:910:13
 1e07b72:    cf 14             	call -1634 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:910:13
 1e07b74:    40 08             	r0 = r4			  ## l2cap.c:911:13
 1e07b76:    7b 16             	call -778 <l2cap_finialize_channel_close : 1e0786e >			  ## l2cap.c:911:13
 1e07b78:    76 18             	goto 236 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## l2cap.c:911:13
 1e07b7a:    31 fd 08 09       	r1 = r0 & 4294967287			  ## l2cap.c:651:107
 1e07b7e:    22 fd 01 0a       	r2 = r0 & 256			  ## l2cap.c:834:58
 1e07b82:    d3 d0             	r3 = r2 >> 3			  ## l2cap.c:834:21
 1e07b84:    b3 b2             	r3 ^= 32			  ## l2cap.c:834:21
 1e07b86:    51 b6             	r1 |= r3			  ## l2cap.c:834:21
 1e07b88:    89 58             	h[r4 + 16] = r1			  ## l2cap.c:651:42
 1e07b8a:    f2 fd 40 d2       	r13 = r2 >> 8			  ## l2cap.c:834:21
 1e07b8e:    29 f3 1d 10       	if ((r1 & 512) != 0) goto 58 <.GJTIE577_0_0_+0x1EE : 1e07bcc >			  ## l2cap.c:834:21
 1e07b92:    26 f3 39 10       	if ((r1 & 64) != 0) goto 114 <.GJTIE577_0_0_+0x22A : 1e07c08 >
 1e07b96:    10 04             	r0 = r0.b0 (s)			  ## l2cap.c:855:65
 1e07b98:    00 e0 52 b0       	ifs (r0 < 0) goto 164 <.GJTIE577_0_0_+0x262 : 1e07c40 >			  ## l2cap.c:855:65
 1e07b9c:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:872:128
 1e07b9e:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:872:86
 1e07ba0:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:872:21
 1e07ba2:    1e f5 0c 00       	[sp+12] = r14			  ## l2cap.c:872:21
 1e07ba6:    1e f5 08 00       	[sp+8] = r14			  ## l2cap.c:872:21
 1e07baa:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:872:21
 1e07bae:    51 70             	r1 = 5			  ## l2cap.c:872:21
 1e07bb0:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:872:21
 1e07bb4:    ae 14             	call -1700 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:872:21
 1e07bb6:    81 58             	r1 = h[r4 + 16] (u)			  ## l2cap.c:872:21
 1e07bb8:    43 18             	goto 134 <.GJTIE577_0_0_+0x262 : 1e07c40 >			  ## l2cap.c:872:21
 1e07bba:    00 f6 00 b0       	r0 = [r11 + 0]			  ## l2cap.c:783:17
 1e07bbe:    80 80             	r0 += 8			  ## l2cap.c:783:17
 1e07bc0:    41 08             	r1 = r4			  ## l2cap.c:783:17
 1e07bc2:    bf f3 2f f5       	call -5538 <btstack_linked_list_remove : 1e06624 >			  ## l2cap.c:783:17
 1e07bc6:    40 08             	r0 = r4			  ## l2cap.c:784:17
 1e07bc8:    cc 15             	call -1128 <btstack_memory_l2cap_channel_free : 1e07762 >			  ## l2cap.c:784:17
 1e07bca:    4d 18             	goto 154 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## l2cap.c:784:17
 1e07bcc:    00 f9 2f 40       	r0 = b[r4 + 47] (u)			  ## l2cap.c:841:78
 1e07bd0:    d0 f5 20 00       	b[sp+32] = r0			  ## l2cap.c:841:39
 1e07bd4:    20 70             	r0 = 2			  ## l2cap.c:842:39
 1e07bd6:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:842:39
 1e07bda:    a0 59             	r0 = h[r4 + 52] (u)			  ## l2cap.c:843:89
 1e07bdc:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e07be0:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07be2:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e07be6:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:844:128
 1e07be8:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:844:86
 1e07bea:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:844:21
 1e07bec:    01 a2             	r1 = sp + 32			  ## l2cap.c:844:21
 1e07bee:    39 02             	[sp+12] = r1			  ## l2cap.c:844:21
 1e07bf0:    41 70             	r1 = 4			  ## l2cap.c:844:21
 1e07bf2:    29 02             	[sp+8] = r1			  ## l2cap.c:844:21
 1e07bf4:    18 f5 04 00       	[sp+4] = r8			  ## l2cap.c:844:21
 1e07bf8:    51 70             	r1 = 5			  ## l2cap.c:844:21
 1e07bfa:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:844:21
 1e07bfe:    89 14             	call -1774 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:844:21
 1e07c00:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:651:97
 1e07c02:    31 fd 20 09       	r1 = r0 & 4294967263			  ## l2cap.c:651:107
 1e07c06:    1b 18             	goto 54 <.GJTIE577_0_0_+0x260 : 1e07c3e >			  ## l2cap.c:651:107
 1e07c08:    da f5 20 00       	b[sp+32] = r10			  ## l2cap.c:850:39
 1e07c0c:    20 70             	r0 = 2			  ## l2cap.c:851:39
 1e07c0e:    d0 f5 21 00       	b[sp+33] = r0			  ## l2cap.c:851:39
 1e07c12:    20 59             	r0 = h[r4 + 36] (u)			  ## l2cap.c:852:79
 1e07c14:    d0 f5 22 00       	b[sp+34] = r0			  ## utils.c:160:19
 1e07c18:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e07c1a:    d0 f5 23 00       	b[sp+35] = r0			  ## utils.c:161:19
 1e07c1e:    03 59             	r3 = h[r4 + 32] (u)			  ## l2cap.c:853:128
 1e07c20:    32 69             	r2 = b[r4 + 19] (u)			  ## l2cap.c:853:86
 1e07c22:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:853:21
 1e07c24:    01 a2             	r1 = sp + 32			  ## l2cap.c:853:21
 1e07c26:    39 02             	[sp+12] = r1			  ## l2cap.c:853:21
 1e07c28:    41 70             	r1 = 4			  ## l2cap.c:853:21
 1e07c2a:    29 02             	[sp+8] = r1			  ## l2cap.c:853:21
 1e07c2c:    1e f5 04 00       	[sp+4] = r14			  ## l2cap.c:853:21
 1e07c30:    51 70             	r1 = 5			  ## l2cap.c:853:21
 1e07c32:    1d f5 00 00       	[sp] = r13			  ## l2cap.c:853:21
 1e07c36:    6d 14             	call -1830 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:853:21
 1e07c38:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:651:97
 1e07c3a:    31 fd 40 09       	r1 = r0 & 4294967231			  ## l2cap.c:651:107
 1e07c3e:    89 58             	h[r4 + 16] = r1
 1e07c40:    0d fb 06 33       	r13 = 13062 <p33_soft_reset+0x6 : 3306 >
 1e07c44:    c0 ff ff fe 00 00 	r0 = 65279 <boot_arg_list+0x2FF : feff >			  ## l2cap.c:651:107
 1e07c4a:    50 b3             	r0 &= r1			  ## l2cap.c:651:107
 1e07c4c:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:651:42
 1e07c4e:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:901:17
 1e07c52:    20 e2 08 10       	if (r0 != 34) goto 16 <.GJTIE577_0_0_+0x288 : 1e07c66 >			  ## l2cap.c:901:17
 1e07c56:    80 70             	r0 = 8			  ## l2cap.c:902:50
 1e07c58:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:902:50
 1e07c5a:    01 70             	r1 = 0			  ## l2cap.c:903:17
 1e07c5c:    40 08             	r0 = r4			  ## l2cap.c:903:17
 1e07c5e:    a1 15             	call -1214 <l2cap_emit_channel_opened : 1e077a2 >			  ## l2cap.c:903:17
 1e07c60:    11 70             	r1 = 1			  ## l2cap.c:904:17
 1e07c62:    40 08             	r0 = r4			  ## l2cap.c:904:17
 1e07c64:    da 15             	call -1100 <l2cap_emit_credits : 1e0781a >			  ## l2cap.c:904:17
 1e07c66:    05 e0 a4 1e       	if (r5 != 0) goto -696 <l2cap_run+0x10E : 1e079b2 >
 1e07c6a:    00 a1             	r0 = sp + 16
 1e07c6c:    17 16             	call -978 <hci_connections_get_iterator : 1e0789c >			  ## l2cap.c:931:9
 1e07c6e:    bf f3 12 f6       	call -5084 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## l2cap.c:932:16
 1e07c72:    31 20             	if (r0 == 0) goto 98 <.GJTIE577_0_0_+0x2F8 : 1e07cd6 >			  ## l2cap.c:932:16
 1e07c74:    05 70             	r5 = 0
 1e07c76:    00 a1             	r0 = sp + 16
 1e07c78:    bf f3 1b f6       	call -5066 <btstack_linked_list_iterator_next : 1e068b2 >			  ## l2cap.c:936:71
 1e07c7c:    04 08             	r4 = r0			  ## l2cap.c:936:71
 1e07c7e:    30 48             	r0 = [r4 + 12]			  ## l2cap.c:938:29
 1e07c80:    10 e0 25 80       	if (r0 > 1) goto 74 <.GJTIE577_0_0_+0x2F0 : 1e07cce >			  ## l2cap.c:938:29
 1e07c84:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:941:18
 1e07c86:    ba 14             	call -1676 <hci_can_send_acl_packet_now : 1e075fc >			  ## l2cap.c:941:18
 1e07c88:    22 20             	if (r0 == 0) goto 68 <.GJTIE577_0_0_+0x2F0 : 1e07cce >			  ## l2cap.c:941:18
 1e07c8a:    b1 48             	r1 = [r4 + 44]			  ## l2cap.c:944:33
 1e07c8c:    40 fc 30 00       	r0 = r4 + 48			  ## l2cap.c:944:33
 1e07c90:    41 e0 10 00       	if (r1 == 4) goto 32 <.GJTIE577_0_0_+0x2D6 : 1e07cb4 >			  ## l2cap.c:944:33
 1e07c94:    21 e0 14 00       	if (r1 == 2) goto 40 <.GJTIE577_0_0_+0x2E2 : 1e07cc0 >
 1e07c98:    11 e0 19 10       	if (r1 != 1) goto 50 <.GJTIE577_0_0_+0x2F0 : 1e07cce >
 1e07c9c:    bd 48             	[r4 + 44] = r5			  ## l2cap.c:946:59
 1e07c9e:    93 59             	r3 = h[r4 + 50] (u)			  ## l2cap.c:948:48
 1e07ca0:    02 60             	r2 = b[r0 + 0] (u)			  ## l2cap.c:947:109
 1e07ca2:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:947:17
 1e07ca4:    a6 59             	r6 = h[r4 + 52] (u)			  ## l2cap.c:948:82
 1e07ca6:    b1 59             	r1 = h[r4 + 54] (u)			  ## l2cap.c:948:116
 1e07ca8:    c4 59             	r4 = h[r4 + 56] (u)			  ## l2cap.c:948:145
 1e07caa:    2c 02             	[sp+8] = r4			  ## l2cap.c:947:17
 1e07cac:    19 02             	[sp+4] = r1			  ## l2cap.c:947:17
 1e07cae:    21 71             	r1 = 18			  ## l2cap.c:947:17
 1e07cb0:    0e 02             	[sp] = r6			  ## l2cap.c:947:17
 1e07cb2:    0c 18             	goto 24 <.GJTIE577_0_0_+0x2EE : 1e07ccc >			  ## l2cap.c:947:17
 1e07cb4:    bd 48             	[r4 + 44] = r5			  ## l2cap.c:955:59
 1e07cb6:    02 60             	r2 = b[r0 + 0] (u)			  ## l2cap.c:956:110
 1e07cb8:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:956:17
 1e07cba:    31 71             	r1 = 19			  ## l2cap.c:956:17
 1e07cbc:    13 70             	r3 = 1			  ## l2cap.c:956:17
 1e07cbe:    06 18             	goto 12 <.GJTIE577_0_0_+0x2EE : 1e07ccc >			  ## l2cap.c:956:17
 1e07cc0:    cb f4 03 49       	[r4 + 44] = 3			  ## l2cap.c:951:59
 1e07cc4:    02 60             	r2 = b[r0 + 0] (u)			  ## l2cap.c:952:110
 1e07cc6:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:952:17
 1e07cc8:    31 71             	r1 = 19			  ## l2cap.c:952:17
 1e07cca:    03 70             	r3 = 0			  ## l2cap.c:952:17
 1e07ccc:    30 15             	call -1440 <l2cap_send_le_signaling_packet : 1e0772e >
 1e07cce:    00 a1             	r0 = sp + 16
 1e07cd0:    bf f3 e1 f5       	call -5182 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## l2cap.c:932:16
 1e07cd4:    d0 31             	if (r0 != 0) goto -96 <.GJTIE577_0_0_+0x298 : 1e07c76 >
 1e07cd6:    1a 0a             	sp += 52
 1e07cd8:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:965:1


l2cap_register_signaling_response:
 1e07cda:    76 01             	[--sp] = {rets, r6-r4}			  ## l2cap.c:1419:0
 1e07cdc:    c4 ff 78 1a 00 00 	r4 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:1421:9
 1e07ce2:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:1421:9
 1e07ce4:    95 48             	r5 = [r4 + 36]			  ## l2cap.c:1421:39
 1e07ce6:    25 e0 15 c0       	ifs (r5 > 2) goto 42 <l2cap_register_signaling_response+0x3A : 1e07d14 >			  ## l2cap.c:1421:39
 1e07cea:    ed c0             	r5 = r5 << 3			  ## l2cap.c:1422:118
 1e07cec:    c6 98             	r6 = r4 + 12			  ## l2cap.c:1422:118
 1e07cee:    10 f8 00 65       	h[r6+r5] = r0			  ## l2cap.c:1422:125
 1e07cf2:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1423:89
 1e07cf4:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1423:118
 1e07cf6:    60 09             	r0 += r6			  ## l2cap.c:1423:118
 1e07cf8:    39 60             	b[r0 + 3] = r1			  ## l2cap.c:1423:123
 1e07cfa:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1424:89
 1e07cfc:    c0 c0             	r0 = r0 << 3			  ## l2cap.c:1424:118
 1e07cfe:    60 09             	r0 += r6			  ## l2cap.c:1424:118
 1e07d00:    2a 60             	b[r0 + 2] = r2			  ## l2cap.c:1424:125
 1e07d02:    90 48             	r0 = [r4 + 36]			  ## l2cap.c:1425:89
 1e07d04:    41 02             	r1 = [sp+16]			  ## l2cap.c:1425:89
 1e07d06:    c2 c0             	r2 = r0 << 3			  ## l2cap.c:1425:118
 1e07d08:    62 09             	r2 += r6			  ## l2cap.c:1425:118
 1e07d0a:    2b 54             	h[r2 + 4] = r3			  ## l2cap.c:1425:122
 1e07d0c:    39 54             	h[r2 + 6] = r1			  ## l2cap.c:1426:123
 1e07d0e:    10 80             	r0 += 1			  ## l2cap.c:1427:66
 1e07d10:    98 48             	[r4 + 36] = r0			  ## l2cap.c:1427:66
 1e07d12:    c8 15             	call -1136 <l2cap_run : 1e078a4 >			  ## l2cap.c:1428:9
 1e07d14:    56 01             	{pc, r6-r4} = [sp++]			  ## l2cap.c:1430:1


btstack_memory_l2cap_channel_get:
 1e07d16:    41 70             	r1 = 4			  ## btstack_memory.c:129:0
 1e07d18:    00 42             	r0 = [r1 + 0]			  ## btstack_memory.c:66:23
 1e07d1a:    03 20             	if (r0 == 0) goto 6 <btstack_memory_l2cap_channel_get+0xC : 1e07d22 >
 1e07d1c:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e07d1e:    0a 42             	[r1 + 0] = r2			  ## btstack_memory.c:72:23
 1e07d20:    20 00             	rts			  ## btstack_memory.c:130:5
 1e07d22:    00 70             	r0 = 0
 1e07d24:    20 00             	rts			  ## btstack_memory.c:130:5


btstack_linked_list_add:
 1e07d26:    02 40             	r2 = [r0 + 0]			  ## btstack_linked_list.c:83:0
 1e07d28:    05 24             	if (r2 == 0) goto 10 <btstack_linked_list_add+0xE : 1e07d34 >			  ## btstack_linked_list.c:83:0
 1e07d2a:    23 08             	r3 = r2			  ## btstack_linked_list.c:83:0
 1e07d2c:    13 f2 04 00       	if (r3 == r1) goto 8 <btstack_linked_list_add+0x12 : 1e07d38 >			  ## btstack_linked_list.c:83:0
 1e07d30:    03 46             	r3 = [r3 + 0]			  ## btstack_linked_list.c:83:0
 1e07d32:    fc 37             	if (r3 != 0) goto -8 <btstack_linked_list_add+0x6 : 1e07d2c >			  ## btstack_linked_list.c:83:0
 1e07d34:    0a 42             	[r1 + 0] = r2			  ## btstack_linked_list.c:92:16
 1e07d36:    09 40             	[r0 + 0] = r1			  ## btstack_linked_list.c:93:11
 1e07d38:    20 00             	rts			  ## btstack_linked_list.c:94:1


l2cap_signaling_handler_channel:
 1e07d3a:    7a 01             	[--sp] = {rets, r10-r4}			  ## l2cap.c:1626:0
 1e07d3c:    fe 0b             	sp += -4			  ## l2cap.c:1626:0
 1e07d3e:    04 08             	r4 = r0			  ## l2cap.c:1626:0
 1e07d40:    00 62             	r0 = b[r1 + 0] (u)			  ## l2cap.c:1628:22
 1e07d42:    22 69             	r2 = b[r4 + 18] (u)			  ## l2cap.c:1628:22
 1e07d44:    60 e0 0e 10       	if (r0 != 6) goto 28 <l2cap_signaling_handler_channel+0x2A : 1e07d64 >			  ## l2cap.c:1635:9
 1e07d48:    d2 e0 0a 80       	if (r2 > 13) goto 20 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >
 1e07d4c:    10 70             	r0 = 1
 1e07d4e:    80 0c             	r0 <<= r2
 1e07d50:    60 ff 0e 01 05 00 	if ((r0 & 9088) == 0) goto 10 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >
 1e07d56:    10 62             	r0 = b[r1 + 1] (u)			  ## l2cap.c:1629:22
 1e07d58:    38 69             	b[r4 + 19] = r0			  ## l2cap.c:1413:46
 1e07d5a:    e0 70             	r0 = 14			  ## l2cap.c:1414:38
 1e07d5c:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1414:38
 1e07d5e:    a2 15             	call -1212 <l2cap_run : 1e078a4 >			  ## l2cap.c:1415:5
 1e07d60:    02 0a             	sp += 4
 1e07d62:    5a 01             	{pc, r10-r4} = [sp++]			  ## l2cap.c:1769:1
 1e07d64:    b2 8f             	r2 += -5			  ## l2cap.c:1651:5
 1e07d66:    42 e0 fb 8f       	if (r2 > 4) goto -10 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >			  ## l2cap.c:1651:5
 1e07d6a:    53 c0             	r3 = r2 << 1
 1e07d6c:    c5 ff 78 1a 00 00 	r5 = 6776 <l2cap_stack : 1a78 >
 1e07d72:    48 fc 24 00       	r8 = r4 + 36
 1e07d76:    b3 00             	tbh [r3]


.GJTIL581_0_0_:
 1e07d78:    06 00     < 6 : 0x6 >
 1e07d7a:    31 00     < 49 : 0x31 >
 1e07d7c:    47 00     < 71 : 0x47 >
 1e07d7e:    05 00     < 5 : 0x5 >
 1e07d80:    9e 00     < 158 : 0x9E >
 1e07d82:    ee 1f             	goto -36 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >
 1e07d84:    b0 e0 ec 1f       	if (r0 != 11) goto -40 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >
 1e07d88:    60 70             	r0 = 6			  ## l2cap.c:1658:50
 1e07d8a:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1658:50
 1e07d8c:    30 62             	r0 = b[r1 + 3] (u)			  ## l2cap.c:1591:23
 1e07d8e:    22 62             	r2 = b[r1 + 2] (u)			  ## l2cap.c:1591:23
 1e07d90:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## l2cap.c:1591:23
 1e07d94:    40 94             	r0 = r2 + 4			  ## l2cap.c:1591:21
 1e07d96:    22 04             	r2 = r0.l (u)			  ## l2cap.c:1593:18
 1e07d98:    52 e0 16 30       	if (r2 < 5) goto 44 <.GJTIE581_0_0_+0x46 : 1e07dc8 >			  ## l2cap.c:1593:18
 1e07d9c:    40 70             	r0 = 4
 1e07d9e:    43 70             	r3 = 4
 1e07da0:    25 96             	r5 = r3 + 2			  ## l2cap.c:1595:13
 1e07da2:    65 05             	r5 = r5.l (u)			  ## l2cap.c:1596:24
 1e07da4:    46 b3             	r6 = r1 + r5			  ## l2cap.c:1596:24
 1e07da6:    17 6c             	r7 = b[r6 + 1] (u)			  ## l2cap.c:1596:24
 1e07da8:    06 6c             	r6 = b[r6 + 0] (u)			  ## l2cap.c:1596:24
 1e07daa:    c8 fd 40 67       	r6 <= insert(r7, p:8, l:8)			  ## l2cap.c:1596:24
 1e07dae:    07 3c             	if (r6 != 0) goto 14 <.GJTIE581_0_0_+0x3C : 1e07dbe >			  ## l2cap.c:1596:24
 1e07db0:    10 09             	r0 += r1			  ## l2cap.c:1594:24
 1e07db2:    16 60             	r6 = b[r0 + 1] (u)			  ## l2cap.c:1594:24
 1e07db4:    00 60             	r0 = b[r0 + 0] (u)			  ## l2cap.c:1594:24
 1e07db6:    c8 fd 40 06       	r0 <= insert(r6, p:8, l:8)			  ## l2cap.c:1594:24
 1e07dba:    20 e0 a1 00       	if (r0 == 2) goto 322 <.GJTIE581_0_0_+0x17E : 1e07f00 >			  ## l2cap.c:1594:24
 1e07dbe:    40 96             	r0 = r3 + 4			  ## l2cap.c:1593:12
 1e07dc0:    23 9a             	r3 = r5 + 2			  ## l2cap.c:1597:13
 1e07dc2:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1593:12
 1e07dc4:    20 f2 ec 3f       	if (r0 < r2) goto -40 <.GJTIE581_0_0_+0x1E : 1e07da0 >			  ## l2cap.c:1593:12
 1e07dc8:    e3 58             	r3 = h[r4 + 28] (u)			  ## l2cap.c:1660:123
 1e07dca:    42 69             	r2 = b[r4 + 20] (u)			  ## l2cap.c:1660:82
 1e07dcc:    20 58             	r0 = h[r4 + 4] (u)			  ## l2cap.c:1660:17
 1e07dce:    f4 58             	r4 = h[r4 + 30] (u)			  ## l2cap.c:1660:155
 1e07dd0:    21 70             	r1 = 2			  ## l2cap.c:1660:17
 1e07dd2:    0c 02             	[sp] = r4			  ## l2cap.c:1660:17
 1e07dd4:    bf f3 9d fb       	call -2246 <l2cap_send_signaling_packet : 1e07512 >			  ## l2cap.c:1660:17
 1e07dd8:    c3 1f             	goto -122 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >			  ## l2cap.c:1660:17
 1e07dda:    30 e0 c1 1f       	if (r0 != 3) goto -126 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >
 1e07dde:    80 62             	r0 = b[r1 + 8] (u)			  ## l2cap.c:1671:22
 1e07de0:    92 62             	r2 = b[r1 + 9] (u)			  ## l2cap.c:1671:22
 1e07de2:    03 08             	r3 = r0			  ## l2cap.c:1671:22
 1e07de4:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1671:22
 1e07de8:    e2 04             	r2 = r3.l (u)			  ## l2cap.c:1671:22
 1e07dea:    12 e0 b9 0f       	if (r2 == 1) goto -142 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >			  ## l2cap.c:1671:22
 1e07dee:    72 34             	if (r2 != 0) goto 228 <.GJTIE581_0_0_+0x152 : 1e07ed4 >
 1e07df0:    50 62             	r0 = b[r1 + 5] (u)			  ## l2cap.c:1677:57
 1e07df2:    41 62             	r1 = b[r1 + 4] (u)			  ## l2cap.c:1677:57
 1e07df4:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1677:57
 1e07df8:    09 59             	h[r4 + 32] = r1			  ## l2cap.c:1677:55
 1e07dfa:    70 70             	r0 = 7			  ## l2cap.c:1678:50
 1e07dfc:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1678:50
 1e07dfe:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e07e00:    10 b1             	r0 |= 4			  ## l2cap.c:646:107
 1e07e02:    88 58             	h[r4 + 16] = r0			  ## l2cap.c:646:42
 1e07e04:    ad 1f             	goto -166 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >			  ## l2cap.c:646:42
 1e07e06:    50 e0 5a 00       	if (r0 == 5) goto 180 <.GJTIE581_0_0_+0x13C : 1e07ebe >			  ## l2cap.c:1712:9
 1e07e0a:    40 e0 98 10       	if (r0 != 4) goto 304 <.GJTIE581_0_0_+0x1BC : 1e07f3e >
 1e07e0e:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e07e10:    0a fd 08 09       	r10 = r0 | 8			  ## l2cap.c:646:107
 1e07e14:    1a f7 10 40       	h[r4 + 16] = r10			  ## l2cap.c:646:42
 1e07e18:    63 62             	r3 = b[r1 + 6] (u)			  ## l2cap.c:1529:17
 1e07e1a:    15 62             	r5 = b[r1 + 1] (u)			  ## l2cap.c:1530:48
 1e07e1c:    3d 69             	b[r4 + 19] = r5			  ## l2cap.c:1530:46
 1e07e1e:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <.GJTIE581_0_0_+0xAC : 1e07e2e >			  ## l2cap.c:1530:46
 1e07e22:    02 fb 08 01       	r2 = 264 <DRIVER_RAM_TOTAL+0x16 : 108 >			  ## l2cap.c:646:107
 1e07e26:    e0 fd 20 a0       	r10 = r0 | r2			  ## l2cap.c:646:107
 1e07e2a:    1a f7 10 40       	h[r4 + 16] = r10			  ## l2cap.c:646:42
 1e07e2e:    30 62             	r0 = b[r1 + 3] (u)			  ## l2cap.c:1539:27
 1e07e30:    23 62             	r3 = b[r1 + 2] (u)			  ## l2cap.c:1539:27
 1e07e32:    d8 fd 40 30       	r3 <= insert(r0, p:8, l:24)			  ## l2cap.c:1539:27
 1e07e36:    40 96             	r0 = r3 + 4			  ## l2cap.c:1539:25
 1e07e38:    29 04             	r9 = r0.l (u)			  ## l2cap.c:1541:22
 1e07e3a:    99 e0 36 30       	if (r9 < 9) goto 108 <.GJTIE581_0_0_+0x128 : 1e07eaa >			  ## l2cap.c:1541:22
 1e07e3e:    80 70             	r0 = 8
 1e07e40:    86 70             	r6 = 8
 1e07e42:    00 fa 00 10       	r0 = b[r1+r0] (u)			  ## l2cap.c:1542:30
 1e07e46:    13 9c             	r3 = r6 + 1			  ## l2cap.c:1546:16
 1e07e48:    e3 04             	r3 = r3.l (u)			  ## l2cap.c:1547:22
 1e07e4a:    05 fa 00 13       	r5 = b[r1+r3] (u)			  ## l2cap.c:1547:22
 1e07e4e:    37 fd 80 09       	r7 = r0 & 4294967167			  ## l2cap.c:1543:43
 1e07e52:    10 04             	r0 = r0.b0 (s)			  ## l2cap.c:1542:30
 1e07e54:    26 80             	r6 += 2			  ## l2cap.c:1547:33
 1e07e56:    17 e0 0c 10       	if (r7 != 1) goto 24 <.GJTIE581_0_0_+0xF0 : 1e07e72 >			  ## l2cap.c:1547:33
 1e07e5a:    25 e0 0a 10       	if (r5 != 2) goto 20 <.GJTIE581_0_0_+0xF0 : 1e07e72 >
 1e07e5e:    a3 05             	r3 = r6.l (u)			  ## l2cap.c:1550:57
 1e07e60:    13 09             	r3 += r1			  ## l2cap.c:1550:57
 1e07e62:    12 66             	r2 = b[r3 + 1] (u)			  ## l2cap.c:1550:57
 1e07e64:    03 66             	r3 = b[r3 + 0] (u)			  ## l2cap.c:1550:57
 1e07e66:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## l2cap.c:1550:57
 1e07e6a:    2b 59             	h[r4 + 36] = r3			  ## l2cap.c:1550:55
 1e07e6c:    1a b3             	r10 |= 64			  ## l2cap.c:646:107
 1e07e6e:    1a f7 10 40       	h[r4 + 16] = r10			  ## l2cap.c:646:42
 1e07e72:    73 fc ff ff       	r3 = r7 + -1
 1e07e76:    00 e0 0e b0       	ifs (r0 < 0) goto 28 <.GJTIE581_0_0_+0x114 : 1e07e96 >			  ## l2cap.c:1573:34
 1e07e7a:    c0 04             	r0 = r3.b0 (u)
 1e07e7c:    60 e0 11 30       	if (r0 < 6) goto 34 <.GJTIE581_0_0_+0x120 : 1e07ea2 >
 1e07e80:    17 f9 0b 80       	b[r8 + 11] = r7			  ## l2cap.c:1575:64
 1e07e84:    a0 05             	r0 = r6.l (u)			  ## l2cap.c:1576:72
 1e07e86:    10 09             	r0 += r1			  ## l2cap.c:1576:72
 1e07e88:    12 60             	r2 = b[r0 + 1] (u)			  ## l2cap.c:1576:72
 1e07e8a:    00 60             	r0 = b[r0 + 0] (u)			  ## l2cap.c:1576:72
 1e07e8c:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)			  ## l2cap.c:1576:72
 1e07e90:    a8 59             	h[r4 + 52] = r0			  ## l2cap.c:1576:70
 1e07e92:    9a b4             	r10 |= 512			  ## l2cap.c:646:107
 1e07e94:    04 18             	goto 8 <.GJTIE581_0_0_+0x11C : 1e07e9e >			  ## l2cap.c:646:107
 1e07e96:    c0 04             	r0 = r3.b0 (u)
 1e07e98:    60 e0 03 30       	if (r0 < 6) goto 6 <.GJTIE581_0_0_+0x120 : 1e07ea2 >
 1e07e9c:    1a b4             	r10 |= 256			  ## l2cap.c:646:107
 1e07e9e:    1a f7 10 40       	h[r4 + 16] = r10
 1e07ea2:    56 09             	r6 += r5			  ## l2cap.c:1583:17
 1e07ea4:    a0 05             	r0 = r6.l (u)			  ## l2cap.c:1541:16
 1e07ea6:    90 f2 cc 3f       	if (r0 < r9) goto -104 <.GJTIE581_0_0_+0xC0 : 1e07e42 >			  ## l2cap.c:1541:16
 1e07eaa:    28 f3 48 a0       	if ((r10 & 256) != 0) goto 144 <.GJTIE581_0_0_+0x1BC : 1e07f3e >
 1e07eae:    00 fd 01 a9       	r0 = r10 | 1			  ## l2cap.c:646:107
 1e07eb2:    44 18             	goto 136 <.GJTIE581_0_0_+0x1BA : 1e07f3c >			  ## l2cap.c:646:107
 1e07eb4:    70 e0 54 1f       	if (r0 != 7) goto -344 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >
 1e07eb8:    40 08             	r0 = r4			  ## l2cap.c:1750:13
 1e07eba:    d9 14             	call -1614 <l2cap_finialize_channel_close : 1e0786e >			  ## l2cap.c:1750:13
 1e07ebc:    51 1f             	goto -350 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >
 1e07ebe:    90 62             	r0 = b[r1 + 9] (u)			  ## l2cap.c:1724:22
 1e07ec0:    81 62             	r1 = b[r1 + 8] (u)			  ## l2cap.c:1724:22
 1e07ec2:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1724:22
 1e07ec6:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1724:22
 1e07ec8:    10 e0 12 00       	if (r0 == 1) goto 36 <.GJTIE581_0_0_+0x16E : 1e07ef0 >			  ## l2cap.c:1725:17
 1e07ecc:    16 30             	if (r0 != 0) goto 44 <.GJTIE581_0_0_+0x178 : 1e07efa >
 1e07ece:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:646:97
 1e07ed0:    90 b0             	r0 |= 2			  ## l2cap.c:646:107
 1e07ed2:    34 18             	goto 104 <.GJTIE581_0_0_+0x1BA : 1e07f3c >			  ## l2cap.c:646:107
 1e07ed4:    11 70             	r1 = 1			  ## l2cap.c:1688:50
 1e07ed6:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1688:50
 1e07ed8:    30 86             	r0 += 99			  ## l2cap.c:1691:96
 1e07eda:    01 04             	r1 = r0.b0 (u)			  ## l2cap.c:1691:17
 1e07edc:    40 08             	r0 = r4			  ## l2cap.c:1691:17
 1e07ede:    61 14             	call -1854 <l2cap_emit_channel_opened : 1e077a2 >			  ## l2cap.c:1691:17
 1e07ee0:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1699:17
 1e07ee2:    80 80             	r0 += 8			  ## l2cap.c:1699:17
 1e07ee4:    41 08             	r1 = r4			  ## l2cap.c:1699:17
 1e07ee6:    bf f3 9d f3       	call -6342 <btstack_linked_list_remove : 1e06624 >			  ## l2cap.c:1699:17
 1e07eea:    40 08             	r0 = r4			  ## l2cap.c:1700:17
 1e07eec:    3a 14             	call -1932 <btstack_memory_l2cap_channel_free : 1e07762 >			  ## l2cap.c:1700:17
 1e07eee:    38 1f             	goto -400 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >			  ## l2cap.c:1700:17
 1e07ef0:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1727:40
 1e07ef2:    00 f9 28 00       	r0 = b[r0 + 40] (u)			  ## l2cap.c:1727:24
 1e07ef6:    24 f3 18 00       	if ((r0 & 16) != 0) goto 48 <.GJTIE581_0_0_+0x1A8 : 1e07f2a >			  ## l2cap.c:1727:24
 1e07efa:    d0 70             	r0 = 13			  ## l2cap.c:1733:50
 1e07efc:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1733:50
 1e07efe:    1f 18             	goto 62 <.GJTIE581_0_0_+0x1BC : 1e07f3e >			  ## l2cap.c:1733:50
 1e07f00:    40 96             	r0 = r3 + 4			  ## l2cap.c:1599:66
 1e07f02:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1599:66
 1e07f04:    10 09             	r0 += r1			  ## l2cap.c:1599:66
 1e07f06:    01 60             	r1 = b[r0 + 0] (u)			  ## l2cap.c:1599:66
 1e07f08:    12 60             	r2 = b[r0 + 1] (u)			  ## l2cap.c:1599:66
 1e07f0a:    23 60             	r3 = b[r0 + 2] (u)			  ## l2cap.c:1599:66
 1e07f0c:    30 60             	r0 = b[r0 + 3] (u)			  ## l2cap.c:1599:66
 1e07f0e:    15 08             	r5 = r1			  ## l2cap.c:1599:66
 1e07f10:    c8 fd 40 52       	r5 <= insert(r2, p:8, l:8)			  ## l2cap.c:1599:66
 1e07f14:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## l2cap.c:1599:66
 1e07f18:    c8 fd c0 50       	r5 <= insert(r0, p:24, l:8)			  ## l2cap.c:1599:66
 1e07f1c:    ad 48             	[r4 + 40] = r5			  ## l2cap.c:1599:64
 1e07f1e:    24 f3 53 1f       	if ((r1 & 16) != 0) goto -346 <.GJTIE581_0_0_+0x46 : 1e07dc8 >			  ## l2cap.c:1599:64
 1e07f22:    00 70             	r0 = 0			  ## l2cap.c:1603:57
 1e07f24:    10 f9 02 80       	b[r8 + 2] = r0			  ## l2cap.c:1603:57
 1e07f28:    4f 1f             	goto -354 <.GJTIE581_0_0_+0x46 : 1e07dc8 >			  ## l2cap.c:1603:57
 1e07f2a:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:651:97
 1e07f2c:    01 70             	r1 = 0			  ## l2cap.c:1729:57
 1e07f2e:    11 f9 02 80       	b[r8 + 2] = r1			  ## l2cap.c:1729:57
 1e07f32:    71 70             	r1 = 7			  ## l2cap.c:1730:50
 1e07f34:    29 69             	b[r4 + 18] = r1			  ## l2cap.c:1730:50
 1e07f36:    30 fd 14 09       	r0 = r0 & 4294967275			  ## l2cap.c:651:107
 1e07f3a:    10 b1             	r0 |= 4			  ## l2cap.c:646:107
 1e07f3c:    88 58             	h[r4 + 16] = r0
 1e07f3e:    80 58             	r0 = h[r4 + 16] (u)			  ## l2cap.c:1615:37
 1e07f40:    20 fd 22 09       	r0 = r0 & 34			  ## l2cap.c:1739:13
 1e07f44:    20 e2 0c 1f       	if (r0 != 34) goto -488 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >			  ## l2cap.c:1739:13
 1e07f48:    80 70             	r0 = 8			  ## l2cap.c:1741:46
 1e07f4a:    28 69             	b[r4 + 18] = r0			  ## l2cap.c:1741:46
 1e07f4c:    01 70             	r1 = 0			  ## l2cap.c:1742:13
 1e07f4e:    40 08             	r0 = r4			  ## l2cap.c:1742:13
 1e07f50:    28 14             	call -1968 <l2cap_emit_channel_opened : 1e077a2 >			  ## l2cap.c:1742:13
 1e07f52:    11 70             	r1 = 1			  ## l2cap.c:1743:13
 1e07f54:    40 08             	r0 = r4			  ## l2cap.c:1743:13
 1e07f56:    61 14             	call -1854 <l2cap_emit_credits : 1e0781a >			  ## l2cap.c:1743:13
 1e07f58:    03 1f             	goto -506 <l2cap_signaling_handler_channel+0x26 : 1e07d60 >			  ## l2cap.c:1743:13


l2cap_get_channel_for_local_cid:
 1e07f5a:    75 01             	[--sp] = {rets, r5, r4}			  ## l2cap.c:465:0
 1e07f5c:    05 08             	r5 = r0			  ## l2cap.c:465:0
 1e07f5e:    97 f3 1d f7       	call 3141178 <local_irq_disable : 106d9c >			  ## l2cap.c:468:5
 1e07f62:    c0 ff 78 1a 00 00 	r0 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:469:33
 1e07f68:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:469:33
 1e07f6a:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:469:33
 1e07f6c:    05 28             	if (r4 == 0) goto 10 <l2cap_get_channel_for_local_cid+0x1E : 1e07f78 >
 1e07f6e:    f0 58             	r0 = h[r4 + 30] (u)			  ## l2cap.c:471:40
 1e07f70:    50 f2 06 00       	if (r0 == r5) goto 12 <l2cap_get_channel_for_local_cid+0x26 : 1e07f80 >			  ## l2cap.c:471:40
 1e07f74:    04 48             	r4 = [r4 + 0]
 1e07f76:    fb 39             	if (r4 != 0) goto -10 <l2cap_get_channel_for_local_cid+0x14 : 1e07f6e >
 1e07f78:    97 f3 0e f7       	call 3141148 <local_irq_enable : 106d98 >			  ## l2cap.c:477:5
 1e07f7c:    04 70             	r4 = 0			  ## l2cap.c:477:5
 1e07f7e:    02 18             	goto 4 <l2cap_get_channel_for_local_cid+0x2A : 1e07f84 >
 1e07f80:    97 f3 0a f7       	call 3141140 <local_irq_enable : 106d98 >			  ## l2cap.c:472:13
 1e07f84:    40 08             	r0 = r4			  ## l2cap.c:479:1
 1e07f86:    55 01             	{pc, r5, r4} = [sp++]			  ## l2cap.c:479:1


l2cap_packet_handler:
 1e07f88:    7f 01             	[--sp] = {rets, r15-r4}			  ## l2cap.c:2067:0
 1e07f8a:    e2 0b             	sp += -60			  ## l2cap.c:2067:0
 1e07f8c:    29 08             	r9 = r2			  ## l2cap.c:2067:0
 1e07f8e:    1f 08             	r15 = r1			  ## l2cap.c:2067:0
 1e07f90:    ca ff 78 1a 00 00 	r10 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:2067:0
 1e07f96:    20 e0 28 00       	if (r0 == 2) goto 80 <.GJTIE584_1_1_+0x1C : 1e07fea >			  ## l2cap.c:2068:5
 1e07f9a:    40 e0 a9 12       	if (r0 != 4) goto 1362 <.GJTIE584_0_0_+0x4CA : 1e084f0 >
 1e07f9e:    00 62             	r0 = b[r1 + 0] (u)
 1e07fa0:    01 fc fd ff       	r1 = r0 + -3			  ## l2cap.c:1220:5
 1e07fa4:    01 e1 4f 81       	if (r1 > 16) goto 670 <.GJTIE584_0_0_+0x220 : 1e08246 >
 1e07fa8:    48 c0             	r0 = r1 << 1
 1e07faa:    b0 00             	tbh [r0]


.GJTIL584_1_1_:
 1e07fac:    c4 01     < 452 : 0x1C4 >
 1e07fae:    8a 02     < 650 : 0x28A >
 1e07fb0:    0c 02     < 524 : 0x20C >
 1e07fb2:    11 00     < 17 : 0x11 >
 1e07fb4:    8a 02     < 650 : 0x28A >
 1e07fb6:    11 00     < 17 : 0x11 >
 1e07fb8:    8a 02     < 650 : 0x28A >
 1e07fba:    8a 02     < 650 : 0x28A >
 1e07fbc:    8a 02     < 650 : 0x28A >
 1e07fbe:    8a 02     < 650 : 0x28A >
 1e07fc0:    8a 02     < 650 : 0x28A >
 1e07fc2:    88 02     < 648 : 0x288 >
 1e07fc4:    88 02     < 648 : 0x288 >
 1e07fc6:    8a 02     < 650 : 0x28A >
 1e07fc8:    8a 02     < 650 : 0x28A >
 1e07fca:    8a 02     < 650 : 0x28A >
 1e07fcc:    62 02     < 610 : 0x262 >
 1e07fce:    02 f9 04 f0       	r2 = b[r15 + 4] (u)
 1e07fd2:    00 f9 03 f0       	r0 = b[r15 + 3] (u)
 1e07fd6:    01 f9 02 f0       	r1 = b[r15 + 2] (u)
 1e07fda:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)
 1e07fde:    20 04             	r0 = r0.l (u)
 1e07fe0:    01 e0 63 02       	if (r1 == 0) goto 1222 <.GJTIE584_0_0_+0x484 : 1e084aa >
 1e07fe4:    bf f3 f3 f9       	call -3098 <hci_disconnect_cmd : 1e073ce >
 1e07fe8:    69 1a             	goto 1234 <.GJTIE584_0_0_+0x496 : 1e084bc >
 1e07fea:    70 62             	r0 = b[r1 + 7] (u)			  ## l2cap.c:1997:22
 1e07fec:    61 62             	r1 = b[r1 + 6] (u)			  ## l2cap.c:1997:22
 1e07fee:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1997:22
 1e07ff2:    60 04             	r0 = r1.l (u)
 1e07ff4:    01 fc ff ff       	r1 = r0 + -1			  ## l2cap.c:2004:5
 1e07ff8:    51 e0 45 81       	if (r1 > 5) goto 650 <.GJTIE584_0_0_+0x260 : 1e08286 >			  ## l2cap.c:2004:5
 1e07ffc:    03 f9 01 f0       	r3 = b[r15 + 1] (u)			  ## l2cap.c:1998:31
 1e08000:    02 f9 00 f0       	r2 = b[r15 + 0] (u)			  ## l2cap.c:1998:31
 1e08004:    1b c2             	r3 = r3 << 8			  ## l2cap.c:1998:31
 1e08006:    23 fd 0f 3a       	r3 = r3 & 3840			  ## l2cap.c:1998:31
 1e0800a:    e0 fd 20 43       	r4 = r3 | r2			  ## l2cap.c:1998:31
 1e0800e:    4c 02             	[sp+16] = r4			  ## l2cap.c:1998:31
 1e08010:    4d c0             	r5 = r1 << 1			  ## l2cap.c:1998:31
 1e08012:    c4 ff 88 1a 00 00 	r4 = 6792 <l2cap_fixed_channels : 1a88 >			  ## l2cap.c:1998:31
 1e08018:    b5 00             	tbh [r5]			  ## l2cap.c:1998:31


.GJTIL584_0_0_:
 1e0801a:    06 00     < 6 : 0x6 >
 1e0801c:    36 01     < 310 : 0x136 >
 1e0801e:    36 01     < 310 : 0x136 >
 1e08020:    42 01     < 322 : 0x142 >
 1e08022:    4f 01     < 335 : 0x14F >
 1e08024:    81 01     < 385 : 0x181 >
 1e08026:    99 e0 61 32       	if (r9 < 9) goto 1218 <.GJTIE584_0_0_+0x4C6 : 1e084ec >
 1e0802a:    c0 a2             	r0 = sp + 44
 1e0802c:    20 80             	r0 += 2
 1e0802e:    28 02             	[sp+8] = r0
 1e08030:    84 70             	r4 = 8
 1e08032:    0e 70             	r14 = 0
 1e08034:    40 02             	r0 = [sp+16]
 1e08036:    27 04             	r7 = r0.l (u)
 1e08038:    c8 ff 28 1b 00 00 	r8 = 6952 <__user_info+0x88 : 1b28 >
 1e0803e:    e9 18             	goto 466 <.GJTIE584_0_0_+0x1EC : 1e08212 >
 1e08040:    a1 e0 37 00       	if (r1 == 10) goto 110 <.GJTIE584_0_0_+0x8C : 1e080b2 >			  ## l2cap.c:1787:5
 1e08044:    21 e0 3e 10       	if (r1 != 2) goto 124 <.GJTIE584_0_0_+0x9E : 1e080c4 >
 1e08048:    60 6c             	r0 = b[r6 + 6] (u)			  ## l2cap.c:1790:26
 1e0804a:    71 6c             	r1 = b[r6 + 7] (u)			  ## l2cap.c:1790:26
 1e0804c:    52 6c             	r2 = b[r6 + 5] (u)			  ## l2cap.c:1789:26
 1e0804e:    0a f9 04 60       	r10 = b[r6 + 4] (u)			  ## l2cap.c:1789:26
 1e08052:    0b c2             	r3 = r1 << 8			  ## l2cap.c:1790:26
 1e08054:    f0 fd 40 b2       	r11 = r2 << 8			  ## l2cap.c:1789:26
 1e08058:    81 08             	r1 = r8			  ## l2cap.c:1789:26
 1e0805a:    32 42             	r2 = [r1 + 12]			  ## avctp_user.c:2941:19
 1e0805c:    1d f3 02 20       	if ((r2 & 536870912) == 0) goto 4 <.GJTIE584_0_0_+0x3E : 1e08064 >			  ## avctp_user.c:2941:19
 1e08060:    1e f9 11 10       	b[r1 + 17] = r14			  ## avctp_user.c:2942:29
 1e08064:    81 81             	r1 += 24			  ## avctp_user.c:2940:5
 1e08066:    82 fc 18 00       	r2 = r8 + 24			  ## avctp_user.c:2940:5
 1e0806a:    21 f2 f6 3f       	if (r1 < r2) goto -20 <.GJTIE584_0_0_+0x34 : 1e0805a >			  ## avctp_user.c:2940:5
 1e0806e:    c1 ff 78 1a 00 00 	r1 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:2275:33
 1e08074:    02 42             	r2 = [r1 + 0]			  ## l2cap.c:2275:33
 1e08076:    0d f6 04 20       	r13 = [r2 + 4]			  ## l2cap.c:2275:33
 1e0807a:    e0 fd 00 c3       	r12 = r3 | r0			  ## l2cap.c:1790:26
 1e0807e:    0d e0 0c 00       	if (r13 == 0) goto 24 <.GJTIE584_0_0_+0x74 : 1e0809a >			  ## l2cap.c:1790:26
 1e08082:    e0 fd a0 bb       	r11 = r11 | r10			  ## l2cap.c:1789:26
 1e08086:    00 f7 04 d0       	r0 = h[r13 + 4] (u)			  ## l2cap.c:2277:22
 1e0808a:    e6 fd 00 1b       	r1 = r11.l (u)			  ## l2cap.c:2277:26
 1e0808e:    10 f2 30 00       	if (r0 == r1) goto 96 <.GJTIE584_0_0_+0xCC : 1e080f2 >			  ## l2cap.c:2277:26
 1e08092:    0d f6 00 d0       	r13 = [r13 + 0]
 1e08096:    0d e0 f6 1f       	if (r13 != 0) goto -20 <.GJTIE584_0_0_+0x60 : 1e08086 >
 1e0809a:    e6 fd 00 3c       	r3 = r12.l (u)			  ## l2cap.c:1442:9
 1e0809e:    21 70             	r1 = 2			  ## l2cap.c:1442:9
 1e080a0:    20 70             	r0 = 2			  ## l2cap.c:1442:9
 1e080a2:    08 02             	[sp] = r0
 1e080a4:    70 08             	r0 = r7
 1e080a6:    52 08             	r2 = r5
 1e080a8:    18 16             	call -976 <l2cap_register_signaling_response : 1e07cda >
 1e080aa:    ca ff 78 1a 00 00 	r10 = 6776 <l2cap_stack : 1a78 >
 1e080b0:    c0 18             	goto 384 <.GJTIE584_0_0_+0x20C : 1e08232 >
 1e080b2:    50 6c             	r0 = b[r6 + 5] (u)			  ## l2cap.c:1806:28
 1e080b4:    41 6c             	r1 = b[r6 + 4] (u)			  ## l2cap.c:1806:28
 1e080b6:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:1806:28
 1e080ba:    60 04             	r0 = r1.l (u)			  ## l2cap.c:1807:13
 1e080bc:    a1 70             	r1 = 10			  ## l2cap.c:1807:13
 1e080be:    03 70             	r3 = 0			  ## l2cap.c:1807:13
 1e080c0:    08 02             	[sp] = r0			  ## l2cap.c:1807:13
 1e080c2:    b4 18             	goto 360 <.GJTIE584_0_0_+0x206 : 1e0822c >			  ## l2cap.c:1807:13
 1e080c4:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1822:37
 1e080c8:    20 40             	r0 = [r0 + 8]			  ## l2cap.c:1822:37
 1e080ca:    b3 20             	if (r0 == 0) goto 358 <.GJTIE584_0_0_+0x20C : 1e08232 >
 1e080cc:    53 6c             	r3 = b[r6 + 5] (u)			  ## l2cap.c:1817:16
 1e080ce:    42 6c             	r2 = b[r6 + 4] (u)			  ## l2cap.c:1817:16
 1e080d0:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## l2cap.c:1817:16
 1e080d4:    23 50             	r3 = h[r0 + 4] (u)			  ## l2cap.c:1824:26
 1e080d6:    73 f2 09 10       	if (r3 != r7) goto 18 <.GJTIE584_0_0_+0xC6 : 1e080ec >			  ## l2cap.c:1824:26
 1e080da:    20 f3 04 10       	if ((r1 & 1) != 0) goto 8 <.GJTIE584_0_0_+0xC0 : 1e080e6 >
 1e080de:    f3 50             	r3 = h[r0 + 30] (u)			  ## l2cap.c:1833:25
 1e080e0:    23 f2 04 10       	if (r3 != r2) goto 8 <.GJTIE584_0_0_+0xC6 : 1e080ec >			  ## l2cap.c:1833:25
 1e080e4:    8e 18             	goto 284 <.GJTIE584_0_0_+0x1DC : 1e08202 >			  ## l2cap.c:1833:25
 1e080e6:    43 61             	r3 = b[r0 + 20] (u)			  ## l2cap.c:1827:52
 1e080e8:    53 f2 8b 00       	if (r3 == r5) goto 278 <.GJTIE584_0_0_+0x1DC : 1e08202 >			  ## l2cap.c:1827:52
 1e080ec:    00 40             	r0 = [r0 + 0]
 1e080ee:    f2 31             	if (r0 != 0) goto -28 <.GJTIE584_0_0_+0xAE : 1e080d4 >
 1e080f0:    a0 18             	goto 320 <.GJTIE584_0_0_+0x20C : 1e08232 >
 1e080f2:    3a 02             	[sp+12] = r2
 1e080f4:    70 08             	r0 = r7			  ## l2cap.c:1446:27
 1e080f6:    bf f3 68 f9       	call -3376 <connection_address_for_handle : 1e073ca >			  ## l2cap.c:1446:27
 1e080fa:    03 08             	r3 = r0			  ## l2cap.c:1446:27
 1e080fc:    ca ff 78 1a 00 00 	r10 = 6776 <l2cap_stack : 1a78 >
 1e08102:    97 26             	if (r3 == 0) goto 302 <.GJTIE584_0_0_+0x20C : 1e08232 >
 1e08104:    08 16             	call -1008 <btstack_memory_l2cap_channel_get : 1e07d16 >			  ## l2cap.c:1454:35
 1e08106:    0a 08             	r10 = r0			  ## l2cap.c:1454:35
 1e08108:    7f 20             	if (r0 == 0) goto 254 <.GJTIE584_0_0_+0x1E2 : 1e08208 >			  ## l2cap.c:1454:35
 1e0810a:    60 81             	r0 += 22			  ## l2cap.c:1462:5
 1e0810c:    62 70             	r2 = 6			  ## l2cap.c:1462:5
 1e0810e:    18 02             	[sp+4] = r0			  ## l2cap.c:1462:5
 1e08110:    31 08             	r1 = r3			  ## l2cap.c:1462:5
 1e08112:    97 f3 e7 f6       	call 3141070 <memcpy : 106ee4 >			  ## l2cap.c:1462:5
 1e08116:    1b f7 1c a0       	h[r10 + 28] = r11			  ## l2cap.c:1463:36
 1e0811a:    40 02             	r0 = [sp+16]			  ## l2cap.c:1464:21
 1e0811c:    10 f7 04 a0       	h[r10 + 4] = r0			  ## l2cap.c:1464:21
 1e08120:    00 f6 08 d0       	r0 = [r13 + 8]			  ## l2cap.c:1465:36
 1e08124:    10 f6 08 a0       	[r10 + 8] = r0			  ## l2cap.c:1465:25
 1e08128:    00 f6 0c d0       	r0 = [r13 + 12]			  ## l2cap.c:1466:40
 1e0812c:    10 f6 0c a0       	[r10 + 12] = r0			  ## l2cap.c:1466:29
 1e08130:    32 02             	r2 = [sp+12]			  ## l2cap.c:1466:29
 1e08132:    b0 55             	r0 = h[r2 + 54] (u)			  ## l2cap.c:133:59
 1e08134:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e08136:    b9 55             	h[r2 + 54] = r1			  ## l2cap.c:133:59
 1e08138:    10 f7 1e a0       	h[r10 + 30] = r0			  ## l2cap.c:1467:43
 1e0813c:    1c f7 20 a0       	h[r10 + 32] = r12			  ## l2cap.c:1468:43
 1e08140:    00 f7 06 d0       	r0 = h[r13 + 6] (u)			  ## l2cap.c:1469:54
 1e08144:    10 f7 22 a0       	h[r10 + 34] = r0			  ## l2cap.c:1469:43
 1e08148:    c1 ff 70 09 00 00 	r1 = 2416 <stack_configs_app : 970 >			  ## l2cap.c:973:33
 1e0814e:    53 63             	r3 = b[r1 + 21] (u)			  ## l2cap.c:973:33
 1e08150:    01 fb a0 02       	r1 = 672 <_MASK_MEM_SIZE+0xC : 2a0 >			  ## l2cap.c:976:13
 1e08154:    12 08             	r2 = r1			  ## l2cap.c:976:13
 1e08156:    00 f3 02 30       	if ((r3 & 1) == 0) goto 4 <.GJTIE584_0_0_+0x138 : 1e0815e >			  ## l2cap.c:976:13
 1e0815a:    02 fb ee 03       	r2 = 1006 <BTCTLER_LE_RAM_TOTAL+0x10 : 3ee >			  ## l2cap.c:976:13
 1e0815e:    12 f7 24 a0       	h[r10 + 36] = r2			  ## l2cap.c:1470:43
 1e08162:    15 f9 13 a0       	b[r10 + 19] = r5			  ## l2cap.c:1471:46
 1e08166:    32 02             	r2 = [sp+12]			  ## l2cap.c:1473:39
 1e08168:    02 f9 28 20       	r2 = b[r2 + 40] (u)			  ## l2cap.c:1473:39
 1e0816c:    92 d0             	r2 = r2 >> 2			  ## l2cap.c:1473:9
 1e0816e:    22 fd 04 29       	r2 = r2 & 4			  ## l2cap.c:1473:9
 1e08172:    12 f9 26 a0       	b[r10 + 38] = r2			  ## l2cap.c:1473:9
 1e08176:    c2 ff 70 09 00 00 	r2 = 2416 <stack_configs_app : 970 >			  ## l2cap.c:973:33
 1e0817c:    52 65             	r2 = b[r2 + 21] (u)			  ## l2cap.c:973:33
 1e0817e:    00 f3 02 20       	if ((r2 & 1) == 0) goto 4 <.GJTIE584_0_0_+0x160 : 1e08186 >			  ## l2cap.c:973:33
 1e08182:    01 fb ee 03       	r1 = 1006 <BTCTLER_LE_RAM_TOTAL+0x10 : 3ee >			  ## l2cap.c:976:13
 1e08186:    10 f2 02 90       	if (r0 <= r1) goto 4 <.GJTIE584_0_0_+0x168 : 1e0818e >
 1e0818a:    11 f7 22 a0       	h[r10 + 34] = r1			  ## l2cap.c:1480:46
 1e0818e:    40 70             	r0 = 4			  ## l2cap.c:1484:38
 1e08190:    10 f9 12 a0       	b[r10 + 18] = r0			  ## l2cap.c:1484:38
 1e08194:    1e f7 10 a0       	h[r10 + 16] = r14			  ## l2cap.c:1485:42
 1e08198:    30 02             	r0 = [sp+12]			  ## l2cap.c:1488:5
 1e0819a:    80 80             	r0 += 8			  ## l2cap.c:1488:5
 1e0819c:    a1 08             	r1 = r10			  ## l2cap.c:1488:5
 1e0819e:    c3 15             	call -1146 <btstack_linked_list_add : 1e07d26 >			  ## l2cap.c:1488:5
 1e081a0:    20 77             	r0 = 114			  ## l2cap.c:356:14
 1e081a2:    d0 f5 2c 00       	b[sp+44] = r0			  ## l2cap.c:356:14
 1e081a6:    e0 70             	r0 = 14			  ## l2cap.c:357:14
 1e081a8:    d0 f5 2d 00       	b[sp+45] = r0			  ## l2cap.c:357:14
 1e081ac:    62 70             	r2 = 6			  ## utils.c:188:5
 1e081ae:    20 02             	r0 = [sp+8]			  ## utils.c:188:5
 1e081b0:    11 02             	r1 = [sp+4]			  ## utils.c:188:5
 1e081b2:    97 f3 97 f6       	call 3140910 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e081b6:    00 f7 04 a0       	r0 = h[r10 + 4] (u)			  ## l2cap.c:359:37
 1e081ba:    d0 f5 34 00       	b[sp+52] = r0			  ## utils.c:160:19
 1e081be:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e081c0:    d0 f5 35 00       	b[sp+53] = r0			  ## utils.c:161:19
 1e081c4:    00 f7 1c a0       	r0 = h[r10 + 28] (u)			  ## l2cap.c:360:55
 1e081c8:    d0 f5 36 00       	b[sp+54] = r0			  ## utils.c:160:19
 1e081cc:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e081ce:    d0 f5 37 00       	b[sp+55] = r0			  ## utils.c:161:19
 1e081d2:    00 f7 1e a0       	r0 = h[r10 + 30] (u)			  ## l2cap.c:361:55
 1e081d6:    d0 f5 38 00       	b[sp+56] = r0			  ## utils.c:160:19
 1e081da:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e081dc:    d0 f5 39 00       	b[sp+57] = r0			  ## utils.c:161:19
 1e081e0:    00 f7 20 a0       	r0 = h[r10 + 32] (u)			  ## l2cap.c:362:55
 1e081e4:    d0 f5 3a 00       	b[sp+58] = r0			  ## utils.c:160:19
 1e081e8:    00 d2             	r0 = r0 >> 8			  ## utils.c:161:21
 1e081ea:    d0 f5 3b 00       	b[sp+59] = r0			  ## utils.c:161:19
 1e081ee:    c2 a2             	r2 = sp + 44			  ## utils.c:161:19
 1e081f0:    41 70             	r1 = 4			  ## l2cap.c:363:5
 1e081f2:    03 71             	r3 = 16			  ## l2cap.c:363:5
 1e081f4:    a0 08             	r0 = r10			  ## l2cap.c:363:5
 1e081f6:    bf f3 bf fa       	call -2690 <l2cap_dispatch : 1e07778 >			  ## l2cap.c:363:5
 1e081fa:    ca ff 78 1a 00 00 	r10 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:363:5
 1e08200:    18 18             	goto 48 <.GJTIE584_0_0_+0x20C : 1e08232 >			  ## l2cap.c:363:5
 1e08202:    61 08             	r1 = r6
 1e08204:    9a 15             	call -1228 <l2cap_signaling_handler_channel : 1e07d3a >
 1e08206:    15 18             	goto 42 <.GJTIE584_0_0_+0x20C : 1e08232 >
 1e08208:    e6 fd 00 3c       	r3 = r12.l (u)			  ## l2cap.c:1457:9
 1e0820c:    21 70             	r1 = 2			  ## l2cap.c:1457:9
 1e0820e:    40 70             	r0 = 4			  ## l2cap.c:1457:9
 1e08210:    48 1f             	goto -368 <.GJTIE584_0_0_+0x7C : 1e080a2 >			  ## l2cap.c:1457:9
 1e08212:    80 fb 40 6f       	r6 = r15 + r4			  ## l2cap.c:2010:55
 1e08216:    01 6c             	r1 = b[r6 + 0] (u)			  ## l2cap.c:1777:17
 1e08218:    15 6c             	r5 = b[r6 + 1] (u)			  ## l2cap.c:1778:17
 1e0821a:    04 22             	if (r1 == 0) goto 8 <.GJTIE584_0_0_+0x1FE : 1e08224 >			  ## l2cap.c:1778:17
 1e0821c:    91 e0 02 00       	if (r1 == 9) goto 4 <.GJTIE584_0_0_+0x1FE : 1e08224 >
 1e08220:    c1 e0 0e 3f       	if (r1 < 12) goto -484 <.GJTIE584_0_0_+0x1A : 1e08040 >
 1e08224:    11 70             	r1 = 1			  ## l2cap.c:1782:9
 1e08226:    03 70             	r3 = 0			  ## l2cap.c:1782:9
 1e08228:    1e f5 00 00       	[sp] = r14			  ## l2cap.c:1782:9
 1e0822c:    70 08             	r0 = r7
 1e0822e:    52 08             	r2 = r5
 1e08230:    54 15             	call -1368 <l2cap_register_signaling_response : 1e07cda >
 1e08232:    30 6c             	r0 = b[r6 + 3] (u)			  ## l2cap.c:2013:69
 1e08234:    21 6c             	r1 = b[r6 + 2] (u)			  ## l2cap.c:2013:69
 1e08236:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## l2cap.c:2013:69
 1e0823a:    40 b8             	r0 = r4 + r1			  ## l2cap.c:2013:67
 1e0823c:    40 80             	r0 += 4			  ## l2cap.c:2013:28
 1e0823e:    24 04             	r4 = r0.l (u)			  ## l2cap.c:2008:16
 1e08240:    94 f2 e7 3f       	if (r4 < r9) goto -50 <.GJTIE584_0_0_+0x1EC : 1e08212 >			  ## l2cap.c:2008:16
 1e08244:    53 19             	goto 678 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:2008:16
 1e08246:    80 e1 23 01       	if (r0 == 24) goto 582 <.GJTIE584_0_0_+0x46A : 1e08490 >
 1e0824a:    30 e7 39 11       	if (r0 != 115) goto 626 <.GJTIE584_0_0_+0x49A : 1e084c0 >
 1e0824e:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1384:37
 1e08252:    02 f9 03 f0       	r2 = b[r15 + 3] (u)			  ## l2cap.c:1379:18
 1e08256:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1379:18
 1e0825a:    21 42             	r1 = [r1 + 8]			  ## l2cap.c:1379:18
 1e0825c:    d8 fd 40 02       	r0 <= insert(r2, p:8, l:24)			  ## l2cap.c:1379:18
 1e08260:    0d 22             	if (r1 == 0) goto 26 <.GJTIE584_0_0_+0x256 : 1e0827c >			  ## l2cap.c:1379:18
 1e08262:    02 70             	r2 = 0
 1e08264:    23 04             	r3 = r0.l (u)
 1e08266:    24 52             	r4 = h[r1 + 4] (u)			  ## l2cap.c:1386:27
 1e08268:    34 f2 04 10       	if (r4 != r3) goto 8 <.GJTIE584_0_0_+0x24E : 1e08274 >			  ## l2cap.c:1386:27
 1e0826c:    e4 52             	r4 = h[r1 + 28] (u)			  ## l2cap.c:1386:76
 1e0826e:    14 e0 01 00       	if (r4 == 1) goto 2 <.GJTIE584_0_0_+0x24E : 1e08274 >
 1e08272:    12 70             	r2 = 1
 1e08274:    01 42             	r1 = [r1 + 0]
 1e08276:    f7 33             	if (r1 != 0) goto -18 <.GJTIE584_0_0_+0x240 : 1e08266 >
 1e08278:    02 e0 22 11       	if (r2 != 0) goto 580 <.GJTIE584_0_0_+0x49A : 1e084c0 >
 1e0827c:    20 04             	r0 = r0.l (u)			  ## l2cap.c:1393:9
 1e0827e:    31 71             	r1 = 19			  ## l2cap.c:1393:9
 1e08280:    bf f3 a5 f8       	call -3766 <hci_disconnect_cmd : 1e073ce >			  ## l2cap.c:1393:9
 1e08284:    1d 19             	goto 570 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1393:9
 1e08286:    69 16             	call -814 <l2cap_get_channel_for_local_cid : 1e07f5a >			  ## l2cap.c:2055:36
 1e08288:    00 e0 30 01       	if (r0 == 0) goto 608 <.GJTIE584_0_0_+0x4C6 : 1e084ec >
 1e0828c:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:2057:57
 1e08290:    91 fc f8 ff       	r1 = r9 + -8			  ## l2cap.c:2057:93
 1e08294:    63 04             	r3 = r1.l (u)			  ## l2cap.c:2057:13
 1e08296:    61 70             	r1 = 6			  ## l2cap.c:2057:13
 1e08298:    bf f3 6e fa       	call -2852 <l2cap_dispatch : 1e07778 >			  ## l2cap.c:2057:13
 1e0829c:    27 19             	goto 590 <.GJTIE584_0_0_+0x4C6 : 1e084ec >
 1e0829e:    04 48             	r4 = [r4 + 0]			  ## l2cap.c:2037:90
 1e082a0:    04 e0 24 01       	if (r4 == 0) goto 584 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:2037:90
 1e082a4:    40 02             	r0 = [sp+16]			  ## l2cap.c:2038:17
 1e082a6:    21 04             	r1 = r0.l (u)			  ## l2cap.c:2038:17
 1e082a8:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:2038:128
 1e082ac:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:2038:164
 1e082b0:    23 04             	r3 = r0.l (u)			  ## l2cap.c:2038:17
 1e082b2:    80 70             	r0 = 8			  ## l2cap.c:2038:17
 1e082b4:    84 00             	call r4			  ## l2cap.c:2038:17
 1e082b6:    1a 19             	goto 564 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:2038:17
 1e082b8:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## l2cap.c:2023:28
 1e082bc:    01 f9 0a f0       	r1 = b[r15 + 10] (u)			  ## l2cap.c:2023:28
 1e082c0:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## l2cap.c:2023:28
 1e082c4:    c0 92             	r0 = r1 + 12			  ## l2cap.c:2024:43
 1e082c6:    90 f2 11 81       	if (r0 > r9) goto 546 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:2024:43
 1e082ca:    05 f9 09 f0       	r5 = b[r15 + 9] (u)			  ## l2cap.c:2022:31
 1e082ce:    06 f9 08 f0       	r6 = b[r15 + 8] (u)			  ## l2cap.c:1879:22
 1e082d2:    f7 fc 08 00       	r7 = r15 + 8			  ## l2cap.c:2027:76
 1e082d6:    21 70             	r1 = 2			  ## l2cap.c:1880:22
 1e082d8:    70 08             	r0 = r7			  ## l2cap.c:1880:22
 1e082da:    bf f3 4d f0       	call -8038 <little_endian_read_16 : 1e06378 >			  ## l2cap.c:1880:22
 1e082de:    76 e0 05 01       	if (r6 == 7) goto 522 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:1880:22
 1e082e2:    c4 ff 7c 1a 00 00 	r4 = 6780 <le_l2cap_event_packet_handler : 1a7c >
 1e082e8:    36 e1 f5 00       	if (r6 == 19) goto 490 <.GJTIE584_0_0_+0x4B0 : 1e084d6 >
 1e082ec:    26 e1 f5 10       	if (r6 != 18) goto 490 <.GJTIE584_0_0_+0x4B4 : 1e084da >
 1e082f0:    80 e0 f3 30       	if (r0 < 8) goto 486 <.GJTIE584_0_0_+0x4B4 : 1e084da >
 1e082f4:    40 02             	r0 = [sp+16]			  ## l2cap.c:1891:22
 1e082f6:    28 04             	r8 = r0.l (u)			  ## l2cap.c:1891:22
 1e082f8:    80 08             	r0 = r8			  ## l2cap.c:1891:22
 1e082fa:    bf f3 ea f2       	call -6700 <le_hci_connection_for_handle : 1e068d2 >			  ## l2cap.c:1891:22
 1e082fe:    06 08             	r6 = r0			  ## l2cap.c:1891:22
 1e08300:    06 e0 6f 01       	if (r6 == 0) goto 734 <.GJTIE584_0_0_+0x5BC : 1e085e2 >
 1e08304:    00 f9 28 60       	r0 = b[r6 + 40] (u)			  ## l2cap.c:1893:29
 1e08308:    00 e0 33 01       	if (r0 == 0) goto 614 <.GJTIE584_0_0_+0x54C : 1e08572 >			  ## l2cap.c:1893:17
 1e0830c:    02 f9 11 f0       	r2 = b[r15 + 17] (u)			  ## l2cap.c:1897:17
 1e08310:    00 70             	r0 = 0			  ## l2cap.c:1897:17
 1e08312:    f1 71             	r1 = 31			  ## l2cap.c:1897:17
 1e08314:    03 70             	r3 = 0			  ## l2cap.c:1897:17
 1e08316:    08 02             	[sp] = r0			  ## l2cap.c:1897:17
 1e08318:    80 08             	r0 = r8			  ## l2cap.c:1897:17
 1e0831a:    e6 18             	goto 460 <.GJTIE584_0_0_+0x4C2 : 1e084e8 >			  ## l2cap.c:1897:17
 1e0831c:    24 48             	r4 = [r4 + 8]			  ## l2cap.c:2045:97
 1e0831e:    e6 28             	if (r4 == 0) goto 460 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:2045:97
 1e08320:    40 02             	r0 = [sp+16]			  ## l2cap.c:2046:17
 1e08322:    21 04             	r1 = r0.l (u)			  ## l2cap.c:2046:17
 1e08324:    f2 fc 08 00       	r2 = r15 + 8			  ## l2cap.c:2046:134
 1e08328:    90 fc f8 ff       	r0 = r9 + -8			  ## l2cap.c:2046:170
 1e0832c:    23 04             	r3 = r0.l (u)			  ## l2cap.c:2046:17
 1e0832e:    90 70             	r0 = 9			  ## l2cap.c:2046:17
 1e08330:    84 00             	call r4			  ## l2cap.c:2046:17
 1e08332:    dc 18             	goto 440 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:2046:17
 1e08334:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e08338:    01 f9 09 f0       	r1 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e0833c:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e08340:    91 f5 20 00       	h[sp+32] = r1			  ## utils.c:188:5
 1e08344:    00 f9 08 f0       	r0 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e08348:    01 f9 07 f0       	r1 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e0834c:    02 f9 06 f0       	r2 = b[r15 + 6] (u)			  ## utils.c:188:5
 1e08350:    03 f9 05 f0       	r3 = b[r15 + 5] (u)			  ## utils.c:188:5
 1e08354:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e08358:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e0835c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e08360:    7b 02             	[sp+28] = r3			  ## utils.c:188:5
 1e08362:    00 f9 0b f0       	r0 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e08366:    90 b0             	r0 |= 2			  ## l2cap.c:1268:42
 1e08368:    20 e0 aa 00       	if (r0 == 2) goto 340 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1268:42
 1e0836c:    00 f9 02 f0       	r0 = b[r15 + 2] (u)			  ## l2cap.c:1271:13
 1e08370:    c1 20             	if (r0 == 0) goto 386 <.GJTIE584_0_0_+0x4CE : 1e084f4 >			  ## l2cap.c:1271:13
 1e08372:    c0 a1             	r0 = sp + 28
 1e08374:    51 72             	r1 = 37			  ## l2cap.c:1279:13
 1e08376:    02 70             	r2 = 0			  ## l2cap.c:1279:13
 1e08378:    bf f3 ca f7       	call -4204 <check_l2cap_authentication_flag : 1e07310 >			  ## l2cap.c:1279:13
 1e0837c:    01 f6 00 a0       	r1 = [r10 + 0]			  ## l2cap.c:1130:44
 1e08380:    20 42             	r0 = [r1 + 8]			  ## l2cap.c:1131:16
 1e08382:    9e 20             	if (r0 == 0) goto 316 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1131:16
 1e08384:    05 f9 02 f0       	r5 = b[r15 + 2] (u)			  ## l2cap.c:1281:62
 1e08388:    84 92             	r4 = r1 + 8			  ## l2cap.c:1130:57
 1e0838a:    46 08             	r6 = r4			  ## l2cap.c:1130:57
 1e0838c:    67 08             	r7 = r6
 1e0838e:    06 08             	r6 = r0
 1e08390:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1133:15
 1e08392:    c1 a1             	r1 = sp + 28			  ## l2cap.c:1133:15
 1e08394:    62 70             	r2 = 6			  ## l2cap.c:1133:15
 1e08396:    97 f3 a9 f5       	call 3140434 <memcmp : 106eec >			  ## l2cap.c:1133:15
 1e0839a:    10 30             	if (r0 != 0) goto 32 <.GJTIE584_0_0_+0x396 : 1e083bc >			  ## l2cap.c:1133:13
 1e0839c:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1134:34
 1e0839e:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1134:22
 1e083a0:    20 6d             	r0 = b[r6 + 18] (u)			  ## l2cap.c:1135:44
 1e083a2:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1135:90
 1e083a4:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE584_0_0_+0x390 : 1e083b6 >			  ## l2cap.c:1135:90
 1e083a8:    60 08             	r0 = r6			  ## l2cap.c:1137:17
 1e083aa:    51 08             	r1 = r5			  ## l2cap.c:1137:17
 1e083ac:    bf f3 f9 f9       	call -3086 <l2cap_emit_channel_opened : 1e077a2 >			  ## l2cap.c:1137:17
 1e083b0:    60 08             	r0 = r6			  ## l2cap.c:1140:17
 1e083b2:    bf f3 d6 f9       	call -3156 <btstack_memory_l2cap_channel_free : 1e07762 >			  ## l2cap.c:1140:17
 1e083b6:    06 48             	r6 = [r4 + 0]			  ## l2cap.c:1131:16
 1e083b8:    eb 3d             	if (r6 != 0) goto -42 <.GJTIE584_0_0_+0x36A : 1e08390 >
 1e083ba:    82 18             	goto 260 <.GJTIE584_0_0_+0x49A : 1e084c0 >
 1e083bc:    00 4c             	r0 = [r6 + 0]			  ## l2cap.c:1131:16
 1e083be:    64 08             	r4 = r6			  ## l2cap.c:1131:16
 1e083c0:    e5 31             	if (r0 != 0) goto -54 <.GJTIE584_0_0_+0x366 : 1e0838c >			  ## l2cap.c:1131:16
 1e083c2:    7e 18             	goto 252 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1131:16
 1e083c4:    72 e0 7c 30       	if (r2 < 7) goto 248 <.GJTIE584_0_0_+0x49A : 1e084c0 >
 1e083c8:    00 f9 06 f0       	r0 = b[r15 + 6] (u)			  ## l2cap.c:1307:21
 1e083cc:    90 b0             	r0 |= 2			  ## l2cap.c:1315:13
 1e083ce:    00 04             	r0 = r0.b0 (u)			  ## l2cap.c:1315:13
 1e083d0:    20 e0 76 00       	if (r0 == 2) goto 236 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1315:13
 1e083d4:    00 f9 0c f0       	r0 = b[r15 + 12] (u)			  ## utils.c:188:5
 1e083d8:    02 f9 0b f0       	r2 = b[r15 + 11] (u)			  ## utils.c:188:5
 1e083dc:    01 f9 04 f0       	r1 = b[r15 + 4] (u)			  ## l2cap.c:1330:18
 1e083e0:    04 f9 03 f0       	r4 = b[r15 + 3] (u)			  ## l2cap.c:1330:18
 1e083e4:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e083e8:    92 f5 18 00       	h[sp+24] = r2			  ## utils.c:188:5
 1e083ec:    00 f9 0a f0       	r0 = b[r15 + 10] (u)			  ## utils.c:188:5
 1e083f0:    03 f9 09 f0       	r3 = b[r15 + 9] (u)			  ## utils.c:188:5
 1e083f4:    05 f9 08 f0       	r5 = b[r15 + 8] (u)			  ## utils.c:188:5
 1e083f8:    06 f9 07 f0       	r6 = b[r15 + 7] (u)			  ## utils.c:188:5
 1e083fc:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e08400:    02 f6 00 a0       	r2 = [r10 + 0]			  ## l2cap.c:1333:33
 1e08404:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## utils.c:188:5
 1e08408:    d0 fd 80 63       	r6 <= insert(r3, p:16, l:16)			  ## utils.c:188:5
 1e0840c:    5e 02             	[sp+20] = r6			  ## utils.c:188:5
 1e0840e:    20 44             	r0 = [r2 + 8]			  ## l2cap.c:1334:20
 1e08410:    29 20             	if (r0 == 0) goto 82 <.GJTIE584_0_0_+0x43E : 1e08464 >			  ## l2cap.c:1334:20
 1e08412:    86 94             	r6 = r2 + 8			  ## l2cap.c:1333:46
 1e08414:    c8 fd 40 41       	r4 <= insert(r1, p:8, l:8)			  ## l2cap.c:1330:18
 1e08418:    65 08             	r5 = r6			  ## l2cap.c:1330:18
 1e0841a:    57 08             	r7 = r5
 1e0841c:    05 08             	r5 = r0
 1e0841e:    61 9b             	r1 = r5 + 22			  ## l2cap.c:1340:17
 1e08420:    40 a1             	r0 = sp + 20			  ## l2cap.c:1340:17
 1e08422:    62 70             	r2 = 6			  ## l2cap.c:1340:17
 1e08424:    97 f3 62 f5       	call 3140292 <memcmp : 106eec >			  ## l2cap.c:1340:17
 1e08428:    1a 30             	if (r0 != 0) goto 52 <.GJTIE584_0_0_+0x438 : 1e0845e >			  ## l2cap.c:1340:17
 1e0842a:    20 5a             	r0 = h[r5 + 4] (u)			  ## l2cap.c:1341:21
 1e0842c:    02 20             	if (r0 == 0) goto 4 <.GJTIE584_0_0_+0x40C : 1e08432 >			  ## l2cap.c:1341:21
 1e0842e:    40 f2 16 10       	if (r0 != r4) goto 44 <.GJTIE584_0_0_+0x438 : 1e0845e >
 1e08432:    00 4e             	r0 = [r7 + 0]			  ## l2cap.c:1344:36
 1e08434:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:1344:42
 1e08436:    01 9b             	r1 = r5 + 16			  ## l2cap.c:1340:17
 1e08438:    08 4e             	[r7 + 0] = r0			  ## l2cap.c:1344:30
 1e0843a:    20 62             	r0 = b[r1 + 2] (u)			  ## l2cap.c:1345:53
 1e0843c:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1345:80
 1e0843e:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE584_0_0_+0x424 : 1e0844a >			  ## l2cap.c:1345:80
 1e08442:    50 08             	r0 = r5			  ## l2cap.c:1349:25
 1e08444:    bf f3 ff f9       	call -3074 <l2cap_emit_channel_closed : 1e07846 >			  ## l2cap.c:1349:25
 1e08448:    04 18             	goto 8 <.GJTIE584_0_0_+0x42C : 1e08452 >			  ## l2cap.c:1349:25
 1e0844a:    01 75             	r1 = 80			  ## l2cap.c:1347:25
 1e0844c:    50 08             	r0 = r5			  ## l2cap.c:1347:25
 1e0844e:    bf f3 a8 f9       	call -3248 <l2cap_emit_channel_opened : 1e077a2 >			  ## l2cap.c:1347:25
 1e08452:    50 08             	r0 = r5			  ## l2cap.c:1351:21
 1e08454:    bf f3 85 f9       	call -3318 <btstack_memory_l2cap_channel_free : 1e07762 >			  ## l2cap.c:1351:21
 1e08458:    05 4c             	r5 = [r6 + 0]			  ## l2cap.c:1334:20
 1e0845a:    e1 3b             	if (r5 != 0) goto -62 <.GJTIE584_0_0_+0x3F8 : 1e0841e >			  ## l2cap.c:1334:20
 1e0845c:    03 18             	goto 6 <.GJTIE584_0_0_+0x43E : 1e08464 >			  ## l2cap.c:1334:20
 1e0845e:    00 4a             	r0 = [r5 + 0]			  ## l2cap.c:1334:20
 1e08460:    56 08             	r6 = r5			  ## l2cap.c:1334:20
 1e08462:    db 31             	if (r0 != 0) goto -74 <.GJTIE584_0_0_+0x3F4 : 1e0841a >			  ## l2cap.c:1334:20
 1e08464:    40 a1             	r0 = sp + 20
 1e08466:    51 72             	r1 = 37			  ## l2cap.c:1361:9
 1e08468:    02 70             	r2 = 0			  ## l2cap.c:1361:9
 1e0846a:    bf f3 51 f7       	call -4446 <check_l2cap_authentication_flag : 1e07310 >			  ## l2cap.c:1361:9
 1e0846e:    28 18             	goto 80 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1361:9
 1e08470:    bf f3 18 fa       	call -3024 <l2cap_run : 1e078a4 >			  ## l2cap.c:1366:9
 1e08474:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:384:33
 1e08478:    25 40             	r5 = [r0 + 8]			  ## l2cap.c:384:33
 1e0847a:    22 2a             	if (r5 == 0) goto 68 <.GJTIE584_0_0_+0x49A : 1e084c0 >
 1e0847c:    20 6b             	r0 = b[r5 + 18] (u)			  ## l2cap.c:389:44
 1e0847e:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE584_0_0_+0x464 : 1e0848a >			  ## l2cap.c:389:44
 1e08482:    11 70             	r1 = 1			  ## l2cap.c:393:17
 1e08484:    50 08             	r0 = r5			  ## l2cap.c:393:17
 1e08486:    bf f3 c8 f9       	call -3184 <l2cap_emit_credits : 1e0781a >			  ## l2cap.c:393:17
 1e0848a:    05 4a             	r5 = [r5 + 0]
 1e0848c:    f7 3b             	if (r5 != 0) goto -18 <.GJTIE584_0_0_+0x456 : 1e0847c >
 1e0848e:    18 18             	goto 48 <.GJTIE584_0_0_+0x49A : 1e084c0 >
 1e08490:    f5 fc 02 00       	r5 = r15 + 2			  ## l2cap.c:1396:55
 1e08494:    71 72             	r1 = 39			  ## l2cap.c:1396:22
 1e08496:    02 70             	r2 = 0			  ## l2cap.c:1396:22
 1e08498:    50 08             	r0 = r5			  ## l2cap.c:1396:22
 1e0849a:    bf f3 39 f7       	call -4494 <check_l2cap_authentication_flag : 1e07310 >			  ## l2cap.c:1396:22
 1e0849e:    01 08             	r1 = r0			  ## l2cap.c:1396:22
 1e084a0:    0f 22             	if (r1 == 0) goto 30 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1396:22
 1e084a2:    50 08             	r0 = r5			  ## l2cap.c:1399:13
 1e084a4:    bf f3 f4 f6       	call -4632 <handle_remote_dev_type : 1e07290 >			  ## l2cap.c:1399:13
 1e084a8:    0b 18             	goto 22 <.GJTIE584_0_0_+0x49A : 1e084c0 >			  ## l2cap.c:1399:13
 1e084aa:    bf f3 8e f7       	call -4324 <connection_address_for_handle : 1e073ca >
 1e084ae:    08 20             	if (r0 == 0) goto 16 <.GJTIE584_0_0_+0x49A : 1e084c0 >
 1e084b0:    41 72             	r1 = 36
 1e084b2:    22 72             	r2 = 34
 1e084b4:    bf f3 2c f7       	call -4520 <check_l2cap_authentication_flag : 1e07310 >
 1e084b8:    bf f3 ac f0       	call -7848 <stack_run_loop_resume : 1e06614 >
 1e084bc:    bf f3 f2 f9       	call -3100 <l2cap_run : 1e078a4 >
 1e084c0:    00 f6 00 a0       	r0 = [r10 + 0]			  ## l2cap.c:1408:5
 1e084c4:    04 40             	r4 = [r0 + 0]			  ## l2cap.c:1408:18
 1e084c6:    00 70             	r0 = 0			  ## l2cap.c:1408:5
 1e084c8:    41 70             	r1 = 4			  ## l2cap.c:1408:5
 1e084ca:    02 70             	r2 = 0			  ## l2cap.c:1408:5
 1e084cc:    19 f5 00 00       	[sp] = r9			  ## l2cap.c:1408:5
 1e084d0:    f3 08             	r3 = r15			  ## l2cap.c:1408:5
 1e084d2:    84 00             	call r4			  ## l2cap.c:1408:5
 1e084d4:    0d 18             	goto 26 <.GJTIE584_0_0_+0x4CA : 1e084f0 >			  ## l2cap.c:1408:5
 1e084d6:    20 e0 2f 20       	if (r0 >= 2) goto 94 <.GJTIE584_0_0_+0x512 : 1e08538 >
 1e084da:    02 70             	r2 = 0			  ## l2cap.c:2029:17
 1e084dc:    40 02             	r0 = [sp+16]			  ## l2cap.c:2029:17
 1e084de:    20 04             	r0 = r0.l (u)			  ## l2cap.c:2029:17
 1e084e0:    f1 71             	r1 = 31			  ## l2cap.c:2029:17
 1e084e2:    03 70             	r3 = 0			  ## l2cap.c:2029:17
 1e084e4:    0a 02             	[sp] = r2			  ## l2cap.c:2029:17
 1e084e6:    52 08             	r2 = r5			  ## l2cap.c:2029:17
 1e084e8:    bf f3 f7 fb       	call -2066 <l2cap_register_signaling_response : 1e07cda >
 1e084ec:    bf f3 da f9       	call -3148 <l2cap_run : 1e078a4 >			  ## l2cap.c:2063:5
 1e084f0:    1e 0a             	sp += 60
 1e084f2:    5f 01             	{pc, r15-r4} = [sp++]			  ## l2cap.c:2078:1
 1e084f4:    04 f6 00 a0       	r4 = [r10 + 0]			  ## l2cap.c:1151:33
 1e084f8:    26 48             	r6 = [r4 + 8]			  ## l2cap.c:1151:33
 1e084fa:    e0 2d             	if (r6 == 0) goto -64 <.GJTIE584_0_0_+0x496 : 1e084bc >
 1e084fc:    00 f9 04 f0       	r0 = b[r15 + 4] (u)			  ## l2cap.c:1272:22
 1e08500:    07 f9 03 f0       	r7 = b[r15 + 3] (u)			  ## l2cap.c:1272:22
 1e08504:    f5 fc 05 00       	r5 = r15 + 5			  ## l2cap.c:1266:32
 1e08508:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## l2cap.c:1272:22
 1e0850c:    a8 70             	r8 = 10			  ## l2cap.c:1272:22
 1e0850e:    60 9d             	r0 = r6 + 22			  ## l2cap.c:1153:15
 1e08510:    62 70             	r2 = 6			  ## l2cap.c:1153:15
 1e08512:    51 08             	r1 = r5			  ## l2cap.c:1153:15
 1e08514:    97 f3 ea f4       	call 3140052 <memcmp : 106eec >			  ## l2cap.c:1153:15
 1e08518:    0c 30             	if (r0 != 0) goto 24 <.GJTIE584_0_0_+0x50C : 1e08532 >			  ## l2cap.c:1153:15
 1e0851a:    00 9d             	r0 = r6 + 16			  ## l2cap.c:1153:15
 1e0851c:    20 60             	r0 = b[r0 + 2] (u)			  ## l2cap.c:1154:44
 1e0851e:    70 b0             	r0 &= 4294967294			  ## l2cap.c:1154:90
 1e08520:    20 e0 07 10       	if (r0 != 2) goto 14 <.GJTIE584_0_0_+0x50C : 1e08532 >			  ## l2cap.c:1154:90
 1e08524:    18 f9 12 60       	b[r6 + 18] = r8			  ## l2cap.c:1156:50
 1e08528:    2f 5c             	h[r6 + 4] = r7			  ## l2cap.c:1157:33
 1e0852a:    b0 59             	r0 = h[r4 + 54] (u)			  ## l2cap.c:133:59
 1e0852c:    11 90             	r1 = r0 + 1			  ## l2cap.c:133:59
 1e0852e:    b9 59             	h[r4 + 54] = r1			  ## l2cap.c:133:59
 1e08530:    f8 5c             	h[r6 + 30] = r0			  ## l2cap.c:1158:54
 1e08532:    06 4c             	r6 = [r6 + 0]
 1e08534:    ec 3d             	if (r6 != 0) goto -40 <.GJTIE584_0_0_+0x4E8 : 1e0850e >
 1e08536:    c2 1f             	goto -124 <.GJTIE584_0_0_+0x496 : 1e084bc >
 1e08538:    41 70             	r1 = 4			  ## l2cap.c:1976:18
 1e0853a:    45 70             	r5 = 4			  ## l2cap.c:1976:18
 1e0853c:    70 08             	r0 = r7			  ## l2cap.c:1976:18
 1e0853e:    bf f3 1b ef       	call -8650 <little_endian_read_16 : 1e06378 >			  ## l2cap.c:1976:18
 1e08542:    71 77             	r1 = 119			  ## l2cap.c:1848:14
 1e08544:    d1 f5 1c 00       	b[sp+28] = r1			  ## l2cap.c:1848:14
 1e08548:    d5 f5 1d 00       	b[sp+29] = r5			  ## l2cap.c:1849:14
 1e0854c:    d2 f5 1e 00       	b[sp+30] = r2			  ## utils.c:83:19
 1e08550:    19 d2             	r1 = r3 >> 8			  ## utils.c:84:21
 1e08552:    02 48             	r2 = [r4 + 0]			  ## l2cap.c:1858:10
 1e08554:    d1 f5 1f 00       	b[sp+31] = r1			  ## utils.c:84:19
 1e08558:    d0 f5 20 00       	b[sp+32] = r0			  ## utils.c:83:19
 1e0855c:    00 d2             	r0 = r0 >> 8			  ## utils.c:84:21
 1e0855e:    d0 f5 21 00       	b[sp+33] = r0			  ## utils.c:84:19
 1e08562:    c4 25             	if (r2 == 0) goto -120 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## utils.c:84:19
 1e08564:    c2 a1             	r2 = sp + 28
 1e08566:    40 70             	r0 = 4			  ## l2cap.c:1861:5
 1e08568:    01 70             	r1 = 0			  ## l2cap.c:1861:5
 1e0856a:    63 70             	r3 = 6			  ## l2cap.c:1861:5
 1e0856c:    bf f3 92 c0       	call -32476 <__ble_comm_cbk_packet_handler : 1e00694 >			  ## l2cap.c:1861:5
 1e08570:    bd 1f             	goto -134 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:1861:5
 1e08572:    c0 ff 5e 1a 00 00 	r0 = 6750 <report_bss_size+0x1CE : 1a5e >			  ## hci_vendor.c:2296:27
 1e08578:    51 50             	r1 = h[r0 + 10] (u)			  ## hci_vendor.c:2296:27
 1e0857a:    49 02             	[sp+16] = r1			  ## hci_vendor.c:2296:27
 1e0857c:    0e f7 08 00       	r14 = h[r0 + 8] (u)			  ## hci_vendor.c:2296:27
 1e08580:    32 50             	r2 = h[r0 + 6] (u)			  ## hci_vendor.c:2296:27
 1e08582:    23 50             	r3 = h[r0 + 4] (u)			  ## hci_vendor.c:2296:27
 1e08584:    0c f7 02 00       	r12 = h[r0 + 2] (u)			  ## hci_vendor.c:2296:27
 1e08588:    0d f7 00 00       	r13 = h[r0 + 0] (u)			  ## hci_vendor.c:2296:27
 1e0858c:    41 70             	r1 = 4			  ## l2cap.c:1903:45
 1e0858e:    70 08             	r0 = r7			  ## l2cap.c:1903:45
 1e08590:    bf f3 f2 ee       	call -8732 <little_endian_read_16 : 1e06378 >			  ## l2cap.c:1903:45
 1e08594:    09 08             	r9 = r0			  ## l2cap.c:1903:45
 1e08596:    61 70             	r1 = 6			  ## l2cap.c:1904:45
 1e08598:    70 08             	r0 = r7			  ## l2cap.c:1904:45
 1e0859a:    bf f3 ed ee       	call -8742 <little_endian_read_16 : 1e06378 >			  ## l2cap.c:1904:45
 1e0859e:    0a 08             	r10 = r0			  ## l2cap.c:1904:45
 1e085a0:    81 70             	r1 = 8			  ## l2cap.c:1905:40
 1e085a2:    70 08             	r0 = r7			  ## l2cap.c:1905:40
 1e085a4:    bf f3 e8 ee       	call -8752 <little_endian_read_16 : 1e06378 >			  ## l2cap.c:1905:40
 1e085a8:    0b 08             	r11 = r0			  ## l2cap.c:1905:40
 1e085aa:    a1 70             	r1 = 10			  ## l2cap.c:1906:47
 1e085ac:    70 08             	r0 = r7			  ## l2cap.c:1906:47
 1e085ae:    bf f3 e3 ee       	call -8762 <little_endian_read_16 : 1e06378 >			  ## l2cap.c:1906:47
 1e085b2:    07 08             	r7 = r0			  ## l2cap.c:1906:47
 1e085b4:    d9 f2 11 30       	if (r9 < r13) goto 34 <.GJTIE584_0_0_+0x5B4 : 1e085da >			  ## l2cap.c:1906:47
 1e085b8:    ca f2 0f 80       	if (r10 > r12) goto 30 <.GJTIE584_0_0_+0x5B4 : 1e085da >
 1e085bc:    3b f2 0d 30       	if (r11 < r3) goto 26 <.GJTIE584_0_0_+0x5B4 : 1e085da >
 1e085c0:    2b f2 0b 80       	if (r11 > r2) goto 22 <.GJTIE584_0_0_+0x5B4 : 1e085da >
 1e085c4:    e7 f2 09 30       	if (r7 < r14) goto 18 <.GJTIE584_0_0_+0x5B4 : 1e085da >
 1e085c8:    40 02             	r0 = [sp+16]
 1e085ca:    07 f2 06 80       	if (r7 > r0) goto 12 <.GJTIE584_0_0_+0x5B4 : 1e085da >
 1e085ce:    f0 fc 0c 00       	r0 = r15 + 12			  ## l2cap.c:1930:59
 1e085d2:    81 08             	r1 = r8			  ## l2cap.c:1930:21
 1e085d4:    bf f3 0a e3       	call -14828 <l2cap_connection_update_request_just : 1e04bec >			  ## l2cap.c:1930:21
 1e085d8:    3d 20             	if (r0 == 0) goto 122 <.GJTIE584_0_0_+0x62E : 1e08654 >			  ## l2cap.c:1930:21
 1e085da:    40 70             	r0 = 4			  ## l2cap.c:1950:59
 1e085dc:    b8 4c             	[r6 + 44] = r0			  ## l2cap.c:1950:59
 1e085de:    15 f9 30 60       	b[r6 + 48] = r5			  ## l2cap.c:1952:56
 1e085e2:    00 48             	r0 = [r4 + 0]			  ## l2cap.c:1959:14
 1e085e4:    83 21             	if (r0 == 0) goto -250 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:1959:14
 1e085e6:    60 77             	r0 = 118			  ## l2cap.c:1963:18
 1e085e8:    d0 f5 22 00       	b[sp+34] = r0			  ## l2cap.c:1963:18
 1e085ec:    80 70             	r0 = 8			  ## l2cap.c:1963:18
 1e085ee:    d0 f5 23 00       	b[sp+35] = r0			  ## l2cap.c:1964:18
 1e085f2:    00 f9 0e f0       	r0 = b[r15 + 14] (u)			  ## l2cap.c:1965:9
 1e085f6:    01 f9 12 f0       	r1 = b[r15 + 18] (u)			  ## l2cap.c:1965:9
 1e085fa:    02 f9 0c f0       	r2 = b[r15 + 12] (u)			  ## l2cap.c:1965:9
 1e085fe:    03 f9 0d f0       	r3 = b[r15 + 13] (u)			  ## l2cap.c:1965:9
 1e08602:    04 f9 13 f0       	r4 = b[r15 + 19] (u)			  ## l2cap.c:1965:9
 1e08606:    05 f9 11 f0       	r5 = b[r15 + 17] (u)			  ## l2cap.c:1965:9
 1e0860a:    06 f9 10 f0       	r6 = b[r15 + 16] (u)			  ## l2cap.c:1965:9
 1e0860e:    07 f9 0f f0       	r7 = b[r15 + 15] (u)			  ## l2cap.c:1965:9
 1e08612:    d4 f5 2b 00       	b[sp+43] = r4			  ## l2cap.c:1965:9
 1e08616:    d5 f5 29 00       	b[sp+41] = r5			  ## l2cap.c:1965:9
 1e0861a:    d6 f5 28 00       	b[sp+40] = r6			  ## l2cap.c:1965:9
 1e0861e:    d7 f5 27 00       	b[sp+39] = r7			  ## l2cap.c:1965:9
 1e08622:    d3 f5 25 00       	b[sp+37] = r3			  ## l2cap.c:1965:9
 1e08626:    d2 f5 24 00       	b[sp+36] = r2			  ## l2cap.c:1965:9
 1e0862a:    c8 fd 40 14       	r1 <= insert(r4, p:8, l:8)			  ## l2cap.c:1965:9
 1e0862e:    d0 fd 80 61       	r6 <= insert(r1, p:16, l:16)			  ## l2cap.c:1965:9
 1e08632:    31 d4             	r1 = r6 >> 16			  ## l2cap.c:1965:9
 1e08634:    d1 f5 2a 00       	b[sp+42] = r1			  ## l2cap.c:1965:9
 1e08638:    c8 fd 40 07       	r0 <= insert(r7, p:8, l:8)			  ## l2cap.c:1965:9
 1e0863c:    d0 fd 80 20       	r2 <= insert(r0, p:16, l:16)			  ## l2cap.c:1965:9
 1e08640:    10 d4             	r0 = r2 >> 16			  ## l2cap.c:1965:9
 1e08642:    d0 f5 26 00       	b[sp+38] = r0			  ## l2cap.c:1965:9
 1e08646:    22 a2             	r2 = sp + 34			  ## l2cap.c:1965:9
 1e08648:    40 70             	r0 = 4			  ## l2cap.c:1968:9
 1e0864a:    01 70             	r1 = 0			  ## l2cap.c:1968:9
 1e0864c:    a3 70             	r3 = 10			  ## l2cap.c:1968:9
 1e0864e:    bf f3 21 c0       	call -32702 <__ble_comm_cbk_packet_handler : 1e00694 >			  ## l2cap.c:1968:9
 1e08652:    4c 1f             	goto -360 <.GJTIE584_0_0_+0x4C6 : 1e084ec >			  ## l2cap.c:1968:9
 1e08654:    cb f4 02 69       	[r6 + 44] = 2			  ## l2cap.c:1944:59
 1e08658:    19 f7 32 60       	h[r6 + 50] = r9			  ## l2cap.c:1945:50
 1e0865c:    1a f7 34 60       	h[r6 + 52] = r10			  ## l2cap.c:1946:50
 1e08660:    1b f7 36 60       	h[r6 + 54] = r11			  ## l2cap.c:1947:45
 1e08664:    cf 5d             	h[r6 + 56] = r7			  ## l2cap.c:1948:52
 1e08666:    bb 1f             	goto -138 <.GJTIE584_0_0_+0x5B8 : 1e085de >			  ## l2cap.c:1948:52


btstack_memory_le_hci_connection_free:
 1e08668:    c1 ff 74 1a 00 00 	r1 = 6772 <le_stack_pool : 1a74 >			  ## btstack_memory.c:226:0
 1e0866e:    01 42             	r1 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e08670:    02 42             	r2 = [r1 + 0]			  ## btstack_memory.c:227:23
 1e08672:    05 24             	if (r2 == 0) goto 10 <btstack_memory_le_hci_connection_free+0x16 : 1e0867e >
 1e08674:    23 08             	r3 = r2
 1e08676:    03 f2 04 00       	if (r3 == r0) goto 8 <btstack_memory_le_hci_connection_free+0x1A : 1e08682 >
 1e0867a:    03 46             	r3 = [r3 + 0]
 1e0867c:    fc 37             	if (r3 != 0) goto -8 <btstack_memory_le_hci_connection_free+0xE : 1e08676 >
 1e0867e:    0a 40             	[r0 + 0] = r2			  ## btstack_memory.c:45:25
 1e08680:    08 42             	[r1 + 0] = r0			  ## btstack_memory.c:46:25
 1e08682:    20 00             	rts			  ## btstack_memory.c:228:1


le_hci_connection_for_bd_addr_and_type:
 1e08684:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_vendor.c:308:0
 1e08686:    fa 0b             	sp += -12			  ## hci_vendor.c:308:0
 1e08688:    14 08             	r4 = r1			  ## hci_vendor.c:308:0
 1e0868a:    05 08             	r5 = r0			  ## hci_vendor.c:308:0
 1e0868c:    c0 ff 40 18 00 00 	r0 = 6208 <report_irq_stack_end : 1840 >			  ## btstack_linked_list.c:162:14
 1e08692:    01 40             	r1 = [r0 + 0]			  ## btstack_linked_list.c:163:16
 1e08694:    02 70             	r2 = 0			  ## btstack_linked_list.c:163:16
 1e08696:    0a 02             	[sp] = r2			  ## btstack_linked_list.c:161:25
 1e08698:    18 02             	[sp+4] = r0			  ## btstack_linked_list.c:162:14
 1e0869a:    29 02             	[sp+8] = r1			  ## btstack_linked_list.c:163:14
 1e0869c:    00 a0             	r0 = sp + 0
 1e0869e:    bf f3 fa f0       	call -7692 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## hci_vendor.c:319:12
 1e086a2:    0e 20             	if (r0 == 0) goto 28 <le_hci_connection_for_bd_addr_and_type+0x3C : 1e086c0 >
 1e086a4:    00 a0             	r0 = sp + 0
 1e086a6:    bf f3 04 f1       	call -7672 <btstack_linked_list_iterator_next : 1e068b2 >			  ## hci_vendor.c:320:67
 1e086aa:    06 08             	r6 = r0			  ## hci_vendor.c:320:67
 1e086ac:    30 4c             	r0 = [r6 + 12]			  ## hci_vendor.c:321:25
 1e086ae:    40 f2 f5 1f       	if (r0 != r4) goto -22 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e0869c >			  ## hci_vendor.c:321:25
 1e086b2:    01 9d             	r1 = r6 + 16			  ## hci_vendor.c:324:38
 1e086b4:    62 70             	r2 = 6			  ## hci_vendor.c:324:13
 1e086b6:    50 08             	r0 = r5			  ## hci_vendor.c:324:13
 1e086b8:    97 f3 18 f4       	call 3139632 <memcmp : 106eec >			  ## hci_vendor.c:324:13
 1e086bc:    ef 31             	if (r0 != 0) goto -34 <le_hci_connection_for_bd_addr_and_type+0x18 : 1e0869c >			  ## hci_vendor.c:324:13
 1e086be:    01 18             	goto 2 <le_hci_connection_for_bd_addr_and_type+0x3E : 1e086c2 >			  ## hci_vendor.c:324:13
 1e086c0:    06 70             	r6 = 0
 1e086c2:    60 08             	r0 = r6			  ## hci_vendor.c:337:1
 1e086c4:    06 0a             	sp += 12			  ## hci_vendor.c:337:1
 1e086c6:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_vendor.c:337:1


le_create_connection_for_bd_addr_and_type:
 1e086c8:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_vendor.c:283:0
 1e086ca:    c2 ff 74 1a 00 00 	r2 = 6772 <le_stack_pool : 1a74 >			  ## btstack_memory.c:223:29
 1e086d0:    02 44             	r2 = [r2 + 0]			  ## btstack_memory.c:223:29
 1e086d2:    04 44             	r4 = [r2 + 0]			  ## btstack_memory.c:66:23
 1e086d4:    15 08             	r5 = r1
 1e086d6:    06 08             	r6 = r0
 1e086d8:    20 28             	if (r4 == 0) goto 64 <le_create_connection_for_bd_addr_and_type+0x52 : 1e0871a >
 1e086da:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:72:31
 1e086dc:    08 44             	[r2 + 0] = r0			  ## btstack_memory.c:72:23
 1e086de:    01 70             	r1 = 0			  ## hci_vendor.c:290:5
 1e086e0:    02 fb d4 04       	r2 = 1236 <BTCTLER_CONTROLLER_DATA_SIZE+0x16 : 4d4 >			  ## hci_vendor.c:290:5
 1e086e4:    07 70             	r7 = 0			  ## hci_vendor.c:290:5
 1e086e6:    40 08             	r0 = r4			  ## hci_vendor.c:290:5
 1e086e8:    97 f3 02 f4       	call 3139588 <memset : 106ef0 >			  ## hci_vendor.c:290:5
 1e086ec:    00 99             	r0 = r4 + 16			  ## hci_vendor.c:291:5
 1e086ee:    62 70             	r2 = 6			  ## hci_vendor.c:291:5
 1e086f0:    61 08             	r1 = r6			  ## hci_vendor.c:291:5
 1e086f2:    97 f3 f7 f3       	call 3139566 <memcpy : 106ee4 >			  ## hci_vendor.c:291:5
 1e086f6:    3d 48             	[r4 + 12] = r5			  ## hci_vendor.c:292:24
 1e086f8:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## hci_vendor.c:293:22
 1e086fe:    28 58             	h[r4 + 4] = r0			  ## hci_vendor.c:293:22
 1e08700:    bf 48             	[r4 + 44] = r7			  ## hci_vendor.c:298:41
 1e08702:    40 fc cc 04       	r0 = r4 + 1228			  ## hci_vendor.c:298:41
 1e08706:    6f 60             	b[r0 + 6] = r7			  ## hci_vendor.c:296:33
 1e08708:    2f 50             	h[r0 + 4] = r7			  ## hci_vendor.c:296:33
 1e0870a:    1f 50             	h[r0 + 2] = r7			  ## hci_vendor.c:296:33
 1e0870c:    c0 ff 40 18 00 00 	r0 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:300:5
 1e08712:    41 08             	r1 = r4			  ## hci_vendor.c:300:5
 1e08714:    bf f3 07 fb       	call -2546 <btstack_linked_list_add : 1e07d26 >			  ## hci_vendor.c:300:5
 1e08718:    01 18             	goto 2 <le_create_connection_for_bd_addr_and_type+0x54 : 1e0871c >			  ## hci_vendor.c:300:5
 1e0871a:    04 70             	r4 = 0
 1e0871c:    40 08             	r0 = r4			  ## hci_vendor.c:302:1
 1e0871e:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_vendor.c:302:1


hci_run_for_acl_data_send:
 1e08720:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_vendor.c:2131:0
 1e08722:    fa 0b             	sp += -12			  ## hci_vendor.c:2131:0
 1e08724:    c6 ff 40 18 00 00 	r6 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:2131:0
 1e0872a:    00 f7 18 62       	r0 = h[r6 + 536] (u)			  ## hci_vendor.c:2138:22
 1e0872e:    21 20             	if (r0 == 0) goto 66 <hci_run_for_acl_data_send+0x52 : 1e08772 >			  ## hci_vendor.c:2138:22
 1e08730:    90 6c             	r0 = b[r6 + 9] (u)			  ## hci_vendor.c:2139:39
 1e08732:    81 6c             	r1 = b[r6 + 8] (u)			  ## hci_vendor.c:2139:39
 1e08734:    00 c2             	r0 = r0 << 8			  ## hci_vendor.c:2139:39
 1e08736:    20 fd 0f 0a       	r0 = r0 & 3840			  ## hci_vendor.c:2139:39
 1e0873a:    e0 fd 10 40       	r4 = r0 | r1			  ## hci_vendor.c:2139:39
 1e0873e:    40 08             	r0 = r4			  ## hci_vendor.c:2127:12
 1e08740:    bf f3 53 f7       	call -4442 <hci_number_free_acl_slots_for_handle : 1e075ea >			  ## hci_vendor.c:2127:12
 1e08744:    10 e0 15 b0       	ifs (r0 < 1) goto 42 <hci_run_for_acl_data_send+0x52 : 1e08772 >			  ## hci_vendor.c:2127:12
 1e08748:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:2141:47
 1e0874a:    50 08             	r0 = r5			  ## hci_vendor.c:2141:47
 1e0874c:    bf f3 c1 f0       	call -7806 <le_hci_connection_for_handle : 1e068d2 >			  ## hci_vendor.c:2141:47
 1e08750:    04 08             	r4 = r0			  ## hci_vendor.c:2141:47
 1e08752:    09 28             	if (r4 == 0) goto 18 <hci_run_for_acl_data_send+0x46 : 1e08766 >			  ## hci_vendor.c:2142:17
 1e08754:    50 08             	r0 = r5			  ## hci_vendor.c:2127:12
 1e08756:    bf f3 48 f7       	call -4464 <hci_number_free_acl_slots_for_handle : 1e075ea >			  ## hci_vendor.c:2127:12
 1e0875a:    00 e0 0a d0       	ifs (r0 <= 0) goto 20 <hci_run_for_acl_data_send+0x52 : 1e08772 >			  ## hci_vendor.c:2127:12
 1e0875e:    40 08             	r0 = r4			  ## hci_vendor.c:2144:21
 1e08760:    bf f3 68 f7       	call -4400 <le_hci_send_acl_packet_fragments : 1e07634 >			  ## hci_vendor.c:2144:21
 1e08764:    1d 18             	goto 58 <hci_run_for_acl_data_send+0x80 : 1e087a0 >			  ## hci_vendor.c:2144:21
 1e08766:    60 fc 15 02       	r0 = r6 + 533			  ## hci_vendor.c:2150:52
 1e0876a:    01 70             	r1 = 0			  ## hci_vendor.c:2150:52
 1e0876c:    52 70             	r2 = 5			  ## hci_vendor.c:2150:52
 1e0876e:    97 f3 bf f3       	call 3139454 <memset : 106ef0 >			  ## hci_vendor.c:2150:52
 1e08772:    04 4c             	r4 = [r6 + 0]
 1e08774:    15 28             	if (r4 == 0) goto 42 <hci_run_for_acl_data_send+0x80 : 1e087a0 >
 1e08776:    05 70             	r5 = 0
 1e08778:    c6 ff ff ff 00 00 	r6 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e0877e:    b0 48             	r0 = [r4 + 44]			  ## hci_vendor.c:2159:25
 1e08780:    30 e0 0c 10       	if (r0 != 3) goto 24 <hci_run_for_acl_data_send+0x7C : 1e0879c >			  ## hci_vendor.c:2159:25
 1e08784:    bd 48             	[r4 + 44] = r5			  ## hci_vendor.c:2160:55
 1e08786:    9d 59             	h[r4 + 50] = r5			  ## hci_vendor.c:2163:46
 1e08788:    b3 59             	r3 = h[r4 + 54] (u)			  ## hci_vendor.c:2179:13
 1e0878a:    a1 59             	r1 = h[r4 + 52] (u)			  ## hci_vendor.c:2179:13
 1e0878c:    20 58             	r0 = h[r4 + 4] (u)			  ## hci_vendor.c:2179:13
 1e0878e:    c2 59             	r2 = h[r4 + 56] (u)			  ## hci_vendor.c:2179:13
 1e08790:    2e 02             	[sp+8] = r6			  ## hci_vendor.c:2179:13
 1e08792:    1d 02             	[sp+4] = r5			  ## hci_vendor.c:2179:13
 1e08794:    0a 02             	[sp] = r2			  ## hci_vendor.c:2179:13
 1e08796:    12 08             	r2 = r1			  ## hci_vendor.c:2179:13
 1e08798:    80 f3 92 67       	call 53028 <ll_hci_connection_update : 1e156c0 >			  ## hci_vendor.c:2179:13
 1e0879c:    04 48             	r4 = [r4 + 0]
 1e0879e:    ef 39             	if (r4 != 0) goto -34 <hci_run_for_acl_data_send+0x5E : 1e0877e >
 1e087a0:    06 0a             	sp += 12
 1e087a2:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_vendor.c:2191:1


btstack_task:
 1e087a4:    70 0b             	sp += -288			  ## btstack_task.c:84:0
 1e087a6:    bf f3 84 f2       	call -6904 <btstack_task_init : 1e06cb2 >			  ## btstack_task.c:88:5
 1e087aa:    00 70             	r0 = 0			  ## btstack_task.c:92:5
 1e087ac:    31 70             	r1 = 3			  ## btstack_task.c:92:5
 1e087ae:    b2 72             	r2 = 43			  ## btstack_task.c:92:5
 1e087b0:    0a 70             	r10 = 0			  ## btstack_task.c:92:5
 1e087b2:    bf f3 45 f1       	call -7542 <update_bt_current_status : 1e06a40 >			  ## btstack_task.c:92:5
 1e087b6:    c0 ff 60 09 00 00 	r0 = 2400 <is_btstack_lowpower_active : 960 >			  ## btstack_task.c:92:5
 1e087bc:    1a f9 00 00       	b[r0 + 0] = r10			  ## btstack_task.c:92:5
 1e087c0:    c0 a1             	r0 = sp + 28			  ## btstack_task.c:92:5
 1e087c2:    cb 90             	r11 = r0 + 12
 1e087c4:    91 ab             	r1 = sp + 185
 1e087c6:    c1 80             	r1 += 12
 1e087c8:    69 02             	[sp+24] = r1
 1e087ca:    e1 fb 16 01       	r1 = sp + 278
 1e087ce:    41 80             	r1 += 4
 1e087d0:    19 02             	[sp+4] = r1
 1e087d2:    6c 90             	r12 = r0 + 6
 1e087d4:    7d 90             	r13 = r0 + 7
 1e087d6:    b1 90             	r1 = r0 + 11
 1e087d8:    09 02             	[sp] = r1
 1e087da:    9e 90             	r14 = r0 + 9
 1e087dc:    4f 90             	r15 = r0 + 4
 1e087de:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e087e4:    1b f5 14 00       	[sp+20] = r11
 1e087e8:    1c f5 10 00       	[sp+16] = r12
 1e087ec:    1d f5 0c 00       	[sp+12] = r13
 1e087f0:    1e f5 08 00       	[sp+8] = r14
 1e087f4:    c1 a1             	r1 = sp + 28
 1e087f6:    00 70             	r0 = 0			  ## btstack_task.c:101:15
 1e087f8:    02 72             	r2 = 32			  ## btstack_task.c:101:15
 1e087fa:    97 f3 e9 f2       	call 3139026 <os_taskq_pend : 106dd0 >			  ## btstack_task.c:101:15
 1e087fe:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btstack_task+0x50 : 1e087f4 >			  ## btstack_task.c:103:13
 1e08802:    70 02             	r0 = [sp+28]			  ## btstack_task.c:107:17
 1e08804:    90 09             	r0 += r9			  ## btstack_task.c:107:9
 1e08806:    50 e0 43 84       	if (r0 > 5) goto 2182 <.GJTIE594_3_3_+0x36C : 1e09090 >			  ## btstack_task.c:107:9
 1e0880a:    41 c0             	r1 = r0 << 1
 1e0880c:    b1 00             	tbh [r1]


.GJTIL594_0_0_:
 1e0880e:    06 00     < 6 : 0x6 >
 1e08810:    6d 00     < 109 : 0x6D >
 1e08812:    41 04     < 1089 : 0x441 >
 1e08814:    86 00     < 134 : 0x86 >
 1e08816:    41 04     < 1089 : 0x441 >
 1e08818:    8d 00     < 141 : 0x8D >
 1e0881a:    c1 f5 20 00       	r1 = b[sp+32] (u)
 1e0881e:    10 fc fd ff       	r0 = r1 + -3			  ## hci_vendor.c:407:5
 1e08822:    07 70             	r7 = 0			  ## hci_vendor.c:407:5
 1e08824:    50 e1 b0 80       	if (r0 > 21) goto 352 <.GJTIE594_1_1_+0x130 : 1e08988 >			  ## hci_vendor.c:407:5
 1e08828:    41 c0             	r1 = r0 << 1
 1e0882a:    b1 00             	tbh [r1]


.GJTIL594_1_1_:
 1e0882c:    16 00     < 22 : 0x16 >
 1e0882e:    0b 01     < 267 : 0x10B >
 1e08830:    26 01     < 294 : 0x126 >
 1e08832:    4d 01     < 333 : 0x14D >
 1e08834:    1e 04     < 1054 : 0x41E >
 1e08836:    7f 01     < 383 : 0x17F >
 1e08838:    1e 04     < 1054 : 0x41E >
 1e0883a:    1e 04     < 1054 : 0x41E >
 1e0883c:    1e 04     < 1054 : 0x41E >
 1e0883e:    1e 04     < 1054 : 0x41E >
 1e08840:    1e 04     < 1054 : 0x41E >
 1e08842:    89 02     < 649 : 0x289 >
 1e08844:    1e 04     < 1054 : 0x41E >
 1e08846:    1e 04     < 1054 : 0x41E >
 1e08848:    1e 04     < 1054 : 0x41E >
 1e0884a:    1e 04     < 1054 : 0x41E >
 1e0884c:    86 01     < 390 : 0x186 >
 1e0884e:    ac 01     < 428 : 0x1AC >
 1e08850:    1e 04     < 1054 : 0x41E >
 1e08852:    be 01     < 446 : 0x1BE >
 1e08854:    ec 01     < 492 : 0x1EC >
 1e08856:    2c 02     < 556 : 0x22C >
 1e08858:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:625:14
 1e0885c:    50 e0 f8 02       	if (r0 == 5) goto 1520 <.GJTIE594_3_3_+0x12C : 1e08e50 >			  ## hci_vendor.c:625:13
 1e08860:    00 e0 02 14       	if (r0 != 0) goto 2052 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e08864:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:626:17
 1e08868:    10 e0 fe 13       	if (r0 != 1) goto 2044 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:626:17
 1e0886c:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >
 1e08872:    04 08             	r4 = r0
 1e08874:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e08876:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e08878:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e0887a:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e0887c:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08880:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e08882:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08886:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e0888a:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e0888c:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e08890:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e08892:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e08896:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e0889a:    24 fd 01 09       	r4 = r0 & 1			  ## hci_vendor.c:160:47
 1e0889e:    41 ae             	r1 = sp + 228			  ## hci_vendor.c:160:47
 1e088a0:    e0 08             	r0 = r14			  ## remote_device_db.c:348:9
 1e088a2:    42 08             	r2 = r4			  ## remote_device_db.c:348:9
 1e088a4:    bf f3 44 f3       	call -6520 <get_link_key : 1e06f30 >			  ## remote_device_db.c:348:9
 1e088a8:    05 20             	if (r0 == 0) goto 10 <.GJTIE594_1_1_+0x5C : 1e088b4 >			  ## remote_device_db.c:348:9
 1e088aa:    41 ae             	r1 = sp + 228
 1e088ac:    e0 08             	r0 = r14			  ## remote_device_db.c:349:9
 1e088ae:    42 08             	r2 = r4			  ## remote_device_db.c:349:9
 1e088b0:    bf f3 bb f4       	call -5770 <put_link_key : 1e0722a >			  ## remote_device_db.c:349:9
 1e088b4:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >
 1e088ba:    03 08             	r3 = r0
 1e088bc:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:628:42
 1e088be:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:628:42
 1e088c0:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:628:42
 1e088c2:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:628:42
 1e088c4:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:628:42
 1e088c8:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:628:42
 1e088cc:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:628:42
 1e088d0:    34 f3 ca 33       	if ((r3 & 1048576) != 0) goto 1940 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:628:42
 1e088d4:    f1 7f             	r1 = 255			  ## hci_vendor.c:631:32
 1e088d6:    e0 08             	r0 = r14			  ## hci_vendor.c:631:32
 1e088d8:    bf f3 da f4       	call -5708 <handle_remote_dev_type : 1e07290 >			  ## hci_vendor.c:631:32
 1e088dc:    02 08             	r2 = r0			  ## hci_vendor.c:631:32
 1e088de:    11 70             	r1 = 1			  ## hci_vendor.c:632:21
 1e088e0:    e0 08             	r0 = r14			  ## hci_vendor.c:632:21
 1e088e2:    bf f3 64 f5       	call -5432 <remote_dev_company_ioctrl : 1e073ae >			  ## hci_vendor.c:632:21
 1e088e6:    c0 1b             	goto 1920 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:632:21
 1e088e8:    84 02             	r4 = [sp+32]			  ## btstack_task.c:112:35
 1e088ea:    16 68             	r6 = b[r4 + 1] (u)			  ## hci_vendor.c:1160:22
 1e088ec:    00 68             	r0 = b[r4 + 0] (u)			  ## hci_vendor.c:1160:22
 1e088ee:    31 c2             	r1 = r6 << 8			  ## hci_vendor.c:1160:22
 1e088f0:    21 fd 0f 1a       	r1 = r1 & 3840			  ## hci_vendor.c:1160:22
 1e088f4:    50 b2             	r0 |= r1			  ## hci_vendor.c:1160:22
 1e088f6:    00 e5 28 20       	if (r0 >= 80) goto 80 <.GJTIE594_1_1_+0xF2 : 1e0894a >			  ## hci_vendor.c:1160:22
 1e088fa:    08 f5 24 00       	r8 = [sp+36]			  ## btstack_task.c:112:43
 1e088fe:    37 68             	r7 = b[r4 + 3] (u)			  ## hci_vendor.c:1020:22
 1e08900:    25 68             	r5 = b[r4 + 2] (u)			  ## hci_vendor.c:1020:22
 1e08902:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:118:48
 1e08904:    80 f3 b2 69       	call 54116 <lmp_private_remote_addr_for_handler : 1e15c6c >			  ## hci_vendor.c:118:12
 1e08908:    00 e0 c2 03       	if (r0 == 0) goto 1924 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e0890c:    82 fd 20 06       	r0 = uextra(r6, p:4, l:2)			  ## hci_vendor.c:1028:5
 1e08910:    20 e0 76 00       	if (r0 == 2) goto 236 <.GJTIE594_2_2_+0x50 : 1e08a00 >			  ## hci_vendor.c:1028:5
 1e08914:    10 e0 7a 00       	if (r0 == 1) goto 244 <.GJTIE594_2_2_+0x5C : 1e08a0c >
 1e08918:    bb 1b             	goto 1910 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e0891a:    80 02             	r0 = [sp+32]			  ## btstack_task.c:115:35
 1e0891c:    97 f3 76 f2       	call 3138796 <os_sem_post : 106e0c >			  ## btstack_task.c:115:13
 1e08920:    40 71             	r0 = 20			  ## btstack_task.c:116:13
 1e08922:    97 f3 49 f2       	call 3138706 <os_time_dly : 106db8 >			  ## btstack_task.c:116:13
 1e08926:    b4 1b             	goto 1896 <.GJTIE594_3_3_+0x36C : 1e09090 >			  ## btstack_task.c:116:13
 1e08928:    c0 ff 78 1a 00 00 	r0 = 6776 <l2cap_stack : 1a78 >			  ## l2cap.c:403:33
 1e0892e:    00 40             	r0 = [r0 + 0]			  ## l2cap.c:403:33
 1e08930:    24 40             	r4 = [r0 + 8]			  ## l2cap.c:403:33
 1e08932:    04 e0 ad 03       	if (r4 == 0) goto 1882 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e08936:    20 69             	r0 = b[r4 + 18] (u)			  ## l2cap.c:407:44
 1e08938:    80 e0 04 10       	if (r0 != 8) goto 8 <.GJTIE594_1_1_+0xEC : 1e08944 >			  ## l2cap.c:407:44
 1e0893c:    01 70             	r1 = 0			  ## l2cap.c:410:13
 1e0893e:    40 08             	r0 = r4			  ## l2cap.c:410:13
 1e08940:    bf f3 6b f7       	call -4394 <l2cap_emit_credits : 1e0781a >			  ## l2cap.c:410:13
 1e08944:    04 48             	r4 = [r4 + 0]
 1e08946:    f7 39             	if (r4 != 0) goto -18 <.GJTIE594_1_1_+0xDE : 1e08936 >
 1e08948:    a3 1b             	goto 1862 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e0894a:    20 04             	r0 = r0.l (u)			  ## hci_vendor.c:1061:33
 1e0894c:    bf f3 c1 ef       	call -8318 <le_hci_connection_for_handle : 1e068d2 >			  ## hci_vendor.c:1061:33
 1e08950:    31 68             	r1 = b[r4 + 3] (u)			  ## hci_vendor.c:1063:22
 1e08952:    26 68             	r6 = b[r4 + 2] (u)			  ## hci_vendor.c:1063:22
 1e08954:    08 08             	r8 = r0			  ## hci_vendor.c:1061:33
 1e08956:    14 20             	if (r0 == 0) goto 40 <.GJTIE594_1_1_+0x128 : 1e08980 >
 1e08958:    10 68             	r0 = b[r4 + 1] (u)			  ## hci_vendor.c:1062:21
 1e0895a:    d8 fd 40 61       	r6 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:1063:22
 1e0895e:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## hci_vendor.c:1070:5
 1e08962:    85 fc ce 04       	r5 = r8 + 1230			  ## hci_vendor.c:1070:5
 1e08966:    20 e0 55 00       	if (r0 == 2) goto 170 <.GJTIE594_2_2_+0x64 : 1e08a14 >			  ## hci_vendor.c:1070:5
 1e0896a:    10 e0 09 10       	if (r0 != 1) goto 18 <.GJTIE594_1_1_+0x128 : 1e08980 >
 1e0896e:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1074:13
 1e08970:    07 20             	if (r0 == 0) goto 14 <.GJTIE594_1_1_+0x128 : 1e08980 >			  ## hci_vendor.c:1074:13
 1e08972:    a2 05             	r2 = r6.l (u)			  ## hci_vendor.c:1078:43
 1e08974:    81 b0             	r1 = r0 + r2			  ## hci_vendor.c:1078:41
 1e08976:    03 ff 12 12 08 02 	if (r1 < 530) goto 1040 <.GJTIE594_3_3_+0x68 : 1e08d8c >			  ## hci_vendor.c:1078:13
 1e0897c:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1079:41
 1e08980:    40 08             	r0 = r4
 1e08982:    80 f3 b5 66       	call 52586 <ll_hci_private_free_dma_rx : 1e156f0 >
 1e08986:    84 1b             	goto 1800 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e08988:    10 fc cf ff       	r0 = r1 + -49
 1e0898c:    d0 e0 6c 83       	if (r0 > 13) goto 1752 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e08990:    41 c0             	r1 = r0 << 1
 1e08992:    b1 00             	tbh [r1]


.GJTIL594_2_2_:
 1e08994:    0e 00     < 14 : 0xE >
 1e08996:    6a 03     < 874 : 0x36A >
 1e08998:    96 01     < 406 : 0x196 >
 1e0899a:    9d 01     < 413 : 0x19D >
 1e0899c:    6a 03     < 874 : 0x36A >
 1e0899e:    a0 01     < 416 : 0x1A0 >
 1e089a0:    6a 03     < 874 : 0x36A >
 1e089a2:    6a 03     < 874 : 0x36A >
 1e089a4:    6a 03     < 874 : 0x36A >
 1e089a6:    6a 03     < 874 : 0x36A >
 1e089a8:    ad 01     < 429 : 0x1AD >
 1e089aa:    6a 03     < 874 : 0x36A >
 1e089ac:    6a 03     < 874 : 0x36A >
 1e089ae:    b7 01     < 439 : 0x1B7 >
 1e089b0:    00 70             	r0 = 0			  ## hci_vendor.c:480:9
 1e089b2:    12 73             	r2 = 49			  ## hci_vendor.c:480:9
 1e089b4:    03 70             	r3 = 0			  ## hci_vendor.c:480:9
 1e089b6:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:480:9
 1e089bc:    bf f3 27 f0       	call -8114 <bt_event_update_to_user : 1e06a0e >			  ## hci_vendor.c:480:9
 1e089c0:    03 18             	goto 6 <.GJTIE594_2_2_+0x18 : 1e089c8 >			  ## hci_vendor.c:480:9
 1e089c2:    30 70             	r0 = 3			  ## hci_vendor.c:483:13
 1e089c4:    97 f3 f8 f1       	call 3138544 <os_time_dly : 106db8 >			  ## hci_vendor.c:483:13
 1e089c8:    bf f3 4b f2       	call -7018 <get_is_in_background_flag : 1e06e62 >
 1e089cc:    fa 31             	if (r0 != 0) goto -12 <.GJTIE594_2_2_+0x12 : 1e089c2 >
 1e089ce:    a0 70             	r0 = 10			  ## hci_vendor.c:486:9
 1e089d0:    97 f3 f2 f1       	call 3138532 <os_time_dly : 106db8 >			  ## hci_vendor.c:486:9
 1e089d4:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >			  ## hci_vendor.c:486:9
 1e089da:    03 08             	r3 = r0			  ## hci_vendor.c:486:9
 1e089dc:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:490:71
 1e089de:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:490:71
 1e089e0:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:490:71
 1e089e2:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:490:71
 1e089e4:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:490:71
 1e089e8:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:490:71
 1e089ec:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:490:71
 1e089f0:    82 fd c0 03       	r0 = uextra(r3, p:24, l:2)			  ## hci_vendor.c:490:9
 1e089f4:    82 fd d0 13       	r1 = uextra(r3, p:26, l:2)			  ## hci_vendor.c:490:9
 1e089f8:    1a d7             	r2 = r3 >> 28			  ## hci_vendor.c:491:110
 1e089fa:    80 f3 ca 69       	call 54164 <lmp_hci_io_capability_request_reply : 1e15d92 >			  ## hci_vendor.c:490:9
 1e089fe:    34 1b             	goto 1640 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:490:9
 1e08a00:    e6 fd 00 08       	r0 = r8.l (u)
 1e08a04:    c8 fd 40 57       	r5 <= insert(r7, p:8, l:8)			  ## hci_vendor.c:1020:22
 1e08a08:    50 e0 a0 81       	if (r0 > 5) goto 832 <.GJTIE594_3_3_+0x28 : 1e08d4c >			  ## hci_vendor.c:1020:22
 1e08a0c:    40 08             	r0 = r4
 1e08a0e:    bf f3 03 e1       	call -15866 <lmp_hci_private_free_acl_packet : 1e04c18 >
 1e08a12:    33 1b             	goto 1638 <.GJTIE594_3_3_+0x356 : 1e0907a >
 1e08a14:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1111:19
 1e08a16:    02 20             	if (r0 == 0) goto 4 <.GJTIE594_2_2_+0x6C : 1e08a1c >			  ## hci_vendor.c:1111:19
 1e08a18:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1112:41
 1e08a1c:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:1116:33
 1e08a1e:    47 68             	r7 = b[r4 + 4] (u)			  ## hci_vendor.c:1116:33
 1e08a20:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:1116:33
 1e08a24:    e0 05             	r0 = r7.l (u)			  ## hci_vendor.c:1120:27
 1e08a26:    49 90             	r9 = r0 + 4			  ## hci_vendor.c:1120:40
 1e08a28:    a0 05             	r0 = r6.l (u)			  ## hci_vendor.c:1120:13
 1e08a2a:    90 f2 a8 21       	if (r0 >= r9) goto 848 <.GJTIE594_3_3_+0x5A : 1e08d7e >			  ## hci_vendor.c:1120:13
 1e08a2e:    03 ff 0e 02 f1 01 	if (r0 < 526) goto 994 <.GJTIE594_3_3_+0xF2 : 1e08e16 >			  ## hci_vendor.c:1135:17
 1e08a34:    40 08             	r0 = r4			  ## hci_vendor.c:1136:17
 1e08a36:    80 f3 5b 66       	call 52406 <ll_hci_private_free_dma_rx : 1e156f0 >			  ## hci_vendor.c:1136:17
 1e08a3a:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >			  ## hci_vendor.c:1136:17
 1e08a40:    27 1b             	goto 1614 <.GJTIE594_3_3_+0x36C : 1e09090 >			  ## hci_vendor.c:1136:17
 1e08a42:    c0 f5 2b 00       	r0 = b[sp+43] (u)			  ## hci_vendor.c:572:14
 1e08a46:    14 20             	if (r0 == 0) goto 40 <.GJTIE594_2_2_+0xC0 : 1e08a70 >			  ## hci_vendor.c:572:14
 1e08a48:    20 e0 27 02       	if (r0 == 2) goto 1102 <.GJTIE594_3_3_+0x176 : 1e08e9a >
 1e08a4c:    10 e0 28 12       	if (r0 != 1) goto 1104 <.GJTIE594_3_3_+0x17C : 1e08ea0 >
 1e08a50:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >
 1e08a56:    03 08             	r3 = r0
 1e08a58:    40 67             	r0 = b[r3 + 20] (u)			  ## hci_vendor.c:579:37
 1e08a5a:    31 67             	r1 = b[r3 + 19] (u)			  ## hci_vendor.c:579:37
 1e08a5c:    22 67             	r2 = b[r3 + 18] (u)			  ## hci_vendor.c:579:37
 1e08a5e:    13 67             	r3 = b[r3 + 17] (u)			  ## hci_vendor.c:579:37
 1e08a60:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:579:37
 1e08a64:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:579:37
 1e08a68:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:579:37
 1e08a6c:    34 f3 ab 32       	if ((r3 & 1048576) != 0) goto 1366 <.GJTIE594_3_3_+0x2A2 : 1e08fc6 >			  ## hci_vendor.c:579:37
 1e08a70:    10 70             	r0 = 1
 1e08a72:    80 f3 ad 69       	call 54106 <lmp_hci_accept_connection_request : 1e15dd0 >
 1e08a76:    f8 1a             	goto 1520 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e08a78:    c1 f5 24 00       	r1 = b[sp+36] (u)			  ## hci_vendor.c:790:18
 1e08a7c:    c7 f5 23 00       	r7 = b[sp+35] (u)			  ## hci_vendor.c:790:18
 1e08a80:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:790:18
 1e08a84:    d8 fd 40 71       	r7 <= insert(r1, p:8, l:24)			  ## hci_vendor.c:790:18
 1e08a88:    e4 05             	r4 = r7.l (u)			  ## hci_vendor.c:790:18
 1e08a8a:    f4 e4 97 81       	if (r4 > 79) goto 814 <.GJTIE594_3_3_+0x98 : 1e08dbc >			  ## hci_vendor.c:794:13
 1e08a8e:    c1 f5 26 00       	r1 = b[sp+38] (u)			  ## hci_vendor.c:788:21
 1e08a92:    c2 f5 25 00       	r2 = b[sp+37] (u)			  ## hci_vendor.c:787:21
 1e08a96:    00 e0 e7 12       	if (r0 != 0) goto 1486 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:787:21
 1e08a9a:    d0 76             	r0 = 109			  ## hci_vendor.c:215:14
 1e08a9c:    d0 f5 16 01       	b[sp+278] = r0			  ## hci_vendor.c:215:14
 1e08aa0:    80 70             	r0 = 8			  ## hci_vendor.c:216:14
 1e08aa2:    d0 f5 17 01       	b[sp+279] = r0			  ## hci_vendor.c:216:14
 1e08aa6:    d2 f5 18 01       	b[sp+280] = r2			  ## hci_vendor.c:217:14
 1e08aaa:    d1 f5 19 01       	b[sp+281] = r1			  ## hci_vendor.c:218:14
 1e08aae:    62 70             	r2 = 6			  ## utils.c:188:5
 1e08ab0:    10 02             	r0 = [sp+4]			  ## utils.c:188:5
 1e08ab2:    01 02             	r1 = [sp]			  ## utils.c:188:5
 1e08ab4:    97 f3 16 f2       	call 3138604 <memcpy : 106ee4 >			  ## utils.c:188:5
 1e08ab8:    e1 fb 16 01       	r1 = sp + 278			  ## utils.c:188:5
 1e08abc:    40 70             	r0 = 4			  ## hci_vendor.c:220:5
 1e08abe:    a2 70             	r2 = 10			  ## hci_vendor.c:220:5
 1e08ac0:    bf f3 62 fa       	call -2876 <l2cap_packet_handler : 1e07f88 >			  ## hci_vendor.c:220:5
 1e08ac4:    d1 1a             	goto 1442 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:220:5
 1e08ac6:    c0 f5 24 00       	r0 = b[sp+36] (u)
 1e08aca:    c4 f5 23 00       	r4 = b[sp+35] (u)
 1e08ace:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:451:13
 1e08ad2:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:451:13
 1e08ad6:    01 e0 b5 01       	if (r1 == 0) goto 874 <.GJTIE594_3_3_+0x120 : 1e08e44 >			  ## hci_vendor.c:451:13
 1e08ada:    25 05             	r5 = r4.l (u)			  ## hci_vendor.c:455:56
 1e08adc:    50 08             	r0 = r5			  ## hci_vendor.c:455:20
 1e08ade:    80 f3 c5 68       	call 53642 <lmp_private_remote_addr_for_handler : 1e15c6c >			  ## hci_vendor.c:455:20
 1e08ae2:    c1 ff 70 09 00 00 	r1 = 2416 <stack_configs_app : 970 >			  ## hci_vendor.c:455:20
 1e08ae8:    17 08             	r7 = r1			  ## hci_vendor.c:455:20
 1e08aea:    41 6f             	r1 = b[r7 + 20] (u)			  ## hci_vendor.c:160:32
 1e08aec:    32 6f             	r2 = b[r7 + 19] (u)			  ## hci_vendor.c:160:32
 1e08aee:    23 6f             	r3 = b[r7 + 18] (u)			  ## hci_vendor.c:160:32
 1e08af0:    16 6f             	r6 = b[r7 + 17] (u)			  ## hci_vendor.c:160:32
 1e08af2:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08af6:    51 6f             	r1 = b[r7 + 21] (u)			  ## hci_vendor.c:160:32
 1e08af8:    c8 fd 40 63       	r6 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08afc:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e08b00:    b2 d1             	r2 = r6 >> 6			  ## hci_vendor.c:160:69
 1e08b02:    c6 fd d0 21       	r2 <= insert(r1, p:26, l:6)			  ## hci_vendor.c:160:69
 1e08b06:    33 d5             	r3 = r6 >> 20			  ## hci_vendor.c:160:32
 1e08b08:    c8 fd 60 31       	r3 <= insert(r1, p:12, l:8)			  ## hci_vendor.c:160:32
 1e08b0c:    e0 fd 20 13       	r1 = r3 | r2			  ## hci_vendor.c:160:47
 1e08b10:    21 fd 01 19       	r1 = r1 & 1			  ## hci_vendor.c:458:17
 1e08b14:    bf f3 62 f1       	call -7484 <delete_link_key : 1e06ddc >			  ## hci_vendor.c:458:17
 1e08b18:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:461:17
 1e08b1c:    60 e0 a0 02       	if (r0 == 6) goto 1344 <.GJTIE594_3_3_+0x33C : 1e09060 >			  ## hci_vendor.c:461:17
 1e08b20:    51 70             	r1 = 5			  ## hci_vendor.c:464:17
 1e08b22:    50 08             	r0 = r5			  ## hci_vendor.c:464:17
 1e08b24:    80 f3 f9 68       	call 53746 <lmp_hci_disconnect : 1e15d1a >			  ## hci_vendor.c:464:17
 1e08b28:    9b 1a             	goto 1334 <.GJTIE594_3_3_+0x33C : 1e09060 >			  ## hci_vendor.c:464:17
 1e08b2a:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:470:18
 1e08b2e:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:470:18
 1e08b32:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:470:18
 1e08b36:    94 1a             	goto 1320 <.GJTIE594_3_3_+0x33C : 1e09060 >			  ## hci_vendor.c:470:18
 1e08b38:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:539:29
 1e08b3c:    00 e0 94 02       	if (r0 == 0) goto 1320 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:539:29
 1e08b40:    35 70             	r5 = 3
 1e08b42:    06 70             	r6 = 0
 1e08b44:    f0 08             	r0 = r15			  ## hci_vendor.c:540:26
 1e08b46:    51 08             	r1 = r5			  ## hci_vendor.c:540:26
 1e08b48:    bf f3 16 ec       	call -10196 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:540:26
 1e08b4c:    04 08             	r4 = r0			  ## hci_vendor.c:540:26
 1e08b4e:    04 e5 13 30       	if (r4 < 80) goto 38 <.GJTIE594_2_2_+0x1C8 : 1e08b78 >			  ## hci_vendor.c:540:26
 1e08b52:    21 9a             	r1 = r5 + 2			  ## hci_vendor.c:546:24
 1e08b54:    f0 08             	r0 = r15			  ## hci_vendor.c:547:40
 1e08b56:    bf f3 0f ec       	call -10210 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:547:40
 1e08b5a:    07 08             	r7 = r0			  ## hci_vendor.c:547:40
 1e08b5c:    45 80             	r5 += 4			  ## hci_vendor.c:548:24
 1e08b5e:    40 08             	r0 = r4			  ## hci_vendor.c:550:45
 1e08b60:    bf f3 b7 ee       	call -8850 <le_hci_connection_for_handle : 1e068d2 >			  ## hci_vendor.c:550:45
 1e08b64:    09 20             	if (r0 == 0) goto 18 <.GJTIE594_2_2_+0x1C8 : 1e08b78 >
 1e08b66:    03 f9 d2 04       	r3 = b[r0 + 1234] (u)			  ## hci_vendor.c:555:21
 1e08b6a:    e2 b7             	r2 = r3 - r7			  ## hci_vendor.c:557:48
 1e08b6c:    01 70             	r1 = 0			  ## hci_vendor.c:555:21
 1e08b6e:    73 f2 01 30       	if (r3 < r7) goto 2 <.GJTIE594_2_2_+0x1C4 : 1e08b74 >			  ## hci_vendor.c:555:21
 1e08b72:    21 08             	r1 = r2			  ## hci_vendor.c:555:21
 1e08b74:    11 f9 d2 04       	b[r0 + 1234] = r1			  ## hci_vendor.c:557:48
 1e08b78:    c0 f5 22 00       	r0 = b[sp+34] (u)			  ## hci_vendor.c:539:29
 1e08b7c:    16 80             	r6 += 1			  ## hci_vendor.c:539:41
 1e08b7e:    06 f2 e1 bf       	ifs (r6 < r0) goto -62 <.GJTIE594_2_2_+0x194 : 1e08b44 >
 1e08b82:    6e 1a             	goto 1244 <.GJTIE594_3_3_+0x33C : 1e09060 >
 1e08b84:    c0 f5 24 00       	r0 = b[sp+36] (u)			  ## hci_vendor.c:431:18
 1e08b88:    c4 f5 23 00       	r4 = b[sp+35] (u)			  ## hci_vendor.c:431:18
 1e08b8c:    d8 fd 40 40       	r4 <= insert(r0, p:8, l:24)			  ## hci_vendor.c:431:18
 1e08b90:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:432:52
 1e08b92:    80 f3 6b 68       	call 53462 <lmp_private_remote_addr_for_handler : 1e15c6c >			  ## hci_vendor.c:432:16
 1e08b96:    c1 f5 25 00       	r1 = b[sp+37] (u)			  ## hci_vendor.c:433:13
 1e08b9a:    01 e0 76 01       	if (r1 == 0) goto 748 <.GJTIE594_3_3_+0x166 : 1e08e8a >			  ## hci_vendor.c:433:13
 1e08b9e:    21 e0 5f 12       	if (r1 != 2) goto 1214 <.GJTIE594_3_3_+0x33C : 1e09060 >
 1e08ba2:    02 72             	r2 = 32			  ## hci_vendor.c:437:13
 1e08ba4:    23 70             	r3 = 2			  ## hci_vendor.c:437:13
 1e08ba6:    73 19             	goto 742 <.GJTIE594_3_3_+0x16A : 1e08e8e >			  ## hci_vendor.c:437:13
 1e08ba8:    00 70             	r0 = 0			  ## hci_vendor.c:728:9
 1e08baa:    62 71             	r2 = 22			  ## hci_vendor.c:728:9
 1e08bac:    03 70             	r3 = 0			  ## hci_vendor.c:728:9
 1e08bae:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## hci_vendor.c:728:9
 1e08bb4:    bf f3 2b ef       	call -8618 <bt_event_update_to_user : 1e06a0e >			  ## hci_vendor.c:728:9
 1e08bb8:    03 18             	goto 6 <.GJTIE594_2_2_+0x210 : 1e08bc0 >			  ## hci_vendor.c:728:9
 1e08bba:    30 70             	r0 = 3			  ## hci_vendor.c:731:13
 1e08bbc:    97 f3 fc f0       	call 3138040 <os_time_dly : 106db8 >			  ## hci_vendor.c:731:13
 1e08bc0:    bf f3 4f f1       	call -7522 <get_is_in_background_flag : 1e06e62 >
 1e08bc4:    fa 31             	if (r0 != 0) goto -12 <.GJTIE594_2_2_+0x20A : 1e08bba >
 1e08bc6:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >
 1e08bcc:    04 08             	r4 = r0
 1e08bce:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e08bd0:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e08bd2:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e08bd4:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e08bd6:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08bda:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e08bdc:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08be0:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e08be4:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e08be6:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e08bea:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e08bec:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e08bf0:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e08bf4:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:736:9
 1e08bf8:    c0 08             	r0 = r12			  ## hci_vendor.c:736:9
 1e08bfa:    bf f3 ef f0       	call -7714 <delete_link_key : 1e06ddc >			  ## hci_vendor.c:736:9
 1e08bfe:    80 f3 f1 68       	call 53730 <lmp_hci_pin_code_request_reply : 1e15de4 >			  ## hci_vendor.c:745:13
 1e08c02:    32 1a             	goto 1124 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:745:13
 1e08c04:    c5 ff 70 09 00 00 	r5 = 2416 <stack_configs_app : 970 >
 1e08c0a:    40 6b             	r0 = b[r5 + 20] (u)			  ## hci_vendor.c:160:32
 1e08c0c:    31 6b             	r1 = b[r5 + 19] (u)			  ## hci_vendor.c:160:32
 1e08c0e:    22 6b             	r2 = b[r5 + 18] (u)			  ## hci_vendor.c:160:32
 1e08c10:    13 6b             	r3 = b[r5 + 17] (u)			  ## hci_vendor.c:160:32
 1e08c12:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08c16:    50 6b             	r0 = b[r5 + 21] (u)			  ## hci_vendor.c:160:32
 1e08c18:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08c1c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e08c20:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e08c22:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e08c26:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e08c28:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e08c2c:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e08c30:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:701:32
 1e08c34:    c1 a9             	r1 = sp + 156			  ## hci_vendor.c:701:32
 1e08c36:    c0 08             	r0 = r12			  ## hci_vendor.c:701:32
 1e08c38:    bf f3 7a f1       	call -7436 <get_link_key : 1e06f30 >			  ## hci_vendor.c:701:32
 1e08c3c:    41 6b             	r1 = b[r5 + 20] (u)			  ## hci_vendor.c:160:32
 1e08c3e:    32 6b             	r2 = b[r5 + 19] (u)			  ## hci_vendor.c:160:32
 1e08c40:    23 6b             	r3 = b[r5 + 18] (u)			  ## hci_vendor.c:160:32
 1e08c42:    14 6b             	r4 = b[r5 + 17] (u)			  ## hci_vendor.c:160:32
 1e08c44:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08c48:    51 6b             	r1 = b[r5 + 21] (u)			  ## hci_vendor.c:160:32
 1e08c4a:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08c4e:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:160:32
 1e08c52:    a2 d1             	r2 = r4 >> 6			  ## hci_vendor.c:160:69
 1e08c54:    c6 fd d0 21       	r2 <= insert(r1, p:26, l:6)			  ## hci_vendor.c:160:69
 1e08c58:    23 d5             	r3 = r4 >> 20			  ## hci_vendor.c:160:32
 1e08c5a:    c8 fd 60 31       	r3 <= insert(r1, p:12, l:8)			  ## hci_vendor.c:160:32
 1e08c5e:    e0 fd 20 13       	r1 = r3 | r2			  ## hci_vendor.c:160:47
 1e08c62:    22 fd 01 19       	r2 = r1 & 1			  ## remote_device_db.c:221:10
 1e08c66:    04 08             	r4 = r0			  ## hci_vendor.c:701:32
 1e08c68:    40 af             	r0 = sp + 244
 1e08c6a:    c1 08             	r1 = r12			  ## remote_device_db.c:221:10
 1e08c6c:    bf f3 34 f1       	call -7576 <get_database : 1e06ed8 >			  ## remote_device_db.c:221:10
 1e08c70:    31 70             	r1 = 3			  ## hci_vendor.c:703:62
 1e08c72:    02 20             	if (r0 == 0) goto 4 <.GJTIE594_2_2_+0x2C8 : 1e08c78 >			  ## hci_vendor.c:703:62
 1e08c74:    c1 f5 fc 00       	r1 = b[sp+252] (u)			  ## hci_vendor.c:703:62
 1e08c78:    50 08             	r0 = r5			  ## hci_vendor.c:703:60
 1e08c7a:    69 50             	h[r0 + 12] = r1			  ## hci_vendor.c:703:60
 1e08c7c:    e6 28             	if (r4 == 0) goto 460 <.GJTIE594_3_3_+0x126 : 1e08e4a >			  ## hci_vendor.c:707:17
 1e08c7e:    80 f3 ad 68       	call 53594 <lmp_hci_link_key_request_reply : 1e15ddc >			  ## hci_vendor.c:710:17
 1e08c82:    06 1a             	goto 1036 <.GJTIE594_3_3_+0x36C : 1e09090 >			  ## hci_vendor.c:710:17
 1e08c84:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >
 1e08c8a:    04 08             	r4 = r0
 1e08c8c:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e08c8e:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e08c90:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e08c92:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e08c94:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08c98:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e08c9a:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08c9e:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e08ca2:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e08ca4:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e08ca8:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e08caa:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e08cae:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e08cb2:    22 fd 01 09       	r2 = r0 & 1			  ## hci_vendor.c:721:9
 1e08cb6:    c0 08             	r0 = r12			  ## hci_vendor.c:721:9
 1e08cb8:    b1 08             	r1 = r11			  ## hci_vendor.c:721:9
 1e08cba:    bf f3 b6 f2       	call -6804 <put_link_key : 1e0722a >			  ## hci_vendor.c:721:9
 1e08cbe:    d4 19             	goto 936 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:721:9
 1e08cc0:    81 70             	r1 = 8			  ## hci_vendor.c:497:18
 1e08cc2:    f0 08             	r0 = r15			  ## hci_vendor.c:497:18
 1e08cc4:    bf f3 92 ef       	call -8412 <little_endian_read_32 : 1e06bec >			  ## hci_vendor.c:497:18
 1e08cc8:    03 08             	r3 = r0			  ## hci_vendor.c:497:18
 1e08cca:    32 73             	r2 = 51			  ## hci_vendor.c:499:9
 1e08ccc:    13 18             	goto 38 <.GJTIE594_2_2_+0x344 : 1e08cf4 >			  ## hci_vendor.c:499:9
 1e08cce:    42 73             	r2 = 52			  ## hci_vendor.c:505:9
 1e08cd0:    03 70             	r3 = 0			  ## hci_vendor.c:505:9
 1e08cd2:    10 18             	goto 32 <.GJTIE594_2_2_+0x344 : 1e08cf4 >			  ## hci_vendor.c:505:9
 1e08cd4:    11 70             	r1 = 1			  ## hci_vendor.c:123:12
 1e08cd6:    d0 08             	r0 = r13			  ## hci_vendor.c:123:12
 1e08cd8:    80 f3 5d 68       	call 53434 <lmp_private_handler_for_remote_addr : 1e15d96 >			  ## hci_vendor.c:123:12
 1e08cdc:    c1 f5 22 00       	r1 = b[sp+34] (u)			  ## hci_vendor.c:518:13
 1e08ce0:    04 08             	r4 = r0			  ## hci_vendor.c:123:12
 1e08ce2:    01 e0 bd 01       	if (r1 == 0) goto 890 <.GJTIE594_3_3_+0x33C : 1e09060 >			  ## hci_vendor.c:123:12
 1e08ce6:    51 70             	r1 = 5			  ## hci_vendor.c:519:13
 1e08ce8:    80 f3 17 68       	call 53294 <lmp_hci_disconnect : 1e15d1a >			  ## hci_vendor.c:519:13
 1e08cec:    b9 19             	goto 882 <.GJTIE594_3_3_+0x33C : 1e09060 >			  ## hci_vendor.c:519:13
 1e08cee:    c3 f5 23 00       	r3 = b[sp+35] (u)			  ## hci_vendor.c:511:80
 1e08cf2:    b2 73             	r2 = 59			  ## hci_vendor.c:511:9
 1e08cf4:    c0 08             	r0 = r12
 1e08cf6:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e08cfc:    bf f3 87 ee       	call -8946 <bt_event_update_to_user : 1e06a0e >
 1e08d00:    b3 19             	goto 870 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e08d02:    c0 f5 22 00       	r0 = b[sp+34] (u)
 1e08d06:    f0 8f             	r0 += -1			  ## hci_vendor.c:847:13
 1e08d08:    90 e0 19 80       	if (r0 > 9) goto 50 <.GJTIE594_3_3_+0x1A : 1e08d3e >			  ## hci_vendor.c:847:13
 1e08d0c:    41 c0             	r1 = r0 << 1
 1e08d0e:    b1 00             	tbh [r1]


.GJTIL594_3_3_:
 1e08d10:    0a 00     < 10 : 0xA >
 1e08d12:    cb 00     < 203 : 0xCB >
 1e08d14:    32 01     < 306 : 0x132 >
 1e08d16:    17 00     < 23 : 0x17 >
 1e08d18:    17 00     < 23 : 0x17 >
 1e08d1a:    17 00     < 23 : 0x17 >
 1e08d1c:    17 00     < 23 : 0x17 >
 1e08d1e:    17 00     < 23 : 0x17 >
 1e08d20:    17 00     < 23 : 0x17 >
 1e08d22:    47 01     < 327 : 0x147 >
 1e08d24:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:901:29
 1e08d28:    b0 08             	r0 = r11			  ## hci_vendor.c:903:24
 1e08d2a:    41 08             	r1 = r4			  ## hci_vendor.c:903:24
 1e08d2c:    ab 14             	call -1706 <le_hci_connection_for_bd_addr_and_type : 1e08684 >			  ## hci_vendor.c:903:24
 1e08d2e:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## hci_vendor.c:910:21
 1e08d32:    05 08             	r5 = r0			  ## hci_vendor.c:903:24
 1e08d34:    01 e0 4b 01       	if (r1 == 0) goto 662 <.GJTIE594_3_3_+0x2AA : 1e08fce >			  ## hci_vendor.c:910:21
 1e08d38:    05 e0 3e 01       	if (r5 == 0) goto 636 <.GJTIE594_3_3_+0x294 : 1e08fb8 >
 1e08d3c:    3b 19             	goto 630 <.GJTIE594_3_3_+0x290 : 1e08fb4 >
 1e08d3e:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e08d42:    11 90             	r1 = r0 + 1
 1e08d44:    f0 08             	r0 = r15
 1e08d46:    bf f3 9a f0       	call -7884 <le_hci_emit_event : 1e06e7e >
 1e08d4a:    a2 19             	goto 836 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e08d4c:    50 68             	r0 = b[r4 + 5] (u)			  ## hci_vendor.c:1039:24
 1e08d4e:    41 68             	r1 = b[r4 + 4] (u)			  ## hci_vendor.c:1039:24
 1e08d50:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:1039:24
 1e08d54:    40 92             	r0 = r1 + 4			  ## hci_vendor.c:1042:40
 1e08d56:    05 f2 90 31       	if (r5 < r0) goto 800 <.GJTIE594_3_3_+0x356 : 1e0907a >			  ## hci_vendor.c:1042:40
 1e08d5a:    40 9a             	r0 = r5 + 4			  ## hci_vendor.c:1043:74
 1e08d5c:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1043:13
 1e08d5e:    20 70             	r0 = 2			  ## hci_vendor.c:1043:13
 1e08d60:    41 08             	r1 = r4			  ## hci_vendor.c:1043:13
 1e08d62:    bf f3 11 f9       	call -3550 <l2cap_packet_handler : 1e07f88 >			  ## hci_vendor.c:1043:13
 1e08d66:    97 f3 19 f0       	call 3137586 <local_irq_disable : 106d9c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:192:5
 1e08d6a:    00 f7 ee 4f       	r0 = h[r4 + -18] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:193:14
 1e08d6e:    24 f3 03 00       	if ((r0 & 16) != 0) goto 6 <.GJTIE594_3_3_+0x54 : 1e08d78 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:193:14
 1e08d72:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:194:20
 1e08d74:    10 f7 ee 4f       	h[r4 + -18] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:194:20
 1e08d78:    97 f3 0e f0       	call 3137564 <local_irq_enable : 106d98 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:196:5
 1e08d7c:    7e 19             	goto 764 <.GJTIE594_3_3_+0x356 : 1e0907a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/btctrler/Classic/lmp_rxtx.c:196:5
 1e08d7e:    40 9c             	r0 = r6 + 4			  ## hci_vendor.c:1132:74
 1e08d80:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1132:13
 1e08d82:    20 70             	r0 = 2			  ## hci_vendor.c:1132:13
 1e08d84:    41 08             	r1 = r4			  ## hci_vendor.c:1132:13
 1e08d86:    bf f3 ff f8       	call -3586 <l2cap_packet_handler : 1e07f88 >			  ## hci_vendor.c:1132:13
 1e08d8a:    55 18             	goto 170 <.GJTIE594_3_3_+0x112 : 1e08e36 >			  ## hci_vendor.c:1132:13
 1e08d8c:    80 09             	r0 += r8			  ## hci_vendor.c:1087:17
 1e08d8e:    00 fc bc 02       	r0 = r0 + 700			  ## hci_vendor.c:1087:17
 1e08d92:    41 98             	r1 = r4 + 4			  ## hci_vendor.c:1087:79
 1e08d94:    97 f3 a6 f0       	call 3137868 <memcpy : 106ee4 >			  ## hci_vendor.c:1087:9
 1e08d98:    00 5a             	r0 = h[r5 + 0] (u)			  ## hci_vendor.c:1088:37
 1e08d9a:    60 09             	r0 += r6			  ## hci_vendor.c:1088:37
 1e08d9c:    08 5a             	h[r5 + 0] = r0			  ## hci_vendor.c:1088:37
 1e08d9e:    11 5a             	r1 = h[r5 + 2] (u)			  ## hci_vendor.c:1091:44
 1e08da0:    22 04             	r2 = r0.l (u)			  ## hci_vendor.c:1091:13
 1e08da2:    80 92             	r0 = r1 + 8			  ## hci_vendor.c:1091:79
 1e08da4:    02 f2 4a 30       	if (r2 < r0) goto 148 <.GJTIE594_3_3_+0x118 : 1e08e3c >			  ## hci_vendor.c:1091:79
 1e08da8:    81 fc bc 02       	r1 = r8 + 700			  ## hci_vendor.c:1100:56
 1e08dac:    20 70             	r0 = 2			  ## hci_vendor.c:1100:13
 1e08dae:    bf f3 eb f8       	call -3626 <l2cap_packet_handler : 1e07f88 >			  ## hci_vendor.c:1100:13
 1e08db2:    1a f7 02 50       	h[r5 + 2] = r10			  ## hci_vendor.c:1102:44
 1e08db6:    1a f7 00 50       	h[r5 + 0] = r10			  ## hci_vendor.c:1103:41
 1e08dba:    40 18             	goto 128 <.GJTIE594_3_3_+0x118 : 1e08e3c >			  ## hci_vendor.c:1103:41
 1e08dbc:    00 e0 60 11       	if (r0 != 0) goto 704 <.GJTIE594_3_3_+0x35C : 1e09080 >
 1e08dc0:    c5 ff 40 18 00 00 	r5 = 6208 <report_irq_stack_end : 1840 >
 1e08dc6:    00 f7 18 52       	r0 = h[r5 + 536] (u)			  ## hci_vendor.c:821:34
 1e08dca:    06 20             	if (r0 == 0) goto 12 <.GJTIE594_3_3_+0xB4 : 1e08dd8 >			  ## hci_vendor.c:821:34
 1e08dcc:    50 fc 15 02       	r0 = r5 + 533			  ## hci_vendor.c:823:56
 1e08dd0:    01 70             	r1 = 0			  ## hci_vendor.c:823:56
 1e08dd2:    52 70             	r2 = 5			  ## hci_vendor.c:823:56
 1e08dd4:    97 f3 8c f0       	call 3137816 <memset : 106ef0 >			  ## hci_vendor.c:823:56
 1e08dd8:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:827:43
 1e08ddc:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:827:53
 1e08dde:    f0 08             	r0 = r15			  ## hci_vendor.c:827:17
 1e08de0:    bf f3 4d f0       	call -8038 <le_hci_emit_event : 1e06e7e >			  ## hci_vendor.c:827:17
 1e08de4:    00 4a             	r0 = [r5 + 0]			  ## btstack_linked_list.c:163:16
 1e08de6:    1a f5 ac 00       	[sp+172] = r10			  ## btstack_linked_list.c:161:25
 1e08dea:    15 f5 b0 00       	[sp+176] = r5			  ## btstack_linked_list.c:162:14
 1e08dee:    10 f5 b4 00       	[sp+180] = r0			  ## btstack_linked_list.c:163:14
 1e08df2:    0c 18             	goto 24 <.GJTIE594_3_3_+0xE8 : 1e08e0c >			  ## btstack_linked_list.c:163:14
 1e08df4:    c0 aa             	r0 = sp + 172
 1e08df6:    bf f3 5c ed       	call -9544 <btstack_linked_list_iterator_next : 1e068b2 >			  ## hci_vendor.c:274:61
 1e08dfa:    01 08             	r1 = r0			  ## hci_vendor.c:274:61
 1e08dfc:    20 52             	r0 = h[r1 + 4] (u)			  ## hci_vendor.c:275:19
 1e08dfe:    40 f2 05 10       	if (r0 != r4) goto 10 <.GJTIE594_3_3_+0xE8 : 1e08e0c >			  ## hci_vendor.c:275:19
 1e08e02:    50 08             	r0 = r5			  ## hci_vendor.c:276:13
 1e08e04:    bf f3 0e ec       	call -10212 <btstack_linked_list_remove : 1e06624 >			  ## hci_vendor.c:276:13
 1e08e08:    10 08             	r0 = r1			  ## hci_vendor.c:277:13
 1e08e0a:    2e 14             	call -1956 <btstack_memory_le_hci_connection_free : 1e08668 >			  ## hci_vendor.c:277:13
 1e08e0c:    c0 aa             	r0 = sp + 172
 1e08e0e:    bf f3 42 ed       	call -9596 <btstack_linked_list_iterator_has_next : 1e06896 >
 1e08e12:    f0 31             	if (r0 != 0) goto -32 <.GJTIE594_3_3_+0xD0 : 1e08df4 >
 1e08e14:    3d 19             	goto 634 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e08e16:    88 fc bc 02       	r8 = r8 + 700			  ## hci_vendor.c:1141:21
 1e08e1a:    46 90             	r6 = r0 + 4			  ## hci_vendor.c:1141:75
 1e08e1c:    80 08             	r0 = r8			  ## hci_vendor.c:1141:13
 1e08e1e:    41 08             	r1 = r4			  ## hci_vendor.c:1141:13
 1e08e20:    62 08             	r2 = r6			  ## hci_vendor.c:1141:13
 1e08e22:    97 f3 5f f0       	call 3137726 <memcpy : 106ee4 >			  ## hci_vendor.c:1141:13
 1e08e26:    0e 5a             	h[r5 + 0] = r6			  ## hci_vendor.c:1142:44
 1e08e28:    1f 5a             	h[r5 + 2] = r7			  ## hci_vendor.c:1143:44
 1e08e2a:    e6 fd 00 29       	r2 = r9.l (u)			  ## hci_vendor.c:1144:13
 1e08e2e:    21 70             	r1 = 2			  ## hci_vendor.c:1144:13
 1e08e30:    80 08             	r0 = r8			  ## hci_vendor.c:1144:13
 1e08e32:    bf f3 d8 f2       	call -6736 <bt_store_16 : 1e073e6 >			  ## hci_vendor.c:1144:13
 1e08e36:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e08e3c:    40 08             	r0 = r4
 1e08e3e:    80 f3 57 64       	call 51374 <ll_hci_private_free_dma_rx : 1e156f0 >
 1e08e42:    24 19             	goto 584 <.GJTIE594_3_3_+0x368 : 1e0908c >
 1e08e44:    80 f3 38 67       	call 52848 <lmp_hci_set_connection_encryption : 1e15cb8 >			  ## hci_vendor.c:452:13
 1e08e48:    0f 19             	goto 542 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:452:13
 1e08e4a:    80 f3 c9 67       	call 53138 <lmp_hci_link_key_request_negative_reply : 1e15de0 >			  ## hci_vendor.c:712:17
 1e08e4e:    20 19             	goto 576 <.GJTIE594_3_3_+0x36C : 1e09090 >			  ## hci_vendor.c:712:17
 1e08e50:    c0 ff 70 09 00 00 	r0 = 2416 <stack_configs_app : 970 >
 1e08e56:    04 08             	r4 = r0
 1e08e58:    40 69             	r0 = b[r4 + 20] (u)			  ## hci_vendor.c:160:32
 1e08e5a:    31 69             	r1 = b[r4 + 19] (u)			  ## hci_vendor.c:160:32
 1e08e5c:    22 69             	r2 = b[r4 + 18] (u)			  ## hci_vendor.c:160:32
 1e08e5e:    13 69             	r3 = b[r4 + 17] (u)			  ## hci_vendor.c:160:32
 1e08e60:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08e64:    50 69             	r0 = b[r4 + 21] (u)			  ## hci_vendor.c:160:32
 1e08e66:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## hci_vendor.c:160:32
 1e08e6a:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## hci_vendor.c:160:32
 1e08e6e:    99 d1             	r1 = r3 >> 6			  ## hci_vendor.c:160:69
 1e08e70:    c6 fd d0 10       	r1 <= insert(r0, p:26, l:6)			  ## hci_vendor.c:160:69
 1e08e74:    1a d5             	r2 = r3 >> 20			  ## hci_vendor.c:160:32
 1e08e76:    c8 fd 60 20       	r2 <= insert(r0, p:12, l:8)			  ## hci_vendor.c:160:32
 1e08e7a:    e0 fd 10 02       	r0 = r2 | r1			  ## hci_vendor.c:160:47
 1e08e7e:    21 fd 01 09       	r1 = r0 & 1			  ## hci_vendor.c:653:17
 1e08e82:    e0 08             	r0 = r14			  ## hci_vendor.c:653:17
 1e08e84:    bf f3 aa ef       	call -8364 <delete_link_key : 1e06ddc >			  ## hci_vendor.c:653:17
 1e08e88:    ef 18             	goto 478 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:653:17
 1e08e8a:    02 72             	r2 = 32			  ## hci_vendor.c:444:13
 1e08e8c:    03 70             	r3 = 0			  ## hci_vendor.c:444:13
 1e08e8e:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >
 1e08e94:    bf f3 bb ed       	call -9354 <bt_event_update_to_user : 1e06a0e >
 1e08e98:    e3 18             	goto 454 <.GJTIE594_3_3_+0x33C : 1e09060 >
 1e08e9a:    80 f3 9b 67       	call 53046 <lmp_hci_accept_sco_connection_request : 1e15dd4 >			  ## hci_vendor.c:587:13
 1e08e9e:    e4 18             	goto 456 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:587:13
 1e08ea0:    80 f3 9a 67       	call 53044 <lmp_hci_reject_connection_request : 1e15dd8 >			  ## hci_vendor.c:595:13
 1e08ea4:    e1 18             	goto 450 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:595:13
 1e08ea6:    c5 f5 23 00       	r5 = b[sp+35] (u)			  ## hci_vendor.c:344:23
 1e08eaa:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:854:56
 1e08eae:    28 90             	r8 = r0 + 2			  ## hci_vendor.c:854:66
 1e08eb0:    54 2a             	if (r5 == 0) goto 168 <.GJTIE594_3_3_+0x236 : 1e08f5a >
 1e08eb2:    e6 fd 00 08       	r0 = r8.l (u)
 1e08eb6:    50 e0 50 30       	if (r0 < 5) goto 160 <.GJTIE594_3_3_+0x236 : 1e08f5a >
 1e08eba:    4e 70             	r14 = 4
 1e08ebc:    19 70             	r9 = 1
 1e08ebe:    80 fb e0 1f       	r1 = r15 + r14
 1e08ec2:    80 62             	r0 = b[r1 + 8] (u)			  ## hci_vendor.c:351:43
 1e08ec4:    22 7e             	r2 = 226			  ## hci_vendor.c:354:22
 1e08ec6:    d2 f5 b9 00       	b[sp+185] = r2			  ## hci_vendor.c:354:22
 1e08eca:    04 08             	r4 = r0			  ## utils.c:232:12
 1e08ecc:    f0 e1 01 30       	if (r0 < 31) goto 2 <.GJTIE594_3_3_+0x1AE : 1e08ed2 >			  ## utils.c:232:12
 1e08ed0:    f4 71             	r4 = 31
 1e08ed2:    a2 98             	r2 = r4 + 10			  ## hci_vendor.c:352:33
 1e08ed4:    d2 f5 ba 00       	b[sp+186] = r2			  ## hci_vendor.c:355:22
 1e08ed8:    22 62             	r2 = b[r1 + 2] (u)			  ## hci_vendor.c:356:9
 1e08eda:    63 62             	r3 = b[r1 + 6] (u)			  ## hci_vendor.c:356:9
 1e08edc:    06 62             	r6 = b[r1 + 0] (u)			  ## hci_vendor.c:356:9
 1e08ede:    0c f9 01 10       	r12 = b[r1 + 1] (u)			  ## hci_vendor.c:356:9
 1e08ee2:    0b f9 07 10       	r11 = b[r1 + 7] (u)			  ## hci_vendor.c:356:9
 1e08ee6:    0a f9 05 10       	r10 = b[r1 + 5] (u)			  ## hci_vendor.c:356:9
 1e08eea:    0d f9 04 10       	r13 = b[r1 + 4] (u)			  ## hci_vendor.c:356:9
 1e08eee:    31 62             	r1 = b[r1 + 3] (u)			  ## hci_vendor.c:356:9
 1e08ef0:    db f5 c2 00       	b[sp+194] = r11			  ## hci_vendor.c:356:9
 1e08ef4:    da f5 c0 00       	b[sp+192] = r10			  ## hci_vendor.c:356:9
 1e08ef8:    dd f5 bf 00       	b[sp+191] = r13			  ## hci_vendor.c:356:9
 1e08efc:    d1 f5 be 00       	b[sp+190] = r1			  ## hci_vendor.c:356:9
 1e08f00:    dc f5 bc 00       	b[sp+188] = r12			  ## hci_vendor.c:356:9
 1e08f04:    d6 f5 bb 00       	b[sp+187] = r6			  ## hci_vendor.c:356:9
 1e08f08:    c8 fd 40 3b       	r3 <= insert(r11, p:8, l:8)			  ## hci_vendor.c:356:9
 1e08f0c:    d0 fd 80 d3       	r13 <= insert(r3, p:16, l:16)			  ## hci_vendor.c:356:9
 1e08f10:    f2 fd 80 3d       	r3 = r13 >> 16			  ## hci_vendor.c:356:9
 1e08f14:    d3 f5 c1 00       	b[sp+193] = r3			  ## hci_vendor.c:356:9
 1e08f18:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## hci_vendor.c:356:9
 1e08f1c:    e1 fc 09 00       	r1 = r14 + 9			  ## hci_vendor.c:359:38
 1e08f20:    43 b8             	r3 = r4 + r1			  ## hci_vendor.c:359:42
 1e08f22:    03 fa 00 f3       	r3 = b[r15+r3] (u)			  ## hci_vendor.c:359:24
 1e08f26:    d0 fd 80 62       	r6 <= insert(r2, p:16, l:16)			  ## hci_vendor.c:356:9
 1e08f2a:    32 d4             	r2 = r6 >> 16			  ## hci_vendor.c:356:9
 1e08f2c:    d2 f5 bd 00       	b[sp+189] = r2			  ## hci_vendor.c:356:9
 1e08f30:    d3 f5 c3 00       	b[sp+195] = r3			  ## hci_vendor.c:359:22
 1e08f34:    d0 f5 c4 00       	b[sp+196] = r0			  ## hci_vendor.c:360:22
 1e08f38:    f1 09             	r1 += r15			  ## hci_vendor.c:361:30
 1e08f3a:    60 02             	r0 = [sp+24]			  ## hci_vendor.c:361:9
 1e08f3c:    42 08             	r2 = r4			  ## hci_vendor.c:361:9
 1e08f3e:    97 f3 d1 ef       	call 3137442 <memcpy : 106ee4 >			  ## hci_vendor.c:361:9
 1e08f42:    c1 98             	r1 = r4 + 12			  ## hci_vendor.c:362:13
 1e08f44:    90 ab             	r0 = sp + 185
 1e08f46:    bf f3 9a ef       	call -8396 <le_hci_emit_event : 1e06e7e >			  ## hci_vendor.c:364:9
 1e08f4a:    80 fb 40 0e       	r0 = r14 + r4			  ## hci_vendor.c:363:31
 1e08f4e:    ae 90             	r14 = r0 + 10			  ## hci_vendor.c:363:16
 1e08f50:    59 f2 03 a0       	ifs (r9 >= r5) goto 6 <.GJTIE594_3_3_+0x236 : 1e08f5a >
 1e08f54:    19 80             	r9 += 1			  ## hci_vendor.c:350:33
 1e08f56:    8e f2 b2 bf       	ifs (r14 < r8) goto -156 <.GJTIE594_3_3_+0x19A : 1e08ebe >			  ## hci_vendor.c:350:33
 1e08f5a:    0a 70             	r10 = 0
 1e08f5c:    0b f5 14 00       	r11 = [sp+20]
 1e08f60:    0c f5 10 00       	r12 = [sp+16]
 1e08f64:    0d f5 0c 00       	r13 = [sp+12]
 1e08f68:    0e f5 08 00       	r14 = [sp+8]
 1e08f6c:    c9 ff ff ff bf ff 	r9 = 4290772991 <uECC_vli_cmp_unsafe+0x1AF9003 : 1bfffff >
 1e08f72:    7a 18             	goto 244 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e08f74:    41 70             	r1 = 4			  ## hci_vendor.c:977:26
 1e08f76:    f0 08             	r0 = r15			  ## hci_vendor.c:977:26
 1e08f78:    bf f3 fe e9       	call -11268 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:977:26
 1e08f7c:    04 08             	r4 = r0			  ## hci_vendor.c:977:26
 1e08f7e:    bf f3 a8 ec       	call -9904 <le_hci_connection_for_handle : 1e068d2 >			  ## hci_vendor.c:978:24
 1e08f82:    02 08             	r2 = r0			  ## hci_vendor.c:978:24
 1e08f84:    6d 24             	if (r2 == 0) goto 218 <.GJTIE594_3_3_+0x33C : 1e09060 >
 1e08f86:    61 70             	r1 = 6			  ## hci_vendor.c:980:47
 1e08f88:    f0 08             	r0 = r15			  ## hci_vendor.c:980:47
 1e08f8a:    bf f3 f5 e9       	call -11286 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:980:47
 1e08f8e:    38 54             	h[r2 + 6] = r0			  ## hci_vendor.c:980:45
 1e08f90:    81 70             	r1 = 8			  ## hci_vendor.c:981:46
 1e08f92:    f0 08             	r0 = r15			  ## hci_vendor.c:981:46
 1e08f94:    bf f3 f0 e9       	call -11296 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:981:46
 1e08f98:    48 54             	h[r2 + 8] = r0			  ## hci_vendor.c:981:44
 1e08f9a:    a1 70             	r1 = 10			  ## hci_vendor.c:982:53
 1e08f9c:    5d 18             	goto 186 <.GJTIE594_3_3_+0x334 : 1e09058 >			  ## hci_vendor.c:982:53
 1e08f9e:    c4 f5 27 00       	r4 = b[sp+39] (u)			  ## hci_vendor.c:862:29
 1e08fa2:    b0 08             	r0 = r11			  ## hci_vendor.c:864:24
 1e08fa4:    41 08             	r1 = r4			  ## hci_vendor.c:864:24
 1e08fa6:    bf f3 6d fb       	call -2342 <le_hci_connection_for_bd_addr_and_type : 1e08684 >			  ## hci_vendor.c:864:24
 1e08faa:    c1 f5 23 00       	r1 = b[sp+35] (u)			  ## btstack_event.h:3699:16
 1e08fae:    02 08             	r2 = r0			  ## hci_vendor.c:864:24
 1e08fb0:    37 22             	if (r1 == 0) goto 110 <.GJTIE594_3_3_+0x2FC : 1e09020 >			  ## hci_vendor.c:867:21
 1e08fb2:    02 24             	if (r2 == 0) goto 4 <.GJTIE594_3_3_+0x294 : 1e08fb8 >
 1e08fb4:    bf f3 58 fb       	call -2384 <btstack_memory_le_hci_connection_free : 1e08668 >
 1e08fb8:    c0 f5 21 00       	r0 = b[sp+33] (u)
 1e08fbc:    11 90             	r1 = r0 + 1
 1e08fbe:    f0 08             	r0 = r15
 1e08fc0:    bf f3 5d ef       	call -8518 <le_hci_emit_event : 1e06e7e >
 1e08fc4:    51 18             	goto 162 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e08fc6:    a0 7a             	r0 = 170			  ## hci_vendor.c:580:17
 1e08fc8:    80 f3 02 67       	call 52740 <lmp_hci_accept_connection_request : 1e15dd0 >			  ## hci_vendor.c:580:17
 1e08fcc:    4d 18             	goto 154 <.GJTIE594_3_3_+0x344 : 1e09068 >			  ## hci_vendor.c:580:17
 1e08fce:    06 3a             	if (r5 != 0) goto 12 <.GJTIE594_3_3_+0x2B8 : 1e08fdc >
 1e08fd0:    b0 08             	r0 = r11			  ## hci_vendor.c:938:28
 1e08fd2:    41 08             	r1 = r4			  ## hci_vendor.c:938:28
 1e08fd4:    bf f3 78 fb       	call -2320 <le_create_connection_for_bd_addr_and_type : 1e086c8 >			  ## hci_vendor.c:938:28
 1e08fd8:    05 08             	r5 = r0			  ## hci_vendor.c:938:28
 1e08fda:    46 2a             	if (r5 == 0) goto 140 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e08fdc:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## hci_vendor.c:946:31
 1e08fe0:    10 f9 28 50       	b[r5 + 40] = r0			  ## hci_vendor.c:946:29
 1e08fe4:    41 70             	r1 = 4			  ## hci_vendor.c:947:36
 1e08fe6:    f0 08             	r0 = r15			  ## hci_vendor.c:947:36
 1e08fe8:    bf f3 c6 e9       	call -11380 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:947:36
 1e08fec:    04 08             	r4 = r0			  ## hci_vendor.c:947:36
 1e08fee:    2c 5a             	h[r5 + 4] = r4			  ## hci_vendor.c:947:34
 1e08ff0:    e1 70             	r1 = 14			  ## hci_vendor.c:950:43
 1e08ff2:    f0 08             	r0 = r15			  ## hci_vendor.c:950:43
 1e08ff4:    bf f3 c0 e9       	call -11392 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:950:43
 1e08ff8:    38 5a             	h[r5 + 6] = r0			  ## hci_vendor.c:950:41
 1e08ffa:    01 71             	r1 = 16			  ## hci_vendor.c:951:42
 1e08ffc:    f0 08             	r0 = r15			  ## hci_vendor.c:951:42
 1e08ffe:    bf f3 bb e9       	call -11402 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:951:42
 1e09002:    48 5a             	h[r5 + 8] = r0			  ## hci_vendor.c:951:40
 1e09004:    11 71             	r1 = 17			  ## hci_vendor.c:952:49
 1e09006:    f0 08             	r0 = r15			  ## hci_vendor.c:952:49
 1e09008:    bf f3 b6 e9       	call -11412 <little_endian_read_16 : 1e06378 >			  ## hci_vendor.c:952:49
 1e0900c:    58 5a             	h[r5 + 10] = r0			  ## hci_vendor.c:952:47
 1e0900e:    80 9b             	r0 = r5 + 24			  ## hci_vendor.c:954:50
 1e09010:    c1 9b             	r1 = r5 + 28			  ## hci_vendor.c:954:68
 1e09012:    80 f3 37 63       	call 50798 <hci_ll_get_device_address : 1e15684 >			  ## hci_vendor.c:954:17
 1e09016:    50 fc 22 00       	r0 = r5 + 34			  ## hci_vendor.c:955:39
 1e0901a:    80 f3 13 63       	call 50726 <le_controller_get_mac : 1e15644 >			  ## hci_vendor.c:955:17
 1e0901e:    20 18             	goto 64 <.GJTIE594_3_3_+0x33C : 1e09060 >			  ## hci_vendor.c:955:17
 1e09020:    06 34             	if (r2 != 0) goto 12 <.GJTIE594_3_3_+0x30A : 1e0902e >
 1e09022:    b0 08             	r0 = r11			  ## hci_vendor.c:878:28
 1e09024:    41 08             	r1 = r4			  ## hci_vendor.c:878:28
 1e09026:    bf f3 4f fb       	call -2402 <le_create_connection_for_bd_addr_and_type : 1e086c8 >			  ## hci_vendor.c:878:28
 1e0902a:    02 08             	r2 = r0			  ## hci_vendor.c:878:28
 1e0902c:    1d 24             	if (r2 == 0) goto 58 <.GJTIE594_3_3_+0x344 : 1e09068 >
 1e0902e:    c0 f5 26 00       	r0 = b[sp+38] (u)			  ## btstack_event.h:3719:16
 1e09032:    10 f9 28 20       	b[r2 + 40] = r0			  ## hci_vendor.c:885:29
 1e09036:    41 70             	r1 = 4			  ## btstack_event.h:3709:16
 1e09038:    f0 08             	r0 = r15			  ## btstack_event.h:3709:16
 1e0903a:    bf f3 9d e9       	call -11462 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:3709:16
 1e0903e:    04 08             	r4 = r0			  ## btstack_event.h:3709:16
 1e09040:    2c 54             	h[r2 + 4] = r4			  ## hci_vendor.c:886:34
 1e09042:    a1 71             	r1 = 26			  ## btstack_event.h:3773:16
 1e09044:    f0 08             	r0 = r15			  ## btstack_event.h:3773:16
 1e09046:    bf f3 97 e9       	call -11474 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:3773:16
 1e0904a:    38 54             	h[r2 + 6] = r0			  ## hci_vendor.c:889:41
 1e0904c:    c1 71             	r1 = 28			  ## btstack_event.h:3783:16
 1e0904e:    f0 08             	r0 = r15			  ## btstack_event.h:3783:16
 1e09050:    bf f3 92 e9       	call -11484 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:3783:16
 1e09054:    48 54             	h[r2 + 8] = r0			  ## hci_vendor.c:890:40
 1e09056:    e1 71             	r1 = 30			  ## btstack_event.h:3793:16
 1e09058:    f0 08             	r0 = r15
 1e0905a:    bf f3 8d e9       	call -11494 <little_endian_read_16 : 1e06378 >
 1e0905e:    58 54             	h[r2 + 10] = r0
 1e09060:    20 05             	r0 = r4.l (u)			  ## hci_vendor.c:998:16
 1e09062:    47 08             	r7 = r4			  ## hci_vendor.c:998:16
 1e09064:    f0 e4 0c 80       	if (r0 > 79) goto 24 <.GJTIE594_3_3_+0x35C : 1e09080 >			  ## hci_vendor.c:998:16
 1e09068:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:999:56
 1e0906c:    12 90             	r2 = r0 + 1			  ## hci_vendor.c:999:66
 1e0906e:    40 70             	r0 = 4			  ## hci_vendor.c:999:9
 1e09070:    f1 08             	r1 = r15			  ## hci_vendor.c:999:9
 1e09072:    bf f3 89 f7       	call -4334 <l2cap_packet_handler : 1e07f88 >			  ## hci_vendor.c:999:9
 1e09076:    e0 05             	r0 = r7.l (u)			  ## hci_vendor.c:1011:18
 1e09078:    0b 20             	if (r0 == 0) goto 22 <.GJTIE594_3_3_+0x36C : 1e09090 >			  ## hci_vendor.c:1011:18
 1e0907a:    80 f3 d6 66       	call 52652 <lmp_hci_host_num_of_completed_packets : 1e15e2a >
 1e0907e:    08 18             	goto 16 <.GJTIE594_3_3_+0x36C : 1e09090 >
 1e09080:    c0 f5 21 00       	r0 = b[sp+33] (u)			  ## hci_vendor.c:1004:39
 1e09084:    11 90             	r1 = r0 + 1			  ## hci_vendor.c:1004:49
 1e09086:    f0 08             	r0 = r15			  ## hci_vendor.c:1004:13
 1e09088:    bf f3 f9 ee       	call -8718 <le_hci_emit_event : 1e06e7e >			  ## hci_vendor.c:1004:13
 1e0908c:    bf f3 48 fb       	call -2416 <hci_run_for_acl_data_send : 1e08720 >
 1e09090:    c0 ff 68 09 00 00 	r0 = 2408 <stack_run_loop_head : 968 >
 1e09096:    04 40             	r4 = [r0 + 0]
 1e09098:    06 28             	if (r4 == 0) goto 12 <.GJTIE594_3_3_+0x382 : 1e090a6 >
 1e0909a:    11 48             	r1 = [r4 + 4]			  ## run_loop.c:37:16
 1e0909c:    02 22             	if (r1 == 0) goto 4 <.GJTIE594_3_3_+0x37E : 1e090a2 >			  ## run_loop.c:37:16
 1e0909e:    40 08             	r0 = r4			  ## run_loop.c:38:13
 1e090a0:    81 00             	call r1			  ## run_loop.c:38:13
 1e090a2:    04 48             	r4 = [r4 + 0]
 1e090a4:    fa 39             	if (r4 != 0) goto -12 <.GJTIE594_3_3_+0x376 : 1e0909a >
 1e090a6:    c0 ff 00 00 00 00 	r0 = 0 <umoddi3.bc : 0 >			  ## btstack_task.c:140:13
 1e090ac:    00 e0 a2 0b       	if (r0 == 0) goto -2236 <btstack_task+0x50 : 1e087f4 >			  ## btstack_task.c:140:13
 1e090b0:    8f f3 a6 b7       	call 2060108 <umoddi3.bc : 0 >			  ## btstack_task.c:141:13
 1e090b4:    ff f3 9e fb       	goto -2244 <btstack_task+0x50 : 1e087f4 >			  ## btstack_task.c:141:13


hci_can_send_acl_le_packet_now:
 1e090b8:    34 00             	[--sp] = rets			  ## hci_vendor.c:2118:0
 1e090ba:    c0 ff 40 18 00 00 	r0 = 6208 <report_irq_stack_end : 1840 >			  ## hci_vendor.c:2119:22
 1e090c0:    01 f9 15 02       	r1 = b[r0 + 533] (u)			  ## hci_vendor.c:2119:22
 1e090c4:    00 70             	r0 = 0			  ## hci_vendor.c:2119:22
 1e090c6:    07 32             	if (r1 != 0) goto 14 <hci_can_send_acl_le_packet_now+0x1E : 1e090d6 >			  ## hci_vendor.c:2119:22
 1e090c8:    bf f3 6a f2       	call -6956 <hci_number_free_acl_slots_for_connection_type : 1e075a0 >			  ## hci_vendor.c:2114:12
 1e090cc:    01 08             	r1 = r0			  ## hci_vendor.c:2114:12
 1e090ce:    10 70             	r0 = 1			  ## hci_vendor.c:2114:72
 1e090d0:    01 e0 01 c0       	ifs (r1 > 0) goto 2 <hci_can_send_acl_le_packet_now+0x1E : 1e090d6 >			  ## hci_vendor.c:2114:72
 1e090d4:    00 70             	r0 = 0			  ## hci_vendor.c:2114:72
 1e090d6:    30 00             	pc = [sp++]			  ## hci_vendor.c:2123:1


l2cap_notify_channel_can_send:
 1e090d8:    79 01             	[--sp] = {rets, r9-r4}			  ## l2cap.c:428:0
 1e090da:    fe 0b             	sp += -4			  ## l2cap.c:428:0
 1e090dc:    c4 ff 8c 1a 00 00 	r4 = 6796 <l2cap_fixed_channels+0x4 : 1a8c >			  ## l2cap.c:428:0
 1e090e2:    05 70             	r5 = 0			  ## l2cap.c:428:0
 1e090e4:    88 77             	r8 = 120			  ## l2cap.c:428:0
 1e090e6:    29 70             	r9 = 2			  ## l2cap.c:428:0
 1e090e8:    06 70             	r6 = 0			  ## l2cap.c:428:0
 1e090ea:    07 f6 fc 4f       	r7 = [r4 + -4]			  ## l2cap.c:431:38
 1e090ee:    20 2e             	if (r7 == 0) goto 64 <l2cap_notify_channel_can_send+0x58 : 1e09130 >
 1e090f0:    00 68             	r0 = b[r4 + 0] (u)			  ## l2cap.c:434:38
 1e090f2:    1e 20             	if (r0 == 0) goto 60 <l2cap_notify_channel_can_send+0x58 : 1e09130 >			  ## l2cap.c:434:38
 1e090f4:    26 e0 20 00       	if (r6 == 2) goto 64 <l2cap_notify_channel_can_send+0x60 : 1e09138 >
 1e090f8:    df 17             	call -66 <hci_can_send_acl_le_packet_now : 1e090b8 >			  ## l2cap.c:439:24
 1e090fa:    1a 20             	if (r0 == 0) goto 52 <l2cap_notify_channel_can_send+0x58 : 1e09130 >
 1e090fc:    0d 68             	b[r4 + 0] = r5			  ## l2cap.c:446:58
 1e090fe:    06 2c             	if (r6 == 0) goto 12 <l2cap_notify_channel_can_send+0x34 : 1e0910c >			  ## l2cap.c:446:58
 1e09100:    26 e0 06 00       	if (r6 == 2) goto 12 <l2cap_notify_channel_can_send+0x38 : 1e09110 >
 1e09104:    16 e0 06 10       	if (r6 != 1) goto 12 <l2cap_notify_channel_can_send+0x3C : 1e09114 >
 1e09108:    60 70             	r0 = 6
 1e0910a:    05 18             	goto 10 <l2cap_notify_channel_can_send+0x3E : 1e09116 >
 1e0910c:    40 70             	r0 = 4
 1e0910e:    03 18             	goto 6 <l2cap_notify_channel_can_send+0x3E : 1e09116 >
 1e09110:    20 70             	r0 = 2
 1e09112:    01 18             	goto 2 <l2cap_notify_channel_can_send+0x3E : 1e09116 >
 1e09114:    00 70             	r0 = 0
 1e09116:    d8 f5 00 00       	b[sp] = r8			  ## l2cap.c:191:14
 1e0911a:    d9 f5 01 00       	b[sp+1] = r9			  ## l2cap.c:192:14
 1e0911e:    d0 f5 02 00       	b[sp+2] = r0			  ## utils.c:160:19
 1e09122:    d5 f5 03 00       	b[sp+3] = r5			  ## utils.c:161:19
 1e09126:    21 04             	r1 = r0.l (u)			  ## l2cap.c:195:5
 1e09128:    02 a0             	r2 = sp + 0			  ## l2cap.c:195:5
 1e0912a:    40 70             	r0 = 4			  ## l2cap.c:195:5
 1e0912c:    43 70             	r3 = 4			  ## l2cap.c:195:5
 1e0912e:    87 00             	call r7			  ## l2cap.c:195:5
 1e09130:    16 80             	r6 += 1			  ## l2cap.c:430:54
 1e09132:    84 80             	r4 += 8			  ## l2cap.c:430:19
 1e09134:    36 e0 d9 1f       	if (r6 != 3) goto -78 <l2cap_notify_channel_can_send+0x12 : 1e090ea >			  ## l2cap.c:430:19
 1e09138:    02 0a             	sp += 4
 1e0913a:    59 01             	{pc, r9-r4} = [sp++]			  ## l2cap.c:449:1


l2cap_hci_event_handler:
 1e0913c:    34 00             	[--sp] = rets			  ## l2cap.c:1168:0
 1e0913e:    00 64             	r0 = b[r2 + 0] (u)			  ## btstack_event.h:40:16
 1e09140:    f0 e0 06 00       	if (r0 == 15) goto 12 <l2cap_hci_event_handler+0x14 : 1e09150 >			  ## l2cap.c:1170:5
 1e09144:    30 e1 06 10       	if (r0 != 19) goto 12 <l2cap_hci_event_handler+0x18 : 1e09154 >
 1e09148:    bf f3 ac f3       	call -6312 <l2cap_run : 1e078a4 >			  ## l2cap.c:1174:9
 1e0914c:    88 01             	{rets} = [sp++]			  ## l2cap.c:1176:9
 1e0914e:    c4 1f             	goto -120 <l2cap_notify_channel_can_send : 1e090d8 >			  ## l2cap.c:1176:9
 1e09150:    bf f3 a8 f3       	call -6320 <l2cap_run : 1e078a4 >			  ## l2cap.c:1181:9
 1e09154:    30 00             	pc = [sp++]			  ## l2cap.c:1204:1


user_cmd_loop_suspend:
 1e09156:    c1 ff a0 1a 00 00 	r1 = 6816 <__user_info : 1aa0 >			  ## avctp_user.c:3141:0
 1e0915c:    00 f7 12 11       	r0 = h[r1 + 274] (u)			  ## avctp_user.c:3142:35
 1e09160:    02 fd 01 0a       	r2 = r0 | 256			  ## avctp_user.c:3142:35
 1e09164:    00 70             	r0 = 0			  ## avctp_user.c:3143:5
 1e09166:    12 f7 12 11       	h[r1 + 274] = r2			  ## avctp_user.c:3142:35
 1e0916a:    20 00             	rts			  ## avctp_user.c:3143:5


user_cmd_loop_resume:
 1e0916c:    c1 ff a0 1a 00 00 	r1 = 6816 <__user_info : 1aa0 >			  ## avctp_user.c:3146:0
 1e09172:    00 f7 12 11       	r0 = h[r1 + 274] (u)			  ## avctp_user.c:3147:35
 1e09176:    32 fd 01 0a       	r2 = r0 & 4294967039			  ## avctp_user.c:3147:35
 1e0917a:    00 70             	r0 = 0			  ## avctp_user.c:3148:5
 1e0917c:    12 f7 12 11       	h[r1 + 274] = r2			  ## avctp_user.c:3147:35
 1e09180:    20 00             	rts			  ## avctp_user.c:3148:5


btstack_run_loop_remove_timer:
 1e09182:    20 04             	r0 = r0.l (u)			  ## btstack_sys_timer.c:169:0
 1e09184:    c0 f3 20 13       	goto 9792 <sys_timer_del : 1e0b7c8 >			  ## btstack_sys_timer.c:174:5


user_cmd_loop_release:
 1e09188:    75 01             	[--sp] = {rets, r5, r4}			  ## avctp_user.c:3122:0
 1e0918a:    c5 ff a0 1a 00 00 	r5 = 6816 <__user_info : 1aa0 >			  ## avctp_user.c:3122:0
 1e09190:    00 f9 12 51       	r0 = b[r5 + 274] (u)			  ## avctp_user.c:3124:9
 1e09194:    04 70             	r4 = 0			  ## avctp_user.c:3124:9
 1e09196:    26 f3 1e 00       	if ((r0 & 64) != 0) goto 60 <user_cmd_loop_release+0x4E : 1e091d6 >			  ## avctp_user.c:3124:9
 1e0919a:    50 fc 88 00       	r0 = r5 + 136
 1e0919e:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:3128:20
 1e091a0:    1d f3 02 10       	if ((r1 & 536870912) == 0) goto 4 <user_cmd_loop_release+0x20 : 1e091a8 >			  ## avctp_user.c:3128:20
 1e091a4:    31 50             	r1 = h[r0 + 6] (u)			  ## avctp_user.c:3128:38
 1e091a6:    16 32             	if (r1 != 0) goto 44 <user_cmd_loop_release+0x4C : 1e091d4 >			  ## avctp_user.c:3128:38
 1e091a8:    80 81             	r0 += 24			  ## avctp_user.c:3127:5
 1e091aa:    51 fc a0 00       	r1 = r5 + 160			  ## avctp_user.c:3127:5
 1e091ae:    10 f2 f6 3f       	if (r0 < r1) goto -20 <user_cmd_loop_release+0x16 : 1e0919e >			  ## avctp_user.c:3127:5
 1e091b2:    50 fc 7c 00       	r0 = r5 + 124			  ## avctp_user.c:3132:5
 1e091b6:    bf f3 3e ea       	call -11140 <stack_run_loop_remove : 1e06636 >			  ## avctp_user.c:3132:5
 1e091ba:    00 f6 b8 50       	r0 = [r5 + 184]			  ## avctp_user.c:3132:5
 1e091be:    e1 17             	call -62 <btstack_run_loop_remove_timer : 1e09182 >			  ## avctp_user.c:3133:5
 1e091c0:    00 f7 12 51       	r0 = h[r5 + 274] (u)			  ## avctp_user.c:3134:30
 1e091c4:    c1 ff bf fe 00 00 	r1 = 65215 <boot_arg_list+0x2BF : febf >			  ## avctp_user.c:3135:35
 1e091ca:    50 b3             	r0 &= r1			  ## avctp_user.c:3135:35
 1e091cc:    10 b3             	r0 |= 64			  ## avctp_user.c:3135:35
 1e091ce:    10 f7 12 51       	h[r5 + 274] = r0			  ## avctp_user.c:3135:35
 1e091d2:    01 18             	goto 2 <user_cmd_loop_release+0x4E : 1e091d6 >			  ## avctp_user.c:3135:35
 1e091d4:    14 70             	r4 = 1
 1e091d6:    40 08             	r0 = r4			  ## avctp_user.c:3137:1
 1e091d8:    55 01             	{pc, r5, r4} = [sp++]			  ## avctp_user.c:3137:1


update_connectiong_mac_addr:
 1e091da:    c1 ff b4 1b 00 00 	r1 = 7092 <__user_info+0x114 : 1bb4 >			  ## avctp_user.c:1308:0
 1e091e0:    c2 f4 00 19       	[r1 + 8] = 0			  ## avctp_user.c:1311:25
 1e091e4:    03 08             	r3 = r0			  ## avctp_user.c:1311:25
 1e091e6:    60 70             	r0 = 6
 1e091e8:    68 62             	b[r1 + 6] = r0			  ## avctp_user.c:1312:29
 1e091ea:    62 70             	r2 = 6			  ## avctp_user.c:1313:5
 1e091ec:    10 08             	r0 = r1			  ## avctp_user.c:1313:5
 1e091ee:    31 08             	r1 = r3			  ## avctp_user.c:1313:5
 1e091f0:    d7 f3 78 ee       	goto 3136752 <memcpy : 106ee4 >			  ## avctp_user.c:1313:5


aec_sco_connection_start:
 1e091f4:    78 01             	[--sp] = {rets, r8-r4}			  ## bt_audio.c:121:0
 1e091f6:    c6 ff 70 09 00 00 	r6 = 2416 <stack_configs_app : 970 >			  ## bt_audio.c:121:0
 1e091fc:    43 6d             	r3 = b[r6 + 20] (u)			  ## bt_audio.c:123:29
 1e091fe:    34 6d             	r4 = b[r6 + 19] (u)			  ## bt_audio.c:123:29
 1e09200:    25 6d             	r5 = b[r6 + 18] (u)			  ## bt_audio.c:123:29
 1e09202:    17 6d             	r7 = b[r6 + 17] (u)			  ## bt_audio.c:123:29
 1e09204:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## bt_audio.c:123:29
 1e09208:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## bt_audio.c:123:29
 1e0920c:    53 6d             	r3 = b[r6 + 21] (u)			  ## bt_audio.c:123:29
 1e0920e:    d0 fd 80 74       	r7 <= insert(r4, p:16, l:16)			  ## bt_audio.c:123:29
 1e09212:    f5 05             	r5 = r7.l (s)			  ## bt_audio.c:123:9
 1e09214:    23 08             	r3 = r2			  ## bt_audio.c:123:9
 1e09216:    18 08             	r8 = r1
 1e09218:    04 08             	r4 = r0
 1e0921a:    05 e0 31 b0       	ifs (r5 < 0) goto 98 <aec_sco_connection_start+0x8C : 1e09280 >
 1e0921e:    2e f3 24 70       	if ((r7 & 16384) != 0) goto 72 <aec_sco_connection_start+0x76 : 1e0926a >			  ## bt_audio.c:126:9
 1e09222:    20 6d             	r0 = b[r6 + 18] (u)			  ## bt_audio.c:127:50
 1e09224:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:127:50
 1e09226:    52 6d             	r2 = b[r6 + 21] (u)			  ## bt_audio.c:127:50
 1e09228:    15 6d             	r5 = b[r6 + 17] (u)			  ## bt_audio.c:127:50
 1e0922a:    47 6d             	r7 = b[r6 + 20] (u)			  ## bt_audio.c:127:50
 1e0922c:    4f 6d             	b[r6 + 20] = r7			  ## bt_audio.c:127:50
 1e0922e:    1d 6d             	b[r6 + 17] = r5			  ## bt_audio.c:127:50
 1e09230:    5a 6d             	b[r6 + 21] = r2			  ## bt_audio.c:127:50
 1e09232:    c8 fd 40 17       	r1 <= insert(r7, p:8, l:8)			  ## bt_audio.c:127:50
 1e09236:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## bt_audio.c:127:50
 1e0923a:    d0 fd 80 51       	r5 <= insert(r1, p:16, l:16)			  ## bt_audio.c:127:50
 1e0923e:    28 d4             	r0 = r5 >> 16			  ## bt_audio.c:127:50
 1e09240:    38 6d             	b[r6 + 19] = r0			  ## bt_audio.c:127:50
 1e09242:    00 fd 80 5a       	r0 = r5 | 32768			  ## bt_audio.c:127:50
 1e09246:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:127:50
 1e09248:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:127:50
 1e0924a:    a0 9d             	r0 = r6 + 26			  ## bt_audio.c:128:9
 1e0924c:    62 70             	r2 = 6			  ## bt_audio.c:128:9
 1e0924e:    31 08             	r1 = r3			  ## bt_audio.c:128:9
 1e09250:    97 f3 48 ee       	call 3136656 <memcpy : 106ee4 >			  ## bt_audio.c:128:9
 1e09254:    d0 fd 80 48       	r4 <= insert(r8, p:16, l:16)			  ## bt_audio.c:134:107
 1e09258:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:134:9
 1e0925e:    00 70             	r0 = 0			  ## bt_audio.c:134:9
 1e09260:    92 71             	r2 = 25			  ## bt_audio.c:134:9
 1e09262:    43 08             	r3 = r4			  ## bt_audio.c:134:9
 1e09264:    18 01             	{rets, r8-r4} = [sp++]			  ## bt_audio.c:134:9
 1e09266:    ff f3 d2 eb       	goto -10332 <bt_event_update_to_user : 1e06a0e >			  ## bt_audio.c:134:9
 1e0926a:    c1 ff ac 9a e0 01 	r1 = 31496876 <send_sco_disconn : 1e09aac >			  ## bt_audio.c:142:29
 1e09270:    00 70             	r0 = 0			  ## bt_audio.c:142:29
 1e09272:    42 76             	r2 = 100			  ## bt_audio.c:142:29
 1e09274:    80 f3 a1 12       	call 9538 <sys_timeout_add : 1e0b7ba >			  ## bt_audio.c:142:29
 1e09278:    c1 ff 94 09 00 00 	r1 = 2452 <disable_sco_timer : 994 >			  ## bt_audio.c:142:27
 1e0927e:    08 52             	h[r1 + 0] = r0			  ## bt_audio.c:142:27
 1e09280:    58 01             	{pc, r8-r4} = [sp++]			  ## bt_audio.c:145:1


free_conn_for_addr:
 1e09282:    77 01             	[--sp] = {rets, r7-r4}			  ## avctp_user.c:329:0
 1e09284:    16 08             	r6 = r1			  ## avctp_user.c:329:0
 1e09286:    05 08             	r5 = r0			  ## avctp_user.c:329:0
 1e09288:    bf f3 ab eb       	call -10410 <get_conn_for_addr : 1e069e2 >			  ## avctp_user.c:330:25
 1e0928c:    04 08             	r4 = r0			  ## avctp_user.c:330:25
 1e0928e:    c7 ff a0 1a 00 00 	r7 = 6816 <__user_info : 1aa0 >
 1e09294:    0d 2c             	if (r6 == 0) goto 26 <free_conn_for_addr+0x2E : 1e092b0 >
 1e09296:    0c 28             	if (r4 == 0) goto 24 <free_conn_for_addr+0x2E : 1e092b0 >
 1e09298:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:335:23
 1e0929a:    26 f3 03 00       	if ((r0 & 64) != 0) goto 6 <free_conn_for_addr+0x22 : 1e092a4 >			  ## avctp_user.c:335:23
 1e0929e:    70 fc a1 00       	r0 = r7 + 161			  ## avctp_user.c:338:17
 1e092a2:    02 18             	goto 4 <free_conn_for_addr+0x26 : 1e092a8 >			  ## avctp_user.c:338:17
 1e092a4:    70 fc 0a 01       	r0 = r7 + 266			  ## avctp_user.c:336:17
 1e092a8:    62 70             	r2 = 6
 1e092aa:    51 08             	r1 = r5
 1e092ac:    97 f3 1a ee       	call 3136564 <memcpy : 106ee4 >
 1e092b0:    15 28             	if (r4 == 0) goto 42 <free_conn_for_addr+0x5A : 1e092dc >
 1e092b2:    00 69             	r0 = b[r4 + 16] (u)			  ## avctp_user.c:345:22
 1e092b4:    31 48             	r1 = [r4 + 12]			  ## avctp_user.c:345:22
 1e092b6:    08 69             	b[r4 + 16] = r0			  ## avctp_user.c:345:22
 1e092b8:    30 fd 20 1c       	r0 = r1 & 3758096383			  ## avctp_user.c:345:22
 1e092bc:    38 48             	[r4 + 12] = r0			  ## avctp_user.c:345:22
 1e092be:    00 f7 12 71       	r0 = h[r7 + 274] (u)			  ## avctp_user.c:346:37
 1e092c2:    31 fd 07 09       	r1 = r0 & 4294967288			  ## avctp_user.c:346:37
 1e092c6:    70 80             	r0 += 7			  ## avctp_user.c:346:37
 1e092c8:    20 fd 07 09       	r0 = r0 & 7			  ## avctp_user.c:346:37
 1e092cc:    50 b2             	r0 |= r1			  ## avctp_user.c:346:37
 1e092ce:    10 f7 12 71       	h[r7 + 274] = r0			  ## avctp_user.c:346:37
 1e092d2:    01 70             	r1 = 0			  ## avctp_user.c:350:9
 1e092d4:    82 71             	r2 = 24			  ## avctp_user.c:350:9
 1e092d6:    40 08             	r0 = r4			  ## avctp_user.c:350:9
 1e092d8:    97 f3 0a ee       	call 3136532 <memset : 106ef0 >			  ## avctp_user.c:350:9
 1e092dc:    70 fc 88 00       	r0 = r7 + 136
 1e092e0:    31 40             	r1 = [r0 + 12]			  ## avctp_user.c:354:19
 1e092e2:    3d f3 06 10       	if ((r1 & 536870912) != 0) goto 12 <free_conn_for_addr+0x70 : 1e092f2 >			  ## avctp_user.c:354:19
 1e092e6:    80 81             	r0 += 24			  ## avctp_user.c:352:5
 1e092e8:    71 fc a0 00       	r1 = r7 + 160			  ## avctp_user.c:352:5
 1e092ec:    10 f2 f8 3f       	if (r0 < r1) goto -16 <free_conn_for_addr+0x5E : 1e092e0 >			  ## avctp_user.c:352:5
 1e092f0:    57 01             	{pc, r7-r4} = [sp++]
 1e092f2:    21 50             	r1 = h[r0 + 4] (u)			  ## avctp_user.c:356:13
 1e092f4:    11 f7 cc 70       	h[r7 + 204] = r1			  ## avctp_user.c:356:13
 1e092f8:    00 40             	r0 = [r0 + 0]			  ## avctp_user.c:356:13
 1e092fa:    10 f6 c8 70       	[r7 + 200] = r0			  ## avctp_user.c:356:13
 1e092fe:    57 01             	{pc, r7-r4} = [sp++]			  ## avctp_user.c:356:13


packet_handler:
 1e09300:    79 01             	[--sp] = {rets, r9-r4}			  ## btstack_main.c:189:0
 1e09302:    fc 0b             	sp += -8			  ## btstack_main.c:189:0
 1e09304:    34 08             	r4 = r3			  ## btstack_main.c:189:0
 1e09306:    41 e0 4b 11       	if (r1 != 4) goto 662 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## btstack_main.c:189:0
 1e0930a:    00 68             	r0 = b[r4 + 0] (u)			  ## btstack_main.c:189:0
 1e0930c:    c0 e6 17 d0       	ifs (r0 <= 108) goto 46 <.GJTIE605_0_0_+0xE : 1e0933e >			  ## btstack_main.c:189:0
 1e09310:    01 fc 0b ff       	r1 = r0 + -245			  ## btstack_main.c:189:0
 1e09314:    91 e0 73 80       	if (r1 > 9) goto 230 <.GJTIE605_0_0_+0xCE : 1e093fe >			  ## btstack_main.c:189:0
 1e09318:    48 c0             	r0 = r1 << 1			  ## btstack_main.c:189:0
 1e0931a:    b0 00             	tbh [r0]			  ## btstack_main.c:189:0


.GJTIL605_0_0_:
 1e0931c:    0a 00     < 10 : 0xA >
 1e0931e:    8e 00     < 142 : 0x8E >
 1e09320:    91 00     < 145 : 0x91 >
 1e09322:    42 01     < 322 : 0x142 >
 1e09324:    94 00     < 148 : 0x94 >
 1e09326:    42 01     < 322 : 0x142 >
 1e09328:    42 01     < 322 : 0x142 >
 1e0932a:    42 01     < 322 : 0x142 >
 1e0932c:    42 01     < 322 : 0x142 >
 1e0932e:    9a 00     < 154 : 0x9A >
 1e09330:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:319:90
 1e09332:    30 98             	r0 = r4 + 3			  ## btstack_main.c:319:38
 1e09334:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:319:13
 1e0933a:    52 7f             	r2 = 245			  ## btstack_main.c:319:13
 1e0933c:    2f 19             	goto 606 <.GJTIE605_0_0_+0x26C : 1e0959c >
 1e0933e:    c6 ff 70 09 00 00 	r6 = 2416 <stack_configs_app : 970 >
 1e09344:    30 e0 1e 00       	if (r0 == 3) goto 60 <.GJTIE605_0_0_+0x54 : 1e09384 >
 1e09348:    50 e0 37 00       	if (r0 == 5) goto 110 <.GJTIE605_0_0_+0x8A : 1e093ba >
 1e0934c:    c0 e2 28 11       	if (r0 != 44) goto 592 <.GJTIE605_0_0_+0x270 : 1e095a0 >
 1e09350:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:272:13
 1e09352:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:272:13
 1e09354:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:272:13
 1e09358:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:272:13
 1e0935c:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:272:13
 1e0935e:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:272:13
 1e09360:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:272:13
 1e09362:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:272:13
 1e09364:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:272:13
 1e09368:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:272:13
 1e0936c:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:272:13
 1e09370:    0b 02             	[sp] = r3			  ## btstack_main.c:272:13
 1e09372:    11 69             	r1 = b[r4 + 17] (u)			  ## btstack_main.c:273:50
 1e09374:    02 69             	r2 = b[r4 + 16] (u)			  ## btstack_main.c:273:50
 1e09376:    20 69             	r0 = b[r4 + 18] (u)			  ## btstack_main.c:273:13
 1e09378:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## btstack_main.c:273:50
 1e0937c:    a1 04             	r1 = r2.l (u)			  ## btstack_main.c:273:13
 1e0937e:    02 a0             	r2 = sp + 0			  ## btstack_main.c:273:13
 1e09380:    39 17             	call -398 <aec_sco_connection_start : 1e091f4 >			  ## btstack_main.c:273:13
 1e09382:    0e 19             	goto 540 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## btstack_main.c:273:13
 1e09384:    a0 68             	r0 = b[r4 + 10] (u)			  ## btstack_main.c:198:13
 1e09386:    91 68             	r1 = b[r4 + 9] (u)			  ## btstack_main.c:198:13
 1e09388:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## btstack_main.c:198:13
 1e0938c:    91 f5 04 00       	h[sp+4] = r1			  ## btstack_main.c:198:13
 1e09390:    80 68             	r0 = b[r4 + 8] (u)			  ## btstack_main.c:198:13
 1e09392:    71 68             	r1 = b[r4 + 7] (u)			  ## btstack_main.c:198:13
 1e09394:    62 68             	r2 = b[r4 + 6] (u)			  ## btstack_main.c:198:13
 1e09396:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:198:13
 1e09398:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## btstack_main.c:198:13
 1e0939c:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## btstack_main.c:198:13
 1e093a0:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## btstack_main.c:198:13
 1e093a4:    0b 02             	[sp] = r3			  ## btstack_main.c:198:13
 1e093a6:    21 68             	r1 = b[r4 + 2] (u)			  ## btstack_main.c:199:17
 1e093a8:    b0 68             	r0 = b[r4 + 11] (u)			  ## btstack_main.c:199:17
 1e093aa:    5d 22             	if (r1 == 0) goto 186 <.GJTIE605_0_0_+0x136 : 1e09466 >			  ## btstack_main.c:199:17
 1e093ac:    10 e0 f8 10       	if (r0 != 1) goto 496 <.GJTIE605_0_0_+0x270 : 1e095a0 >
 1e093b0:    05 a0             	r5 = sp + 0
 1e093b2:    01 70             	r1 = 0			  ## btstack_main.c:218:21
 1e093b4:    50 08             	r0 = r5			  ## btstack_main.c:218:21
 1e093b6:    65 17             	call -310 <free_conn_for_addr : 1e09282 >			  ## btstack_main.c:218:21
 1e093b8:    eb 18             	goto 470 <.GJTIE605_0_0_+0x260 : 1e09590 >			  ## btstack_main.c:218:21
 1e093ba:    c0 68             	r0 = b[r4 + 12] (u)			  ## utils.c:188:5
 1e093bc:    b1 68             	r1 = b[r4 + 11] (u)			  ## utils.c:188:5
 1e093be:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e093c2:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e093c6:    a0 68             	r0 = b[r4 + 10] (u)			  ## utils.c:188:5
 1e093c8:    91 68             	r1 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e093ca:    82 68             	r2 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e093cc:    73 68             	r3 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e093ce:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e093d2:    95 02             	r5 = [sp+36]			  ## utils.c:188:5
 1e093d4:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e093d8:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e093dc:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e093de:    00 a0             	r0 = sp + 0			  ## utils.c:188:5
 1e093e0:    fc 16             	call -520 <update_connectiong_mac_addr : 1e091da >			  ## btstack_main.c:246:13
 1e093e2:    75 e0 dd 30       	if (r5 < 7) goto 442 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## btstack_main.c:246:13
 1e093e6:    60 68             	r0 = b[r4 + 6] (u)			  ## btstack_main.c:248:21
 1e093e8:    4a 20             	if (r0 == 0) goto 148 <.GJTIE605_0_0_+0x14E : 1e0947e >			  ## btstack_main.c:248:21
 1e093ea:    20 e0 48 00       	if (r0 == 2) goto 144 <.GJTIE605_0_0_+0x14E : 1e0947e >
 1e093ee:    10 e0 d7 10       	if (r0 != 1) goto 430 <.GJTIE605_0_0_+0x270 : 1e095a0 >
 1e093f2:    05 a0             	r5 = sp + 0
 1e093f4:    11 70             	r1 = 1			  ## btstack_main.c:250:21
 1e093f6:    50 08             	r0 = r5			  ## btstack_main.c:250:21
 1e093f8:    44 17             	call -376 <free_conn_for_addr : 1e09282 >			  ## btstack_main.c:250:21
 1e093fa:    53 68             	r3 = b[r4 + 5] (u)			  ## btstack_main.c:254:105
 1e093fc:    ca 18             	goto 404 <.GJTIE605_0_0_+0x262 : 1e09592 >			  ## btstack_main.c:254:105
 1e093fe:    d0 e6 cf 10       	if (r0 != 109) goto 414 <.GJTIE605_0_0_+0x270 : 1e095a0 >
 1e09402:    90 68             	r0 = b[r4 + 9] (u)			  ## utils.c:188:5
 1e09404:    81 68             	r1 = b[r4 + 8] (u)			  ## utils.c:188:5
 1e09406:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## utils.c:188:5
 1e0940a:    91 f5 04 00       	h[sp+4] = r1			  ## utils.c:188:5
 1e0940e:    70 68             	r0 = b[r4 + 7] (u)			  ## utils.c:188:5
 1e09410:    61 68             	r1 = b[r4 + 6] (u)			  ## utils.c:188:5
 1e09412:    52 68             	r2 = b[r4 + 5] (u)			  ## utils.c:188:5
 1e09414:    43 68             	r3 = b[r4 + 4] (u)			  ## utils.c:188:5
 1e09416:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## utils.c:188:5
 1e0941a:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## utils.c:188:5
 1e0941e:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## utils.c:188:5
 1e09422:    0b 02             	[sp] = r3			  ## utils.c:188:5
 1e09424:    30 68             	r0 = b[r4 + 3] (u)			  ## btstack_main.c:286:18
 1e09426:    10 e0 bb 10       	if (r0 != 1) goto 374 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## btstack_main.c:286:18
 1e0942a:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:291:101
 1e0942c:    00 a0             	r0 = sp + 0			  ## btstack_main.c:291:101
 1e0942e:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:291:21
 1e09434:    d2 76             	r2 = 109			  ## btstack_main.c:291:21
 1e09436:    b2 18             	goto 356 <.GJTIE605_0_0_+0x26C : 1e0959c >			  ## btstack_main.c:291:21
 1e09438:    00 70             	r0 = 0			  ## btstack_main.c:346:13
 1e0943a:    31 73             	r1 = 51			  ## btstack_main.c:346:13
 1e0943c:    05 18             	goto 10 <.GJTIE605_0_0_+0x118 : 1e09448 >			  ## btstack_main.c:346:13
 1e0943e:    00 70             	r0 = 0			  ## btstack_main.c:342:13
 1e09440:    81 70             	r1 = 8			  ## btstack_main.c:342:13
 1e09442:    02 18             	goto 4 <.GJTIE605_0_0_+0x118 : 1e09448 >			  ## btstack_main.c:342:13
 1e09444:    20 98             	r0 = r4 + 2			  ## btstack_main.c:337:39
 1e09446:    51 70             	r1 = 5			  ## btstack_main.c:337:13
 1e09448:    02 70             	r2 = 0
 1e0944a:    bf f3 f9 ea       	call -10766 <update_bt_current_status : 1e06a40 >
 1e0944e:    a8 18             	goto 336 <.GJTIE605_0_0_+0x270 : 1e095a0 >
 1e09450:    20 68             	r0 = b[r4 + 2] (u)			  ## btstack_main.c:298:17
 1e09452:    45 20             	if (r0 == 0) goto 138 <.GJTIE605_0_0_+0x1AE : 1e094de >			  ## btstack_main.c:298:17
 1e09454:    bf f3 75 eb       	call -10518 <set_remote_test_flag : 1e06b42 >			  ## btstack_main.c:299:17
 1e09458:    23 68             	r3 = b[r4 + 2] (u)			  ## btstack_main.c:301:97
 1e0945a:    02 68             	r2 = b[r4 + 0] (u)			  ## btstack_main.c:301:17
 1e0945c:    00 a0             	r0 = sp + 0			  ## btstack_main.c:301:17
 1e0945e:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:301:17
 1e09464:    9b 18             	goto 310 <.GJTIE605_0_0_+0x26C : 1e0959c >			  ## btstack_main.c:301:17
 1e09466:    10 e0 44 10       	if (r0 != 1) goto 136 <.GJTIE605_0_0_+0x1C2 : 1e094f2 >			  ## btstack_main.c:200:21
 1e0946a:    40 68             	r0 = b[r4 + 4] (u)			  ## btstack_main.c:202:62
 1e0946c:    37 68             	r7 = b[r4 + 3] (u)			  ## btstack_main.c:202:62
 1e0946e:    d8 fd 40 70       	r7 <= insert(r0, p:8, l:24)			  ## btstack_main.c:202:62
 1e09472:    00 a0             	r0 = sp + 0			  ## btstack_main.c:202:62
 1e09474:    bf f3 b5 ea       	call -10902 <get_conn_for_addr : 1e069e2 >			  ## avctp_user.c:289:12
 1e09478:    44 20             	if (r0 == 0) goto 136 <.GJTIE605_0_0_+0x1D2 : 1e09502 >
 1e0947a:    3f 50             	h[r0 + 6] = r7			  ## avctp_user.c:292:34
 1e0947c:    86 18             	goto 268 <.GJTIE605_0_0_+0x25A : 1e0958a >			  ## avctp_user.c:292:34
 1e0947e:    50 6d             	r0 = b[r6 + 21] (u)			  ## bt_audio.c:148:30
 1e09480:    40 6d             	r0 = b[r6 + 20] (u)			  ## bt_audio.c:148:30
 1e09482:    31 6d             	r1 = b[r6 + 19] (u)			  ## bt_audio.c:148:30
 1e09484:    22 6d             	r2 = b[r6 + 18] (u)			  ## bt_audio.c:148:30
 1e09486:    13 6d             	r3 = b[r6 + 17] (u)			  ## bt_audio.c:148:30
 1e09488:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:148:30
 1e0948c:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:148:30
 1e09490:    d0 fd 80 31       	r3 <= insert(r1, p:16, l:16)			  ## bt_audio.c:148:30
 1e09494:    f0 04             	r0 = r3.l (s)			  ## bt_audio.c:148:10
 1e09496:    f0 ef 83 c0       	ifs (r0 > -1) goto 262 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## bt_audio.c:148:10
 1e0949a:    c1 ff 00 4e 4f 43 	r1 = 1129270784 <uECC_vli_cmp_unsafe+0x13EDE04 : 14f4e00 >			  ## bt_audio.c:156:5
 1e094a0:    00 70             	r0 = 0			  ## bt_audio.c:156:5
 1e094a2:    92 71             	r2 = 25			  ## bt_audio.c:156:5
 1e094a4:    f3 7f             	r3 = 255			  ## bt_audio.c:156:5
 1e094a6:    04 70             	r4 = 0			  ## bt_audio.c:156:5
 1e094a8:    bf f3 b1 ea       	call -10910 <bt_event_update_to_user : 1e06a0e >			  ## bt_audio.c:156:5
 1e094ac:    20 6d             	r0 = b[r6 + 18] (u)			  ## bt_audio.c:157:46
 1e094ae:    11 6d             	r1 = b[r6 + 17] (u)			  ## bt_audio.c:157:46
 1e094b0:    42 6d             	r2 = b[r6 + 20] (u)			  ## bt_audio.c:157:46
 1e094b2:    33 6d             	r3 = b[r6 + 19] (u)			  ## bt_audio.c:157:46
 1e094b4:    55 6d             	r5 = b[r6 + 21] (u)			  ## bt_audio.c:157:46
 1e094b6:    5d 6d             	b[r6 + 21] = r5			  ## bt_audio.c:157:46
 1e094b8:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## bt_audio.c:157:46
 1e094bc:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## bt_audio.c:157:46
 1e094c0:    d0 fd 80 13       	r1 <= insert(r3, p:16, l:16)			  ## bt_audio.c:157:46
 1e094c4:    30 fd 80 1a       	r0 = r1 & 4294934527			  ## bt_audio.c:157:46
 1e094c8:    18 6d             	b[r6 + 17] = r0			  ## bt_audio.c:157:46
 1e094ca:    01 d6             	r1 = r0 >> 24			  ## bt_audio.c:157:46
 1e094cc:    49 6d             	b[r6 + 20] = r1			  ## bt_audio.c:157:46
 1e094ce:    01 d4             	r1 = r0 >> 16			  ## bt_audio.c:157:46
 1e094d0:    39 6d             	b[r6 + 19] = r1			  ## bt_audio.c:157:46
 1e094d2:    00 d2             	r0 = r0 >> 8			  ## bt_audio.c:157:46
 1e094d4:    28 6d             	b[r6 + 18] = r0			  ## bt_audio.c:157:46
 1e094d6:    fc 5c             	h[r6 + 30] = r4			  ## bt_audio.c:158:5
 1e094d8:    ec 5c             	h[r6 + 28] = r4			  ## bt_audio.c:158:5
 1e094da:    dc 5c             	h[r6 + 26] = r4			  ## bt_audio.c:158:5
 1e094dc:    61 18             	goto 194 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## bt_audio.c:158:5
 1e094de:    bf f3 eb ec       	call -9770 <get_remote_test_flag : 1e06eb8 >			  ## btstack_main.c:312:24
 1e094e2:    5e 20             	if (r0 == 0) goto 188 <.GJTIE605_0_0_+0x270 : 1e095a0 >
 1e094e4:    00 a0             	r0 = sp + 0
 1e094e6:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >			  ## btstack_main.c:313:17
 1e094ec:    e2 7f             	r2 = 254			  ## btstack_main.c:313:17
 1e094ee:    03 70             	r3 = 0			  ## btstack_main.c:313:17
 1e094f0:    55 18             	goto 170 <.GJTIE605_0_0_+0x26C : 1e0959c >			  ## btstack_main.c:313:17
 1e094f2:    90 b0             	r0 |= 2			  ## btstack_main.c:212:58
 1e094f4:    20 e0 54 10       	if (r0 != 2) goto 168 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## btstack_main.c:212:58
 1e094f8:    02 a0             	r2 = sp + 0
 1e094fa:    20 70             	r0 = 2			  ## btstack_main.c:214:21
 1e094fc:    e1 71             	r1 = 30			  ## btstack_main.c:214:21
 1e094fe:    7a 16             	call -780 <aec_sco_connection_start : 1e091f4 >			  ## btstack_main.c:214:21
 1e09500:    4f 18             	goto 158 <.GJTIE605_0_0_+0x270 : 1e095a0 >			  ## btstack_main.c:214:21
 1e09502:    c0 ff a0 1a 00 00 	r0 = 6816 <__user_info : 1aa0 >
 1e09508:    05 fc 88 00       	r5 = r0 + 136
 1e0950c:    31 4a             	r1 = [r5 + 12]			  ## avctp_user.c:296:20
 1e0950e:    1d f3 06 10       	if ((r1 & 536870912) == 0) goto 12 <.GJTIE605_0_0_+0x1EE : 1e0951e >			  ## avctp_user.c:296:20
 1e09512:    85 81             	r5 += 24			  ## avctp_user.c:295:5
 1e09514:    01 fc a0 00       	r1 = r0 + 160			  ## avctp_user.c:295:5
 1e09518:    15 f2 f8 3f       	if (r5 < r1) goto -16 <.GJTIE605_0_0_+0x1DC : 1e0950c >			  ## avctp_user.c:295:5
 1e0951c:    36 18             	goto 108 <.GJTIE605_0_0_+0x25A : 1e0958a >			  ## avctp_user.c:295:5
 1e0951e:    02 6b             	r2 = b[r5 + 16] (u)			  ## avctp_user.c:296:20
 1e09520:    0a 6b             	b[r5 + 16] = r2			  ## avctp_user.c:297:26
 1e09522:    91 be             	r1 |= 536870912			  ## avctp_user.c:297:26
 1e09524:    39 4a             	[r5 + 12] = r1			  ## avctp_user.c:297:26
 1e09526:    01 f7 12 01       	r1 = h[r0 + 274] (u)			  ## avctp_user.c:298:41
 1e0952a:    32 fd 07 19       	r2 = r1 & 4294967288			  ## avctp_user.c:298:41
 1e0952e:    11 80             	r1 += 1			  ## avctp_user.c:298:41
 1e09530:    21 fd 07 19       	r1 = r1 & 7			  ## avctp_user.c:298:41
 1e09534:    51 b4             	r1 |= r2			  ## avctp_user.c:298:41
 1e09536:    11 f7 12 01       	h[r0 + 274] = r1			  ## avctp_user.c:298:41
 1e0953a:    08 f6 0c 50       	r8 = [r5 + 12]			  ## avctp_user.c:299:30
 1e0953e:    09 f9 10 50       	r9 = b[r5 + 16] (u)			  ## avctp_user.c:299:30
 1e09542:    01 a0             	r1 = sp + 0			  ## avctp_user.c:299:30
 1e09544:    62 70             	r2 = 6			  ## avctp_user.c:302:13
 1e09546:    50 08             	r0 = r5			  ## avctp_user.c:302:13
 1e09548:    97 f3 cc ec       	call 3135896 <memcpy : 106ee4 >			  ## avctp_user.c:302:13
 1e0954c:    00 70             	r0 = 0			  ## avctp_user.c:302:13
 1e0954e:    a8 6a             	b[r5 + 10] = r0			  ## avctp_user.c:303:46
 1e09550:    3f 5a             	h[r5 + 6] = r7			  ## avctp_user.c:304:38
 1e09552:    20 fd 87 99       	r0 = r9 & 135			  ## avctp_user.c:307:29
 1e09556:    08 6b             	b[r5 + 16] = r0			  ## avctp_user.c:307:29
 1e09558:    c0 ff f0 0f f0 ff 	r0 = 4293922800 <bank_code_load_addr+0xE6744 : 1f00ff0 >			  ## avctp_user.c:307:29
 1e0955e:    e2 fd 80 00       	r0 = r0 & r8			  ## avctp_user.c:307:29
 1e09562:    00 fd 05 09       	r0 = r0 | 5			  ## avctp_user.c:307:29
 1e09566:    38 4a             	[r5 + 12] = r0			  ## avctp_user.c:307:29
 1e09568:    30 6d             	r0 = b[r6 + 19] (u)			  ## avctp_user.c:308:53
 1e0956a:    41 6d             	r1 = b[r6 + 20] (u)			  ## avctp_user.c:308:53
 1e0956c:    22 6d             	r2 = b[r6 + 18] (u)			  ## avctp_user.c:308:53
 1e0956e:    13 6d             	r3 = b[r6 + 17] (u)			  ## avctp_user.c:308:53
 1e09570:    55 6d             	r5 = b[r6 + 21] (u)			  ## avctp_user.c:308:53
 1e09572:    49 6d             	b[r6 + 20] = r1			  ## avctp_user.c:308:53
 1e09574:    2a 6d             	b[r6 + 18] = r2			  ## avctp_user.c:308:53
 1e09576:    1b 6d             	b[r6 + 17] = r3			  ## avctp_user.c:308:53
 1e09578:    5d 6d             	b[r6 + 21] = r5			  ## avctp_user.c:308:53
 1e0957a:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## avctp_user.c:308:53
 1e0957e:    d0 fd 80 30       	r3 <= insert(r0, p:16, l:16)			  ## avctp_user.c:308:53
 1e09582:    00 fd 40 3b       	r0 = r3 | 4194304			  ## avctp_user.c:308:53
 1e09586:    00 d4             	r0 = r0 >> 16			  ## avctp_user.c:308:53
 1e09588:    38 6d             	b[r6 + 19] = r0			  ## avctp_user.c:308:53
 1e0958a:    05 a0             	r5 = sp + 0
 1e0958c:    50 08             	r0 = r5			  ## btstack_main.c:205:21
 1e0958e:    25 16             	call -950 <update_connectiong_mac_addr : 1e091da >			  ## btstack_main.c:205:21
 1e09590:    23 68             	r3 = b[r4 + 2] (u)
 1e09592:    02 68             	r2 = b[r4 + 0] (u)
 1e09594:    c1 ff 00 49 43 48 	r1 = 1212369152 <uECC_vli_cmp_unsafe+0x32D904 : 434900 >
 1e0959a:    50 08             	r0 = r5
 1e0959c:    bf f3 37 ea       	call -11154 <bt_event_update_to_user : 1e06a0e >
 1e095a0:    04 0a             	sp += 8
 1e095a2:    59 01             	{pc, r9-r4} = [sp++]			  ## btstack_main.c:350:1


att_send_set_mtu_size:
 1e095a4:    77 01             	[--sp] = {rets, r7-r4}			  ## att_send.c:642:0
 1e095a6:    c5 ff c0 1b 00 00 	r5 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:642:0
 1e095ac:    02 4a             	r2 = [r5 + 0]			  ## att_send.c:643:5
 1e095ae:    14 08             	r4 = r1			  ## att_send.c:643:5
 1e095b0:    1f 24             	if (r2 == 0) goto 62 <att_send_set_mtu_size+0x4C : 1e095f0 >
 1e095b2:    02 86             	r2 += 96			  ## att_send.c:121:52
 1e095b4:    01 70             	r1 = 0			  ## att_send.c:121:52
 1e095b6:    06 70             	r6 = 0			  ## att_send.c:121:52
 1e095b8:    03 70             	r3 = 0			  ## att_send.c:121:52
 1e095ba:    07 f8 00 26       	r7 = h[r2+r6] (u)			  ## att_send.c:121:52
 1e095be:    bf d1             	r7 = r7 >> 6			  ## att_send.c:121:52
 1e095c0:    07 f2 06 00       	if (r7 == r0) goto 12 <att_send_set_mtu_size+0x2C : 1e095d0 >			  ## att_send.c:121:13
 1e095c4:    11 80             	r1 += 1			  ## att_send.c:120:23
 1e095c6:    13 80             	r3 += 1			  ## att_send.c:120:43
 1e095c8:    46 80             	r6 += 4			  ## att_send.c:120:23
 1e095ca:    83 e0 f6 bf       	ifs (r3 < 8) goto -20 <att_send_set_mtu_size+0x16 : 1e095ba >			  ## att_send.c:120:23
 1e095ce:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:662:1
 1e095d0:    40 04             	r0 = r1.b0 (u)			  ## att_send.c:648:19
 1e095d2:    80 e0 0d 80       	if (r0 > 8) goto 26 <att_send_set_mtu_size+0x4C : 1e095f0 >
 1e095d6:    97 f3 e1 eb       	call 3135426 <local_irq_disable : 106d9c >			  ## att_send.c:652:5
 1e095da:    00 4a             	r0 = [r5 + 0]			  ## att_send.c:654:20
 1e095dc:    01 f7 b0 00       	r1 = h[r0 + 176] (u)			  ## att_send.c:654:28
 1e095e0:    60 09             	r0 += r6			  ## att_send.c:654:28
 1e095e2:    41 f2 01 80       	if (r1 > r4) goto 2 <att_send_set_mtu_size+0x44 : 1e095e8 >			  ## att_send.c:654:28
 1e095e6:    14 08             	r4 = r1			  ## att_send.c:656:5
 1e095e8:    14 f7 62 00       	h[r0 + 98] = r4
 1e095ec:    97 f3 d4 eb       	call 3135400 <local_irq_enable : 106d98 >			  ## att_send.c:660:5
 1e095f0:    57 01             	{pc, r7-r4} = [sp++]			  ## att_send.c:662:1


l2cap_request_can_send_fix_channel_now_event:
 1e095f2:    c0 ff 88 1a 00 00 	r0 = 6792 <l2cap_fixed_channels : 1a88 >			  ## l2cap.c:2186:0
 1e095f8:    11 70             	r1 = 1			  ## l2cap.c:2193:58
 1e095fa:    49 60             	b[r0 + 4] = r1			  ## l2cap.c:2193:58
 1e095fc:    6d 1d             	goto -1318 <l2cap_notify_channel_can_send : 1e090d8 >			  ## l2cap.c:2194:5


l2cap_can_send_fixed_channel_packet_now:
 1e095fe:    ff f3 fd ef       	goto -8198 <hci_can_send_acl_packet_now : 1e075fc >			  ## l2cap.c:2198:0


l2cap_reserve_packet_buffer:
 1e09602:    ff f3 0c f0       	goto -8168 <hci_reserve_packet_buffer : 1e0761e >			  ## l2cap.c:2114:0


l2cap_send_prepared_connectionless:
 1e09606:    77 01             	[--sp] = {rets, r7-r4}			  ## l2cap.c:2137:0
 1e09608:    c7 ff 40 18 00 00 	r7 = 6208 <report_irq_stack_end : 1840 >			  ## l2cap.c:2137:0
 1e0960e:    02 f9 15 72       	r2 = b[r7 + 533] (u)			  ## hci_vendor.c:1946:25
 1e09612:    14 08             	r4 = r1			  ## hci_vendor.c:1946:25
 1e09614:    05 08             	r5 = r0			  ## hci_vendor.c:1946:25
 1e09616:    76 75             	r6 = 87			  ## hci_vendor.c:1946:25
 1e09618:    1a 24             	if (r2 == 0) goto 52 <l2cap_send_prepared_connectionless+0x48 : 1e0964e >			  ## hci_vendor.c:1946:25
 1e0961a:    bf f3 e6 ef       	call -8244 <hci_number_free_acl_slots_for_handle : 1e075ea >			  ## hci_vendor.c:2127:12
 1e0961e:    10 e0 16 b0       	ifs (r0 < 1) goto 44 <l2cap_send_prepared_connectionless+0x48 : 1e0964e >			  ## hci_vendor.c:2127:12
 1e09622:    80 9e             	r0 = r7 + 8			  ## l2cap.c:2126:5
 1e09624:    01 70             	r1 = 0			  ## l2cap.c:2126:5
 1e09626:    03 70             	r3 = 0			  ## l2cap.c:2126:5
 1e09628:    52 08             	r2 = r5			  ## l2cap.c:2126:5
 1e0962a:    bf f3 18 e9       	call -11728 <little_endian_store_16 : 1e0685e >			  ## l2cap.c:2126:5
 1e0962e:    41 98             	r1 = r4 + 4			  ## l2cap.c:2128:48
 1e09630:    62 04             	r2 = r1.l (u)			  ## l2cap.c:2128:5
 1e09632:    21 70             	r1 = 2			  ## l2cap.c:2128:5
 1e09634:    bf f3 13 e9       	call -11738 <little_endian_store_16 : 1e0685e >			  ## l2cap.c:2128:5
 1e09638:    41 70             	r1 = 4			  ## l2cap.c:2130:5
 1e0963a:    45 70             	r5 = 4			  ## l2cap.c:2130:5
 1e0963c:    42 08             	r2 = r4			  ## l2cap.c:2130:5
 1e0963e:    bf f3 0e e9       	call -11748 <little_endian_store_16 : 1e0685e >			  ## l2cap.c:2130:5
 1e09642:    ed 6e             	b[r7 + 14] = r5			  ## utils.c:83:19
 1e09644:    fb 6e             	b[r7 + 15] = r3			  ## utils.c:84:19
 1e09646:    80 98             	r0 = r4 + 8			  ## l2cap.c:2155:58
 1e09648:    bf f3 48 f0       	call -8048 <hci_le_send_acl_packet_buffer : 1e076dc >			  ## l2cap.c:2155:12
 1e0964c:    06 08             	r6 = r0			  ## l2cap.c:2155:12
 1e0964e:    60 08             	r0 = r6			  ## l2cap.c:2156:1
 1e09650:    57 01             	{pc, r7-r4} = [sp++]			  ## l2cap.c:2156:1


btstack_set_timer:
 1e09652:    74 01             	[--sp] = {rets, r4}			  ## btstack_sys_timer.c:106:0
 1e09654:    04 08             	r4 = r0			  ## btstack_sys_timer.c:106:0
 1e09656:    20 48             	r0 = [r4 + 8]			  ## btstack_sys_timer.c:142:41
 1e09658:    31 fd 0f 0b       	r1 = r0 & 4293984255			  ## btstack_sys_timer.c:143:20
 1e0965c:    91 b8             	r1 |= 131072			  ## btstack_sys_timer.c:143:20
 1e0965e:    29 48             	[r4 + 8] = r1			  ## btstack_sys_timer.c:143:20
 1e09660:    31 48             	r1 = [r4 + 12]			  ## btstack_sys_timer.c:145:59
 1e09662:    22 04             	r2 = r0.l (u)			  ## btstack_sys_timer.c:144:55
 1e09664:    40 08             	r0 = r4			  ## btstack_sys_timer.c:145:19
 1e09666:    80 f3 b0 10       	call 8544 <sys_timer_add : 1e0b7ca >			  ## btstack_sys_timer.c:145:19
 1e0966a:    18 48             	[r4 + 4] = r0			  ## btstack_sys_timer.c:145:17
 1e0966c:    54 01             	{pc, r4} = [sp++]			  ## btstack_sys_timer.c:148:1


btstack_memory_gatt_client_get:
 1e0966e:    c0 ff 74 1a 00 00 	r0 = 6772 <le_stack_pool : 1a74 >			  ## btstack_memory.c:244:0
 1e09674:    01 40             	r1 = [r0 + 0]			  ## btstack_memory.c:245:38
 1e09676:    10 42             	r0 = [r1 + 4]			  ## btstack_memory.c:66:23
 1e09678:    03 20             	if (r0 == 0) goto 6 <btstack_memory_gatt_client_get+0x12 : 1e09680 >
 1e0967a:    02 40             	r2 = [r0 + 0]			  ## btstack_memory.c:72:31
 1e0967c:    1a 42             	[r1 + 4] = r2			  ## btstack_memory.c:72:23
 1e0967e:    20 00             	rts			  ## btstack_memory.c:245:5
 1e09680:    00 70             	r0 = 0
 1e09682:    20 00             	rts			  ## btstack_memory.c:245:5


att_operation_cmd_send:
 1e09684:    7a 01             	[--sp] = {rets, r10-r4}			  ## att_send.c:460:0
 1e09686:    c8 ff c0 1b 00 00 	r8 = 7104 <att_s_hdl : 1bc0 >			  ## att_send.c:460:0
 1e0968c:    0a f6 00 80       	r10 = [r8 + 0]			  ## att_send.c:460:0
 1e09690:    09 f5 20 00       	r9 = [sp+32]			  ## att_send.c:460:0
 1e09694:    06 70             	r6 = 0			  ## att_send.c:460:0
 1e09696:    05 76             	r5 = 96			  ## att_send.c:460:0
 1e09698:    04 70             	r4 = 0			  ## att_send.c:460:0
 1e0969a:    07 f8 00 a5       	r7 = h[r10+r5] (u)			  ## att_send.c:121:52
 1e0969e:    bf d1             	r7 = r7 >> 6			  ## att_send.c:121:52
 1e096a0:    07 f2 07 00       	if (r7 == r0) goto 14 <att_operation_cmd_send+0x2E : 1e096b2 >			  ## att_send.c:121:13
 1e096a4:    45 80             	r5 += 4			  ## att_send.c:120:23
 1e096a6:    14 80             	r4 += 1			  ## att_send.c:120:43
 1e096a8:    16 80             	r6 += 1			  ## att_send.c:120:23
 1e096aa:    84 e0 f6 bf       	ifs (r4 < 8) goto -20 <att_operation_cmd_send+0x16 : 1e0969a >			  ## att_send.c:120:23
 1e096ae:    06 70             	r6 = 0
 1e096b0:    04 18             	goto 8 <att_operation_cmd_send+0x36 : 1e096ba >
 1e096b2:    84 05             	r4 = r6.b0 (u)			  ## att_send.c:464:43
 1e096b4:    06 70             	r6 = 0			  ## att_send.c:464:43
 1e096b6:    84 e0 02 90       	if (r4 <= 8) goto 4 <att_operation_cmd_send+0x3A : 1e096be >			  ## att_send.c:464:43
 1e096ba:    00 70             	r0 = 0
 1e096bc:    24 18             	goto 72 <.GJTIE631_0_0_+0x3A : 1e09706 >
 1e096be:    f1 8f             	r1 += -1			  ## att_send.c:472:5
 1e096c0:    51 e0 f5 8f       	if (r1 > 5) goto -22 <att_operation_cmd_send+0x2A : 1e096ae >			  ## att_send.c:472:5
 1e096c4:    a1 00             	tbb [r1]


.GJTIS631_0_0_:
 1e096c6:    03     < 3 : 0x3 >
 1e096c7:    09     < 9 : 0x9 >
 1e096c8:    1c     < 28 : 0x1C >
 1e096c9:    1c     < 28 : 0x1C >
 1e096ca:    1c     < 28 : 0x1C >
 1e096cb:    1a     < 26 : 0x1A >
 1e096cc:    21 08             	r1 = r2			  ## att_send.c:474:19
 1e096ce:    32 08             	r2 = r3			  ## att_send.c:474:19
 1e096d0:    93 08             	r3 = r9			  ## att_send.c:474:19
 1e096d2:    80 f3 25 03       	call 1610 <att_server_notify : 1e09d20 >			  ## att_send.c:474:19
 1e096d6:    05 18             	goto 10 <.GJTIE631_0_0_+0x16 : 1e096e2 >
 1e096d8:    21 08             	r1 = r2			  ## att_send.c:478:19
 1e096da:    32 08             	r2 = r3			  ## att_send.c:478:19
 1e096dc:    93 08             	r3 = r9			  ## att_send.c:478:19
 1e096de:    80 f3 4b 03       	call 1686 <att_server_indicate : 1e09d78 >			  ## att_send.c:478:19
 1e096e2:    01 08             	r1 = r0
 1e096e4:    70 75             	r0 = 87
 1e096e6:    16 70             	r6 = 1
 1e096e8:    0c ff 8f 10 0f 00 	ifs (r1 > 143) goto 30 <.GJTIE631_0_0_+0x40 : 1e0970c >			  ## att_send.c:505:5
 1e096ee:    51 e5 18 c0       	ifs (r1 > 85) goto 48 <.GJTIE631_0_0_+0x56 : 1e09722 >
 1e096f2:    05 22             	if (r1 == 0) goto 10 <.GJTIE631_0_0_+0x32 : 1e096fe >
 1e096f4:    41 e5 03 00       	if (r1 == 84) goto 6 <.GJTIE631_0_0_+0x32 : 1e096fe >
 1e096f8:    03 18             	goto 6 <.GJTIE631_0_0_+0x34 : 1e09700 >
 1e096fa:    80 f3 e8 05       	call 3024 <gatt_client_write_value_of_characteristic_without_response : 1e0a2ce >			  ## att_send.c:482:19
 1e096fe:    06 70             	r6 = 0
 1e09700:    00 70             	r0 = 0
 1e09702:    0a f6 00 80       	r10 = [r8 + 0]
 1e09706:    16 f9 b2 a0       	b[r10 + 178] = r6
 1e0970a:    5a 01             	{pc, r10-r4} = [sp++]			  ## att_send.c:540:1
 1e0970c:    12 fc 6c ff       	r2 = r1 + -148
 1e09710:    22 e0 f7 3f       	if (r2 < 2) goto -18 <.GJTIE631_0_0_+0x36 : 1e09702 >
 1e09714:    00 ff 90 10 f4 ff 	if (r1 == 144) goto -24 <.GJTIE631_0_0_+0x36 : 1e09702 >
 1e0971a:    00 ff 97 10 ef ff 	if (r1 == 151) goto -34 <.GJTIE631_0_0_+0x32 : 1e096fe >
 1e09720:    ef 1f             	goto -34 <.GJTIE631_0_0_+0x34 : 1e09700 >
 1e09722:    61 e5 ec 0f       	if (r1 == 86) goto -40 <.GJTIE631_0_0_+0x32 : 1e096fe >
 1e09726:    71 e5 ec 0f       	if (r1 == 87) goto -40 <.GJTIE631_0_0_+0x36 : 1e09702 >
 1e0972a:    ea 1f             	goto -44 <.GJTIE631_0_0_+0x34 : 1e09700 >


__ble_thread_loop_handler:
 1e0972c:    7d 01             	[--sp] = {rets, r13-r4}			  ## btstack_main.c:771:0
 1e0972e:    e6 0b             	sp += -52			  ## btstack_main.c:771:0
 1e09730:    c5 ff 20 1c 00 00 	r5 = 7200 <btstack_global_info : 1c20 >			  ## btstack_main.c:771:0
 1e09736:    90 4a             	r0 = [r5 + 36]			  ## btstack_main.c:771:0
 1e09738:    80 f3 16 06       	call 3116 <system_text_start : 1e0a368 >			  ## btstack_main.c:552:12
 1e0973c:    00 e0 07 01       	if (r0 == 0) goto 526 <.GJTIE633_1_1_+0x6E : 1e0994e >			  ## btstack_main.c:552:12
 1e09740:    1c 70             	r12 = 1
 1e09742:    0b 70             	r11 = 0
 1e09744:    38 71             	r8 = 19
 1e09746:    c9 ff 6e 09 00 00 	r9 = 2414 <gap_request_connection_parameter_update.le_con_param_update_identifier : 96e >
 1e0974c:    ca ff 34 0f 00 00 	r10 = 3892 <config_hci_ll_param.0 : f34 >
 1e09752:    c4 9a             	r4 = r5 + 12			  ## btstack_main.c:553:9
 1e09754:    01 a2             	r1 = sp + 32			  ## btstack_main.c:553:9
 1e09756:    42 70             	r2 = 4			  ## btstack_main.c:553:9
 1e09758:    40 08             	r0 = r4			  ## btstack_main.c:553:9
 1e0975a:    80 f3 53 06       	call 3238 <cbuf_read : 1e0a404 >			  ## btstack_main.c:553:9
 1e0975e:    80 f5 22 00       	r0 = h[sp+34] (u)			  ## btstack_main.c:554:13
 1e09762:    05 20             	if (r0 == 0) goto 10 <__ble_thread_loop_handler+0x42 : 1e0976e >			  ## btstack_main.c:554:13
 1e09764:    82 c0             	r2 = r0 << 2			  ## btstack_main.c:555:68
 1e09766:    c1 a0             	r1 = sp + 12			  ## btstack_main.c:555:68
 1e09768:    40 08             	r0 = r4			  ## btstack_main.c:555:13
 1e0976a:    80 f3 4b 06       	call 3222 <cbuf_read : 1e0a404 >			  ## btstack_main.c:555:13
 1e0976e:    80 f5 20 00       	r0 = h[sp+32] (u)
 1e09772:    01 fc ff ff       	r1 = r0 + -1			  ## btstack_main.c:561:9
 1e09776:    e1 e1 26 80       	if (r1 > 30) goto 76 <.GJTIE633_0_0_+0xA : 1e097c6 >			  ## btstack_main.c:561:9
 1e0977a:    48 c0             	r0 = r1 << 1
 1e0977c:    b0 00             	tbh [r0]


.GJTIL633_0_0_:
 1e0977e:    1f 00     < 31 : 0x1F >
 1e09780:    36 00     < 54 : 0x36 >
 1e09782:    44 00     < 68 : 0x44 >
 1e09784:    4a 00     < 74 : 0x4A >
 1e09786:    50 00     < 80 : 0x50 >
 1e09788:    5a 00     < 90 : 0x5A >
 1e0978a:    e4 00     < 228 : 0xE4 >
 1e0978c:    5e 00     < 94 : 0x5E >
 1e0978e:    e4 00     < 228 : 0xE4 >
 1e09790:    e4 00     < 228 : 0xE4 >
 1e09792:    64 00     < 100 : 0x64 >
 1e09794:    82 00     < 130 : 0x82 >
 1e09796:    e4 00     < 228 : 0xE4 >
 1e09798:    e4 00     < 228 : 0xE4 >
 1e0979a:    85 00     < 133 : 0x85 >
 1e0979c:    8a 00     < 138 : 0x8A >
 1e0979e:    8d 00     < 141 : 0x8D >
 1e097a0:    9c 00     < 156 : 0x9C >
 1e097a2:    a3 00     < 163 : 0xA3 >
 1e097a4:    e4 00     < 228 : 0xE4 >
 1e097a6:    aa 00     < 170 : 0xAA >
 1e097a8:    b8 00     < 184 : 0xB8 >
 1e097aa:    bf 00     < 191 : 0xBF >
 1e097ac:    e4 00     < 228 : 0xE4 >
 1e097ae:    e4 00     < 228 : 0xE4 >
 1e097b0:    e4 00     < 228 : 0xE4 >
 1e097b2:    c2 00     < 194 : 0xC2 >
 1e097b4:    e4 00     < 228 : 0xE4 >
 1e097b6:    e4 00     < 228 : 0xE4 >
 1e097b8:    c8 00     < 200 : 0xC8 >
 1e097ba:    52 00     < 82 : 0x52 >
 1e097bc:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:563:13
 1e097c0:    80 f3 99 5f       	call 48946 <ll_hci_adv_enable : 1e156f6 >			  ## btstack_main.c:563:13
 1e097c4:    c0 18             	goto 384 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:563:13
 1e097c6:    01 ff 82 00 bd 00 	if (r0 != 130) goto 378 <.GJTIE633_1_1_+0x66 : 1e09946 >
 1e097cc:    40 02             	r0 = [sp+16]			  ## btstack_main.c:679:68
 1e097ce:    23 50             	r3 = h[r0 + 4] (u)			  ## btstack_main.c:680:17
 1e097d0:    12 50             	r2 = h[r0 + 2] (u)			  ## btstack_main.c:680:17
 1e097d2:    01 50             	r1 = h[r0 + 0] (u)			  ## btstack_main.c:680:17
 1e097d4:    34 50             	r4 = h[r0 + 6] (u)			  ## btstack_main.c:680:17
 1e097d6:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:680:17
 1e097da:    1c f5 08 00       	[sp+8] = r12			  ## btstack_main.c:680:17
 1e097de:    1c f5 04 00       	[sp+4] = r12			  ## btstack_main.c:680:17
 1e097e2:    0c 02             	[sp] = r4			  ## btstack_main.c:680:17
 1e097e4:    80 f3 6c 5f       	call 48856 <ll_hci_connection_update : 1e156c0 >			  ## btstack_main.c:680:17
 1e097e8:    ae 18             	goto 348 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:680:17
 1e097ea:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:533:5
 1e097ee:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:533:5
 1e097f2:    c1 f5 14 00       	r1 = b[sp+20] (u)			  ## btstack_main.c:533:5
 1e097f6:    9b f5 28 00       	h[sp+40] = r11			  ## btstack_main.c:532:5
 1e097fa:    1b f5 24 00       	[sp+36] = r11			  ## btstack_main.c:532:5
 1e097fe:    19 02             	[sp+4] = r1			  ## btstack_main.c:533:5
 1e09800:    41 a2             	r1 = sp + 36			  ## btstack_main.c:533:5
 1e09802:    03 70             	r3 = 0			  ## btstack_main.c:533:5
 1e09804:    53 18             	goto 166 <.GJTIE633_0_0_+0xF0 : 1e098ac >			  ## btstack_main.c:533:5
 1e09806:    41 02             	r1 = [sp+16]			  ## btstack_main.c:575:53
 1e09808:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:575:13
 1e0980c:    80 f3 b4 5f       	call 49000 <ll_hci_adv_set_data : 1e15778 >			  ## btstack_main.c:575:13
 1e09810:    9a 18             	goto 308 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:575:13
 1e09812:    41 02             	r1 = [sp+16]			  ## btstack_main.c:579:67
 1e09814:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:579:13
 1e09818:    80 f3 d9 5f       	call 49074 <ll_hci_adv_scan_response_set_data : 1e157ce >			  ## btstack_main.c:579:13
 1e0981c:    94 18             	goto 296 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:579:13
 1e0981e:    18 f5 10 00       	[sp+16] = r8			  ## btstack_main.c:617:21
 1e09822:    30 02             	r0 = [sp+12]			  ## btstack_main.c:620:21
 1e09824:    90 20             	if (r0 == 0) goto 288 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:620:21
 1e09826:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:621:21
 1e0982a:    20 04             	r0 = r0.l (u)			  ## btstack_main.c:621:21
 1e0982c:    80 f3 85 60       	call 49418 <ll_hci_disconnect : 1e1593a >			  ## btstack_main.c:621:21
 1e09830:    8a 18             	goto 276 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:621:21
 1e09832:    30 02             	r0 = [sp+12]			  ## btstack_main.c:601:63
 1e09834:    10 f6 b0 50       	[r5 + 176] = r0			  ## btstack_main.c:601:53
 1e09838:    86 18             	goto 268 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:601:53
 1e0983a:    bf f3 81 e6       	call -13054 <att_get_default_conn_handle : 1e06540 >			  ## btstack_main.c:606:39
 1e0983e:    81 f5 0c 00       	r1 = h[sp+12] (u)			  ## btstack_main.c:606:17
 1e09842:    b0 16             	call -672 <att_send_set_mtu_size : 1e095a4 >			  ## btstack_main.c:606:17
 1e09844:    80 18             	goto 256 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:606:17
 1e09846:    40 02             	r0 = [sp+16]			  ## btstack_main.c:687:68
 1e09848:    0d f7 06 00       	r13 = h[r0 + 6] (u)			  ## btstack_main.c:689:94
 1e0984c:    27 50             	r7 = h[r0 + 4] (u)			  ## btstack_main.c:689:71
 1e0984e:    16 50             	r6 = h[r0 + 2] (u)			  ## btstack_main.c:688:113
 1e09850:    04 50             	r4 = h[r0 + 0] (u)			  ## btstack_main.c:688:85
 1e09852:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## l2cap.c:2087:39
 1e09856:    bf f3 3c e8       	call -12168 <le_hci_connection_for_handle : 1e068d2 >			  ## l2cap.c:2087:39
 1e0985a:    75 20             	if (r0 == 0) goto 234 <.GJTIE633_1_1_+0x66 : 1e09946 >
 1e0985c:    9c 51             	h[r0 + 50] = r4			  ## l2cap.c:2092:38
 1e0985e:    ae 51             	h[r0 + 52] = r6			  ## l2cap.c:2093:38
 1e09860:    bf 51             	h[r0 + 54] = r7			  ## l2cap.c:2094:33
 1e09862:    1d f7 38 00       	h[r0 + 56] = r13			  ## l2cap.c:2095:40
 1e09866:    1c f6 2c 00       	[r0 + 44] = r12			  ## l2cap.c:2096:47
 1e0986a:    01 f9 00 90       	r1 = b[r9 + 0] (u)			  ## l2cap.c:2097:50
 1e0986e:    11 f9 30 00       	b[r0 + 48] = r1			  ## l2cap.c:2097:48
 1e09872:    bf f3 17 f0       	call -8146 <l2cap_run : 1e078a4 >			  ## l2cap.c:2098:5
 1e09876:    00 f9 00 90       	r0 = b[r9 + 0] (u)			  ## l2cap.c:2100:39
 1e0987a:    10 80             	r0 += 1			  ## l2cap.c:2100:39
 1e0987c:    10 f9 00 90       	b[r9 + 0] = r0			  ## l2cap.c:2101:40
 1e09880:    62 18             	goto 196 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## l2cap.c:2101:40
 1e09882:    11 70             	r1 = 1
 1e09884:    49 02             	[sp+16] = r1			  ## btstack_main.c:587:21
 1e09886:    34 18             	goto 104 <.GJTIE633_1_1_+0x10 : 1e098f0 >			  ## btstack_main.c:587:21
 1e09888:    30 02             	r0 = [sp+12]			  ## btstack_main.c:628:64
 1e0988a:    61 90             	r1 = r0 + 6			  ## btstack_main.c:630:79
 1e0988c:    80 f3 65 60       	call 49354 <ll_hci_create_conn : 1e1595a >			  ## btstack_main.c:630:17
 1e09890:    5a 18             	goto 180 <.GJTIE633_1_1_+0x66 : 1e09946 >
 1e09892:    80 f3 d2 60       	call 49572 <ll_hci_create_conn_cancel : 1e15a3a >			  ## btstack_main.c:643:17
 1e09896:    57 18             	goto 174 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:643:17
 1e09898:    61 02             	r1 = [sp+24]			  ## btstack_main.c:571:72
 1e0989a:    83 f9 01 10       	r3 = b[r1 ++= 1] (u)			  ## btstack_main.c:542:5
 1e0989e:    c2 f5 10 00       	r2 = b[sp+16] (u)			  ## btstack_main.c:542:5
 1e098a2:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:542:5
 1e098a6:    c4 f5 14 00       	r4 = b[sp+20] (u)			  ## btstack_main.c:542:5
 1e098aa:    1c 02             	[sp+4] = r4			  ## btstack_main.c:542:5
 1e098ac:    09 02             	[sp] = r1
 1e098ae:    01 08             	r1 = r0
 1e098b0:    80 f3 2a 5f       	call 48724 <ll_hci_adv_set_params : 1e15708 >
 1e098b4:    48 18             	goto 144 <.GJTIE633_1_1_+0x66 : 1e09946 >
 1e098b6:    c1 f5 10 00       	r1 = b[sp+16] (u)			  ## btstack_main.c:650:17
 1e098ba:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:650:17
 1e098be:    80 f3 c4 60       	call 49544 <ll_hci_vendor_send_key_num : 1e15a4a >			  ## btstack_main.c:650:17
 1e098c2:    41 18             	goto 130 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:650:17
 1e098c4:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:655:17
 1e098c8:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:655:17
 1e098cc:    80 f3 cd 60       	call 49562 <ll_vendor_latency_hold_cnt : 1e15a6a >			  ## btstack_main.c:655:17
 1e098d0:    3a 18             	goto 116 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:655:17
 1e098d2:    30 02             	r0 = [sp+12]			  ## btstack_main.c:583:37
 1e098d4:    30 e0 37 80       	if (r0 > 3) goto 110 <.GJTIE633_1_1_+0x66 : 1e09946 >
 1e098d8:    41 02             	r1 = [sp+16]			  ## btstack_main.c:583:46
 1e098da:    a0 00             	tbb [r0]


.GJTIS633_1_1_:
 1e098dc:    02     < 2 : 0x2 >
 1e098dd:    1d     < 29 : 0x1D >
 1e098de:    25     < 37 : 0x25 >
 1e098df:    2d     < 45 : 0x2D >
 1e098e0:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:831:42
 1e098e4:    21 fd 03 19       	r1 = r1 & 3			  ## btstack_main.c:831:42
 1e098e8:    30 fd 03 09       	r0 = r0 & 4294967292			  ## btstack_main.c:831:42
 1e098ec:    29 18             	goto 82 <.GJTIE633_1_1_+0x60 : 1e09940 >			  ## btstack_main.c:831:42
 1e098ee:    41 02             	r1 = [sp+16]
 1e098f0:    c0 f5 0c 00       	r0 = b[sp+12] (u)			  ## btstack_main.c:590:17
 1e098f4:    41 04             	r1 = r1.b0 (u)			  ## btstack_main.c:590:17
 1e098f6:    80 f3 10 60       	call 49184 <ll_hci_scan_enable : 1e1591a >			  ## btstack_main.c:590:17
 1e098fa:    25 18             	goto 74 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:590:17
 1e098fc:    80 f3 03 02       	call 1030 <att_server_send_request : 1e09d06 >			  ## btstack_main.c:667:17
 1e09900:    22 18             	goto 68 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:667:17
 1e09902:    81 f5 10 00       	r1 = h[sp+16] (u)			  ## btstack_main.c:612:17
 1e09906:    80 f5 0c 00       	r0 = h[sp+12] (u)			  ## btstack_main.c:612:17
 1e0990a:    4c 16             	call -872 <att_send_set_mtu_size : 1e095a4 >			  ## btstack_main.c:612:17
 1e0990c:    1c 18             	goto 56 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:612:17
 1e0990e:    30 02             	r0 = [sp+12]			  ## btstack_main.c:636:48
 1e09910:    80 f3 80 60       	call 49408 <ll_hci_create_conn_ext : 1e15a14 >			  ## btstack_main.c:636:17
 1e09914:    18 18             	goto 48 <.GJTIE633_1_1_+0x66 : 1e09946 >			  ## btstack_main.c:636:17
 1e09916:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:835:43
 1e0991a:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## btstack_main.c:835:43
 1e0991e:    89 c0             	r1 = r1 << 2			  ## btstack_main.c:835:43
 1e09920:    21 fd 0c 19       	r1 = r1 & 12			  ## btstack_main.c:835:43
 1e09924:    0d 18             	goto 26 <.GJTIE633_1_1_+0x60 : 1e09940 >			  ## btstack_main.c:835:43
 1e09926:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:839:44
 1e0992a:    30 fd 30 09       	r0 = r0 & 4294967247			  ## btstack_main.c:839:44
 1e0992e:    09 c1             	r1 = r1 << 4			  ## btstack_main.c:839:44
 1e09930:    21 fd 30 19       	r1 = r1 & 48			  ## btstack_main.c:839:44
 1e09934:    05 18             	goto 10 <.GJTIE633_1_1_+0x60 : 1e09940 >			  ## btstack_main.c:839:44
 1e09936:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## btstack_main.c:843:49
 1e0993a:    89 c1             	r1 = r1 << 6			  ## btstack_main.c:843:49
 1e0993c:    20 fd 3f 09       	r0 = r0 & 63			  ## btstack_main.c:843:49
 1e09940:    50 b2             	r0 |= r1
 1e09942:    10 f9 00 a0       	b[r10 + 0] = r0
 1e09946:    90 4a             	r0 = [r5 + 36]
 1e09948:    80 f3 0e 05       	call 2588 <system_text_start : 1e0a368 >			  ## btstack_main.c:552:12
 1e0994c:    02 31             	if (r0 != 0) goto -508 <__ble_thread_loop_handler+0x26 : 1e09752 >			  ## btstack_main.c:552:12
 1e0994e:    c6 ff c0 1b 00 00 	r6 = 7104 <att_s_hdl : 1bc0 >
 1e09954:    04 4c             	r4 = [r6 + 0]			  ## att_send.c:622:5
 1e09956:    5e 28             	if (r4 == 0) goto 188 <.GJTIE633_1_1_+0x134 : 1e09a14 >			  ## att_send.c:622:5
 1e09958:    41 fc a4 00       	r1 = r4 + 164
 1e0995c:    e0 62             	r0 = b[r1 + 14] (u)			  ## att_send.c:625:17
 1e0995e:    0c 20             	if (r0 == 0) goto 24 <.GJTIE633_1_1_+0x98 : 1e09978 >			  ## att_send.c:625:17
 1e09960:    23 42             	r3 = [r1 + 8]			  ## att_send.c:626:149
 1e09962:    12 52             	r2 = h[r1 + 2] (u)			  ## att_send.c:626:9
 1e09964:    00 52             	r0 = h[r1 + 0] (u)			  ## att_send.c:626:9
 1e09966:    21 52             	r1 = h[r1 + 4] (u)			  ## att_send.c:626:93
 1e09968:    34 fd f0 1a       	r4 = r1 & 4294905855			  ## att_send.c:626:9
 1e0996c:    09 d3             	r1 = r1 >> 12			  ## att_send.c:626:93
 1e0996e:    0c 02             	[sp] = r4			  ## att_send.c:626:9
 1e09970:    89 16             	call -750 <att_operation_cmd_send : 1e09684 >			  ## att_send.c:626:9
 1e09972:    04 4c             	r4 = [r6 + 0]
 1e09974:    11 70             	r1 = 1
 1e09976:    01 18             	goto 2 <.GJTIE633_1_1_+0x9A : 1e0997a >
 1e09978:    01 70             	r1 = 0
 1e0997a:    00 f6 98 40       	r0 = [r4 + 152]
 1e0997e:    80 f3 f3 04       	call 2534 <system_text_start : 1e0a368 >			  ## att_send.c:630:9
 1e09982:    32 20             	if (r0 == 0) goto 100 <.GJTIE633_1_1_+0x108 : 1e099e8 >			  ## att_send.c:630:9
 1e09984:    08 fb ff 0f       	r8 = 4095 <sys_clock_limit+0x73 : fff >
 1e09988:    00 f9 b2 40       	r0 = b[r4 + 178] (u)			  ## att_send.c:589:21
 1e0998c:    2e 30             	if (r0 != 0) goto 92 <.GJTIE633_1_1_+0x10A : 1e099ea >			  ## att_send.c:589:21
 1e0998e:    00 f6 98 40       	r0 = [r4 + 152]
 1e09992:    80 f3 e9 04       	call 2514 <system_text_start : 1e0a368 >			  ## att_send.c:594:18
 1e09996:    29 20             	if (r0 == 0) goto 82 <.GJTIE633_1_1_+0x10A : 1e099ea >			  ## att_send.c:594:18
 1e09998:    40 fc 80 00       	r0 = r4 + 128			  ## att_send.c:598:28
 1e0999c:    c1 a2             	r1 = sp + 44			  ## att_send.c:598:28
 1e0999e:    62 70             	r2 = 6			  ## att_send.c:598:9
 1e099a0:    80 f3 30 05       	call 2656 <cbuf_read : 1e0a404 >			  ## att_send.c:598:9
 1e099a4:    87 f5 30 00       	r7 = h[sp+48] (u)			  ## att_send.c:599:23
 1e099a8:    34 fd f0 7a       	r4 = r7 & 4294905855			  ## att_send.c:599:23
 1e099ac:    87 f0 08 00       	if ((r7 & r8) == 0) goto 16 <.GJTIE633_1_1_+0xE0 : 1e099c0 >			  ## att_send.c:599:23
 1e099b0:    00 4c             	r0 = [r6 + 0]			  ## att_send.c:600:24
 1e099b2:    01 f6 ac 00       	r1 = [r0 + 172]			  ## att_send.c:600:56
 1e099b6:    00 fc 80 00       	r0 = r0 + 128			  ## att_send.c:600:32
 1e099ba:    42 08             	r2 = r4			  ## att_send.c:600:13
 1e099bc:    80 f3 22 05       	call 2628 <cbuf_read : 1e0a404 >			  ## att_send.c:600:13
 1e099c0:    00 4c             	r0 = [r6 + 0]			  ## att_send.c:603:109
 1e099c2:    03 f6 ac 00       	r3 = [r0 + 172]			  ## att_send.c:603:117
 1e099c6:    82 f5 2e 00       	r2 = h[sp+46] (u)			  ## att_send.c:603:19
 1e099ca:    80 f5 2c 00       	r0 = h[sp+44] (u)			  ## att_send.c:603:19
 1e099ce:    39 d3             	r1 = r7 >> 12			  ## att_send.c:603:75
 1e099d0:    0c 02             	[sp] = r4			  ## att_send.c:603:19
 1e099d2:    58 16             	call -848 <att_operation_cmd_send : 1e09684 >			  ## att_send.c:603:19
 1e099d4:    04 4c             	r4 = [r6 + 0]			  ## att_send.c:603:19
 1e099d6:    70 e5 d7 1f       	if (r0 != 87) goto -82 <.GJTIE633_1_1_+0xA8 : 1e09988 >
 1e099da:    40 fc a4 00       	r0 = r4 + 164			  ## att_send.c:607:29
 1e099de:    c1 a2             	r1 = sp + 44
 1e099e0:    62 70             	r2 = 6			  ## att_send.c:607:13
 1e099e2:    97 f3 7f ea       	call 3134718 <memcpy : 106ee4 >			  ## att_send.c:607:13
 1e099e6:    01 18             	goto 2 <.GJTIE633_1_1_+0x10A : 1e099ea >
 1e099e8:    15 22             	if (r1 == 0) goto 42 <.GJTIE633_1_1_+0x134 : 1e09a14 >
 1e099ea:    14 28             	if (r4 == 0) goto 40 <.GJTIE633_1_1_+0x134 : 1e09a14 >
 1e099ec:    40 fc 60 00       	r0 = r4 + 96			  ## att_send.c:131:37
 1e099f0:    01 70             	r1 = 0			  ## att_send.c:131:37
 1e099f2:    82 f7 04 00       	r2 = h[r0 ++= 4] (u)			  ## att_send.c:131:37
 1e099f6:    02 e4 04 20       	if (r2 >= 64) goto 8 <.GJTIE633_1_1_+0x122 : 1e09a02 >			  ## att_send.c:131:37
 1e099fa:    11 80             	r1 += 1			  ## att_send.c:130:35
 1e099fc:    71 e0 f9 df       	ifs (r1 <= 7) goto -14 <.GJTIE633_1_1_+0x112 : 1e099f2 >
 1e09a00:    09 18             	goto 18 <.GJTIE633_1_1_+0x134 : 1e09a14 >
 1e09a02:    00 f9 b5 50       	r0 = b[r5 + 181] (u)			  ## btstack_main.c:1077:33
 1e09a06:    20 fd 07 09       	r0 = r0 & 7			  ## att_send.c:308:9
 1e09a0a:    20 e0 01 00       	if (r0 == 2) goto 2 <.GJTIE633_1_1_+0x130 : 1e09a10 >			  ## att_send.c:308:9
 1e09a0e:    02 30             	if (r0 != 0) goto 4 <.GJTIE633_1_1_+0x134 : 1e09a14 >
 1e09a10:    80 f3 f1 01       	call 994 <att_server_request_can_send_now_event : 1e09df6 >
 1e09a14:    00 f6 b0 50       	r0 = [r5 + 176]			  ## btstack_main.c:779:30
 1e09a18:    01 20             	if (r0 == 0) goto 2 <.GJTIE633_1_1_+0x13C : 1e09a1c >			  ## btstack_main.c:779:30
 1e09a1a:    80 00             	call r0			  ## btstack_main.c:780:9
 1e09a1c:    00 f9 b4 50       	r0 = b[r5 + 180] (u)			  ## btstack_main.c:783:31
 1e09a20:    20 fd f0 09       	r0 = r0 & 240			  ## btstack_main.c:783:40
 1e09a24:    01 ff a0 00 25 00 	if (r0 != 160) goto 74 <.GJTIE633_1_1_+0x194 : 1e09a74 >			  ## btstack_main.c:783:40
 1e09a2a:    c0 ff 40 18 00 00 	r0 = 6208 <report_irq_stack_end : 1840 >			  ## btstack_linked_list.c:60:12
 1e09a30:    00 40             	r0 = [r0 + 0]			  ## btstack_linked_list.c:60:12
 1e09a32:    20 30             	if (r0 != 0) goto 64 <.GJTIE633_1_1_+0x194 : 1e09a74 >
 1e09a34:    c0 ff fc 1b 00 00 	r0 = 7164 <btstack_stack : 1bfc >			  ## btstack_main.c:787:54
 1e09a3a:    11 40             	r1 = [r0 + 4]			  ## btstack_main.c:787:54
 1e09a3c:    c4 ff 74 1a 00 00 	r4 = 6772 <le_stack_pool : 1a74 >
 1e09a42:    09 48             	[r4 + 0] = r1			  ## btstack_memory.c:439:19
 1e09a44:    20 42             	r0 = [r1 + 8]			  ## btstack_memory.c:445:9
 1e09a46:    05 20             	if (r0 == 0) goto 10 <.GJTIE633_1_1_+0x172 : 1e09a52 >			  ## btstack_memory.c:445:9
 1e09a48:    80 f3 1d 06       	call 3130 <free : 1e0a686 >			  ## btstack_memory.c:446:9
 1e09a4c:    01 48             	r1 = [r4 + 0]			  ## btstack_memory.c:447:9
 1e09a4e:    c2 f4 00 19       	[r1 + 8] = 0			  ## btstack_memory.c:447:53
 1e09a52:    30 42             	r0 = [r1 + 12]			  ## btstack_memory.c:452:9
 1e09a54:    05 20             	if (r0 == 0) goto 10 <.GJTIE633_1_1_+0x180 : 1e09a60 >			  ## btstack_memory.c:452:9
 1e09a56:    80 f3 16 06       	call 3116 <free : 1e0a686 >			  ## btstack_memory.c:453:9
 1e09a5a:    00 48             	r0 = [r4 + 0]			  ## btstack_memory.c:454:9
 1e09a5c:    c3 f4 00 09       	[r0 + 12] = 0			  ## btstack_memory.c:454:47
 1e09a60:    00 f9 b4 50       	r0 = b[r5 + 180] (u)			  ## btstack_main.c:794:34
 1e09a64:    60 ff 0f 09 02 00 	if ((r0 & 15) == 0) goto 4 <.GJTIE633_1_1_+0x18E : 1e09a6e >			  ## btstack_main.c:794:34
 1e09a6a:    80 f3 f1 5d       	call 48098 <ll_hci_destory : 1e15650 >			  ## btstack_main.c:796:13
 1e09a6e:    00 70             	r0 = 0			  ## btstack_main.c:798:39
 1e09a70:    10 f9 b4 50       	b[r5 + 180] = r0			  ## btstack_main.c:798:39
 1e09a74:    1a 0a             	sp += 52
 1e09a76:    5d 01             	{pc, r13-r4} = [sp++]			  ## btstack_main.c:802:1


reverse_bd_addr:
 1e09a78:    52 70             	r2 = 5			  ## utils.c:153:0
 1e09a7a:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## utils.c:124:28
 1e09a7e:    13 fa 00 12       	b[r1+r2] = r3			  ## utils.c:124:26
 1e09a82:    f2 8f             	r2 += -1			  ## utils.c:123:19
 1e09a84:    f2 ef f9 1f       	if (r2 != -1) goto -14 <reverse_bd_addr+0x2 : 1e09a7a >			  ## utils.c:123:5
 1e09a88:    20 00             	rts			  ## utils.c:155:1


l2cap_max_le_mtu:
 1e09a8a:    c0 ff 6c 09 00 00 	r0 = 2412 <le_att_mtu_size : 96c >			  ## l2cap.c:986:0
 1e09a90:    00 50             	r0 = h[r0 + 0] (u)			  ## l2cap.c:988:5
 1e09a92:    20 00             	rts			  ## l2cap.c:988:5


l2cap_release_packet_buffer:
 1e09a94:    c0 ff 40 18 00 00 	r0 = 6208 <report_irq_stack_end : 1840 >			  ## l2cap.c:2119:0
 1e09a9a:    01 70             	r1 = 0			  ## hci_vendor.c:1940:45
 1e09a9c:    11 f9 15 02       	b[r0 + 533] = r1			  ## hci_vendor.c:1940:45
 1e09aa0:    20 00             	rts			  ## l2cap.c:2121:1


btstack_linked_list_empty:
 1e09aa2:    01 08             	r1 = r0			  ## btstack_linked_list.c:59:0
 1e09aa4:    10 70             	r0 = 1			  ## btstack_linked_list.c:60:18
 1e09aa6:    01 22             	if (r1 == 0) goto 2 <btstack_linked_list_empty+0x8 : 1e09aaa >			  ## btstack_linked_list.c:60:18
 1e09aa8:    00 70             	r0 = 0			  ## btstack_linked_list.c:60:18
 1e09aaa:    20 00             	rts			  ## btstack_linked_list.c:60:5


send_sco_disconn:
 1e09aac:    74 01             	[--sp] = {rets, r4}			  ## bt_audio.c:111:0
 1e09aae:    c4 ff 94 09 00 00 	r4 = 2452 <disable_sco_timer : 994 >			  ## bt_audio.c:111:0
 1e09ab4:    00 58             	r0 = h[r4 + 0] (u)			  ## bt_audio.c:113:9
 1e09ab6:    04 20             	if (r0 == 0) goto 8 <send_sco_disconn+0x14 : 1e09ac0 >
 1e09ab8:    80 f3 c7 0d       	call 7054 <sys_timeout_del : 1e0b64a >			  ## bt_audio.c:115:9
 1e09abc:    00 70             	r0 = 0			  ## bt_audio.c:116:27
 1e09abe:    08 58             	h[r4 + 0] = r0			  ## bt_audio.c:116:27
 1e09ac0:    54 01             	{pc, r4} = [sp++]			  ## bt_audio.c:118:1


a2dp_suspend:
 1e09ac2:    00 70             	r0 = 0			  ## a2dp.c:1706:0
 1e09ac4:    20 00             	rts			  ## a2dp.c:1711:1


a2dp_resume:
 1e09ac6:    00 70             	r0 = 0			  ## a2dp.c:1713:0
 1e09ac8:    20 00             	rts			  ## a2dp.c:1718:1


a2dp_release:
 1e09aca:    00 70             	r0 = 0			  ## a2dp.c:1691:0
 1e09acc:    20 00             	rts			  ## a2dp.c:1704:1


__sink_media_close:
 1e09ace:    74 01             	[--sp] = {rets, r4}			  ## a2dp_sink.c:49:0
 1e09ad0:    04 08             	r4 = r0			  ## a2dp_sink.c:49:0
 1e09ad2:    d0 49             	r0 = [r4 + 116]			  ## a2dp_sink.c:52:17
 1e09ad4:    06 20             	if (r0 == 0) goto 12 <__sink_media_close+0x14 : 1e09ae2 >			  ## a2dp_sink.c:52:17
 1e09ad6:    51 40             	r1 = [r0 + 20]			  ## a2dp_sink.c:60:40
 1e09ad8:    02 22             	if (r1 == 0) goto 4 <__sink_media_close+0x10 : 1e09ade >			  ## a2dp_sink.c:60:40
 1e09ada:    40 08             	r0 = r4			  ## a2dp_sink.c:61:9
 1e09adc:    81 00             	call r1			  ## a2dp_sink.c:61:9
 1e09ade:    dd f4 00 49       	[r4 + 116] = 0			  ## a2dp_sink.c:63:18
 1e09ae2:    54 01             	{pc, r4} = [sp++]			  ## a2dp_sink.c:73:1


__sink_channel_open:
 1e09ae4:    75 01             	[--sp] = {rets, r5, r4}			  ## a2dp_sink.c:77:0
 1e09ae6:    15 08             	r5 = r1			  ## a2dp_sink.c:77:0
 1e09ae8:    04 08             	r4 = r0			  ## a2dp_sink.c:77:0
 1e09aea:    08 2a             	if (r5 == 0) goto 16 <__sink_channel_open+0x18 : 1e09afc >			  ## a2dp_sink.c:77:0
 1e09aec:    f0 17             	call -32 <__sink_media_close : 1e09ace >			  ## a2dp_sink.c:80:9
 1e09aee:    25 e0 05 10       	if (r5 != 2) goto 10 <__sink_channel_open+0x18 : 1e09afc >
 1e09af2:    01 f7 68 40       	r1 = h[r4 + 104] (u)			  ## a2dp_sink.c:84:9
 1e09af6:    40 08             	r0 = r4			  ## a2dp_sink.c:84:9
 1e09af8:    80 f3 99 61       	call 49970 <lmp_private_set_a2dp_channel : 1e15e2e >			  ## a2dp_sink.c:84:9
 1e09afc:    00 70             	r0 = 0			  ## a2dp_sink.c:86:5
 1e09afe:    55 01             	{pc, r5, r4} = [sp++]			  ## a2dp_sink.c:86:5


__sink_event_credits:
 1e09b00:    20 00             	rts			  ## a2dp_sink.c:90:0


__sink_media_packet:
 1e09b02:    78 01             	[--sp] = {rets, r8-r4}			  ## a2dp_sink.c:114:0
 1e09b04:    24 08             	r4 = r2			  ## a2dp_sink.c:114:0
 1e09b06:    15 08             	r5 = r1			  ## a2dp_sink.c:114:0
 1e09b08:    06 08             	r6 = r0			  ## a2dp_sink.c:114:0
 1e09b0a:    c4 e0 32 30       	if (r4 < 12) goto 100 <__sink_media_packet+0x70 : 1e09b72 >			  ## a2dp_sink.c:114:0
 1e09b0e:    01 f7 6a 60       	r1 = h[r6 + 106] (u)			  ## a2dp_sink.c:124:32
 1e09b12:    10 70             	r0 = 1			  ## a2dp_sink.c:124:32
 1e09b14:    01 32             	if (r1 != 0) goto 2 <__sink_media_packet+0x16 : 1e09b18 >			  ## a2dp_sink.c:124:32
 1e09b16:    00 70             	r0 = 0			  ## a2dp_sink.c:124:9
 1e09b18:    11 6a             	r1 = b[r5 + 1] (u)			  ## a2dp_sink.c:122:43
 1e09b1a:    02 6a             	r2 = b[r5 + 0] (u)			  ## a2dp_sink.c:122:43
 1e09b1c:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## a2dp_sink.c:122:43
 1e09b20:    91 c0             	r1 = r2 << 2			  ## a2dp_sink.c:122:46
 1e09b22:    21 fd 3c 19       	r1 = r1 & 60			  ## a2dp_sink.c:122:46
 1e09b26:    c1 80             	r1 += 12			  ## a2dp_sink.c:122:33
 1e09b28:    11 b0             	r1 |= 1			  ## a2dp_sink.c:122:50
 1e09b2a:    08 b2             	r8 = r1 + r0			  ## a2dp_sink.c:124:9
 1e09b2c:    84 f2 21 30       	if (r4 < r8) goto 66 <__sink_media_packet+0x70 : 1e09b72 >
 1e09b30:    d0 4d             	r0 = [r6 + 116]			  ## a2dp_sink.c:133:17
 1e09b32:    08 20             	if (r0 == 0) goto 16 <__sink_media_packet+0x42 : 1e09b44 >			  ## a2dp_sink.c:133:17
 1e09b34:    32 40             	r2 = [r0 + 12]			  ## a2dp_sink.c:160:19
 1e09b36:    80 fb 80 05       	r0 = r5 + r8			  ## a2dp_sink.c:160:32
 1e09b3a:    90 fb 80 14       	r1 = r4 - r8			  ## a2dp_sink.c:160:47
 1e09b3e:    61 04             	r1 = r1.l (u)			  ## a2dp_sink.c:160:5
 1e09b40:    18 01             	{rets, r8-r4} = [sp++]			  ## a2dp_sink.c:160:5
 1e09b42:    92 00             	goto r2			  ## a2dp_sink.c:160:5
 1e09b44:    c0 ff 74 62 e0 01 	r0 = 31482484 <btstack_code_start : 1e06274 >
 1e09b4a:    c7 ff 74 62 e0 01 	r7 = 31482484 <btstack_code_start : 1e06274 >
 1e09b50:    07 f2 0d 20       	if (r7 >= r0) goto 26 <__sink_media_packet+0x6C : 1e09b6e >
 1e09b54:    01 f9 7d 60       	r1 = b[r6 + 125] (u)			  ## a2dp_sink.c:136:43
 1e09b58:    02 4e             	r2 = [r7 + 0]			  ## a2dp_sink.c:36:20
 1e09b5a:    12 f2 04 00       	if (r2 == r1) goto 8 <__sink_media_packet+0x64 : 1e09b66 >			  ## a2dp_sink.c:36:20
 1e09b5e:    87 81             	r7 += 24			  ## a2dp_sink.c:35:5
 1e09b60:    07 f2 fa 3f       	if (r7 < r0) goto -12 <__sink_media_packet+0x56 : 1e09b58 >
 1e09b64:    04 18             	goto 8 <__sink_media_packet+0x6C : 1e09b6e >
 1e09b66:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:37:24
 1e09b68:    00 70             	r0 = 0			  ## a2dp_sink.c:37:17
 1e09b6a:    81 00             	call r1			  ## a2dp_sink.c:37:17
 1e09b6c:    03 20             	if (r0 == 0) goto 6 <__sink_media_packet+0x72 : 1e09b74 >			  ## a2dp_sink.c:37:17
 1e09b6e:    dd f4 00 69       	[r6 + 116] = 0			  ## a2dp_sink.c:136:22
 1e09b72:    58 01             	{pc, r8-r4} = [sp++]			  ## a2dp_sink.c:162:1
 1e09b74:    11 4e             	r1 = [r7 + 4]			  ## a2dp_sink.c:40:20
 1e09b76:    10 70             	r0 = 1			  ## a2dp_sink.c:40:13
 1e09b78:    81 00             	call r1			  ## a2dp_sink.c:40:13
 1e09b7a:    df 4d             	[r6 + 116] = r7			  ## a2dp_sink.c:136:22
 1e09b7c:    21 4e             	r1 = [r7 + 8]			  ## a2dp_sink.c:140:23
 1e09b7e:    60 08             	r0 = r6			  ## a2dp_sink.c:140:9
 1e09b80:    81 00             	call r1			  ## a2dp_sink.c:140:9
 1e09b82:    d0 4d             	r0 = [r6 + 116]			  ## a2dp_sink.c:140:9
 1e09b84:    d7 1f             	goto -82 <__sink_media_packet+0x32 : 1e09b34 >			  ## a2dp_sink.c:140:9


__sink_media_suspend:
 1e09b86:    a3 1f             	goto -186 <__sink_media_close : 1e09ace >			  ## a2dp_sink.c:166:0


avctp_suspend:
 1e09b88:    00 70             	r0 = 0			  ## avctp.c:1363:0
 1e09b8a:    20 00             	rts			  ## avctp.c:1378:1


avctp_resume:
 1e09b8c:    00 70             	r0 = 0			  ## avctp.c:1359:0
 1e09b8e:    20 00             	rts			  ## avctp.c:1360:5


avctp_release:
 1e09b90:    00 70             	r0 = 0			  ## avctp.c:1341:0
 1e09b92:    20 00             	rts			  ## avctp.c:1357:1


profile_avctp_at_same_time:
 1e09b94:    20 00             	rts			  ## avctp.c:1221:0


hfp_suspend:
 1e09b96:    00 70             	r0 = 0			  ## hfp_profile.c:2033:0
 1e09b98:    20 00             	rts			  ## hfp_profile.c:2039:1


hfp_resume:
 1e09b9a:    00 70             	r0 = 0			  ## hfp_profile.c:2025:0
 1e09b9c:    20 00             	rts			  ## hfp_profile.c:2031:1


hfp_release:
 1e09b9e:    00 70             	r0 = 0			  ## hfp_profile.c:2008:0
 1e09ba0:    20 00             	rts			  ## hfp_profile.c:2022:1


hid_suspend:
 1e09ba2:    00 70             	r0 = 0			  ## hid.c:807:0
 1e09ba4:    20 00             	rts			  ## hid.c:813:1


hid_resume:
 1e09ba6:    00 70             	r0 = 0			  ## hid.c:798:0
 1e09ba8:    20 00             	rts			  ## hid.c:804:1


hid_release:
 1e09baa:    00 70             	r0 = 0			  ## hid.c:781:0
 1e09bac:    20 00             	rts			  ## hid.c:795:1


spp_suspend:
 1e09bae:    00 70             	r0 = 0			  ## spp_profile.c:356:0
 1e09bb0:    20 00             	rts			  ## spp_profile.c:357:5


spp_resume:
 1e09bb2:    00 70             	r0 = 0			  ## spp_profile.c:352:0
 1e09bb4:    20 00             	rts			  ## spp_profile.c:353:5


spp_release:
 1e09bb6:    00 70             	r0 = 0			  ## spp_profile.c:337:0
 1e09bb8:    20 00             	rts			  ## spp_profile.c:349:1


sdp_suspend:
 1e09bba:    00 70             	r0 = 0			  ## sdp.c:961:0
 1e09bbc:    20 00             	rts			  ## sdp.c:962:5


sdp_resume:
 1e09bbe:    00 70             	r0 = 0			  ## sdp.c:957:0
 1e09bc0:    20 00             	rts			  ## sdp.c:958:5


sdp_release:
 1e09bc2:    00 70             	r0 = 0			  ## sdp.c:933:0
 1e09bc4:    20 00             	rts			  ## sdp.c:954:1


iap_suspend:
 1e09bc6:    00 70             	r0 = 0			  ## iap_profile.c:489:0
 1e09bc8:    20 00             	rts			  ## iap_profile.c:490:5


iap_resume:
 1e09bca:    00 70             	r0 = 0			  ## iap_profile.c:485:0
 1e09bcc:    20 00             	rts			  ## iap_profile.c:486:5


iap_release:
 1e09bce:    00 70             	r0 = 0			  ## iap_profile.c:469:0
 1e09bd0:    20 00             	rts			  ## iap_profile.c:482:1


hci_packet_handler:
 1e09bd2:    7a 01             	[--sp] = {rets, r10-r4}			  ## btstack_task.c:150:0
 1e09bd4:    fc 0b             	sp += -8			  ## btstack_task.c:150:0
 1e09bd6:    24 08             	r4 = r2			  ## btstack_task.c:150:0
 1e09bd8:    15 08             	r5 = r1			  ## btstack_task.c:150:0
 1e09bda:    06 08             	r6 = r0			  ## btstack_task.c:150:0
 1e09bdc:    30 98             	r0 = r4 + 3			  ## btstack_task.c:150:0
 1e09bde:    f2 fd 10 80       	r8 = r0 >> 2			  ## btstack_task.c:150:0
 1e09be2:    c7 ff 38 e0 e0 01 	r7 = 31514680 <update_target_end+0x158 : 1e0e038 >			  ## btstack_task.c:150:0
 1e09be8:    c9 ff 02 00 40 00 	r9 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## btstack_task.c:150:0
 1e09bee:    9a fc ff ff       	r10 = r9 + -1			  ## btstack_task.c:150:0
 1e09bf2:    1f 18             	goto 62 <hci_packet_handler+0x60 : 1e09c32 >			  ## btstack_task.c:150:0
 1e09bf4:    70 08             	r0 = r7			  ## btstack_task.c:156:19
 1e09bf6:    a1 08             	r1 = r10			  ## btstack_task.c:156:19
 1e09bf8:    82 08             	r2 = r8			  ## btstack_task.c:156:19
 1e09bfa:    53 08             	r3 = r5			  ## btstack_task.c:156:19
 1e09bfc:    06 18             	goto 12 <hci_packet_handler+0x38 : 1e09c0a >			  ## btstack_task.c:156:19
 1e09bfe:    0d 02             	[sp] = r5			  ## btstack_task.c:160:20
 1e09c00:    1c 02             	[sp+4] = r4			  ## btstack_task.c:161:20
 1e09c02:    03 a0             	r3 = sp + 0			  ## btstack_task.c:161:20
 1e09c04:    22 70             	r2 = 2			  ## btstack_task.c:162:19
 1e09c06:    70 08             	r0 = r7			  ## btstack_task.c:162:19
 1e09c08:    91 08             	r1 = r9			  ## btstack_task.c:162:19
 1e09c0a:    97 f3 e9 e8       	call 3133906 <os_taskq_post_type : 106de0 >
 1e09c0e:    50 e1 14 10       	if (r0 != 21) goto 40 <hci_packet_handler+0x68 : 1e09c3a >
 1e09c12:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e09c16:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e09c1a:    61 ff ff 09 0d 00 	if ((r0 & 255) != 0) goto 26 <hci_packet_handler+0x68 : 1e09c3a >
 1e09c20:    8f f3 92 ca       	call 2069796 <os_current_task : 3148 >			  ## btstack_task.c:175:21
 1e09c24:    71 08             	r1 = r7			  ## btstack_task.c:175:14
 1e09c26:    97 f3 65 e9       	call 3134154 <strcmp : 106ef4 >			  ## btstack_task.c:175:14
 1e09c2a:    07 20             	if (r0 == 0) goto 14 <hci_packet_handler+0x68 : 1e09c3a >			  ## btstack_task.c:175:14
 1e09c2c:    20 70             	r0 = 2			  ## btstack_task.c:179:9
 1e09c2e:    97 f3 c3 e8       	call 3133830 <os_time_dly : 106db8 >			  ## btstack_task.c:179:9
 1e09c32:    26 e0 e4 0f       	if (r6 == 2) goto -56 <hci_packet_handler+0x2C : 1e09bfe >			  ## btstack_task.c:154:9
 1e09c36:    46 e0 dd 0f       	if (r6 == 4) goto -70 <hci_packet_handler+0x22 : 1e09bf4 >
 1e09c3a:    04 0a             	sp += 8
 1e09c3c:    5a 01             	{pc, r10-r4} = [sp++]


sm_encryption_key_size:
 1e09c3e:    34 00             	[--sp] = rets			  ## sm.c:5083:0
 1e09c40:    bf f3 47 e6       	call -13170 <le_hci_connection_for_handle : 1e068d2 >			  ## sm.c:5074:36
 1e09c44:    01 08             	r1 = r0			  ## sm.c:5074:36
 1e09c46:    13 fc 3c 00       	r3 = r1 + 60			  ## sm.c:5078:22
 1e09c4a:    00 70             	r0 = 0			  ## sm.c:5078:22
 1e09c4c:    02 70             	r2 = 0			  ## sm.c:5075:9
 1e09c4e:    01 22             	if (r1 == 0) goto 2 <sm_encryption_key_size+0x14 : 1e09c52 >			  ## sm.c:5075:9
 1e09c50:    32 08             	r2 = r3			  ## sm.c:5075:9
 1e09c52:    05 22             	if (r1 == 0) goto 10 <sm_encryption_key_size+0x20 : 1e09c5e >
 1e09c54:    41 65             	r1 = b[r2 + 20] (u)			  ## sm.c:5088:19
 1e09c56:    60 ff 0f 19 01 00 	if ((r1 & 15) == 0) goto 2 <sm_encryption_key_size+0x20 : 1e09c5e >			  ## sm.c:5088:19
 1e09c5c:    50 65             	r0 = b[r2 + 21] (u)			  ## sm.c:5091:12
 1e09c5e:    30 00             	pc = [sp++]			  ## sm.c:5092:1


sm_authenticated:
 1e09c60:    34 00             	[--sp] = rets			  ## sm.c:5095:0
 1e09c62:    bf f3 36 e6       	call -13204 <le_hci_connection_for_handle : 1e068d2 >			  ## sm.c:5074:36
 1e09c66:    01 08             	r1 = r0			  ## sm.c:5074:36
 1e09c68:    00 70             	r0 = 0
 1e09c6a:    06 22             	if (r1 == 0) goto 12 <sm_authenticated+0x18 : 1e09c78 >
 1e09c6c:    01 f9 50 10       	r1 = b[r1 + 80] (u)			  ## sm.c:5100:19
 1e09c70:    60 ff 0f 19 01 00 	if ((r1 & 15) == 0) goto 2 <sm_authenticated+0x18 : 1e09c78 >			  ## sm.c:5100:19
 1e09c76:    08 d1             	r0 = r1 >> 4			  ## sm.c:5103:21
 1e09c78:    30 00             	pc = [sp++]			  ## sm.c:5104:1


search_ios_ancs_server:
 1e09c7a:    06 01             	{r6-r4} = [sp++]
 1e09c7c:    00 ff ff 00 28 d0 	if (r0 == 255) goto -24496 <system_code_total_size+0x42 : 1e03cd2 >
 1e09c82:    00 2d             	if (r6 == 0) goto -512 <reverse_bd_addr+0xC : 1e09a84 >
 1e09c84:    12 1e             	goto -988 <.GJTIE633_0_0_+0xEE : 1e098aa >
 1e09c86:    4b 0f             	r3 = r1 * r5
 1e09c88:    a4 99             	r4 = r4 + 26
 1e09c8a:    4e ce             	r6 = r1 <<< 25
 1e09c8c:    b5 31             	if (r0 != 0) goto -150 <hci_packet_handler+0x26 : 1e09bf8 >
 1e09c8e:    f4 05             	r4 = r7.l (s)
 1e09c90:    79 00             	sti r9


att_server_change_profile:
 1e09c92:    c0 ff d8 1c 00 00 	r0 = 7384 <att_global_info : 1cd8 >			  ## att_server.c:685:0
 1e09c98:    c1 ff 98 e1 e0 01 	r1 = 31515032 <trans_profile_data : 1e0e198 >			  ## att_db.c:289:28
 1e09c9e:    49 40             	[r0 + 16] = r1			  ## att_db.c:289:28
 1e09ca0:    20 00             	rts			  ## att_db.c:289:28


att_global_info_init:
 1e09ca2:    c0 ff d8 1c 00 00 	r0 = 7384 <att_global_info : 1cd8 >			  ## att_dispatch.c:75:0
 1e09ca8:    01 70             	r1 = 0			  ## att_dispatch.c:76:5
 1e09caa:    02 74             	r2 = 64			  ## att_dispatch.c:76:5
 1e09cac:    d7 f3 20 e9       	goto 3134016 <memset : 106ef0 >			  ## att_dispatch.c:76:5


att_server_register_packet_handler:
 1e09cb0:    c0 ff d8 1c 00 00 	r0 = 7384 <att_global_info : 1cd8 >			  ## att_server.c:699:0
 1e09cb6:    c1 ff 94 06 e0 01 	r1 = 31458964 <__ble_comm_cbk_packet_handler : 1e00694 >			  ## att_server.c:701:39
 1e09cbc:    d9 40             	[r0 + 52] = r1			  ## att_server.c:701:39
 1e09cbe:    20 00             	rts			  ## att_server.c:703:1


att_server_init:
 1e09cc0:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:658:0
 1e09cc2:    13 08             	r3 = r1			  ## att_server.c:658:0
 1e09cc4:    04 08             	r4 = r0			  ## att_server.c:658:0
 1e09cc6:    c5 ff d8 1c 00 00 	r5 = 7384 <att_global_info : 1cd8 >			  ## att_db.c:317:32
 1e09ccc:    c0 ff be 9e e0 01 	r0 = 31497918 <att_event_packet_handler : 1e09ebe >			  ## att_server.c:666:54
 1e09cd2:    a8 4a             	[r5 + 40] = r0			  ## att_server.c:666:54
 1e09cd4:    50 fc 24 00       	r0 = r5 + 36			  ## att_server.c:666:54
 1e09cd8:    bf f3 a6 e7       	call -12468 <hci_add_event_handler : 1e06c28 >			  ## att_server.c:667:5
 1e09cdc:    c0 ff 6e a0 e0 01 	r0 = 31498350 <att_packet_handler.2286 : 1e0a06e >			  ## att_dispatch.c:156:32
 1e09ce2:    18 4a             	[r5 + 4] = r0			  ## att_dispatch.c:156:32
 1e09ce4:    bf f3 af e7       	call -12450 <l2cap_register_fixed_channel : 1e06c46 >			  ## att_dispatch.c:157:5
 1e09ce8:    c0 ff ea e0 e0 01 	r0 = 31514858 <default_profile_data : 1e0e0ea >			  ## att_db.c:289:28
 1e09cee:    48 4a             	[r5 + 16] = r0			  ## att_db.c:289:28
 1e09cf0:    5c 4a             	[r5 + 20] = r4			  ## att_db.c:312:31
 1e09cf2:    6b 4a             	[r5 + 24] = r3			  ## att_db.c:317:32
 1e09cf4:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:682:1


att_dispatch_server_request_can_send_now_event:
 1e09cf6:    c0 ff d8 1c 00 00 	r0 = 7384 <att_global_info : 1cd8 >			  ## att_dispatch.c:197:0
 1e09cfc:    81 60             	r1 = b[r0 + 8] (u)			  ## att_dispatch.c:198:45
 1e09cfe:    91 b0             	r1 |= 2			  ## att_dispatch.c:198:45
 1e09d00:    89 60             	b[r0 + 8] = r1			  ## att_dispatch.c:198:45
 1e09d02:    ff f3 76 fc       	goto -1812 <l2cap_request_can_send_fix_channel_now_event : 1e095f2 >			  ## att_dispatch.c:199:5


att_server_send_request:
 1e09d06:    f7 1f             	goto -18 <att_dispatch_server_request_can_send_now_event : 1e09cf6 >			  ## att_server.c:795:0


att_server_for_handle:
 1e09d08:    34 00             	[--sp] = rets			  ## att_server.c:83:0
 1e09d0a:    bf f3 e2 e5       	call -13372 <le_hci_connection_for_handle : 1e068d2 >			  ## att_server.c:88:43
 1e09d0e:    01 08             	r1 = r0			  ## att_server.c:88:43
 1e09d10:    12 fc 74 00       	r2 = r1 + 116			  ## att_server.c:92:29
 1e09d14:    00 70             	r0 = 0			  ## att_server.c:92:29
 1e09d16:    01 22             	if (r1 == 0) goto 2 <att_server_for_handle+0x12 : 1e09d1a >			  ## att_server.c:92:29
 1e09d18:    20 08             	r0 = r2			  ## att_server.c:89:9
 1e09d1a:    30 00             	pc = [sp++]			  ## att_server.c:93:1


att_dispatch_server_can_send_now:
 1e09d1c:    ff f3 6f fc       	goto -1826 <l2cap_can_send_fixed_channel_packet_now : 1e095fe >			  ## att_dispatch.c:174:0


att_server_notify:
 1e09d20:    78 01             	[--sp] = {rets, r8-r4}			  ## att_server.c:738:0
 1e09d22:    36 08             	r6 = r3			  ## att_server.c:738:0
 1e09d24:    28 08             	r8 = r2			  ## att_server.c:738:0
 1e09d26:    17 08             	r7 = r1			  ## att_server.c:738:0
 1e09d28:    04 08             	r4 = r0			  ## att_server.c:738:0
 1e09d2a:    ee 17             	call -36 <att_server_for_handle : 1e09d08 >			  ## att_server.c:743:32
 1e09d2c:    05 08             	r5 = r0			  ## att_server.c:743:32
 1e09d2e:    20 2a             	if (r5 == 0) goto 64 <att_server_notify+0x50 : 1e09d70 >
 1e09d30:    40 08             	r0 = r4			  ## att_server.c:748:10
 1e09d32:    f4 17             	call -24 <att_dispatch_server_can_send_now : 1e09d1c >			  ## att_server.c:748:10
 1e09d34:    1f 20             	if (r0 == 0) goto 62 <att_server_notify+0x54 : 1e09d74 >			  ## att_server.c:748:10
 1e09d36:    bf f3 64 fc       	call -1848 <l2cap_reserve_packet_buffer : 1e09602 >			  ## att_server.c:752:5
 1e09d3a:    c3 ff 40 18 00 00 	r3 = 6208 <report_irq_stack_end : 1840 >			  ## att_db.c:1271:5
 1e09d40:    b0 71             	r0 = 27			  ## att_db.c:1283:24
 1e09d42:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1283:24
 1e09d44:    00 97             	r0 = r3 + 16			  ## att_db.c:1283:24
 1e09d46:    11 70             	r1 = 1			  ## att_db.c:1267:5
 1e09d48:    72 08             	r2 = r7			  ## att_db.c:1267:5
 1e09d4a:    bf f3 88 e5       	call -13552 <little_endian_store_16 : 1e0685e >			  ## att_db.c:1267:5
 1e09d4e:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1268:21
 1e09d50:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1268:41
 1e09d54:    46 f2 01 c0       	ifs (r6 > r4) goto 2 <att_server_notify+0x3A : 1e09d5a >
 1e09d58:    64 08             	r4 = r6			  ## att_db.c:1268:9
 1e09d5a:    22 05             	r2 = r4.l (u)			  ## att_db.c:1271:40
 1e09d5c:    30 97             	r0 = r3 + 19			  ## att_db.c:1271:5
 1e09d5e:    81 08             	r1 = r8			  ## att_db.c:1271:5
 1e09d60:    97 f3 c0 e8       	call 3133824 <memcpy : 106ee4 >			  ## att_db.c:1271:5
 1e09d64:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:755:12
 1e09d66:    31 98             	r1 = r4 + 3			  ## att_db.c:1272:22
 1e09d68:    61 04             	r1 = r1.l (u)			  ## att_server.c:755:12
 1e09d6a:    18 01             	{rets, r8-r4} = [sp++]			  ## att_server.c:755:12
 1e09d6c:    ff f3 4b fc       	goto -1898 <l2cap_send_prepared_connectionless : 1e09606 >			  ## att_server.c:755:12
 1e09d70:    20 70             	r0 = 2
 1e09d72:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:756:1
 1e09d74:    70 75             	r0 = 87
 1e09d76:    58 01             	{pc, r8-r4} = [sp++]			  ## att_server.c:756:1


att_server_indicate:
 1e09d78:    79 01             	[--sp] = {rets, r9-r4}			  ## att_server.c:759:0
 1e09d7a:    39 08             	r9 = r3			  ## att_server.c:759:0
 1e09d7c:    28 08             	r8 = r2			  ## att_server.c:759:0
 1e09d7e:    14 08             	r4 = r1			  ## att_server.c:759:0
 1e09d80:    07 08             	r7 = r0			  ## att_server.c:759:0
 1e09d82:    c2 17             	call -124 <att_server_for_handle : 1e09d08 >			  ## att_server.c:764:32
 1e09d84:    05 08             	r5 = r0			  ## att_server.c:764:32
 1e09d86:    32 2a             	if (r5 == 0) goto 100 <att_server_indicate+0x74 : 1e09dec >
 1e09d88:    50 4a             	r0 = [r5 + 20]			  ## att_server.c:769:21
 1e09d8a:    06 79             	r6 = 144			  ## att_server.c:769:21
 1e09d8c:    30 30             	if (r0 != 0) goto 96 <att_server_indicate+0x76 : 1e09dee >			  ## att_server.c:769:21
 1e09d8e:    70 08             	r0 = r7			  ## att_server.c:772:10
 1e09d90:    c5 17             	call -118 <att_dispatch_server_can_send_now : 1e09d1c >			  ## att_server.c:772:10
 1e09d92:    2f 20             	if (r0 == 0) goto 94 <att_server_indicate+0x7A : 1e09df2 >			  ## att_server.c:772:10
 1e09d94:    5c 4a             	[r5 + 20] = r4			  ## att_server.c:777:41
 1e09d96:    06 70             	r6 = 0			  ## att_server.c:777:41
 1e09d98:    7e 4a             	[r5 + 28] = r6			  ## att_server.c:779:5
 1e09d9a:    6e 4a             	[r5 + 24] = r6			  ## att_server.c:779:5
 1e09d9c:    00 fb 30 75       	r0 = 30000 <nvbss_size+0x8F0 : 7530 >			  ## att_server.c:780:57
 1e09da0:    88 4a             	[r5 + 32] = r0			  ## att_server.c:780:57
 1e09da2:    c0 ff be a2 e0 01 	r0 = 31498942 <att_handle_value_indication_timeout : 1e0a2be >			  ## att_server.c:781:48
 1e09da8:    98 4a             	[r5 + 36] = r0			  ## att_server.c:781:48
 1e09daa:    ad 4a             	[r5 + 40] = r5			  ## att_server.c:782:48
 1e09dac:    80 9b             	r0 = r5 + 24			  ## att_server.c:779:25
 1e09dae:    bf f3 50 fc       	call -1888 <btstack_set_timer : 1e09652 >			  ## att_server.c:783:5
 1e09db2:    bf f3 26 fc       	call -1972 <l2cap_reserve_packet_buffer : 1e09602 >			  ## att_server.c:785:5
 1e09db6:    c3 ff 40 18 00 00 	r3 = 6208 <report_irq_stack_end : 1840 >			  ## att_db.c:1271:5
 1e09dbc:    d0 71             	r0 = 29			  ## att_db.c:1295:24
 1e09dbe:    08 67             	b[r3 + 16] = r0			  ## att_db.c:1295:24
 1e09dc0:    00 97             	r0 = r3 + 16			  ## att_db.c:1295:24
 1e09dc2:    11 70             	r1 = 1			  ## att_db.c:1267:5
 1e09dc4:    42 08             	r2 = r4			  ## att_db.c:1267:5
 1e09dc6:    bf f3 4a e5       	call -13676 <little_endian_store_16 : 1e0685e >			  ## att_db.c:1267:5
 1e09dca:    70 5b             	r0 = h[r5 + 46] (u)			  ## att_db.c:1268:21
 1e09dcc:    04 fc fd ff       	r4 = r0 + -3			  ## att_db.c:1268:41
 1e09dd0:    49 f2 01 c0       	ifs (r9 > r4) goto 2 <att_server_indicate+0x5E : 1e09dd6 >
 1e09dd4:    94 08             	r4 = r9			  ## att_db.c:1268:9
 1e09dd6:    22 05             	r2 = r4.l (u)			  ## att_db.c:1271:40
 1e09dd8:    30 97             	r0 = r3 + 19			  ## att_db.c:1271:5
 1e09dda:    81 08             	r1 = r8			  ## att_db.c:1271:5
 1e09ddc:    97 f3 82 e8       	call 3133700 <memcpy : 106ee4 >			  ## att_db.c:1271:5
 1e09de0:    60 5b             	r0 = h[r5 + 44] (u)			  ## att_server.c:788:5
 1e09de2:    31 98             	r1 = r4 + 3			  ## att_db.c:1272:22
 1e09de4:    61 04             	r1 = r1.l (u)			  ## att_server.c:788:5
 1e09de6:    bf f3 0e fc       	call -2020 <l2cap_send_prepared_connectionless : 1e09606 >			  ## att_server.c:788:5
 1e09dea:    01 18             	goto 2 <att_server_indicate+0x76 : 1e09dee >			  ## att_server.c:788:5
 1e09dec:    26 70             	r6 = 2
 1e09dee:    60 08             	r0 = r6			  ## att_server.c:790:1
 1e09df0:    59 01             	{pc, r9-r4} = [sp++]			  ## att_server.c:790:1
 1e09df2:    76 75             	r6 = 87
 1e09df4:    fc 1f             	goto -8 <att_server_indicate+0x76 : 1e09dee >


att_server_request_can_send_now_event:
 1e09df6:    c0 ff d8 1c 00 00 	r0 = 7384 <att_global_info : 1cd8 >			  ## att_server.c:714:0
 1e09dfc:    01 f9 3c 00       	r1 = b[r0 + 60] (u)			  ## att_server.c:717:42
 1e09e00:    11 b0             	r1 |= 1			  ## att_server.c:717:42
 1e09e02:    11 f9 3c 00       	b[r0 + 60] = r1			  ## att_server.c:717:42
 1e09e06:    77 1f             	goto -274 <att_dispatch_server_request_can_send_now_event : 1e09cf6 >			  ## att_server.c:718:9


att_packet_handler:
 1e09e08:    79 01             	[--sp] = {rets, r9-r4}			  ## att_dispatch.c:80:0
 1e09e0a:    34 08             	r4 = r3			  ## att_dispatch.c:80:0
 1e09e0c:    25 08             	r5 = r2			  ## att_dispatch.c:80:0
 1e09e0e:    16 08             	r6 = r1			  ## att_dispatch.c:80:0
 1e09e10:    c9 ff d8 1c 00 00 	r9 = 7384 <att_global_info : 1cd8 >			  ## att_dispatch.c:80:0
 1e09e16:    40 e0 0c 00       	if (r0 == 4) goto 24 <att_packet_handler+0x2A : 1e09e32 >			  ## att_dispatch.c:81:5
 1e09e1a:    80 e0 47 10       	if (r0 != 8) goto 142 <att_packet_handler+0xA4 : 1e09eac >
 1e09e1e:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:84:13
 1e09e20:    20 f3 3b 00       	if ((r0 & 1) != 0) goto 118 <att_packet_handler+0x92 : 1e09e9a >
 1e09e24:    07 f6 04 90       	r7 = [r9 + 4]			  ## att_dispatch.c:96:26
 1e09e28:    3e 3e             	if (r7 != 0) goto 124 <att_packet_handler+0x9E : 1e09ea6 >			  ## att_dispatch.c:96:26
 1e09e2a:    07 f6 00 90       	r7 = [r9 + 0]			  ## att_dispatch.c:98:30
 1e09e2e:    3b 3e             	if (r7 != 0) goto 118 <att_packet_handler+0x9E : 1e09ea6 >			  ## att_dispatch.c:98:30
 1e09e30:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1
 1e09e32:    00 6a             	r0 = b[r5 + 0] (u)			  ## att_dispatch.c:108:13
 1e09e34:    80 e7 3a 10       	if (r0 != 120) goto 116 <att_packet_handler+0xA4 : 1e09eac >
 1e09e38:    07 f9 08 90       	r7 = b[r9 + 8] (u)			  ## att_dispatch.c:108:62
 1e09e3c:    22 f3 36 70       	if ((r7 & 4) != 0) goto 108 <att_packet_handler+0xA4 : 1e09eac >			  ## att_dispatch.c:108:62
 1e09e40:    bf f3 3a f9       	call -3468 <hci_can_send_acl_le_packet_now : 1e090b8 >			  ## att_dispatch.c:112:14
 1e09e44:    33 20             	if (r0 == 0) goto 102 <att_packet_handler+0xA4 : 1e09eac >			  ## att_dispatch.c:112:14
 1e09e46:    00 fd 04 79       	r0 = r7 | 4			  ## att_dispatch.c:117:36
 1e09e4a:    10 f9 08 90       	b[r9 + 8] = r0			  ## att_dispatch.c:117:36
 1e09e4e:    01 f3 0e 70       	if ((r7 & 2) == 0) goto 28 <att_packet_handler+0x66 : 1e09e6e >			  ## att_dispatch.c:117:36
 1e09e52:    07 f6 04 90       	r7 = [r9 + 4]			  ## att_dispatch.c:118:21
 1e09e56:    0b 2e             	if (r7 == 0) goto 22 <att_packet_handler+0x66 : 1e09e6e >			  ## att_dispatch.c:118:21
 1e09e58:    f0 b0             	r0 &= 4294967293			  ## att_dispatch.c:119:53
 1e09e5a:    10 f9 08 90       	b[r9 + 8] = r0			  ## att_dispatch.c:119:53
 1e09e5e:    40 70             	r0 = 4			  ## att_dispatch.c:120:13
 1e09e60:    61 08             	r1 = r6			  ## att_dispatch.c:120:13
 1e09e62:    52 08             	r2 = r5			  ## att_dispatch.c:120:13
 1e09e64:    43 08             	r3 = r4			  ## att_dispatch.c:120:13
 1e09e66:    87 00             	call r7			  ## att_dispatch.c:120:13
 1e09e68:    bf f3 26 f9       	call -3508 <hci_can_send_acl_le_packet_now : 1e090b8 >			  ## att_dispatch.c:122:18
 1e09e6c:    10 20             	if (r0 == 0) goto 32 <att_packet_handler+0x86 : 1e09e8e >			  ## att_dispatch.c:122:18
 1e09e6e:    08 f6 00 90       	r8 = [r9 + 0]			  ## att_dispatch.c:128:21
 1e09e72:    08 e0 0c 00       	if (r8 == 0) goto 24 <att_packet_handler+0x86 : 1e09e8e >			  ## att_dispatch.c:128:21
 1e09e76:    00 f9 08 90       	r0 = b[r9 + 8] (u)			  ## att_dispatch.c:128:51
 1e09e7a:    00 f3 08 00       	if ((r0 & 1) == 0) goto 16 <att_packet_handler+0x86 : 1e09e8e >			  ## att_dispatch.c:128:51
 1e09e7e:    70 b0             	r0 &= 4294967294			  ## att_dispatch.c:129:53
 1e09e80:    10 f9 08 90       	b[r9 + 8] = r0			  ## att_dispatch.c:129:53
 1e09e84:    40 70             	r0 = 4			  ## att_dispatch.c:130:13
 1e09e86:    61 08             	r1 = r6			  ## att_dispatch.c:130:13
 1e09e88:    52 08             	r2 = r5			  ## att_dispatch.c:130:13
 1e09e8a:    43 08             	r3 = r4			  ## att_dispatch.c:130:13
 1e09e8c:    88 00             	call r8			  ## att_dispatch.c:130:13
 1e09e8e:    00 f9 08 90       	r0 = b[r9 + 8] (u)
 1e09e92:    70 b1             	r0 &= 4294967291
 1e09e94:    10 f9 08 90       	b[r9 + 8] = r0
 1e09e98:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1
 1e09e9a:    07 f6 00 90       	r7 = [r9 + 0]			  ## att_dispatch.c:86:26
 1e09e9e:    03 3e             	if (r7 != 0) goto 6 <att_packet_handler+0x9E : 1e09ea6 >			  ## att_dispatch.c:86:26
 1e09ea0:    07 f6 04 90       	r7 = [r9 + 4]			  ## att_dispatch.c:87:29
 1e09ea4:    03 2e             	if (r7 == 0) goto 6 <att_packet_handler+0xA4 : 1e09eac >			  ## att_dispatch.c:87:29
 1e09ea6:    80 70             	r0 = 8
 1e09ea8:    87 00             	call r7
 1e09eaa:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1
 1e09eac:    59 01             	{pc, r9-r4} = [sp++]			  ## att_dispatch.c:138:1


att_run_for_context:
 1e09eae:    34 00             	[--sp] = rets			  ## att_server.c:445:0
 1e09eb0:    01 40             	r1 = [r0 + 0]			  ## att_server.c:446:25
 1e09eb2:    11 e0 03 10       	if (r1 != 1) goto 6 <att_run_for_context+0xE : 1e09ebc >			  ## att_server.c:446:25
 1e09eb6:    c0 f4 03 09       	[r0 + 0] = 3			  ## att_server.c:492:27
 1e09eba:    1d 17             	call -454 <att_dispatch_server_request_can_send_now_event : 1e09cf6 >			  ## att_server.c:493:9
 1e09ebc:    30 00             	pc = [sp++]			  ## att_server.c:499:1


att_event_packet_handler:
 1e09ebe:    76 01             	[--sp] = {rets, r6-r4}			  ## att_server.c:176:0
 1e09ec0:    24 08             	r4 = r2			  ## att_server.c:176:0
 1e09ec2:    40 e0 91 10       	if (r0 != 4) goto 290 <.GJTIE640_0_0_+0xDA : 1e09fe8 >			  ## att_server.c:176:0
 1e09ec6:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:176:0
 1e09ec8:    d0 e3 19 c0       	ifs (r0 > 61) goto 50 <att_event_packet_handler+0x40 : 1e09efe >			  ## att_server.c:191:9
 1e09ecc:    50 e0 28 00       	if (r0 == 5) goto 80 <.GJTIE640_0_0_+0x12 : 1e09f20 >
 1e09ed0:    80 e0 02 00       	if (r0 == 8) goto 4 <att_event_packet_handler+0x1A : 1e09ed8 >
 1e09ed4:    00 e3 88 10       	if (r0 != 48) goto 272 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09ed8:    31 70             	r1 = 3			  ## att_server.c:229:26
 1e09eda:    40 08             	r0 = r4			  ## att_server.c:229:26
 1e09edc:    bf f3 4c e2       	call -15208 <little_endian_read_16 : 1e06378 >			  ## att_server.c:229:26
 1e09ee0:    04 08             	r4 = r0			  ## att_server.c:229:26
 1e09ee2:    12 17             	call -476 <att_server_for_handle : 1e09d08 >			  ## att_server.c:230:26
 1e09ee4:    05 08             	r5 = r0			  ## att_server.c:230:26
 1e09ee6:    80 2a             	if (r5 == 0) goto 256 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09ee8:    40 08             	r0 = r4			  ## att_server.c:234:58
 1e09eea:    bf f3 a8 fe       	call -688 <sm_encryption_key_size : 1e09c3e >			  ## att_server.c:234:58
 1e09eee:    10 f9 32 50       	b[r5 + 50] = r0			  ## att_server.c:234:56
 1e09ef2:    40 08             	r0 = r4			  ## att_server.c:235:52
 1e09ef4:    bf f3 b4 fe       	call -664 <sm_authenticated : 1e09c60 >			  ## att_server.c:235:52
 1e09ef8:    10 f9 33 50       	b[r5 + 51] = r0			  ## att_server.c:235:50
 1e09efc:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e09efe:    01 fc 28 ff       	r1 = r0 + -216
 1e09f02:    41 e0 18 80       	if (r1 > 4) goto 48 <.GJTIE640_0_0_+0x28 : 1e09f36 >
 1e09f06:    a1 00             	tbb [r1]


.GJTIS640_0_0_:
 1e09f08:    03     < 3 : 0x3 >
 1e09f09:    49     < 73 : 0x49 >
 1e09f0a:    55     < 85 : 0x55 >
 1e09f0b:    70     < 112 : 0x70 >
 1e09f0c:    66     < 102 : 0x66 >
 1e09f0d:    00     < 0 : 0x0 >
 1e09f0e:    21 70             	r1 = 2			  ## btstack_event.h:2856:16
 1e09f10:    40 08             	r0 = r4			  ## btstack_event.h:2856:16
 1e09f12:    bf f3 31 e2       	call -15262 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:2856:16
 1e09f16:    f8 16             	call -528 <att_server_for_handle : 1e09d08 >			  ## att_server.c:254:26
 1e09f18:    67 20             	if (r0 == 0) goto 206 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09f1a:    c4 f4 01 09       	[r0 + 16] = 1			  ## att_server.c:259:42
 1e09f1e:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e09f20:    31 70             	r1 = 3			  ## btstack_event.h:324:16
 1e09f22:    40 08             	r0 = r4			  ## btstack_event.h:324:16
 1e09f24:    bf f3 28 e2       	call -15280 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:324:16
 1e09f28:    ef 16             	call -546 <att_server_for_handle : 1e09d08 >			  ## att_server.c:242:26
 1e09f2a:    5e 20             	if (r0 == 0) goto 188 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09f2c:    01 70             	r1 = 0
 1e09f2e:    69 51             	h[r0 + 44] = r1			  ## att_server.c:247:47
 1e09f30:    59 40             	[r0 + 20] = r1			  ## att_server.c:248:49
 1e09f32:    09 40             	[r0 + 0] = r1			  ## att_server.c:249:31
 1e09f34:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e09f36:    e0 e3 57 10       	if (r0 != 62) goto 174 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09f3a:    20 68             	r0 = b[r4 + 2] (u)			  ## att_server.c:194:21
 1e09f3c:    10 e0 54 10       	if (r0 != 1) goto 168 <.GJTIE640_0_0_+0xDA : 1e09fe8 >			  ## att_server.c:194:21
 1e09f40:    41 70             	r1 = 4			  ## att_server.c:196:30
 1e09f42:    40 08             	r0 = r4			  ## att_server.c:196:30
 1e09f44:    bf f3 18 e2       	call -15312 <little_endian_read_16 : 1e06378 >			  ## att_server.c:196:30
 1e09f48:    06 08             	r6 = r0			  ## att_server.c:196:30
 1e09f4a:    de 16             	call -580 <att_server_for_handle : 1e09d08 >			  ## att_server.c:197:30
 1e09f4c:    05 08             	r5 = r0			  ## att_server.c:197:30
 1e09f4e:    4c 2a             	if (r5 == 0) goto 152 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09f50:    70 68             	r0 = b[r4 + 7] (u)			  ## att_server.c:202:46
 1e09f52:    48 6a             	b[r5 + 4] = r0			  ## att_server.c:202:44
 1e09f54:    80 98             	r0 = r4 + 8			  ## att_server.c:203:34
 1e09f56:    51 9a             	r1 = r5 + 5			  ## att_server.c:203:45
 1e09f58:    bf f3 8e fd       	call -1252 <reverse_bd_addr : 1e09a78 >			  ## att_server.c:203:17
 1e09f5c:    6e 5b             	h[r5 + 44] = r6			  ## att_server.c:204:51
 1e09f5e:    c0 ff d8 1c 00 00 	r0 = 7384 <att_global_info : 1cd8 >			  ## att_db.c:297:24
 1e09f64:    40 40             	r0 = [r0 + 16]			  ## att_db.c:297:24
 1e09f66:    e8 4a             	[r5 + 56] = r0			  ## att_server.c:205:48
 1e09f68:    01 70             	r1 = 0			  ## att_server.c:205:48
 1e09f6a:    09 4a             	[r5 + 0] = r1			  ## att_server.c:208:35
 1e09f6c:    70 71             	r0 = 23			  ## att_server.c:209:44
 1e09f6e:    78 5b             	h[r5 + 46] = r0			  ## att_server.c:209:44
 1e09f70:    bf f3 8b fd       	call -1258 <l2cap_max_le_mtu : 1e09a8a >			  ## att_server.c:210:50
 1e09f74:    03 ff 05 02 02 00 	if (r0 < 517) goto 4 <.GJTIE640_0_0_+0x70 : 1e09f7e >			  ## att_server.c:210:50
 1e09f7a:    00 fb 05 02       	r0 = 517 <BTCTLER_CL_RAM_TOTAL+0x21 : 205 >			  ## att_server.c:211:21
 1e09f7e:    88 5b             	h[r5 + 48] = r0			  ## att_server.c:210:48
 1e09f80:    50 fc 30 00       	r0 = r5 + 48			  ## att_server.c:210:48
 1e09f84:    29 60             	b[r0 + 2] = r1			  ## att_server.c:214:60
 1e09f86:    39 60             	b[r0 + 3] = r1			  ## att_server.c:215:54
 1e09f88:    49 60             	b[r0 + 4] = r1			  ## att_server.c:216:51
 1e09f8a:    c3 f4 ff 5f       	[r5 + 12] = 4294967295			  ## att_server.c:217:51
 1e09f8e:    00 f9 43 52       	r0 = b[r5 + 579] (u)			  ## att_server.c:218:44
 1e09f92:    70 b0             	r0 &= 4294967294			  ## att_server.c:218:44
 1e09f94:    10 f9 43 52       	b[r5 + 579] = r0			  ## att_server.c:218:44
 1e09f98:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1
 1e09f9a:    21 70             	r1 = 2			  ## btstack_event.h:2889:16
 1e09f9c:    40 08             	r0 = r4			  ## btstack_event.h:2889:16
 1e09f9e:    bf f3 eb e1       	call -15402 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:2889:16
 1e09fa2:    b2 16             	call -668 <att_server_for_handle : 1e09d08 >			  ## att_server.c:274:26
 1e09fa4:    21 20             	if (r0 == 0) goto 66 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09fa6:    c4 f4 00 09       	[r0 + 16] = 0			  ## att_server.c:279:42
 1e09faa:    c3 f4 ff 0f       	[r0 + 12] = 4294967295			  ## att_server.c:280:47
 1e09fae:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:281:13
 1e09fb0:    7e 1f             	goto -260 <att_run_for_context : 1e09eae >			  ## att_server.c:281:13
 1e09fb2:    21 70             	r1 = 2			  ## btstack_event.h:2922:16
 1e09fb4:    40 08             	r0 = r4			  ## btstack_event.h:2922:16
 1e09fb6:    bf f3 df e1       	call -15426 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:2922:16
 1e09fba:    a6 16             	call -692 <att_server_for_handle : 1e09d08 >			  ## att_server.c:263:26
 1e09fbc:    02 08             	r2 = r0			  ## att_server.c:263:26
 1e09fbe:    14 24             	if (r2 == 0) goto 40 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09fc0:    c4 f4 00 29       	[r2 + 16] = 0			  ## att_server.c:267:42
 1e09fc4:    21 71             	r1 = 18			  ## btstack_event.h:2972:16
 1e09fc6:    40 08             	r0 = r4			  ## btstack_event.h:2972:16
 1e09fc8:    bf f3 d6 e1       	call -15444 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:2972:16
 1e09fcc:    38 44             	[r2 + 12] = r0			  ## att_server.c:268:47
 1e09fce:    20 08             	r0 = r2			  ## att_server.c:270:13
 1e09fd0:    16 01             	{rets, r6-r4} = [sp++]			  ## att_server.c:270:13
 1e09fd2:    6d 1f             	goto -294 <att_run_for_context : 1e09eae >			  ## att_server.c:270:13
 1e09fd4:    21 70             	r1 = 2			  ## btstack_event.h:3018:16
 1e09fd6:    40 08             	r0 = r4			  ## btstack_event.h:3018:16
 1e09fd8:    bf f3 ce e1       	call -15460 <little_endian_read_16 : 1e06378 >			  ## btstack_event.h:3018:16
 1e09fdc:    95 16             	call -726 <att_server_for_handle : 1e09d08 >			  ## att_server.c:285:26
 1e09fde:    04 20             	if (r0 == 0) goto 8 <.GJTIE640_0_0_+0xDA : 1e09fe8 >
 1e09fe0:    b1 68             	r1 = b[r4 + 11] (u)			  ## btstack_event.h:3048:16
 1e09fe2:    11 f9 34 00       	b[r0 + 52] = r1			  ## att_server.c:289:47
 1e09fe6:    87 16             	call -754 <att_dispatch_server_request_can_send_now_event : 1e09cf6 >			  ## att_server.c:290:13
 1e09fe8:    56 01             	{pc, r6-r4} = [sp++]			  ## att_server.c:300:1


att_emit_mtu_event:
 1e09fea:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:133:0
 1e09fec:    fc 0b             	sp += -8			  ## att_server.c:133:0
 1e09fee:    c5 ff d8 1c 00 00 	r5 = 7384 <att_global_info : 1cd8 >			  ## att_server.c:133:0
 1e09ff4:    d4 4a             	r4 = [r5 + 52]			  ## att_server.c:134:18
 1e09ff6:    13 08             	r3 = r1			  ## att_server.c:134:18
 1e09ff8:    02 08             	r2 = r0
 1e09ffa:    15 28             	if (r4 == 0) goto 42 <att_emit_mtu_event+0x3C : 1e0a026 >
 1e09ffc:    50 7b             	r0 = 181			  ## att_server.c:140:18
 1e09ffe:    d0 f5 02 00       	b[sp+2] = r0			  ## att_server.c:140:18
 1e0a002:    40 70             	r0 = 4			  ## att_server.c:140:18
 1e0a004:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:141:18
 1e0a008:    24 a0             	r4 = sp + 2			  ## att_server.c:141:18
 1e0a00a:    21 70             	r1 = 2			  ## att_server.c:142:5
 1e0a00c:    40 08             	r0 = r4			  ## att_server.c:142:5
 1e0a00e:    bf f3 26 e4       	call -14260 <little_endian_store_16 : 1e0685e >			  ## att_server.c:142:5
 1e0a012:    41 70             	r1 = 4			  ## att_server.c:144:5
 1e0a014:    32 08             	r2 = r3			  ## att_server.c:144:5
 1e0a016:    bf f3 22 e4       	call -14268 <little_endian_store_16 : 1e0685e >			  ## att_server.c:144:5
 1e0a01a:    d5 4a             	r5 = [r5 + 52]			  ## att_server.c:145:13
 1e0a01c:    40 70             	r0 = 4			  ## att_server.c:145:5
 1e0a01e:    01 70             	r1 = 0			  ## att_server.c:145:5
 1e0a020:    63 70             	r3 = 6			  ## att_server.c:145:5
 1e0a022:    42 08             	r2 = r4			  ## att_server.c:145:5
 1e0a024:    85 00             	call r5			  ## att_server.c:145:5
 1e0a026:    04 0a             	sp += 8
 1e0a028:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:146:1


att_handle_value_indication_notify_client:
 1e0a02a:    75 01             	[--sp] = {rets, r5, r4}			  ## att_server.c:116:0
 1e0a02c:    fc 0b             	sp += -8			  ## att_server.c:116:0
 1e0a02e:    c5 ff d8 1c 00 00 	r5 = 7384 <att_global_info : 1cd8 >			  ## att_server.c:116:0
 1e0a034:    d4 4a             	r4 = [r5 + 52]			  ## att_server.c:117:18
 1e0a036:    23 08             	r3 = r2			  ## att_server.c:117:18
 1e0a038:    12 08             	r2 = r1
 1e0a03a:    17 28             	if (r4 == 0) goto 46 <att_handle_value_indication_notify_client+0x40 : 1e0a06a >
 1e0a03c:    61 7b             	r1 = 182			  ## att_server.c:123:18
 1e0a03e:    d1 f5 01 00       	b[sp+1] = r1			  ## att_server.c:123:18
 1e0a042:    51 70             	r1 = 5			  ## att_server.c:123:18
 1e0a044:    d1 f5 02 00       	b[sp+2] = r1			  ## att_server.c:124:18
 1e0a048:    d0 f5 03 00       	b[sp+3] = r0			  ## att_server.c:125:18
 1e0a04c:    14 a0             	r4 = sp + 1			  ## att_server.c:125:18
 1e0a04e:    31 70             	r1 = 3			  ## att_server.c:126:5
 1e0a050:    40 08             	r0 = r4			  ## att_server.c:126:5
 1e0a052:    bf f3 04 e4       	call -14328 <little_endian_store_16 : 1e0685e >			  ## att_server.c:126:5
 1e0a056:    51 70             	r1 = 5			  ## att_server.c:128:5
 1e0a058:    32 08             	r2 = r3			  ## att_server.c:128:5
 1e0a05a:    bf f3 00 e4       	call -14336 <little_endian_store_16 : 1e0685e >			  ## att_server.c:128:5
 1e0a05e:    d5 4a             	r5 = [r5 + 52]			  ## att_server.c:129:13
 1e0a060:    40 70             	r0 = 4			  ## att_server.c:129:5
 1e0a062:    01 70             	r1 = 0			  ## att_server.c:129:5
 1e0a064:    73 70             	r3 = 7			  ## att_server.c:129:5
 1e0a066:    42 08             	r2 = r4			  ## att_server.c:129:5
 1e0a068:    85 00             	call r5			  ## att_server.c:129:5
 1e0a06a:    04 0a             	sp += 8
 1e0a06c:    55 01             	{pc, r5, r4} = [sp++]			  ## att_server.c:130:1


att_packet_handler.2286:
 1e0a06e:    7c 01             	[--sp] = {rets, r12-r4}			  ## att_server.c:568:0
 1e0a070:    f8 0b             	sp += -16			  ## att_server.c:568:0
 1e0a072:    35 08             	r5 = r3			  ## att_server.c:568:0
 1e0a074:    24 08             	r4 = r2			  ## att_server.c:568:0
 1e0a076:    c7 ff d8 1c 00 00 	r7 = 7384 <att_global_info : 1cd8 >			  ## att_server.c:568:0
 1e0a07c:    80 e0 bf 00       	if (r0 == 8) goto 382 <att_packet_handler.2286+0x190 : 1e0a1fe >			  ## att_server.c:572:5
 1e0a080:    40 e0 1b 11       	if (r0 != 4) goto 566 <att_packet_handler.2286+0x24C : 1e0a2ba >
 1e0a084:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:575:13
 1e0a086:    80 e7 18 11       	if (r0 != 120) goto 560 <att_packet_handler.2286+0x24C : 1e0a2ba >
 1e0a08a:    00 a0             	r0 = sp + 0
 1e0a08c:    bf f3 06 ec       	call -10228 <hci_connections_get_iterator : 1e0789c >			  ## att_server.c:510:5
 1e0a090:    bf f3 01 e4       	call -14334 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## att_server.c:511:12
 1e0a094:    99 20             	if (r0 == 0) goto 306 <att_packet_handler.2286+0x15A : 1e0a1c8 >			  ## att_server.c:511:12
 1e0a096:    cb ff 40 18 00 00 	r11 = 6208 <report_irq_stack_end : 1840 >
 1e0a09c:    0a 70             	r10 = 0
 1e0a09e:    c8 ff 7a 9c e0 01 	r8 = 31497338 <search_ios_ancs_server : 1e09c7a >
 1e0a0a4:    29 70             	r9 = 2
 1e0a0a6:    00 a0             	r0 = sp + 0
 1e0a0a8:    bf f3 03 e4       	call -14330 <btstack_linked_list_iterator_next : 1e068b2 >			  ## att_server.c:512:67
 1e0a0ac:    06 fc 74 00       	r6 = r0 + 116
 1e0a0b0:    e1 4c             	r1 = [r6 + 56]			  ## att_server.c:515:51
 1e0a0b2:    39 4e             	[r7 + 12] = r1			  ## att_db.c:306:24
 1e0a0b4:    01 f9 b7 02       	r1 = b[r0 + 695] (u)			  ## att_server.c:517:25
 1e0a0b8:    20 f3 82 10       	if ((r1 & 1) != 0) goto 260 <att_packet_handler.2286+0x152 : 1e0a1c0 >			  ## att_server.c:517:25
 1e0a0bc:    02 4c             	r2 = [r6 + 0]			  ## att_server.c:521:25
 1e0a0be:    03 fc a0 00       	r3 = r0 + 160			  ## att_server.c:521:25
 1e0a0c2:    6c fc 42 02       	r12 = r6 + 578			  ## att_server.c:521:25
 1e0a0c6:    32 e0 1d 10       	if (r2 != 3) goto 58 <att_packet_handler.2286+0x96 : 1e0a104 >			  ## att_server.c:521:13
 1e0a0ca:    65 fc 2c 00       	r5 = r6 + 44			  ## att_server.c:515:40
 1e0a0ce:    bf f3 98 fa       	call -2768 <l2cap_reserve_packet_buffer : 1e09602 >			  ## att_server.c:393:5
 1e0a0d2:    82 56             	r2 = h[r3 + 16] (u)			  ## att_server.c:395:37
 1e0a0d4:    64 fc 2e 00       	r4 = r6 + 46			  ## att_server.c:395:37
 1e0a0d8:    01 99             	r1 = r4 + 16			  ## att_server.c:395:81
 1e0a0da:    b3 fc 10 00       	r3 = r11 + 16			  ## att_server.c:395:37
 1e0a0de:    50 08             	r0 = r5			  ## att_server.c:395:37
 1e0a0e0:    bf f3 f3 d6       	call -21018 <att_handle_request : 1e04eca >			  ## att_server.c:395:37
 1e0a0e4:    01 08             	r1 = r0			  ## att_server.c:395:37
 1e0a0e6:    41 e0 2a 30       	if (r1 < 4) goto 84 <att_packet_handler.2286+0xD0 : 1e0a13e >			  ## att_server.c:399:9
 1e0a0ea:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:399:13
 1e0a0ee:    10 e0 37 10       	if (r0 != 1) goto 110 <att_packet_handler.2286+0xF2 : 1e0a160 >			  ## att_server.c:399:13
 1e0a0f2:    00 f9 14 b0       	r0 = b[r11 + 20] (u)			  ## att_server.c:400:9
 1e0a0f6:    80 e0 33 10       	if (r0 != 8) goto 102 <att_packet_handler.2286+0xF2 : 1e0a160 >			  ## att_server.c:400:9
 1e0a0fa:    50 68             	r0 = b[r4 + 5] (u)			  ## att_server.c:401:36
 1e0a0fc:    31 20             	if (r0 == 0) goto 98 <att_packet_handler.2286+0xF2 : 1e0a160 >			  ## att_server.c:401:36
 1e0a0fe:    bf f3 c9 fc       	call -1646 <l2cap_release_packet_buffer : 1e09a94 >			  ## att_server.c:405:13
 1e0a102:    5e 18             	goto 188 <att_packet_handler.2286+0x152 : 1e0a1c0 >			  ## att_server.c:405:13
 1e0a104:    25 f3 5c 10       	if ((r1 & 32) != 0) goto 184 <att_packet_handler.2286+0x152 : 1e0a1c0 >
 1e0a108:    21 f3 3f 10       	if ((r1 & 2) != 0) goto 126 <att_packet_handler.2286+0x11C : 1e0a18a >
 1e0a10c:    20 fd 1c 19       	r0 = r1 & 28			  ## att_server.c:535:36
 1e0a110:    40 e0 56 10       	if (r0 != 4) goto 172 <att_packet_handler.2286+0x152 : 1e0a1c0 >			  ## att_server.c:535:36
 1e0a114:    bf f3 75 fa       	call -2838 <l2cap_reserve_packet_buffer : 1e09602 >			  ## att_server.c:370:10
 1e0a118:    52 20             	if (r0 == 0) goto 164 <att_packet_handler.2286+0x150 : 1e0a1be >			  ## att_server.c:370:10
 1e0a11a:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:375:5
 1e0a11e:    72 71             	r2 = 23			  ## att_server.c:375:5
 1e0a120:    81 08             	r1 = r8			  ## att_server.c:375:5
 1e0a122:    97 f3 df e6       	call 3132862 <memcpy : 106ee4 >			  ## att_server.c:375:5
 1e0a126:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:377:9
 1e0a128:    71 71             	r1 = 23			  ## att_server.c:377:9
 1e0a12a:    bf f3 6c fa       	call -2856 <l2cap_send_prepared_connectionless : 1e09606 >			  ## att_server.c:377:9
 1e0a12e:    3d 30             	if (r0 != 0) goto 122 <att_packet_handler.2286+0x13C : 1e0a1aa >			  ## att_server.c:377:9
 1e0a130:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## att_server.c:382:34
 1e0a134:    20 fd c3 09       	r0 = r0 & 195			  ## att_server.c:382:34
 1e0a138:    00 fd 28 09       	r0 = r0 | 40			  ## att_server.c:537:46
 1e0a13c:    3e 18             	goto 124 <att_packet_handler.2286+0x14C : 1e0a1ba >			  ## att_server.c:537:46
 1e0a13e:    1a f6 00 60       	[r6 + 0] = r10			  ## att_server.c:419:23
 1e0a142:    10 32             	if (r1 != 0) goto 32 <att_packet_handler.2286+0xF6 : 1e0a164 >			  ## att_server.c:419:23
 1e0a144:    bf f3 a6 fc       	call -1716 <l2cap_release_packet_buffer : 1e09a94 >			  ## att_server.c:422:9
 1e0a148:    00 69             	r0 = b[r4 + 16] (u)			  ## att_server.c:425:13
 1e0a14a:    30 e0 39 10       	if (r0 != 3) goto 114 <att_packet_handler.2286+0x152 : 1e0a1c0 >			  ## att_server.c:425:13
 1e0a14e:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## att_server.c:426:38
 1e0a152:    f0 b2             	r0 &= 4294967263			  ## att_server.c:426:38
 1e0a154:    10 f9 01 c0       	b[r12 + 1] = r0			  ## att_server.c:426:38
 1e0a158:    01 58             	r1 = h[r4 + 0] (u)			  ## att_server.c:428:13
 1e0a15a:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:428:13
 1e0a15c:    46 17             	call -372 <att_emit_mtu_event : 1e09fea >			  ## att_server.c:428:13
 1e0a15e:    30 18             	goto 96 <att_packet_handler.2286+0x152 : 1e0a1c0 >			  ## att_server.c:428:13
 1e0a160:    1a f6 00 60       	[r6 + 0] = r10			  ## att_server.c:419:23
 1e0a164:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:433:5
 1e0a166:    bf f3 4e fa       	call -2916 <l2cap_send_prepared_connectionless : 1e09606 >			  ## att_server.c:433:5
 1e0a16a:    00 f9 10 b0       	r0 = b[r11 + 16] (u)			  ## att_server.c:437:9
 1e0a16e:    30 e0 03 10       	if (r0 != 3) goto 6 <att_packet_handler.2286+0x10A : 1e0a178 >			  ## att_server.c:437:9
 1e0a172:    01 58             	r1 = h[r4 + 0] (u)			  ## att_server.c:439:9
 1e0a174:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:439:9
 1e0a176:    39 17             	call -398 <att_emit_mtu_event : 1e09fea >			  ## att_server.c:439:9
 1e0a178:    00 f9 3c 70       	r0 = b[r7 + 60] (u)			  ## att_server.c:525:34
 1e0a17c:    20 f3 3d 00       	if ((r0 & 1) != 0) goto 122 <att_packet_handler.2286+0x18C : 1e0a1fa >			  ## att_server.c:525:34
 1e0a180:    e0 4e             	r0 = [r7 + 56]
 1e0a182:    bf f3 8e fc       	call -1764 <btstack_linked_list_empty : 1e09aa2 >			  ## att_server.c:525:63
 1e0a186:    1c 30             	if (r0 != 0) goto 56 <att_packet_handler.2286+0x152 : 1e0a1c0 >			  ## att_server.c:525:63
 1e0a188:    38 18             	goto 112 <att_packet_handler.2286+0x18C : 1e0a1fa >			  ## att_server.c:525:63
 1e0a18a:    bf f3 3a fa       	call -2956 <l2cap_reserve_packet_buffer : 1e09602 >			  ## att_server.c:331:10
 1e0a18e:    17 20             	if (r0 == 0) goto 46 <att_packet_handler.2286+0x150 : 1e0a1be >			  ## att_server.c:331:10
 1e0a190:    19 f9 10 b0       	b[r11 + 16] = r9			  ## att_server.c:335:16
 1e0a194:    22 56             	r2 = h[r3 + 4] (u)			  ## att_server.c:336:5
 1e0a196:    b0 fc 10 00       	r0 = r11 + 16			  ## att_server.c:335:16
 1e0a19a:    11 70             	r1 = 1			  ## att_server.c:336:5
 1e0a19c:    bf f3 5f e3       	call -14658 <little_endian_store_16 : 1e0685e >			  ## att_server.c:336:5
 1e0a1a0:    00 56             	r0 = h[r3 + 0] (u)			  ## att_server.c:337:9
 1e0a1a2:    31 70             	r1 = 3			  ## att_server.c:337:9
 1e0a1a4:    bf f3 2f fa       	call -2978 <l2cap_send_prepared_connectionless : 1e09606 >			  ## att_server.c:337:9
 1e0a1a8:    03 20             	if (r0 == 0) goto 6 <att_packet_handler.2286+0x142 : 1e0a1b0 >			  ## att_server.c:337:9
 1e0a1aa:    bf f3 73 fc       	call -1818 <l2cap_release_packet_buffer : 1e09a94 >
 1e0a1ae:    07 18             	goto 14 <att_packet_handler.2286+0x150 : 1e0a1be >
 1e0a1b0:    00 f9 01 c0       	r0 = b[r12 + 1] (u)			  ## att_server.c:342:34
 1e0a1b4:    20 fd dd 09       	r0 = r0 & 221			  ## att_server.c:342:34
 1e0a1b8:    90 b2             	r0 |= 32			  ## att_server.c:532:46
 1e0a1ba:    10 f9 01 c0       	b[r12 + 1] = r0
 1e0a1be:    9b 15             	call -1226 <att_dispatch_server_request_can_send_now_event : 1e09cf6 >
 1e0a1c0:    00 a0             	r0 = sp + 0
 1e0a1c2:    bf f3 68 e3       	call -14640 <btstack_linked_list_iterator_has_next : 1e06896 >			  ## att_server.c:511:12
 1e0a1c6:    6f 31             	if (r0 != 0) goto -290 <att_packet_handler.2286+0x38 : 1e0a0a6 >
 1e0a1c8:    e3 4e             	r3 = [r7 + 56]
 1e0a1ca:    30 08             	r0 = r3			  ## att_server.c:544:13
 1e0a1cc:    bf f3 69 fc       	call -1838 <btstack_linked_list_empty : 1e09aa2 >			  ## att_server.c:544:13
 1e0a1d0:    46 30             	if (r0 != 0) goto 140 <att_packet_handler.2286+0x1F0 : 1e0a25e >			  ## att_server.c:544:13
 1e0a1d2:    44 56             	r4 = h[r3 + 8] (u)			  ## att_server.c:552:14
 1e0a1d4:    70 fc 38 00       	r0 = r7 + 56			  ## att_server.c:548:9
 1e0a1d8:    31 08             	r1 = r3			  ## att_server.c:548:9
 1e0a1da:    bf f3 23 e2       	call -15290 <btstack_linked_list_remove : 1e06624 >			  ## att_server.c:548:9
 1e0a1de:    20 46             	r0 = [r3 + 8]			  ## att_server.c:549:34
 1e0a1e0:    11 46             	r1 = [r3 + 4]			  ## att_server.c:549:17
 1e0a1e2:    81 00             	call r1			  ## att_server.c:549:9
 1e0a1e4:    40 08             	r0 = r4			  ## att_server.c:552:14
 1e0a1e6:    9a 15             	call -1228 <att_dispatch_server_can_send_now : 1e09d1c >			  ## att_server.c:552:14
 1e0a1e8:    ef 31             	if (r0 != 0) goto -34 <att_packet_handler.2286+0x15A : 1e0a1c8 >			  ## att_server.c:552:14
 1e0a1ea:    e0 4e             	r0 = [r7 + 56]
 1e0a1ec:    bf f3 59 fc       	call -1870 <btstack_linked_list_empty : 1e09aa2 >			  ## att_server.c:553:18
 1e0a1f0:    04 20             	if (r0 == 0) goto 8 <att_packet_handler.2286+0x18C : 1e0a1fa >			  ## att_server.c:553:18
 1e0a1f2:    00 f9 3c 70       	r0 = b[r7 + 60] (u)			  ## att_server.c:553:77
 1e0a1f6:    00 f3 60 00       	if ((r0 & 1) == 0) goto 192 <att_packet_handler.2286+0x24C : 1e0a2ba >			  ## att_server.c:553:77
 1e0a1fa:    7d 15             	call -1286 <att_dispatch_server_request_can_send_now_event : 1e09cf6 >
 1e0a1fc:    5e 18             	goto 188 <att_packet_handler.2286+0x24C : 1e0a2ba >
 1e0a1fe:    10 08             	r0 = r1			  ## att_server.c:583:22
 1e0a200:    83 15             	call -1274 <att_server_for_handle : 1e09d08 >			  ## att_server.c:583:22
 1e0a202:    06 08             	r6 = r0			  ## att_server.c:583:22
 1e0a204:    5a 2c             	if (r6 == 0) goto 180 <att_packet_handler.2286+0x24C : 1e0a2ba >
 1e0a206:    e0 4c             	r0 = [r6 + 56]			  ## att_server.c:589:51
 1e0a208:    38 4e             	[r7 + 12] = r0			  ## att_db.c:306:24
 1e0a20a:    00 68             	r0 = b[r4 + 0] (u)			  ## att_server.c:592:13
 1e0a20c:    20 e5 39 00       	if (r0 == 82) goto 114 <att_packet_handler.2286+0x214 : 1e0a282 >			  ## att_server.c:592:56
 1e0a210:    e0 e1 0b 10       	if (r0 != 30) goto 22 <att_packet_handler.2286+0x1BC : 1e0a22a >
 1e0a214:    51 4c             	r1 = [r6 + 20]			  ## att_server.c:592:71
 1e0a216:    09 22             	if (r1 == 0) goto 18 <att_packet_handler.2286+0x1BC : 1e0a22a >			  ## att_server.c:592:71
 1e0a218:    70 4c             	r0 = [r6 + 28]
 1e0a21a:    bf f3 b2 f7       	call -4252 <btstack_run_loop_remove_timer : 1e09182 >			  ## att_server.c:160:5
 1e0a21e:    a2 5c             	r2 = h[r6 + 20] (u)			  ## att_server.c:596:13
 1e0a220:    00 70             	r0 = 0			  ## att_server.c:596:13
 1e0a222:    58 4c             	[r6 + 20] = r0			  ## att_server.c:595:49
 1e0a224:    61 5d             	r1 = h[r6 + 44] (u)			  ## att_server.c:596:13
 1e0a226:    01 17             	call -510 <att_handle_value_indication_notify_client : 1e0a02a >			  ## att_server.c:596:13
 1e0a228:    48 18             	goto 144 <att_packet_handler.2286+0x24C : 1e0a2ba >			  ## att_server.c:596:13
 1e0a22a:    08 ff 05 52 45 00 	if (r5 > 517) goto 138 <att_packet_handler.2286+0x24C : 1e0a2ba >
 1e0a230:    01 4c             	r1 = [r6 + 0]			  ## att_server.c:615:25
 1e0a232:    43 32             	if (r1 != 0) goto 134 <att_packet_handler.2286+0x24C : 1e0a2ba >			  ## att_server.c:615:25
 1e0a234:    61 fc 40 02       	r1 = r6 + 576
 1e0a238:    32 62             	r2 = b[r1 + 3] (u)			  ## att_server.c:620:30
 1e0a23a:    23 fd 1c 29       	r3 = r2 & 28			  ## att_server.c:620:30
 1e0a23e:    83 e0 31 10       	if (r3 != 8) goto 98 <att_packet_handler.2286+0x236 : 1e0a2a4 >			  ## att_server.c:620:30
 1e0a242:    10 e0 26 00       	if (r0 == 1) goto 76 <att_packet_handler.2286+0x224 : 1e0a292 >			  ## att_server.c:621:13
 1e0a246:    70 e0 2d 10       	if (r0 != 7) goto 90 <att_packet_handler.2286+0x236 : 1e0a2a4 >
 1e0a24a:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:625:46
 1e0a24e:    00 fd 14 09       	r0 = r0 | 20			  ## att_server.c:625:46
 1e0a252:    38 62             	b[r1 + 3] = r0			  ## att_server.c:626:42
 1e0a254:    12 42             	r2 = [r1 + 4]			  ## att_server.c:627:33
 1e0a256:    26 24             	if (r2 == 0) goto 76 <att_packet_handler.2286+0x236 : 1e0a2a4 >			  ## att_server.c:627:33
 1e0a258:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:628:21
 1e0a25a:    21 70             	r1 = 2			  ## att_server.c:628:21
 1e0a25c:    22 18             	goto 68 <att_packet_handler.2286+0x234 : 1e0a2a2 >			  ## att_server.c:628:21
 1e0a25e:    00 f9 3c 70       	r0 = b[r7 + 60] (u)			  ## att_server.c:560:17
 1e0a262:    00 f3 2a 00       	if ((r0 & 1) == 0) goto 84 <att_packet_handler.2286+0x24C : 1e0a2ba >			  ## att_server.c:560:17
 1e0a266:    70 b0             	r0 &= 4294967294			  ## att_server.c:561:42
 1e0a268:    10 f9 3c 70       	b[r7 + 60] = r0			  ## att_server.c:561:42
 1e0a26c:    d4 4e             	r4 = [r7 + 52]			  ## att_server.c:150:18
 1e0a26e:    25 28             	if (r4 == 0) goto 74 <att_packet_handler.2286+0x24C : 1e0a2ba >			  ## att_server.c:150:18
 1e0a270:    70 7b             	r0 = 183			  ## att_server.c:154:13
 1e0a272:    90 f5 0e 00       	h[sp+14] = r0			  ## att_server.c:154:13
 1e0a276:    e2 a0             	r2 = sp + 14			  ## att_server.c:154:13
 1e0a278:    40 70             	r0 = 4			  ## att_server.c:155:5
 1e0a27a:    01 70             	r1 = 0			  ## att_server.c:155:5
 1e0a27c:    23 70             	r3 = 2			  ## att_server.c:155:5
 1e0a27e:    84 00             	call r4			  ## att_server.c:155:5
 1e0a280:    1c 18             	goto 56 <att_packet_handler.2286+0x24C : 1e0a2ba >			  ## att_server.c:155:5
 1e0a282:    60 fc 2c 00       	r0 = r6 + 44			  ## att_server.c:589:40
 1e0a286:    03 70             	r3 = 0			  ## att_server.c:604:13
 1e0a288:    41 08             	r1 = r4			  ## att_server.c:604:13
 1e0a28a:    52 08             	r2 = r5			  ## att_server.c:604:13
 1e0a28c:    bf f3 1d d6       	call -21446 <att_handle_request : 1e04eca >			  ## att_server.c:604:13
 1e0a290:    14 18             	goto 40 <att_packet_handler.2286+0x24C : 1e0a2ba >			  ## att_server.c:604:13
 1e0a292:    20 fd c3 29       	r0 = r2 & 195			  ## att_server.c:635:46
 1e0a296:    10 b2             	r0 |= 16			  ## att_server.c:635:46
 1e0a298:    38 62             	b[r1 + 3] = r0			  ## att_server.c:636:42
 1e0a29a:    12 42             	r2 = [r1 + 4]			  ## att_server.c:637:33
 1e0a29c:    03 24             	if (r2 == 0) goto 6 <att_packet_handler.2286+0x236 : 1e0a2a4 >			  ## att_server.c:637:33
 1e0a29e:    60 5d             	r0 = h[r6 + 44] (u)			  ## att_server.c:638:21
 1e0a2a0:    11 70             	r1 = 1			  ## att_server.c:638:21
 1e0a2a2:    82 00             	call r2
 1e0a2a4:    c0 f4 01 69       	[r6 + 0] = 1			  ## att_server.c:648:27
 1e0a2a8:    ed 5d             	h[r6 + 60] = r5			  ## att_server.c:649:34
 1e0a2aa:    60 fc 3e 00       	r0 = r6 + 62			  ## att_server.c:650:9
 1e0a2ae:    41 08             	r1 = r4			  ## att_server.c:650:9
 1e0a2b0:    52 08             	r2 = r5			  ## att_server.c:650:9
 1e0a2b2:    97 f3 17 e6       	call 3132462 <memcpy : 106ee4 >			  ## att_server.c:650:9
 1e0a2b6:    60 08             	r0 = r6			  ## att_server.c:652:9
 1e0a2b8:    fa 15             	call -1036 <att_run_for_context : 1e09eae >			  ## att_server.c:652:9
 1e0a2ba:    08 0a             	sp += 16
 1e0a2bc:    5c 01             	{pc, r12-r4} = [sp++]			  ## att_server.c:655:1


att_handle_value_indication_timeout:
 1e0a2be:    34 00             	[--sp] = rets			  ## att_server.c:164:0
 1e0a2c0:    40 40             	r0 = [r0 + 16]			  ## att_server.c:165:52
 1e0a2c2:    04 20             	if (r0 == 0) goto 8 <att_handle_value_indication_timeout+0xE : 1e0a2cc >
 1e0a2c4:    61 51             	r1 = h[r0 + 44] (u)			  ## att_server.c:172:5
 1e0a2c6:    a2 50             	r2 = h[r0 + 20] (u)			  ## att_server.c:172:5
 1e0a2c8:    10 79             	r0 = 145			  ## att_server.c:172:5
 1e0a2ca:    af 16             	call -674 <att_handle_value_indication_notify_client : 1e0a02a >			  ## att_server.c:172:5
 1e0a2cc:    30 00             	pc = [sp++]			  ## att_server.c:173:1


gatt_client_write_value_of_characteristic_without_response:
 1e0a2ce:    77 01             	[--sp] = {rets, r7-r4}			  ## gatt_client.c:2084:0
 1e0a2d0:    c4 ff 18 1d 00 00 	r4 = 7448 <gatt_client_global_info : 1d18 >			  ## gatt_client.c:2084:0
 1e0a2d6:    01 48             	r1 = [r4 + 0]			  ## gatt_client.c:2084:0
 1e0a2d8:    05 08             	r5 = r0			  ## gatt_client.c:2084:0
 1e0a2da:    05 22             	if (r1 == 0) goto 10 <gatt_client_write_value_of_characteristic_without_response+0x18 : 1e0a2e6 >			  ## gatt_client.c:2084:0
 1e0a2dc:    60 52             	r0 = h[r1 + 12] (u)			  ## gatt_client.c:207:25
 1e0a2de:    50 f2 19 00       	if (r0 == r5) goto 50 <gatt_client_write_value_of_characteristic_without_response+0x46 : 1e0a314 >			  ## gatt_client.c:207:25
 1e0a2e2:    01 42             	r1 = [r1 + 0]
 1e0a2e4:    fb 33             	if (r1 != 0) goto -10 <gatt_client_write_value_of_characteristic_without_response+0xE : 1e0a2dc >
 1e0a2e6:    bf f3 c2 f9       	call -3196 <btstack_memory_gatt_client_get : 1e0966e >			  ## gatt_client.c:224:15
 1e0a2ea:    06 08             	r6 = r0			  ## gatt_client.c:224:15
 1e0a2ec:    13 2c             	if (r6 == 0) goto 38 <gatt_client_write_value_of_characteristic_without_response+0x46 : 1e0a314 >			  ## gatt_client.c:224:15
 1e0a2ee:    01 70             	r1 = 0			  ## gatt_client.c:229:5
 1e0a2f0:    02 78             	r2 = 128			  ## gatt_client.c:229:5
 1e0a2f2:    07 70             	r7 = 0			  ## gatt_client.c:229:5
 1e0a2f4:    97 f3 fc e5       	call 3132408 <memset : 106ef0 >			  ## gatt_client.c:229:5
 1e0a2f8:    6d 5c             	h[r6 + 12] = r5			  ## gatt_client.c:230:25
 1e0a2fa:    70 71             	r0 = 23			  ## gatt_client.c:231:18
 1e0a2fc:    b8 5c             	h[r6 + 22] = r0			  ## gatt_client.c:231:18
 1e0a2fe:    6f 4c             	[r6 + 24] = r7			  ## gatt_client.c:232:24
 1e0a300:    1f 4c             	[r6 + 4] = r7			  ## gatt_client.c:233:32
 1e0a302:    40 08             	r0 = r4			  ## gatt_client.c:234:5
 1e0a304:    61 08             	r1 = r6			  ## gatt_client.c:234:5
 1e0a306:    bf f3 0e ed       	call -9700 <btstack_linked_list_add : 1e07d26 >			  ## gatt_client.c:234:5
 1e0a30a:    40 69             	r0 = b[r4 + 20] (u)			  ## gatt_client.c:237:17
 1e0a30c:    03 20             	if (r0 == 0) goto 6 <gatt_client_write_value_of_characteristic_without_response+0x46 : 1e0a314 >			  ## gatt_client.c:237:17
 1e0a30e:    c6 f4 02 69       	[r6 + 24] = 2			  ## gatt_client.c:238:28
 1e0a312:    57 01             	{pc, r7-r4} = [sp++]			  ## gatt_client.c:238:28
 1e0a314:    57 01             	{pc, r7-r4} = [sp++]


gatt_client_sync_mtu:
 1e0a316:    75 01             	[--sp] = {rets, r5, r4}			  ## gatt_client.c:2545:0
 1e0a318:    fc 0b             	sp += -8			  ## gatt_client.c:2545:0
 1e0a31a:    c5 ff 18 1d 00 00 	r5 = 7448 <gatt_client_global_info : 1d18 >			  ## gatt_client.c:2545:0
 1e0a320:    04 4a             	r4 = [r5 + 0]			  ## gatt_client.c:2545:0
 1e0a322:    13 08             	r3 = r1			  ## gatt_client.c:2545:0
 1e0a324:    02 08             	r2 = r0			  ## gatt_client.c:2545:0
 1e0a326:    1e 28             	if (r4 == 0) goto 60 <gatt_client_sync_mtu+0x4E : 1e0a364 >			  ## gatt_client.c:2545:0
 1e0a328:    60 58             	r0 = h[r4 + 12] (u)			  ## gatt_client.c:207:25
 1e0a32a:    20 f2 03 00       	if (r0 == r2) goto 6 <gatt_client_sync_mtu+0x1E : 1e0a334 >			  ## gatt_client.c:207:25
 1e0a32e:    04 48             	r4 = [r4 + 0]
 1e0a330:    fb 39             	if (r4 != 0) goto -10 <gatt_client_sync_mtu+0x12 : 1e0a328 >
 1e0a332:    18 18             	goto 48 <gatt_client_sync_mtu+0x4E : 1e0a364 >
 1e0a334:    bb 58             	h[r4 + 22] = r3			  ## gatt_client.c:2556:21
 1e0a336:    40 4a             	r0 = [r5 + 16]			  ## gatt_client.c:111:18
 1e0a338:    15 20             	if (r0 == 0) goto 42 <gatt_client_sync_mtu+0x4E : 1e0a364 >			  ## gatt_client.c:111:18
 1e0a33a:    50 7b             	r0 = 181			  ## gatt_client.c:116:18
 1e0a33c:    d0 f5 02 00       	b[sp+2] = r0			  ## gatt_client.c:116:18
 1e0a340:    40 70             	r0 = 4			  ## gatt_client.c:116:18
 1e0a342:    d0 f5 03 00       	b[sp+3] = r0			  ## gatt_client.c:117:18
 1e0a346:    24 a0             	r4 = sp + 2			  ## gatt_client.c:117:18
 1e0a348:    21 70             	r1 = 2			  ## gatt_client.c:118:5
 1e0a34a:    40 08             	r0 = r4			  ## gatt_client.c:118:5
 1e0a34c:    bf f3 87 e2       	call -15090 <little_endian_store_16 : 1e0685e >			  ## gatt_client.c:118:5
 1e0a350:    41 70             	r1 = 4			  ## gatt_client.c:120:5
 1e0a352:    32 08             	r2 = r3			  ## gatt_client.c:120:5
 1e0a354:    bf f3 83 e2       	call -15098 <little_endian_store_16 : 1e0685e >			  ## gatt_client.c:120:5
 1e0a358:    45 4a             	r5 = [r5 + 16]			  ## gatt_client.c:121:15
 1e0a35a:    40 70             	r0 = 4			  ## gatt_client.c:121:5
 1e0a35c:    01 70             	r1 = 0			  ## gatt_client.c:121:5
 1e0a35e:    63 70             	r3 = 6			  ## gatt_client.c:121:5
 1e0a360:    42 08             	r2 = r4			  ## gatt_client.c:121:5
 1e0a362:    85 00             	call r5			  ## gatt_client.c:121:5
 1e0a364:    04 0a             	sp += 8
 1e0a366:    55 01             	{pc, r5, r4} = [sp++]


system_text_start:
 1e0a368:    20 00             	rts			  ## circular_buf.c:327:0


cbuf_write:
 1e0a36a:    77 01             	[--sp] = {rets, r7-r4}			  ## circular_buf.c:127:0
 1e0a36c:    24 08             	r4 = r2			  ## circular_buf.c:127:0
 1e0a36e:    16 08             	r6 = r1			  ## circular_buf.c:127:0
 1e0a370:    05 08             	r5 = r0			  ## circular_buf.c:127:0
 1e0a372:    09 2a             	if (r5 == 0) goto 18 <cbuf_write+0x1C : 1e0a386 >			  ## circular_buf.c:127:0
 1e0a374:    97 f3 12 e5       	call 3131940 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0a378:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:138:40
 1e0a37a:    71 4a             	r1 = [r5 + 28]			  ## circular_buf.c:138:19
 1e0a37c:    20 b2             	r0 = r1 - r0			  ## circular_buf.c:138:29
 1e0a37e:    40 f2 04 20       	if (r0 >= r4) goto 8 <cbuf_write+0x20 : 1e0a38a >			  ## circular_buf.c:138:9
 1e0a382:    97 f3 09 e5       	call 3131922 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0a386:    04 70             	r4 = 0
 1e0a388:    21 18             	goto 66 <cbuf_write+0x62 : 1e0a3cc >
 1e0a38a:    30 4a             	r0 = [r5 + 12]			  ## circular_buf.c:143:48
 1e0a38c:    11 4a             	r1 = [r5 + 4]			  ## circular_buf.c:143:28
 1e0a38e:    27 b2             	r7 = r1 - r0			  ## circular_buf.c:143:32
 1e0a390:    47 f2 0c 20       	if (r7 >= r4) goto 24 <cbuf_write+0x42 : 1e0a3ac >
 1e0a394:    61 08             	r1 = r6			  ## circular_buf.c:149:9
 1e0a396:    72 08             	r2 = r7			  ## circular_buf.c:149:9
 1e0a398:    97 f3 a4 e5       	call 3132232 <memcpy : 106ee4 >			  ## circular_buf.c:149:9
 1e0a39c:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:150:28
 1e0a39e:    c1 bd             	r1 = r6 + r7			  ## circular_buf.c:150:47
 1e0a3a0:    e6 b9             	r6 = r4 - r7			  ## circular_buf.c:148:26
 1e0a3a2:    62 08             	r2 = r6			  ## circular_buf.c:150:9
 1e0a3a4:    97 f3 9e e5       	call 3132220 <memcpy : 106ee4 >			  ## circular_buf.c:150:9
 1e0a3a8:    57 08             	r7 = r5			  ## circular_buf.c:150:9
 1e0a3aa:    06 18             	goto 12 <cbuf_write+0x4E : 1e0a3b8 >
 1e0a3ac:    c7 9a             	r7 = r5 + 12			  ## circular_buf.c:143:48
 1e0a3ae:    61 08             	r1 = r6			  ## circular_buf.c:145:9
 1e0a3b0:    42 08             	r2 = r4			  ## circular_buf.c:145:9
 1e0a3b2:    97 f3 97 e5       	call 3132206 <memcpy : 106ee4 >			  ## circular_buf.c:145:9
 1e0a3b6:    46 08             	r6 = r4			  ## circular_buf.c:145:9
 1e0a3b8:    00 4e             	r0 = [r7 + 0]
 1e0a3ba:    60 09             	r0 += r6
 1e0a3bc:    38 4a             	[r5 + 12] = r0			  ## circular_buf.c:146:28
 1e0a3be:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:154:23
 1e0a3c0:    41 09             	r1 += r4			  ## circular_buf.c:154:23
 1e0a3c2:    69 4a             	[r5 + 24] = r1			  ## circular_buf.c:154:23
 1e0a3c4:    59 4a             	[r5 + 20] = r1			  ## circular_buf.c:155:22
 1e0a3c6:    48 4a             	[r5 + 16] = r0			  ## circular_buf.c:156:22
 1e0a3c8:    97 f3 e6 e4       	call 3131852 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0a3cc:    40 08             	r0 = r4			  ## circular_buf.c:160:1
 1e0a3ce:    57 01             	{pc, r7-r4} = [sp++]			  ## circular_buf.c:160:1


cbuf_init:
 1e0a3d0:    03 70             	r3 = 0			  ## circular_buf.c:261:0
 1e0a3d2:    6b 40             	[r0 + 24] = r3			  ## circular_buf.c:262:23
 1e0a3d4:    5b 40             	[r0 + 20] = r3			  ## circular_buf.c:263:22
 1e0a3d6:    09 40             	[r0 + 0] = r1			  ## circular_buf.c:264:20
 1e0a3d8:    29 40             	[r0 + 8] = r1			  ## circular_buf.c:265:23
 1e0a3da:    39 40             	[r0 + 12] = r1			  ## circular_buf.c:266:24
 1e0a3dc:    49 40             	[r0 + 16] = r1			  ## circular_buf.c:267:22
 1e0a3de:    21 09             	r1 += r2			  ## circular_buf.c:268:30
 1e0a3e0:    19 40             	[r0 + 4] = r1			  ## circular_buf.c:268:18
 1e0a3e2:    7a 40             	[r0 + 28] = r2			  ## circular_buf.c:269:24
 1e0a3e4:    8b 40             	[r0 + 32] = r3			  ## spinlock.h:70:18
 1e0a3e6:    20 00             	rts			  ## circular_buf.c:271:1


cbuf_clear:
 1e0a3e8:    74 01             	[--sp] = {rets, r4}			  ## circular_buf.c:275:0
 1e0a3ea:    04 08             	r4 = r0			  ## circular_buf.c:275:0
 1e0a3ec:    97 f3 d6 e4       	call 3131820 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0a3f0:    00 48             	r0 = [r4 + 0]			  ## circular_buf.c:280:34
 1e0a3f2:    28 48             	[r4 + 8] = r0			  ## circular_buf.c:280:23
 1e0a3f4:    38 48             	[r4 + 12] = r0			  ## circular_buf.c:281:43
 1e0a3f6:    48 48             	[r4 + 16] = r0			  ## circular_buf.c:281:22
 1e0a3f8:    00 70             	r0 = 0			  ## circular_buf.c:281:22
 1e0a3fa:    68 48             	[r4 + 24] = r0			  ## circular_buf.c:282:23
 1e0a3fc:    58 48             	[r4 + 20] = r0			  ## circular_buf.c:283:22
 1e0a3fe:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e0a400:    d7 f3 ca e4       	goto 3131796 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


cbuf_read:
 1e0a404:    79 01             	[--sp] = {rets, r9-r4}			  ## circular_buf.c:22:0
 1e0a406:    24 08             	r4 = r2			  ## circular_buf.c:22:0
 1e0a408:    18 08             	r8 = r1			  ## circular_buf.c:22:0
 1e0a40a:    05 08             	r5 = r0			  ## circular_buf.c:22:0
 1e0a40c:    0d 2a             	if (r5 == 0) goto 26 <cbuf_read+0x24 : 1e0a428 >			  ## circular_buf.c:22:0
 1e0a40e:    10 4a             	r0 = [r5 + 4]			  ## circular_buf.c:33:49
 1e0a410:    27 4a             	r7 = [r5 + 8]			  ## circular_buf.c:33:23
 1e0a412:    61 4a             	r1 = [r5 + 24]			  ## circular_buf.c:27:29
 1e0a414:    07 f2 02 30       	if (r7 < r0) goto 4 <cbuf_read+0x18 : 1e0a41c >
 1e0a418:    07 4a             	r7 = [r5 + 0]			  ## circular_buf.c:34:44
 1e0a41a:    2f 4a             	[r5 + 8] = r7			  ## circular_buf.c:34:27
 1e0a41c:    41 f2 06 20       	if (r1 >= r4) goto 12 <cbuf_read+0x28 : 1e0a42c >			  ## circular_buf.c:37:9
 1e0a420:    01 70             	r1 = 0			  ## circular_buf.c:38:9
 1e0a422:    80 08             	r0 = r8			  ## circular_buf.c:38:9
 1e0a424:    97 f3 64 e5       	call 3132104 <memset : 106ef0 >			  ## circular_buf.c:38:9
 1e0a428:    04 70             	r4 = 0
 1e0a42a:    23 18             	goto 70 <cbuf_read+0x6E : 1e0a472 >
 1e0a42c:    e0 b1             	r0 = r0 - r7			  ## circular_buf.c:45:34
 1e0a42e:    46 08             	r6 = r4			  ## circular_buf.c:46:9
 1e0a430:    40 f2 01 80       	if (r0 > r4) goto 2 <cbuf_read+0x32 : 1e0a436 >			  ## circular_buf.c:46:9
 1e0a434:    06 08             	r6 = r0			  ## circular_buf.c:46:9
 1e0a436:    80 08             	r0 = r8			  ## circular_buf.c:52:5
 1e0a438:    71 08             	r1 = r7			  ## circular_buf.c:52:5
 1e0a43a:    62 08             	r2 = r6			  ## circular_buf.c:52:5
 1e0a43c:    97 f3 52 e5       	call 3132068 <memcpy : 106ee4 >			  ## circular_buf.c:52:5
 1e0a440:    a9 b9             	r9 = r4 - r6			  ## circular_buf.c:49:9
 1e0a442:    09 e0 0a 00       	if (r9 == 0) goto 20 <cbuf_read+0x56 : 1e0a45a >
 1e0a446:    01 4a             	r1 = [r5 + 0]			  ## circular_buf.c:57:50
 1e0a448:    80 fb 60 08       	r0 = r8 + r6			  ## circular_buf.c:57:29
 1e0a44c:    92 08             	r2 = r9			  ## circular_buf.c:57:9
 1e0a44e:    97 f3 49 e5       	call 3132050 <memcpy : 106ee4 >			  ## circular_buf.c:57:9
 1e0a452:    00 4a             	r0 = [r5 + 0]			  ## circular_buf.c:58:29
 1e0a454:    80 fb 90 60       	r6 = r0 + r9			  ## circular_buf.c:58:35
 1e0a458:    01 18             	goto 2 <cbuf_read+0x58 : 1e0a45c >
 1e0a45a:    76 09             	r6 += r7			  ## circular_buf.c:55:18
 1e0a45c:    97 f3 9e e4       	call 3131708 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0a460:    60 4a             	r0 = [r5 + 24]			  ## circular_buf.c:62:23
 1e0a462:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:62:23
 1e0a464:    68 4a             	[r5 + 24] = r0			  ## circular_buf.c:62:23
 1e0a466:    50 4a             	r0 = [r5 + 20]			  ## circular_buf.c:63:22
 1e0a468:    20 b1             	r0 = r0 - r4			  ## circular_buf.c:63:22
 1e0a46a:    58 4a             	[r5 + 20] = r0			  ## circular_buf.c:63:22
 1e0a46c:    2e 4a             	[r5 + 8] = r6			  ## circular_buf.c:64:23
 1e0a46e:    97 f3 93 e4       	call 3131686 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0a472:    40 08             	r0 = r4			  ## circular_buf.c:68:1
 1e0a474:    59 01             	{pc, r9-r4} = [sp++]			  ## circular_buf.c:68:1


os_task_create:
 1e0a476:    77 01             	[--sp] = {rets, r7-r4}			  ## port_overwrite.c:595:0
 1e0a478:    fc 0b             	sp += -8			  ## port_overwrite.c:595:0
 1e0a47a:    34 08             	r4 = r3			  ## port_overwrite.c:595:0
 1e0a47c:    25 08             	r5 = r2			  ## port_overwrite.c:595:0
 1e0a47e:    16 08             	r6 = r1			  ## port_overwrite.c:595:0
 1e0a480:    07 08             	r7 = r0			  ## port_overwrite.c:595:0
 1e0a482:    97 f3 8b e4       	call 3131670 <local_irq_disable : 106d9c >			  ## port_overwrite.c:597:5
 1e0a486:    80 02             	r0 = [sp+32]
 1e0a488:    71 02             	r1 = [sp+28]
 1e0a48a:    18 02             	[sp+4] = r0			  ## port_overwrite.c:598:11
 1e0a48c:    09 02             	[sp] = r1			  ## port_overwrite.c:598:11
 1e0a48e:    70 08             	r0 = r7			  ## port_overwrite.c:598:11
 1e0a490:    61 08             	r1 = r6			  ## port_overwrite.c:598:11
 1e0a492:    52 08             	r2 = r5			  ## port_overwrite.c:598:11
 1e0a494:    43 08             	r3 = r4			  ## port_overwrite.c:598:11
 1e0a496:    97 f3 8b e4       	call 3131670 <os_task_create_rom : 106db0 >			  ## port_overwrite.c:598:11
 1e0a49a:    04 08             	r4 = r0			  ## port_overwrite.c:598:11
 1e0a49c:    97 f3 7c e4       	call 3131640 <local_irq_enable : 106d98 >			  ## port_overwrite.c:599:5
 1e0a4a0:    40 08             	r0 = r4			  ## port_overwrite.c:600:5
 1e0a4a2:    04 0a             	sp += 8			  ## port_overwrite.c:600:5
 1e0a4a4:    57 01             	{pc, r7-r4} = [sp++]			  ## port_overwrite.c:600:5


vAssertCalled:
 1e0a4a6:    97 f3 79 e4       	call 3131634 <local_irq_disable : 106d9c >			  ## FreeRTOSConfig.h:162:0
 1e0a4aa:    ff 1f             	goto -2 <vAssertCalled+0x4 : 1e0a4aa >			  ## FreeRTOSConfig.h:173:5


pvPortMalloc:
 1e0a4ac:    7a 01             	[--sp] = {rets, r10-r4}			  ## heap_mmu.c:174:0
 1e0a4ae:    04 08             	r4 = r0			  ## heap_mmu.c:174:0
 1e0a4b0:    d5 28             	if (r4 == 0) goto 426 <pvPortMalloc+0x1B0 : 1e0a65c >			  ## heap_mmu.c:174:0
 1e0a4b2:    97 f3 73 e4       	call 3131622 <local_irq_disable : 106d9c >			  ## heap_mmu.c:184:5
 1e0a4b6:    08 00             	csync			  ## heap_mmu.c:184:5
 1e0a4b8:    ca ff 70 20 00 00 	r10 = 8304 <gatt_client_conn_handle : 2070 >			  ## heap_mmu.c:184:5
 1e0a4be:    00 f6 a8 a0       	r0 = [r10 + 168]			  ## heap_mmu.c:188:13
 1e0a4c2:    24 30             	if (r0 != 0) goto 72 <pvPortMalloc+0x60 : 1e0a50c >			  ## heap_mmu.c:188:13
 1e0a4c4:    97 f3 00 e5       	call 3131904 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0a4c8:    01 78             	r1 = 128			  ## sbrk.c:78:20
 1e0a4ca:    97 f3 f7 e4       	call 3131886 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0a4ce:    05 08             	r5 = r0			  ## sbrk.c:78:20
 1e0a4d0:    97 f3 fc e4       	call 3131896 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0a4d4:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0a4d6:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0a4d8:    97 f3 f0 e4       	call 3131872 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0a4dc:    a1 fc a8 00       	r1 = r10 + 168
 1e0a4e0:    9d 43             	[r1 + 100] = r5			  ## heap_mmu.c:462:28
 1e0a4e2:    02 70             	r2 = 0			  ## heap_mmu.c:462:28
 1e0a4e4:    8a 43             	[r1 + 96] = r2			  ## heap_mmu.c:463:23
 1e0a4e6:    63 fb 7f 59       	r3 = 127 - r5			  ## heap_mmu.c:443:22
 1e0a4ea:    30 09             	r0 += r3			  ## heap_mmu.c:443:22
 1e0a4ec:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:443:22
 1e0a4f0:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:443:22
 1e0a4f4:    50 09             	r0 += r5			  ## heap_mmu.c:469:43
 1e0a4f6:    80 8f             	r0 += -8			  ## heap_mmu.c:470:15
 1e0a4f8:    30 fd 03 09       	r0 = r0 & 4294967292			  ## heap_mmu.c:471:15
 1e0a4fc:    08 42             	[r1 + 0] = r0			  ## heap_mmu.c:473:11
 1e0a4fe:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:474:23
 1e0a500:    1a 40             	[r0 + 4] = r2			  ## heap_mmu.c:475:28
 1e0a502:    62 b1             	r2 = r0 - r5			  ## heap_mmu.c:481:46
 1e0a504:    0a 4a             	[r5 + 0] = r2			  ## heap_mmu.c:481:34
 1e0a506:    18 4a             	[r5 + 4] = r0			  ## heap_mmu.c:482:39
 1e0a508:    1a 42             	[r1 + 4] = r2			  ## heap_mmu.c:489:36
 1e0a50a:    2a 42             	[r1 + 8] = r2			  ## heap_mmu.c:490:25
 1e0a50c:    c8 ff 00 00 68 69 	r8 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:198:26
 1e0a512:    84 f1 51 00       	if ((r4 & r8) != 0) goto 162 <pvPortMalloc+0x10C : 1e0a5b8 >			  ## heap_mmu.c:198:26
 1e0a516:    41 98             	r1 = r4 + 4			  ## heap_mmu.c:202:29
 1e0a518:    22 fd 03 19       	r2 = r1 & 3			  ## heap_mmu.c:208:67
 1e0a51c:    62 fb 04 29       	r2 = 4 - r2			  ## heap_mmu.c:208:52
 1e0a520:    45 b4             	r5 = r2 + r1			  ## heap_mmu.c:208:29
 1e0a522:    61 ff 03 59 9a 00 	if ((r5 & 3) != 0) goto 308 <pvPortMalloc+0x1B0 : 1e0a65c >
 1e0a528:    22 ff 01 5b 97 00 	if (r5 >= 65536) goto 302 <pvPortMalloc+0x1B0 : 1e0a65c >
 1e0a52e:    01 f6 b0 a0       	r1 = [r10 + 176]			  ## heap_mmu.c:219:54
 1e0a532:    52 fc ff ff       	r2 = r5 + -1			  ## heap_mmu.c:219:35
 1e0a536:    12 f2 3f 20       	if (r2 >= r1) goto 126 <pvPortMalloc+0x10C : 1e0a5b8 >			  ## heap_mmu.c:219:35
 1e0a53a:    03 f6 0c a1       	r3 = [r10 + 268]			  ## heap_mmu.c:223:34
 1e0a53e:    a2 fc 08 01       	r2 = r10 + 264			  ## heap_mmu.c:223:34
 1e0a542:    37 08             	r7 = r3
 1e0a544:    01 4e             	r1 = [r7 + 0]			  ## heap_mmu.c:226:34
 1e0a546:    26 08             	r6 = r2			  ## heap_mmu.c:226:34
 1e0a548:    51 f2 03 20       	if (r1 >= r5) goto 6 <pvPortMalloc+0xA6 : 1e0a552 >
 1e0a54c:    13 4e             	r3 = [r7 + 4]			  ## heap_mmu.c:226:73
 1e0a54e:    72 08             	r2 = r7			  ## heap_mmu.c:226:73
 1e0a550:    f8 37             	if (r3 != 0) goto -16 <pvPortMalloc+0x96 : 1e0a542 >
 1e0a552:    07 f2 31 00       	if (r7 == r0) goto 98 <pvPortMalloc+0x10C : 1e0a5b8 >
 1e0a556:    09 f6 04 60       	r9 = [r6 + 4]			  ## heap_mmu.c:238:71
 1e0a55a:    80 fb 50 09       	r0 = r9 + r5			  ## heap_mmu.c:242:82
 1e0a55e:    22 fd 7f 09       	r2 = r0 & 127			  ## heap_mmu.c:243:48
 1e0a562:    63 fb 80 29       	r3 = 128 - r2			  ## heap_mmu.c:243:36
 1e0a566:    92 fc 80 00       	r2 = r9 + 128			  ## heap_mmu.c:241:46
 1e0a56a:    73 e0 03 80       	if (r3 > 7) goto 6 <pvPortMalloc+0xC8 : 1e0a574 >			  ## heap_mmu.c:241:46
 1e0a56e:    35 09             	r5 += r3			  ## heap_mmu.c:244:37
 1e0a570:    80 fb 90 05       	r0 = r5 + r9			  ## heap_mmu.c:245:78
 1e0a574:    32 fd 7f 29       	r2 = r2 & 4294967168			  ## heap_mmu.c:241:59
 1e0a578:    60 ff 7f 09 0c 00 	if ((r0 & 127) == 0) goto 24 <pvPortMalloc+0xEA : 1e0a596 >
 1e0a57e:    71 09             	r1 += r7			  ## heap_mmu.c:248:63
 1e0a580:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## heap_mmu.c:249:66
 1e0a584:    31 fd 7f 09       	r1 = r0 & 4294967168			  ## heap_mmu.c:249:39
 1e0a588:    f0 87             	r0 += 127			  ## heap_mmu.c:250:40
 1e0a58a:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:250:40
 1e0a58e:    31 f2 01 00       	if (r1 == r3) goto 2 <pvPortMalloc+0xE8 : 1e0a594 >
 1e0a592:    01 08             	r1 = r0			  ## heap_mmu.c:249:29
 1e0a594:    10 08             	r0 = r1
 1e0a596:    a4 b0             	r4 = r0 - r2			  ## heap_mmu.c:256:46
 1e0a598:    14 e0 19 b0       	ifs (r4 < 1) goto 50 <pvPortMalloc+0x122 : 1e0a5ce >
 1e0a59c:    60 ff 7f 49 02 00 	if ((r4 & 127) == 0) goto 4 <pvPortMalloc+0xFA : 1e0a5a6 >
 1e0a5a2:    8f f3 ad c6       	call 2067802 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0a5a6:    02 e0 0f d0       	ifs (r2 <= 0) goto 30 <pvPortMalloc+0x11C : 1e0a5c8 >
 1e0a5aa:    20 08             	r0 = r2			  ## sbrk.c:78:20
 1e0a5ac:    41 08             	r1 = r4			  ## sbrk.c:78:20
 1e0a5ae:    97 f3 85 e4       	call 3131658 <vmalloc_ : 106ebc >			  ## sbrk.c:78:20
 1e0a5b2:    f0 ef 0c 10       	if (r0 != -1) goto 24 <pvPortMalloc+0x122 : 1e0a5ce >
 1e0a5b6:    09 18             	goto 18 <pvPortMalloc+0x11E : 1e0a5ca >
 1e0a5b8:    97 f3 ee e3       	call 3131356 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0a5bc:    04 70             	r4 = 0			  ## heap_mmu.c:326:5
 1e0a5be:    61 ff 03 49 4c 00 	if ((r4 & 3) != 0) goto 152 <pvPortMalloc+0x1B0 : 1e0a65c >
 1e0a5c4:    40 08             	r0 = r4			  ## heap_mmu.c:341:5
 1e0a5c6:    5a 01             	{pc, r10-r4} = [sp++]			  ## heap_mmu.c:341:5
 1e0a5c8:    1b 24             	if (r2 == 0) goto 54 <pvPortMalloc+0x154 : 1e0a600 >
 1e0a5ca:    8f f3 99 c6       	call 2067762 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0a5ce:    10 4e             	r0 = [r7 + 4]			  ## heap_mmu.c:264:65
 1e0a5d0:    18 4c             	[r6 + 4] = r0			  ## heap_mmu.c:264:54
 1e0a5d2:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:270:44
 1e0a5d4:    61 b1             	r1 = r0 - r5			  ## heap_mmu.c:270:55
 1e0a5d6:    81 e0 2e 30       	if (r1 < 8) goto 92 <pvPortMalloc+0x18A : 1e0a636 >			  ## heap_mmu.c:270:55
 1e0a5da:    44 bf             	r4 = r7 + r5			  ## heap_mmu.c:275:73
 1e0a5dc:    61 ff 03 49 3d 00 	if ((r4 & 3) != 0) goto 122 <pvPortMalloc+0x1B0 : 1e0a65c >
 1e0a5e2:    61 ff 7f 49 1e 00 	if ((r4 & 127) != 0) goto 60 <pvPortMalloc+0x178 : 1e0a624 >
 1e0a5e8:    70 09             	r0 += r7			  ## heap_mmu.c:282:65
 1e0a5ea:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## heap_mmu.c:283:52
 1e0a5ee:    04 f2 19 00       	if (r4 == r0) goto 50 <pvPortMalloc+0x178 : 1e0a624 >
 1e0a5f2:    14 e0 09 b0       	ifs (r4 < 1) goto 18 <pvPortMalloc+0x15C : 1e0a608 >			  ## sbrk.c:74:13
 1e0a5f6:    01 78             	r1 = 128			  ## sbrk.c:75:20
 1e0a5f8:    40 08             	r0 = r4			  ## sbrk.c:75:20
 1e0a5fa:    97 f3 5f e4       	call 3131582 <vmalloc_ : 106ebc >			  ## sbrk.c:75:20
 1e0a5fe:    0e 18             	goto 28 <pvPortMalloc+0x170 : 1e0a61c >
 1e0a600:    97 f3 62 e4       	call 3131588 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0a604:    02 08             	r2 = r0			  ## sbrk.c:77:20
 1e0a606:    d1 1f             	goto -94 <pvPortMalloc+0xFE : 1e0a5aa >
 1e0a608:    f4 ef 0a 10       	if (r4 != -1) goto 20 <pvPortMalloc+0x174 : 1e0a620 >
 1e0a60c:    97 f3 5e e4       	call 3131580 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0a610:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0a612:    01 78             	r1 = 128			  ## sbrk.c:81:20
 1e0a614:    97 f3 52 e4       	call 3131556 <vmalloc_ : 106ebc >			  ## sbrk.c:81:20
 1e0a618:    00 fc 80 00       	r0 = r0 + 128			  ## sbrk.c:81:41
 1e0a61c:    f0 ef 02 10       	if (r0 != -1) goto 4 <pvPortMalloc+0x178 : 1e0a624 >
 1e0a620:    8f f3 6e c6       	call 2067676 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0a624:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:292:63
 1e0a626:    60 b1             	r0 = r0 - r5			  ## heap_mmu.c:292:74
 1e0a628:    90 f6 00 75       	[r7+r5] = r0			  ## heap_mmu.c:292:52
 1e0a62c:    0d 4e             	[r7 + 0] = r5			  ## heap_mmu.c:293:45
 1e0a62e:    10 4c             	r0 = [r6 + 4]			  ## heap_mmu.c:295:76
 1e0a630:    18 48             	[r4 + 4] = r0			  ## heap_mmu.c:295:57
 1e0a632:    1c 4c             	[r6 + 4] = r4			  ## heap_mmu.c:296:58
 1e0a634:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:296:58
 1e0a636:    a1 fc ac 00       	r1 = r10 + 172
 1e0a63a:    12 42             	r2 = [r1 + 4]			  ## heap_mmu.c:301:41
 1e0a63c:    20 b4             	r0 = r2 - r0			  ## heap_mmu.c:301:41
 1e0a63e:    18 42             	[r1 + 4] = r0			  ## heap_mmu.c:301:41
 1e0a640:    01 42             	r1 = [r1 + 0]			  ## heap_mmu.c:303:47
 1e0a642:    94 fc 04 00       	r4 = r9 + 4			  ## heap_mmu.c:238:88
 1e0a646:    10 f2 02 20       	if (r0 >= r1) goto 4 <pvPortMalloc+0x1A2 : 1e0a64e >			  ## heap_mmu.c:238:88
 1e0a64a:    10 f6 ac a0       	[r10 + 172] = r0			  ## heap_mmu.c:304:56
 1e0a64e:    00 4e             	r0 = [r7 + 0]			  ## heap_mmu.c:311:41
 1e0a650:    e0 fd 80 00       	r0 = r0 | r8			  ## heap_mmu.c:311:41
 1e0a654:    08 4e             	[r7 + 0] = r0			  ## heap_mmu.c:311:41
 1e0a656:    97 f3 9f e3       	call 3131198 <local_irq_enable : 106d98 >			  ## heap_mmu.c:326:5
 1e0a65a:    b1 1f             	goto -158 <pvPortMalloc+0x112 : 1e0a5be >			  ## heap_mmu.c:326:5
 1e0a65c:    24 17             	call -440 <vAssertCalled : 1e0a4a6 >
 1e0a65e:    ff 1f             	goto -2 <pvPortMalloc+0x1B2 : 1e0a65e >


malloc:
 1e0a660:    34 00             	[--sp] = rets			  ## memory.c:20:0
 1e0a662:    28 fb 00 13       	r1 = rets			  ## memory.c:22:5
 1e0a666:    22 17             	call -444 <pvPortMalloc : 1e0a4ac >			  ## memory.c:26:11
 1e0a668:    30 00             	pc = [sp++]			  ## memory.c:30:5


zalloc:
 1e0a66a:    75 01             	[--sp] = {rets, r5, r4}			  ## memory.c:42:0
 1e0a66c:    04 08             	r4 = r0			  ## memory.c:42:0
 1e0a66e:    28 fb 00 03       	r0 = rets			  ## memory.c:44:5
 1e0a672:    40 08             	r0 = r4			  ## memory.c:46:11
 1e0a674:    1b 17             	call -458 <pvPortMalloc : 1e0a4ac >			  ## memory.c:46:11
 1e0a676:    05 08             	r5 = r0			  ## memory.c:46:11
 1e0a678:    04 2a             	if (r5 == 0) goto 8 <zalloc+0x18 : 1e0a682 >
 1e0a67a:    01 70             	r1 = 0			  ## memory.c:48:9
 1e0a67c:    42 08             	r2 = r4			  ## memory.c:48:9
 1e0a67e:    97 f3 37 e4       	call 3131502 <memset : 106ef0 >			  ## memory.c:48:9
 1e0a682:    50 08             	r0 = r5			  ## memory.c:52:5
 1e0a684:    55 01             	{pc, r5, r4} = [sp++]			  ## memory.c:52:5


free:
 1e0a686:    78 01             	[--sp] = {rets, r8-r4}			  ## memory.c:34:0
 1e0a688:    7b 20             	if (r0 == 0) goto 246 <free+0xFA : 1e0a780 >			  ## memory.c:34:0
 1e0a68a:    05 fc fc ff       	r5 = r0 + -4			  ## memory.c:34:0
 1e0a68e:    00 4a             	r0 = [r5 + 0]			  ## heap_mmu.c:366:22
 1e0a690:    c1 ff 00 00 68 69 	r1 = 1768423424 <uECC_vli_cmp_unsafe+0x1579004 : 1680000 >			  ## heap_mmu.c:366:33
 1e0a696:    e2 fd 10 20       	r2 = r0 & r1			  ## heap_mmu.c:366:33
 1e0a69a:    12 f2 7c 10       	if (r2 != r1) goto 248 <free+0x110 : 1e0a796 >			  ## heap_mmu.c:366:13
 1e0a69e:    54 08             	r4 = r5			  ## heap_mmu.c:358:13
 1e0a6a0:    c1 ff ff ff 97 96 	r1 = 2526543871 <uECC_vli_cmp_unsafe+0x879003 : 97ffff >			  ## heap_mmu.c:370:32
 1e0a6a6:    50 b3             	r0 &= r1			  ## heap_mmu.c:370:32
 1e0a6a8:    08 4a             	[r5 + 0] = r0			  ## heap_mmu.c:370:32
 1e0a6aa:    97 f3 77 e3       	call 3131118 <local_irq_disable : 106d9c >			  ## heap_mmu.c:373:13
 1e0a6ae:    08 00             	csync			  ## heap_mmu.c:373:13
 1e0a6b0:    02 4a             	r2 = [r5 + 0]			  ## heap_mmu.c:376:48
 1e0a6b2:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >			  ## heap_mmu.c:376:48
 1e0a6b8:    80 fc b0 00       	r0 = r8 + 176			  ## heap_mmu.c:376:48
 1e0a6bc:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:376:37
 1e0a6be:    21 09             	r1 += r2			  ## heap_mmu.c:376:37
 1e0a6c0:    51 f6 58 00       	[r0 ++= 88] = r1			  ## heap_mmu.c:376:37
 1e0a6c4:    06 08             	r6 = r0
 1e0a6c6:    10 4c             	r0 = [r6 + 4]			  ## heap_mmu.c:512:44
 1e0a6c8:    40 f2 fc 3f       	if (r0 < r4) goto -8 <free+0x3E : 1e0a6c4 >			  ## heap_mmu.c:512:5
 1e0a6cc:    03 4c             	r3 = [r6 + 0]			  ## heap_mmu.c:519:28
 1e0a6ce:    c1 bc             	r1 = r6 + r3			  ## heap_mmu.c:519:14
 1e0a6d0:    41 f2 08 00       	if (r1 == r4) goto 16 <free+0x5E : 1e0a6e4 >			  ## heap_mmu.c:519:14
 1e0a6d4:    51 fc 80 00       	r1 = r5 + 128			  ## heap_mmu.c:526:34
 1e0a6d8:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:526:47
 1e0a6dc:    47 08             	r7 = r4
 1e0a6de:    23 08             	r3 = r2			  ## heap_mmu.c:537:33
 1e0a6e0:    14 08             	r4 = r1			  ## heap_mmu.c:537:33
 1e0a6e2:    0a 18             	goto 20 <free+0x72 : 1e0a6f8 >
 1e0a6e4:    23 09             	r3 += r2			  ## heap_mmu.c:520:32
 1e0a6e6:    31 fd 7f 69       	r1 = r6 & 4294967168			  ## heap_mmu.c:522:67
 1e0a6ea:    37 fd 7f 59       	r7 = r5 & 4294967168			  ## heap_mmu.c:522:25
 1e0a6ee:    0b 4c             	[r6 + 0] = r3			  ## heap_mmu.c:520:32
 1e0a6f0:    17 f2 01 00       	if (r7 == r1) goto 2 <free+0x70 : 1e0a6f6 >			  ## heap_mmu.c:520:32
 1e0a6f4:    74 08             	r4 = r7			  ## heap_mmu.c:522:13
 1e0a6f6:    67 08             	r7 = r6
 1e0a6f8:    52 09             	r2 += r5			  ## heap_mmu.c:506:49
 1e0a6fa:    c5 be             	r5 = r7 + r3			  ## heap_mmu.c:537:14
 1e0a6fc:    41 fc 7f 00       	r1 = r4 + 127			  ## heap_mmu.c:531:22
 1e0a700:    31 fd 7f 19       	r1 = r1 & 4294967168			  ## heap_mmu.c:531:22
 1e0a704:    60 ff 7f 49 01 00 	if ((r4 & 127) == 0) goto 2 <free+0x86 : 1e0a70c >
 1e0a70a:    14 08             	r4 = r1			  ## heap_mmu.c:530:9
 1e0a70c:    01 f6 a8 80       	r1 = [r8 + 168]			  ## heap_mmu.c:538:44
 1e0a710:    10 f2 10 00       	if (r0 == r1) goto 32 <free+0xAE : 1e0a734 >
 1e0a714:    05 f2 0e 10       	if (r5 != r0) goto 28 <free+0xAE : 1e0a734 >
 1e0a718:    01 40             	r1 = [r0 + 0]			  ## heap_mmu.c:541:101
 1e0a71a:    13 09             	r3 += r1			  ## heap_mmu.c:542:41
 1e0a71c:    0b 4e             	[r7 + 0] = r3			  ## heap_mmu.c:542:41
 1e0a71e:    13 40             	r3 = [r0 + 4]			  ## heap_mmu.c:543:77
 1e0a720:    01 09             	r1 += r0			  ## heap_mmu.c:541:70
 1e0a722:    d1 b0             	r1 ^= r0			  ## heap_mmu.c:546:42
 1e0a724:    00 fc 80 00       	r0 = r0 + 128			  ## heap_mmu.c:547:40
 1e0a728:    1b 4e             	[r7 + 4] = r3			  ## heap_mmu.c:543:46
 1e0a72a:    f1 e7 01 80       	if (r1 > 127) goto 2 <free+0xAA : 1e0a730 >			  ## heap_mmu.c:543:46
 1e0a72e:    20 08             	r0 = r2			  ## heap_mmu.c:546:17
 1e0a730:    02 08             	r2 = r0
 1e0a732:    01 18             	goto 2 <free+0xB0 : 1e0a736 >
 1e0a734:    18 4e             	[r7 + 4] = r0
 1e0a736:    30 fd 7f 29       	r0 = r2 & 4294967168			  ## heap_mmu.c:559:18
 1e0a73a:    22 b1             	r2 = r0 - r4			  ## heap_mmu.c:562:30
 1e0a73c:    12 e0 1b b0       	ifs (r2 < 1) goto 54 <free+0xF0 : 1e0a776 >			  ## heap_mmu.c:562:30
 1e0a740:    65 fb 00 29       	r5 = 0 - r2			  ## heap_mmu.c:565:46
 1e0a744:    60 ff 7f 59 02 00 	if ((r5 & 127) == 0) goto 4 <free+0xC8 : 1e0a74e >
 1e0a74a:    8f f3 d9 c5       	call 2067378 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0a74e:    f4 ef 05 00       	if (r4 == -1) goto 10 <free+0xD6 : 1e0a75c >
 1e0a752:    60 ff 7f 49 02 00 	if ((r4 & 127) == 0) goto 4 <free+0xD6 : 1e0a75c >
 1e0a758:    8f f3 d2 c5       	call 2067364 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0a75c:    15 e0 07 b0       	ifs (r5 < 1) goto 14 <free+0xE8 : 1e0a76e >			  ## sbrk.c:72:9
 1e0a760:    14 e0 0f b0       	ifs (r4 < 1) goto 30 <free+0xFC : 1e0a782 >			  ## sbrk.c:74:13
 1e0a764:    40 08             	r0 = r4			  ## sbrk.c:75:20
 1e0a766:    51 08             	r1 = r5
 1e0a768:    97 f3 a8 e3       	call 3131216 <vmalloc_ : 106ebc >
 1e0a76c:    04 18             	goto 8 <free+0xF0 : 1e0a776 >
 1e0a76e:    40 08             	r0 = r4			  ## sbrk.c:89:9
 1e0a770:    21 08             	r1 = r2			  ## sbrk.c:89:9
 1e0a772:    97 f3 a5 e3       	call 3131210 <vfree_ : 106ec0 >			  ## sbrk.c:89:9
 1e0a776:    76 f2 01 00       	if (r6 == r7) goto 2 <free+0xF6 : 1e0a77c >
 1e0a77a:    1f 4c             	[r6 + 4] = r7			  ## heap_mmu.c:572:37
 1e0a77c:    97 f3 0c e3       	call 3130904 <local_irq_enable : 106d98 >			  ## heap_mmu.c:381:13
 1e0a780:    58 01             	{pc, r8-r4} = [sp++]			  ## memory.c:39:1
 1e0a782:    06 28             	if (r4 == 0) goto 12 <free+0x10A : 1e0a790 >
 1e0a784:    f4 ef f7 1f       	if (r4 != -1) goto -18 <free+0xF0 : 1e0a776 >
 1e0a788:    97 f3 a0 e3       	call 3131200 <vmem_end : 106ecc >			  ## sbrk.c:80:20
 1e0a78c:    00 88             	r0 += -128			  ## sbrk.c:80:31
 1e0a78e:    eb 1f             	goto -42 <free+0xE0 : 1e0a766 >			  ## sbrk.c:80:31
 1e0a790:    97 f3 9a e3       	call 3131188 <vmem_start : 106ec8 >			  ## sbrk.c:77:20
 1e0a794:    e8 1f             	goto -48 <free+0xE0 : 1e0a766 >			  ## sbrk.c:77:20
 1e0a796:    87 16             	call -754 <vAssertCalled : 1e0a4a6 >			  ## heap_mmu.c:386:13
 1e0a798:    ff 1f             	goto -2 <free+0x112 : 1e0a798 >			  ## heap_mmu.c:386:13


hwi_all_close:
 1e0a79a:    79 01             	[--sp] = {rets, r9-r4}			  ## hwi.c:129:0
 1e0a79c:    04 70             	r4 = 0			  ## hwi.c:129:0
 1e0a79e:    18 70             	r8 = 1			  ## hwi.c:129:0
 1e0a7a0:    c9 ff 00 e1 1b 00 	r9 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:129:0
 1e0a7a6:    07 70             	r7 = 0			  ## hwi.c:129:0
 1e0a7a8:    20 fd 1c 49       	r0 = r4 & 28			  ## hwi.c:120:28
 1e0a7ac:    f8 fd 00 58       	r5 = r8 << r0			  ## hwi.c:124:28
 1e0a7b0:    85 fd 18 07       	r0 = uextra(r7, p:3, l:5)			  ## hwi.c:119:23
 1e0a7b4:    96 08             	r6 = r9			  ## hwi.c:124:5
 1e0a7b6:    c5 fd 10 60       	r6 <= insert(r0, p:2, l:5)			  ## hwi.c:124:5
 1e0a7ba:    97 f3 ef e2       	call 3130846 <local_irq_disable : 106d9c >			  ## hwi.c:122:5
 1e0a7be:    00 4c             	r0 = [r6 + 0]			  ## hwi.c:124:24
 1e0a7c0:    e3 fd 50 00       	r0 = r0 & ~r5			  ## hwi.c:124:24
 1e0a7c4:    08 4c             	[r6 + 0] = r0			  ## hwi.c:124:24
 1e0a7c6:    97 f3 e7 e2       	call 3130830 <local_irq_enable : 106d98 >			  ## hwi.c:125:5
 1e0a7ca:    17 80             	r7 += 1			  ## hwi.c:132:26
 1e0a7cc:    44 80             	r4 += 4			  ## hwi.c:132:19
 1e0a7ce:    07 e4 eb 1f       	if (r7 != 64) goto -42 <hwi_all_close+0xE : 1e0a7a8 >			  ## hwi.c:132:5
 1e0a7d2:    59 01             	{pc, r9-r4} = [sp++]			  ## hwi.c:135:1


owner_is_idle_task:
 1e0a7d4:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:56:0
 1e0a7d6:    31 60             	r1 = b[r0 + 3] (u)			  ## port_overwrite.c:57:10
 1e0a7d8:    22 60             	r2 = b[r0 + 2] (u)			  ## port_overwrite.c:57:10
 1e0a7da:    13 60             	r3 = b[r0 + 1] (u)			  ## port_overwrite.c:57:10
 1e0a7dc:    04 60             	r4 = b[r0 + 0] (u)			  ## port_overwrite.c:57:10
 1e0a7de:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## port_overwrite.c:57:10
 1e0a7e2:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## port_overwrite.c:57:10
 1e0a7e6:    d0 fd 80 42       	r4 <= insert(r2, p:16, l:16)			  ## port_overwrite.c:57:10
 1e0a7ea:    c1 ff 49 44 4c 45 	r1 = 1162626121 <uECC_vli_cmp_unsafe+0x13BD44D : 14c4449 >			  ## port_overwrite.c:57:10
 1e0a7f0:    10 70             	r0 = 1			  ## port_overwrite.c:57:10
 1e0a7f2:    14 f2 01 00       	if (r4 == r1) goto 2 <owner_is_idle_task+0x24 : 1e0a7f8 >
 1e0a7f6:    00 70             	r0 = 0			  ## port_overwrite.c:57:10
 1e0a7f8:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:61:1


bit_clr_ie:
 1e0a7fa:    34 00             	[--sp] = rets			  ## hwi.c:116:0
 1e0a7fc:    97 f3 ce e2       	call 3130780 <local_irq_disable : 106d9c >			  ## hwi.c:122:5
 1e0a800:    c0 ff 00 e1 1b 00 	r0 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:122:5
 1e0a806:    01 40             	r1 = [r0 + 0]			  ## hwi.c:124:24
 1e0a808:    71 be             	r1 &= 4026531839			  ## hwi.c:124:24
 1e0a80a:    09 40             	[r0 + 0] = r1			  ## hwi.c:124:24
 1e0a80c:    88 01             	{rets} = [sp++]			  ## hwi.c:125:5
 1e0a80e:    d7 f3 c3 e2       	goto 3130758 <local_irq_enable : 106d98 >			  ## hwi.c:125:5


request_irq:
 1e0a812:    77 01             	[--sp] = {rets, r7-r4}			  ## hwi.c:38:0
 1e0a814:    14 08             	r4 = r1			  ## hwi.c:38:0
 1e0a816:    c1 ff 00 ff 00 00 	r1 = 65280 <_IRQ_MEM_ADDR : ff00 >			  ## hwi.c:43:5
 1e0a81c:    b2 f6 00 10       	[r1+r0<<2] = r2			  ## hwi.c:43:20
 1e0a820:    81 c0             	r1 = r0 << 2			  ## hwi.c:43:5
 1e0a822:    25 fd 1c 19       	r5 = r1 & 28			  ## hwi.c:46:28
 1e0a826:    f1 70             	r1 = 15			  ## hwi.c:46:28
 1e0a828:    f8 fd 50 61       	r6 = r1 << r5			  ## hwi.c:48:35
 1e0a82c:    c0 d0             	r0 = r0 >> 3			  ## hwi.c:45:23
 1e0a82e:    c7 ff 00 e1 1b 00 	r7 = 1827072 <uECC_vli_cmp_unsafe+0xB7104 : 1be100 >			  ## hwi.c:54:27
 1e0a834:    c5 fd 10 70       	r7 <= insert(r0, p:2, l:5)			  ## hwi.c:54:27
 1e0a838:    97 f3 b0 e2       	call 3130720 <local_irq_disable : 106d9c >			  ## hwi.c:51:5
 1e0a83c:    00 4e             	r0 = [r7 + 0]			  ## hwi.c:54:27
 1e0a83e:    e3 fd 60 00       	r0 = r0 & ~r6			  ## hwi.c:54:46
 1e0a842:    61 c0             	r1 = r4 << 1			  ## hwi.c:47:35
 1e0a844:    21 fd 0e 19       	r1 = r1 & 14			  ## hwi.c:47:35
 1e0a848:    11 b0             	r1 |= 1			  ## hwi.c:47:41
 1e0a84a:    41 0d             	r1 <<= r5			  ## hwi.c:49:39
 1e0a84c:    50 b2             	r0 |= r1			  ## hwi.c:54:58
 1e0a84e:    08 4e             	[r7 + 0] = r0			  ## hwi.c:54:24
 1e0a850:    97 f3 a2 e2       	call 3130692 <local_irq_enable : 106d98 >			  ## hwi.c:56:5
 1e0a854:    57 01             	{pc, r7-r4} = [sp++]			  ## hwi.c:57:1


cpu_reset.1562:
 1e0a856:    cf f3 53 c5       	goto 2067110 <p33_soft_reset : 3300 >			  ## cpu.h:146:0


os_enter_deepsleep:
 1e0a85a:    00 70             	r0 = 0			  ## port_overwrite.c:558:0
 1e0a85c:    20 00             	rts			  ## port_overwrite.c:559:5


os_exit_deepsleep:
 1e0a85e:    34 00             	[--sp] = rets			  ## port_overwrite.c:563:0
 1e0a860:    c2 ff c6 32 00 00 	r2 = 12998 <begin_of_data : 32c6 >			  ## port_overwrite.c:565:5
 1e0a866:    30 70             	r0 = 3			  ## port_overwrite.c:565:5
 1e0a868:    11 70             	r1 = 1			  ## port_overwrite.c:565:5
 1e0a86a:    d3 17             	call -90 <request_irq : 1e0a812 >			  ## port_overwrite.c:565:5
 1e0a86c:    c2 ff 2c 32 00 00 	r2 = 12844 <vAppSoftwareInterruptISR : 322c >			  ## port_overwrite.c:567:5
 1e0a872:    f0 73             	r0 = 63			  ## port_overwrite.c:567:5
 1e0a874:    01 70             	r1 = 0			  ## port_overwrite.c:567:5
 1e0a876:    cd 17             	call -102 <request_irq : 1e0a812 >			  ## port_overwrite.c:567:5
 1e0a878:    00 70             	r0 = 0			  ## port_overwrite.c:569:5
 1e0a87a:    30 00             	pc = [sp++]			  ## port_overwrite.c:569:5


clock_critical_enter.1566:
 1e0a87c:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:316:0
 1e0a882:    c0 f4 00 09       	[r0 + 0] = 0			  ## port_overwrite.c:317:14
 1e0a886:    20 00             	rts			  ## port_overwrite.c:318:1


clock_critical_exit.1567:
 1e0a888:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:321:0
 1e0a88e:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:322:14
 1e0a892:    c1 ff ac 30 00 00 	r1 = 12460 <hdl.15 : 30ac >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0a898:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0a89a:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0a89c:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0a8a0:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:323:14
 1e0a8a2:    c0 f4 01 09       	[r0 + 0] = 1			  ## port_overwrite.c:324:14
 1e0a8a6:    20 00             	rts			  ## port_overwrite.c:325:1


vFillingTaskStack:
 1e0a8a8:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:232:0
 1e0a8aa:    01 08             	r1 = r0			  ## port_overwrite.c:232:0
 1e0a8ac:    8f f3 bc c4       	call 2066808 <uxTaskStack : 3228 >			  ## port_overwrite.c:233:26
 1e0a8b0:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:234:26
 1e0a8b2:    04 fc 80 00       	r4 = r0 + 128
 1e0a8b6:    30 fd 7f 19       	r0 = r1 & 4294967168			  ## port_overwrite.c:234:26
 1e0a8ba:    21 b1             	r1 = r0 - r4			  ## port_overwrite.c:234:81
 1e0a8bc:    40 08             	r0 = r4			  ## port_overwrite.c:238:5
 1e0a8be:    97 f3 fd e2       	call 3130874 <vmalloc_ : 106ebc >			  ## port_overwrite.c:238:5
 1e0a8c2:    a0 75             	r0 = 90			  ## port_overwrite.c:240:5
 1e0a8c4:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:240:5
 1e0a8c6:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:240:5
 1e0a8c8:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:240:5
 1e0a8ca:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:240:5
 1e0a8cc:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:241:1


maskrom_init:
 1e0a8ce:    74 01             	[--sp] = {rets, r4}			  ## port_overwrite.c:245:0
 1e0a8d0:    f4 0b             	sp += -24			  ## port_overwrite.c:245:0
 1e0a8d2:    c0 ff 92 04 e0 01 	r0 = 31458450 <assert_printf : 1e00492 >			  ## port_overwrite.c:248:5
 1e0a8d8:    58 02             	[sp+20] = r0			  ## port_overwrite.c:248:5
 1e0a8da:    c0 ff 90 04 e0 01 	r0 = 31458448 <log_putbyte : 1e00490 >			  ## port_overwrite.c:248:5
 1e0a8e0:    48 02             	[sp+16] = r0			  ## port_overwrite.c:248:5
 1e0a8e2:    c0 ff be b2 e0 01 	r0 = 31503038 <idle_hook : 1e0b2be >			  ## port_overwrite.c:248:5
 1e0a8e8:    38 02             	[sp+12] = r0			  ## port_overwrite.c:248:5
 1e0a8ea:    00 70             	r0 = 0			  ## port_overwrite.c:248:5
 1e0a8ec:    28 02             	[sp+8] = r0			  ## port_overwrite.c:248:5
 1e0a8ee:    c0 ff 9c 32 00 00 	r0 = 12956 <vAppPortStartFirstTask : 329c >			  ## port_overwrite.c:248:5
 1e0a8f4:    18 02             	[sp+4] = r0			  ## port_overwrite.c:248:5
 1e0a8f6:    c4 ff 5a a9 e0 01 	r4 = 31500634 <suppress_tick_and_sleep : 1e0a95a >			  ## port_overwrite.c:248:5
 1e0a8fc:    c0 ff 86 a6 e0 01 	r0 = 31499910 <free : 1e0a686 >			  ## port_overwrite.c:248:5
 1e0a902:    c1 ff 60 a6 e0 01 	r1 = 31499872 <malloc : 1e0a660 >			  ## port_overwrite.c:248:5
 1e0a908:    c2 ff e2 b4 e0 01 	r2 = 31503586 <vPortVFreeStack : 1e0b4e2 >			  ## port_overwrite.c:248:5
 1e0a90e:    c3 ff ea b3 e0 01 	r3 = 31503338 <pvPortVMallocStack : 1e0b3ea >			  ## port_overwrite.c:248:5
 1e0a914:    0c 02             	[sp] = r4			  ## port_overwrite.c:248:5
 1e0a916:    97 f3 0f e3       	call 3130910 <mask_init : 106f38 >			  ## port_overwrite.c:248:5
 1e0a91a:    c0 ff 20 10 00 00 	r0 = 4128 <stack_magic : 1020 >			  ## port_overwrite.c:248:5
 1e0a920:    20 fb 5a 1f       	r1 = 1515870810			  ## port_overwrite.c:248:5
 1e0a924:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:257:5
 1e0a926:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:257:5
 1e0a928:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:257:5
 1e0a92a:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:257:5
 1e0a92c:    c0 ff 30 18 00 00 	r0 = 6192 <stack_magic0 : 1830 >			  ## port_overwrite.c:257:5
 1e0a932:    39 40             	[r0 + 12] = r1			  ## port_overwrite.c:258:5
 1e0a934:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:258:5
 1e0a936:    19 40             	[r0 + 4] = r1			  ## port_overwrite.c:258:5
 1e0a938:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:258:5
 1e0a93a:    c0 ff cc 30 00 00 	r0 = 12492 <CurrentTCB : 30cc >			  ## port_overwrite.c:263:5
 1e0a940:    c1 ff 3c 1e 00 00 	r1 = 7740 <highCurrentTCB : 1e3c >			  ## port_overwrite.c:263:5
 1e0a946:    97 f3 31 e2       	call 3130466 <os_get_curr_tcb_var : 106dac >			  ## port_overwrite.c:263:5
 1e0a94a:    c2 ff 2c 32 00 00 	r2 = 12844 <vAppSoftwareInterruptISR : 322c >			  ## port_overwrite.c:265:5
 1e0a950:    f0 73             	r0 = 63			  ## port_overwrite.c:265:5
 1e0a952:    01 70             	r1 = 0			  ## port_overwrite.c:265:5
 1e0a954:    5e 17             	call -324 <request_irq : 1e0a812 >			  ## port_overwrite.c:265:5
 1e0a956:    0c 0a             	sp += 24			  ## port_overwrite.c:265:5
 1e0a958:    54 01             	{pc, r4} = [sp++]			  ## port_overwrite.c:266:1


suppress_tick_and_sleep:
 1e0a95a:    7f 01             	[--sp] = {rets, r15-r4}			  ## port_overwrite.c:82:0
 1e0a95c:    fc 0b             	sp += -8			  ## port_overwrite.c:82:0
 1e0a95e:    97 f3 1d e2       	call 3130426 <local_irq_disable : 106d9c >			  ## port_overwrite.c:464:5
 1e0a962:    08 00             	csync			  ## port_overwrite.c:464:5
 1e0a964:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >			  ## port_overwrite.c:464:5
 1e0a96a:    00 f9 0d 80       	r0 = b[r8 + 13] (u)			  ## port_overwrite.c:465:9
 1e0a96e:    00 e0 a2 14       	if (r0 != 0) goto 2372 <suppress_tick_and_sleep+0x95C : 1e0b2b6 >
 1e0a972:    cf ff c0 4e 00 00 	r15 = 20160 <nvbss_begin : 4ec0 >
 1e0a978:    00 f9 33 f0       	r0 = b[r15 + 51] (u)			  ## port_overwrite.c:465:9
 1e0a97c:    00 e0 9b 04       	if (r0 == 0) goto 2358 <suppress_tick_and_sleep+0x95C : 1e0b2b6 >			  ## port_overwrite.c:465:9
 1e0a980:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1067:20
 1e0a984:    0b 30             	if (r0 != 0) goto 22 <suppress_tick_and_sleep+0x42 : 1e0a99c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1067:20
 1e0a986:    01 f9 8c 80       	r1 = b[r8 + 140] (u)
 1e0a98a:    40 71             	r0 = 20			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0a98c:    01 32             	if (r1 != 0) goto 2 <suppress_tick_and_sleep+0x36 : 1e0a990 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:35
 1e0a98e:    00 70             	r0 = 0
 1e0a990:    c1 ff e4 1d 00 00 	r1 = 7652 <lrc.4 : 1de4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:21
 1e0a996:    01 62             	r1 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0a998:    01 f2 8d 34       	if (r1 < r0) goto 2330 <suppress_tick_and_sleep+0x95C : 1e0b2b6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:255:13
 1e0a99c:    97 f3 fe e1       	call 3130364 <local_irq_disable : 106d9c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1073:5
 1e0a9a0:    08 00             	csync			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1073:5
 1e0a9a2:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1747:20
 1e0a9a6:    c1 ff 17 18 1a 00 	r1 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1747:20
 1e0a9ac:    10 e0 11 10       	if (r0 != 1) goto 34 <suppress_tick_and_sleep+0x78 : 1e0a9d2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1747:20
 1e0a9b0:    00 62             	r0 = b[r1 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1751:9
 1e0a9b2:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1751:9
 1e0a9b4:    08 62             	b[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1751:9
 1e0a9b6:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1753:52
 1e0a9ba:    01 f9 48 f0       	r1 = b[r15 + 72] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1753:24
 1e0a9be:    01 f2 17 00       	if (r1 == r0) goto 46 <suppress_tick_and_sleep+0x96 : 1e0a9f0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1753:24
 1e0a9c2:    00 f6 24 f3       	r0 = [r15 + 804]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1757:40
 1e0a9c6:    10 f6 20 f3       	[r15 + 800] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1757:27
 1e0a9ca:    bf f3 78 c3       	call -30992 <__hw_btosc_time_set : 1e030be >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1759:9
 1e0a9ce:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1763:20
 1e0a9d2:    0c 30             	if (r0 != 0) goto 24 <suppress_tick_and_sleep+0x92 : 1e0a9ec >
 1e0a9d4:    8f f3 00 cf       	call 2072064 <__get_lrc_hz : 47d8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1766:29
 1e0a9d8:    10 f6 20 f3       	[r15 + 800] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1766:27
 1e0a9dc:    00 f9 48 f0       	r0 = b[r15 + 72] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1769:24
 1e0a9e0:    80 20             	if (r0 == 0) goto 256 <suppress_tick_and_sleep+0x188 : 1e0aae2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1769:24
 1e0a9e2:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1775:9
 1e0a9e4:    bf f3 10 c4       	call -30688 <__hw_lrc_time_set : 1e03208 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1775:9
 1e0a9e8:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1775:9
 1e0a9ec:    10 f9 48 f0       	b[r15 + 72] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1778:30
 1e0a9f0:    f0 08             	r0 = r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0a9f2:    bf f3 89 c4       	call -30446 <low_power_group_query : 1e03308 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0a9f6:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1077:13
 1e0a9f8:    f4 fc 0c 00       	r4 = r15 + 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1079:13
 1e0a9fc:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1079:13
 1e0a9fe:    bf f3 83 c4       	call -30458 <low_power_group_query : 1e03308 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1079:13
 1e0aa02:    06 f2 01 30       	if (r6 < r0) goto 2 <suppress_tick_and_sleep+0xAE : 1e0aa08 >
 1e0aa06:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1081:15
 1e0aa08:    06 e0 53 04       	if (r6 == 0) goto 2214 <suppress_tick_and_sleep+0x958 : 1e0b2b2 >
 1e0aa0c:    c0 ff 88 1f 1a 00 	r0 = 1712008 <uECC_vli_cmp_unsafe+0x9AF8C : 1a1f88 >
 1e0aa12:    02 60             	r2 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:91:9
 1e0aa14:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:91:9
 1e0aa16:    04 f3 0b 20       	if ((r2 & 16) == 0) goto 22 <suppress_tick_and_sleep+0xD6 : 1e0aa30 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:91:9
 1e0aa1a:    01 60             	r1 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:30:18
 1e0aa1c:    11 b3             	r1 |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:30:18
 1e0aa1e:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:30:18
 1e0aa20:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:25
 1e0aa22:    20 fd 0f 09       	r0 = r0 & 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:38
 1e0aa26:    c1 ff 68 e2 e0 01 	r1 = 31515240 <wdt_time : 1e0e268 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:16
 1e0aa2c:    a1 f6 00 10       	r1 = [r1+r0<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/wdt.c:93:16
 1e0aa30:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1091:24
 1e0aa34:    08 0e             	r0 = r1 * r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1091:24
 1e0aa36:    40 d0             	r0 = r0 >> 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1091:41
 1e0aa38:    02 08             	r2 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0aa3a:    06 f2 01 80       	if (r6 > r0) goto 2 <suppress_tick_and_sleep+0xE6 : 1e0aa40 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0aa3e:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0aa40:    01 30             	if (r0 != 0) goto 2 <suppress_tick_and_sleep+0xEA : 1e0aa44 >
 1e0aa42:    62 08             	r2 = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1092:21
 1e0aa44:    bf f3 7f c4       	call -30466 <__lp_timer_is_running : 1e03346 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1096:9
 1e0aa48:    04 20             	if (r0 == 0) goto 8 <suppress_tick_and_sleep+0xF8 : 1e0aa52 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1096:9
 1e0aa4a:    bf f3 83 c4       	call -30458 <__lp_timer_dump : 1e03354 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1097:9
 1e0aa4e:    8f f3 57 c4       	call 2066606 <p33_soft_reset : 3300 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0aa52:    00 f6 00 f0       	r0 = [r15 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:124:18
 1e0aa56:    c5 ff d1 1f 1a 00 	r5 = 1712081 <uECC_vli_cmp_unsafe+0x9AFD5 : 1a1fd1 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:124:18
 1e0aa5c:    f0 f2 12 00       	if (r0 == r15) goto 36 <suppress_tick_and_sleep+0x12A : 1e0aa84 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1102:9
 1e0aa60:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1104:13
 1e0aa62:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x110 : 1e0aa6a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1104:13
 1e0aa66:    bf f3 75 c4       	call -30486 <__lp_timer_dump : 1e03354 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1105:13
 1e0aa6a:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1111:13
 1e0aa6c:    bf f3 7d c4       	call -30470 <__lp_timer_set_time : 1e0336a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1111:13
 1e0aa70:    00 e0 1f 04       	if (r0 == 0) goto 2110 <suppress_tick_and_sleep+0x958 : 1e0b2b2 >
 1e0aa74:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1116:13
 1e0aa76:    05 f3 02 00       	if ((r0 & 32) == 0) goto 4 <suppress_tick_and_sleep+0x124 : 1e0aa7e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1116:13
 1e0aa7a:    bf f3 6b c4       	call -30506 <__lp_timer_dump : 1e03354 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1120:13
 1e0aa7e:    bf f3 b3 c4       	call -30362 <__lp_timer_get_period : 1e033e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1123:19
 1e0aa82:    0f 18             	goto 30 <suppress_tick_and_sleep+0x148 : 1e0aaa2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1123:19
 1e0aa84:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1127:13
 1e0aa86:    bf f3 70 c4       	call -30496 <__lp_timer_set_time : 1e0336a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1127:13
 1e0aa8a:    00 e0 12 04       	if (r0 == 0) goto 2084 <suppress_tick_and_sleep+0x958 : 1e0b2b2 >
 1e0aa8e:    bf f3 ab c4       	call -30378 <__lp_timer_get_period : 1e033e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1133:19
 1e0aa92:    ed 07             	r13 = -2
 1e0aa94:    e0 ef 06 00       	if (r0 == -2) goto 12 <suppress_tick_and_sleep+0x14A : 1e0aaa4 >
 1e0aa98:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1136:13
 1e0aa9e:    00 f4 20 19       	[r1 + 0] |= 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1136:13
 1e0aaa2:    0d 08             	r13 = r0
 1e0aaa4:    f0 08             	r0 = r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1141:5
 1e0aaa6:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1141:5
 1e0aaa8:    bf f3 ac c4       	call -30376 <__low_power_suspend : 1e03404 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1141:5
 1e0aaac:    40 08             	r0 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1145:5
 1e0aaae:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1145:5
 1e0aab0:    bf f3 a8 c4       	call -30384 <__low_power_suspend : 1e03404 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1145:5
 1e0aab4:    c6 ff 90 de e0 01 	r6 = 31514256 <uart : 1e0de90 >
 1e0aaba:    c7 ff 24 de e0 01 	r7 = 31514148 <syscfg_ops_end : 1e0de24 >
 1e0aac0:    05 70             	r5 = 0
 1e0aac2:    67 f2 13 20       	if (r7 >= r6) goto 38 <suppress_tick_and_sleep+0x192 : 1e0aaec >
 1e0aac6:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1238:16
 1e0aac8:    08 20             	if (r0 == 0) goto 16 <suppress_tick_and_sleep+0x180 : 1e0aada >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1238:16
 1e0aaca:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1243:13
 1e0aacc:    06 20             	if (r0 == 0) goto 12 <suppress_tick_and_sleep+0x180 : 1e0aada >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1243:13
 1e0aace:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1247:16
 1e0aad0:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1247:13
 1e0aad2:    10 e0 0a 00       	if (r0 == 1) goto 20 <suppress_tick_and_sleep+0x190 : 1e0aaea >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1247:13
 1e0aad6:    10 4e             	r0 = [r7 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1252:16
 1e0aad8:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1252:13
 1e0aada:    c7 80             	r7 += 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1236:5
 1e0aadc:    67 f2 f3 3f       	if (r7 < r6) goto -26 <suppress_tick_and_sleep+0x16C : 1e0aac6 >
 1e0aae0:    05 18             	goto 10 <suppress_tick_and_sleep+0x192 : 1e0aaec >
 1e0aae2:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1771:13
 1e0aae4:    bf f3 90 c3       	call -30944 <__hw_lrc_time_set : 1e03208 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1771:13
 1e0aae8:    83 1f             	goto -250 <suppress_tick_and_sleep+0x96 : 1e0a9f0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1771:13
 1e0aaea:    15 70             	r5 = 1
 1e0aaec:    15 f6 1c f0       	[r15 + 28] = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1147:19
 1e0aaf0:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:597:5
 1e0aaf2:    bf f3 59 c2       	call -31566 <__hw_lrc_enable : 1e02fa8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:597:5
 1e0aaf6:    00 f9 47 f0       	r0 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0aafa:    ce ff 08 00 1e 00 	r14 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0ab00:    1c 02             	[sp+4] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0ab02:    00 e0 2c 11       	if (r0 != 0) goto 600 <suppress_tick_and_sleep+0x404 : 1e0ad5e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:599:20
 1e0ab06:    c0 ff 74 30 00 00 	r0 = 12404 <update_bss_end : 3074 >
 1e0ab0c:    00 60             	r0 = b[r0 + 0] (u)
 1e0ab0e:    00 e0 26 01       	if (r0 == 0) goto 588 <suppress_tick_and_sleep+0x404 : 1e0ad5e >
 1e0ab12:    e0 fc 18 19       	r0 = r14 + 6424
 1e0ab16:    01 08             	r1 = r0
 1e0ab18:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:93:22
 1e0ab1a:    08 02             	[sp] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0ab1c:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0ab1e:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0ab22:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0ab24:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:95:5
 1e0ab26:    00 f6 0c e0       	r0 = [r14 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0ab2a:    30 fd e0 0c       	r0 = r0 & 536870911			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0ab2e:    00 fd 80 0c       	r0 = r0 | 2147483648			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0ab32:    10 f6 0c e0       	[r14 + 12] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:98:5
 1e0ab36:    01 f4 08 1a       	[r1 + 4] |= 2048			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:100:5
 1e0ab3a:    00 f4 40 1c       	[r1 + 0] |= 1073741824			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:102:5
 1e0ab3e:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab40:    30 fd 07 09       	r0 = r0 & 4294967288			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab44:    00 fd 03 09       	r0 = r0 | 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab48:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab4a:    c0 ff 7c 30 00 00 	r0 = 12412 <hdl.5 : 307c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab50:    00 60             	r0 = b[r0 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab52:    f0 fd 60 90       	r9 = r0 << 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab56:    f2 70             	r2 = 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab58:    05 70             	r5 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab5a:    38 70             	r8 = 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab5c:    80 71             	r0 = 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab5e:    c0 fe 00 79       	r7 = r9 / r0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab62:    0a 70             	r10 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab64:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab66:    0b 70             	r11 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab68:    0c 70             	r12 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:104:5
 1e0ab6a:    e0 fc 18 19       	r0 = r14 + 6424
 1e0ab6e:    01 08             	r1 = r0
 1e0ab70:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0ab72:    86 04             	r6 = r2.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0ab74:    c5 fd 20 06       	r0 <= insert(r6, p:4, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0ab78:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:121:9
 1e0ab7a:    bf f3 60 c4       	call -30528 <__hw_xosc_fsck_run : 1e0343e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:123:9
 1e0ab7e:    e0 fc fc 10       	r0 = r14 + 4348			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0ab82:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:125:32
 1e0ab84:    61 fb 03 59       	r1 = 3 - r5
 1e0ab88:    60 ff ff 19 08 00 	if ((r1 & 255) == 0) goto 16 <suppress_tick_and_sleep+0x244 : 1e0ab9e >
 1e0ab8e:    11 70             	r1 = 1
 1e0ab90:    83 08             	r3 = r8
 1e0ab92:    f3 8f             	r3 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0ab94:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0ab96:    61 ff ff 39 fb ff 	if ((r3 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x238 : 1e0ab92 >
 1e0ab9c:    01 18             	goto 2 <suppress_tick_and_sleep+0x246 : 1e0aba0 >
 1e0ab9e:    11 70             	r1 = 1
 1e0aba0:    70 f2 04 90       	if (r0 <= r7) goto 8 <suppress_tick_and_sleep+0x252 : 1e0abac >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:128:13
 1e0aba4:    61 09             	r1 += r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0aba6:    0c 08             	r12 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0aba8:    24 08             	r4 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0abaa:    03 18             	goto 6 <suppress_tick_and_sleep+0x258 : 1e0abb2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:131:18
 1e0abac:    61 bc             	r1 = r6 - r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0abae:    0b 08             	r11 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0abb0:    2a 08             	r10 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:135:18
 1e0abb2:    15 80             	r5 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:35
 1e0abb4:    f8 8f             	r8 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0abb6:    12 08             	r2 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0abb8:    55 e0 d7 1f       	if (r5 != 5) goto -82 <suppress_tick_and_sleep+0x210 : 1e0ab6a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:119:5
 1e0abbc:    90 fb 70 0c       	r0 = r12 - r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:140:57
 1e0abc0:    90 fb b0 17       	r1 = r7 - r11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0abc4:    01 f2 01 30       	if (r1 < r0) goto 2 <suppress_tick_and_sleep+0x270 : 1e0abca >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:140:25
 1e0abc8:    4a 08             	r10 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:143:5
 1e0abca:    e0 fc 18 19       	r0 = r14 + 6424
 1e0abce:    01 08             	r1 = r0
 1e0abd0:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0abd2:    c5 fd 20 0a       	r0 <= insert(r10, p:4, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0abd6:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0abd8:    35 70             	r5 = 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0abda:    02 70             	r2 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0abdc:    13 70             	r3 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:156:5
 1e0abde:    e0 fc 18 19       	r0 = r14 + 6424
 1e0abe2:    04 08             	r4 = r0
 1e0abe4:    10 48             	r0 = [r4 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0abe6:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0abe8:    51 08             	r1 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0abea:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0abee:    19 48             	[r4 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0abf0:    bf f3 25 c4       	call -30646 <__hw_xosc_fsck_run : 1e0343e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:161:9
 1e0abf4:    e0 fc fc 10       	r0 = r14 + 4348			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0abf8:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:163:32
 1e0abfa:    64 fb 01 29       	r4 = 1 - r2
 1e0abfe:    11 70             	r1 = 1
 1e0ac00:    60 ff ff 49 06 00 	if ((r4 & 255) == 0) goto 12 <suppress_tick_and_sleep+0x2B8 : 1e0ac12 >
 1e0ac06:    36 08             	r6 = r3
 1e0ac08:    f6 8f             	r6 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:76:19
 1e0ac0a:    49 c0             	r1 = r1 << 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:77:17
 1e0ac0c:    61 ff ff 69 fb ff 	if ((r6 & 255) != 0) goto -10 <suppress_tick_and_sleep+0x2AE : 1e0ac08 >
 1e0ac12:    45 05             	r5 = r5.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:159:9
 1e0ac14:    66 fb 00 19       	r6 = 0 - r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ac18:    70 f2 01 80       	if (r0 > r7) goto 2 <suppress_tick_and_sleep+0x2C4 : 1e0ac1e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ac1c:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ac1e:    65 09             	r5 += r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:166:13
 1e0ac20:    12 80             	r2 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:158:47
 1e0ac22:    f3 8f             	r3 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0ac24:    32 e0 db 1f       	if (r2 != 3) goto -74 <suppress_tick_and_sleep+0x284 : 1e0abde >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:158:5
 1e0ac28:    e0 fc 18 19       	r0 = r14 + 6424
 1e0ac2c:    02 08             	r2 = r0
 1e0ac2e:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ac30:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ac32:    18 44             	[r2 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:190:5
 1e0ac34:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ac36:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ac38:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:192:5
 1e0ac3a:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ac3c:    01 02             	r1 = [sp]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ac3e:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ac40:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ac44:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:194:5
 1e0ac46:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:211:22
 1e0ac48:    08 02             	[sp] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ac4a:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ac4c:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ac50:    90 b1             	r0 |= 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ac52:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:213:5
 1e0ac54:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:216:15
 1e0ac56:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0ac58:    01 f6 0c e0       	r1 = [r14 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ac5c:    31 fd e0 1c       	r1 = r1 & 536870911			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ac60:    01 fd 80 1c       	r1 = r1 | 2147483648			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ac64:    11 f6 0c e0       	[r14 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:219:5
 1e0ac68:    01 f4 08 2a       	[r2 + 4] |= 2048			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:221:5
 1e0ac6c:    00 f4 40 2c       	[r2 + 0] |= 1073741824			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:223:5
 1e0ac70:    20 fd 07 09       	r0 = r0 & 7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:217:15
 1e0ac74:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0ac76:    20 e0 01 80       	if (r0 > 2) goto 2 <suppress_tick_and_sleep+0x322 : 1e0ac7c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:228:16
 1e0ac7a:    21 70             	r1 = 2
 1e0ac7c:    57 70             	r7 = 5
 1e0ac7e:    50 e0 01 80       	if (r0 > 5) goto 2 <suppress_tick_and_sleep+0x32A : 1e0ac84 >
 1e0ac82:    17 08             	r7 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:226:9
 1e0ac84:    80 71             	r0 = 24
 1e0ac86:    c0 fe 00 59       	r5 = r9 / r0 (u)
 1e0ac8a:    54 fc fb ff       	r4 = r5 + -5
 1e0ac8e:    53 9a             	r3 = r5 + 5
 1e0ac90:    f8 07             	r8 = -1
 1e0ac92:    fa 7f             	r10 = 255
 1e0ac94:    02 70             	r2 = 0
 1e0ac96:    c9 ff 62 e2 e0 01 	r9 = 31515234 <wk_param+0x52 : 1e0e262 >
 1e0ac9c:    0b 70             	r11 = 0
 1e0ac9e:    fc 7f             	r12 = 255
 1e0aca0:    00 fa 00 b9       	r0 = b[r11+r9] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0aca4:    c1 ff 20 19 1e 00 	r1 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0acaa:    16 08             	r6 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0acac:    11 4c             	r1 = [r6 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0acae:    70 09             	r0 += r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0acb0:    c3 fd 00 10       	r1 <= insert(r0, p:0, l:3)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0acb4:    19 4c             	[r6 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:240:9
 1e0acb6:    bf f3 c2 c3       	call -30844 <__hw_xosc_fsck_run : 1e0343e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:242:9
 1e0acba:    c0 ff 04 11 1e 00 	r0 = 1970436 <uECC_vli_cmp_unsafe+0xDA108 : 1e1104 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e0acc0:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:243:32
 1e0acc2:    61 b1             	r1 = r0 - r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0acc4:    ce df             	r6 = r1 >>> 31			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0acc6:    61 09             	r1 += r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0acc8:    d1 bc             	r1 ^= r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:245:33
 1e0acca:    41 04             	r1 = r1.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:248:23
 1e0accc:    18 f2 04 90       	if (r8 <= r1) goto 8 <suppress_tick_and_sleep+0x37E : 1e0acd8 >
 1e0acd0:    06 fa 00 b9       	r6 = b[r11+r9] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:250:34
 1e0acd4:    ce bd             	r14 = r6 + r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e0acd6:    18 08             	r8 = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:250:32
 1e0acd8:    30 f2 0b 20       	if (r0 >= r3) goto 22 <suppress_tick_and_sleep+0x398 : 1e0acf2 >
 1e0acdc:    40 f2 09 90       	if (r0 <= r4) goto 18 <suppress_tick_and_sleep+0x398 : 1e0acf2 >
 1e0ace0:    e4 fd 00 1c       	r1 = r12.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:23
 1e0ace4:    20 08             	r0 = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0ace6:    00 ff ff 10 01 00 	if (r1 == 255) goto 2 <suppress_tick_and_sleep+0x394 : 1e0acee >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0acec:    c0 08             	r0 = r12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:254:17
 1e0acee:    0c 08             	r12 = r0
 1e0acf0:    2a 08             	r10 = r2
 1e0acf2:    1b 80             	r11 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:236:50
 1e0acf4:    12 80             	r2 += 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e0acf6:    5b e0 d3 1f       	if (r11 != 5) goto -90 <suppress_tick_and_sleep+0x346 : 1e0aca0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:236:23
 1e0acfa:    58 e0 0d 20       	if (r8 >= 5) goto 26 <suppress_tick_and_sleep+0x3BE : 1e0ad18 >
 1e0acfe:    e4 fd 00 0c       	r0 = r12.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:26
 1e0ad02:    e4 fd 00 1a       	r1 = r10.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:18
 1e0ad06:    21 b2             	r1 = r1 - r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:24
 1e0ad08:    22 70             	r2 = 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e0ad0a:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:33
 1e0ad0e:    10 09             	r0 += r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:265:37
 1e0ad10:    00 04             	r0 = r0.b0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e0ad12:    00 fa 00 09       	r0 = b[r0+r9] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:266:23
 1e0ad16:    ce b1             	r14 = r0 + r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:266:21
 1e0ad18:    c0 ff 20 19 1e 00 	r0 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >
 1e0ad1e:    02 08             	r2 = r0
 1e0ad20:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0ad22:    c0 d0             	r0 = r0 >> 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0ad24:    dd fd 18 e0       	r14 <= insert(r0, p:3, l:29)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0ad28:    1e f6 04 20       	[r2 + 4] = r14			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:272:5
 1e0ad2c:    bf f3 87 c3       	call -30962 <__hw_xosc_fsck_run : 1e0343e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:274:5
 1e0ad30:    c0 ff 04 11 1e 00 	r0 = 1970436 <uECC_vli_cmp_unsafe+0xDA108 : 1e1104 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e0ad36:    00 40             	r0 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:275:28
 1e0ad38:    10 44             	r0 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0ad3a:    f0 b5             	r0 &= 4294965247			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0ad3c:    18 44             	[r2 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:280:5
 1e0ad3e:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0ad40:    70 bf             	r0 &= 3221225471			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0ad42:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:282:5
 1e0ad44:    00 44             	r0 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ad46:    01 02             	r1 = [sp]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ad48:    89 d0             	r1 = r1 >> 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ad4a:    c3 fd 10 01       	r0 <= insert(r1, p:2, l:3)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ad4e:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ad50:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ad56:    48 08             	r8 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/xosc_fsck.c:284:5
 1e0ad58:    ce ff 08 00 1e 00 	r14 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >
 1e0ad5e:    01 f6 30 f3       	r1 = [r15 + 816]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:607:20
 1e0ad62:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x40E : 1e0ad68 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:607:20
 1e0ad64:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:608:9
 1e0ad66:    81 00             	call r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:608:9
 1e0ad68:    00 70             	r0 = 0
 1e0ad6a:    c9 ff 40 86 07 00 	r9 = 493120 <text_size+0x60460 : 78640 >
 1e0ad70:    01 70             	r1 = 0
 1e0ad72:    a2 f6 00 19       	r2 = [r1+r9<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:499:18
 1e0ad76:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:499:38
 1e0ad7a:    4a 47             	[r3 + 80] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:499:16
 1e0ad7c:    b0 f6 00 19       	[r1+r9<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:500:36
 1e0ad80:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:498:23
 1e0ad82:    01 e2 f6 1f       	if (r1 != 32) goto -20 <suppress_tick_and_sleep+0x418 : 1e0ad72 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:498:23
 1e0ad86:    e0 fc 18 19       	r0 = r14 + 6424
 1e0ad8a:    01 08             	r1 = r0
 1e0ad8c:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:503:22
 1e0ad8e:    10 f6 70 f0       	[r15 + 112] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:503:12
 1e0ad92:    10 42             	r0 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:504:22
 1e0ad94:    10 f6 74 f0       	[r15 + 116] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:504:12
 1e0ad98:    00 70             	r0 = 0
 1e0ad9a:    9a fc 0a 00       	r10 = r9 + 10
 1e0ad9e:    01 70             	r1 = 0
 1e0ada0:    a2 f6 00 1a       	r2 = [r1+r10<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:507:18
 1e0ada4:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:507:39
 1e0ada8:    ea 47             	[r3 + 120] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:507:16
 1e0adaa:    b0 f6 00 1a       	[r1+r10<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:508:37
 1e0adae:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:506:23
 1e0adb0:    01 e5 f6 1f       	if (r1 != 80) goto -20 <suppress_tick_and_sleep+0x446 : 1e0ada0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:506:23
 1e0adb4:    9c fc 80 0f       	r12 = r9 + 3968
 1e0adb8:    01 70             	r1 = 0
 1e0adba:    a2 f6 00 1c       	r2 = [r1+r12<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:480:18
 1e0adbe:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:480:41
 1e0adc2:    12 f6 c8 30       	[r3 + 200] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:480:16
 1e0adc6:    b0 f6 00 1c       	[r1+r12<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:481:39
 1e0adca:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:479:23
 1e0adcc:    01 ff e4 10 f4 ff 	if (r1 != 228) goto -24 <suppress_tick_and_sleep+0x460 : 1e0adba >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:479:23
 1e0add2:    94 fc 40 0f       	r4 = r9 + 3904
 1e0add6:    01 70             	r1 = 0
 1e0add8:    a2 f6 00 14       	r2 = [r1+r4<<2]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:485:18
 1e0addc:    80 fb f0 31       	r3 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:485:38
 1e0ade0:    12 f6 ac 31       	[r3 + 428] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:485:16
 1e0ade4:    b0 f6 00 14       	[r1+r4<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:486:36
 1e0ade8:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:484:23
 1e0adea:    81 e7 f5 1f       	if (r1 != 120) goto -22 <suppress_tick_and_sleep+0x47E : 1e0add8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:484:23
 1e0adee:    e2 fc 00 50       	r2 = r14 + 20480
 1e0adf2:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:516:24
 1e0adf4:    f0 fc 24 02       	r0 = r15 + 548			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:516:24
 1e0adf8:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:516:12
 1e0adfa:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:517:24
 1e0adfc:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:517:12
 1e0adfe:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:518:24
 1e0ae00:    29 40             	[r0 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:518:12
 1e0ae02:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:519:24
 1e0ae04:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:519:12
 1e0ae06:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:520:24
 1e0ae08:    49 40             	[r0 + 16] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:520:12
 1e0ae0a:    22 fc 00 01       	r2 = r2 + 256			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:520:12
 1e0ae0e:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:525:24
 1e0ae10:    59 40             	[r0 + 20] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:525:12
 1e0ae12:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:526:24
 1e0ae14:    69 40             	[r0 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:526:12
 1e0ae16:    61 44             	r1 = [r2 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:527:24
 1e0ae18:    79 40             	[r0 + 28] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:527:12
 1e0ae1a:    21 44             	r1 = [r2 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:528:24
 1e0ae1c:    89 40             	[r0 + 32] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:528:12
 1e0ae1e:    31 44             	r1 = [r2 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:529:24
 1e0ae20:    99 40             	[r0 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:529:12
 1e0ae22:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:529:12
 1e0ae26:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:533:25
 1e0ae28:    a9 40             	[r0 + 40] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:533:12
 1e0ae2a:    23 fc 00 c4       	r3 = r2 + -15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:533:12
 1e0ae2e:    01 46             	r1 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:534:22
 1e0ae30:    b9 40             	[r0 + 44] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:534:12
 1e0ae32:    11 46             	r1 = [r3 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:535:22
 1e0ae34:    c9 40             	[r0 + 48] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:535:12
 1e0ae36:    91 44             	r1 = [r2 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:538:26
 1e0ae38:    d9 40             	[r0 + 52] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:538:12
 1e0ae3a:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:538:12
 1e0ae3e:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:539:23
 1e0ae40:    e9 40             	[r0 + 56] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:539:12
 1e0ae42:    11 44             	r1 = [r2 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:540:23
 1e0ae44:    f9 40             	[r0 + 60] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:540:12
 1e0ae46:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:540:12
 1e0ae4a:    01 44             	r1 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:542:22
 1e0ae4c:    09 41             	[r0 + 64] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:542:12
 1e0ae4e:    05 70             	r5 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:542:12
 1e0ae50:    0d 44             	[r2 + 0] = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:543:17
 1e0ae52:    c4 ff 95 18 1a 00 	r4 = 1710229 <uECC_vli_cmp_unsafe+0x9A899 : 1a1895 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:543:17
 1e0ae58:    51 68             	r1 = b[r4 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:551:14
 1e0ae5a:    81 fd 20 11       	r1 = uextra(r1, p:4, l:1)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:551:14
 1e0ae5e:    19 41             	[r0 + 68] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:551:12
 1e0ae60:    51 68             	r1 = b[r4 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:552:5
 1e0ae62:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:552:5
 1e0ae64:    59 68             	b[r4 + 5] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:552:5
 1e0ae66:    21 68             	r1 = b[r4 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:554:14
 1e0ae68:    21 fd 01 19       	r1 = r1 & 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:554:14
 1e0ae6c:    29 41             	[r0 + 72] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:554:12
 1e0ae6e:    20 68             	r0 = b[r4 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:555:5
 1e0ae70:    10 b0             	r0 |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:555:5
 1e0ae72:    28 68             	b[r4 + 2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:555:5
 1e0ae74:    01 f6 30 f3       	r1 = [r15 + 816]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:613:20
 1e0ae78:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x524 : 1e0ae7e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:613:20
 1e0ae7a:    20 70             	r0 = 2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:614:9
 1e0ae7c:    81 00             	call r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:614:9
 1e0ae7e:    00 f6 1c f0       	r0 = [r15 + 28]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:667:17
 1e0ae82:    10 e0 04 10       	if (r0 != 1) goto 8 <suppress_tick_and_sleep+0x534 : 1e0ae8e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:667:17
 1e0ae86:    00 f9 38 f0       	r0 = b[r15 + 56] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:668:21
 1e0ae8a:    25 fd 01 09       	r5 = r0 & 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:668:43
 1e0ae8e:    01 f4 01 e9       	[r14 + 4] |= 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:676:24
 1e0ae92:    00 f6 08 e0       	r0 = [r14 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e0ae96:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e0ae9a:    00 fd 03 0a       	r0 = r0 | 768			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e0ae9e:    10 f6 08 e0       	[r14 + 8] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:677:5
 1e0aea2:    08 00             	csync			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:678:5
 1e0aea4:    00 f6 00 e0       	r0 = [r14 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:680:29
 1e0aea8:    10 f6 54 80       	[r8 + 84] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:680:17
 1e0aeac:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:680:17
 1e0aeae:    10 f6 00 e0       	[r14 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:681:23
 1e0aeb2:    01 f6 1c f0       	r1 = [r15 + 28]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:18
 1e0aeb6:    02 f9 47 f0       	r2 = b[r15 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:70
 1e0aeba:    11 e0 02 00       	if (r1 == 1) goto 4 <suppress_tick_and_sleep+0x568 : 1e0aec2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:70
 1e0aebe:    12 e0 52 10       	if (r2 != 1) goto 164 <suppress_tick_and_sleep+0x60C : 1e0af66 >
 1e0aec2:    0a 02             	[sp] = r2
 1e0aec4:    5e 08             	r14 = r5
 1e0aec6:    10 70             	r0 = 1
 1e0aec8:    11 e0 01 00       	if (r1 == 1) goto 2 <suppress_tick_and_sleep+0x574 : 1e0aece >
 1e0aecc:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:24
 1e0aece:    c1 ff 20 19 1e 00 	r1 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >
 1e0aed4:    02 42             	r2 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:391:25
 1e0aed6:    03 42             	r3 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:392:25
 1e0aed8:    04 42             	r4 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:393:25
 1e0aeda:    41 c6             	r1 = r0 << 25			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:393:25
 1e0aedc:    85 fd 30 22       	r2 = uextra(r2, p:6, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:391:58
 1e0aee0:    84 fd 58 33       	r3 = uextra(r3, p:11, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:392:57
 1e0aee4:    84 fd 78 64       	r6 = uextra(r4, p:15, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:393:57
 1e0aee8:    0b fb c0 07       	r11 = 1984 <DRIVER_CODE_TOTAL+0x3A : 7c0 >
 1e0aeec:    c5 ff 01 00 08 19 	r5 = 419954689 <uECC_vli_cmp_unsafe+0xF79005 : 1080001 >
 1e0aef2:    10 70             	r0 = 1
 1e0aef4:    17 70             	r7 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:25
 1e0aef6:    32 e0 01 80       	if (r2 > 3) goto 2 <suppress_tick_and_sleep+0x5A2 : 1e0aefc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:25
 1e0aefa:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:25
 1e0aefc:    e2 b5             	r2 = r2 - r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:397:19
 1e0aefe:    94 c1             	r4 = r2 << 6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e0af00:    e2 fd b0 44       	r4 = r4 & r11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:405:32
 1e0af04:    e0 fd 40 81       	r8 = r1 | r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e0af08:    17 70             	r7 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e0af0a:    33 e0 01 80       	if (r3 > 3) goto 2 <suppress_tick_and_sleep+0x5B6 : 1e0af10 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e0af0e:    07 70             	r7 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:26
 1e0af10:    e3 b7             	r3 = r3 - r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:398:20
 1e0af12:    dc c2             	r4 = r3 << 11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e0af14:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:406:32
 1e0af18:    e0 fd 40 78       	r7 = r8 | r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e0af1c:    36 e0 01 80       	if (r6 > 3) goto 2 <suppress_tick_and_sleep+0x5C8 : 1e0af22 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e0af20:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:399:26
 1e0af22:    26 bc             	r6 = r6 - r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:399:20
 1e0af24:    f0 c3             	r0 = r6 << 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:407:32
 1e0af26:    20 fd 70 03       	r0 = r0 & 491520			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:407:32
 1e0af2a:    50 be             	r0 |= r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e0af2c:    50 ba             	r0 |= r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:413:60
 1e0af2e:    c4 ff 20 19 1e 00 	r4 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:401:30
 1e0af34:    08 48             	[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:401:30
 1e0af36:    32 e0 dc 1f       	if (r2 != 3) goto -72 <suppress_tick_and_sleep+0x598 : 1e0aef2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:401:30
 1e0af3a:    33 e0 da 1f       	if (r3 != 3) goto -76 <suppress_tick_and_sleep+0x598 : 1e0aef2 >
 1e0af3e:    36 e0 d8 1f       	if (r6 != 3) goto -80 <suppress_tick_and_sleep+0x598 : 1e0aef2 >
 1e0af42:    10 70             	r0 = 1
 1e0af44:    c4 ff 95 18 1a 00 	r4 = 1710229 <uECC_vli_cmp_unsafe+0x9A899 : 1a1895 >
 1e0af4a:    e5 08             	r5 = r14
 1e0af4c:    02 02             	r2 = [sp]
 1e0af4e:    12 e0 01 00       	if (r2 == 1) goto 2 <suppress_tick_and_sleep+0x5FA : 1e0af54 >
 1e0af52:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:387:79
 1e0af54:    c1 ff f3 94 02 00 	r1 = 169203 <text_size+0x11313 : 294f3 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:433:56
 1e0af5a:    c1 fd 70 10       	r1 <= insert(r0, p:14, l:1)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:433:56
 1e0af5e:    c0 ff 20 19 1e 00 	r0 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:425:26
 1e0af64:    19 40             	[r0 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:425:26
 1e0af66:    0f 3a             	if (r5 != 0) goto 30 <suppress_tick_and_sleep+0x62C : 1e0af86 >
 1e0af68:    c0 ff 00 47 1e 00 	r0 = 1984256 <uECC_vli_cmp_unsafe+0xDD704 : 1e4700 >
 1e0af6e:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e0af70:    31 fd 03 19       	r1 = r1 & 4294967292			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e0af74:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e0af76:    12 e0 06 00       	if (r2 == 1) goto 12 <suppress_tick_and_sleep+0x62C : 1e0af86 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:687:28
 1e0af7a:    00 fc 20 d2       	r0 = r0 + -11744
 1e0af7e:    01 08             	r1 = r0
 1e0af80:    00 42             	r0 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:690:32
 1e0af82:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:690:32
 1e0af84:    08 42             	[r1 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:690:32
 1e0af86:    00 68             	r0 = b[r4 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e0af88:    01 f9 2c f3       	r1 = b[r15 + 812] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e0af8c:    20 fd c7 09       	r0 = r0 & 199			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e0af90:    c9 c0             	r1 = r1 << 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e0af92:    21 fd 38 19       	r1 = r1 & 56			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e0af96:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e0af98:    08 68             	b[r4 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:695:5
 1e0af9a:    8f f3 aa cc       	call 2070868 <low_power_system_down : 48f2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1160:5
 1e0af9e:    02 f6 50 f0       	r2 = [r15 + 80]
 1e0afa2:    00 70             	r0 = 0
 1e0afa4:    b2 f6 00 09       	[r0+r9<<2] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:570:36
 1e0afa8:    80 fb f0 10       	r1 = r0 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:570:29
 1e0afac:    52 43             	r2 = [r1 + 84]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:570:29
 1e0afae:    40 80             	r0 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:569:23
 1e0afb0:    00 e2 f8 1f       	if (r0 != 32) goto -16 <suppress_tick_and_sleep+0x64A : 1e0afa4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:569:23
 1e0afb4:    84 fd 78 02       	r0 = uextra(r2, p:15, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:448:52
 1e0afb8:    84 fd 58 12       	r1 = uextra(r2, p:11, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:447:52
 1e0afbc:    c3 ff 20 19 1e 00 	r3 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >
 1e0afc2:    05 46             	r5 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:450:21
 1e0afc4:    06 46             	r6 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:451:21
 1e0afc6:    04 46             	r4 = [r3 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:452:21
 1e0afc8:    85 fd 30 32       	r3 = uextra(r2, p:6, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:446:53
 1e0afcc:    85 fd 30 55       	r5 = uextra(r5, p:6, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:450:54
 1e0afd0:    84 fd 58 76       	r7 = uextra(r6, p:11, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:451:53
 1e0afd4:    84 fd 78 64       	r6 = uextra(r4, p:15, l:4)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:452:53
 1e0afd8:    09 fb c0 07       	r9 = 1984 <DRIVER_CODE_TOTAL+0x3A : 7c0 >
 1e0afdc:    c8 ff 3f 00 f8 ff 	r8 = 4294443071 <bank_code_load_addr+0x165793 : 1f8003f >
 1e0afe2:    1b 70             	r11 = 1
 1e0afe4:    1e 70             	r14 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:27
 1e0afe6:    53 f2 01 80       	if (r3 > r5) goto 2 <suppress_tick_and_sleep+0x692 : 1e0afec >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:27
 1e0afea:    0e 70             	r14 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:27
 1e0afec:    e5 09             	r5 += r14			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:455:15
 1e0afee:    ac c1             	r4 = r5 << 6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0aff0:    e2 fd 90 44       	r4 = r4 & r9			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0aff4:    e2 fd 80 22       	r2 = r2 & r8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0aff8:    52 b8             	r2 |= r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:459:9
 1e0affa:    14 70             	r4 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e0affc:    71 f2 01 80       	if (r1 > r7) goto 2 <suppress_tick_and_sleep+0x6A8 : 1e0b002 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e0b000:    04 70             	r4 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:29
 1e0b002:    47 09             	r7 += r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:456:16
 1e0b004:    fc c2             	r4 = r7 << 11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0b006:    24 fd 78 4a       	r4 = r4 & 30720			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0b00a:    52 b8             	r2 |= r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:460:9
 1e0b00c:    60 f2 01 80       	if (r0 > r6) goto 2 <suppress_tick_and_sleep+0x6B8 : 1e0b012 >
 1e0b010:    0b 70             	r11 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:457:29
 1e0b012:    b6 09             	r6 += r11			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:457:16
 1e0b014:    f4 c3             	r4 = r6 << 15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:461:9
 1e0b016:    24 fd 70 43       	r4 = r4 & 491520			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:461:9
 1e0b01a:    52 b8             	r2 |= r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:461:9
 1e0b01c:    c4 ff 20 19 1e 00 	r4 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:463:26
 1e0b022:    0a 48             	[r4 + 0] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:463:26
 1e0b024:    35 f2 dd 1f       	if (r5 != r3) goto -70 <suppress_tick_and_sleep+0x688 : 1e0afe2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:463:26
 1e0b028:    17 f2 db 1f       	if (r7 != r1) goto -74 <suppress_tick_and_sleep+0x688 : 1e0afe2 >
 1e0b02c:    06 f2 d9 1f       	if (r6 != r0) goto -78 <suppress_tick_and_sleep+0x688 : 1e0afe2 >
 1e0b030:    00 f6 74 f0       	r0 = [r15 + 116]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:24
 1e0b034:    41 08             	r1 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e0b036:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e0b038:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e0b03a:    a2 fc 36 0f       	r2 = r10 + 3894			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:574:22
 1e0b03e:    80 fb f0 10       	r1 = r0 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:577:43
 1e0b042:    e1 43             	r1 = [r1 + 120]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:577:39
 1e0b044:    b1 f6 00 0a       	[r0+r10<<2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:577:37
 1e0b048:    40 80             	r0 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:576:23
 1e0b04a:    00 e5 f8 1f       	if (r0 != 80) goto -16 <suppress_tick_and_sleep+0x6E4 : 1e0b03e >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:576:23
 1e0b04e:    00 70             	r0 = 0
 1e0b050:    c8 ff 17 18 1a 00 	r8 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >
 1e0b056:    09 f5 04 00       	r9 = [sp+4]
 1e0b05a:    85 fc ba 07       	r5 = r8 + 1978
 1e0b05e:    53 fc c4 f8       	r3 = r5 + -1852
 1e0b062:    80 fb f0 10       	r1 = r0 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:581:45
 1e0b066:    01 f6 c8 10       	r1 = [r1 + 200]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:581:41
 1e0b06a:    b1 f6 00 0c       	[r0+r12<<2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:581:39
 1e0b06e:    40 80             	r0 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:580:23
 1e0b070:    01 ff e4 00 f6 ff 	if (r0 != 228) goto -20 <suppress_tick_and_sleep+0x708 : 1e0b062 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:580:23
 1e0b076:    00 f6 ac f1       	r0 = [r15 + 428]
 1e0b07a:    01 70             	r1 = 0
 1e0b07c:    b0 f6 00 12       	[r1+r2<<2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:585:36
 1e0b080:    80 fb f0 01       	r0 = r1 + r15			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:585:29
 1e0b084:    00 f6 b0 01       	r0 = [r0 + 432]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:585:29
 1e0b088:    41 80             	r1 += 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:584:23
 1e0b08a:    81 e7 f7 1f       	if (r1 != 120) goto -18 <suppress_tick_and_sleep+0x722 : 1e0b07c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:584:23
 1e0b08e:    41 fc e8 36       	r1 = r4 + 14056
 1e0b092:    12 08             	r2 = r1
 1e0b094:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:588:19
 1e0b096:    f0 fc 28 02       	r0 = r15 + 552			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:588:19
 1e0b09a:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:589:21
 1e0b09c:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:589:19
 1e0b09e:    11 40             	r1 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:590:22
 1e0b0a0:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:590:20
 1e0b0a2:    21 40             	r1 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:591:21
 1e0b0a4:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:591:19
 1e0b0a6:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:592:20
 1e0b0a8:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:592:18
 1e0b0aa:    41 40             	r1 = [r0 + 16]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:595:21
 1e0b0ac:    42 fc e8 37       	r2 = r4 + 14312			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:595:21
 1e0b0b0:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:595:19
 1e0b0b2:    51 40             	r1 = [r0 + 20]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:596:21
 1e0b0b4:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:596:19
 1e0b0b6:    61 40             	r1 = [r0 + 24]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:597:22
 1e0b0b8:    69 44             	[r2 + 24] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:597:20
 1e0b0ba:    71 40             	r1 = [r0 + 28]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:598:20
 1e0b0bc:    29 44             	[r2 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:598:18
 1e0b0be:    81 40             	r1 = [r0 + 32]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:599:20
 1e0b0c0:    39 44             	[r2 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:599:18
 1e0b0c2:    91 40             	r1 = [r0 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:602:23
 1e0b0c4:    22 fc f8 02       	r2 = r2 + 760			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:602:23
 1e0b0c8:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:602:21
 1e0b0ca:    a1 40             	r1 = [r0 + 40]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:603:20
 1e0b0cc:    24 fc 00 c4       	r4 = r2 + -15360			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:603:20
 1e0b0d0:    09 48             	[r4 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:603:18
 1e0b0d2:    b1 40             	r1 = [r0 + 44]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:604:20
 1e0b0d4:    19 48             	[r4 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:604:18
 1e0b0d6:    c1 40             	r1 = [r0 + 48]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:607:24
 1e0b0d8:    99 44             	[r2 + 36] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:607:22
 1e0b0da:    d1 40             	r1 = [r0 + 52]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:608:21
 1e0b0dc:    22 fc 00 06       	r2 = r2 + 1536			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:608:21
 1e0b0e0:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:608:19
 1e0b0e2:    e1 40             	r1 = [r0 + 56]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:609:21
 1e0b0e4:    19 44             	[r2 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:609:19
 1e0b0e6:    f1 40             	r1 = [r0 + 60]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:611:19
 1e0b0e8:    22 fc 00 d7       	r2 = r2 + -10496			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:611:19
 1e0b0ec:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:611:17
 1e0b0ee:    00 f4 40 29       	[r2 + 0] |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:612:17
 1e0b0f2:    51 66             	r1 = b[r3 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e0b0f4:    02 41             	r2 = [r0 + 64]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e0b0f6:    71 b2             	r1 &= 4294967279			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e0b0f8:    12 c1             	r2 = r2 << 4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e0b0fa:    22 fd 10 29       	r2 = r2 & 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e0b0fe:    51 b4             	r1 |= r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e0b100:    59 66             	b[r3 + 5] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:617:5
 1e0b102:    21 66             	r1 = b[r3 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e0b104:    10 41             	r0 = [r0 + 68]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e0b106:    71 b0             	r1 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e0b108:    20 fd 01 09       	r0 = r0 & 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e0b10c:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e0b10e:    28 66             	b[r3 + 2] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/pmu_analog.c:619:5
 1e0b110:    01 f6 34 f3       	r1 = [r15 + 820]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:631:20
 1e0b114:    c7 ff 70 20 00 00 	r7 = 8304 <gatt_client_conn_handle : 2070 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:631:20
 1e0b11a:    02 22             	if (r1 == 0) goto 4 <suppress_tick_and_sleep+0x7C6 : 1e0b120 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:631:20
 1e0b11c:    d0 08             	r0 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:632:9
 1e0b11e:    81 00             	call r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:632:9
 1e0b120:    10 70             	r0 = 1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:636:5
 1e0b122:    bf f3 41 bf       	call -33150 <__hw_lrc_enable : 1e02fa8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:636:5
 1e0b126:    00 f9 31 f0       	r0 = b[r15 + 49] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1165:17
 1e0b12a:    07 20             	if (r0 == 0) goto 14 <suppress_tick_and_sleep+0x7E0 : 1e0b13a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1165:17
 1e0b12c:    bf f3 12 c1       	call -32220 <__lp_timer_dump : 1e03354 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1171:9
 1e0b130:    00 f9 31 f0       	r0 = b[r15 + 49] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1171:9
 1e0b134:    02 20             	if (r0 == 0) goto 4 <suppress_tick_and_sleep+0x7E0 : 1e0b13a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1171:9
 1e0b136:    8f f3 e3 c0       	call 2064838 <p33_soft_reset : 3300 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e0b13a:    01 f6 00 f0       	r1 = [r15 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:124:18
 1e0b13e:    bf f3 02 c1       	call -32252 <__lp_timer_is_running : 1e03346 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:748:19
 1e0b142:    f1 f2 88 00       	if (r1 == r15) goto 272 <suppress_tick_and_sleep+0x8FC : 1e0b256 >
 1e0b146:    5b 20             	if (r0 == 0) goto 182 <suppress_tick_and_sleep+0x8A4 : 1e0b1fe >
 1e0b148:    30 6a             	r0 = b[r5 + 3] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:125:12
 1e0b14a:    43 6a             	r3 = b[r5 + 4] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:13
 1e0b14c:    52 6a             	r2 = b[r5 + 5] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:13
 1e0b14e:    61 6a             	r1 = b[r5 + 6] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:13
 1e0b150:    24 6a             	r4 = b[r5 + 2] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0b152:    14 b3             	r4 |= 64			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0b154:    2c 6a             	b[r5 + 2] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:130:5
 1e0b156:    00 00             	nop			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:131:5
 1e0b158:    00 00             	nop			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:132:5
 1e0b15a:    24 f9 bc 87       	r4 = b[r8 + 1980] (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e0b15e:    f4 ef fc cf       	ifs (r4 > -1) goto -8 <suppress_tick_and_sleep+0x800 : 1e0b15a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:133:13
 1e0b162:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:126:9
 1e0b166:    c8 fd 80 02       	r0 <= insert(r2, p:16, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:127:9
 1e0b16a:    b2 6a             	r2 = b[r5 + 11] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:137:12
 1e0b16c:    c3 6a             	r3 = b[r5 + 12] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:14
 1e0b16e:    d4 6a             	r4 = b[r5 + 13] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:14
 1e0b170:    e6 6a             	r6 = b[r5 + 14] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:14
 1e0b172:    c8 fd c0 01       	r0 <= insert(r1, p:24, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:128:9
 1e0b176:    c8 fd 40 23       	r2 <= insert(r3, p:8, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:138:10
 1e0b17a:    c8 fd 80 24       	r2 <= insert(r4, p:16, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:139:10
 1e0b17e:    c8 fd c0 26       	r2 <= insert(r6, p:24, l:8)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:140:10
 1e0b182:    a0 b0             	r0 = r0 - r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:142:16
 1e0b184:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDC060 : f4240 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e0b18a:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e0b18c:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e0b18e:    bf f3 0f d6       	call -21474 <__muldi3 : 1e05db0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:365:18
 1e0b192:    02 f6 20 f3       	r2 = [r15 + 800]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:367:13
 1e0b196:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:367:11
 1e0b198:    bf f3 25 d6       	call -21430 <__udivdi3 : 1e05de6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:367:11
 1e0b19c:    01 f6 24 f0       	r1 = [r15 + 36]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:753:26
 1e0b1a0:    11 fc 2c 01       	r1 = r1 + 300			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:753:42
 1e0b1a4:    01 f2 2b 20       	if (r1 >= r0) goto 86 <suppress_tick_and_sleep+0x8A4 : 1e0b1fe >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:753:42
 1e0b1a8:    bf f3 6c c1       	call -32040 <__lp_timer_get_pass_time : 1e03484 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:756:27
 1e0b1ac:    00 fc 58 02       	r0 = r0 + 600			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:756:78
 1e0b1b0:    bf f3 7f c1       	call -32002 <__tcnt_us : 1e034b2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e0b1b4:    06 08             	r6 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:237:13
 1e0b1b6:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e0b1ba:    bf f3 7a c1       	call -32012 <__tcnt_us : 1e034b2 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:21
 1e0b1be:    20 bc             	r0 = r6 - r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:239:19
 1e0b1c0:    01 d6             	r1 = r0 >> 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:27
 1e0b1c2:    a9 6a             	b[r5 + 10] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:242:19
 1e0b1c4:    01 d4             	r1 = r0 >> 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:27
 1e0b1c6:    99 6a             	b[r5 + 9] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:243:19
 1e0b1c8:    01 d2             	r1 = r0 >> 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:27
 1e0b1ca:    89 6a             	b[r5 + 8] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:244:19
 1e0b1cc:    78 6a             	b[r5 + 7] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:245:19
 1e0b1ce:    30 d6             	r0 = r6 >> 24			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:27
 1e0b1d0:    68 6a             	b[r5 + 6] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:250:19
 1e0b1d2:    30 d4             	r0 = r6 >> 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:27
 1e0b1d4:    58 6a             	b[r5 + 5] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:251:19
 1e0b1d6:    30 d2             	r0 = r6 >> 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:27
 1e0b1d8:    48 6a             	b[r5 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:252:19
 1e0b1da:    3e 6a             	b[r5 + 3] = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:253:19
 1e0b1dc:    bf f3 04 c1       	call -32248 <__lp_timer_get_period : 1e033e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:758:27
 1e0b1e0:    11 6a             	r1 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:39
 1e0b1e2:    12 6a             	r2 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:61
 1e0b1e4:    0d 08             	r13 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:758:27
 1e0b1e6:    20 fd 20 19       	r0 = r1 & 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:39
 1e0b1ea:    31 fd 7f 29       	r1 = r2 & 4294967168			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:61
 1e0b1ee:    50 b2             	r0 |= r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:59
 1e0b1f0:    10 f9 31 f0       	b[r15 + 49] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:37
 1e0b1f4:    60 ff a0 09 02 00 	if ((r0 & 160) == 0) goto 4 <suppress_tick_and_sleep+0x8A4 : 1e0b1fe >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:759:37
 1e0b1fa:    bf f3 ab c0       	call -32426 <__lp_timer_dump : 1e03354 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:761:21
 1e0b1fe:    04 70             	r4 = 0
 1e0b200:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:770:17
 1e0b202:    05 f3 23 00       	if ((r0 & 32) == 0) goto 70 <suppress_tick_and_sleep+0x8F2 : 1e0b24c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:770:17
 1e0b206:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:772:17
 1e0b208:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:772:17
 1e0b20a:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:772:17
 1e0b20c:    14 f9 30 f0       	b[r15 + 48] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:643:21
 1e0b210:    06 f6 00 f0       	r6 = [r15 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:645:5
 1e0b214:    f6 f2 0d 00       	if (r6 == r15) goto 26 <suppress_tick_and_sleep+0x8D8 : 1e0b232 >
 1e0b218:    60 08             	r0 = r6
 1e0b21a:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:16
 1e0b21c:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:16
 1e0b21e:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x8D0 : 1e0b22a >
 1e0b220:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:31
 1e0b222:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x8D0 : 1e0b22a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:646:31
 1e0b224:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:647:31
 1e0b226:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:647:13
 1e0b228:    82 00             	call r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:647:13
 1e0b22a:    f6 f2 f5 1f       	if (r6 != r15) goto -22 <suppress_tick_and_sleep+0x8BE : 1e0b218 >
 1e0b22e:    06 f6 00 f0       	r6 = [r15 + 0]
 1e0b232:    f6 f2 0b 00       	if (r6 == r15) goto 22 <suppress_tick_and_sleep+0x8F2 : 1e0b24c >
 1e0b236:    60 08             	r0 = r6
 1e0b238:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:16
 1e0b23a:    06 40             	r6 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:16
 1e0b23c:    05 22             	if (r1 == 0) goto 10 <suppress_tick_and_sleep+0x8EE : 1e0b248 >
 1e0b23e:    52 42             	r2 = [r1 + 20]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:31
 1e0b240:    03 24             	if (r2 == 0) goto 6 <suppress_tick_and_sleep+0x8EE : 1e0b248 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:652:31
 1e0b242:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:653:36
 1e0b244:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:653:13
 1e0b246:    82 00             	call r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:653:13
 1e0b248:    f6 f2 f5 1f       	if (r6 != r15) goto -22 <suppress_tick_and_sleep+0x8DC : 1e0b236 >
 1e0b24c:    20 f9 bb 87       	r0 = b[r8 + 1979] (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:778:17
 1e0b250:    00 e0 d6 af       	ifs (r0 >= 0) goto -84 <suppress_tick_and_sleep+0x8A6 : 1e0b200 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:778:17
 1e0b254:    0a 18             	goto 20 <suppress_tick_and_sleep+0x910 : 1e0b26a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:778:17
 1e0b256:    03 20             	if (r0 == 0) goto 6 <suppress_tick_and_sleep+0x904 : 1e0b25e >
 1e0b258:    bf f3 14 c1       	call -32216 <__lp_timer_get_pass_time : 1e03484 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:799:23
 1e0b25c:    0d 08             	r13 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:799:23
 1e0b25e:    00 6a             	r0 = b[r5 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0b260:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0b262:    08 6a             	b[r5 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:180:5
 1e0b264:    10 6a             	r0 = b[r5 + 1] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0b266:    10 b2             	r0 |= 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0b268:    18 6a             	b[r5 + 1] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lp_timer_hw.c:181:5
 1e0b26a:    10 6a             	r0 = b[r5 + 1] (u)
 1e0b26c:    10 b3             	r0 |= 64
 1e0b26e:    18 6a             	b[r5 + 1] = r0
 1e0b270:    00 70             	r0 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:678:21
 1e0b272:    10 f9 30 f0       	b[r15 + 48] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:678:21
 1e0b276:    00 f6 0c f0       	r0 = [r15 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:679:5
 1e0b27a:    90 f2 0a 00       	if (r0 == r9) goto 20 <suppress_tick_and_sleep+0x938 : 1e0b292 >
 1e0b27e:    31 40             	r1 = [r0 + 12]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:680:16
 1e0b280:    04 40             	r4 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:680:16
 1e0b282:    04 22             	if (r1 == 0) goto 8 <suppress_tick_and_sleep+0x932 : 1e0b28c >
 1e0b284:    20 40             	r0 = [r0 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:31
 1e0b286:    42 42             	r2 = [r1 + 16]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:21
 1e0b288:    d1 08             	r1 = r13			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:13
 1e0b28a:    82 00             	call r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:681:13
 1e0b28c:    40 08             	r0 = r4
 1e0b28e:    94 f2 f6 1f       	if (r4 != r9) goto -20 <suppress_tick_and_sleep+0x924 : 1e0b27e >
 1e0b292:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e0b296:    70 b0             	r0 &= 4294967294			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e0b298:    10 f9 00 80       	b[r8 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e0b29c:    50 fc 20 00       	r0 = r5 + 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e0b2a0:    01 18             	goto 2 <suppress_tick_and_sleep+0x94A : 1e0b2a4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:814:5
 1e0b2a2:    02 00             	idle			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e0b2a4:    31 60             	r1 = b[r0 + 3] (u)
 1e0b2a6:    03 f3 fc 1f       	if ((r1 & 8) == 0) goto -8 <suppress_tick_and_sleep+0x948 : 1e0b2a2 >
 1e0b2aa:    81 70             	r1 = 8			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e0b2ac:    29 60             	b[r0 + 2] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e0b2ae:    61 6e             	r1 = b[r7 + 6] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e0b2b0:    09 60             	b[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1184:5
 1e0b2b2:    97 f3 71 dd       	call 3128034 <local_irq_enable : 106d98 >
 1e0b2b6:    97 f3 6f dd       	call 3128030 <local_irq_enable : 106d98 >			  ## port_overwrite.c:469:5
 1e0b2ba:    04 0a             	sp += 8			  ## port_overwrite.c:469:5
 1e0b2bc:    5f 01             	{pc, r15-r4} = [sp++]			  ## port_overwrite.c:87:1


idle_hook:
 1e0b2be:    34 00             	[--sp] = rets			  ## port_overwrite.c:90:0
 1e0b2c0:    bf f3 1a c1       	call -32204 <wdt_clear : 1e034f8 >			  ## port_overwrite.c:91:5
 1e0b2c4:    02 00             	idle			  ## port_overwrite.c:97:5
 1e0b2c6:    30 00             	pc = [sp++]			  ## port_overwrite.c:101:1


__power_get_timeout:
 1e0b2c8:    76 01             	[--sp] = {rets, r6-r4}			  ## port_overwrite.c:350:0
 1e0b2ca:    c4 ff 90 de e0 01 	r4 = 31514256 <uart : 1e0de90 >			  ## port_overwrite.c:350:0
 1e0b2d0:    c5 ff 24 de e0 01 	r5 = 31514148 <syscfg_ops_end : 1e0de24 >			  ## port_overwrite.c:350:0
 1e0b2d6:    45 f2 0d 20       	if (r5 >= r4) goto 26 <__power_get_timeout+0x2C : 1e0b2f4 >			  ## port_overwrite.c:350:0
 1e0b2da:    16 70             	r6 = 1			  ## port_overwrite.c:350:0
 1e0b2dc:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1219:16
 1e0b2de:    04 20             	if (r0 == 0) goto 8 <__power_get_timeout+0x20 : 1e0b2e8 >
 1e0b2e0:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1223:13
 1e0b2e2:    20 4a             	r0 = [r5 + 8]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1226:20
 1e0b2e4:    80 00             	call r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1226:17
 1e0b2e6:    56 b1             	r6 &= r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1226:17
 1e0b2e8:    c5 80             	r5 += 12			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1217:5
 1e0b2ea:    45 f2 f7 3f       	if (r5 < r4) goto -18 <__power_get_timeout+0x14 : 1e0b2dc >
 1e0b2ee:    60 ff ff 69 2c 00 	if ((r6 & 255) == 0) goto 88 <__power_get_timeout+0x84 : 1e0b34c >
 1e0b2f4:    97 f3 c2 dd       	call 3128196 <eTaskConfirmSleepModeStatus : 106e7c >			  ## port_overwrite.c:362:20
 1e0b2f8:    04 08             	r4 = r0			  ## port_overwrite.c:362:20
 1e0b2fa:    97 f3 bd dd       	call 3128186 <prvGetExpectedIdleTime : 106e78 >			  ## port_overwrite.c:366:10
 1e0b2fe:    06 28             	if (r4 == 0) goto 12 <__power_get_timeout+0x44 : 1e0b30c >			  ## port_overwrite.c:366:10
 1e0b300:    24 e0 06 10       	if (r4 != 2) goto 12 <__power_get_timeout+0x48 : 1e0b310 >
 1e0b304:    bf f3 ff c0       	call -32258 <wdt_close : 1e03506 >			  ## port_overwrite.c:382:17
 1e0b308:    e4 07             	r4 = -2			  ## port_overwrite.c:382:17
 1e0b30a:    05 18             	goto 10 <__power_get_timeout+0x4E : 1e0b316 >
 1e0b30c:    04 70             	r4 = 0
 1e0b30e:    03 18             	goto 6 <__power_get_timeout+0x4E : 1e0b316 >
 1e0b310:    01 fb 10 27       	r1 = 10000 <vm_obj+0xB0 : 2710 >			  ## port_overwrite.c:366:33
 1e0b314:    44 0e             	r4 = r0 * r1			  ## port_overwrite.c:366:33
 1e0b316:    c0 ff f0 e0 1b 00 	r0 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## port_overwrite.c:388:16
 1e0b31c:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:388:16
 1e0b31e:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >			  ## port_overwrite.c:390:18
 1e0b324:    10 f6 a4 50       	[r5 + 164] = r0			  ## port_overwrite.c:388:14
 1e0b328:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDC060 : f4240 >			  ## port_overwrite.c:390:35
 1e0b32e:    01 70             	r1 = 0			  ## port_overwrite.c:390:35
 1e0b330:    03 70             	r3 = 0			  ## port_overwrite.c:390:35
 1e0b332:    bf f3 3d d5       	call -21894 <__muldi3 : 1e05db0 >			  ## port_overwrite.c:390:35
 1e0b336:    c2 ff ac 30 00 00 	r2 = 12460 <hdl.15 : 30ac >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0b33c:    02 44             	r2 = [r2 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0b33e:    03 70             	r3 = 0			  ## port_overwrite.c:390:47
 1e0b340:    bf f3 51 d5       	call -21854 <__udivdi3 : 1e05de6 >			  ## port_overwrite.c:390:47
 1e0b344:    10 f6 a0 50       	[r5 + 160] = r0			  ## port_overwrite.c:390:18
 1e0b348:    20 b8             	r0 = r4 - r0			  ## port_overwrite.c:392:8
 1e0b34a:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:401:1
 1e0b34c:    00 70             	r0 = 0
 1e0b34e:    56 01             	{pc, r6-r4} = [sp++]			  ## port_overwrite.c:401:1


__power_suspend_post.1577:
 1e0b350:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## port_overwrite.c:404:0
 1e0b356:    11 70             	r1 = 1			  ## port_overwrite.c:405:27
 1e0b358:    d9 60             	b[r0 + 13] = r1			  ## port_overwrite.c:405:27
 1e0b35a:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:474:14
 1e0b360:    c0 f4 40 09       	[r0 + 0] = 64			  ## port_overwrite.c:474:14
 1e0b364:    20 00             	rts			  ## port_overwrite.c:407:1


__power_resume.1578:
 1e0b366:    78 01             	[--sp] = {rets, r8-r4}			  ## port_overwrite.c:410:0
 1e0b368:    14 08             	r4 = r1			  ## port_overwrite.c:410:0
 1e0b36a:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >			  ## port_overwrite.c:410:0
 1e0b370:    c7 ff ac 30 00 00 	r7 = 12460 <hdl.15 : 30ac >			  ## port_overwrite.c:410:0
 1e0b376:    e4 ef 04 10       	if (r4 != -2) goto 8 <__power_resume.1578+0x1C : 1e0b382 >			  ## port_overwrite.c:412:9
 1e0b37a:    00 f6 a0 80       	r0 = [r8 + 160]
 1e0b37e:    04 4e             	r4 = [r7 + 0]
 1e0b380:    1d 18             	goto 58 <__power_resume.1578+0x56 : 1e0b3bc >
 1e0b382:    06 fb 10 27       	r6 = 10000 <vm_obj+0xB0 : 2710 >			  ## port_overwrite.c:417:28
 1e0b386:    c0 fe 60 54       	r5 = r4 / r6 (u)			  ## port_overwrite.c:417:28
 1e0b38a:    50 08             	r0 = r5			  ## port_overwrite.c:417:9
 1e0b38c:    97 f3 78 dd       	call 3128048 <vTaskStepTick : 106e80 >			  ## port_overwrite.c:417:9
 1e0b390:    c0 ff 94 08 00 00 	r0 = 2196 <jiffies : 894 >			  ## port_overwrite.c:419:17
 1e0b396:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:419:17
 1e0b398:    51 09             	r1 += r5			  ## port_overwrite.c:419:17
 1e0b39a:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:419:17
 1e0b39c:    d0 fe 60 24       	r2 = r4 % r6 (u)			  ## port_overwrite.c:422:29
 1e0b3a0:    04 4e             	r4 = [r7 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0b3a2:    e1 df             	r1 = r4 >>> 31			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0b3a4:    03 70             	r3 = 0			  ## port_overwrite.c:426:42
 1e0b3a6:    40 08             	r0 = r4			  ## port_overwrite.c:426:42
 1e0b3a8:    bf f3 02 d5       	call -22012 <__muldi3 : 1e05db0 >			  ## port_overwrite.c:426:42
 1e0b3ac:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDC060 : f4240 >			  ## port_overwrite.c:426:67
 1e0b3b2:    03 70             	r3 = 0			  ## port_overwrite.c:426:67
 1e0b3b4:    bf f3 17 d5       	call -21970 <__udivdi3 : 1e05de6 >			  ## port_overwrite.c:426:67
 1e0b3b8:    10 f6 a0 80       	[r8 + 160] = r0			  ## port_overwrite.c:426:22
 1e0b3bc:    01 f6 a4 80       	r1 = [r8 + 164]			  ## port_overwrite.c:482:10
 1e0b3c0:    10 09             	r0 += r1			  ## port_overwrite.c:482:19
 1e0b3c2:    41 76             	r1 = 100			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0b3c4:    e0 fe 10 14       	r1 = r4 / r1 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0b3c8:    12 fc fe ff       	r2 = r1 + -2			  ## port_overwrite.c:485:31
 1e0b3cc:    f1 8f             	r1 += -1			  ## port_overwrite.c:479:68
 1e0b3ce:    10 f2 01 30       	if (r0 < r1) goto 2 <__power_resume.1578+0x6E : 1e0b3d4 >
 1e0b3d2:    20 08             	r0 = r2			  ## port_overwrite.c:482:9
 1e0b3d4:    c2 ff ec e0 1b 00 	r2 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >
 1e0b3da:    18 44             	[r2 + 4] = r0
 1e0b3dc:    29 44             	[r2 + 8] = r1			  ## port_overwrite.c:492:14
 1e0b3de:    c0 f4 41 29       	[r2 + 0] = 65			  ## port_overwrite.c:494:14
 1e0b3e2:    00 70             	r0 = 0			  ## port_overwrite.c:434:27
 1e0b3e4:    10 f9 0d 80       	b[r8 + 13] = r0			  ## port_overwrite.c:434:27
 1e0b3e8:    58 01             	{pc, r8-r4} = [sp++]			  ## port_overwrite.c:435:1


pvPortVMallocStack:
 1e0b3ea:    7b 01             	[--sp] = {rets, r11-r4}			  ## heap_mmu.c:639:0
 1e0b3ec:    08 08             	r8 = r0			  ## heap_mmu.c:639:0
 1e0b3ee:    97 f3 d5 dc       	call 3127722 <local_irq_disable : 106d9c >			  ## heap_mmu.c:645:5
 1e0b3f2:    08 00             	csync			  ## heap_mmu.c:645:5
 1e0b3f4:    f2 fd 38 98       	r9 = r8 >> 7			  ## heap_mmu.c:640:34
 1e0b3f8:    e6 fd 00 09       	r0 = r9.l (u)			  ## heap_mmu.c:640:34
 1e0b3fc:    ca ff 90 25 00 00 	r10 = 9616 <stack_mem : 2590 >			  ## heap_mmu.c:640:34
 1e0b402:    05 f7 4a a0       	r5 = h[r10 + 74] (u)			  ## heap_mmu.c:640:34
 1e0b406:    01 f7 48 a0       	r1 = h[r10 + 72] (u)			  ## heap_mmu.c:649:28
 1e0b40a:    04 70             	r4 = 0			  ## heap_mmu.c:649:28
 1e0b40c:    1b 70             	r11 = 1			  ## heap_mmu.c:649:28
 1e0b40e:    c7 ff e0 ff 00 00 	r7 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >			  ## heap_mmu.c:649:28
 1e0b414:    63 04             	r3 = r1.l (u)			  ## heap_mmu.c:649:42
 1e0b416:    53 f2 13 20       	if (r3 >= r5) goto 38 <pvPortVMallocStack+0x56 : 1e0b440 >			  ## heap_mmu.c:649:5
 1e0b41a:    e2 fd 70 31       	r3 = r1 & r7			  ## heap_mmu.c:650:29
 1e0b41e:    db d0             	r3 = r3 >> 3			  ## heap_mmu.c:650:13
 1e0b420:    82 f6 00 3a       	r2 = [r3+r10]			  ## heap_mmu.c:650:13
 1e0b424:    23 fd 1f 19       	r3 = r1 & 31			  ## heap_mmu.c:650:43
 1e0b428:    f8 fd 30 6b       	r6 = r11 << r3			  ## heap_mmu.c:650:43
 1e0b42c:    13 98             	r3 = r4 + 1			  ## heap_mmu.c:651:26
 1e0b42e:    04 70             	r4 = 0			  ## heap_mmu.c:651:26
 1e0b430:    62 f0 01 00       	if ((r2 & r6) == 0) goto 2 <pvPortVMallocStack+0x4C : 1e0b436 >			  ## heap_mmu.c:651:26
 1e0b434:    34 08             	r4 = r3			  ## heap_mmu.c:650:13
 1e0b436:    22 05             	r2 = r4.l (u)			  ## heap_mmu.c:655:13
 1e0b438:    11 80             	r1 += 1			  ## heap_mmu.c:655:13
 1e0b43a:    02 f2 eb 3f       	if (r2 < r0) goto -42 <pvPortVMallocStack+0x2A : 1e0b414 >			  ## heap_mmu.c:655:13
 1e0b43e:    03 18             	goto 6 <pvPortVMallocStack+0x5C : 1e0b446 >			  ## heap_mmu.c:655:13
 1e0b440:    8f f3 5e bf       	call 2064060 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0b444:    01 70             	r1 = 0			  ## cpu.h:148:5
 1e0b446:    65 04             	r5 = r1.l (u)			  ## heap_mmu.c:663:18
 1e0b448:    90 fb 90 95       	r9 = r5 - r9			  ## heap_mmu.c:663:27
 1e0b44c:    e6 fd 00 69       	r6 = r9.l (u)			  ## heap_mmu.c:663:18
 1e0b450:    56 f2 16 20       	if (r6 >= r5) goto 44 <pvPortVMallocStack+0x96 : 1e0b480 >			  ## heap_mmu.c:663:18
 1e0b454:    14 70             	r4 = 1
 1e0b456:    8b fd 28 06       	r0 = uextra(r6, p:5, l:11)
 1e0b45a:    80 c0             	r0 = r0 << 2
 1e0b45c:    80 fb a0 70       	r7 = r0 + r10
 1e0b460:    00 4e             	r0 = [r7 + 0]
 1e0b462:    21 fd 1f 69       	r1 = r6 & 31
 1e0b466:    f8 fd 10 34       	r3 = r4 << r1
 1e0b46a:    30 f1 03 00       	if ((r0 & r3) != 0) goto 6 <pvPortVMallocStack+0x8A : 1e0b474 >
 1e0b46e:    8f f3 47 bf       	call 2064014 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0b472:    00 4e             	r0 = [r7 + 0]			  ## cpu.h:148:5
 1e0b474:    e3 fd 30 00       	r0 = r0 & ~r3			  ## heap_mmu.c:669:37
 1e0b478:    16 80             	r6 += 1			  ## heap_mmu.c:666:45
 1e0b47a:    08 4e             	[r7 + 0] = r0			  ## heap_mmu.c:669:37
 1e0b47c:    65 f2 eb 1f       	if (r5 != r6) goto -42 <pvPortVMallocStack+0x6C : 1e0b456 >			  ## heap_mmu.c:669:37
 1e0b480:    a0 fc 50 00       	r0 = r10 + 80
 1e0b484:    01 70             	r1 = 0
 1e0b486:    02 40             	r2 = [r0 + 0]			  ## heap_mmu.c:673:28
 1e0b488:    10 24             	if (r2 == 0) goto 32 <pvPortVMallocStack+0xC0 : 1e0b4aa >			  ## heap_mmu.c:673:28
 1e0b48a:    11 80             	r1 += 1			  ## heap_mmu.c:672:46
 1e0b48c:    80 80             	r0 += 8			  ## heap_mmu.c:672:19
 1e0b48e:    e1 e0 fa 9f       	if (r1 <= 14) goto -12 <pvPortVMallocStack+0x9C : 1e0b486 >			  ## heap_mmu.c:672:19
 1e0b492:    f0 fd 38 09       	r0 = r9 << 7			  ## heap_mmu.c:689:54
 1e0b496:    c1 ff 80 ff 7f 00 	r1 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:689:54
 1e0b49c:    e2 fd 10 30       	r3 = r0 & r1			  ## heap_mmu.c:689:54
 1e0b4a0:    8f f3 2e bf       	call 2063964 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0b4a4:    01 f6 3c a0       	r1 = [r10 + 60]			  ## cpu.h:148:5
 1e0b4a8:    11 18             	goto 34 <pvPortVMallocStack+0xE2 : 1e0b4cc >			  ## cpu.h:148:5
 1e0b4aa:    01 f6 3c a0       	r1 = [r10 + 60]			  ## heap_mmu.c:674:62
 1e0b4ae:    f0 fd 38 29       	r2 = r9 << 7			  ## heap_mmu.c:674:81
 1e0b4b2:    c3 ff 80 ff 7f 00 	r3 = 8388480 <uECC_vli_cmp_unsafe+0x6F8F84 : 7fff80 >			  ## heap_mmu.c:674:81
 1e0b4b8:    53 b5             	r3 &= r2			  ## heap_mmu.c:674:81
 1e0b4ba:    c2 b2             	r2 = r1 + r3			  ## heap_mmu.c:674:68
 1e0b4bc:    0a 40             	[r0 + 0] = r2			  ## heap_mmu.c:674:41
 1e0b4be:    18 f6 04 00       	[r0 + 4] = r8			  ## heap_mmu.c:675:41
 1e0b4c2:    00 f9 c8 a0       	r0 = b[r10 + 200] (u)			  ## heap_mmu.c:676:34
 1e0b4c6:    10 80             	r0 += 1			  ## heap_mmu.c:676:34
 1e0b4c8:    10 f9 c8 a0       	b[r10 + 200] = r0			  ## heap_mmu.c:676:34
 1e0b4cc:    c5 b2             	r5 = r1 + r3			  ## heap_mmu.c:689:41
 1e0b4ce:    80 fb 80 05       	r0 = r5 + r8			  ## heap_mmu.c:691:33
 1e0b4d2:    00 88             	r0 += -128			  ## heap_mmu.c:691:47
 1e0b4d4:    01 78             	r1 = 128			  ## heap_mmu.c:693:9
 1e0b4d6:    97 f3 f1 dc       	call 3127778 <vmalloc_ : 106ebc >			  ## heap_mmu.c:693:9
 1e0b4da:    97 f3 5d dc       	call 3127482 <local_irq_enable : 106d98 >			  ## heap_mmu.c:697:5
 1e0b4de:    50 08             	r0 = r5			  ## heap_mmu.c:699:5
 1e0b4e0:    5b 01             	{pc, r11-r4} = [sp++]			  ## heap_mmu.c:699:5


vPortVFreeStack:
 1e0b4e2:    7a 01             	[--sp] = {rets, r10-r4}			  ## heap_mmu.c:703:0
 1e0b4e4:    04 08             	r4 = r0			  ## heap_mmu.c:703:0
 1e0b4e6:    97 f3 59 dc       	call 3127474 <local_irq_disable : 106d9c >			  ## heap_mmu.c:706:5
 1e0b4ea:    08 00             	csync			  ## heap_mmu.c:706:5
 1e0b4ec:    00 70             	r0 = 0			  ## heap_mmu.c:706:5
 1e0b4ee:    c2 ff 90 25 00 00 	r2 = 9616 <stack_mem : 2590 >			  ## heap_mmu.c:706:5
 1e0b4f4:    01 70             	r1 = 0			  ## heap_mmu.c:706:5
 1e0b4f6:    03 70             	r3 = 0			  ## heap_mmu.c:706:5
 1e0b4f8:    85 b2             	r5 = r1 + r2			  ## heap_mmu.c:711:28
 1e0b4fa:    46 4b             	r6 = [r5 + 80]			  ## heap_mmu.c:711:28
 1e0b4fc:    46 f2 09 10       	if (r6 != r4) goto 18 <vPortVFreeStack+0x30 : 1e0b512 >			  ## heap_mmu.c:711:28
 1e0b500:    53 4b             	r3 = [r5 + 84]			  ## heap_mmu.c:713:41
 1e0b502:    48 4b             	[r5 + 80] = r0			  ## heap_mmu.c:715:41
 1e0b504:    58 4b             	[r5 + 84] = r0			  ## heap_mmu.c:716:41
 1e0b506:    05 f9 c8 20       	r5 = b[r2 + 200] (u)			  ## heap_mmu.c:717:34
 1e0b50a:    f5 8f             	r5 += -1			  ## heap_mmu.c:717:34
 1e0b50c:    15 f9 c8 20       	b[r2 + 200] = r5			  ## heap_mmu.c:717:34
 1e0b510:    db d1             	r3 = r3 >> 7			  ## heap_mmu.c:713:47
 1e0b512:    81 80             	r1 += 8			  ## heap_mmu.c:710:22
 1e0b514:    81 e7 f0 1f       	if (r1 != 120) goto -32 <vPortVFreeStack+0x16 : 1e0b4f8 >			  ## heap_mmu.c:710:22
 1e0b518:    f0 44             	r0 = [r2 + 60]			  ## heap_mmu.c:722:44
 1e0b51a:    20 b8             	r0 = r4 - r0			  ## heap_mmu.c:722:31
 1e0b51c:    89 fd 38 50       	r5 = uextra(r0, p:7, l:9)			  ## heap_mmu.c:722:22
 1e0b520:    e8 04             	r8 = r3.l (u)			  ## heap_mmu.c:724:47
 1e0b522:    80 fb 80 65       	r6 = r5 + r8			  ## heap_mmu.c:724:45
 1e0b526:    65 f2 19 20       	if (r5 >= r6) goto 50 <vPortVFreeStack+0x7A : 1e0b55c >			  ## heap_mmu.c:724:45
 1e0b52a:    19 70             	r9 = 1
 1e0b52c:    ca ff e0 ff 00 00 	r10 = 65504 <_IRQ_MEM_ADDR+0xE0 : ffe0 >
 1e0b532:    50 08             	r0 = r5
 1e0b534:    e2 fd a0 15       	r1 = r5 & r10
 1e0b538:    c9 d0             	r1 = r1 >> 3
 1e0b53a:    87 b2             	r7 = r1 + r2
 1e0b53c:    01 4e             	r1 = [r7 + 0]
 1e0b53e:    20 fd 1f 09       	r0 = r0 & 31
 1e0b542:    f8 fd 00 39       	r3 = r9 << r0
 1e0b546:    31 f0 03 00       	if ((r1 & r3) == 0) goto 6 <vPortVFreeStack+0x6E : 1e0b550 >
 1e0b54a:    8f f3 d9 be       	call 2063794 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0b54e:    01 4e             	r1 = [r7 + 0]			  ## cpu.h:148:5
 1e0b550:    51 b6             	r1 |= r3			  ## heap_mmu.c:727:37
 1e0b552:    15 80             	r5 += 1			  ## heap_mmu.c:724:60
 1e0b554:    60 05             	r0 = r5.l (u)			  ## heap_mmu.c:724:30
 1e0b556:    09 4e             	[r7 + 0] = r1			  ## heap_mmu.c:727:37
 1e0b558:    60 f2 ec 3f       	if (r0 < r6) goto -40 <vPortVFreeStack+0x52 : 1e0b534 >			  ## heap_mmu.c:727:37
 1e0b55c:    f0 fd 38 18       	r1 = r8 << 7
 1e0b560:    40 08             	r0 = r4			  ## heap_mmu.c:734:5
 1e0b562:    97 f3 ad dc       	call 3127642 <vfree_ : 106ec0 >			  ## heap_mmu.c:734:5
 1e0b566:    1a 01             	{rets, r10-r4} = [sp++]			  ## heap_mmu.c:737:5
 1e0b568:    d7 f3 16 dc       	goto 3127340 <local_irq_enable : 106d98 >			  ## heap_mmu.c:737:5


tick_timer_init:
 1e0b56c:    34 00             	[--sp] = rets			  ## port_overwrite.c:304:0
 1e0b56e:    c2 ff c6 32 00 00 	r2 = 12998 <begin_of_data : 32c6 >			  ## port_overwrite.c:305:5
 1e0b574:    30 70             	r0 = 3			  ## port_overwrite.c:305:5
 1e0b576:    11 70             	r1 = 1			  ## port_overwrite.c:305:5
 1e0b578:    bf f3 4b f9       	call -3434 <request_irq : 1e0a812 >			  ## port_overwrite.c:305:5
 1e0b57c:    c0 ff ec e0 1b 00 	r0 = 1827052 <uECC_vli_cmp_unsafe+0xB70F0 : 1be0ec >			  ## port_overwrite.c:305:5
 1e0b582:    c1 f4 00 09       	[r0 + 4] = 0			  ## port_overwrite.c:309:14
 1e0b586:    c1 ff ac 30 00 00 	r1 = 12460 <hdl.15 : 30ac >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0b58c:    01 42             	r1 = [r1 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:1753:20
 1e0b58e:    42 76             	r2 = 100			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0b590:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0b594:    f1 8f             	r1 += -1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/clock.c:2246:9
 1e0b596:    29 40             	[r0 + 8] = r1			  ## port_overwrite.c:310:14
 1e0b598:    c0 f4 41 09       	[r0 + 0] = 65			  ## port_overwrite.c:312:14
 1e0b59c:    30 00             	pc = [sp++]			  ## port_overwrite.c:313:1


vPortSysSleepInit:
 1e0b59e:    34 00             	[--sp] = rets			  ## port_overwrite.c:458:0
 1e0b5a0:    c0 ff c0 e6 e0 01 	r0 = 31516352 <sys_power_ops : 1e0e6c0 >			  ## port_overwrite.c:447:21
 1e0b5a6:    bf f3 0a c2       	call -31724 <low_power_sys_get : 1e039be >			  ## port_overwrite.c:447:21
 1e0b5aa:    c1 ff 40 1e 00 00 	r1 = 7744 <sys_low_power : 1e40 >			  ## port_overwrite.c:447:19
 1e0b5b0:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:447:19
 1e0b5b2:    30 00             	pc = [sp++]			  ## port_overwrite.c:460:1


task_create:
 1e0b5b4:    77 01             	[--sp] = {rets, r7-r4}			  ## task.c:58:0
 1e0b5b6:    fc 0b             	sp += -8			  ## task.c:58:0
 1e0b5b8:    26 08             	r6 = r2			  ## task.c:58:0
 1e0b5ba:    14 08             	r4 = r1			  ## task.c:58:0
 1e0b5bc:    05 08             	r5 = r0			  ## task.c:58:0
 1e0b5be:    c7 ff 1e e1 e0 01 	r7 = 31514910 <task_info_table+0x6 : 1e0e11e >			  ## task.c:58:0
 1e0b5c4:    c0 ff 4b e0 e0 01 	r0 = 31514699 <update_target_end+0x16B : 1e0e04b >			  ## task.c:58:0
 1e0b5ca:    61 08             	r1 = r6			  ## task.c:20:14
 1e0b5cc:    97 f3 92 dc       	call 3127588 <strcmp : 106ef4 >			  ## task.c:20:14
 1e0b5d0:    05 20             	if (r0 == 0) goto 10 <task_create+0x28 : 1e0b5dc >			  ## task.c:20:13
 1e0b5d2:    00 f6 06 70       	r0 = [r7 + 6]			  ## task.c:19:34
 1e0b5d6:    c7 80             	r7 += 12			  ## task.c:19:5
 1e0b5d8:    f8 31             	if (r0 != 0) goto -16 <task_create+0x16 : 1e0b5ca >			  ## task.c:19:5
 1e0b5da:    0b 18             	goto 22 <task_create+0x3E : 1e0b5f2 >			  ## task.c:19:5
 1e0b5dc:    03 5e             	r3 = h[r7 + 0] (u)			  ## task.c:70:47
 1e0b5de:    02 f9 fe 7f       	r2 = b[r7 + -2] (u)			  ## task.c:70:11
 1e0b5e2:    10 5e             	r0 = h[r7 + 2] (u)			  ## task.c:70:65
 1e0b5e4:    1e 02             	[sp+4] = r6			  ## task.c:70:11
 1e0b5e6:    08 02             	[sp] = r0			  ## task.c:70:11
 1e0b5e8:    50 08             	r0 = r5			  ## task.c:70:11
 1e0b5ea:    41 08             	r1 = r4			  ## task.c:70:11
 1e0b5ec:    bf f3 43 f7       	call -4474 <os_task_create : 1e0a476 >			  ## task.c:70:11
 1e0b5f0:    02 20             	if (r0 == 0) goto 4 <task_create+0x42 : 1e0b5f6 >
 1e0b5f2:    8f f3 85 be       	call 2063626 <p33_soft_reset : 3300 >
 1e0b5f6:    04 0a             	sp += 8
 1e0b5f8:    57 01             	{pc, r7-r4} = [sp++]


task_kill:
 1e0b5fa:    d7 f3 e5 db       	goto 3127242 <os_task_del : 106dc8 >			  ## task.c:102:0


__sys_timer_del:
 1e0b5fe:    74 01             	[--sp] = {rets, r4}			  ## timer.c:593:0
 1e0b600:    04 08             	r4 = r0			  ## timer.c:593:0
 1e0b602:    97 f3 cb db       	call 3127190 <local_irq_disable : 106d9c >			  ## timer.c:597:5
 1e0b606:    c1 ff 98 08 00 00 	r1 = 2200 <timer_head : 898 >			  ## timer.c:597:5
 1e0b60c:    00 42             	r0 = [r1 + 0]			  ## timer.c:597:5
 1e0b60e:    10 f2 09 00       	if (r0 == r1) goto 18 <__sys_timer_del+0x26 : 1e0b624 >
 1e0b612:    e2 50             	r2 = h[r0 + 28] (u)			  ## timer.c:600:16
 1e0b614:    42 f2 04 00       	if (r2 == r4) goto 8 <__sys_timer_del+0x22 : 1e0b620 >			  ## timer.c:600:16
 1e0b618:    00 40             	r0 = [r0 + 0]
 1e0b61a:    10 f2 fa 1f       	if (r0 != r1) goto -12 <__sys_timer_del+0x14 : 1e0b612 >
 1e0b61e:    02 18             	goto 4 <__sys_timer_del+0x26 : 1e0b624 >
 1e0b620:    06 f4 01 0c       	[r0 + 24] |= 16777216			  ## timer.c:601:20
 1e0b624:    10 f2 0e 00       	if (r0 == r1) goto 28 <__sys_timer_del+0x46 : 1e0b644 >
 1e0b628:    40 40             	r0 = [r0 + 16]			  ## timer.c:611:15
 1e0b62a:    03 30             	if (r0 != 0) goto 6 <__sys_timer_del+0x34 : 1e0b632 >
 1e0b62c:    c0 ff 4b e0 e0 01 	r0 = 31514699 <update_target_end+0x16B : 1e0e04b >			  ## timer.c:612:9
 1e0b632:    01 fd 30 4b       	r1 = r4 | 3145728			  ## timer.c:615:40
 1e0b636:    97 f3 e1 db       	call 3127234 <os_taskq_del_type : 106dfc >			  ## timer.c:615:5
 1e0b63a:    c0 ff 6c 23 00 00 	r0 = 9068 <sys_timer_sem : 236c >			  ## timer.c:617:5
 1e0b640:    97 f3 e4 db       	call 3127240 <os_sem_post : 106e0c >			  ## timer.c:617:5
 1e0b644:    14 01             	{rets, r4} = [sp++]
 1e0b646:    d7 f3 a7 db       	goto 3127118 <local_irq_enable : 106d98 >


sys_timeout_del:
 1e0b64a:    d9 1f             	goto -78 <__sys_timer_del : 1e0b5fe >			  ## timer.c:644:0


__get_min_precesion:
 1e0b64c:    79 01             	[--sp] = {rets, r9-r4}			  ## usr_timer.c:109:0
 1e0b64e:    04 fb e8 03       	r4 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## usr_timer.c:109:0
 1e0b652:    09 70             	r9 = 0			  ## usr_timer.c:109:0
 1e0b654:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >			  ## usr_timer.c:109:0
 1e0b65a:    f0 fd 18 09       	r0 = r9 << 3			  ## usr_timer.c:115:35
 1e0b65e:    80 09             	r0 += r8			  ## usr_timer.c:115:35
 1e0b660:    07 f6 38 01       	r7 = [r0 + 312]			  ## list.h:124:18
 1e0b664:    06 fc 38 01       	r6 = r0 + 312			  ## usr_timer.c:115:35
 1e0b668:    67 f2 11 00       	if (r7 == r6) goto 34 <__get_min_precesion+0x42 : 1e0b68e >
 1e0b66c:    b0 6f             	r0 = b[r7 + 27] (u)			  ## usr_timer.c:122:17
 1e0b66e:    20 f3 0b 00       	if ((r0 & 1) != 0) goto 22 <__get_min_precesion+0x3C : 1e0b688 >			  ## usr_timer.c:122:17
 1e0b672:    55 4e             	r5 = [r7 + 20]			  ## usr_timer.c:126:27
 1e0b674:    8f f3 64 bd       	call 2063048 <jiffies_msec : 3140 >			  ## usr_timer.c:126:37
 1e0b678:    20 ba             	r0 = r5 - r0			  ## usr_timer.c:126:35
 1e0b67a:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x34 : 1e0b680 >
 1e0b67e:    10 70             	r0 = 1			  ## usr_timer.c:127:17
 1e0b680:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x3A : 1e0b686 >
 1e0b684:    40 08             	r0 = r4			  ## usr_timer.c:130:17
 1e0b686:    04 08             	r4 = r0
 1e0b688:    07 4e             	r7 = [r7 + 0]
 1e0b68a:    67 f2 ef 1f       	if (r7 != r6) goto -34 <__get_min_precesion+0x20 : 1e0b66c >
 1e0b68e:    19 80             	r9 += 1			  ## usr_timer.c:113:46
 1e0b690:    29 e0 e3 1f       	if (r9 != 2) goto -58 <__get_min_precesion+0xE : 1e0b65a >
 1e0b694:    c5 ff 98 08 00 00 	r5 = 2200 <timer_head : 898 >
 1e0b69a:    06 4a             	r6 = [r5 + 0]
 1e0b69c:    56 f2 11 00       	if (r6 == r5) goto 34 <__get_min_precesion+0x76 : 1e0b6c2 >
 1e0b6a0:    b0 6d             	r0 = b[r6 + 27] (u)			  ## usr_timer.c:137:13
 1e0b6a2:    20 f3 0b 00       	if ((r0 & 1) != 0) goto 22 <__get_min_precesion+0x70 : 1e0b6bc >			  ## usr_timer.c:137:13
 1e0b6a6:    57 4c             	r7 = [r6 + 20]			  ## usr_timer.c:140:23
 1e0b6a8:    8f f3 4a bd       	call 2062996 <jiffies_msec : 3140 >			  ## usr_timer.c:140:33
 1e0b6ac:    20 be             	r0 = r7 - r0			  ## usr_timer.c:140:31
 1e0b6ae:    10 e0 01 c0       	ifs (r0 > 1) goto 2 <__get_min_precesion+0x68 : 1e0b6b4 >
 1e0b6b2:    10 70             	r0 = 1			  ## usr_timer.c:141:13
 1e0b6b4:    04 f2 01 80       	if (r4 > r0) goto 2 <__get_min_precesion+0x6E : 1e0b6ba >
 1e0b6b8:    40 08             	r0 = r4			  ## usr_timer.c:144:13
 1e0b6ba:    04 08             	r4 = r0
 1e0b6bc:    06 4c             	r6 = [r6 + 0]
 1e0b6be:    56 f2 ef 1f       	if (r6 != r5) goto -34 <__get_min_precesion+0x54 : 1e0b6a0 >
 1e0b6c2:    40 08             	r0 = r4			  ## usr_timer.c:151:5
 1e0b6c4:    59 01             	{pc, r9-r4} = [sp++]			  ## usr_timer.c:151:5


__sys_timer_add:
 1e0b6c6:    78 01             	[--sp] = {rets, r8-r4}			  ## timer.c:294:0
 1e0b6c8:    36 08             	r6 = r3			  ## timer.c:294:0
 1e0b6ca:    28 08             	r8 = r2			  ## timer.c:294:0
 1e0b6cc:    17 08             	r7 = r1			  ## timer.c:294:0
 1e0b6ce:    04 08             	r4 = r0			  ## timer.c:294:0
 1e0b6d0:    97 f3 64 db       	call 3126984 <local_irq_disable : 106d9c >			  ## timer.c:230:5
 1e0b6d4:    00 70             	r0 = 0
 1e0b6d6:    c5 ff 5c 1e 00 00 	r5 = 7772 <timer_pool : 1e5c >
 1e0b6dc:    f1 6b             	r1 = b[r5 + 31] (u)			  ## timer.c:233:27
 1e0b6de:    0d 22             	if (r1 == 0) goto 26 <__sys_timer_add+0x34 : 1e0b6fa >			  ## timer.c:233:13
 1e0b6e0:    10 80             	r0 += 1			  ## timer.c:232:50
 1e0b6e2:    05 82             	r5 += 32			  ## timer.c:232:23
 1e0b6e4:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__sys_timer_add+0x16 : 1e0b6dc >			  ## timer.c:232:23
 1e0b6e8:    97 f3 56 db       	call 3126956 <local_irq_enable : 106d98 >			  ## timer.c:241:5
 1e0b6ec:    00 72             	r0 = 32			  ## timer.c:250:29
 1e0b6ee:    bf f3 b7 f7       	call -4242 <malloc : 1e0a660 >			  ## timer.c:250:29
 1e0b6f2:    05 08             	r5 = r0			  ## timer.c:250:29
 1e0b6f4:    06 3a             	if (r5 != 0) goto 12 <__sys_timer_add+0x3C : 1e0b702 >
 1e0b6f6:    04 70             	r4 = 0
 1e0b6f8:    5e 18             	goto 188 <__sys_timer_add+0xF0 : 1e0b7b6 >
 1e0b6fa:    10 70             	r0 = 1			  ## timer.c:234:32
 1e0b6fc:    f8 6b             	b[r5 + 31] = r0			  ## timer.c:234:32
 1e0b6fe:    97 f3 4b db       	call 3126934 <local_irq_enable : 106d98 >			  ## timer.c:236:13
 1e0b702:    3c 4a             	[r5 + 12] = r4			  ## timer.c:256:13
 1e0b704:    2f 4a             	[r5 + 8] = r7			  ## timer.c:257:13
 1e0b706:    60 4a             	r0 = [r5 + 24]			  ## timer.c:258:13
 1e0b708:    01 70             	r1 = 0			  ## timer.c:258:13
 1e0b70a:    e9 6b             	b[r5 + 30] = r1			  ## timer.c:260:16
 1e0b70c:    31 fd ff 8c       	r1 = r8 & 16777215			  ## timer.c:258:13
 1e0b710:    72 c6             	r2 = r6 << 25			  ## timer.c:261:16
 1e0b712:    22 fd 02 2c       	r2 = r2 & 33554432			  ## timer.c:261:16
 1e0b716:    51 b4             	r1 |= r2			  ## timer.c:258:13
 1e0b718:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## timer.c:258:13
 1e0b71c:    50 b2             	r0 |= r1			  ## timer.c:261:16
 1e0b71e:    68 4a             	[r5 + 24] = r0			  ## timer.c:261:16
 1e0b720:    8f f3 0e bd       	call 2062876 <jiffies_msec : 3140 >			  ## timer.c:262:18
 1e0b724:    80 09             	r0 += r8			  ## timer.c:262:33
 1e0b726:    58 4a             	[r5 + 20] = r0			  ## timer.c:262:16
 1e0b728:    8f f3 0e bd       	call 2062876 <os_current_task : 3148 >			  ## timer.c:263:16
 1e0b72c:    48 4a             	[r5 + 16] = r0			  ## timer.c:263:14
 1e0b72e:    09 20             	if (r0 == 0) goto 18 <__sys_timer_add+0x7C : 1e0b742 >			  ## timer.c:263:14
 1e0b730:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0b734:    61 ff ff 09 04 00 	if ((r0 & 255) != 0) goto 8 <__sys_timer_add+0x7C : 1e0b742 >
 1e0b73a:    40 4a             	r0 = [r5 + 16]			  ## timer.c:269:38
 1e0b73c:    bf f3 4a f8       	call -3948 <owner_is_idle_task : 1e0a7d4 >			  ## timer.c:269:16
 1e0b740:    04 20             	if (r0 == 0) goto 8 <__sys_timer_add+0x84 : 1e0b74a >			  ## timer.c:269:16
 1e0b742:    c0 ff 4b e0 e0 01 	r0 = 31514699 <update_target_end+0x16B : 1e0e04b >
 1e0b748:    48 4a             	[r5 + 16] = r0
 1e0b74a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >
 1e0b750:    11 51             	r1 = h[r0 + 34] (u)			  ## timer.c:274:13
 1e0b752:    11 80             	r1 += 1			  ## timer.c:274:13
 1e0b754:    19 51             	h[r0 + 34] = r1			  ## timer.c:274:13
 1e0b756:    62 04             	r2 = r1.l (u)			  ## timer.c:275:9
 1e0b758:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:274:11
 1e0b75a:    03 34             	if (r2 != 0) goto 6 <__sys_timer_add+0x9C : 1e0b762 >			  ## timer.c:274:11
 1e0b75c:    11 70             	r1 = 1			  ## timer.c:276:15
 1e0b75e:    e9 5a             	h[r5 + 28] = r1			  ## timer.c:276:15
 1e0b760:    19 51             	h[r0 + 34] = r1			  ## timer.c:277:19
 1e0b762:    97 f3 1b db       	call 3126838 <local_irq_disable : 106d9c >			  ## timer.c:302:5
 1e0b766:    72 17             	call -284 <__get_min_precesion : 1e0b64c >			  ## timer.c:304:20
 1e0b768:    e4 5a             	r4 = h[r5 + 28] (u)			  ## timer.c:304:20
 1e0b76a:    c1 ff 98 08 00 00 	r1 = 2200 <timer_head : 898 >
 1e0b770:    02 42             	r2 = [r1 + 0]
 1e0b772:    03 18             	goto 6 <__sys_timer_add+0xB4 : 1e0b77a >
 1e0b774:    43 08             	r3 = r4
 1e0b776:    14 96             	r4 = r3 + 1
 1e0b778:    ec 5a             	h[r5 + 28] = r4
 1e0b77a:    12 f2 08 00       	if (r2 == r1) goto 16 <__sys_timer_add+0xC8 : 1e0b78e >
 1e0b77e:    23 08             	r3 = r2
 1e0b780:    e6 56             	r6 = h[r3 + 28] (u)			  ## timer.c:78:25
 1e0b782:    27 05             	r7 = r4.l (u)			  ## timer.c:78:19
 1e0b784:    67 f2 f6 0f       	if (r7 == r6) goto -20 <__sys_timer_add+0xAE : 1e0b774 >
 1e0b788:    03 46             	r3 = [r3 + 0]
 1e0b78a:    13 f2 f9 1f       	if (r3 != r1) goto -14 <__sys_timer_add+0xBA : 1e0b780 >
 1e0b78e:    26 05             	r6 = r4.l (u)			  ## timer.c:83:9
 1e0b790:    03 70             	r3 = 0			  ## timer.c:83:9
 1e0b792:    f1 2d             	if (r6 == 0) goto -30 <__sys_timer_add+0xB0 : 1e0b776 >			  ## timer.c:83:9
 1e0b794:    12 42             	r2 = [r1 + 4]			  ## list.h:154:28
 1e0b796:    1d 42             	[r1 + 4] = r5			  ## list.h:137:16
 1e0b798:    09 4a             	[r5 + 0] = r1			  ## list.h:138:16
 1e0b79a:    1a 4a             	[r5 + 4] = r2			  ## list.h:139:16
 1e0b79c:    0d 44             	[r2 + 0] = r5			  ## list.h:140:16
 1e0b79e:    80 f2 03 90       	if (r0 <= r8) goto 6 <__sys_timer_add+0xE2 : 1e0b7a8 >			  ## list.h:140:16
 1e0b7a2:    80 08             	r0 = r8			  ## timer.c:311:9
 1e0b7a4:    bf f3 c7 ad       	call -42098 <timer1_run : 1e01336 >			  ## timer.c:311:9
 1e0b7a8:    97 f3 f6 da       	call 3126764 <local_irq_enable : 106d98 >			  ## timer.c:314:5
 1e0b7ac:    c0 ff 6c 23 00 00 	r0 = 9068 <sys_timer_sem : 236c >			  ## timer.c:316:5
 1e0b7b2:    97 f3 2b db       	call 3126870 <os_sem_post : 106e0c >			  ## timer.c:316:5
 1e0b7b6:    20 05             	r0 = r4.l (u)			  ## timer.c:321:1
 1e0b7b8:    58 01             	{pc, r8-r4} = [sp++]			  ## timer.c:321:1


sys_timeout_add:
 1e0b7ba:    32 e0 01 80       	if (r2 > 3) goto 2 <sys_timeout_add+0x6 : 1e0b7c0 >			  ## timer.c:366:0
 1e0b7be:    32 70             	r2 = 3			  ## timer.c:371:6
 1e0b7c0:    28 fb 00 33       	r3 = rets			  ## timer.c:368:5
 1e0b7c4:    13 70             	r3 = 1			  ## timer.c:374:12
 1e0b7c6:    7f 1f             	goto -258 <__sys_timer_add : 1e0b6c6 >			  ## timer.c:374:12


sys_timer_del:
 1e0b7c8:    1a 1f             	goto -460 <__sys_timer_del : 1e0b5fe >			  ## timer.c:631:0


sys_timer_add:
 1e0b7ca:    28 fb 00 33       	r3 = rets			  ## timer.c:340:0
 1e0b7ce:    03 70             	r3 = 0			  ## timer.c:345:12
 1e0b7d0:    7a 1f             	goto -268 <__sys_timer_add : 1e0b6c6 >			  ## timer.c:345:12


__usr_timer_del:
 1e0b7d2:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:79:0
 1e0b7d4:    04 08             	r4 = r0			  ## usr_timer.c:79:0
 1e0b7d6:    97 f3 e1 da       	call 3126722 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b7da:    01 48             	r1 = [r4 + 0]			  ## list.h:165:36
 1e0b7dc:    12 48             	r2 = [r4 + 4]			  ## list.h:165:23
 1e0b7de:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0b7e0:    c0 ff 5c 1e 00 00 	r0 = 7772 <timer_pool : 1e5c >			  ## list.h:159:16
 1e0b7e6:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0b7e8:    04 f2 09 30       	if (r4 < r0) goto 18 <__usr_timer_del+0x2C : 1e0b7fe >
 1e0b7ec:    00 fc 40 01       	r0 = r0 + 320
 1e0b7f0:    04 f2 05 20       	if (r4 >= r0) goto 10 <__usr_timer_del+0x2C : 1e0b7fe >
 1e0b7f4:    00 70             	r0 = 0			  ## timer.c:99:21
 1e0b7f6:    f8 69             	b[r4 + 31] = r0			  ## timer.c:99:21
 1e0b7f8:    14 01             	{rets, r4} = [sp++]			  ## spinlock.h:88:5
 1e0b7fa:    d7 f3 cd da       	goto 3126682 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b7fe:    97 f3 cb da       	call 3126678 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b802:    40 08             	r0 = r4			  ## usr_timer.c:85:9
 1e0b804:    14 01             	{rets, r4} = [sp++]			  ## usr_timer.c:85:9
 1e0b806:    ff f3 3e f7       	goto -4484 <free : 1e0a686 >			  ## usr_timer.c:85:9


usr_timer_schedule:
 1e0b80a:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:363:0
 1e0b80c:    97 f3 c6 da       	call 3126668 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b810:    05 70             	r5 = 0
 1e0b812:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >
 1e0b818:    cb ff 01 00 00 40 	r11 = 1073741825 <umoddi3.bc+0x1 : 1 >
 1e0b81e:    c9 ff 0a 00 00 b0 	r9 = 2952790026 <report_overlay_size+0x6 : a >
 1e0b824:    ca ff f6 ff ff 4f 	r10 = 1342177270 <bank_code_load_addr+0x1E574A : 1fffff6 >
 1e0b82a:    e8 c0             	r0 = r5 << 3			  ## usr_timer.c:371:35
 1e0b82c:    80 09             	r0 += r8			  ## usr_timer.c:371:35
 1e0b82e:    07 f6 38 01       	r7 = [r0 + 312]			  ## usr_timer.c:373:9
 1e0b832:    06 fc 38 01       	r6 = r0 + 312			  ## usr_timer.c:371:35
 1e0b836:    67 f2 37 00       	if (r7 == r6) goto 110 <usr_timer_schedule+0x9E : 1e0b8a8 >
 1e0b83a:    74 08             	r4 = r7
 1e0b83c:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:374:17
 1e0b83e:    07 48             	r7 = [r4 + 0]			  ## usr_timer.c:374:17
 1e0b840:    20 f3 2a 00       	if ((r0 & 1) != 0) goto 84 <usr_timer_schedule+0x8E : 1e0b898 >
 1e0b844:    8f f3 4c bc       	call 2062488 <report_data_code_begin : 30e0 >			  ## usr_timer.c:379:29
 1e0b848:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:380:32
 1e0b84a:    10 80             	r0 += 1			  ## usr_timer.c:379:49
 1e0b84c:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:379:54
 1e0b84e:    01 f2 09 90       	if (r1 <= r0) goto 18 <usr_timer_schedule+0x5A : 1e0b864 >
 1e0b852:    22 b2             	r2 = r1 - r0			  ## usr_timer.c:380:56
 1e0b854:    b2 f2 06 30       	if (r2 < r11) goto 12 <usr_timer_schedule+0x5A : 1e0b864 >			  ## usr_timer.c:380:56
 1e0b858:    80 fb 90 21       	r2 = r1 + r9			  ## usr_timer.c:382:36
 1e0b85c:    a1 f2 01 80       	if (r1 > r10) goto 2 <usr_timer_schedule+0x58 : 1e0b862 >			  ## usr_timer.c:382:36
 1e0b860:    02 08             	r2 = r0			  ## usr_timer.c:381:25
 1e0b862:    5a 48             	[r4 + 20] = r2
 1e0b864:    8f f3 3c bc       	call 2062456 <report_data_code_begin : 30e0 >			  ## usr_timer.c:387:22
 1e0b868:    51 48             	r1 = [r4 + 20]			  ## usr_timer.c:387:22
 1e0b86a:    10 80             	r0 += 1			  ## usr_timer.c:387:22
 1e0b86c:    40 d0             	r0 = r0 >> 1			  ## usr_timer.c:387:22
 1e0b86e:    10 f2 19 b0       	ifs (r0 < r1) goto 50 <usr_timer_schedule+0x9A : 1e0b8a4 >			  ## usr_timer.c:387:22
 1e0b872:    97 f3 91 da       	call 3126562 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b876:    21 48             	r1 = [r4 + 8]			  ## usr_timer.c:392:28
 1e0b878:    02 22             	if (r1 == 0) goto 4 <usr_timer_schedule+0x74 : 1e0b87e >			  ## usr_timer.c:392:28
 1e0b87a:    30 48             	r0 = [r4 + 12]			  ## usr_timer.c:393:36
 1e0b87c:    81 00             	call r1			  ## usr_timer.c:393:25
 1e0b87e:    97 f3 8d da       	call 3126554 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b882:    b0 69             	r0 = b[r4 + 27] (u)			  ## usr_timer.c:396:25
 1e0b884:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <usr_timer_schedule+0x8E : 1e0b898 >			  ## usr_timer.c:396:25
 1e0b888:    8f f3 5a bc       	call 2062516 <jiffies_msec : 3140 >			  ## usr_timer.c:401:38
 1e0b88c:    61 48             	r1 = [r4 + 24]			  ## usr_timer.c:401:59
 1e0b88e:    31 fd ff 1c       	r1 = r1 & 16777215			  ## usr_timer.c:401:59
 1e0b892:    10 09             	r0 += r1			  ## usr_timer.c:401:53
 1e0b894:    58 48             	[r4 + 20] = r0			  ## usr_timer.c:401:36
 1e0b896:    06 18             	goto 12 <usr_timer_schedule+0x9A : 1e0b8a4 >			  ## usr_timer.c:401:36
 1e0b898:    97 f3 7e da       	call 3126524 <local_irq_enable : 106d98 >
 1e0b89c:    40 08             	r0 = r4
 1e0b89e:    99 17             	call -206 <__usr_timer_del : 1e0b7d2 >
 1e0b8a0:    97 f3 7c da       	call 3126520 <local_irq_disable : 106d9c >
 1e0b8a4:    67 f2 c9 1f       	if (r7 != r6) goto -110 <usr_timer_schedule+0x30 : 1e0b83a >
 1e0b8a8:    15 80             	r5 += 1			  ## usr_timer.c:369:46
 1e0b8aa:    25 e0 be 1f       	if (r5 != 2) goto -132 <usr_timer_schedule+0x20 : 1e0b82a >
 1e0b8ae:    ce 16             	call -612 <__get_min_precesion : 1e0b64c >			  ## usr_timer.c:408:16
 1e0b8b0:    bf f3 41 ad       	call -42366 <timer1_run : 1e01336 >			  ## usr_timer.c:408:5
 1e0b8b4:    97 f3 70 da       	call 3126496 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b8b8:    c0 ff 6c 23 00 00 	r0 = 9068 <sys_timer_sem : 236c >			  ## usr_timer.c:412:5
 1e0b8be:    1b 01             	{rets, r11-r4} = [sp++]			  ## usr_timer.c:412:5
 1e0b8c0:    d7 f3 a4 da       	goto 3126600 <os_sem_post : 106e0c >			  ## usr_timer.c:412:5


__precesion_sort:
 1e0b8c4:    74 01             	[--sp] = {rets, r4}			  ## usr_timer.c:92:0
 1e0b8c6:    02 42             	r2 = [r1 + 0]			  ## usr_timer.c:92:0
 1e0b8c8:    12 f2 0b 00       	if (r2 == r1) goto 22 <__precesion_sort+0x1E : 1e0b8e2 >			  ## usr_timer.c:92:0
 1e0b8cc:    63 40             	r3 = [r0 + 24]			  ## usr_timer.c:92:0
 1e0b8ce:    33 fd ff 3c       	r3 = r3 & 16777215			  ## usr_timer.c:92:0
 1e0b8d2:    64 44             	r4 = [r2 + 24]			  ## usr_timer.c:98:26
 1e0b8d4:    34 fd ff 4c       	r4 = r4 & 16777215			  ## usr_timer.c:98:26
 1e0b8d8:    43 f2 06 30       	if (r3 < r4) goto 12 <__precesion_sort+0x24 : 1e0b8e8 >			  ## usr_timer.c:98:26
 1e0b8dc:    02 44             	r2 = [r2 + 0]
 1e0b8de:    12 f2 f8 1f       	if (r2 != r1) goto -16 <__precesion_sort+0xE : 1e0b8d2 >
 1e0b8e2:    13 42             	r3 = [r1 + 4]			  ## list.h:154:28
 1e0b8e4:    18 42             	[r1 + 4] = r0			  ## list.h:137:16
 1e0b8e6:    03 18             	goto 6 <__precesion_sort+0x2A : 1e0b8ee >			  ## list.h:137:16
 1e0b8e8:    13 44             	r3 = [r2 + 4]			  ## list.h:154:28
 1e0b8ea:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e0b8ec:    21 08             	r1 = r2			  ## list.h:137:16
 1e0b8ee:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0b8f0:    1b 40             	[r0 + 4] = r3			  ## list.h:139:16
 1e0b8f2:    08 46             	[r3 + 0] = r0			  ## list.h:140:16
 1e0b8f4:    54 01             	{pc, r4} = [sp++]			  ## usr_timer.c:106:1


usr_timer_modify:
 1e0b8f6:    7b 01             	[--sp] = {rets, r11-r4}			  ## usr_timer.c:303:0
 1e0b8f8:    1a 08             	r10 = r1			  ## usr_timer.c:303:0
 1e0b8fa:    05 08             	r5 = r0			  ## usr_timer.c:303:0
 1e0b8fc:    97 f3 4e da       	call 3126428 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b900:    39 fd ff ac       	r9 = r10 & 16777215
 1e0b904:    04 70             	r4 = 0
 1e0b906:    a2 16             	call -700 <__get_min_precesion : 1e0b64c >			  ## usr_timer.c:308:20
 1e0b908:    08 08             	r8 = r0			  ## usr_timer.c:308:20
 1e0b90a:    cb ff 70 20 00 00 	r11 = 8304 <gatt_client_conn_handle : 2070 >
 1e0b910:    e0 c0             	r0 = r4 << 3			  ## usr_timer.c:312:35
 1e0b912:    b0 09             	r0 += r11			  ## usr_timer.c:312:35
 1e0b914:    06 f6 38 01       	r6 = [r0 + 312]			  ## usr_timer.c:312:35
 1e0b918:    07 fc 38 01       	r7 = r0 + 312			  ## usr_timer.c:312:35
 1e0b91c:    76 f2 18 00       	if (r6 == r7) goto 48 <usr_timer_modify+0x5A : 1e0b950 >
 1e0b920:    e0 5c             	r0 = h[r6 + 28] (u)			  ## usr_timer.c:315:20
 1e0b922:    50 f2 04 00       	if (r0 == r5) goto 8 <usr_timer_modify+0x38 : 1e0b92e >			  ## usr_timer.c:315:20
 1e0b926:    06 4c             	r6 = [r6 + 0]
 1e0b928:    76 f2 fa 1f       	if (r6 != r7) goto -12 <usr_timer_modify+0x2A : 1e0b920 >
 1e0b92c:    11 18             	goto 34 <usr_timer_modify+0x5A : 1e0b950 >
 1e0b92e:    60 4c             	r0 = [r6 + 24]			  ## usr_timer.c:316:25
 1e0b930:    20 fd ff 0c       	r0 = r0 & 4278190080			  ## usr_timer.c:316:25
 1e0b934:    e0 fd 90 00       	r0 = r0 | r9			  ## usr_timer.c:316:25
 1e0b938:    68 4c             	[r6 + 24] = r0			  ## usr_timer.c:316:25
 1e0b93a:    8f f3 01 bc       	call 2062338 <jiffies_msec : 3140 >			  ## usr_timer.c:317:30
 1e0b93e:    a0 09             	r0 += r10			  ## usr_timer.c:317:45
 1e0b940:    58 4c             	[r6 + 20] = r0			  ## usr_timer.c:317:28
 1e0b942:    00 4c             	r0 = [r6 + 0]			  ## list.h:165:36
 1e0b944:    11 4c             	r1 = [r6 + 4]			  ## list.h:165:23
 1e0b946:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0b948:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0b94a:    60 08             	r0 = r6			  ## usr_timer.c:319:17
 1e0b94c:    71 08             	r1 = r7			  ## usr_timer.c:319:17
 1e0b94e:    ba 17             	call -140 <__precesion_sort : 1e0b8c4 >			  ## usr_timer.c:319:17
 1e0b950:    14 80             	r4 += 1			  ## usr_timer.c:310:46
 1e0b952:    24 e0 dd 1f       	if (r4 != 2) goto -70 <usr_timer_modify+0x1A : 1e0b910 >
 1e0b956:    a8 f2 03 90       	if (r8 <= r10) goto 6 <usr_timer_modify+0x6A : 1e0b960 >
 1e0b95a:    a0 08             	r0 = r10			  ## usr_timer.c:326:9
 1e0b95c:    bf f3 eb ac       	call -42538 <timer1_run : 1e01336 >			  ## usr_timer.c:326:9
 1e0b960:    1b 01             	{rets, r11-r4} = [sp++]			  ## spinlock.h:88:5
 1e0b962:    d7 f3 19 da       	goto 3126322 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


sys_timer_init:
 1e0b966:    34 00             	[--sp] = rets			  ## timer.c:706:0
 1e0b968:    c0 ff 6c 23 00 00 	r0 = 9068 <sys_timer_sem : 236c >			  ## timer.c:709:5
 1e0b96e:    01 70             	r1 = 0			  ## timer.c:709:5
 1e0b970:    97 f3 46 da       	call 3126412 <os_sem_create : 106e00 >			  ## timer.c:709:5
 1e0b974:    c0 ff c8 ba e0 01 	r0 = 31505096 <sys_timer_task : 1e0bac8 >			  ## timer.c:711:5
 1e0b97a:    c2 ff ea df e0 01 	r2 = 31514602 <update_target_end+0x10A : 1e0dfea >			  ## timer.c:711:5
 1e0b980:    01 70             	r1 = 0			  ## timer.c:711:5
 1e0b982:    bf f3 17 fe       	call -978 <task_create : 1e0b5b4 >			  ## timer.c:711:5
 1e0b986:    c0 ff a8 21 00 00 	r0 = 8616 <usr_timer_head : 21a8 >			  ## timer.c:711:5
 1e0b98c:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e0b98e:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e0b990:    81 90             	r1 = r0 + 8			  ## list.h:188:16
 1e0b992:    29 40             	[r0 + 8] = r1			  ## list.h:188:16
 1e0b994:    39 40             	[r0 + 12] = r1			  ## list.h:189:16
 1e0b996:    88 01             	{rets} = [sp++]			  ## usr_timer.c:432:5
 1e0b998:    ff f3 79 be       	goto -33550 <timer1_init : 1e0368e >			  ## usr_timer.c:432:5


__usr_timer_add:
 1e0b99c:    79 01             	[--sp] = {rets, r9-r4}			  ## usr_timer.c:172:0
 1e0b99e:    38 08             	r8 = r3			  ## usr_timer.c:172:0
 1e0b9a0:    25 08             	r5 = r2			  ## usr_timer.c:172:0
 1e0b9a2:    19 08             	r9 = r1			  ## usr_timer.c:172:0
 1e0b9a4:    04 08             	r4 = r0			  ## usr_timer.c:172:0
 1e0b9a6:    97 f3 f9 d9       	call 3126258 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0b9aa:    00 70             	r0 = 0
 1e0b9ac:    c6 ff 5c 1e 00 00 	r6 = 7772 <timer_pool : 1e5c >
 1e0b9b2:    f1 6d             	r1 = b[r6 + 31] (u)			  ## usr_timer.c:40:27
 1e0b9b4:    0d 22             	if (r1 == 0) goto 26 <__usr_timer_add+0x34 : 1e0b9d0 >			  ## usr_timer.c:40:13
 1e0b9b6:    10 80             	r0 += 1			  ## usr_timer.c:39:50
 1e0b9b8:    06 82             	r6 += 32			  ## usr_timer.c:39:23
 1e0b9ba:    a0 e0 fa 3f       	if (r0 < 10) goto -12 <__usr_timer_add+0x16 : 1e0b9b2 >			  ## usr_timer.c:39:23
 1e0b9be:    97 f3 eb d9       	call 3126230 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b9c2:    00 72             	r0 = 32			  ## usr_timer.c:56:29
 1e0b9c4:    bf f3 4c f6       	call -4968 <malloc : 1e0a660 >			  ## usr_timer.c:56:29
 1e0b9c8:    06 08             	r6 = r0			  ## usr_timer.c:56:29
 1e0b9ca:    06 3c             	if (r6 != 0) goto 12 <__usr_timer_add+0x3C : 1e0b9d8 >
 1e0b9cc:    07 70             	r7 = 0
 1e0b9ce:    53 18             	goto 166 <__usr_timer_add+0xDA : 1e0ba76 >
 1e0b9d0:    10 70             	r0 = 1			  ## usr_timer.c:41:32
 1e0b9d2:    f8 6d             	b[r6 + 31] = r0			  ## usr_timer.c:41:32
 1e0b9d4:    97 f3 e0 d9       	call 3126208 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0b9d8:    07 70             	r7 = 0
 1e0b9da:    3f 4c             	[r6 + 12] = r7			  ## usr_timer.c:62:13
 1e0b9dc:    2c 4c             	[r6 + 8] = r4			  ## usr_timer.c:63:13
 1e0b9de:    60 4c             	r0 = [r6 + 24]			  ## usr_timer.c:64:13
 1e0b9e0:    ef 6d             	b[r6 + 30] = r7			  ## usr_timer.c:66:16
 1e0b9e2:    31 fd ff 9c       	r1 = r9 & 16777215			  ## usr_timer.c:64:13
 1e0b9e6:    6a c6             	r2 = r5 << 25			  ## usr_timer.c:67:16
 1e0b9e8:    22 fd 02 2c       	r2 = r2 & 33554432			  ## usr_timer.c:67:16
 1e0b9ec:    51 b4             	r1 |= r2			  ## usr_timer.c:64:13
 1e0b9ee:    20 fd fc 0c       	r0 = r0 & 4227858432			  ## usr_timer.c:64:13
 1e0b9f2:    50 b2             	r0 |= r1			  ## usr_timer.c:67:16
 1e0b9f4:    68 4c             	[r6 + 24] = r0			  ## usr_timer.c:67:16
 1e0b9f6:    8f f3 a3 bb       	call 2062150 <jiffies_msec : 3140 >			  ## usr_timer.c:68:18
 1e0b9fa:    90 09             	r0 += r9			  ## usr_timer.c:68:33
 1e0b9fc:    58 4c             	[r6 + 20] = r0			  ## usr_timer.c:68:16
 1e0b9fe:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >			  ## usr_timer.c:68:16
 1e0ba04:    10 59             	r0 = h[r4 + 34] (u)			  ## usr_timer.c:69:13
 1e0ba06:    10 80             	r0 += 1			  ## usr_timer.c:69:13
 1e0ba08:    18 59             	h[r4 + 34] = r0			  ## usr_timer.c:69:13
 1e0ba0a:    21 04             	r1 = r0.l (u)			  ## usr_timer.c:70:9
 1e0ba0c:    e8 5c             	h[r6 + 28] = r0			  ## usr_timer.c:69:11
 1e0ba0e:    02 22             	if (r1 == 0) goto 4 <__usr_timer_add+0x78 : 1e0ba14 >			  ## usr_timer.c:69:11
 1e0ba10:    04 3c             	if (r6 != 0) goto 8 <__usr_timer_add+0x7E : 1e0ba1a >
 1e0ba12:    31 18             	goto 98 <__usr_timer_add+0xDA : 1e0ba76 >
 1e0ba14:    10 70             	r0 = 1			  ## usr_timer.c:71:15
 1e0ba16:    e8 5c             	h[r6 + 28] = r0			  ## usr_timer.c:71:15
 1e0ba18:    18 59             	h[r4 + 34] = r0			  ## usr_timer.c:72:19
 1e0ba1a:    97 f3 bf d9       	call 3126142 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0ba1e:    e0 5c             	r0 = h[r6 + 28] (u)			  ## spinlock.h:77:5
 1e0ba20:    01 70             	r1 = 0
 1e0ba22:    ca c0             	r2 = r1 << 3			  ## usr_timer.c:19:9
 1e0ba24:    03 b5             	r3 = r2 + r4			  ## usr_timer.c:19:9
 1e0ba26:    02 f6 38 31       	r2 = [r3 + 312]			  ## usr_timer.c:19:9
 1e0ba2a:    33 fc 38 01       	r3 = r3 + 312			  ## usr_timer.c:19:9
 1e0ba2e:    32 f2 07 00       	if (r2 == r3) goto 14 <__usr_timer_add+0xA4 : 1e0ba40 >			  ## usr_timer.c:19:9
 1e0ba32:    e5 54             	r5 = h[r2 + 28] (u)			  ## usr_timer.c:20:29
 1e0ba34:    27 04             	r7 = r0.l (u)			  ## usr_timer.c:20:23
 1e0ba36:    57 f2 0a 00       	if (r7 == r5) goto 20 <__usr_timer_add+0xB2 : 1e0ba4e >			  ## usr_timer.c:20:23
 1e0ba3a:    02 44             	r2 = [r2 + 0]
 1e0ba3c:    32 f2 f9 1f       	if (r2 != r3) goto -14 <__usr_timer_add+0x96 : 1e0ba32 >
 1e0ba40:    27 04             	r7 = r0.l (u)			  ## usr_timer.c:25:13
 1e0ba42:    11 80             	r1 += 1			  ## usr_timer.c:18:46
 1e0ba44:    03 2e             	if (r7 == 0) goto 6 <__usr_timer_add+0xB0 : 1e0ba4c >
 1e0ba46:    11 e0 ec df       	ifs (r1 <= 1) goto -40 <__usr_timer_add+0x86 : 1e0ba22 >
 1e0ba4a:    04 18             	goto 8 <__usr_timer_add+0xB8 : 1e0ba54 >
 1e0ba4c:    00 70             	r0 = 0
 1e0ba4e:    10 80             	r0 += 1
 1e0ba50:    e8 5c             	h[r6 + 28] = r0
 1e0ba52:    e6 1f             	goto -52 <__usr_timer_add+0x84 : 1e0ba20 >
 1e0ba54:    f0 fd 18 08       	r0 = r8 << 3			  ## usr_timer.c:182:31
 1e0ba58:    40 09             	r0 += r4			  ## usr_timer.c:182:31
 1e0ba5a:    04 fc 38 01       	r4 = r0 + 312			  ## usr_timer.c:182:31
 1e0ba5e:    f6 15             	call -1044 <__get_min_precesion : 1e0b64c >			  ## usr_timer.c:188:20
 1e0ba60:    05 08             	r5 = r0			  ## usr_timer.c:188:20
 1e0ba62:    60 08             	r0 = r6			  ## usr_timer.c:190:5
 1e0ba64:    41 08             	r1 = r4			  ## usr_timer.c:190:5
 1e0ba66:    2e 17             	call -420 <__precesion_sort : 1e0b8c4 >			  ## usr_timer.c:190:5
 1e0ba68:    95 f2 03 90       	if (r5 <= r9) goto 6 <__usr_timer_add+0xD6 : 1e0ba72 >			  ## usr_timer.c:190:5
 1e0ba6c:    90 08             	r0 = r9			  ## usr_timer.c:194:9
 1e0ba6e:    bf f3 62 ac       	call -42812 <timer1_run : 1e01336 >			  ## usr_timer.c:194:9
 1e0ba72:    97 f3 91 d9       	call 3126050 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0ba76:    70 08             	r0 = r7			  ## usr_timer.c:202:1
 1e0ba78:    59 01             	{pc, r9-r4} = [sp++]			  ## usr_timer.c:202:1


usr_timer_add:
 1e0ba7a:    34 00             	[--sp] = rets			  ## usr_timer.c:221:0
 1e0ba7c:    28 fb 00 13       	r1 = rets			  ## usr_timer.c:223:5
 1e0ba80:    a1 70             	r1 = 10			  ## usr_timer.c:225:12
 1e0ba82:    02 70             	r2 = 0			  ## usr_timer.c:225:12
 1e0ba84:    03 70             	r3 = 0			  ## usr_timer.c:225:12
 1e0ba86:    8a 17             	call -236 <__usr_timer_add : 1e0b99c >			  ## usr_timer.c:225:12
 1e0ba88:    20 04             	r0 = r0.l (u)			  ## usr_timer.c:225:5
 1e0ba8a:    30 00             	pc = [sp++]			  ## usr_timer.c:225:5


usr_systimer_callback:
 1e0ba8c:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## usr_timer.c:346:0
 1e0ba92:    01 f6 40 01       	r1 = [r0 + 320]			  ## list.h:124:18
 1e0ba96:    02 fc 40 01       	r2 = r0 + 320			  ## list.h:124:18
 1e0ba9a:    10 70             	r0 = 1			  ## list.h:124:23
 1e0ba9c:    21 f2 01 00       	if (r1 == r2) goto 2 <usr_systimer_callback+0x16 : 1e0baa2 >			  ## list.h:124:23
 1e0baa0:    00 70             	r0 = 0			  ## list.h:124:23
 1e0baa2:    20 00             	rts			  ## usr_timer.c:359:5


__timer_del:
 1e0baa4:    02 40             	r2 = [r0 + 0]			  ## timer.c:111:0
 1e0baa6:    13 40             	r3 = [r0 + 4]			  ## list.h:165:23
 1e0baa8:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e0baaa:    c1 ff 5c 1e 00 00 	r1 = 7772 <timer_pool : 1e5c >			  ## list.h:159:16
 1e0bab0:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e0bab2:    10 f2 07 30       	if (r0 < r1) goto 14 <__timer_del+0x20 : 1e0bac4 >
 1e0bab6:    11 fc 40 01       	r1 = r1 + 320
 1e0baba:    10 f2 03 20       	if (r0 >= r1) goto 6 <__timer_del+0x20 : 1e0bac4 >
 1e0babe:    01 70             	r1 = 0			  ## timer.c:99:21
 1e0bac0:    f9 61             	b[r0 + 31] = r1			  ## timer.c:99:21
 1e0bac2:    20 00             	rts			  ## timer.c:123:1
 1e0bac4:    ff f3 df f5       	goto -5186 <free : 1e0a686 >			  ## timer.c:120:9


sys_timer_task:
 1e0bac8:    f8 0b             	sp += -16			  ## timer.c:669:0
 1e0baca:    c7 ff 98 08 00 00 	r7 = 2200 <timer_head : 898 >			  ## timer.c:669:0
 1e0bad0:    c8 ff 6c 23 00 00 	r8 = 9068 <sys_timer_sem : 236c >			  ## timer.c:669:0
 1e0bad6:    0e 70             	r14 = 0			  ## timer.c:669:0
 1e0bad8:    a9 70             	r9 = 10			  ## timer.c:669:0
 1e0bada:    cd ff 01 00 00 40 	r13 = 1073741825 <umoddi3.bc+0x1 : 1 >			  ## timer.c:669:0
 1e0bae0:    4b fb b0 9c       	r11 = r9 + 2952790016			  ## timer.c:669:0
 1e0bae4:    cc ff f6 ff ff 4f 	r12 = 1342177270 <bank_code_load_addr+0x1E574A : 1fffff6 >			  ## timer.c:669:0
 1e0baea:    1f 70             	r15 = 1			  ## timer.c:669:0
 1e0baec:    ca ff 4b e0 e0 01 	r10 = 31514699 <update_target_end+0x16B : 1e0e04b >			  ## timer.c:669:0
 1e0baf2:    c4 ff 5c 1e 00 00 	r4 = 7772 <timer_pool : 1e5c >			  ## timer.c:669:0
 1e0baf8:    97 f3 50 d9       	call 3125920 <local_irq_disable : 106d9c >			  ## timer.c:145:5
 1e0bafc:    06 4e             	r6 = [r7 + 0]			  ## timer.c:147:5
 1e0bafe:    76 f2 60 00       	if (r6 == r7) goto 192 <sys_timer_task+0xFA : 1e0bbc2 >
 1e0bb02:    65 08             	r5 = r6
 1e0bb04:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:148:13
 1e0bb06:    06 4a             	r6 = [r5 + 0]			  ## timer.c:148:13
 1e0bb08:    20 f3 2b 00       	if ((r0 & 1) != 0) goto 86 <sys_timer_task+0x9A : 1e0bb62 >
 1e0bb0c:    8f f3 e8 ba       	call 2061776 <report_data_code_begin : 30e0 >			  ## timer.c:158:21
 1e0bb10:    51 4a             	r1 = [r5 + 20]			  ## timer.c:159:24
 1e0bb12:    10 80             	r0 += 1			  ## timer.c:158:41
 1e0bb14:    40 d0             	r0 = r0 >> 1			  ## timer.c:158:46
 1e0bb16:    22 b2             	r2 = r1 - r0			  ## timer.c:159:48
 1e0bb18:    01 f2 09 90       	if (r1 <= r0) goto 18 <sys_timer_task+0x66 : 1e0bb2e >			  ## timer.c:159:48
 1e0bb1c:    d2 f2 07 30       	if (r2 < r13) goto 14 <sys_timer_task+0x66 : 1e0bb2e >
 1e0bb20:    80 fb b0 21       	r2 = r1 + r11			  ## timer.c:161:28
 1e0bb24:    c1 f2 01 80       	if (r1 > r12) goto 2 <sys_timer_task+0x62 : 1e0bb2a >			  ## timer.c:161:28
 1e0bb28:    02 08             	r2 = r0			  ## timer.c:160:17
 1e0bb2a:    5a 4a             	[r5 + 20] = r2
 1e0bb2c:    21 08             	r1 = r2			  ## timer.c:173:9
 1e0bb2e:    10 f2 45 b0       	ifs (r0 < r1) goto 138 <sys_timer_task+0xF4 : 1e0bbbc >
 1e0bb32:    1f f9 1e 50       	b[r5 + 30] = r15			  ## timer.c:170:20
 1e0bb36:    20 4a             	r0 = [r5 + 8]			  ## timer.c:174:26
 1e0bb38:    08 02             	[sp] = r0			  ## timer.c:174:16
 1e0bb3a:    1f f5 04 00       	[sp+4] = r15			  ## timer.c:175:16
 1e0bb3e:    30 4a             	r0 = [r5 + 12]			  ## timer.c:176:26
 1e0bb40:    28 02             	[sp+8] = r0			  ## timer.c:176:16
 1e0bb42:    40 4a             	r0 = [r5 + 16]			  ## timer.c:177:45
 1e0bb44:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:177:65
 1e0bb46:    01 fd 30 1b       	r1 = r1 | 3145728			  ## timer.c:177:63
 1e0bb4a:    03 a0             	r3 = sp + 0			  ## timer.c:177:63
 1e0bb4c:    32 70             	r2 = 3			  ## timer.c:177:15
 1e0bb4e:    97 f3 47 d9       	call 3125902 <os_taskq_post_type : 106de0 >			  ## timer.c:177:15
 1e0bb52:    1e f9 1e 50       	b[r5 + 30] = r14			  ## timer.c:179:20
 1e0bb56:    d0 e0 14 c0       	ifs (r0 > 13) goto 40 <sys_timer_task+0xBA : 1e0bb82 >			  ## timer.c:182:13
 1e0bb5a:    23 20             	if (r0 == 0) goto 70 <sys_timer_task+0xDA : 1e0bba2 >
 1e0bb5c:    40 e0 16 00       	if (r0 == 4) goto 44 <sys_timer_task+0xC4 : 1e0bb8c >
 1e0bb60:    2b 18             	goto 86 <sys_timer_task+0xF0 : 1e0bbb8 >
 1e0bb62:    10 4a             	r0 = [r5 + 4]			  ## list.h:165:23
 1e0bb64:    18 4c             	[r6 + 4] = r0			  ## list.h:159:16
 1e0bb66:    0e 40             	[r0 + 0] = r6			  ## list.h:160:16
 1e0bb68:    45 f2 07 30       	if (r5 < r4) goto 14 <sys_timer_task+0xB2 : 1e0bb7a >			  ## list.h:160:16
 1e0bb6c:    40 fc 40 01       	r0 = r4 + 320
 1e0bb70:    05 f2 03 20       	if (r5 >= r0) goto 6 <sys_timer_task+0xB2 : 1e0bb7a >
 1e0bb74:    1e f9 1f 50       	b[r5 + 31] = r14			  ## timer.c:99:21
 1e0bb78:    21 18             	goto 66 <sys_timer_task+0xF4 : 1e0bbbc >
 1e0bb7a:    50 08             	r0 = r5			  ## timer.c:152:17
 1e0bb7c:    bf f3 83 f5       	call -5370 <free : 1e0a686 >			  ## timer.c:152:17
 1e0bb80:    1d 18             	goto 58 <sys_timer_task+0xF4 : 1e0bbbc >			  ## timer.c:152:17
 1e0bb82:    e0 e0 03 00       	if (r0 == 14) goto 6 <sys_timer_task+0xC4 : 1e0bb8c >
 1e0bb86:    50 e1 19 00       	if (r0 == 21) goto 50 <sys_timer_task+0xF4 : 1e0bbbc >
 1e0bb8a:    16 18             	goto 44 <sys_timer_task+0xF0 : 1e0bbb8 >
 1e0bb8c:    1a f6 10 50       	[r5 + 16] = r10			  ## timer.c:192:22
 1e0bb90:    e0 5a             	r0 = h[r5 + 28] (u)			  ## timer.c:193:63
 1e0bb92:    01 fd 30 0b       	r1 = r0 | 3145728			  ## timer.c:193:61
 1e0bb96:    03 a0             	r3 = sp + 0			  ## timer.c:193:61
 1e0bb98:    32 70             	r2 = 3			  ## timer.c:193:13
 1e0bb9a:    a0 08             	r0 = r10			  ## timer.c:193:13
 1e0bb9c:    97 f3 20 d9       	call 3125824 <os_taskq_post_type : 106de0 >			  ## timer.c:193:13
 1e0bba0:    0d 18             	goto 26 <sys_timer_task+0xF4 : 1e0bbbc >			  ## timer.c:193:13
 1e0bba2:    b0 6b             	r0 = b[r5 + 27] (u)			  ## timer.c:183:17
 1e0bba4:    21 f3 08 00       	if ((r0 & 2) != 0) goto 16 <sys_timer_task+0xF0 : 1e0bbb8 >			  ## timer.c:183:17
 1e0bba8:    8f f3 ca ba       	call 2061716 <jiffies_msec : 3140 >			  ## timer.c:187:30
 1e0bbac:    61 4a             	r1 = [r5 + 24]			  ## timer.c:187:50
 1e0bbae:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:187:50
 1e0bbb2:    10 09             	r0 += r1			  ## timer.c:187:45
 1e0bbb4:    58 4a             	[r5 + 20] = r0			  ## timer.c:187:28
 1e0bbb6:    02 18             	goto 4 <sys_timer_task+0xF4 : 1e0bbbc >			  ## timer.c:187:28
 1e0bbb8:    50 08             	r0 = r5
 1e0bbba:    74 17             	call -280 <__timer_del : 1e0baa4 >
 1e0bbbc:    76 f2 a1 1f       	if (r6 != r7) goto -190 <sys_timer_task+0x3A : 1e0bb02 >
 1e0bbc0:    06 4e             	r6 = [r7 + 0]
 1e0bbc2:    76 f2 0a 00       	if (r6 == r7) goto 20 <sys_timer_task+0x112 : 1e0bbda >
 1e0bbc6:    f0 07             	r0 = -1
 1e0bbc8:    55 4c             	r5 = [r6 + 20]			  ## timer.c:203:33
 1e0bbca:    50 f2 01 80       	if (r0 > r5) goto 2 <sys_timer_task+0x108 : 1e0bbd0 >			  ## timer.c:203:33
 1e0bbce:    05 08             	r5 = r0			  ## timer.c:203:19
 1e0bbd0:    06 4c             	r6 = [r6 + 0]
 1e0bbd2:    50 08             	r0 = r5
 1e0bbd4:    76 f2 f8 1f       	if (r6 != r7) goto -16 <sys_timer_task+0x100 : 1e0bbc8 >
 1e0bbd8:    01 18             	goto 2 <sys_timer_task+0x114 : 1e0bbdc >
 1e0bbda:    f5 07             	r5 = -1
 1e0bbdc:    37 15             	call -1426 <__get_min_precesion : 1e0b64c >			  ## timer.c:206:16
 1e0bbde:    bf f3 aa ab       	call -43180 <timer1_run : 1e01336 >			  ## timer.c:206:5
 1e0bbe2:    97 f3 d9 d8       	call 3125682 <local_irq_enable : 106d98 >			  ## timer.c:208:5
 1e0bbe6:    f5 ef 08 00       	if (r5 == -1) goto 16 <sys_timer_task+0x132 : 1e0bbfa >			  ## timer.c:681:13
 1e0bbea:    8f f3 a9 ba       	call 2061650 <jiffies_msec : 3140 >			  ## timer.c:682:32
 1e0bbee:    20 ba             	r0 = r5 - r0			  ## timer.c:682:30
 1e0bbf0:    a0 e0 05 30       	if (r0 < 10) goto 10 <sys_timer_task+0x136 : 1e0bbfe >			  ## timer.c:684:17
 1e0bbf4:    c0 fe 90 10       	r1 = r0 / r9 (u)			  ## timer.c:682:48
 1e0bbf8:    03 18             	goto 6 <sys_timer_task+0x138 : 1e0bc00 >			  ## timer.c:682:48
 1e0bbfa:    01 70             	r1 = 0			  ## timer.c:692:13
 1e0bbfc:    01 18             	goto 2 <sys_timer_task+0x138 : 1e0bc00 >			  ## timer.c:692:13
 1e0bbfe:    21 70             	r1 = 2			  ## timer.c:688:17
 1e0bc00:    80 08             	r0 = r8
 1e0bc02:    97 f3 01 d9       	call 3125762 <os_sem_pend : 106e08 >
 1e0bc06:    78 1f             	goto -272 <sys_timer_task+0x30 : 1e0baf8 >


sys_timer_set_user_data:
 1e0bc08:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:443:0
 1e0bc0a:    14 08             	r4 = r1			  ## timer.c:443:0
 1e0bc0c:    05 08             	r5 = r0			  ## timer.c:443:0
 1e0bc0e:    97 f3 c5 d8       	call 3125642 <local_irq_disable : 106d9c >			  ## timer.c:446:5
 1e0bc12:    c0 ff 98 08 00 00 	r0 = 2200 <timer_head : 898 >			  ## timer.c:446:5
 1e0bc18:    01 40             	r1 = [r0 + 0]			  ## timer.c:446:5
 1e0bc1a:    01 f2 07 00       	if (r1 == r0) goto 14 <sys_timer_set_user_data+0x24 : 1e0bc2c >
 1e0bc1e:    e2 52             	r2 = h[r1 + 28] (u)			  ## timer.c:449:16
 1e0bc20:    52 f2 01 10       	if (r2 != r5) goto 2 <sys_timer_set_user_data+0x1E : 1e0bc26 >			  ## timer.c:449:16
 1e0bc24:    3c 42             	[r1 + 12] = r4			  ## timer.c:450:21
 1e0bc26:    01 42             	r1 = [r1 + 0]
 1e0bc28:    01 f2 f9 1f       	if (r1 != r0) goto -14 <sys_timer_set_user_data+0x16 : 1e0bc1e >
 1e0bc2c:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:454:5
 1e0bc2e:    d7 f3 b3 d8       	goto 3125606 <local_irq_enable : 106d98 >			  ## timer.c:454:5


sys_timer_modify:
 1e0bc32:    77 01             	[--sp] = {rets, r7-r4}			  ## timer.c:384:0
 1e0bc34:    14 08             	r4 = r1			  ## timer.c:384:0
 1e0bc36:    06 08             	r6 = r0			  ## timer.c:384:0
 1e0bc38:    97 f3 b0 d8       	call 3125600 <local_irq_disable : 106d9c >			  ## timer.c:387:5
 1e0bc3c:    07 15             	call -1522 <__get_min_precesion : 1e0b64c >			  ## timer.c:389:20
 1e0bc3e:    c1 ff 98 08 00 00 	r1 = 2200 <timer_head : 898 >			  ## timer.c:389:20
 1e0bc44:    07 42             	r7 = [r1 + 0]			  ## timer.c:389:20
 1e0bc46:    05 08             	r5 = r0			  ## timer.c:389:20
 1e0bc48:    17 f2 10 00       	if (r7 == r1) goto 32 <sys_timer_modify+0x3A : 1e0bc6c >
 1e0bc4c:    e0 5e             	r0 = h[r7 + 28] (u)			  ## timer.c:392:16
 1e0bc4e:    60 f2 04 00       	if (r0 == r6) goto 8 <sys_timer_modify+0x28 : 1e0bc5a >			  ## timer.c:392:16
 1e0bc52:    07 4e             	r7 = [r7 + 0]
 1e0bc54:    17 f2 fa 1f       	if (r7 != r1) goto -12 <sys_timer_modify+0x1A : 1e0bc4c >
 1e0bc58:    09 18             	goto 18 <sys_timer_modify+0x3A : 1e0bc6c >
 1e0bc5a:    b0 6f             	r0 = b[r7 + 27] (u)			  ## timer.c:393:21
 1e0bc5c:    41 08             	r1 = r4			  ## timer.c:393:21
 1e0bc5e:    c8 fd c0 10       	r1 <= insert(r0, p:24, l:8)			  ## timer.c:393:21
 1e0bc62:    69 4e             	[r7 + 24] = r1			  ## timer.c:393:21
 1e0bc64:    8f f3 6c ba       	call 2061528 <jiffies_msec : 3140 >			  ## timer.c:394:26
 1e0bc68:    40 09             	r0 += r4			  ## timer.c:394:41
 1e0bc6a:    58 4e             	[r7 + 20] = r0			  ## timer.c:394:24
 1e0bc6c:    45 f2 03 90       	if (r5 <= r4) goto 6 <sys_timer_modify+0x44 : 1e0bc76 >
 1e0bc70:    40 08             	r0 = r4			  ## timer.c:400:9
 1e0bc72:    bf f3 60 ab       	call -43328 <timer1_run : 1e01336 >			  ## timer.c:400:9
 1e0bc76:    97 f3 8f d8       	call 3125534 <local_irq_enable : 106d98 >			  ## timer.c:403:5
 1e0bc7a:    c0 ff 6c 23 00 00 	r0 = 9068 <sys_timer_sem : 236c >			  ## timer.c:405:5
 1e0bc80:    17 01             	{rets, r7-r4} = [sp++]			  ## timer.c:405:5
 1e0bc82:    d7 f3 c3 d8       	goto 3125638 <os_sem_post : 106e0c >			  ## timer.c:405:5


sys_timer_re_run:
 1e0bc86:    75 01             	[--sp] = {rets, r5, r4}			  ## timer.c:419:0
 1e0bc88:    04 08             	r4 = r0			  ## timer.c:419:0
 1e0bc8a:    97 f3 87 d8       	call 3125518 <local_irq_disable : 106d9c >			  ## timer.c:422:5
 1e0bc8e:    c0 ff 98 08 00 00 	r0 = 2200 <timer_head : 898 >			  ## timer.c:422:5
 1e0bc94:    05 40             	r5 = [r0 + 0]			  ## timer.c:422:5
 1e0bc96:    05 f2 0e 00       	if (r5 == r0) goto 28 <sys_timer_re_run+0x30 : 1e0bcb6 >
 1e0bc9a:    e1 5a             	r1 = h[r5 + 28] (u)			  ## timer.c:425:16
 1e0bc9c:    41 f2 04 00       	if (r1 == r4) goto 8 <sys_timer_re_run+0x22 : 1e0bca8 >			  ## timer.c:425:16
 1e0bca0:    05 4a             	r5 = [r5 + 0]
 1e0bca2:    05 f2 fa 1f       	if (r5 != r0) goto -12 <sys_timer_re_run+0x14 : 1e0bc9a >
 1e0bca6:    07 18             	goto 14 <sys_timer_re_run+0x30 : 1e0bcb6 >
 1e0bca8:    8f f3 4a ba       	call 2061460 <jiffies_msec : 3140 >			  ## timer.c:426:26
 1e0bcac:    61 4a             	r1 = [r5 + 24]			  ## timer.c:426:46
 1e0bcae:    31 fd ff 1c       	r1 = r1 & 16777215			  ## timer.c:426:46
 1e0bcb2:    10 09             	r0 += r1			  ## timer.c:426:41
 1e0bcb4:    58 4a             	[r5 + 20] = r0			  ## timer.c:426:24
 1e0bcb6:    97 f3 6f d8       	call 3125470 <local_irq_enable : 106d98 >			  ## timer.c:431:5
 1e0bcba:    c0 ff 6c 23 00 00 	r0 = 9068 <sys_timer_sem : 236c >			  ## timer.c:433:5
 1e0bcc0:    15 01             	{rets, r5, r4} = [sp++]			  ## timer.c:433:5
 1e0bcc2:    d7 f3 a3 d8       	goto 3125574 <os_sem_post : 106e0c >			  ## timer.c:433:5


sys_key_event_enable:
 1e0bcc6:    34 00             	[--sp] = rets			  ## event.c:405:0
 1e0bcc8:    97 f3 68 d8       	call 3125456 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0bccc:    c0 ff 68 08 00 00 	r0 = 2152 <handl : 868 >			  ## event.c:407:25
 1e0bcd2:    01 70             	r1 = 0			  ## event.c:407:25
 1e0bcd4:    39 60             	b[r0 + 3] = r1			  ## event.c:407:25
 1e0bcd6:    88 01             	{rets} = [sp++]			  ## spinlock.h:88:5
 1e0bcd8:    d7 f3 5e d8       	goto 3125436 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5


event_pool_init:
 1e0bcdc:    34 00             	[--sp] = rets			  ## event.c:69:0
 1e0bcde:    00 fb 24 01       	r0 = 292 <DRIVER_RAM_TOTAL+0x32 : 124 >			  ## event.c:70:26
 1e0bce2:    bf f3 bd f4       	call -5766 <malloc : 1e0a660 >			  ## event.c:70:26
 1e0bce6:    c1 ff 68 08 00 00 	r1 = 2152 <handl : 868 >			  ## event.c:70:24
 1e0bcec:    48 42             	[r1 + 16] = r0			  ## event.c:70:24
 1e0bcee:    08 20             	if (r0 == 0) goto 16 <event_pool_init+0x24 : 1e0bd00 >			  ## event.c:70:24
 1e0bcf0:    01 fc 24 00       	r1 = r0 + 36			  ## event.c:75:54
 1e0bcf4:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## event.c:75:5
 1e0bcf8:    bf f3 6a f3       	call -6444 <cbuf_init : 1e0a3d0 >			  ## event.c:75:5
 1e0bcfc:    00 70             	r0 = 0			  ## event.c:75:5
 1e0bcfe:    30 00             	pc = [sp++]			  ## event.c:78:1
 1e0bd00:    40 07             	r0 = -12
 1e0bd02:    30 00             	pc = [sp++]			  ## event.c:78:1


sys_event_notify:
 1e0bd04:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:103:0
 1e0bd06:    28 fb 00 13       	r1 = rets			  ## event.c:105:5
 1e0bd0a:    c5 ff 68 08 00 00 	r5 = 2152 <handl : 868 >
 1e0bd10:    41 4a             	r1 = [r5 + 16]			  ## event.c:109:18
 1e0bd12:    04 08             	r4 = r0
 1e0bd14:    0d 22             	if (r1 == 0) goto 26 <sys_event_notify+0x2C : 1e0bd30 >
 1e0bd16:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:115:16
 1e0bd18:    10 e0 22 10       	if (r0 != 1) goto 68 <sys_event_notify+0x5C : 1e0bd60 >			  ## event.c:115:16
 1e0bd1c:    97 f3 3e d8       	call 3125372 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0bd20:    30 6a             	r0 = b[r5 + 3] (u)			  ## event.c:131:21
 1e0bd22:    09 20             	if (r0 == 0) goto 18 <sys_event_notify+0x32 : 1e0bd36 >			  ## event.c:131:13
 1e0bd24:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:132:30
 1e0bd26:    30 e0 10 00       	if (r0 == 3) goto 32 <sys_event_notify+0x46 : 1e0bd4a >			  ## event.c:132:30
 1e0bd2a:    10 e0 0b 00       	if (r0 == 1) goto 22 <sys_event_notify+0x40 : 1e0bd44 >
 1e0bd2e:    11 18             	goto 34 <sys_event_notify+0x4E : 1e0bd52 >
 1e0bd30:    d5 17             	call -86 <event_pool_init : 1e0bcdc >			  ## event.c:110:13
 1e0bd32:    40 30             	if (r0 != 0) goto 128 <sys_event_notify+0xB0 : 1e0bdb4 >			  ## event.c:110:13
 1e0bd34:    f0 1f             	goto -32 <sys_event_notify+0x12 : 1e0bd16 >			  ## event.c:110:13
 1e0bd36:    40 6a             	r0 = b[r5 + 4] (u)			  ## event.c:142:28
 1e0bd38:    0f 20             	if (r0 == 0) goto 30 <sys_event_notify+0x54 : 1e0bd58 >			  ## event.c:142:28
 1e0bd3a:    50 58             	r0 = h[r4 + 10] (u)			  ## event.c:143:30
 1e0bd3c:    30 e0 0c 00       	if (r0 == 3) goto 24 <sys_event_notify+0x54 : 1e0bd58 >			  ## event.c:143:30
 1e0bd40:    10 e0 03 10       	if (r0 != 1) goto 6 <sys_event_notify+0x46 : 1e0bd4a >
 1e0bd44:    30 48             	r0 = [r4 + 12]
 1e0bd46:    58 6a             	b[r5 + 5] = r0
 1e0bd48:    04 18             	goto 8 <sys_event_notify+0x4E : 1e0bd52 >
 1e0bd4a:    30 48             	r0 = [r4 + 12]
 1e0bd4c:    51 6a             	r1 = b[r5 + 5] (u)
 1e0bd4e:    01 f2 03 10       	if (r1 != r0) goto 6 <sys_event_notify+0x54 : 1e0bd58 >
 1e0bd52:    16 01             	{rets, r6-r4} = [sp++]
 1e0bd54:    d7 f3 20 d8       	goto 3125312 <local_irq_enable : 106d98 >
 1e0bd58:    f0 7f             	r0 = 255			  ## event.c:154:28
 1e0bd5a:    58 6a             	b[r5 + 5] = r0			  ## event.c:154:28
 1e0bd5c:    97 f3 1c d8       	call 3125304 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0bd60:    40 08             	r0 = r4			  ## event.c:180:9
 1e0bd62:    80 f3 19 54       	call 43058 <sys_event_recode : 1e16598 >			  ## event.c:180:9
 1e0bd66:    26 30             	if (r0 != 0) goto 76 <sys_event_notify+0xB0 : 1e0bdb4 >			  ## event.c:180:9
 1e0bd68:    40 4a             	r0 = [r5 + 16]			  ## event.c:186:34
 1e0bd6a:    82 71             	r2 = 24			  ## event.c:186:15
 1e0bd6c:    41 08             	r1 = r4			  ## event.c:186:15
 1e0bd6e:    bf f3 fc f2       	call -6664 <cbuf_write : 1e0a36a >			  ## event.c:186:15
 1e0bd72:    80 e1 1b 00       	if (r0 == 24) goto 54 <sys_event_notify+0xA8 : 1e0bdac >
 1e0bd76:    66 7f             	r6 = 246
 1e0bd78:    16 80             	r6 += 1			  ## event.c:189:23
 1e0bd7a:    60 ff ff 69 16 00 	if ((r6 & 255) == 0) goto 44 <sys_event_notify+0xA8 : 1e0bdac >			  ## event.c:189:23
 1e0bd80:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e0bd84:    61 ff ff 09 11 00 	if ((r0 & 255) != 0) goto 34 <sys_event_notify+0xA8 : 1e0bdac >
 1e0bd8a:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e0bd8e:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e0bd92:    01 ff 00 03 0a 00 	if (r0 != 768) goto 20 <sys_event_notify+0xA8 : 1e0bdac >
 1e0bd98:    10 70             	r0 = 1			  ## event.c:195:17
 1e0bd9a:    97 f3 0d d8       	call 3125274 <os_time_dly : 106db8 >			  ## event.c:195:17
 1e0bd9e:    40 4a             	r0 = [r5 + 16]			  ## event.c:186:34
 1e0bda0:    82 71             	r2 = 24			  ## event.c:186:15
 1e0bda2:    41 08             	r1 = r4			  ## event.c:186:15
 1e0bda4:    bf f3 e1 f2       	call -6718 <cbuf_write : 1e0a36a >			  ## event.c:186:15
 1e0bda8:    80 e1 e6 1f       	if (r0 != 24) goto -52 <sys_event_notify+0x74 : 1e0bd78 >
 1e0bdac:    50 4a             	r0 = [r5 + 20]			  ## event.c:203:17
 1e0bdae:    02 20             	if (r0 == 0) goto 4 <sys_event_notify+0xB0 : 1e0bdb4 >			  ## event.c:203:17
 1e0bdb0:    97 f3 2c d8       	call 3125336 <os_sem_post : 106e0c >			  ## event.c:204:9
 1e0bdb4:    56 01             	{pc, r6-r4} = [sp++]			  ## event.c:206:1


sys_event_init:
 1e0bdb6:    77 01             	[--sp] = {rets, r7-r4}			  ## event.c:686:0
 1e0bdb8:    c5 ff 68 08 00 00 	r5 = 2152 <handl : 868 >			  ## event.c:686:0
 1e0bdbe:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:690:17
 1e0bdc0:    04 70             	r4 = 0			  ## event.c:690:17
 1e0bdc2:    2c 30             	if (r0 != 0) goto 88 <sys_event_init+0x66 : 1e0be1c >			  ## event.c:690:17
 1e0bdc4:    14 70             	r4 = 1			  ## event.c:694:20
 1e0bdc6:    0c 6a             	b[r5 + 0] = r4			  ## event.c:694:20
 1e0bdc8:    f0 7f             	r0 = 255			  ## event.c:695:24
 1e0bdca:    58 6a             	b[r5 + 5] = r0			  ## event.c:695:24
 1e0bdcc:    06 70             	r6 = 0			  ## event.c:695:24
 1e0bdce:    3e 4a             	[r5 + 12] = r6			  ## event.c:696:27
 1e0bdd0:    6e 4a             	[r5 + 24] = r6			  ## spinlock.h:70:18
 1e0bdd2:    c7 9b             	r7 = r5 + 28			  ## list.h:188:16
 1e0bdd4:    7f 4a             	[r5 + 28] = r7			  ## list.h:188:16
 1e0bdd6:    8f 4a             	[r5 + 32] = r7			  ## list.h:189:16
 1e0bdd8:    80 73             	r0 = 56			  ## event.c:700:33
 1e0bdda:    bf f3 41 f4       	call -6014 <malloc : 1e0a660 >			  ## event.c:700:33
 1e0bdde:    1d 20             	if (r0 == 0) goto 58 <sys_event_init+0x64 : 1e0be1a >			  ## event.c:700:33
 1e0bde0:    4c 61             	b[r0 + 20] = r4			  ## event.c:705:16
 1e0bde2:    3e 40             	[r0 + 12] = r6			  ## event.c:706:20
 1e0bde4:    88 4a             	[r5 + 32] = r0			  ## list.h:137:16
 1e0bde6:    0f 40             	[r0 + 0] = r7			  ## list.h:138:16
 1e0bde8:    1f 40             	[r0 + 4] = r7			  ## list.h:139:16
 1e0bdea:    78 4a             	[r5 + 28] = r0			  ## list.h:140:16
 1e0bdec:    81 4a             	r1 = [r5 + 32]
 1e0bdee:    14 f9 30 00       	b[r0 + 48] = r4			  ## event.c:705:16
 1e0bdf2:    ae 40             	[r0 + 40] = r6			  ## event.c:706:20
 1e0bdf4:    7f 40             	[r0 + 28] = r7			  ## list.h:138:16
 1e0bdf6:    89 40             	[r0 + 32] = r1			  ## list.h:139:16
 1e0bdf8:    c0 81             	r0 += 28			  ## event.c:708:10
 1e0bdfa:    08 42             	[r1 + 0] = r0			  ## list.h:140:16
 1e0bdfc:    88 4a             	[r5 + 32] = r0
 1e0bdfe:    40 4a             	r0 = [r5 + 16]			  ## event.c:715:18
 1e0be00:    01 30             	if (r0 != 0) goto 2 <sys_event_init+0x4E : 1e0be04 >			  ## event.c:715:18
 1e0be02:    6c 17             	call -296 <event_pool_init : 1e0bcdc >			  ## event.c:716:9
 1e0be04:    c0 ff 20 be e0 01 	r0 = 31505952 <sys_event_task : 1e0be20 >			  ## event.c:718:5
 1e0be0a:    c2 ff 9e df e0 01 	r2 = 31514526 <update_target_end+0xBE : 1e0df9e >			  ## event.c:718:5
 1e0be10:    01 70             	r1 = 0			  ## event.c:718:5
 1e0be12:    04 70             	r4 = 0			  ## event.c:718:5
 1e0be14:    bf f3 ce fb       	call -2148 <task_create : 1e0b5b4 >			  ## event.c:718:5
 1e0be18:    01 18             	goto 2 <sys_event_init+0x66 : 1e0be1c >			  ## event.c:718:5
 1e0be1a:    44 07             	r4 = -12
 1e0be1c:    40 08             	r0 = r4			  ## event.c:721:1
 1e0be1e:    57 01             	{pc, r7-r4} = [sp++]			  ## event.c:721:1


sys_event_task:
 1e0be20:    f4 0b             	sp += -24			  ## event.c:635:0
 1e0be22:    00 75             	r0 = 80			  ## event.c:637:19
 1e0be24:    bf f3 1c f4       	call -6088 <malloc : 1e0a660 >			  ## event.c:637:19
 1e0be28:    04 08             	r4 = r0			  ## event.c:637:19
 1e0be2a:    02 38             	if (r4 != 0) goto 4 <sys_event_task+0x10 : 1e0be30 >			  ## event.c:637:19
 1e0be2c:    8f f3 68 ba       	call 2061520 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0be30:    01 70             	r1 = 0			  ## event.c:640:5
 1e0be32:    08 70             	r8 = 0			  ## event.c:640:5
 1e0be34:    40 08             	r0 = r4			  ## event.c:640:5
 1e0be36:    97 f3 e3 d7       	call 3125190 <os_sem_create : 106e00 >			  ## event.c:640:5
 1e0be3a:    c9 ff 68 08 00 00 	r9 = 2152 <handl : 868 >			  ## event.c:640:5
 1e0be40:    14 f6 14 90       	[r9 + 20] = r4			  ## event.c:641:17
 1e0be44:    c4 ff 44 1e 00 00 	r4 = 7748 <event : 1e44 >			  ## event.c:641:17
 1e0be4a:    cf ff d0 dd e0 01 	r15 = 31514064 <syscfg_ops_begin : 1e0ddd0 >			  ## event.c:641:17
 1e0be50:    97 f3 a4 d7       	call 3125064 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0be54:    00 f6 10 90       	r0 = [r9 + 16]			  ## event.c:647:33
 1e0be58:    82 71             	r2 = 24			  ## event.c:647:15
 1e0be5a:    41 08             	r1 = r4			  ## event.c:647:15
 1e0be5c:    bf f3 d2 f2       	call -6748 <cbuf_read : 1e0a404 >			  ## event.c:647:15
 1e0be60:    b0 20             	if (r0 == 0) goto 352 <sys_event_task+0x1A2 : 1e0bfc2 >
 1e0be62:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:652:23
 1e0be64:    10 e0 04 10       	if (r0 != 1) goto 8 <sys_event_task+0x50 : 1e0be70 >
 1e0be68:    00 f9 06 90       	r0 = b[r9 + 6] (u)			  ## event.c:653:44
 1e0be6c:    10 f9 04 90       	b[r9 + 4] = r0			  ## event.c:653:34
 1e0be70:    97 f3 92 d7       	call 3125028 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0be74:    00 75             	r0 = 80			  ## event.c:543:24
 1e0be76:    bf f3 f3 f3       	call -6170 <malloc : 1e0a660 >			  ## event.c:543:24
 1e0be7a:    0d 08             	r13 = r0			  ## event.c:543:24
 1e0be7c:    02 30             	if (r0 != 0) goto 4 <sys_event_task+0x62 : 1e0be82 >			  ## event.c:543:24
 1e0be7e:    8f f3 3f ba       	call 2061438 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0be82:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:547:21
 1e0be86:    c0 ff d0 dd e0 01 	r0 = 31514064 <syscfg_ops_begin : 1e0ddd0 >			  ## event.c:549:5
 1e0be8c:    f0 f2 0d 20       	if (r0 >= r15) goto 26 <sys_event_task+0x8A : 1e0beaa >			  ## event.c:549:5
 1e0be90:    05 08             	r5 = r0
 1e0be92:    00 4a             	r0 = [r5 + 0]			  ## event.c:550:16
 1e0be94:    01 58             	r1 = h[r4 + 0] (u)			  ## event.c:550:29
 1e0be96:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <sys_event_task+0x84 : 1e0bea4 >			  ## event.c:550:29
 1e0be9a:    11 4a             	r1 = [r5 + 4]			  ## event.c:551:16
 1e0be9c:    40 08             	r0 = r4			  ## event.c:551:13
 1e0be9e:    81 00             	call r1			  ## event.c:551:13
 1e0bea0:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:552:24
 1e0bea2:    97 30             	if (r0 != 0) goto 302 <sys_event_task+0x1B2 : 1e0bfd2 >			  ## event.c:552:24
 1e0bea4:    85 80             	r5 += 8			  ## event.c:549:5
 1e0bea6:    f5 f2 f4 3f       	if (r5 < r15) goto -24 <sys_event_task+0x72 : 1e0be92 >
 1e0beaa:    0e f6 0c 90       	r14 = [r9 + 12]			  ## event.c:559:29
 1e0beae:    97 f3 75 d7       	call 3124970 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0beb2:    07 f6 1c 90       	r7 = [r9 + 28]			  ## event.c:563:5
 1e0beb6:    95 fc 1c 00       	r5 = r9 + 28			  ## event.c:563:5
 1e0beba:    57 f2 71 00       	if (r7 == r5) goto 226 <sys_event_task+0x180 : 1e0bfa0 >			  ## event.c:563:5
 1e0bebe:    0c f7 00 40       	r12 = h[r4 + 0] (u)
 1e0bec2:    02 f9 01 90       	r2 = b[r9 + 1] (u)
 1e0bec6:    10 70             	r0 = 1
 1e0bec8:    11 70             	r1 = 1
 1e0beca:    c2 f0 01 00       	if ((r2 & r12) == 0) goto 2 <sys_event_task+0xB0 : 1e0bed0 >
 1e0bece:    01 70             	r1 = 0
 1e0bed0:    03 f9 02 90       	r3 = b[r9 + 2] (u)
 1e0bed4:    12 70             	r2 = 1
 1e0bed6:    01 36             	if (r3 != 0) goto 2 <sys_event_task+0xBA : 1e0beda >
 1e0bed8:    02 70             	r2 = 0
 1e0beda:    51 b4             	r1 |= r2
 1e0bedc:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0xC2 : 1e0bee2 >
 1e0bee0:    00 70             	r0 = 0
 1e0bee2:    0b f6 04 40       	r11 = [r4 + 4]
 1e0bee6:    e0 fd 10 a0       	r10 = r0 | r1
 1e0beea:    76 08             	r6 = r7
 1e0beec:    40 6d             	r0 = b[r6 + 20] (u)			  ## event.c:564:16
 1e0beee:    07 4c             	r7 = [r6 + 0]			  ## event.c:564:16
 1e0bef0:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0xD8 : 1e0bef8 >
 1e0bef2:    57 f2 fa 1f       	if (r7 != r5) goto -12 <sys_event_task+0xCA : 1e0beea >
 1e0bef6:    54 18             	goto 168 <sys_event_task+0x180 : 1e0bfa0 >
 1e0bef8:    30 4c             	r0 = [r6 + 12]			  ## event.c:564:27
 1e0befa:    fb 21             	if (r0 == 0) goto -10 <sys_event_task+0xD2 : 1e0bef2 >			  ## event.c:564:27
 1e0befc:    b0 5c             	r0 = h[r6 + 22] (u)			  ## event.c:567:18
 1e0befe:    c0 f0 f8 ff       	if ((r0 & r12) == 0) goto -16 <sys_event_task+0xD2 : 1e0bef2 >			  ## event.c:567:18
 1e0bf02:    60 4c             	r0 = [r6 + 24]			  ## event.c:570:16
 1e0bf04:    02 20             	if (r0 == 0) goto 4 <sys_event_task+0xEA : 1e0bf0a >			  ## event.c:570:16
 1e0bf06:    b0 f2 f4 1f       	if (r0 != r11) goto -24 <sys_event_task+0xD2 : 1e0bef2 >
 1e0bf0a:    0a e0 05 10       	if (r10 != 0) goto 10 <sys_event_task+0xF8 : 1e0bf18 >
 1e0bf0e:    40 4c             	r0 = [r6 + 16]			  ## event.c:576:31
 1e0bf10:    e1 08             	r1 = r14			  ## event.c:576:21
 1e0bf12:    97 f3 ef d7       	call 3125214 <strcmp : 106ef4 >			  ## event.c:576:21
 1e0bf16:    ed 31             	if (r0 != 0) goto -38 <sys_event_task+0xD2 : 1e0bef2 >			  ## event.c:576:21
 1e0bf18:    97 f3 3e d7       	call 3124860 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0bf1c:    01 70             	r1 = 0			  ## event.c:585:9
 1e0bf1e:    d0 08             	r0 = r13			  ## event.c:585:9
 1e0bf20:    97 f3 6e d7       	call 3124956 <os_sem_create : 106e00 >			  ## event.c:585:9
 1e0bf24:    30 4c             	r0 = [r6 + 12]			  ## event.c:587:26
 1e0bf26:    08 02             	[sp] = r0			  ## event.c:587:16
 1e0bf28:    00 fb 02 02       	r0 = 514 <BTCTLER_CL_RAM_TOTAL+0x1E : 202 >			  ## event.c:588:16
 1e0bf2c:    18 02             	[sp+4] = r0			  ## event.c:588:16
 1e0bf2e:    2c 02             	[sp+8] = r4			  ## event.c:589:16
 1e0bf30:    20 4c             	r0 = [r6 + 8]			  ## event.c:590:26
 1e0bf32:    38 02             	[sp+12] = r0			  ## event.c:590:16
 1e0bf34:    1d f5 10 00       	[sp+16] = r13			  ## event.c:591:16
 1e0bf38:    03 18             	goto 6 <sys_event_task+0x120 : 1e0bf40 >			  ## event.c:591:16
 1e0bf3a:    20 70             	r0 = 2			  ## event.c:604:13
 1e0bf3c:    97 f3 3c d7       	call 3124856 <os_time_dly : 106db8 >			  ## event.c:604:13
 1e0bf40:    40 6d             	r0 = b[r6 + 20] (u)
 1e0bf42:    16 30             	if (r0 != 0) goto 44 <sys_event_task+0x150 : 1e0bf70 >
 1e0bf44:    40 4c             	r0 = [r6 + 16]			  ## event.c:593:45
 1e0bf46:    03 a0             	r3 = sp + 0			  ## event.c:593:45
 1e0bf48:    20 fb 30 1b       	r1 = 3145728			  ## event.c:593:23
 1e0bf4c:    52 70             	r2 = 5			  ## event.c:593:23
 1e0bf4e:    97 f3 47 d7       	call 3124878 <os_taskq_post_type : 106de0 >			  ## event.c:593:23
 1e0bf52:    50 e1 f2 0f       	if (r0 == 21) goto -28 <sys_event_task+0x11A : 1e0bf3a >			  ## event.c:594:17
 1e0bf56:    0c 30             	if (r0 != 0) goto 24 <sys_event_task+0x150 : 1e0bf70 >
 1e0bf58:    00 f6 08 90       	r0 = [r9 + 8]			  ## event.c:595:53
 1e0bf5c:    a1 70             	r1 = 10			  ## event.c:595:65
 1e0bf5e:    e0 fe 10 10       	r1 = r0 / r1 (s)			  ## event.c:595:65
 1e0bf62:    d0 08             	r0 = r13			  ## event.c:595:23
 1e0bf64:    97 f3 50 d7       	call 3124896 <os_sem_pend : 106e08 >			  ## event.c:595:23
 1e0bf68:    b0 e0 02 10       	if (r0 != 11) goto 4 <sys_event_task+0x150 : 1e0bf70 >
 1e0bf6c:    8f f3 c8 b9       	call 2061200 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0bf70:    00 f9 02 90       	r0 = b[r9 + 2] (u)			  ## event.c:607:21
 1e0bf74:    03 20             	if (r0 == 0) goto 6 <sys_event_task+0x15C : 1e0bf7c >			  ## event.c:607:13
 1e0bf76:    18 f9 02 40       	b[r4 + 2] = r8			  ## event.c:608:29
 1e0bf7a:    02 18             	goto 4 <sys_event_task+0x160 : 1e0bf80 >			  ## event.c:608:29
 1e0bf7c:    20 68             	r0 = b[r4 + 2] (u)			  ## event.c:610:20
 1e0bf7e:    29 30             	if (r0 != 0) goto 82 <sys_event_task+0x1B2 : 1e0bfd2 >			  ## event.c:610:20
 1e0bf80:    97 f3 0c d7       	call 3124760 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0bf84:    00 4c             	r0 = [r6 + 0]			  ## event.c:621:22
 1e0bf86:    70 f2 01 00       	if (r0 == r7) goto 2 <sys_event_task+0x16C : 1e0bf8c >
 1e0bf8a:    07 08             	r7 = r0			  ## event.c:621:13
 1e0bf8c:    00 f6 0c 90       	r0 = [r9 + 12]			  ## event.c:617:39
 1e0bf90:    01 30             	if (r0 != 0) goto 2 <sys_event_task+0x174 : 1e0bf94 >
 1e0bf92:    e0 08             	r0 = r14			  ## event.c:617:28
 1e0bf94:    0e e0 01 00       	if (r14 == 0) goto 2 <sys_event_task+0x17A : 1e0bf9a >
 1e0bf98:    e0 08             	r0 = r14			  ## event.c:617:28
 1e0bf9a:    0e 08             	r14 = r0
 1e0bf9c:    57 f2 8f 1f       	if (r7 != r5) goto -226 <sys_event_task+0x9E : 1e0bebe >
 1e0bfa0:    d0 08             	r0 = r13			  ## event.c:625:5
 1e0bfa2:    bf f3 70 f3       	call -6432 <free : 1e0a686 >			  ## event.c:625:5
 1e0bfa6:    18 f9 02 90       	b[r9 + 2] = r8			  ## event.c:627:31
 1e0bfaa:    97 f3 f5 d6       	call 3124714 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0bfae:    97 f3 f5 d6       	call 3124714 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0bfb2:    00 58             	r0 = h[r4 + 0] (u)			  ## event.c:668:23
 1e0bfb4:    10 e0 02 10       	if (r0 != 1) goto 4 <sys_event_task+0x19C : 1e0bfbc >			  ## event.c:668:23
 1e0bfb8:    18 f9 04 90       	b[r9 + 4] = r8			  ## event.c:669:34
 1e0bfbc:    97 f3 ec d6       	call 3124696 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0bfc0:    47 1f             	goto -370 <sys_event_task+0x30 : 1e0be50 >			  ## spinlock.h:88:5
 1e0bfc2:    97 f3 e9 d6       	call 3124690 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0bfc6:    00 f6 14 90       	r0 = [r9 + 20]			  ## event.c:650:33
 1e0bfca:    01 70             	r1 = 0			  ## event.c:650:13
 1e0bfcc:    97 f3 1c d7       	call 3124792 <os_sem_pend : 106e08 >			  ## event.c:650:13
 1e0bfd0:    3f 1f             	goto -386 <sys_event_task+0x30 : 1e0be50 >			  ## event.c:650:13
 1e0bfd2:    d0 08             	r0 = r13
 1e0bfd4:    bf f3 57 f3       	call -6482 <free : 1e0a686 >
 1e0bfd8:    ea 1f             	goto -44 <sys_event_task+0x18E : 1e0bfae >


register_sys_event_handler:
 1e0bfda:    76 01             	[--sp] = {rets, r6-r4}			  ## event.c:238:0
 1e0bfdc:    c5 ff 68 08 00 00 	r5 = 2152 <handl : 868 >			  ## event.c:238:0
 1e0bfe2:    00 6a             	r0 = b[r5 + 0] (u)			  ## event.c:241:18
 1e0bfe4:    0f 20             	if (r0 == 0) goto 30 <register_sys_event_handler+0x2A : 1e0c004 >			  ## event.c:241:18
 1e0bfe6:    74 4a             	r4 = [r5 + 28]
 1e0bfe8:    c6 9b             	r6 = r5 + 28
 1e0bfea:    64 f2 05 00       	if (r4 == r6) goto 10 <register_sys_event_handler+0x1E : 1e0bff8 >
 1e0bfee:    40 69             	r0 = b[r4 + 20] (u)			  ## event.c:248:16
 1e0bff0:    0c 30             	if (r0 != 0) goto 24 <register_sys_event_handler+0x30 : 1e0c00a >			  ## event.c:248:16
 1e0bff2:    04 48             	r4 = [r4 + 0]
 1e0bff4:    64 f2 fb 1f       	if (r4 != r6) goto -10 <register_sys_event_handler+0x14 : 1e0bfee >
 1e0bff8:    c0 71             	r0 = 28			  ## event.c:256:33
 1e0bffa:    bf f3 31 f3       	call -6558 <malloc : 1e0a660 >			  ## event.c:256:33
 1e0bffe:    04 08             	r4 = r0			  ## event.c:256:33
 1e0c000:    0c 38             	if (r4 != 0) goto 24 <register_sys_event_handler+0x40 : 1e0c01a >
 1e0c002:    56 01             	{pc, r6-r4} = [sp++]
 1e0c004:    d8 16             	call -592 <sys_event_init : 1e0bdb6 >			  ## event.c:242:13
 1e0c006:    2a 30             	if (r0 != 0) goto 84 <register_sys_event_handler+0x82 : 1e0c05c >			  ## event.c:242:13
 1e0c008:    ee 1f             	goto -36 <register_sys_event_handler+0xC : 1e0bfe6 >			  ## event.c:242:13
 1e0c00a:    97 f3 c7 d6       	call 3124622 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c00e:    00 48             	r0 = [r4 + 0]			  ## list.h:165:36
 1e0c010:    11 48             	r1 = [r4 + 4]			  ## list.h:165:23
 1e0c012:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0c014:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0c016:    97 f3 bf d6       	call 3124606 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c01a:    00 70             	r0 = 0
 1e0c01c:    48 69             	b[r4 + 20] = r0			  ## event.c:262:12
 1e0c01e:    68 48             	[r4 + 24] = r0			  ## event.c:263:13
 1e0c020:    c1 ff 92 c4 e0 01 	r1 = 31507602 <app_core_event_handler : 1e0c492 >			  ## event.c:264:16
 1e0c026:    39 48             	[r4 + 12] = r1			  ## event.c:264:16
 1e0c028:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## event.c:265:19
 1e0c02e:    b9 58             	h[r4 + 22] = r1			  ## event.c:265:19
 1e0c030:    58 69             	b[r4 + 21] = r0			  ## event.c:266:17
 1e0c032:    8f f3 89 b8       	call 2060562 <os_current_task : 3148 >			  ## event.c:267:16
 1e0c036:    48 48             	[r4 + 16] = r0			  ## event.c:267:14
 1e0c038:    02 30             	if (r0 != 0) goto 4 <register_sys_event_handler+0x64 : 1e0c03e >			  ## event.c:267:14
 1e0c03a:    8f f3 61 b9       	call 2060994 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0c03e:    97 f3 ad d6       	call 3124570 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0c042:    70 4a             	r0 = [r5 + 28]			  ## spinlock.h:77:5
 1e0c044:    60 f2 03 00       	if (r0 == r6) goto 6 <register_sys_event_handler+0x74 : 1e0c04e >
 1e0c048:    00 40             	r0 = [r0 + 0]
 1e0c04a:    60 f2 fd 1f       	if (r0 != r6) goto -6 <register_sys_event_handler+0x6E : 1e0c048 >
 1e0c04e:    80 4a             	r0 = [r5 + 32]			  ## list.h:154:28
 1e0c050:    8c 4a             	[r5 + 32] = r4			  ## list.h:137:16
 1e0c052:    0e 48             	[r4 + 0] = r6			  ## list.h:138:16
 1e0c054:    18 48             	[r4 + 4] = r0			  ## list.h:139:16
 1e0c056:    0c 40             	[r0 + 0] = r4			  ## list.h:140:16
 1e0c058:    97 f3 9e d6       	call 3124540 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0c05c:    56 01             	{pc, r6-r4} = [sp++]


skip_atoi:
 1e0c05e:    75 01             	[--sp] = {rets, r5, r4}			  ## printf-stdarg.c:18:0
 1e0c060:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:20:12
 1e0c062:    81 f9 01 20       	r1 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0c066:    01 8d             	r1 += -48			  ## printf-stdarg.c:20:12
 1e0c068:    43 04             	r3 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0c06a:    01 70             	r1 = 0			  ## printf-stdarg.c:20:12
 1e0c06c:    93 e0 0f 80       	if (r3 > 9) goto 30 <skip_atoi+0x30 : 1e0c08e >			  ## printf-stdarg.c:20:12
 1e0c070:    a3 70             	r3 = 10
 1e0c072:    0a 40             	[r0 + 0] = r2			  ## printf-stdarg.c:21:29
 1e0c074:    24 f9 ff 2f       	r4 = b[r2 + -1] (s)			  ## printf-stdarg.c:21:22
 1e0c078:    85 f9 01 20       	r5 = b[r2 ++= 1] (u)			  ## printf-stdarg.c:20:12
 1e0c07c:    80 fe 30 41       	r4 += r1 * r3			  ## printf-stdarg.c:21:20
 1e0c080:    51 fc d0 ff       	r1 = r5 + -48			  ## printf-stdarg.c:20:12
 1e0c084:    45 04             	r5 = r1.b0 (u)			  ## printf-stdarg.c:20:12
 1e0c086:    41 fc d0 ff       	r1 = r4 + -48			  ## printf-stdarg.c:21:33
 1e0c08a:    a5 e0 f2 3f       	if (r5 < 10) goto -28 <skip_atoi+0x14 : 1e0c072 >
 1e0c08e:    10 08             	r0 = r1			  ## printf-stdarg.c:23:5
 1e0c090:    55 01             	{pc, r5, r4} = [sp++]			  ## printf-stdarg.c:23:5


printchar:
 1e0c092:    74 01             	[--sp] = {rets, r4}			  ## printf-stdarg.c:29:0
 1e0c094:    13 70             	r3 = 1			  ## printf-stdarg.c:29:0
 1e0c096:    0a 20             	if (r0 == 0) goto 20 <printchar+0x1A : 1e0c0ac >			  ## printf-stdarg.c:29:0
 1e0c098:    04 40             	r4 = [r0 + 0]			  ## printf-stdarg.c:29:0
 1e0c09a:    03 22             	if (r1 == 0) goto 6 <printchar+0x10 : 1e0c0a2 >			  ## printf-stdarg.c:29:0
 1e0c09c:    03 70             	r3 = 0			  ## printf-stdarg.c:29:0
 1e0c09e:    14 f2 05 20       	if (r4 >= r1) goto 10 <printchar+0x1A : 1e0c0ac >			  ## printf-stdarg.c:29:0
 1e0c0a2:    0a 68             	b[r4 + 0] = r2			  ## printf-stdarg.c:34:15
 1e0c0a4:    01 40             	r1 = [r0 + 0]			  ## printf-stdarg.c:35:9
 1e0c0a6:    11 80             	r1 += 1			  ## printf-stdarg.c:35:9
 1e0c0a8:    09 40             	[r0 + 0] = r1			  ## printf-stdarg.c:35:9
 1e0c0aa:    13 70             	r3 = 1			  ## printf-stdarg.c:35:9
 1e0c0ac:    30 08             	r0 = r3			  ## printf-stdarg.c:45:1
 1e0c0ae:    54 01             	{pc, r4} = [sp++]			  ## printf-stdarg.c:45:1


prints:
 1e0c0b0:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:57:0
 1e0c0b2:    34 08             	r4 = r3			  ## printf-stdarg.c:57:0
 1e0c0b4:    27 08             	r7 = r2			  ## printf-stdarg.c:57:0
 1e0c0b6:    19 08             	r9 = r1			  ## printf-stdarg.c:57:0
 1e0c0b8:    0a 08             	r10 = r0			  ## printf-stdarg.c:57:0
 1e0c0ba:    14 e0 24 b0       	ifs (r4 < 1) goto 72 <prints+0x56 : 1e0c106 >			  ## printf-stdarg.c:57:0
 1e0c0be:    71 08             	r1 = r7			  ## printf-stdarg.c:63:28
 1e0c0c0:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## printf-stdarg.c:63:28
 1e0c0c4:    05 70             	r5 = 0			  ## printf-stdarg.c:63:28
 1e0c0c6:    00 70             	r0 = 0			  ## printf-stdarg.c:63:28
 1e0c0c8:    04 24             	if (r2 == 0) goto 8 <prints+0x22 : 1e0c0d2 >			  ## printf-stdarg.c:63:28
 1e0c0ca:    02 fa 00 10       	r2 = b[r1+r0] (u)			  ## printf-stdarg.c:63:28
 1e0c0ce:    10 80             	r0 += 1			  ## printf-stdarg.c:64:13
 1e0c0d0:    fc 35             	if (r2 != 0) goto -8 <prints+0x1A : 1e0c0ca >
 1e0c0d2:    82 02             	r2 = [sp+32]
 1e0c0d4:    26 b8             	r6 = r4 - r0			  ## printf-stdarg.c:69:19
 1e0c0d6:    61 08             	r1 = r6			  ## printf-stdarg.c:66:13
 1e0c0d8:    40 f2 01 b0       	ifs (r0 < r4) goto 2 <prints+0x2E : 1e0c0de >			  ## printf-stdarg.c:66:13
 1e0c0dc:    01 70             	r1 = 0			  ## printf-stdarg.c:66:13
 1e0c0de:    d0 c0             	r0 = r2 << 3			  ## printf-stdarg.c:71:13
 1e0c0e0:    20 fd 10 09       	r0 = r0 & 16			  ## printf-stdarg.c:71:13
 1e0c0e4:    08 fd 20 09       	r8 = r0 | 32			  ## printf-stdarg.c:71:13
 1e0c0e8:    20 f3 10 20       	if ((r2 & 1) != 0) goto 32 <prints+0x5C : 1e0c10c >
 1e0c0ec:    11 e0 0e b0       	ifs (r1 < 1) goto 28 <prints+0x5C : 1e0c10c >
 1e0c0f0:    a0 08             	r0 = r10			  ## printf-stdarg.c:77:17
 1e0c0f2:    91 08             	r1 = r9			  ## printf-stdarg.c:77:17
 1e0c0f4:    82 08             	r2 = r8			  ## printf-stdarg.c:77:17
 1e0c0f6:    cd 17             	call -102 <printchar : 1e0c092 >			  ## printf-stdarg.c:77:17
 1e0c0f8:    04 20             	if (r0 == 0) goto 8 <prints+0x52 : 1e0c102 >			  ## printf-stdarg.c:77:17
 1e0c0fa:    f6 8f             	r6 += -1			  ## printf-stdarg.c:76:27
 1e0c0fc:    15 80             	r5 += 1			  ## printf-stdarg.c:80:13
 1e0c0fe:    06 e0 f7 cf       	ifs (r6 > 0) goto -18 <prints+0x40 : 1e0c0f0 >
 1e0c102:    64 08             	r4 = r6
 1e0c104:    04 18             	goto 8 <prints+0x5E : 1e0c10e >
 1e0c106:    05 70             	r5 = 0
 1e0c108:    08 72             	r8 = 32
 1e0c10a:    01 18             	goto 2 <prints+0x5E : 1e0c10e >
 1e0c10c:    14 08             	r4 = r1
 1e0c10e:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0c112:    09 20             	if (r0 == 0) goto 18 <prints+0x76 : 1e0c126 >
 1e0c114:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:84:33
 1e0c116:    a0 08             	r0 = r10			  ## printf-stdarg.c:84:13
 1e0c118:    91 08             	r1 = r9			  ## printf-stdarg.c:84:13
 1e0c11a:    bb 17             	call -138 <printchar : 1e0c092 >			  ## printf-stdarg.c:84:13
 1e0c11c:    04 20             	if (r0 == 0) goto 8 <prints+0x76 : 1e0c126 >			  ## printf-stdarg.c:84:13
 1e0c11e:    80 f9 01 70       	r0 = b[r7 ++= 1] (u)			  ## printf-stdarg.c:83:12
 1e0c122:    15 80             	r5 += 1			  ## printf-stdarg.c:87:9
 1e0c124:    f7 31             	if (r0 != 0) goto -18 <prints+0x64 : 1e0c114 >
 1e0c126:    14 e0 09 b0       	ifs (r4 < 1) goto 18 <prints+0x8C : 1e0c13c >
 1e0c12a:    a0 08             	r0 = r10			  ## printf-stdarg.c:90:13
 1e0c12c:    91 08             	r1 = r9			  ## printf-stdarg.c:90:13
 1e0c12e:    82 08             	r2 = r8			  ## printf-stdarg.c:90:13
 1e0c130:    b0 17             	call -160 <printchar : 1e0c092 >			  ## printf-stdarg.c:90:13
 1e0c132:    04 20             	if (r0 == 0) goto 8 <prints+0x8C : 1e0c13c >			  ## printf-stdarg.c:90:13
 1e0c134:    f4 8f             	r4 += -1			  ## printf-stdarg.c:89:23
 1e0c136:    15 80             	r5 += 1			  ## printf-stdarg.c:93:9
 1e0c138:    04 e0 f7 cf       	ifs (r4 > 0) goto -18 <prints+0x7A : 1e0c12a >
 1e0c13c:    50 08             	r0 = r5			  ## printf-stdarg.c:96:5
 1e0c13e:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:96:5


printi:
 1e0c140:    7a 01             	[--sp] = {rets, r10-r4}			  ## printf-stdarg.c:103:0
 1e0c142:    f8 0b             	sp += -16			  ## printf-stdarg.c:103:0
 1e0c144:    0a f5 38 00       	r10 = [sp+56]			  ## printf-stdarg.c:103:0
 1e0c148:    d4 02             	r4 = [sp+52]			  ## printf-stdarg.c:103:0
 1e0c14a:    18 08             	r8 = r1			  ## printf-stdarg.c:103:0
 1e0c14c:    09 08             	r9 = r0			  ## printf-stdarg.c:103:0
 1e0c14e:    37 24             	if (r2 == 0) goto 110 <printi+0x7E : 1e0c1be >			  ## printf-stdarg.c:103:0
 1e0c150:    c5 02             	r5 = [sp+48]			  ## printf-stdarg.c:103:0
 1e0c152:    00 70             	r0 = 0			  ## printf-stdarg.c:103:0
 1e0c154:    d0 f5 0f 00       	b[sp+15] = r0			  ## printf-stdarg.c:121:8
 1e0c158:    10 70             	r0 = 1			  ## printf-stdarg.c:121:8
 1e0c15a:    11 70             	r1 = 1			  ## printf-stdarg.c:115:9
 1e0c15c:    01 3a             	if (r5 != 0) goto 2 <printi+0x20 : 1e0c160 >			  ## printf-stdarg.c:115:9
 1e0c15e:    01 70             	r1 = 0			  ## printf-stdarg.c:115:9
 1e0c160:    a3 e0 01 00       	if (r3 == 10) goto 2 <printi+0x26 : 1e0c166 >
 1e0c164:    00 70             	r0 = 0			  ## printf-stdarg.c:115:17
 1e0c166:    50 b3             	r0 &= r1			  ## printf-stdarg.c:115:12
 1e0c168:    61 fb 00 29       	r1 = 0 - r2			  ## printf-stdarg.c:117:13
 1e0c16c:    d6 d7             	r6 = r2 >> 31			  ## printf-stdarg.c:115:28
 1e0c16e:    06 f1 01 00       	if ((r6 & r0) != 0) goto 2 <printi+0x34 : 1e0c174 >			  ## printf-stdarg.c:115:28
 1e0c172:    21 08             	r1 = r2
 1e0c174:    50 bd             	r0 &= r6			  ## printf-stdarg.c:115:12
 1e0c176:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:115:12
 1e0c178:    b7 94             	r7 = r2 + 11			  ## printf-stdarg.c:120:35
 1e0c17a:    13 22             	if (r1 == 0) goto 38 <printi+0x62 : 1e0c1a2 >
 1e0c17c:    f2 02             	r2 = [sp+60]
 1e0c17e:    25 fc c6 00       	r5 = r2 + 198
 1e0c182:    16 08             	r6 = r1
 1e0c184:    d0 fe 30 16       	r1 = r6 % r3 (u)			  ## printf-stdarg.c:124:15
 1e0c188:    52 08             	r2 = r5			  ## printf-stdarg.c:125:13
 1e0c18a:    91 e0 01 c0       	ifs (r1 > 9) goto 2 <printi+0x50 : 1e0c190 >
 1e0c18e:    02 70             	r2 = 0
 1e0c190:    21 09             	r1 += r2			  ## printf-stdarg.c:125:13
 1e0c192:    01 83             	r1 += 48			  ## printf-stdarg.c:128:18
 1e0c194:    11 f9 ff 7f       	b[r7 + -1] = r1			  ## printf-stdarg.c:128:14
 1e0c198:    c0 fe 30 16       	r1 = r6 / r3 (u)			  ## printf-stdarg.c:129:11
 1e0c19c:    f7 8f             	r7 += -1			  ## printf-stdarg.c:128:10
 1e0c19e:    36 f2 f0 2f       	if (r6 >= r3) goto -32 <printi+0x42 : 1e0c182 >
 1e0c1a2:    06 70             	r6 = 0
 1e0c1a4:    1d 20             	if (r0 == 0) goto 58 <printi+0xA0 : 1e0c1e0 >
 1e0c1a6:    18 28             	if (r4 == 0) goto 48 <printi+0x98 : 1e0c1d8 >
 1e0c1a8:    01 f3 16 a0       	if ((r10 & 2) == 0) goto 44 <printi+0x98 : 1e0c1d8 >
 1e0c1ac:    d2 72             	r2 = 45			  ## printf-stdarg.c:134:17
 1e0c1ae:    90 08             	r0 = r9			  ## printf-stdarg.c:134:17
 1e0c1b0:    81 08             	r1 = r8			  ## printf-stdarg.c:134:17
 1e0c1b2:    6f 17             	call -290 <printchar : 1e0c092 >			  ## printf-stdarg.c:134:17
 1e0c1b4:    16 70             	r6 = 1			  ## printf-stdarg.c:134:17
 1e0c1b6:    01 30             	if (r0 != 0) goto 2 <printi+0x7A : 1e0c1ba >
 1e0c1b8:    06 70             	r6 = 0			  ## printf-stdarg.c:134:17
 1e0c1ba:    a4 b9             	r4 = r4 - r6			  ## printf-stdarg.c:134:17
 1e0c1bc:    11 18             	goto 34 <printi+0xA0 : 1e0c1e0 >
 1e0c1be:    00 73             	r0 = 48			  ## printf-stdarg.c:110:22
 1e0c1c0:    d0 f5 04 00       	b[sp+4] = r0			  ## printf-stdarg.c:110:22
 1e0c1c4:    00 70             	r0 = 0			  ## printf-stdarg.c:110:22
 1e0c1c6:    d0 f5 05 00       	b[sp+5] = r0			  ## printf-stdarg.c:111:22
 1e0c1ca:    42 a0             	r2 = sp + 4			  ## printf-stdarg.c:111:22
 1e0c1cc:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:112:16
 1e0c1d0:    90 08             	r0 = r9			  ## printf-stdarg.c:112:16
 1e0c1d2:    43 08             	r3 = r4			  ## printf-stdarg.c:112:16
 1e0c1d4:    6d 17             	call -294 <prints : 1e0c0b0 >			  ## printf-stdarg.c:112:16
 1e0c1d6:    0c 18             	goto 24 <printi+0xB0 : 1e0c1f0 >			  ## printf-stdarg.c:112:16
 1e0c1d8:    d0 72             	r0 = 45			  ## printf-stdarg.c:139:18
 1e0c1da:    10 f9 ff 7f       	b[r7 + -1] = r0			  ## printf-stdarg.c:139:18
 1e0c1de:    f7 8f             	r7 += -1			  ## printf-stdarg.c:139:14
 1e0c1e0:    1a f5 00 00       	[sp] = r10			  ## printf-stdarg.c:143:17
 1e0c1e4:    90 08             	r0 = r9			  ## printf-stdarg.c:143:17
 1e0c1e6:    81 08             	r1 = r8			  ## printf-stdarg.c:143:17
 1e0c1e8:    72 08             	r2 = r7			  ## printf-stdarg.c:143:17
 1e0c1ea:    43 08             	r3 = r4			  ## printf-stdarg.c:143:17
 1e0c1ec:    61 17             	call -318 <prints : 1e0c0b0 >			  ## printf-stdarg.c:143:17
 1e0c1ee:    60 09             	r0 += r6			  ## printf-stdarg.c:143:15
 1e0c1f0:    08 0a             	sp += 16
 1e0c1f2:    5a 01             	{pc, r10-r4} = [sp++]			  ## printf-stdarg.c:144:1


print:
 1e0c1f4:    7d 01             	[--sp] = {rets, r13-r4}			  ## printf-stdarg.c:147:0
 1e0c1f6:    f2 0b             	sp += -28			  ## printf-stdarg.c:147:0
 1e0c1f8:    1d 08             	r13 = r1			  ## printf-stdarg.c:147:0
 1e0c1fa:    04 08             	r4 = r0			  ## printf-stdarg.c:147:0
 1e0c1fc:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:147:0
 1e0c1fe:    5b 02             	[sp+20] = r3			  ## printf-stdarg.c:147:0
 1e0c200:    08 70             	r8 = 0			  ## printf-stdarg.c:147:0
 1e0c202:    19 74             	r9 = 65			  ## printf-stdarg.c:147:0
 1e0c204:    1a 76             	r10 = 97			  ## printf-stdarg.c:147:0
 1e0c206:    1b 70             	r11 = 1			  ## printf-stdarg.c:147:0
 1e0c208:    cc ff df df e0 01 	r12 = 31514591 <update_target_end+0xFF : 1e0dfdf >			  ## printf-stdarg.c:147:0
 1e0c20e:    06 70             	r6 = 0			  ## printf-stdarg.c:147:0
 1e0c210:    07 19             	goto 526 <.GJTIE207_0_0_+0x154 : 1e0c420 >			  ## printf-stdarg.c:147:0
 1e0c212:    11 94             	r1 = r2 + 1			  ## printf-stdarg.c:154:13
 1e0c214:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:154:13
 1e0c216:    13 64             	r3 = b[r2 + 1] (u)			  ## printf-stdarg.c:156:17
 1e0c218:    53 e2 06 00       	if (r3 == 37) goto 12 <print+0x34 : 1e0c228 >
 1e0c21c:    d3 e2 0b 00       	if (r3 == 45) goto 22 <print+0x42 : 1e0c236 >
 1e0c220:    03 e0 02 01       	if (r3 == 0) goto 516 <.GJTIE207_0_0_+0x15C : 1e0c428 >
 1e0c224:    05 70             	r5 = 0
 1e0c226:    0b 18             	goto 22 <print+0x4A : 1e0c23e >
 1e0c228:    50 72             	r0 = 37
 1e0c22a:    12 04             	r2 = r0.b0 (s)			  ## printf-stdarg.c:276:39
 1e0c22c:    40 08             	r0 = r4			  ## printf-stdarg.c:276:19
 1e0c22e:    d1 08             	r1 = r13			  ## printf-stdarg.c:276:19
 1e0c230:    30 17             	call -416 <printchar : 1e0c092 >			  ## printf-stdarg.c:276:19
 1e0c232:    06 09             	r6 += r0
 1e0c234:    4b 18             	goto 150 <.GJTIE207_0_0_ : 1e0c2cc >
 1e0c236:    21 94             	r1 = r2 + 2			  ## printf-stdarg.c:163:17
 1e0c238:    69 02             	[sp+24] = r1			  ## printf-stdarg.c:163:17
 1e0c23a:    23 64             	r3 = b[r2 + 2] (u)
 1e0c23c:    15 70             	r5 = 1
 1e0c23e:    03 e3 09 10       	if (r3 != 48) goto 18 <print+0x60 : 1e0c254 >
 1e0c242:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:167:17
 1e0c244:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:167:17
 1e0c246:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## printf-stdarg.c:166:20
 1e0c24a:    95 b0             	r5 |= 2			  ## printf-stdarg.c:168:21
 1e0c24c:    03 e3 fa 0f       	if (r3 == 48) goto -12 <print+0x50 : 1e0c244 >			  ## printf-stdarg.c:166:13
 1e0c250:    01 fc ff ff       	r1 = r0 + -1			  ## printf-stdarg.c:148:18
 1e0c254:    30 fc d0 ff       	r0 = r3 + -48			  ## printf-stdarg.c:172:17
 1e0c258:    00 04             	r0 = r0.b0 (u)			  ## printf-stdarg.c:172:17
 1e0c25a:    f7 07             	r7 = -1			  ## printf-stdarg.c:172:17
 1e0c25c:    90 e0 05 80       	if (r0 > 9) goto 10 <print+0x76 : 1e0c26a >			  ## printf-stdarg.c:172:17
 1e0c260:    80 a1             	r0 = sp + 24
 1e0c262:    fd 16             	call -518 <skip_atoi : 1e0c05e >			  ## printf-stdarg.c:173:25
 1e0c264:    61 02             	r1 = [sp+24]
 1e0c266:    03 62             	r3 = b[r1 + 0] (u)
 1e0c268:    07 08             	r7 = r0			  ## printf-stdarg.c:173:25
 1e0c26a:    e3 e2 0c 10       	if (r3 != 46) goto 24 <print+0x92 : 1e0c286 >
 1e0c26e:    10 92             	r0 = r1 + 1			  ## printf-stdarg.c:178:17
 1e0c270:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:178:17
 1e0c272:    12 62             	r2 = b[r1 + 1] (u)			  ## printf-stdarg.c:179:21
 1e0c274:    23 fc d0 ff       	r3 = r2 + -48			  ## printf-stdarg.c:179:21
 1e0c278:    c3 04             	r3 = r3.b0 (u)			  ## printf-stdarg.c:179:21
 1e0c27a:    93 e0 32 80       	if (r3 > 9) goto 100 <.GJTIE207_0_0_+0x16 : 1e0c2e2 >			  ## printf-stdarg.c:179:21
 1e0c27e:    80 a1             	r0 = sp + 24
 1e0c280:    ee 16             	call -548 <skip_atoi : 1e0c05e >			  ## printf-stdarg.c:180:33
 1e0c282:    60 02             	r0 = [sp+24]
 1e0c284:    01 18             	goto 2 <print+0x94 : 1e0c288 >
 1e0c286:    10 08             	r0 = r1			  ## printf-stdarg.c:250:18
 1e0c288:    01 60             	r1 = b[r0 + 0] (u)
 1e0c28a:    31 e6 15 c0       	ifs (r1 > 99) goto 42 <print+0xC4 : 1e0c2b8 >			  ## printf-stdarg.c:193:17
 1e0c28e:    c1 e4 30 00       	if (r1 == 76) goto 96 <.GJTIE207_0_0_+0x26 : 1e0c2f2 >
 1e0c292:    81 e5 43 00       	if (r1 == 88) goto 134 <.GJTIE207_0_0_+0x50 : 1e0c31c >
 1e0c296:    31 e6 19 10       	if (r1 != 99) goto 50 <.GJTIE207_0_0_ : 1e0c2cc >
 1e0c29a:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:252:32
 1e0c29c:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:252:32
 1e0c29e:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:252:32
 1e0c2a0:    00 40             	r0 = [r0 + 0]			  ## printf-stdarg.c:252:32
 1e0c2a2:    d0 f5 12 00       	b[sp+18] = r0			  ## printf-stdarg.c:252:24
 1e0c2a6:    d8 f5 13 00       	b[sp+19] = r8			  ## printf-stdarg.c:253:24
 1e0c2aa:    22 a1             	r2 = sp + 18			  ## printf-stdarg.c:253:24
 1e0c2ac:    0d 02             	[sp] = r5			  ## printf-stdarg.c:254:23
 1e0c2ae:    40 08             	r0 = r4
 1e0c2b0:    d1 08             	r1 = r13
 1e0c2b2:    73 08             	r3 = r7
 1e0c2b4:    fd 16             	call -518 <prints : 1e0c0b0 >
 1e0c2b6:    bd 1f             	goto -134 <print+0x3E : 1e0c232 >
 1e0c2b8:    12 fc 90 ff       	r2 = r1 + -112
 1e0c2bc:    82 e0 3d 80       	if (r2 > 8) goto 122 <.GJTIE207_0_0_+0x6E : 1e0c33a >
 1e0c2c0:    a2 00             	tbb [r2]


.GJTIS207_0_0_:
 1e0c2c2:    09     < 9 : 0x9 >
 1e0c2c3:    05     < 5 : 0x5 >
 1e0c2c4:    05     < 5 : 0x5 >
 1e0c2c5:    59     < 89 : 0x59 >
 1e0c2c6:    05     < 5 : 0x5 >
 1e0c2c7:    61     < 97 : 0x61 >
 1e0c2c8:    05     < 5 : 0x5 >
 1e0c2c9:    05     < 5 : 0x5 >
 1e0c2ca:    09     < 9 : 0x9 >
 1e0c2cb:    00     < 0 : 0x0 >
 1e0c2cc:    60 02             	r0 = [sp+24]			  ## printf-stdarg.c:152:26
 1e0c2ce:    12 90             	r2 = r0 + 1			  ## printf-stdarg.c:152:26
 1e0c2d0:    6a 02             	[sp+24] = r2			  ## printf-stdarg.c:152:26
 1e0c2d2:    a6 18             	goto 332 <.GJTIE207_0_0_+0x154 : 1e0c420 >			  ## printf-stdarg.c:152:26
 1e0c2d4:    50 02             	r0 = [sp+20]
 1e0c2d6:    41 90             	r1 = r0 + 4
 1e0c2d8:    59 02             	[sp+20] = r1
 1e0c2da:    02 40             	r2 = [r0 + 0]
 1e0c2dc:    1a f5 0c 00       	[sp+12] = r10
 1e0c2e0:    23 18             	goto 70 <.GJTIE207_0_0_+0x5C : 1e0c328 >
 1e0c2e2:    a2 e2 d1 1f       	if (r2 != 42) goto -94 <print+0x94 : 1e0c288 >
 1e0c2e6:    52 02             	r2 = [sp+20]			  ## printf-stdarg.c:183:33
 1e0c2e8:    20 92             	r0 = r1 + 2			  ## printf-stdarg.c:182:21
 1e0c2ea:    68 02             	[sp+24] = r0			  ## printf-stdarg.c:182:21
 1e0c2ec:    41 94             	r1 = r2 + 4			  ## printf-stdarg.c:183:33
 1e0c2ee:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:183:33
 1e0c2f0:    cb 1f             	goto -106 <print+0x94 : 1e0c288 >			  ## printf-stdarg.c:183:33
 1e0c2f2:    10 60             	r0 = b[r0 + 1] (u)			  ## printf-stdarg.c:230:39
 1e0c2f4:    80 e5 ea 1f       	if (r0 != 88) goto -44 <.GJTIE207_0_0_ : 1e0c2cc >
 1e0c2f8:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:231:40
 1e0c2fa:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:231:40
 1e0c2fc:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:231:40
 1e0c2fe:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:231:40
 1e0c300:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:231:23
 1e0c304:    2d 02             	[sp+8] = r5
 1e0c306:    1f 02             	[sp+4] = r7
 1e0c308:    03 71             	r3 = 16
 1e0c30a:    18 f5 00 00       	[sp] = r8
 1e0c30e:    40 08             	r0 = r4
 1e0c310:    d1 08             	r1 = r13
 1e0c312:    16 17             	call -468 <printi : 1e0c140 >
 1e0c314:    61 02             	r1 = [sp+24]
 1e0c316:    11 80             	r1 += 1
 1e0c318:    69 02             	[sp+24] = r1
 1e0c31a:    8b 1f             	goto -234 <print+0x3E : 1e0c232 >
 1e0c31c:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:227:40
 1e0c31e:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:227:40
 1e0c320:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:227:40
 1e0c322:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:227:40
 1e0c324:    19 f5 0c 00       	[sp+12] = r9			  ## printf-stdarg.c:227:23
 1e0c328:    2d 02             	[sp+8] = r5
 1e0c32a:    1f 02             	[sp+4] = r7
 1e0c32c:    03 71             	r3 = 16
 1e0c32e:    18 f5 00 00       	[sp] = r8
 1e0c332:    40 08             	r0 = r4
 1e0c334:    d1 08             	r1 = r13
 1e0c336:    04 17             	call -504 <printi : 1e0c140 >
 1e0c338:    7c 1f             	goto -264 <print+0x3E : 1e0c232 >
 1e0c33a:    41 e6 2d 00       	if (r1 == 100) goto 90 <.GJTIE207_0_0_+0xCC : 1e0c398 >
 1e0c33e:    c1 e6 c5 1f       	if (r1 != 108) goto -118 <.GJTIE207_0_0_ : 1e0c2cc >
 1e0c342:    11 60             	r1 = b[r0 + 1] (u)
 1e0c344:    41 e7 34 c0       	ifs (r1 > 116) goto 104 <.GJTIE207_0_0_+0xE4 : 1e0c3b0 >
 1e0c348:    41 e6 3d 00       	if (r1 == 100) goto 122 <.GJTIE207_0_0_+0xFA : 1e0c3c6 >
 1e0c34c:    c1 e6 be 1f       	if (r1 != 108) goto -132 <.GJTIE207_0_0_ : 1e0c2cc >
 1e0c350:    21 60             	r1 = b[r0 + 2] (u)			  ## printf-stdarg.c:207:67
 1e0c352:    41 e6 4e 10       	if (r1 != 100) goto 156 <.GJTIE207_0_0_+0x126 : 1e0c3f2 >			  ## printf-stdarg.c:207:67
 1e0c356:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0c358:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:208:40
 1e0c35a:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:208:40
 1e0c35c:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:208:40
 1e0c35e:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:208:40
 1e0c360:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:208:40
 1e0c362:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:208:40
 1e0c364:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:208:23
 1e0c368:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:208:23
 1e0c36a:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:208:23
 1e0c36c:    a3 70             	r3 = 10			  ## printf-stdarg.c:208:23
 1e0c36e:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:208:23
 1e0c372:    50 18             	goto 160 <.GJTIE207_0_0_+0x148 : 1e0c414 >			  ## printf-stdarg.c:208:23
 1e0c374:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:194:44
 1e0c376:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:194:44
 1e0c378:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:194:44
 1e0c37a:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:194:44
 1e0c37c:    0d 02             	[sp] = r5			  ## printf-stdarg.c:195:23
 1e0c37e:    97 35             	if (r2 != 0) goto -210 <print+0xBA : 1e0c2ae >			  ## printf-stdarg.c:195:23
 1e0c380:    c2 08             	r2 = r12			  ## printf-stdarg.c:195:40
 1e0c382:    95 1f             	goto -214 <print+0xBA : 1e0c2ae >
 1e0c384:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:236:40
 1e0c386:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:236:40
 1e0c388:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:236:40
 1e0c38a:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:236:40
 1e0c38c:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:236:23
 1e0c390:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:236:23
 1e0c392:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:236:23
 1e0c394:    a3 70             	r3 = 10			  ## printf-stdarg.c:236:23
 1e0c396:    cb 1f             	goto -106 <.GJTIE207_0_0_+0x62 : 1e0c32e >			  ## printf-stdarg.c:236:23
 1e0c398:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:199:40
 1e0c39a:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:199:40
 1e0c39c:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:199:40
 1e0c39e:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:199:40
 1e0c3a0:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:199:23
 1e0c3a4:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:199:23
 1e0c3a6:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:199:23
 1e0c3a8:    a3 70             	r3 = 10			  ## printf-stdarg.c:199:23
 1e0c3aa:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:199:23
 1e0c3ae:    c1 1f             	goto -126 <.GJTIE207_0_0_+0x66 : 1e0c332 >			  ## printf-stdarg.c:199:23
 1e0c3b0:    51 e7 15 00       	if (r1 == 117) goto 42 <.GJTIE207_0_0_+0x112 : 1e0c3de >
 1e0c3b4:    81 e7 8a 1f       	if (r1 != 120) goto -236 <.GJTIE207_0_0_ : 1e0c2cc >
 1e0c3b8:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:222:40
 1e0c3ba:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:222:40
 1e0c3bc:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:222:40
 1e0c3be:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:222:40
 1e0c3c0:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:222:23
 1e0c3c4:    9f 1f             	goto -194 <.GJTIE207_0_0_+0x38 : 1e0c304 >			  ## printf-stdarg.c:222:23
 1e0c3c6:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:203:40
 1e0c3c8:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:203:40
 1e0c3ca:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:203:40
 1e0c3cc:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:203:40
 1e0c3ce:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:203:23
 1e0c3d2:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:203:23
 1e0c3d4:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:203:23
 1e0c3d6:    a3 70             	r3 = 10			  ## printf-stdarg.c:203:23
 1e0c3d8:    1b f5 00 00       	[sp] = r11			  ## printf-stdarg.c:203:23
 1e0c3dc:    98 1f             	goto -208 <.GJTIE207_0_0_+0x42 : 1e0c30e >			  ## printf-stdarg.c:203:23
 1e0c3de:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:240:40
 1e0c3e0:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:240:40
 1e0c3e2:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:240:40
 1e0c3e4:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:240:40
 1e0c3e6:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:240:23
 1e0c3ea:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:240:23
 1e0c3ec:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:240:23
 1e0c3ee:    a3 70             	r3 = 10			  ## printf-stdarg.c:240:23
 1e0c3f0:    8c 1f             	goto -232 <.GJTIE207_0_0_+0x3E : 1e0c30a >			  ## printf-stdarg.c:240:23
 1e0c3f2:    20 60             	r0 = b[r0 + 2] (u)			  ## printf-stdarg.c:244:67
 1e0c3f4:    50 e7 6a 1f       	if (r0 != 117) goto -300 <.GJTIE207_0_0_ : 1e0c2cc >
 1e0c3f8:    50 02             	r0 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0c3fa:    41 90             	r1 = r0 + 4			  ## printf-stdarg.c:245:40
 1e0c3fc:    59 02             	[sp+20] = r1			  ## printf-stdarg.c:245:40
 1e0c3fe:    51 02             	r1 = [sp+20]			  ## printf-stdarg.c:245:40
 1e0c400:    02 40             	r2 = [r0 + 0]			  ## printf-stdarg.c:245:40
 1e0c402:    40 92             	r0 = r1 + 4			  ## printf-stdarg.c:245:40
 1e0c404:    58 02             	[sp+20] = r0			  ## printf-stdarg.c:245:40
 1e0c406:    1a f5 0c 00       	[sp+12] = r10			  ## printf-stdarg.c:245:23
 1e0c40a:    2d 02             	[sp+8] = r5			  ## printf-stdarg.c:245:23
 1e0c40c:    1f 02             	[sp+4] = r7			  ## printf-stdarg.c:245:23
 1e0c40e:    a3 70             	r3 = 10			  ## printf-stdarg.c:245:23
 1e0c410:    18 f5 00 00       	[sp] = r8			  ## printf-stdarg.c:245:23
 1e0c414:    40 08             	r0 = r4
 1e0c416:    d1 08             	r1 = r13
 1e0c418:    93 16             	call -730 <printi : 1e0c140 >
 1e0c41a:    61 02             	r1 = [sp+24]
 1e0c41c:    21 80             	r1 += 2
 1e0c41e:    7c 1f             	goto -264 <.GJTIE207_0_0_+0x4C : 1e0c318 >
 1e0c420:    00 64             	r0 = b[r2 + 0] (u)			  ## printf-stdarg.c:152:12
 1e0c422:    50 e2 f6 0e       	if (r0 == 37) goto -532 <print+0x1E : 1e0c212 >			  ## printf-stdarg.c:152:5
 1e0c426:    01 31             	if (r0 != 0) goto -510 <print+0x36 : 1e0c22a >
 1e0c428:    03 28             	if (r4 == 0) goto 6 <.GJTIE207_0_0_+0x164 : 1e0c430 >
 1e0c42a:    00 48             	r0 = [r4 + 0]			  ## printf-stdarg.c:280:10
 1e0c42c:    01 70             	r1 = 0			  ## printf-stdarg.c:280:15
 1e0c42e:    09 60             	b[r0 + 0] = r1			  ## printf-stdarg.c:280:15
 1e0c430:    60 08             	r0 = r6			  ## printf-stdarg.c:283:5
 1e0c432:    0e 0a             	sp += 28			  ## printf-stdarg.c:283:5
 1e0c434:    5d 01             	{pc, r13-r4} = [sp++]			  ## printf-stdarg.c:283:5


sprintf:
 1e0c436:    62 01             	[--sp] = {r3, r2}			  ## printf-stdarg.c:405:0
 1e0c438:    34 00             	[--sp] = rets			  ## printf-stdarg.c:405:0
 1e0c43a:    fc 0b             	sp += -8			  ## printf-stdarg.c:405:0
 1e0c43c:    18 02             	[sp+4] = r0			  ## printf-stdarg.c:405:0
 1e0c43e:    c3 a0             	r3 = sp + 12			  ## printf-stdarg.c:405:0
 1e0c440:    0b 02             	[sp] = r3			  ## printf-stdarg.c:408:5
 1e0c442:    40 a0             	r0 = sp + 4			  ## printf-stdarg.c:408:5
 1e0c444:    c2 ff 33 df e0 01 	r2 = 31514419 <update_target_end+0x53 : 1e0df33 >			  ## printf-stdarg.c:410:12
 1e0c44a:    01 70             	r1 = 0			  ## printf-stdarg.c:410:12
 1e0c44c:    d3 16             	call -602 <print : 1e0c1f4 >			  ## printf-stdarg.c:410:12
 1e0c44e:    04 0a             	sp += 8
 1e0c450:    88 01             	{rets} = [sp++]
 1e0c452:    04 0a             	sp += 8
 1e0c454:    20 00             	rts


snprintf:
 1e0c456:    63 01             	[--sp] = {r3}			  ## printf-stdarg.c:389:0
 1e0c458:    34 00             	[--sp] = rets			  ## printf-stdarg.c:389:0
 1e0c45a:    fc 0b             	sp += -8			  ## printf-stdarg.c:389:0
 1e0c45c:    c3 a0             	r3 = sp + 12			  ## printf-stdarg.c:389:0
 1e0c45e:    0b 02             	[sp] = r3			  ## printf-stdarg.c:392:5
 1e0c460:    18 02             	[sp+4] = r0
 1e0c462:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0c464:    40 a0             	r0 = sp + 4
 1e0c466:    c6 16             	call -628 <print : 1e0c1f4 >			  ## printf-stdarg.c:399:12
 1e0c468:    04 0a             	sp += 8
 1e0c46a:    88 01             	{rets} = [sp++]			  ## printf-stdarg.c:394:5
 1e0c46c:    02 0a             	sp += 4			  ## printf-stdarg.c:394:5
 1e0c46e:    20 00             	rts			  ## printf-stdarg.c:394:5


vsnprintf:
 1e0c470:    34 00             	[--sp] = rets			  ## printf-stdarg.c:398:0
 1e0c472:    fe 0b             	sp += -4			  ## printf-stdarg.c:398:0
 1e0c474:    08 02             	[sp] = r0			  ## printf-stdarg.c:398:0
 1e0c476:    01 09             	r1 += r0			  ## printf-stdarg.c:399:28
 1e0c478:    00 a0             	r0 = sp + 0
 1e0c47a:    bc 16             	call -648 <print : 1e0c1f4 >			  ## printf-stdarg.c:399:12
 1e0c47c:    02 0a             	sp += 4
 1e0c47e:    30 00             	pc = [sp++]			  ## printf-stdarg.c:399:5


vprintf:
 1e0c480:    34 00             	[--sp] = rets			  ## printf-stdarg.c:414:0
 1e0c482:    13 08             	r3 = r1			  ## printf-stdarg.c:414:0
 1e0c484:    02 08             	r2 = r0			  ## printf-stdarg.c:414:0
 1e0c486:    00 70             	r0 = 0			  ## printf-stdarg.c:417:12
 1e0c488:    01 70             	r1 = 0			  ## printf-stdarg.c:417:12
 1e0c48a:    b4 16             	call -664 <print : 1e0c1f4 >			  ## printf-stdarg.c:417:12
 1e0c48c:    30 00             	pc = [sp++]			  ## printf-stdarg.c:419:5


perror:
 1e0c48e:    00 70             	r0 = 0			  ## printf-stdarg.c:423:0
 1e0c490:    20 00             	rts			  ## printf-stdarg.c:424:5


app_core_event_handler:
 1e0c492:    34 00             	[--sp] = rets			  ## app_core.c:73:0
 1e0c494:    c3 ff 60 08 00 00 	r3 = 2144 <head : 860 >			  ## list.h:124:18
 1e0c49a:    02 46             	r2 = [r3 + 0]			  ## list.h:124:18
 1e0c49c:    01 08             	r1 = r0			  ## list.h:124:18
 1e0c49e:    32 f2 06 00       	if (r2 == r3) goto 12 <app_core_event_handler+0x1C : 1e0c4ae >
 1e0c4a2:    30 44             	r0 = [r2 + 12]			  ## app_core.c:80:18
 1e0c4a4:    13 40             	r3 = [r0 + 4]			  ## app_core.c:80:23
 1e0c4a6:    03 26             	if (r3 == 0) goto 6 <app_core_event_handler+0x1C : 1e0c4ae >			  ## app_core.c:80:23
 1e0c4a8:    20 fc f0 ff       	r0 = r2 + -16			  ## app_core.c:79:15
 1e0c4ac:    83 00             	call r3			  ## app_core.c:81:17
 1e0c4ae:    30 00             	pc = [sp++]			  ## app_core.c:88:1


__start_app:
 1e0c4b0:    7d 01             	[--sp] = {rets, r13-r4}			  ## app_core.c:195:0
 1e0c4b2:    09 08             	r9 = r0			  ## app_core.c:195:0
 1e0c4b4:    c8 ff e8 1d 00 00 	r8 = 7656 <mutex.1521 : 1de8 >			  ## app_core.c:195:0
 1e0c4ba:    01 70             	r1 = 0			  ## app_core.c:199:5
 1e0c4bc:    0d 70             	r13 = 0			  ## app_core.c:199:5
 1e0c4be:    80 08             	r0 = r8			  ## app_core.c:199:5
 1e0c4c0:    97 f3 b0 d4       	call 3123552 <os_mutex_pend : 106e24 >			  ## app_core.c:199:5
 1e0c4c4:    ca ff 60 08 00 00 	r10 = 2144 <head : 860 >			  ## app_core.c:199:5
 1e0c4ca:    01 f6 00 a0       	r1 = [r10 + 0]			  ## list.h:124:18
 1e0c4ce:    10 fc f0 ff       	r0 = r1 + -16			  ## app_core.c:202:15
 1e0c4d2:    a1 f2 01 00       	if (r1 == r10) goto 2 <__start_app+0x28 : 1e0c4d8 >
 1e0c4d6:    0d 08             	r13 = r0			  ## app_core.c:201:9
 1e0c4d8:    04 f6 04 90       	r4 = [r9 + 4]			  ## app_core.c:213:17
 1e0c4dc:    c0 ff 01 2c 1b 0a 	r0 = 169552897 <uECC_vli_cmp_unsafe+0xABC05 : 1b2c01 >			  ## app_core.c:213:5
 1e0c4e2:    04 f2 37 00       	if (r4 == r0) goto 110 <__start_app+0xA4 : 1e0c554 >			  ## app_core.c:213:5
 1e0c4e6:    0b fc ff ff       	r11 = r0 + -1
 1e0c4ea:    b4 f2 3f 10       	if (r4 != r11) goto 126 <__start_app+0xBC : 1e0c56c >
 1e0c4ee:    0d e0 57 00       	if (r13 == 0) goto 174 <__start_app+0xF0 : 1e0c5a0 >
 1e0c4f2:    00 f6 10 d0       	r0 = [r13 + 16]			  ## list.h:171:36
 1e0c4f6:    01 f6 14 d0       	r1 = [r13 + 20]			  ## list.h:171:23
 1e0c4fa:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0c4fc:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0c4fe:    d0 fc 10 00       	r0 = r13 + 16			  ## app_core.c:220:24
 1e0c502:    10 f6 10 d0       	[r13 + 16] = r0			  ## list.h:172:17
 1e0c506:    10 f6 14 d0       	[r13 + 20] = r0			  ## list.h:173:17
 1e0c50a:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:221:14
 1e0c50e:    03 40             	r3 = [r0 + 0]			  ## app_core.c:221:19
 1e0c510:    41 70             	r1 = 4			  ## app_core.c:221:9
 1e0c512:    02 70             	r2 = 0			  ## app_core.c:221:9
 1e0c514:    0c 70             	r12 = 0			  ## app_core.c:221:9
 1e0c516:    d0 08             	r0 = r13			  ## app_core.c:221:9
 1e0c518:    83 00             	call r3			  ## app_core.c:221:9
 1e0c51a:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:222:14
 1e0c51e:    03 40             	r3 = [r0 + 0]			  ## app_core.c:222:19
 1e0c520:    51 70             	r1 = 5			  ## app_core.c:222:9
 1e0c522:    02 70             	r2 = 0			  ## app_core.c:222:9
 1e0c524:    54 70             	r4 = 5			  ## app_core.c:222:9
 1e0c526:    d0 08             	r0 = r13			  ## app_core.c:222:9
 1e0c528:    83 00             	call r3			  ## app_core.c:222:9
 1e0c52a:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:223:20
 1e0c52e:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:124:18
 1e0c532:    a0 f2 85 00       	if (r0 == r10) goto 266 <__start_app+0x190 : 1e0c640 >			  ## list.h:124:18
 1e0c536:    07 fc f0 ff       	r7 = r0 + -16			  ## app_core.c:228:15
 1e0c53a:    00 6e             	r0 = b[r7 + 0] (u)			  ## app_core.c:259:18
 1e0c53c:    20 e0 43 00       	if (r0 == 2) goto 134 <__start_app+0x116 : 1e0c5c6 >			  ## app_core.c:259:5
 1e0c540:    50 e0 4c 10       	if (r0 != 5) goto 152 <__start_app+0x12C : 1e0c5dc >
 1e0c544:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:261:20
 1e0c546:    03 40             	r3 = [r0 + 0]			  ## app_core.c:261:25
 1e0c548:    01 70             	r1 = 0			  ## app_core.c:261:15
 1e0c54a:    02 70             	r2 = 0			  ## app_core.c:261:15
 1e0c54c:    70 08             	r0 = r7			  ## app_core.c:261:15
 1e0c54e:    83 00             	call r3			  ## app_core.c:261:15
 1e0c550:    0c 08             	r12 = r0			  ## app_core.c:261:15
 1e0c552:    42 18             	goto 132 <__start_app+0x128 : 1e0c5d8 >
 1e0c554:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:231:14
 1e0c558:    03 40             	r3 = [r0 + 0]			  ## app_core.c:231:19
 1e0c55a:    44 70             	r4 = 4			  ## app_core.c:231:19
 1e0c55c:    41 70             	r1 = 4			  ## app_core.c:231:9
 1e0c55e:    02 70             	r2 = 0			  ## app_core.c:231:9
 1e0c560:    0c 70             	r12 = 0			  ## app_core.c:231:9
 1e0c562:    d0 08             	r0 = r13			  ## app_core.c:231:9
 1e0c564:    83 00             	call r3			  ## app_core.c:231:9
 1e0c566:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:232:20
 1e0c56a:    6a 18             	goto 212 <__start_app+0x190 : 1e0c640 >			  ## app_core.c:232:20
 1e0c56c:    c5 ff b8 09 00 00 	r5 = 2488 <system_data_end : 9b8 >
 1e0c572:    c7 ff 98 09 00 00 	r7 = 2456 <system_data_start : 998 >
 1e0c578:    ac 06             	r12 = -22
 1e0c57a:    57 f2 61 20       	if (r7 >= r5) goto 194 <__start_app+0x190 : 1e0c640 >
 1e0c57e:    06 f6 00 90       	r6 = [r9 + 0]
 1e0c582:    06 2c             	if (r6 == 0) goto 12 <__start_app+0xE0 : 1e0c590 >			  ## app_core.c:178:13
 1e0c584:    30 4e             	r0 = [r7 + 12]			  ## app_core.c:179:28
 1e0c586:    61 08             	r1 = r6			  ## app_core.c:179:18
 1e0c588:    97 f3 b4 d4       	call 3123560 <strcmp : 106ef4 >			  ## app_core.c:179:18
 1e0c58c:    05 30             	if (r0 != 0) goto 10 <__start_app+0xE8 : 1e0c598 >			  ## app_core.c:179:18
 1e0c58e:    0a 18             	goto 20 <__start_app+0xF4 : 1e0c5a4 >			  ## app_core.c:179:18
 1e0c590:    10 4e             	r0 = [r7 + 4]			  ## app_core.c:183:20
 1e0c592:    50 b9             	r0 &= r4			  ## app_core.c:183:27
 1e0c594:    00 d3             	r0 = r0 >> 12			  ## app_core.c:183:17
 1e0c596:    06 30             	if (r0 != 0) goto 12 <__start_app+0xF4 : 1e0c5a4 >			  ## app_core.c:183:17
 1e0c598:    07 82             	r7 += 32			  ## app_core.c:177:5
 1e0c59a:    57 f2 f2 3f       	if (r7 < r5) goto -28 <__start_app+0xD2 : 1e0c582 >
 1e0c59e:    50 18             	goto 160 <__start_app+0x190 : 1e0c640 >
 1e0c5a0:    ac 06             	r12 = -22
 1e0c5a2:    4e 18             	goto 156 <__start_app+0x190 : 1e0c640 >
 1e0c5a4:    7d f2 44 00       	if (r13 == r7) goto 136 <__start_app+0x180 : 1e0c630 >
 1e0c5a8:    0d e0 c7 0f       	if (r13 == 0) goto -114 <__start_app+0x8A : 1e0c53a >
 1e0c5ac:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:247:24
 1e0c5b0:    03 40             	r3 = [r0 + 0]			  ## app_core.c:247:29
 1e0c5b2:    21 70             	r1 = 2			  ## app_core.c:247:19
 1e0c5b4:    24 70             	r4 = 2			  ## app_core.c:247:19
 1e0c5b6:    d0 08             	r0 = r13			  ## app_core.c:247:19
 1e0c5b8:    92 08             	r2 = r9			  ## app_core.c:247:19
 1e0c5ba:    83 00             	call r3			  ## app_core.c:247:19
 1e0c5bc:    0c 08             	r12 = r0			  ## app_core.c:247:19
 1e0c5be:    40 30             	if (r0 != 0) goto 128 <__start_app+0x190 : 1e0c640 >
 1e0c5c0:    14 f9 00 d0       	b[r13 + 0] = r4			  ## app_core.c:252:24
 1e0c5c4:    ba 1f             	goto -140 <__start_app+0x8A : 1e0c53a >			  ## app_core.c:252:24
 1e0c5c6:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:264:20
 1e0c5c8:    03 40             	r3 = [r0 + 0]			  ## app_core.c:264:25
 1e0c5ca:    31 70             	r1 = 3			  ## app_core.c:264:15
 1e0c5cc:    02 70             	r2 = 0			  ## app_core.c:264:15
 1e0c5ce:    70 08             	r0 = r7			  ## app_core.c:264:15
 1e0c5d0:    83 00             	call r3			  ## app_core.c:264:15
 1e0c5d2:    0c 08             	r12 = r0			  ## app_core.c:264:15
 1e0c5d4:    10 70             	r0 = 1			  ## app_core.c:265:20
 1e0c5d6:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:265:20
 1e0c5d8:    0c e0 0c 10       	if (r12 != 0) goto 24 <__start_app+0x144 : 1e0c5f4 >
 1e0c5dc:    00 f6 04 90       	r0 = [r9 + 4]			  ## app_core.c:270:17
 1e0c5e0:    b0 f2 15 00       	if (r0 == r11) goto 42 <__start_app+0x15E : 1e0c60e >			  ## app_core.c:270:17
 1e0c5e4:    70 4e             	r0 = [r7 + 28]			  ## app_core.c:273:24
 1e0c5e6:    03 40             	r3 = [r0 + 0]			  ## app_core.c:273:29
 1e0c5e8:    11 70             	r1 = 1			  ## app_core.c:273:19
 1e0c5ea:    70 08             	r0 = r7			  ## app_core.c:273:19
 1e0c5ec:    92 08             	r2 = r9			  ## app_core.c:273:19
 1e0c5ee:    83 00             	call r3			  ## app_core.c:273:19
 1e0c5f0:    0c 08             	r12 = r0			  ## app_core.c:273:19
 1e0c5f2:    0d 20             	if (r0 == 0) goto 26 <__start_app+0x15E : 1e0c60e >
 1e0c5f4:    0d e0 24 00       	if (r13 == 0) goto 72 <__start_app+0x190 : 1e0c640 >
 1e0c5f8:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:279:18
 1e0c5fc:    03 40             	r3 = [r0 + 0]			  ## app_core.c:279:23
 1e0c5fe:    31 70             	r1 = 3			  ## app_core.c:279:13
 1e0c600:    02 70             	r2 = 0			  ## app_core.c:279:13
 1e0c602:    d0 08             	r0 = r13			  ## app_core.c:279:13
 1e0c604:    83 00             	call r3			  ## app_core.c:279:13
 1e0c606:    10 70             	r0 = 1			  ## app_core.c:280:24
 1e0c608:    10 f9 00 d0       	b[r13 + 0] = r0			  ## app_core.c:280:24
 1e0c60c:    19 18             	goto 50 <__start_app+0x190 : 1e0c640 >			  ## app_core.c:280:24
 1e0c60e:    10 70             	r0 = 1			  ## app_core.c:285:16
 1e0c610:    08 6e             	b[r7 + 0] = r0			  ## app_core.c:285:16
 1e0c612:    40 4e             	r0 = [r7 + 16]			  ## list.h:171:36
 1e0c614:    51 4e             	r1 = [r7 + 20]			  ## list.h:171:23
 1e0c616:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0c618:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0c61a:    00 f6 00 a0       	r0 = [r10 + 0]			  ## list.h:219:33
 1e0c61e:    01 9f             	r1 = r7 + 16			  ## app_core.c:287:20
 1e0c620:    19 40             	[r0 + 4] = r1			  ## list.h:137:16
 1e0c622:    48 4e             	[r7 + 16] = r0			  ## list.h:138:16
 1e0c624:    1a f6 14 70       	[r7 + 20] = r10			  ## list.h:139:16
 1e0c628:    11 f6 00 a0       	[r10 + 0] = r1			  ## list.h:140:16
 1e0c62c:    0c 70             	r12 = 0			  ## list.h:140:16
 1e0c62e:    08 18             	goto 16 <__start_app+0x190 : 1e0c640 >
 1e0c630:    00 f6 1c d0       	r0 = [r13 + 28]			  ## app_core.c:243:24
 1e0c634:    03 40             	r3 = [r0 + 0]			  ## app_core.c:243:29
 1e0c636:    11 70             	r1 = 1			  ## app_core.c:243:19
 1e0c638:    d0 08             	r0 = r13			  ## app_core.c:243:19
 1e0c63a:    92 08             	r2 = r9			  ## app_core.c:243:19
 1e0c63c:    83 00             	call r3			  ## app_core.c:243:19
 1e0c63e:    0c 08             	r12 = r0			  ## app_core.c:243:19
 1e0c640:    80 08             	r0 = r8			  ## app_core.c:292:5
 1e0c642:    97 f3 f1 d3       	call 3123170 <os_mutex_post : 106e28 >			  ## app_core.c:292:5
 1e0c646:    c0 08             	r0 = r12			  ## app_core.c:294:5
 1e0c648:    5d 01             	{pc, r13-r4} = [sp++]			  ## app_core.c:294:5


start_app:
 1e0c64a:    76 01             	[--sp] = {rets, r6-r4}			  ## app_core.c:298:0
 1e0c64c:    f4 0b             	sp += -24			  ## app_core.c:298:0
 1e0c64e:    06 08             	r6 = r0			  ## app_core.c:298:0
 1e0c650:    20 07             	r0 = -14			  ## app_core.c:299:9
 1e0c652:    58 02             	[sp+20] = r0			  ## app_core.c:299:9
 1e0c654:    8f f3 78 b5       	call 2058992 <os_current_task : 3148 >			  ## app_core.c:304:17
 1e0c658:    c4 ff 4b e0 e0 01 	r4 = 31514699 <update_target_end+0x16B : 1e0e04b >			  ## app_core.c:304:17
 1e0c65e:    41 08             	r1 = r4			  ## app_core.c:304:10
 1e0c660:    97 f3 48 d4       	call 3123344 <strcmp : 106ef4 >			  ## app_core.c:304:10
 1e0c664:    3b 20             	if (r0 == 0) goto 118 <start_app+0x92 : 1e0c6dc >			  ## app_core.c:304:10
 1e0c666:    00 75             	r0 = 80			  ## app_core.c:308:19
 1e0c668:    bf f3 fa ef       	call -8204 <malloc : 1e0a660 >			  ## app_core.c:308:19
 1e0c66c:    05 08             	r5 = r0			  ## app_core.c:308:19
 1e0c66e:    02 3a             	if (r5 != 0) goto 4 <start_app+0x2A : 1e0c674 >			  ## app_core.c:308:19
 1e0c670:    8f f3 46 b6       	call 2059404 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0c674:    01 70             	r1 = 0			  ## app_core.c:310:5
 1e0c676:    50 08             	r0 = r5			  ## app_core.c:310:5
 1e0c678:    97 f3 c2 d3       	call 3123076 <os_sem_create : 106e00 >			  ## app_core.c:310:5
 1e0c67c:    00 72             	r0 = 32			  ## app_core.c:312:12
 1e0c67e:    08 02             	[sp] = r0			  ## app_core.c:312:12
 1e0c680:    1e 02             	[sp+4] = r6			  ## app_core.c:313:12
 1e0c682:    2d 02             	[sp+8] = r5			  ## app_core.c:314:12
 1e0c684:    40 a1             	r0 = sp + 20			  ## app_core.c:314:12
 1e0c686:    38 02             	[sp+12] = r0			  ## app_core.c:315:12
 1e0c688:    c6 ff 38 1e 00 00 	r6 = 7736 <start_app.app_msg_type : 1e38 >			  ## app_core.c:315:12
 1e0c68e:    03 18             	goto 6 <start_app+0x4C : 1e0c696 >			  ## app_core.c:315:12
 1e0c690:    10 70             	r0 = 1			  ## app_core.c:320:13
 1e0c692:    97 f3 91 d3       	call 3122978 <os_time_dly : 106db8 >			  ## app_core.c:320:13
 1e0c696:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:318:55
 1e0c698:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:318:53
 1e0c69c:    03 a0             	r3 = sp + 0			  ## app_core.c:318:53
 1e0c69e:    42 70             	r2 = 4			  ## app_core.c:318:15
 1e0c6a0:    40 08             	r0 = r4			  ## app_core.c:318:15
 1e0c6a2:    97 f3 9d d3       	call 3123002 <os_taskq_post_type : 106de0 >			  ## app_core.c:318:15
 1e0c6a6:    50 e1 f3 0f       	if (r0 == 21) goto -26 <start_app+0x46 : 1e0c690 >			  ## app_core.c:319:13
 1e0c6aa:    14 30             	if (r0 != 0) goto 40 <start_app+0x8A : 1e0c6d4 >
 1e0c6ac:    81 7c             	r1 = 200			  ## app_core.c:328:23
 1e0c6ae:    50 08             	r0 = r5			  ## app_core.c:328:23
 1e0c6b0:    97 f3 aa d3       	call 3123028 <os_sem_pend : 106e08 >			  ## app_core.c:328:23
 1e0c6b4:    0c 20             	if (r0 == 0) goto 24 <start_app+0x84 : 1e0c6ce >
 1e0c6b6:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:332:66
 1e0c6b8:    01 fd 40 0b       	r1 = r0 | 4194304			  ## app_core.c:332:64
 1e0c6bc:    40 08             	r0 = r4			  ## app_core.c:332:27
 1e0c6be:    97 f3 9d d3       	call 3123002 <os_taskq_del_type : 106dfc >			  ## app_core.c:332:27
 1e0c6c2:    05 20             	if (r0 == 0) goto 10 <start_app+0x84 : 1e0c6ce >
 1e0c6c4:    01 70             	r1 = 0			  ## app_core.c:334:31
 1e0c6c6:    50 08             	r0 = r5			  ## app_core.c:334:31
 1e0c6c8:    97 f3 9e d3       	call 3123004 <os_sem_pend : 106e08 >			  ## app_core.c:334:31
 1e0c6cc:    ef 31             	if (r0 != 0) goto -34 <start_app+0x62 : 1e0c6ac >
 1e0c6ce:    50 08             	r0 = r5			  ## app_core.c:338:13
 1e0c6d0:    bf f3 d9 ef       	call -8270 <free : 1e0a686 >			  ## app_core.c:338:13
 1e0c6d4:    00 5c             	r0 = h[r6 + 0] (u)			  ## app_core.c:343:17
 1e0c6d6:    10 80             	r0 += 1			  ## app_core.c:343:17
 1e0c6d8:    08 5c             	h[r6 + 0] = r0			  ## app_core.c:343:17
 1e0c6da:    02 18             	goto 4 <start_app+0x96 : 1e0c6e0 >			  ## app_core.c:343:17
 1e0c6dc:    60 08             	r0 = r6			  ## app_core.c:305:16
 1e0c6de:    e8 16             	call -560 <__start_app : 1e0c4b0 >			  ## app_core.c:305:16
 1e0c6e0:    0c 0a             	sp += 24
 1e0c6e2:    56 01             	{pc, r6-r4} = [sp++]


app_core_msg_handler:
 1e0c6e4:    74 01             	[--sp] = {rets, r4}			  ## app_core.c:91:0
 1e0c6e6:    04 08             	r4 = r0			  ## app_core.c:91:0
 1e0c6e8:    10 48             	r0 = [r4 + 4]			  ## app_core.c:92:9
 1e0c6ea:    00 e2 07 10       	if (r0 != 32) goto 14 <app_core_msg_handler+0x18 : 1e0c6fc >			  ## app_core.c:92:9
 1e0c6ee:    20 48             	r0 = [r4 + 8]			  ## app_core.c:93:55
 1e0c6f0:    df 16             	call -578 <__start_app : 1e0c4b0 >			  ## app_core.c:93:26
 1e0c6f2:    41 48             	r1 = [r4 + 16]			  ## app_core.c:93:17
 1e0c6f4:    08 42             	[r1 + 0] = r0			  ## app_core.c:93:24
 1e0c6f6:    30 48             	r0 = [r4 + 12]			  ## app_core.c:94:31
 1e0c6f8:    97 f3 88 d3       	call 3122960 <os_sem_post : 106e0c >			  ## app_core.c:94:9
 1e0c6fc:    54 01             	{pc, r4} = [sp++]			  ## app_core.c:116:1


syscfg_tools_init:
 1e0c6fe:    75 01             	[--sp] = {rets, r5, r4}			  ## syscfg_api.c:253:0
 1e0c700:    c4 ff 24 de e0 01 	r4 = 31514148 <syscfg_ops_end : 1e0de24 >			  ## syscfg_api.c:253:0
 1e0c706:    c5 ff d0 dd e0 01 	r5 = 31514064 <syscfg_ops_begin : 1e0ddd0 >			  ## syscfg_api.c:253:0
 1e0c70c:    45 f2 06 20       	if (r5 >= r4) goto 12 <syscfg_tools_init+0x1E : 1e0c71c >			  ## syscfg_api.c:253:0
 1e0c710:    40 f6 1c 50       	r0 = [r5 ++= 28]			  ## syscfg_api.c:261:16
 1e0c714:    01 20             	if (r0 == 0) goto 2 <syscfg_tools_init+0x1A : 1e0c718 >
 1e0c716:    80 00             	call r0			  ## syscfg_api.c:262:13
 1e0c718:    45 f2 fa 3f       	if (r5 < r4) goto -12 <syscfg_tools_init+0x12 : 1e0c710 >
 1e0c71c:    00 70             	r0 = 0			  ## syscfg_api.c:266:5
 1e0c71e:    55 01             	{pc, r5, r4} = [sp++]			  ## syscfg_api.c:266:5


__syscfg_read:
 1e0c720:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:38:0
 1e0c722:    05 08             	r5 = r0			  ## syscfg_api.c:38:0
 1e0c724:    16 4a             	r6 = [r5 + 4]			  ## syscfg_api.c:42:14
 1e0c726:    38 08             	r8 = r3			  ## syscfg_api.c:42:14
 1e0c728:    29 08             	r9 = r2
 1e0c72a:    17 08             	r7 = r1
 1e0c72c:    04 70             	r4 = 0
 1e0c72e:    0b 2c             	if (r6 == 0) goto 22 <__syscfg_read+0x26 : 1e0c746 >
 1e0c730:    70 08             	r0 = r7			  ## syscfg_api.c:43:13
 1e0c732:    86 00             	call r6			  ## syscfg_api.c:43:13
 1e0c734:    10 e0 07 10       	if (r0 != 1) goto 14 <__syscfg_read+0x26 : 1e0c746 >			  ## syscfg_api.c:43:13
 1e0c738:    23 4a             	r3 = [r5 + 8]			  ## syscfg_api.c:44:22
 1e0c73a:    05 26             	if (r3 == 0) goto 10 <__syscfg_read+0x26 : 1e0c746 >			  ## syscfg_api.c:44:22
 1e0c73c:    70 08             	r0 = r7			  ## syscfg_api.c:45:23
 1e0c73e:    91 08             	r1 = r9			  ## syscfg_api.c:45:23
 1e0c740:    82 08             	r2 = r8			  ## syscfg_api.c:45:23
 1e0c742:    83 00             	call r3			  ## syscfg_api.c:45:23
 1e0c744:    04 08             	r4 = r0			  ## syscfg_api.c:45:23
 1e0c746:    40 08             	r0 = r4			  ## syscfg_api.c:50:5
 1e0c748:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:50:5


syscfg_read:
 1e0c74a:    7a 01             	[--sp] = {rets, r10-r4}			  ## syscfg_api.c:114:0
 1e0c74c:    2a 08             	r10 = r2			  ## syscfg_api.c:114:0
 1e0c74e:    18 08             	r8 = r1			  ## syscfg_api.c:114:0
 1e0c750:    06 08             	r6 = r0			  ## syscfg_api.c:114:0
 1e0c752:    66 e6 28 10       	if (r6 != 102) goto 80 <syscfg_read+0x5C : 1e0c7a6 >			  ## syscfg_api.c:114:0
 1e0c756:    04 70             	r4 = 0			  ## syscfg_api.c:114:0
 1e0c758:    62 e0 5a 30       	if (r2 < 6) goto 180 <syscfg_read+0xC6 : 1e0c810 >			  ## syscfg_api.c:114:0
 1e0c75c:    00 70             	r0 = 0			  ## syscfg_api.c:114:0
 1e0c75e:    c7 ff 00 08 00 00 	r7 = 2048 <report_mmu_tlb_size : 800 >			  ## syscfg_api.c:114:0
 1e0c764:    01 70             	r1 = 0			  ## syscfg_api.c:114:0
 1e0c766:    c2 b1             	r2 = r0 + r7			  ## syscfg_api.c:89:13
 1e0c768:    03 f9 20 20       	r3 = b[r2 + 32] (u)			  ## syscfg_api.c:89:13
 1e0c76c:    12 70             	r2 = 1			  ## syscfg_api.c:89:13
 1e0c76e:    01 26             	if (r3 == 0) goto 2 <syscfg_read+0x28 : 1e0c772 >			  ## syscfg_api.c:89:13
 1e0c770:    02 70             	r2 = 0			  ## syscfg_api.c:89:36
 1e0c772:    10 80             	r0 += 1			  ## syscfg_api.c:88:54
 1e0c774:    21 09             	r1 += r2			  ## syscfg_api.c:89:13
 1e0c776:    60 e0 f6 1f       	if (r0 != 6) goto -20 <syscfg_read+0x1C : 1e0c766 >			  ## syscfg_api.c:89:13
 1e0c77a:    40 04             	r0 = r1.b0 (u)			  ## syscfg_api.c:94:18
 1e0c77c:    60 e0 13 00       	if (r0 == 6) goto 38 <syscfg_read+0x5C : 1e0c7a6 >			  ## syscfg_api.c:94:18
 1e0c780:    79 fc 20 00       	r9 = r7 + 32			  ## syscfg_api.c:98:19
 1e0c784:    61 70             	r1 = 6			  ## syscfg_api.c:98:19
 1e0c786:    64 70             	r4 = 6			  ## syscfg_api.c:98:19
 1e0c788:    90 08             	r0 = r9			  ## syscfg_api.c:98:19
 1e0c78a:    bf f3 17 a1       	call -48594 <CRC16 : 1e009bc >			  ## syscfg_api.c:98:19
 1e0c78e:    31 5f             	r1 = h[r7 + 38] (u)			  ## syscfg_api.c:100:19
 1e0c790:    30 fb 00 11       	r1 = rev8(r1)			  ## syscfg_api.c:101:20
 1e0c794:    09 d4             	r1 = r1 >> 16			  ## syscfg_api.c:101:20
 1e0c796:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_read+0x5C : 1e0c7a6 >			  ## syscfg_api.c:101:20
 1e0c79a:    62 70             	r2 = 6			  ## syscfg_api.c:102:9
 1e0c79c:    80 08             	r0 = r8			  ## syscfg_api.c:102:9
 1e0c79e:    91 08             	r1 = r9			  ## syscfg_api.c:102:9
 1e0c7a0:    97 f3 a0 d3       	call 3123008 <memcpy : 106ee4 >			  ## syscfg_api.c:102:9
 1e0c7a4:    35 18             	goto 106 <syscfg_read+0xC6 : 1e0c810 >
 1e0c7a6:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:131:44
 1e0c7aa:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:131:44
 1e0c7ac:    c7 ff ec dd e0 01 	r7 = 31514092 <cfg_vm : 1e0ddec >			  ## syscfg_api.c:131:44
 1e0c7b2:    10 e3 27 30       	if (r0 < 49) goto 78 <syscfg_read+0xBA : 1e0c804 >			  ## syscfg_api.c:131:44
 1e0c7b6:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:134:53
 1e0c7ba:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:134:53
 1e0c7bc:    20 e3 22 30       	if (r0 < 50) goto 68 <syscfg_read+0xBA : 1e0c804 >			  ## syscfg_api.c:134:53
 1e0c7c0:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:137:54
 1e0c7c4:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:137:54
 1e0c7c6:    c7 ff 08 de e0 01 	r7 = 31514120 <cfg_bin : 1e0de08 >			  ## syscfg_api.c:137:54
 1e0c7cc:    d0 eb 1a 30       	if (r0 < 189) goto 52 <syscfg_read+0xBA : 1e0c804 >			  ## syscfg_api.c:137:54
 1e0c7d0:    c5 ff 24 de e0 01 	r5 = 31514148 <syscfg_ops_end : 1e0de24 >
 1e0c7d6:    c4 ff d0 dd e0 01 	r4 = 31514064 <syscfg_ops_begin : 1e0ddd0 >
 1e0c7dc:    54 f2 12 20       	if (r4 >= r5) goto 36 <syscfg_read+0xBA : 1e0c804 >
 1e0c7e0:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:142:20
 1e0c7e2:    04 22             	if (r1 == 0) goto 8 <syscfg_read+0xA2 : 1e0c7ec >			  ## syscfg_api.c:142:20
 1e0c7e4:    60 08             	r0 = r6			  ## syscfg_api.c:143:21
 1e0c7e6:    81 00             	call r1			  ## syscfg_api.c:143:21
 1e0c7e8:    10 e0 04 00       	if (r0 == 1) goto 8 <syscfg_read+0xAA : 1e0c7f4 >			  ## syscfg_api.c:143:21
 1e0c7ec:    c4 81             	r4 += 28			  ## syscfg_api.c:141:9
 1e0c7ee:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_read+0x96 : 1e0c7e0 >
 1e0c7f2:    08 18             	goto 16 <syscfg_read+0xBA : 1e0c804 >
 1e0c7f4:    40 08             	r0 = r4			  ## syscfg_api.c:144:27
 1e0c7f6:    61 08             	r1 = r6			  ## syscfg_api.c:144:27
 1e0c7f8:    82 08             	r2 = r8			  ## syscfg_api.c:144:27
 1e0c7fa:    a3 08             	r3 = r10			  ## syscfg_api.c:144:27
 1e0c7fc:    91 17             	call -222 <__syscfg_read : 1e0c720 >			  ## syscfg_api.c:144:27
 1e0c7fe:    04 08             	r4 = r0			  ## syscfg_api.c:144:27
 1e0c800:    04 e0 06 c0       	ifs (r4 > 0) goto 12 <syscfg_read+0xC6 : 1e0c810 >
 1e0c804:    70 08             	r0 = r7			  ## syscfg_api.c:136:15
 1e0c806:    61 08             	r1 = r6			  ## syscfg_api.c:136:15
 1e0c808:    82 08             	r2 = r8			  ## syscfg_api.c:136:15
 1e0c80a:    a3 08             	r3 = r10			  ## syscfg_api.c:136:15
 1e0c80c:    89 17             	call -238 <__syscfg_read : 1e0c720 >			  ## syscfg_api.c:136:15
 1e0c80e:    04 08             	r4 = r0			  ## syscfg_api.c:136:15
 1e0c810:    40 08             	r0 = r4			  ## syscfg_api.c:156:1
 1e0c812:    5a 01             	{pc, r10-r4} = [sp++]			  ## syscfg_api.c:156:1


syscfg_write:
 1e0c814:    79 01             	[--sp] = {rets, r9-r4}			  ## syscfg_api.c:161:0
 1e0c816:    28 08             	r8 = r2			  ## syscfg_api.c:161:0
 1e0c818:    19 08             	r9 = r1			  ## syscfg_api.c:161:0
 1e0c81a:    06 08             	r6 = r0			  ## syscfg_api.c:161:0
 1e0c81c:    60 fc ff ff       	r0 = r6 + -1			  ## syscfg_api.c:166:44
 1e0c820:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:166:44
 1e0c822:    c4 ff ec dd e0 01 	r4 = 31514092 <cfg_vm : 1e0ddec >			  ## syscfg_api.c:166:44
 1e0c828:    10 e3 0d 30       	if (r0 < 49) goto 26 <syscfg_write+0x32 : 1e0c846 >			  ## syscfg_api.c:166:44
 1e0c82c:    60 fc ce ff       	r0 = r6 + -50			  ## syscfg_api.c:169:53
 1e0c830:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:169:53
 1e0c832:    20 e3 08 30       	if (r0 < 50) goto 16 <syscfg_write+0x32 : 1e0c846 >			  ## syscfg_api.c:169:53
 1e0c836:    60 fc 00 fe       	r0 = r6 + -512			  ## syscfg_api.c:172:54
 1e0c83a:    20 04             	r0 = r0.l (u)			  ## syscfg_api.c:172:54
 1e0c83c:    d0 eb 0d 20       	if (r0 >= 189) goto 26 <syscfg_write+0x46 : 1e0c85a >			  ## syscfg_api.c:172:54
 1e0c840:    c4 ff 08 de e0 01 	r4 = 31514120 <cfg_bin : 1e0de08 >
 1e0c846:    33 48             	r3 = [r4 + 12]			  ## syscfg_api.c:59:14
 1e0c848:    06 26             	if (r3 == 0) goto 12 <syscfg_write+0x42 : 1e0c856 >			  ## syscfg_api.c:59:14
 1e0c84a:    60 08             	r0 = r6			  ## syscfg_api.c:60:15
 1e0c84c:    91 08             	r1 = r9			  ## syscfg_api.c:60:15
 1e0c84e:    82 08             	r2 = r8			  ## syscfg_api.c:60:15
 1e0c850:    83 00             	call r3			  ## syscfg_api.c:60:15
 1e0c852:    07 08             	r7 = r0			  ## syscfg_api.c:60:15
 1e0c854:    14 18             	goto 40 <syscfg_write+0x6A : 1e0c87e >
 1e0c856:    07 70             	r7 = 0
 1e0c858:    12 18             	goto 36 <syscfg_write+0x6A : 1e0c87e >
 1e0c85a:    c5 ff 24 de e0 01 	r5 = 31514148 <syscfg_ops_end : 1e0de24 >
 1e0c860:    c4 ff d0 dd e0 01 	r4 = 31514064 <syscfg_ops_begin : 1e0ddd0 >
 1e0c866:    07 70             	r7 = 0
 1e0c868:    54 f2 09 20       	if (r4 >= r5) goto 18 <syscfg_write+0x6A : 1e0c87e >
 1e0c86c:    11 48             	r1 = [r4 + 4]			  ## syscfg_api.c:177:20
 1e0c86e:    04 22             	if (r1 == 0) goto 8 <syscfg_write+0x64 : 1e0c878 >			  ## syscfg_api.c:177:20
 1e0c870:    60 08             	r0 = r6			  ## syscfg_api.c:178:21
 1e0c872:    81 00             	call r1			  ## syscfg_api.c:178:21
 1e0c874:    10 e0 e7 0f       	if (r0 == 1) goto -50 <syscfg_write+0x32 : 1e0c846 >			  ## syscfg_api.c:178:21
 1e0c878:    c4 81             	r4 += 28			  ## syscfg_api.c:176:9
 1e0c87a:    54 f2 f7 3f       	if (r4 < r5) goto -18 <syscfg_write+0x58 : 1e0c86c >
 1e0c87e:    70 08             	r0 = r7			  ## syscfg_api.c:186:5
 1e0c880:    59 01             	{pc, r9-r4} = [sp++]			  ## syscfg_api.c:186:5


syscfg_file_open:
 1e0c882:    34 00             	[--sp] = rets			  ## cfg_bin.c:68:0
 1e0c884:    c1 ff 81 df e0 01 	r1 = 31514497 <update_target_end+0xA1 : 1e0df81 >			  ## cfg_bin.c:70:10
 1e0c88a:    80 f3 f2 06       	call 3556 <fopen : 1e0d672 >			  ## cfg_bin.c:70:10
 1e0c88e:    30 00             	pc = [sp++]			  ## cfg_bin.c:75:5


syscfg_file_init:
 1e0c890:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:87:0
 1e0c892:    ee 0b             	sp += -36			  ## cfg_bin.c:87:0
 1e0c894:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:87:0
 1e0c896:    01 70             	r1 = 0			  ## cfg_bin.c:90:21
 1e0c898:    42 72             	r2 = 36			  ## cfg_bin.c:90:21
 1e0c89a:    07 70             	r7 = 0			  ## cfg_bin.c:90:21
 1e0c89c:    97 f3 28 d3       	call 3122768 <memset : 106ef0 >			  ## cfg_bin.c:90:21
 1e0c8a0:    c0 ff f3 df e0 01 	r0 = 31514611 <update_target_end+0x113 : 1e0dff3 >			  ## cfg_bin.c:92:10
 1e0c8a6:    ed 17             	call -38 <syscfg_file_open : 1e0c882 >			  ## cfg_bin.c:92:10
 1e0c8a8:    05 08             	r5 = r0			  ## cfg_bin.c:92:10
 1e0c8aa:    04 fb 00 ff       	r4 = -256 <bank_code_load_addr+0x1E5654 : 1ffff00 >
 1e0c8ae:    4f 2a             	if (r5 == 0) goto 158 <syscfg_file_init+0xBE : 1e0c94e >
 1e0c8b0:    01 a0             	r1 = sp + 0
 1e0c8b2:    80 f3 fe 07       	call 4092 <fget_attrs : 1e0d8b2 >			  ## cfg_bin.c:98:5
 1e0c8b6:    c6 ff 9c 1f 00 00 	r6 = 8092 <bin_cfg : 1f9c >
 1e0c8bc:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:101:47
 1e0c8be:    11 70             	r1 = 1			  ## cfg_bin.c:100:31
 1e0c8c0:    12 02             	r2 = [sp+4]			  ## cfg_bin.c:102:46
 1e0c8c2:    09 6c             	b[r6 + 0] = r1			  ## cfg_bin.c:100:31
 1e0c8c4:    40 80             	r0 += 4			  ## cfg_bin.c:101:54
 1e0c8c6:    18 4c             	[r6 + 4] = r0			  ## cfg_bin.c:101:35
 1e0c8c8:    20 fc fc ff       	r0 = r2 + -4			  ## cfg_bin.c:102:52
 1e0c8cc:    28 4c             	[r6 + 8] = r0			  ## cfg_bin.c:102:34
 1e0c8ce:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e0c8d0:    80 f3 aa 07       	call 3924 <fclose : 1e0d828 >			  ## cfg_bin.c:81:9
 1e0c8d4:    cf 6c             	b[r6 + 12] = r7			  ## cfg_bin.c:106:30
 1e0c8d6:    c0 ff 0f e0 e0 01 	r0 = 31514639 <update_target_end+0x12F : 1e0e00f >			  ## cfg_bin.c:108:10
 1e0c8dc:    d2 17             	call -92 <syscfg_file_open : 1e0c882 >			  ## cfg_bin.c:108:10
 1e0c8de:    05 08             	r5 = r0			  ## cfg_bin.c:108:10
 1e0c8e0:    36 2a             	if (r5 == 0) goto 108 <syscfg_file_init+0xBE : 1e0c94e >
 1e0c8e2:    01 a0             	r1 = sp + 0
 1e0c8e4:    80 f3 e5 07       	call 4042 <fget_attrs : 1e0d8b2 >			  ## cfg_bin.c:113:5
 1e0c8e8:    50 08             	r0 = r5			  ## cfg_bin.c:81:9
 1e0c8ea:    80 f3 9d 07       	call 3898 <fclose : 1e0d828 >			  ## cfg_bin.c:81:9
 1e0c8ee:    20 02             	r0 = [sp+8]			  ## cfg_bin.c:117:46
 1e0c8f0:    00 fc 00 02       	r0 = r0 + 512			  ## cfg_bin.c:117:46
 1e0c8f4:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:117:34
 1e0c8f6:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_bin.c:119:5
 1e0c8f8:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_bin.c:119:5
 1e0c8fa:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_bin.c:119:5
 1e0c8fc:    05 60             	r5 = b[r0 + 0] (u)			  ## cfg_bin.c:119:5
 1e0c8fe:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:119:5
 1e0c902:    c8 fd 40 53       	r5 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:119:5
 1e0c906:    d0 fd 80 52       	r5 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:119:5
 1e0c90a:    51 fc ff ff       	r1 = r5 + -1			  ## cfg_bin.c:121:49
 1e0c90e:    04 70             	r4 = 0			  ## cfg_bin.c:121:49
 1e0c910:    08 ff ff 17 1c 00 	if (r1 > 2047) goto 56 <syscfg_file_init+0xBE : 1e0c94e >			  ## cfg_bin.c:121:49
 1e0c916:    71 60             	r1 = b[r0 + 7] (u)			  ## cfg_bin.c:127:5
 1e0c918:    62 60             	r2 = b[r0 + 6] (u)			  ## cfg_bin.c:127:5
 1e0c91a:    53 60             	r3 = b[r0 + 5] (u)			  ## cfg_bin.c:127:5
 1e0c91c:    47 60             	r7 = b[r0 + 4] (u)			  ## cfg_bin.c:127:5
 1e0c91e:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_bin.c:127:5
 1e0c922:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_bin.c:127:5
 1e0c926:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_bin.c:127:5
 1e0c92a:    39 d5             	r1 = r7 >> 20			  ## cfg_bin.c:128:9
 1e0c92c:    08 ff 20 13 0e 00 	if (r1 > 800) goto 28 <syscfg_file_init+0xBE : 1e0c94e >			  ## cfg_bin.c:128:9
 1e0c932:    40 80             	r0 += 4			  ## cfg_bin.c:126:11
 1e0c934:    40 80             	r0 += 4			  ## cfg_bin.c:131:26
 1e0c936:    bf f3 41 a0       	call -49022 <CRC16 : 1e009bc >			  ## cfg_bin.c:131:26
 1e0c93a:    00 04             	r0 = r0.b0 (u)			  ## cfg_bin.c:132:9
 1e0c93c:    c1 05             	r1 = r7.b0 (u)			  ## cfg_bin.c:132:32
 1e0c93e:    10 f2 06 10       	if (r0 != r1) goto 12 <syscfg_file_init+0xBE : 1e0c94e >			  ## cfg_bin.c:132:32
 1e0c942:    10 70             	r0 = 1			  ## cfg_bin.c:133:34
 1e0c944:    c8 6c             	b[r6 + 12] = r0			  ## cfg_bin.c:133:34
 1e0c946:    40 4c             	r0 = [r6 + 16]			  ## cfg_bin.c:134:38
 1e0c948:    40 80             	r0 += 4			  ## cfg_bin.c:134:38
 1e0c94a:    48 4c             	[r6 + 16] = r0			  ## cfg_bin.c:134:38
 1e0c94c:    5d 4c             	[r6 + 20] = r5			  ## cfg_bin.c:135:37
 1e0c94e:    40 08             	r0 = r4			  ## cfg_bin.c:141:1
 1e0c950:    12 0a             	sp += 36			  ## cfg_bin.c:141:1
 1e0c952:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:141:1


syscfg_bin_check_id:
 1e0c954:    10 70             	r0 = 1			  ## cfg_bin.c:351:0
 1e0c956:    20 00             	rts			  ## cfg_bin.c:352:5


__syscfg_bin_item_read:
 1e0c958:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:199:0
 1e0c95a:    24 08             	r4 = r2			  ## cfg_bin.c:199:0
 1e0c95c:    01 09             	r1 += r0			  ## cfg_bin.c:202:42
 1e0c95e:    32 60             	r2 = b[r0 + 3] (u)			  ## cfg_bin.c:207:9
 1e0c960:    23 60             	r3 = b[r0 + 2] (u)			  ## cfg_bin.c:207:9
 1e0c962:    15 60             	r5 = b[r0 + 1] (u)			  ## cfg_bin.c:207:9
 1e0c964:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_bin.c:207:9
 1e0c966:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## cfg_bin.c:207:9
 1e0c96a:    c8 fd 40 75       	r7 <= insert(r5, p:8, l:8)			  ## cfg_bin.c:207:9
 1e0c96e:    d0 fd 80 73       	r7 <= insert(r3, p:16, l:16)			  ## cfg_bin.c:207:9
 1e0c972:    3d d5             	r5 = r7 >> 20			  ## cfg_bin.c:208:23
 1e0c974:    08 ff 20 53 0c 00 	if (r5 > 800) goto 24 <__syscfg_bin_item_read+0x3A : 1e0c992 >			  ## cfg_bin.c:208:23
 1e0c97a:    02 58             	r2 = h[r4 + 0] (u)			  ## cfg_bin.c:212:24
 1e0c97c:    8c fd 40 37       	r3 = uextra(r7, p:8, l:12)			  ## cfg_bin.c:211:19
 1e0c980:    23 f2 0a 00       	if (r3 == r2) goto 20 <__syscfg_bin_item_read+0x40 : 1e0c998 >			  ## cfg_bin.c:211:19
 1e0c984:    50 09             	r0 += r5			  ## cfg_bin.c:222:36
 1e0c986:    40 80             	r0 += 4			  ## cfg_bin.c:222:19
 1e0c988:    10 f2 e9 3f       	if (r0 < r1) goto -46 <__syscfg_bin_item_read+0x6 : 1e0c95e >
 1e0c98c:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E5659 : 1ffff05 >
 1e0c990:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0c992:    00 fb 07 ff       	r0 = -249 <bank_code_load_addr+0x1E565B : 1ffff07 >
 1e0c996:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0c998:    46 90             	r6 = r0 + 4			  ## cfg_bin.c:213:25
 1e0c99a:    60 08             	r0 = r6			  ## cfg_bin.c:213:25
 1e0c99c:    51 08             	r1 = r5			  ## cfg_bin.c:213:25
 1e0c99e:    bf f3 0d a0       	call -49126 <CRC16 : 1e009bc >			  ## cfg_bin.c:213:25
 1e0c9a2:    01 04             	r1 = r0.b0 (u)			  ## cfg_bin.c:214:17
 1e0c9a4:    c2 05             	r2 = r7.b0 (u)			  ## cfg_bin.c:214:40
 1e0c9a6:    00 fb 03 ff       	r0 = -253 <bank_code_load_addr+0x1E5657 : 1ffff03 >			  ## cfg_bin.c:214:40
 1e0c9aa:    21 f2 04 10       	if (r1 != r2) goto 8 <__syscfg_bin_item_read+0x5E : 1e0c9b6 >			  ## cfg_bin.c:214:40
 1e0c9ae:    1d 58             	h[r4 + 2] = r5			  ## cfg_bin.c:215:32
 1e0c9b0:    1e 48             	[r4 + 4] = r6			  ## cfg_bin.c:216:33
 1e0c9b2:    00 70             	r0 = 0			  ## cfg_bin.c:216:33
 1e0c9b4:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1
 1e0c9b6:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:227:1


__syscfg_bin_read:
 1e0c9b8:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:230:0
 1e0c9ba:    c5 ff 9c 1f 00 00 	r5 = 8092 <bin_cfg : 1f9c >			  ## cfg_bin.c:230:0
 1e0c9c0:    c1 6a             	r1 = b[r5 + 12] (u)			  ## cfg_bin.c:233:28
 1e0c9c2:    04 08             	r4 = r0			  ## cfg_bin.c:233:28
 1e0c9c4:    11 e0 05 10       	if (r1 != 1) goto 10 <__syscfg_bin_read+0x1A : 1e0c9d2 >
 1e0c9c8:    51 4a             	r1 = [r5 + 20]
 1e0c9ca:    40 4a             	r0 = [r5 + 16]
 1e0c9cc:    42 08             	r2 = r4			  ## cfg_bin.c:234:15
 1e0c9ce:    c4 17             	call -120 <__syscfg_bin_item_read : 1e0c958 >			  ## cfg_bin.c:234:15
 1e0c9d0:    05 20             	if (r0 == 0) goto 10 <__syscfg_bin_read+0x24 : 1e0c9dc >
 1e0c9d2:    21 4a             	r1 = [r5 + 8]
 1e0c9d4:    10 4a             	r0 = [r5 + 4]
 1e0c9d6:    42 08             	r2 = r4			  ## cfg_bin.c:240:11
 1e0c9d8:    bf 17             	call -130 <__syscfg_bin_item_read : 1e0c958 >			  ## cfg_bin.c:240:11
 1e0c9da:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1
 1e0c9dc:    00 70             	r0 = 0
 1e0c9de:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:243:1


___syscfg_bin_group_read:
 1e0c9e0:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_bin.c:246:0
 1e0c9e2:    fc 0b             	sp += -8			  ## cfg_bin.c:246:0
 1e0c9e4:    c7 ff d8 e6 e0 01 	r7 = 31516376 <group_item_table : 1e0e6d8 >			  ## cfg_bin.c:246:0
 1e0c9ea:    36 08             	r6 = r3			  ## cfg_bin.c:246:0
 1e0c9ec:    25 08             	r5 = r2			  ## cfg_bin.c:246:0
 1e0c9ee:    14 08             	r4 = r1			  ## cfg_bin.c:246:0
 1e0c9f0:    01 08             	r1 = r0			  ## cfg_bin.c:246:0
 1e0c9f2:    72 08             	r2 = r7			  ## cfg_bin.c:162:13
 1e0c9f4:    51 e6 01 00       	if (r1 == 101) goto 2 <___syscfg_bin_group_read+0x1A : 1e0c9fa >			  ## cfg_bin.c:162:13
 1e0c9f8:    02 70             	r2 = 0			  ## cfg_bin.c:162:13
 1e0c9fa:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E5659 : 1ffff05 >
 1e0c9fe:    51 e6 0e 10       	if (r1 != 101) goto 28 <___syscfg_bin_group_read+0x3E : 1e0ca1e >
 1e0ca02:    41 64             	r1 = b[r2 + 4] (u)			  ## cfg_bin.c:257:19
 1e0ca04:    10 80             	r0 += 1
 1e0ca06:    61 f2 0a 90       	if (r1 <= r6) goto 20 <___syscfg_bin_group_read+0x3E : 1e0ca1e >
 1e0ca0a:    11 54             	r1 = h[r2 + 2] (u)			  ## cfg_bin.c:261:18
 1e0ca0c:    c0 8f             	r0 += -4			  ## cfg_bin.c:261:18
 1e0ca0e:    51 f2 06 80       	if (r1 > r5) goto 12 <___syscfg_bin_group_read+0x3E : 1e0ca1e >			  ## cfg_bin.c:261:18
 1e0ca12:    50 76             	r0 = 101			  ## cfg_bin.c:266:18
 1e0ca14:    90 f5 00 00       	h[sp] = r0			  ## cfg_bin.c:266:18
 1e0ca18:    00 a0             	r0 = sp + 0			  ## cfg_bin.c:266:18
 1e0ca1a:    ce 17             	call -100 <__syscfg_bin_read : 1e0c9b8 >			  ## cfg_bin.c:268:11
 1e0ca1c:    02 20             	if (r0 == 0) goto 4 <___syscfg_bin_group_read+0x42 : 1e0ca22 >
 1e0ca1e:    04 0a             	sp += 8
 1e0ca20:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_bin.c:287:1
 1e0ca22:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_bin.c:181:46
 1e0ca26:    50 e6 01 00       	if (r0 == 101) goto 2 <___syscfg_bin_group_read+0x4C : 1e0ca2c >
 1e0ca2a:    07 70             	r7 = 0
 1e0ca2c:    17 5e             	r7 = h[r7 + 2] (u)			  ## cfg_bin.c:183:29
 1e0ca2e:    11 02             	r1 = [sp+4]			  ## cfg_bin.c:176:28
 1e0ca30:    10 9e             	r0 = r7 + 1			  ## cfg_bin.c:183:38
 1e0ca32:    20 04             	r0 = r0.l (u)			  ## cfg_bin.c:185:21
 1e0ca34:    80 fe 60 10       	r1 += r0 * r6			  ## cfg_bin.c:185:11
 1e0ca38:    80 f9 01 10       	r0 = b[r1 ++= 1] (u)			  ## cfg_bin.c:187:5
 1e0ca3c:    0c 20             	if (r0 == 0) goto 24 <___syscfg_bin_group_read+0x76 : 1e0ca56 >
 1e0ca3e:    97 f5 02 00       	h[sp+2] = r7			  ## cfg_bin.c:190:24
 1e0ca42:    19 02             	[sp+4] = r1			  ## cfg_bin.c:191:25
 1e0ca44:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E5656 : 1ffff02 >
 1e0ca48:    57 f2 e9 8f       	if (r7 > r5) goto -46 <___syscfg_bin_group_read+0x3E : 1e0ca1e >
 1e0ca4c:    70 02             	r0 = [sp+28]
 1e0ca4e:    10 e0 05 10       	if (r0 != 1) goto 10 <___syscfg_bin_group_read+0x7C : 1e0ca5c >			  ## cfg_bin.c:275:17
 1e0ca52:    09 48             	[r4 + 0] = r1			  ## cfg_bin.c:276:33
 1e0ca54:    07 18             	goto 14 <___syscfg_bin_group_read+0x84 : 1e0ca64 >			  ## cfg_bin.c:276:33
 1e0ca56:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E5659 : 1ffff05 >
 1e0ca5a:    e1 1f             	goto -62 <___syscfg_bin_group_read+0x3E : 1e0ca1e >
 1e0ca5c:    40 08             	r0 = r4			  ## cfg_bin.c:278:17
 1e0ca5e:    72 08             	r2 = r7			  ## cfg_bin.c:278:17
 1e0ca60:    97 f3 40 d2       	call 3122304 <memcpy : 106ee4 >			  ## cfg_bin.c:278:17
 1e0ca64:    70 08             	r0 = r7
 1e0ca66:    db 1f             	goto -74 <___syscfg_bin_group_read+0x3E : 1e0ca1e >


syscfg_bin_read:
 1e0ca68:    76 01             	[--sp] = {rets, r6-r4}			  ## cfg_bin.c:295:0
 1e0ca6a:    fa 0b             	sp += -12			  ## cfg_bin.c:295:0
 1e0ca6c:    25 08             	r5 = r2			  ## cfg_bin.c:295:0
 1e0ca6e:    14 08             	r4 = r1			  ## cfg_bin.c:295:0
 1e0ca70:    50 e6 07 10       	if (r0 != 101) goto 14 <syscfg_bin_read+0x1A : 1e0ca82 >			  ## cfg_bin.c:301:9
 1e0ca74:    01 70             	r1 = 0			  ## cfg_bin.c:291:12
 1e0ca76:    50 76             	r0 = 101			  ## cfg_bin.c:291:12
 1e0ca78:    03 70             	r3 = 0			  ## cfg_bin.c:291:12
 1e0ca7a:    09 02             	[sp] = r1			  ## cfg_bin.c:291:12
 1e0ca7c:    41 08             	r1 = r4			  ## cfg_bin.c:291:12
 1e0ca7e:    b0 17             	call -160 <___syscfg_bin_group_read : 1e0c9e0 >			  ## cfg_bin.c:291:12
 1e0ca80:    11 18             	goto 34 <syscfg_bin_read+0x3C : 1e0caa4 >			  ## cfg_bin.c:291:12
 1e0ca82:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:306:18
 1e0ca86:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:306:18
 1e0ca88:    97 17             	call -210 <__syscfg_bin_read : 1e0c9b8 >			  ## cfg_bin.c:307:11
 1e0ca8a:    0c 30             	if (r0 != 0) goto 24 <syscfg_bin_read+0x3C : 1e0caa4 >
 1e0ca8c:    86 f5 06 00       	r6 = h[sp+6] (u)			  ## cfg_bin.c:310:30
 1e0ca90:    00 fb 02 ff       	r0 = -254 <bank_code_load_addr+0x1E5656 : 1ffff02 >			  ## cfg_bin.c:310:30
 1e0ca94:    56 f2 06 80       	if (r6 > r5) goto 12 <syscfg_bin_read+0x3C : 1e0caa4 >
 1e0ca98:    21 02             	r1 = [sp+8]			  ## cfg_bin.c:311:13
 1e0ca9a:    40 08             	r0 = r4			  ## cfg_bin.c:311:13
 1e0ca9c:    62 08             	r2 = r6			  ## cfg_bin.c:311:13
 1e0ca9e:    97 f3 21 d2       	call 3122242 <memcpy : 106ee4 >			  ## cfg_bin.c:311:13
 1e0caa2:    60 08             	r0 = r6			  ## cfg_bin.c:311:13
 1e0caa4:    06 0a             	sp += 12
 1e0caa6:    56 01             	{pc, r6-r4} = [sp++]			  ## cfg_bin.c:319:1


syscfg_bin_group_read:
 1e0caa8:    74 01             	[--sp] = {rets, r4}			  ## cfg_bin.c:290:0
 1e0caaa:    fe 0b             	sp += -4			  ## cfg_bin.c:290:0
 1e0caac:    04 70             	r4 = 0			  ## cfg_bin.c:291:12
 1e0caae:    0c 02             	[sp] = r4			  ## cfg_bin.c:291:12
 1e0cab0:    97 17             	call -210 <___syscfg_bin_group_read : 1e0c9e0 >			  ## cfg_bin.c:291:12
 1e0cab2:    02 0a             	sp += 4
 1e0cab4:    54 01             	{pc, r4} = [sp++]			  ## cfg_bin.c:291:5


syscfg_bin_ptr_read:
 1e0cab6:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_bin.c:322:0
 1e0cab8:    f8 0b             	sp += -16			  ## cfg_bin.c:322:0
 1e0caba:    14 08             	r4 = r1			  ## cfg_bin.c:322:0
 1e0cabc:    05 70             	r5 = 0			  ## cfg_bin.c:322:0
 1e0cabe:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:323:9
 1e0cac0:    0d 58             	h[r4 + 0] = r5			  ## cfg_bin.c:325:10
 1e0cac2:    50 e6 0e 10       	if (r0 != 101) goto 28 <syscfg_bin_ptr_read+0x2C : 1e0cae2 >			  ## cfg_bin.c:330:9
 1e0cac6:    15 70             	r5 = 1
 1e0cac8:    c1 a0             	r1 = sp + 12
 1e0caca:    c2 ff ff ff 00 00 	r2 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## cfg_bin.c:331:15
 1e0cad0:    50 76             	r0 = 101			  ## cfg_bin.c:331:15
 1e0cad2:    03 70             	r3 = 0			  ## cfg_bin.c:331:15
 1e0cad4:    0d 02             	[sp] = r5			  ## cfg_bin.c:331:15
 1e0cad6:    84 17             	call -248 <___syscfg_bin_group_read : 1e0c9e0 >			  ## cfg_bin.c:331:15
 1e0cad8:    10 e0 01 b0       	ifs (r0 < 1) goto 2 <syscfg_bin_ptr_read+0x28 : 1e0cade >
 1e0cadc:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:333:18
 1e0cade:    35 02             	r5 = [sp+12]			  ## cfg_bin.c:335:16
 1e0cae0:    0a 18             	goto 20 <syscfg_bin_ptr_read+0x40 : 1e0caf6 >
 1e0cae2:    90 f5 04 00       	h[sp+4] = r0			  ## cfg_bin.c:339:18
 1e0cae6:    40 a0             	r0 = sp + 4			  ## cfg_bin.c:339:18
 1e0cae8:    67 17             	call -306 <__syscfg_bin_read : 1e0c9b8 >			  ## cfg_bin.c:340:11
 1e0caea:    05 30             	if (r0 != 0) goto 10 <syscfg_bin_ptr_read+0x40 : 1e0caf6 >
 1e0caec:    80 f5 06 00       	r0 = h[sp+6] (u)			  ## cfg_bin.c:343:26
 1e0caf0:    08 58             	h[r4 + 0] = r0			  ## cfg_bin.c:343:14
 1e0caf2:    25 02             	r5 = [sp+8]			  ## cfg_bin.c:344:31
 1e0caf4:    3d 02             	[sp+12] = r5			  ## cfg_bin.c:344:13
 1e0caf6:    50 08             	r0 = r5			  ## cfg_bin.c:348:1
 1e0caf8:    08 0a             	sp += 16			  ## cfg_bin.c:348:1
 1e0cafa:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_bin.c:348:1


syscfg_file_close:
 1e0cafc:    34 00             	[--sp] = rets			  ## cfg_bin.c:79:0
 1e0cafe:    02 20             	if (r0 == 0) goto 4 <syscfg_file_close+0x8 : 1e0cb04 >			  ## cfg_bin.c:79:0
 1e0cb00:    80 f3 92 06       	call 3364 <fclose : 1e0d828 >			  ## cfg_bin.c:81:9
 1e0cb04:    30 00             	pc = [sp++]			  ## cfg_bin.c:83:1


btif_cfg_get_info:
 1e0cb06:    75 01             	[--sp] = {rets, r5, r4}			  ## cfg_btif.c:69:0
 1e0cb08:    02 50             	r2 = h[r0 + 0] (u)			  ## cfg_btif.c:69:0
 1e0cb0a:    c3 ff 06 e2 e0 01 	r3 = 31515142 <btif_table+0x4 : 1e0e206 >			  ## cfg_btif.c:69:0
 1e0cb10:    01 70             	r1 = 0			  ## cfg_btif.c:69:0
 1e0cb12:    64 76             	r4 = 102			  ## cfg_btif.c:69:0
 1e0cb14:    05 f7 fe 3f       	r5 = h[r3 + -2] (u)			  ## cfg_btif.c:69:0
 1e0cb18:    24 f2 07 00       	if (r4 == r2) goto 14 <btif_cfg_get_info+0x24 : 1e0cb2a >			  ## cfg_btif.c:69:0
 1e0cb1c:    84 f7 04 30       	r4 = h[r3 ++= 4] (u)			  ## cfg_btif.c:74:5
 1e0cb20:    51 09             	r1 += r5			  ## cfg_btif.c:80:35
 1e0cb22:    41 80             	r1 += 4			  ## cfg_btif.c:80:20
 1e0cb24:    f7 39             	if (r4 != 0) goto -18 <btif_cfg_get_info+0xE : 1e0cb14 >
 1e0cb26:    00 70             	r0 = 0
 1e0cb28:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1
 1e0cb2a:    1d 50             	h[r0 + 2] = r5			  ## cfg_btif.c:76:23
 1e0cb2c:    19 40             	[r0 + 4] = r1			  ## cfg_btif.c:77:24
 1e0cb2e:    10 70             	r0 = 1			  ## cfg_btif.c:77:24
 1e0cb30:    55 01             	{pc, r5, r4} = [sp++]			  ## cfg_btif.c:85:1


__btif_item_read:
 1e0cb32:    77 01             	[--sp] = {rets, r7-r4}			  ## cfg_btif.c:102:0
 1e0cb34:    04 08             	r4 = r0			  ## cfg_btif.c:102:0
 1e0cb36:    e7 17             	call -50 <btif_cfg_get_info : 1e0cb06 >			  ## cfg_btif.c:103:9
 1e0cb38:    23 20             	if (r0 == 0) goto 70 <__btif_item_read+0x4E : 1e0cb80 >			  ## cfg_btif.c:103:9
 1e0cb3a:    10 48             	r0 = [r4 + 4]			  ## cfg_btif.c:109:28
 1e0cb3c:    c1 ff b4 1f 00 00 	r1 = 8116 <btif_cfg : 1fb4 >			  ## cfg_btif.c:109:43
 1e0cb42:    01 42             	r1 = [r1 + 0]			  ## cfg_btif.c:109:43
 1e0cb44:    10 09             	r0 += r1			  ## cfg_btif.c:109:33
 1e0cb46:    31 60             	r1 = b[r0 + 3] (u)			  ## cfg_btif.c:113:5
 1e0cb48:    22 60             	r2 = b[r0 + 2] (u)			  ## cfg_btif.c:113:5
 1e0cb4a:    13 60             	r3 = b[r0 + 1] (u)			  ## cfg_btif.c:113:5
 1e0cb4c:    07 60             	r7 = b[r0 + 0] (u)			  ## cfg_btif.c:113:5
 1e0cb4e:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## cfg_btif.c:113:5
 1e0cb52:    c8 fd 40 73       	r7 <= insert(r3, p:8, l:8)			  ## cfg_btif.c:113:5
 1e0cb56:    d0 fd 80 72       	r7 <= insert(r2, p:16, l:16)			  ## cfg_btif.c:113:5
 1e0cb5a:    f7 ef 14 00       	if (r7 == -1) goto 40 <__btif_item_read+0x54 : 1e0cb86 >			  ## cfg_btif.c:113:5
 1e0cb5e:    12 58             	r2 = h[r4 + 2] (u)			  ## cfg_btif.c:120:9
 1e0cb60:    39 d5             	r1 = r7 >> 20			  ## cfg_btif.c:119:30
 1e0cb62:    05 fb 0d ff       	r5 = -243 <bank_code_load_addr+0x1E5661 : 1ffff0d >			  ## cfg_btif.c:119:30
 1e0cb66:    12 f2 10 10       	if (r2 != r1) goto 32 <__btif_item_read+0x58 : 1e0cb8a >			  ## cfg_btif.c:119:30
 1e0cb6a:    46 90             	r6 = r0 + 4			  ## cfg_btif.c:124:26
 1e0cb6c:    60 08             	r0 = r6			  ## cfg_btif.c:124:26
 1e0cb6e:    bf f3 25 9f       	call -49590 <CRC16 : 1e009bc >			  ## cfg_btif.c:124:26
 1e0cb72:    00 04             	r0 = r0.b0 (u)			  ## cfg_btif.c:126:9
 1e0cb74:    c1 05             	r1 = r7.b0 (u)			  ## cfg_btif.c:126:32
 1e0cb76:    10 f2 08 10       	if (r0 != r1) goto 16 <__btif_item_read+0x58 : 1e0cb8a >			  ## cfg_btif.c:126:32
 1e0cb7a:    1e 48             	[r4 + 4] = r6			  ## cfg_btif.c:127:25
 1e0cb7c:    05 70             	r5 = 0
 1e0cb7e:    05 18             	goto 10 <__btif_item_read+0x58 : 1e0cb8a >
 1e0cb80:    05 fb 0b ff       	r5 = -245 <bank_code_load_addr+0x1E565F : 1ffff0b >
 1e0cb84:    02 18             	goto 4 <__btif_item_read+0x58 : 1e0cb8a >
 1e0cb86:    05 fb 08 ff       	r5 = -248 <bank_code_load_addr+0x1E565C : 1ffff08 >
 1e0cb8a:    50 08             	r0 = r5			  ## cfg_btif.c:132:1
 1e0cb8c:    57 01             	{pc, r7-r4} = [sp++]			  ## cfg_btif.c:132:1


syscfg_btif_init:
 1e0cb8e:    79 01             	[--sp] = {rets, r9-r4}			  ## cfg_btif.c:334:0
 1e0cb90:    ea 0b             	sp += -44			  ## cfg_btif.c:334:0
 1e0cb92:    c8 ff b4 1f 00 00 	r8 = 8116 <btif_cfg : 1fb4 >			  ## cfg_btif.c:334:0
 1e0cb98:    80 fc 04 00       	r0 = r8 + 4			  ## cfg_btif.c:336:5
 1e0cb9c:    97 f3 3e d1       	call 3121788 <os_mutex_create : 106e1c >			  ## cfg_btif.c:336:5
 1e0cba0:    c0 ff 0f e0 e0 01 	r0 = 31514639 <update_target_end+0x12F : 1e0e00f >			  ## cfg_btif.c:320:21
 1e0cba6:    6d 16             	call -806 <syscfg_file_open : 1e0c882 >			  ## cfg_btif.c:320:21
 1e0cba8:    04 08             	r4 = r0			  ## cfg_btif.c:320:21
 1e0cbaa:    39 28             	if (r4 == 0) goto 114 <syscfg_btif_init+0x90 : 1e0cc1e >
 1e0cbac:    05 a0             	r5 = sp + 0
 1e0cbae:    01 70             	r1 = 0			  ## cfg_btif.c:325:21
 1e0cbb0:    42 72             	r2 = 36			  ## cfg_btif.c:325:21
 1e0cbb2:    50 08             	r0 = r5			  ## cfg_btif.c:325:21
 1e0cbb4:    97 f3 9c d1       	call 3121976 <memset : 106ef0 >			  ## cfg_btif.c:325:21
 1e0cbb8:    40 08             	r0 = r4			  ## cfg_btif.c:326:5
 1e0cbba:    51 08             	r1 = r5			  ## cfg_btif.c:326:5
 1e0cbbc:    80 f3 79 06       	call 3314 <fget_attrs : 1e0d8b2 >			  ## cfg_btif.c:326:5
 1e0cbc0:    20 02             	r0 = [sp+8]			  ## cfg_btif.c:327:30
 1e0cbc2:    10 f6 00 80       	[r8 + 0] = r0			  ## cfg_btif.c:327:18
 1e0cbc6:    40 08             	r0 = r4			  ## cfg_btif.c:328:5
 1e0cbc8:    99 17             	call -206 <syscfg_file_close : 1e0cafc >			  ## cfg_btif.c:328:5
 1e0cbca:    c7 ff 06 e2 e0 01 	r7 = 31515142 <btif_table+0x4 : 1e0e206 >			  ## cfg_btif.c:328:5
 1e0cbd0:    60 76             	r0 = 102			  ## cfg_btif.c:328:5
 1e0cbd2:    c9 ff 00 08 00 00 	r9 = 2048 <report_mmu_tlb_size : 800 >			  ## cfg_btif.c:328:5
 1e0cbd8:    90 f5 24 00       	h[sp+36] = r0			  ## cfg_btif.c:254:22
 1e0cbdc:    40 a2             	r0 = sp + 36			  ## cfg_btif.c:254:22
 1e0cbde:    a9 17             	call -174 <__btif_item_read : 1e0cb32 >			  ## cfg_btif.c:255:15
 1e0cbe0:    00 ff 08 0f 17 00 	if (r0 == -248) goto 46 <syscfg_btif_init+0x86 : 1e0cc14 >
 1e0cbe6:    16 20             	if (r0 == 0) goto 44 <syscfg_btif_init+0x86 : 1e0cc14 >
 1e0cbe8:    00 f6 00 80       	r0 = [r8 + 0]			  ## cfg_btif.c:205:53
 1e0cbec:    80 f3 7c 06       	call 3320 <sdfile_cpu_addr2flash_addr : 1e0d8e8 >			  ## cfg_btif.c:205:18
 1e0cbf0:    06 f9 00 90       	r6 = b[r9 + 0] (u)			  ## cfg_btif.c:210:22
 1e0cbf4:    05 08             	r5 = r0			  ## cfg_btif.c:205:18
 1e0cbf6:    c4 7c             	r4 = 204			  ## cfg_btif.c:210:9
 1e0cbf8:    16 e0 01 00       	if (r6 == 1) goto 2 <syscfg_btif_init+0x70 : 1e0cbfe >
 1e0cbfc:    84 7c             	r4 = 200			  ## cfg_btif.c:210:9
 1e0cbfe:    40 08             	r0 = r4			  ## cfg_btif.c:214:5
 1e0cc00:    51 08             	r1 = r5			  ## cfg_btif.c:214:5
 1e0cc02:    bf f3 31 9f       	call -49566 <norflash_ioctl : 1e00a68 >			  ## cfg_btif.c:214:5
 1e0cc06:    16 e0 05 10       	if (r6 != 1) goto 10 <syscfg_btif_init+0x86 : 1e0cc14 >			  ## cfg_btif.c:214:5
 1e0cc0a:    51 fc 00 01       	r1 = r5 + 256			  ## cfg_btif.c:216:52
 1e0cc0e:    40 08             	r0 = r4			  ## cfg_btif.c:216:9
 1e0cc10:    bf f3 2a 9f       	call -49580 <norflash_ioctl : 1e00a68 >			  ## cfg_btif.c:216:9
 1e0cc14:    80 f7 04 70       	r0 = h[r7 ++= 4] (u)			  ## cfg_btif.c:253:5
 1e0cc18:    df 31             	if (r0 != 0) goto -66 <syscfg_btif_init+0x4A : 1e0cbd8 >			  ## cfg_btif.c:253:5
 1e0cc1a:    00 70             	r0 = 0
 1e0cc1c:    02 18             	goto 4 <syscfg_btif_init+0x94 : 1e0cc22 >
 1e0cc1e:    00 fb 0a ff       	r0 = -246 <bank_code_load_addr+0x1E565E : 1ffff0a >
 1e0cc22:    16 0a             	sp += 44
 1e0cc24:    59 01             	{pc, r9-r4} = [sp++]			  ## cfg_btif.c:342:5


btif_eara_check_id:
 1e0cc26:    c1 ff 06 e2 e0 01 	r1 = 31515142 <btif_table+0x4 : 1e0e206 >			  ## cfg_btif.c:232:0
 1e0cc2c:    62 76             	r2 = 102			  ## cfg_btif.c:232:0
 1e0cc2e:    02 f2 05 00       	if (r2 == r0) goto 10 <btif_eara_check_id+0x16 : 1e0cc3c >			  ## cfg_btif.c:232:0
 1e0cc32:    82 f7 04 10       	r2 = h[r1 ++= 4] (u)			  ## cfg_btif.c:235:5
 1e0cc36:    fb 35             	if (r2 != 0) goto -10 <btif_eara_check_id+0x8 : 1e0cc2e >			  ## cfg_btif.c:235:5
 1e0cc38:    00 70             	r0 = 0
 1e0cc3a:    20 00             	rts			  ## cfg_btif.c:242:5
 1e0cc3c:    10 70             	r0 = 1
 1e0cc3e:    20 00             	rts			  ## cfg_btif.c:242:5


btif_area_read:
 1e0cc40:    78 01             	[--sp] = {rets, r8-r4}			  ## cfg_btif.c:269:0
 1e0cc42:    fc 0b             	sp += -8			  ## cfg_btif.c:269:0
 1e0cc44:    26 08             	r6 = r2			  ## cfg_btif.c:269:0
 1e0cc46:    18 08             	r8 = r1			  ## cfg_btif.c:269:0
 1e0cc48:    01 70             	r1 = 0			  ## cfg_btif.c:269:0
 1e0cc4a:    19 02             	[sp+4] = r1			  ## cfg_btif.c:271:25
 1e0cc4c:    09 02             	[sp] = r1			  ## cfg_btif.c:271:25
 1e0cc4e:    90 f5 00 00       	h[sp] = r0			  ## cfg_btif.c:273:18
 1e0cc52:    c4 ff b8 1f 00 00 	r4 = 8120 <btif_cfg+0x4 : 1fb8 >			  ## cfg_btif.c:273:18
 1e0cc58:    f1 07             	r1 = -1			  ## cfg_btif.c:275:5
 1e0cc5a:    40 08             	r0 = r4			  ## cfg_btif.c:275:5
 1e0cc5c:    97 f3 e2 d0       	call 3121604 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:275:5
 1e0cc60:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:275:5
 1e0cc62:    67 17             	call -306 <__btif_item_read : 1e0cb32 >			  ## cfg_btif.c:277:11
 1e0cc64:    07 08             	r7 = r0			  ## cfg_btif.c:277:11
 1e0cc66:    0c 3e             	if (r7 != 0) goto 24 <btif_area_read+0x40 : 1e0cc80 >
 1e0cc68:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:280:29
 1e0cc6c:    07 fb 0f ff       	r7 = -241 <bank_code_load_addr+0x1E5663 : 1ffff0f >			  ## cfg_btif.c:280:29
 1e0cc70:    65 f2 06 80       	if (r5 > r6) goto 12 <btif_area_read+0x40 : 1e0cc80 >
 1e0cc74:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:283:13
 1e0cc76:    80 08             	r0 = r8			  ## cfg_btif.c:283:13
 1e0cc78:    52 08             	r2 = r5			  ## cfg_btif.c:283:13
 1e0cc7a:    97 f3 33 d1       	call 3121766 <memcpy : 106ee4 >			  ## cfg_btif.c:283:13
 1e0cc7e:    57 08             	r7 = r5			  ## cfg_btif.c:283:13
 1e0cc80:    40 08             	r0 = r4			  ## cfg_btif.c:288:5
 1e0cc82:    97 f3 d1 d0       	call 3121570 <os_mutex_post : 106e28 >			  ## cfg_btif.c:288:5
 1e0cc86:    70 08             	r0 = r7			  ## cfg_btif.c:290:5
 1e0cc88:    04 0a             	sp += 8			  ## cfg_btif.c:290:5
 1e0cc8a:    58 01             	{pc, r8-r4} = [sp++]			  ## cfg_btif.c:290:5


btif_area_write:
 1e0cc8c:    7e 01             	[--sp] = {rets, r14-r4}			  ## cfg_btif.c:295:0
 1e0cc8e:    fc 0b             	sp += -8			  ## cfg_btif.c:295:0
 1e0cc90:    24 08             	r4 = r2			  ## cfg_btif.c:295:0
 1e0cc92:    19 08             	r9 = r1			  ## cfg_btif.c:295:0
 1e0cc94:    05 08             	r5 = r0			  ## cfg_btif.c:295:0
 1e0cc96:    c8 ff b8 1f 00 00 	r8 = 8120 <btif_cfg+0x4 : 1fb8 >			  ## cfg_btif.c:295:0
 1e0cc9c:    f1 07             	r1 = -1			  ## cfg_btif.c:301:5
 1e0cc9e:    80 08             	r0 = r8			  ## cfg_btif.c:301:5
 1e0cca0:    97 f3 c0 d0       	call 3121536 <os_mutex_pend : 106e24 >			  ## cfg_btif.c:301:5
 1e0cca4:    95 f5 00 00       	h[sp] = r5			  ## cfg_btif.c:303:18
 1e0cca8:    00 a0             	r0 = sp + 0			  ## cfg_btif.c:303:18
 1e0ccaa:    43 17             	call -378 <__btif_item_read : 1e0cb32 >			  ## cfg_btif.c:304:11
 1e0ccac:    01 ff 08 0f 50 00 	if (r0 != -248) goto 160 <btif_area_write+0xC6 : 1e0cd52 >
 1e0ccb2:    00 a0             	r0 = sp + 0
 1e0ccb4:    28 17             	call -432 <btif_cfg_get_info : 1e0cb06 >			  ## cfg_btif.c:146:5
 1e0ccb6:    85 f5 02 00       	r5 = h[sp+2] (u)			  ## cfg_btif.c:147:16
 1e0ccba:    57 08             	r7 = r5			  ## cfg_btif.c:149:17
 1e0ccbc:    54 f2 01 80       	if (r4 > r5) goto 2 <btif_area_write+0x36 : 1e0ccc2 >			  ## cfg_btif.c:149:17
 1e0ccc0:    47 08             	r7 = r4			  ## cfg_btif.c:149:17
 1e0ccc2:    4b 9a             	r11 = r5 + 4			  ## cfg_btif.c:151:37
 1e0ccc4:    b0 08             	r0 = r11			  ## cfg_btif.c:152:16
 1e0ccc6:    bf f3 cb ec       	call -9834 <malloc : 1e0a660 >			  ## cfg_btif.c:152:16
 1e0ccca:    06 08             	r6 = r0			  ## cfg_btif.c:152:16
 1e0cccc:    48 2c             	if (r6 == 0) goto 144 <btif_area_write+0xD2 : 1e0cd5e >
 1e0ccce:    c0 ff 0f e0 e0 01 	r0 = 31514639 <update_target_end+0x12F : 1e0e00f >			  ## cfg_btif.c:157:21
 1e0ccd4:    d6 15             	call -1108 <syscfg_file_open : 1e0c882 >			  ## cfg_btif.c:157:21
 1e0ccd6:    0a 08             	r10 = r0			  ## cfg_btif.c:157:21
 1e0ccd8:    45 20             	if (r0 == 0) goto 138 <btif_area_write+0xD8 : 1e0cd64 >
 1e0ccda:    01 70             	r1 = 0			  ## cfg_btif.c:164:5
 1e0ccdc:    60 08             	r0 = r6			  ## cfg_btif.c:164:5
 1e0ccde:    b2 08             	r2 = r11			  ## cfg_btif.c:164:5
 1e0cce0:    97 f3 06 d1       	call 3121676 <memset : 106ef0 >			  ## cfg_btif.c:164:5
 1e0cce4:    80 f5 00 00       	r0 = h[sp] (u)			  ## cfg_btif.c:167:18
 1e0cce8:    00 c2             	r0 = r0 << 8			  ## cfg_btif.c:167:18
 1e0ccea:    c1 ff 00 ff 0f 00 	r1 = 1048320 <text_size+0xE7D20 : fff00 >			  ## cfg_btif.c:168:19
 1e0ccf0:    50 b3             	r0 &= r1			  ## cfg_btif.c:168:19
 1e0ccf2:    cc fd a0 05       	r0 <= insert(r5, p:20, l:12)			  ## cfg_btif.c:168:19
 1e0ccf6:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:169:5
 1e0ccf8:    f2 fd c0 c0       	r12 = r0 >> 24			  ## cfg_btif.c:169:5
 1e0ccfc:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:169:5
 1e0cd00:    f2 fd 80 d0       	r13 = r0 >> 16			  ## cfg_btif.c:169:5
 1e0cd04:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:169:5
 1e0cd08:    f2 fd 40 e0       	r14 = r0 >> 8			  ## cfg_btif.c:169:5
 1e0cd0c:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:169:5
 1e0cd10:    44 9c             	r4 = r6 + 4			  ## cfg_btif.c:170:21
 1e0cd12:    40 08             	r0 = r4			  ## cfg_btif.c:170:5
 1e0cd14:    91 08             	r1 = r9			  ## cfg_btif.c:170:5
 1e0cd16:    72 08             	r2 = r7			  ## cfg_btif.c:170:5
 1e0cd18:    97 f3 e4 d0       	call 3121608 <memcpy : 106ee4 >			  ## cfg_btif.c:170:5
 1e0cd1c:    31 fd f0 5a       	r1 = r5 & 4294905855			  ## cfg_btif.c:172:21
 1e0cd20:    40 08             	r0 = r4			  ## cfg_btif.c:172:21
 1e0cd22:    bf f3 4b 9e       	call -50026 <CRC16 : 1e009bc >			  ## cfg_btif.c:172:21
 1e0cd26:    1c f9 03 60       	b[r6 + 3] = r12			  ## cfg_btif.c:174:5
 1e0cd2a:    1d f9 02 60       	b[r6 + 2] = r13			  ## cfg_btif.c:174:5
 1e0cd2e:    1e f9 01 60       	b[r6 + 1] = r14			  ## cfg_btif.c:174:5
 1e0cd32:    08 6c             	b[r6 + 0] = r0			  ## cfg_btif.c:174:5
 1e0cd34:    11 02             	r1 = [sp+4]			  ## cfg_btif.c:176:31
 1e0cd36:    02 70             	r2 = 0			  ## cfg_btif.c:176:5
 1e0cd38:    a0 08             	r0 = r10			  ## cfg_btif.c:176:5
 1e0cd3a:    80 f3 30 05       	call 2656 <fseek : 1e0d79e >			  ## cfg_btif.c:176:5
 1e0cd3e:    a0 08             	r0 = r10			  ## cfg_btif.c:178:11
 1e0cd40:    61 08             	r1 = r6			  ## cfg_btif.c:178:11
 1e0cd42:    b2 08             	r2 = r11			  ## cfg_btif.c:178:11
 1e0cd44:    80 f3 51 05       	call 2722 <fwrite : 1e0d7ea >			  ## cfg_btif.c:178:11
 1e0cd48:    b0 f2 0e 00       	if (r0 == r11) goto 28 <btif_area_write+0xDC : 1e0cd68 >
 1e0cd4c:    07 fb 0e ff       	r7 = -242 <bank_code_load_addr+0x1E5662 : 1ffff0e >
 1e0cd50:    0b 18             	goto 22 <btif_area_write+0xDC : 1e0cd68 >
 1e0cd52:    80 08             	r0 = r8			  ## cfg_btif.c:307:9
 1e0cd54:    97 f3 68 d0       	call 3121360 <os_mutex_post : 106e28 >			  ## cfg_btif.c:307:9
 1e0cd58:    07 fb 09 ff       	r7 = -247 <bank_code_load_addr+0x1E565D : 1ffff09 >			  ## cfg_btif.c:307:9
 1e0cd5c:    0d 18             	goto 26 <btif_area_write+0xEC : 1e0cd78 >			  ## cfg_btif.c:307:9
 1e0cd5e:    07 fb 10 ff       	r7 = -240 <bank_code_load_addr+0x1E5664 : 1ffff10 >
 1e0cd62:    07 18             	goto 14 <btif_area_write+0xE6 : 1e0cd72 >
 1e0cd64:    07 fb 0a ff       	r7 = -246 <bank_code_load_addr+0x1E565E : 1ffff0a >
 1e0cd68:    60 08             	r0 = r6			  ## cfg_btif.c:188:9
 1e0cd6a:    bf f3 8c ec       	call -9960 <free : 1e0a686 >			  ## cfg_btif.c:188:9
 1e0cd6e:    a0 08             	r0 = r10			  ## cfg_btif.c:190:5
 1e0cd70:    c5 16             	call -630 <syscfg_file_close : 1e0cafc >			  ## cfg_btif.c:190:5
 1e0cd72:    80 08             	r0 = r8			  ## cfg_btif.c:313:5
 1e0cd74:    97 f3 58 d0       	call 3121328 <os_mutex_post : 106e28 >			  ## cfg_btif.c:313:5
 1e0cd78:    70 08             	r0 = r7			  ## cfg_btif.c:316:1
 1e0cd7a:    04 0a             	sp += 8			  ## cfg_btif.c:316:1
 1e0cd7c:    5e 01             	{pc, r14-r4} = [sp++]			  ## cfg_btif.c:316:1


sdfile_version:
 1e0cd7e:    20 fb 02 0b       	r0 = 131072			  ## sdfile_new.c:24:0
 1e0cd82:    20 00             	rts			  ## sdfile_new.c:24:1


sdfile_strcase_cmp:
 1e0cd84:    75 01             	[--sp] = {rets, r5, r4}			  ## sdfile_new.c:205:0
 1e0cd86:    ee 0b             	sp += -36			  ## sdfile_new.c:205:0
 1e0cd88:    14 08             	r4 = r1			  ## sdfile_new.c:205:0
 1e0cd8a:    01 08             	r1 = r0			  ## sdfile_new.c:205:0
 1e0cd8c:    05 70             	r5 = 0			  ## sdfile_new.c:205:0
 1e0cd8e:    d5 f5 23 00       	b[sp+35] = r5			  ## sdfile_new.c:210:5
 1e0cd92:    30 a1             	r0 = sp + 19			  ## sdfile_new.c:210:5
 1e0cd94:    02 71             	r2 = 16			  ## sdfile_new.c:210:5
 1e0cd96:    97 f3 a5 d0       	call 3121482 <memcpy : 106ee4 >			  ## sdfile_new.c:210:5
 1e0cd9a:    d5 f5 12 00       	b[sp+18] = r5			  ## sdfile_new.c:211:5
 1e0cd9e:    20 a0             	r0 = sp + 2			  ## sdfile_new.c:211:5
 1e0cda0:    02 71             	r2 = 16			  ## sdfile_new.c:211:5
 1e0cda2:    41 08             	r1 = r4			  ## sdfile_new.c:211:5
 1e0cda4:    97 f3 9e d0       	call 3121468 <memcpy : 106ee4 >			  ## sdfile_new.c:211:5
 1e0cda8:    30 a1             	r0 = sp + 19
 1e0cdaa:    00 fa 00 05       	r0 = b[r0+r5] (u)			  ## sdfile_new.c:169:14
 1e0cdae:    01 fc 9f ff       	r1 = r0 + -97			  ## sdfile_new.c:169:27
 1e0cdb2:    41 04             	r1 = r1.b0 (u)			  ## sdfile_new.c:169:27
 1e0cdb4:    91 e1 04 80       	if (r1 > 25) goto 8 <sdfile_strcase_cmp+0x3C : 1e0cdc0 >			  ## sdfile_new.c:169:27
 1e0cdb8:    00 8e             	r0 += -32			  ## sdfile_new.c:170:31
 1e0cdba:    31 a1             	r1 = sp + 19			  ## sdfile_new.c:170:31
 1e0cdbc:    10 fa 00 15       	b[r1+r5] = r0			  ## sdfile_new.c:170:18
 1e0cdc0:    15 80             	r5 += 1			  ## sdfile_new.c:168:5
 1e0cdc2:    05 e1 f1 1f       	if (r5 != 16) goto -30 <sdfile_strcase_cmp+0x24 : 1e0cda8 >			  ## sdfile_new.c:168:5
 1e0cdc6:    00 70             	r0 = 0
 1e0cdc8:    21 a0             	r1 = sp + 2
 1e0cdca:    01 fa 00 10       	r1 = b[r1+r0] (u)			  ## sdfile_new.c:169:14
 1e0cdce:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:169:27
 1e0cdd2:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:169:27
 1e0cdd4:    92 e1 04 80       	if (r2 > 25) goto 8 <sdfile_strcase_cmp+0x5C : 1e0cde0 >			  ## sdfile_new.c:169:27
 1e0cdd8:    01 8e             	r1 += -32			  ## sdfile_new.c:170:31
 1e0cdda:    22 a0             	r2 = sp + 2			  ## sdfile_new.c:170:31
 1e0cddc:    11 fa 00 20       	b[r2+r0] = r1			  ## sdfile_new.c:170:18
 1e0cde0:    10 80             	r0 += 1			  ## sdfile_new.c:168:5
 1e0cde2:    00 e1 f1 1f       	if (r0 != 16) goto -30 <sdfile_strcase_cmp+0x44 : 1e0cdc8 >			  ## sdfile_new.c:168:5
 1e0cde6:    00 70             	r0 = 0
 1e0cde8:    01 7f             	r1 = 240
 1e0cdea:    32 a1             	r2 = sp + 19
 1e0cdec:    23 a0             	r3 = sp + 2
 1e0cdee:    84 f9 01 20       	r4 = b[r2 ++= 1] (u)
 1e0cdf2:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <sdfile_strcase_cmp+0x80 : 1e0ce04 >			  ## sdfile_new.c:181:13
 1e0cdf8:    05 70             	r5 = 0			  ## sdfile_new.c:182:17
 1e0cdfa:    e4 e2 01 00       	if (r4 == 46) goto 2 <sdfile_strcase_cmp+0x7C : 1e0ce00 >			  ## sdfile_new.c:182:17
 1e0cdfe:    05 08             	r5 = r0			  ## sdfile_new.c:182:17
 1e0ce00:    50 08             	r0 = r5
 1e0ce02:    09 18             	goto 18 <sdfile_strcase_cmp+0x92 : 1e0ce16 >
 1e0ce04:    05 66             	r5 = b[r3 + 0] (u)			  ## sdfile_new.c:185:28
 1e0ce06:    54 f2 03 10       	if (r4 != r5) goto 6 <sdfile_strcase_cmp+0x8C : 1e0ce10 >			  ## sdfile_new.c:185:28
 1e0ce0a:    00 70             	r0 = 0
 1e0ce0c:    04 38             	if (r4 != 0) goto 8 <sdfile_strcase_cmp+0x92 : 1e0ce16 >
 1e0ce0e:    09 18             	goto 18 <sdfile_strcase_cmp+0x9E : 1e0ce22 >
 1e0ce10:    10 70             	r0 = 1
 1e0ce12:    a5 e2 08 10       	if (r5 != 42) goto 16 <sdfile_strcase_cmp+0xA2 : 1e0ce26 >
 1e0ce16:    11 80             	r1 += 1			  ## sdfile_new.c:180:5
 1e0ce18:    13 80             	r3 += 1			  ## sdfile_new.c:198:12
 1e0ce1a:    61 ff ff 19 e7 ff 	if ((r1 & 255) != 0) goto -50 <sdfile_strcase_cmp+0x6A : 1e0cdee >
 1e0ce20:    00 70             	r0 = 0
 1e0ce22:    12 0a             	sp += 36
 1e0ce24:    55 01             	{pc, r5, r4} = [sp++]			  ## sdfile_new.c:218:5
 1e0ce26:    00 70             	r0 = 0
 1e0ce28:    f5 e3 fb 0f       	if (r5 == 63) goto -10 <sdfile_strcase_cmp+0x9E : 1e0ce22 >
 1e0ce2c:    f0 07             	r0 = -1
 1e0ce2e:    f9 1f             	goto -14 <sdfile_strcase_cmp+0x9E : 1e0ce22 >


__sdfile_get_part_addr:
 1e0ce30:    79 01             	[--sp] = {rets, r9-r4}			  ## sdfile_new.c:251:0
 1e0ce32:    f0 0b             	sp += -32			  ## sdfile_new.c:251:0
 1e0ce34:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:253:29
 1e0ce3a:    05 f6 9c 11       	r5 = [r1 + 412]			  ## sdfile_new.c:253:29
 1e0ce3e:    06 08             	r6 = r0
 1e0ce40:    08 70             	r8 = 0
 1e0ce42:    20 2a             	if (r5 == 0) goto 64 <__sdfile_get_part_addr+0x54 : 1e0ce84 >
 1e0ce44:    00 a0             	r0 = sp + 0
 1e0ce46:    07 91             	r7 = r0 + 16
 1e0ce48:    c4 ff a8 df e0 01 	r4 = 31514536 <update_target_end+0xC8 : 1e0dfa8 >
 1e0ce4e:    c9 ff b6 df e0 01 	r9 = 31514550 <update_target_end+0xD6 : 1e0dfb6 >
 1e0ce54:    00 a0             	r0 = sp + 0
 1e0ce56:    02 72             	r2 = 32			  ## sdfile_new.c:259:9
 1e0ce58:    51 08             	r1 = r5			  ## sdfile_new.c:259:9
 1e0ce5a:    97 f3 43 d0       	call 3121286 <memcpy : 106ee4 >			  ## sdfile_new.c:259:9
 1e0ce5e:    70 08             	r0 = r7			  ## sdfile_new.c:260:18
 1e0ce60:    41 08             	r1 = r4			  ## sdfile_new.c:260:18
 1e0ce62:    90 17             	call -224 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:260:18
 1e0ce64:    04 20             	if (r0 == 0) goto 8 <__sdfile_get_part_addr+0x3E : 1e0ce6e >			  ## sdfile_new.c:260:18
 1e0ce66:    70 08             	r0 = r7			  ## sdfile_new.c:260:73
 1e0ce68:    91 08             	r1 = r9			  ## sdfile_new.c:260:73
 1e0ce6a:    8c 17             	call -232 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:260:73
 1e0ce6c:    0a 30             	if (r0 != 0) goto 20 <__sdfile_get_part_addr+0x52 : 1e0ce82 >			  ## sdfile_new.c:260:73
 1e0ce6e:    60 08             	r0 = r6			  ## sdfile_new.c:264:18
 1e0ce70:    71 08             	r1 = r7			  ## sdfile_new.c:264:18
 1e0ce72:    88 17             	call -240 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:264:18
 1e0ce74:    06 20             	if (r0 == 0) goto 12 <__sdfile_get_part_addr+0x52 : 1e0ce82 >			  ## sdfile_new.c:264:18
 1e0ce76:    20 02             	r0 = [sp+8]			  ## sdfile_new.c:267:27
 1e0ce78:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:268:20
 1e0ce7c:    05 09             	r5 += r0			  ## sdfile_new.c:267:19
 1e0ce7e:    ea 23             	if (r1 == 0) goto -44 <__sdfile_get_part_addr+0x24 : 1e0ce54 >
 1e0ce80:    01 18             	goto 2 <__sdfile_get_part_addr+0x54 : 1e0ce84 >
 1e0ce82:    58 08             	r8 = r5
 1e0ce84:    80 08             	r0 = r8			  ## sdfile_new.c:271:1
 1e0ce86:    10 0a             	sp += 32			  ## sdfile_new.c:271:1
 1e0ce88:    59 01             	{pc, r9-r4} = [sp++]			  ## sdfile_new.c:271:1


mount:
 1e0ce8a:    7b 01             	[--sp] = {rets, r11-r4}			  ## vfs.c:177:0
 1e0ce8c:    3a 08             	r10 = r3			  ## vfs.c:177:0
 1e0ce8e:    26 08             	r6 = r2			  ## vfs.c:177:0
 1e0ce90:    18 08             	r8 = r1			  ## vfs.c:177:0
 1e0ce92:    09 70             	r9 = 0			  ## vfs.c:177:0
 1e0ce94:    0b 70             	r11 = 0			  ## vfs.c:177:0
 1e0ce96:    05 20             	if (r0 == 0) goto 10 <mount+0x18 : 1e0cea2 >			  ## vfs.c:177:0
 1e0ce98:    91 02             	r1 = [sp+36]			  ## vfs.c:177:0
 1e0ce9a:    80 f3 4a 05       	call 2708 <dev_open : 1e0d932 >			  ## vfs.c:183:14
 1e0ce9e:    0b 08             	r11 = r0			  ## vfs.c:183:14
 1e0cea0:    32 20             	if (r0 == 0) goto 100 <mount+0x7C : 1e0cf06 >
 1e0cea2:    00 7a             	r0 = 160			  ## vfs.c:189:27
 1e0cea4:    bf f3 e1 eb       	call -10302 <zalloc : 1e0a66a >			  ## vfs.c:189:27
 1e0cea8:    05 08             	r5 = r0			  ## vfs.c:189:27
 1e0ceaa:    40 2a             	if (r5 == 0) goto 128 <mount+0xA2 : 1e0cf2c >			  ## vfs.c:189:27
 1e0ceac:    1b f6 0c 50       	[r5 + 12] = r11			  ## vfs.c:193:16
 1e0ceb0:    14 70             	r4 = 1			  ## vfs.c:193:16
 1e0ceb2:    14 f9 9c 50       	b[r5 + 156] = r4			  ## vfs.c:194:19
 1e0ceb6:    97 f3 71 cf       	call 3120866 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e0ceba:    08 00             	csync			  ## atomic.h:47:5
 1e0cebc:    2c 4b             	[r5 + 72] = r4			  ## atomic.h:49:16
 1e0cebe:    97 f3 6b cf       	call 3120854 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e0cec2:    50 fc 4c 00       	r0 = r5 + 76			  ## vfs.c:196:26
 1e0cec6:    97 f3 a9 cf       	call 3120978 <os_mutex_create : 106e1c >			  ## vfs.c:196:5
 1e0ceca:    c7 ff b8 dd e0 01 	r7 = 31514040 <vfs_ops_end : 1e0ddb8 >			  ## vfs.c:196:5
 1e0ced0:    c4 ff 44 dd e0 01 	r4 = 31513924 <vfs_ops_begin : 1e0dd44 >			  ## vfs.c:196:5
 1e0ced6:    74 f2 0d 20       	if (r4 >= r7) goto 26 <mount+0x6A : 1e0cef4 >
 1e0ceda:    00 48             	r0 = [r4 + 0]			  ## vfs.c:199:26
 1e0cedc:    61 08             	r1 = r6			  ## vfs.c:199:14
 1e0cede:    97 f3 09 d0       	call 3121170 <strcmp : 106ef4 >			  ## vfs.c:199:14
 1e0cee2:    05 30             	if (r0 != 0) goto 10 <mount+0x64 : 1e0ceee >			  ## vfs.c:199:14
 1e0cee4:    12 48             	r2 = [r4 + 4]			  ## vfs.c:200:27
 1e0cee6:    50 08             	r0 = r5			  ## vfs.c:200:22
 1e0cee8:    a1 08             	r1 = r10			  ## vfs.c:200:22
 1e0ceea:    82 00             	call r2			  ## vfs.c:200:22
 1e0ceec:    0d 20             	if (r0 == 0) goto 26 <mount+0x7E : 1e0cf08 >			  ## vfs.c:200:22
 1e0ceee:    44 87             	r4 += 116			  ## vfs.c:198:5
 1e0cef0:    74 f2 f3 3f       	if (r4 < r7) goto -26 <mount+0x50 : 1e0ceda >
 1e0cef4:    0b e0 03 00       	if (r11 == 0) goto 6 <mount+0x74 : 1e0cefe >
 1e0cef8:    b0 08             	r0 = r11			  ## vfs.c:212:9
 1e0cefa:    80 f3 46 05       	call 2700 <dev_close : 1e0d98a >			  ## vfs.c:212:9
 1e0cefe:    50 08             	r0 = r5			  ## vfs.c:215:5
 1e0cf00:    bf f3 c1 eb       	call -10366 <free : 1e0a686 >			  ## vfs.c:215:5
 1e0cf04:    13 18             	goto 38 <mount+0xA2 : 1e0cf2c >			  ## vfs.c:215:5
 1e0cf06:    12 18             	goto 36 <mount+0xA2 : 1e0cf2c >
 1e0cf08:    2c 4a             	[r5 + 8] = r4			  ## vfs.c:201:25
 1e0cf0a:    18 f6 04 50       	[r5 + 4] = r8			  ## vfs.c:202:26
 1e0cf0e:    97 f3 45 cf       	call 3120778 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0cf12:    c0 ff 8c 08 00 00 	r0 = 2188 <head.1703 : 88c >			  ## spinlock.h:77:5
 1e0cf18:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e0cf1a:    52 fc 40 00       	r2 = r5 + 64			  ## vfs.c:204:36
 1e0cf1e:    1a 40             	[r0 + 4] = r2			  ## list.h:137:16
 1e0cf20:    08 4b             	[r5 + 64] = r0			  ## list.h:138:16
 1e0cf22:    19 4b             	[r5 + 68] = r1			  ## list.h:139:16
 1e0cf24:    0a 42             	[r1 + 0] = r2			  ## list.h:140:16
 1e0cf26:    97 f3 37 cf       	call 3120750 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0cf2a:    59 08             	r9 = r5
 1e0cf2c:    90 08             	r0 = r9			  ## vfs.c:218:1
 1e0cf2e:    5b 01             	{pc, r11-r4} = [sp++]			  ## vfs.c:218:1


sdfile_init:
 1e0cf30:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:365:0
 1e0cf32:    ec 0b             	sp += -40			  ## sdfile_new.c:365:0
 1e0cf34:    c7 ff 70 20 00 00 	r7 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:365:0
 1e0cf3a:    75 fc 98 01       	r5 = r7 + 408			  ## sdfile_new.c:365:0
 1e0cf3e:    80 9a             	r0 = r5 + 8			  ## sdfile_new.c:367:5
 1e0cf40:    01 70             	r1 = 0			  ## sdfile_new.c:367:5
 1e0cf42:    42 71             	r2 = 20			  ## sdfile_new.c:367:5
 1e0cf44:    97 f3 d4 cf       	call 3121064 <memset : 106ef0 >			  ## sdfile_new.c:367:5
 1e0cf48:    c4 ff 00 08 00 00 	r4 = 2048 <report_mmu_tlb_size : 800 >			  ## sdfile_new.c:367:5
 1e0cf4e:    40 48             	r0 = [r4 + 16]			  ## sdfile_new.c:368:46
 1e0cf50:    51 48             	r1 = [r4 + 20]			  ## sdfile_new.c:369:46
 1e0cf52:    08 4a             	[r5 + 0] = r0			  ## sdfile_new.c:368:30
 1e0cf54:    19 4a             	[r5 + 4] = r1			  ## sdfile_new.c:369:30
 1e0cf56:    c0 ff a8 df e0 01 	r0 = 31514536 <update_target_end+0xC8 : 1e0dfa8 >			  ## sdfile_new.c:371:29
 1e0cf5c:    69 17             	call -302 <__sdfile_get_part_addr : 1e0ce30 >			  ## sdfile_new.c:371:29
 1e0cf5e:    28 4a             	[r5 + 8] = r0			  ## sdfile_new.c:371:27
 1e0cf60:    c0 ff b6 df e0 01 	r0 = 31514550 <update_target_end+0xD6 : 1e0dfb6 >			  ## sdfile_new.c:372:33
 1e0cf66:    64 17             	call -312 <__sdfile_get_part_addr : 1e0ce30 >			  ## sdfile_new.c:372:33
 1e0cf68:    38 4a             	[r5 + 12] = r0			  ## sdfile_new.c:372:31
 1e0cf6a:    c0 ff c3 df e0 01 	r0 = 31514563 <update_target_end+0xE3 : 1e0dfc3 >			  ## sdfile_new.c:373:29
 1e0cf70:    5f 17             	call -322 <__sdfile_get_part_addr : 1e0ce30 >			  ## sdfile_new.c:373:29
 1e0cf72:    48 4a             	[r5 + 16] = r0			  ## sdfile_new.c:373:27
 1e0cf74:    20 4a             	r0 = [r5 + 8]			  ## sdfile_new.c:228:53
 1e0cf76:    71 51             	r1 = h[r0 + 46] (u)			  ## sdfile_new.c:229:16
 1e0cf78:    0e 32             	if (r1 != 0) goto 28 <sdfile_init+0x66 : 1e0cf96 >			  ## sdfile_new.c:229:16
 1e0cf7a:    00 82             	r0 += 32			  ## sdfile_new.c:228:67
 1e0cf7c:    06 fc 2e 00       	r6 = r0 + 46			  ## sdfile_new.c:230:40
 1e0cf80:    c5 ff c7 df e0 01 	r5 = 31514567 <update_target_end+0xE7 : 1e0dfc7 >			  ## sdfile_new.c:230:40
 1e0cf86:    61 fc e2 ff       	r1 = r6 + -30			  ## sdfile_new.c:230:15
 1e0cf8a:    50 08             	r0 = r5			  ## sdfile_new.c:230:15
 1e0cf8c:    fb 16             	call -522 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:230:15
 1e0cf8e:    0a 20             	if (r0 == 0) goto 20 <sdfile_init+0x74 : 1e0cfa4 >			  ## sdfile_new.c:231:13
 1e0cf90:    80 f7 20 60       	r0 = h[r6 ++= 32] (u)			  ## sdfile_new.c:229:16
 1e0cf94:    f8 21             	if (r0 == 0) goto -16 <sdfile_init+0x56 : 1e0cf86 >
 1e0cf96:    8f f3 b3 b1       	call 2057062 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0cf9a:    04 fb 04 ff       	r4 = -252 <bank_code_load_addr+0x1E5658 : 1ffff04 >
 1e0cf9e:    40 08             	r0 = r4			  ## sdfile_new.c:414:1
 1e0cfa0:    14 0a             	sp += 40			  ## sdfile_new.c:414:1
 1e0cfa2:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:414:1
 1e0cfa4:    00 f6 d6 6f       	r0 = [r6 + -42]			  ## sdfile_new.c:232:43
 1e0cfa8:    18 48             	[r4 + 4] = r0			  ## sdfile_new.c:232:35
 1e0cfaa:    00 f6 da 6f       	r0 = [r6 + -38]			  ## sdfile_new.c:233:42
 1e0cfae:    38 48             	[r4 + 12] = r0			  ## sdfile_new.c:233:34
 1e0cfb0:    00 70             	r0 = 0			  ## sdfile_new.c:383:5
 1e0cfb2:    05 70             	r5 = 0			  ## sdfile_new.c:383:5
 1e0cfb4:    bf f3 ae b2       	call -39588 <norflash_open : 1e03514 >			  ## sdfile_new.c:383:5
 1e0cfb8:    c0 ff 01 56 04 40 	r0 = 1074025985 <text_size+0x2D421 : 45601 >			  ## sdfile_new.c:384:5
 1e0cfbe:    41 08             	r1 = r4			  ## sdfile_new.c:384:5
 1e0cfc0:    bf f3 52 9d       	call -50524 <norflash_ioctl : 1e00a68 >			  ## sdfile_new.c:384:5
 1e0cfc4:    1d 02             	[sp+4] = r5			  ## sdfile_new.c:2470:9
 1e0cfc6:    41 a0             	r1 = sp + 4			  ## sdfile_new.c:2470:9
 1e0cfc8:    70 76             	r0 = 103			  ## sdfile_new.c:2471:5
 1e0cfca:    bf f3 4d 9d       	call -50534 <norflash_ioctl : 1e00a68 >			  ## sdfile_new.c:2471:5
 1e0cfce:    00 f6 a0 71       	r0 = [r7 + 416]			  ## sdfile_new.c:296:28
 1e0cfd2:    81 a0             	r1 = sp + 8
 1e0cfd4:    06 fd 02 19       	r6 = r1 | 2
 1e0cfd8:    05 08             	r5 = r0
 1e0cfda:    80 a0             	r0 = sp + 8
 1e0cfdc:    02 72             	r2 = 32			  ## sdfile_new.c:299:9
 1e0cfde:    51 08             	r1 = r5			  ## sdfile_new.c:299:9
 1e0cfe0:    97 f3 80 cf       	call 3120896 <memcpy : 106ee4 >			  ## sdfile_new.c:299:9
 1e0cfe4:    e1 71             	r1 = 30			  ## sdfile_new.c:301:20
 1e0cfe6:    60 08             	r0 = r6			  ## sdfile_new.c:301:20
 1e0cfe8:    bf f3 e8 9c       	call -50736 <CRC16 : 1e009bc >			  ## sdfile_new.c:301:20
 1e0cfec:    81 f5 08 00       	r1 = h[sp+8] (u)			  ## sdfile_new.c:302:34
 1e0cff0:    10 f2 1c 10       	if (r0 != r1) goto 56 <sdfile_init+0xFC : 1e0d02c >			  ## sdfile_new.c:302:34
 1e0cff4:    41 02             	r1 = [sp+16]			  ## sdfile_new.c:308:30
 1e0cff6:    82 f5 16 00       	r2 = h[sp+22] (u)			  ## sdfile_new.c:309:23
 1e0cffa:    40 b3             	r0 = r1 + r5			  ## sdfile_new.c:308:18
 1e0cffc:    ed 25             	if (r2 == 0) goto -38 <sdfile_init+0xA8 : 1e0cfd8 >
 1e0cffe:    70 fc 28 01       	r0 = r7 + 296
 1e0d002:    c2 41             	r2 = [r0 + 112]			  ## sdfile_new.c:163:48
 1e0d004:    06 68             	r6 = b[r4 + 0] (u)			  ## sdfile_new.c:343:26
 1e0d006:    d4 41             	r4 = [r0 + 116]			  ## sdfile_new.c:163:29
 1e0d008:    03 fb 00 01       	r3 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## sdfile_new.c:343:13
 1e0d00c:    16 e0 02 00       	if (r6 == 1) goto 4 <sdfile_init+0xE4 : 1e0d014 >
 1e0d010:    03 fb 00 10       	r3 = 4096 <sys_clock_limit+0x74 : 1000 >			  ## sdfile_new.c:343:13
 1e0d014:    66 fb 00 39       	r6 = 0 - r3			  ## sdfile_new.c:347:63
 1e0d018:    24 bb             	r4 = r5 - r4			  ## sdfile_new.c:163:19
 1e0d01a:    42 09             	r2 += r4			  ## sdfile_new.c:163:38
 1e0d01c:    21 09             	r1 += r2			  ## sdfile_new.c:346:36
 1e0d01e:    31 09             	r1 += r3			  ## sdfile_new.c:347:30
 1e0d020:    f1 81             	r1 += 31			  ## sdfile_new.c:347:30
 1e0d022:    51 bd             	r1 &= r6			  ## sdfile_new.c:347:63
 1e0d024:    01 8f             	r1 += -16			  ## sdfile_new.c:350:50
 1e0d026:    02 71             	r2 = 16			  ## sdfile_new.c:350:9
 1e0d028:    bf f3 a1 9c       	call -50878 <norflash_origin_read : 1e0096e >			  ## sdfile_new.c:350:9
 1e0d02c:    04 70             	r4 = 0
 1e0d02e:    c1 ff ca df e0 01 	r1 = 31514570 <update_target_end+0xEA : 1e0dfca >			  ## sdfile_new.c:406:9
 1e0d034:    c2 ff ce df e0 01 	r2 = 31514574 <update_target_end+0xEE : 1e0dfce >			  ## sdfile_new.c:406:9
 1e0d03a:    00 70             	r0 = 0			  ## sdfile_new.c:406:9
 1e0d03c:    03 70             	r3 = 0			  ## sdfile_new.c:406:9
 1e0d03e:    0c 02             	[sp] = r4			  ## sdfile_new.c:406:9
 1e0d040:    24 17             	call -440 <mount : 1e0ce8a >			  ## sdfile_new.c:406:9
 1e0d042:    ad 1f             	goto -166 <sdfile_init+0x6E : 1e0cf9e >			  ## sdfile_new.c:406:9


sdfile_mount:
 1e0d044:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:1027:0
 1e0d046:    c8 ff 70 20 00 00 	r8 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:1027:0
 1e0d04c:    05 f6 a4 81       	r5 = [r8 + 420]			  ## sdfile_new.c:1031:17
 1e0d050:    04 08             	r4 = r0			  ## sdfile_new.c:1031:17
 1e0d052:    80 72             	r0 = 40			  ## fs.h:217:55
 1e0d054:    bf f3 09 eb       	call -10734 <zalloc : 1e0a66a >			  ## fs.h:217:55
 1e0d058:    06 08             	r6 = r0			  ## fs.h:217:55
 1e0d05a:    87 99             	r7 = r4 + 24			  ## fs.h:217:55
 1e0d05c:    01 2c             	if (r6 == 0) goto 2 <sdfile_mount+0x1C : 1e0d060 >			  ## fs.h:217:55
 1e0d05e:    0e 4e             	[r7 + 0] = r6			  ## fs.h:220:17
 1e0d060:    19 2a             	if (r5 == 0) goto 50 <sdfile_mount+0x50 : 1e0d094 >
 1e0d062:    80 72             	r0 = 40			  ## fs.h:217:55
 1e0d064:    bf f3 01 eb       	call -10750 <zalloc : 1e0a66a >			  ## fs.h:217:55
 1e0d068:    05 08             	r5 = r0			  ## fs.h:217:55
 1e0d06a:    01 2a             	if (r5 == 0) goto 2 <sdfile_mount+0x2A : 1e0d06e >			  ## fs.h:217:55
 1e0d06c:    0d 4c             	[r6 + 0] = r5			  ## fs.h:220:17
 1e0d06e:    00 f6 a4 81       	r0 = [r8 + 420]			  ## sdfile_new.c:1034:40
 1e0d072:    18 4c             	[r6 + 4] = r0			  ## sdfile_new.c:1034:30
 1e0d074:    26 81             	r6 += 18			  ## sdfile_new.c:1035:9
 1e0d076:    c1 ff b6 df e0 01 	r1 = 31514550 <update_target_end+0xD6 : 1e0dfb6 >			  ## sdfile_new.c:1035:9
 1e0d07c:    02 71             	r2 = 16			  ## sdfile_new.c:1035:9
 1e0d07e:    60 08             	r0 = r6			  ## sdfile_new.c:1035:9
 1e0d080:    97 f3 30 cf       	call 3120736 <memcpy : 106ee4 >			  ## sdfile_new.c:1035:9
 1e0d084:    60 08             	r0 = r6			  ## sdfile_new.c:1036:27
 1e0d086:    97 f3 39 cf       	call 3120754 <strlen : 106efc >			  ## sdfile_new.c:1036:27
 1e0d08a:    01 70             	r1 = 0			  ## sdfile_new.c:1036:54
 1e0d08c:    11 fa 00 60       	b[r6+r0] = r1			  ## sdfile_new.c:1036:54
 1e0d090:    30 70             	r0 = 3			  ## sdfile_new.c:1036:54
 1e0d092:    02 18             	goto 4 <sdfile_mount+0x54 : 1e0d098 >			  ## sdfile_new.c:1036:54
 1e0d094:    20 70             	r0 = 2
 1e0d096:    65 08             	r5 = r6
 1e0d098:    10 f9 9d 40       	b[r4 + 157] = r0
 1e0d09c:    00 f6 a0 81       	r0 = [r8 + 416]			  ## sdfile_new.c:1043:32
 1e0d0a0:    18 4e             	[r7 + 4] = r0			  ## sdfile_new.c:1043:22
 1e0d0a2:    10 76             	r0 = 97			  ## sdfile_new.c:1044:22
 1e0d0a4:    28 6f             	b[r7 + 18] = r0			  ## sdfile_new.c:1044:22
 1e0d0a6:    00 77             	r0 = 112			  ## sdfile_new.c:1045:22
 1e0d0a8:    38 6f             	b[r7 + 19] = r0			  ## sdfile_new.c:1045:22
 1e0d0aa:    48 6f             	b[r7 + 20] = r0			  ## sdfile_new.c:1046:22
 1e0d0ac:    01 70             	r1 = 0			  ## sdfile_new.c:1046:22
 1e0d0ae:    59 6f             	b[r7 + 21] = r1			  ## sdfile_new.c:1048:22
 1e0d0b0:    00 f6 a8 81       	r0 = [r8 + 424]			  ## sdfile_new.c:1050:32
 1e0d0b4:    18 4a             	[r5 + 4] = r0			  ## sdfile_new.c:1050:22
 1e0d0b6:    20 77             	r0 = 114			  ## sdfile_new.c:1051:22
 1e0d0b8:    28 6b             	b[r5 + 18] = r0			  ## sdfile_new.c:1051:22
 1e0d0ba:    50 76             	r0 = 101			  ## sdfile_new.c:1052:22
 1e0d0bc:    38 6b             	b[r5 + 19] = r0			  ## sdfile_new.c:1052:22
 1e0d0be:    30 77             	r0 = 115			  ## sdfile_new.c:1053:22
 1e0d0c0:    48 6b             	b[r5 + 20] = r0			  ## sdfile_new.c:1053:22
 1e0d0c2:    00 70             	r0 = 0			  ## sdfile_new.c:1057:5
 1e0d0c4:    59 6b             	b[r5 + 21] = r1			  ## sdfile_new.c:1054:22
 1e0d0c6:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:1057:5


__sdfile_path_get_name:
 1e0d0c8:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:421:0
 1e0d0ca:    02 60             	r2 = b[r0 + 0] (u)			  ## sdfile_new.c:425:9
 1e0d0cc:    14 90             	r4 = r0 + 1			  ## sdfile_new.c:426:18
 1e0d0ce:    15 08             	r5 = r1
 1e0d0d0:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0xE : 1e0d0d6 >
 1e0d0d4:    04 08             	r4 = r0			  ## sdfile_new.c:425:9
 1e0d0d6:    f1 72             	r1 = 47			  ## sdfile_new.c:428:11
 1e0d0d8:    40 08             	r0 = r4			  ## sdfile_new.c:428:11
 1e0d0da:    97 f3 15 cf       	call 3120682 <strchr : 106f08 >			  ## sdfile_new.c:428:11
 1e0d0de:    02 20             	if (r0 == 0) goto 4 <__sdfile_path_get_name+0x1C : 1e0d0e4 >			  ## sdfile_new.c:429:9
 1e0d0e0:    26 b1             	r6 = r0 - r4			  ## sdfile_new.c:430:20
 1e0d0e2:    04 18             	goto 8 <__sdfile_path_get_name+0x24 : 1e0d0ec >
 1e0d0e4:    40 08             	r0 = r4			  ## sdfile_new.c:432:16
 1e0d0e6:    97 f3 09 cf       	call 3120658 <strlen : 106efc >			  ## sdfile_new.c:432:16
 1e0d0ea:    06 08             	r6 = r0			  ## sdfile_new.c:432:16
 1e0d0ec:    67 08             	r7 = r6			  ## sdfile_new.c:435:9
 1e0d0ee:    f6 e0 01 b0       	ifs (r6 < 15) goto 2 <__sdfile_path_get_name+0x2C : 1e0d0f4 >			  ## sdfile_new.c:435:9
 1e0d0f2:    f7 70             	r7 = 15			  ## sdfile_new.c:435:9
 1e0d0f4:    50 08             	r0 = r5			  ## sdfile_new.c:438:5
 1e0d0f6:    41 08             	r1 = r4			  ## sdfile_new.c:438:5
 1e0d0f8:    72 08             	r2 = r7			  ## sdfile_new.c:438:5
 1e0d0fa:    97 f3 f3 ce       	call 3120614 <memcpy : 106ee4 >			  ## sdfile_new.c:438:5
 1e0d0fe:    00 70             	r0 = 0			  ## sdfile_new.c:438:5
 1e0d100:    10 fa 00 57       	b[r5+r7] = r0			  ## sdfile_new.c:439:15
 1e0d104:    10 2e             	if (r7 == 0) goto 32 <__sdfile_path_get_name+0x5E : 1e0d126 >			  ## sdfile_new.c:439:15
 1e0d106:    d0 bd             	r0 = ~r6			  ## sdfile_new.c:168:15
 1e0d108:    00 ef 01 c0       	ifs (r0 > -16) goto 2 <__sdfile_path_get_name+0x46 : 1e0d10e >			  ## sdfile_new.c:168:15
 1e0d10c:    00 07             	r0 = -16			  ## sdfile_new.c:168:15
 1e0d10e:    10 80             	r0 += 1			  ## sdfile_new.c:168:15
 1e0d110:    01 6a             	r1 = b[r5 + 0] (u)			  ## sdfile_new.c:169:14
 1e0d112:    12 fc 9f ff       	r2 = r1 + -97			  ## sdfile_new.c:169:27
 1e0d116:    82 04             	r2 = r2.b0 (u)			  ## sdfile_new.c:169:27
 1e0d118:    92 e1 02 80       	if (r2 > 25) goto 4 <__sdfile_path_get_name+0x58 : 1e0d120 >			  ## sdfile_new.c:169:27
 1e0d11c:    01 8e             	r1 += -32			  ## sdfile_new.c:170:31
 1e0d11e:    09 6a             	b[r5 + 0] = r1			  ## sdfile_new.c:170:18
 1e0d120:    10 80             	r0 += 1			  ## sdfile_new.c:168:5
 1e0d122:    15 80             	r5 += 1			  ## sdfile_new.c:172:13
 1e0d124:    f5 31             	if (r0 != 0) goto -22 <__sdfile_path_get_name+0x48 : 1e0d110 >
 1e0d126:    81 b9             	r1 = r4 + r6			  ## sdfile_new.c:441:14
 1e0d128:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:442:9
 1e0d12a:    10 92             	r0 = r1 + 1			  ## sdfile_new.c:443:18
 1e0d12c:    f2 e2 01 00       	if (r2 == 47) goto 2 <__sdfile_path_get_name+0x6A : 1e0d132 >
 1e0d130:    10 08             	r0 = r1			  ## sdfile_new.c:442:9
 1e0d132:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:446:5


sdfile_open_part_dir:
 1e0d134:    7a 01             	[--sp] = {rets, r10-r4}			  ## sdfile_new.c:506:0
 1e0d136:    f0 0b             	sp += -32			  ## sdfile_new.c:506:0
 1e0d138:    24 08             	r4 = r2			  ## sdfile_new.c:506:0
 1e0d13a:    15 08             	r5 = r1			  ## sdfile_new.c:506:0
 1e0d13c:    09 08             	r9 = r0			  ## sdfile_new.c:506:0
 1e0d13e:    c1 ff a8 df e0 01 	r1 = 31514536 <update_target_end+0xC8 : 1e0dfa8 >			  ## sdfile_new.c:512:9
 1e0d144:    40 08             	r0 = r4			  ## sdfile_new.c:512:9
 1e0d146:    1e 16             	call -964 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:512:9
 1e0d148:    c6 ff 70 20 00 00 	r6 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:512:9
 1e0d14e:    12 20             	if (r0 == 0) goto 36 <sdfile_open_part_dir+0x40 : 1e0d174 >			  ## sdfile_new.c:512:9
 1e0d150:    c1 ff b6 df e0 01 	r1 = 31514550 <update_target_end+0xD6 : 1e0dfb6 >			  ## sdfile_new.c:514:16
 1e0d156:    40 08             	r0 = r4			  ## sdfile_new.c:514:16
 1e0d158:    15 16             	call -982 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:514:16
 1e0d15a:    0f 20             	if (r0 == 0) goto 30 <sdfile_open_part_dir+0x46 : 1e0d17a >			  ## sdfile_new.c:514:16
 1e0d15c:    c1 ff c3 df e0 01 	r1 = 31514563 <update_target_end+0xE3 : 1e0dfc3 >			  ## sdfile_new.c:516:16
 1e0d162:    40 08             	r0 = r4			  ## sdfile_new.c:516:16
 1e0d164:    0f 16             	call -994 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:516:16
 1e0d166:    01 08             	r1 = r0			  ## sdfile_new.c:516:16
 1e0d168:    00 fb 01 ff       	r0 = -255 <bank_code_load_addr+0x1E5655 : 1ffff01 >			  ## sdfile_new.c:516:16
 1e0d16c:    3f 32             	if (r1 != 0) goto 126 <sdfile_open_part_dir+0xB8 : 1e0d1ec >			  ## sdfile_new.c:516:16
 1e0d16e:    60 fc a8 01       	r0 = r6 + 424
 1e0d172:    05 18             	goto 10 <sdfile_open_part_dir+0x4A : 1e0d17e >
 1e0d174:    60 fc a0 01       	r0 = r6 + 416
 1e0d178:    02 18             	goto 4 <sdfile_open_part_dir+0x4A : 1e0d17e >
 1e0d17a:    60 fc a4 01       	r0 = r6 + 420
 1e0d17e:    01 f6 08 90       	r1 = [r9 + 8]			  ## sdfile_new.c:521:19
 1e0d182:    08 22             	if (r1 == 0) goto 16 <sdfile_open_part_dir+0x60 : 1e0d194 >
 1e0d184:    00 f6 98 61       	r0 = [r6 + 408]			  ## sdfile_new.c:158:29
 1e0d188:    02 f6 9c 61       	r2 = [r6 + 412]			  ## sdfile_new.c:158:53
 1e0d18c:    20 b2             	r0 = r1 - r0			  ## sdfile_new.c:158:19
 1e0d18e:    86 b0             	r6 = r0 + r2			  ## sdfile_new.c:158:43
 1e0d190:    1a 70             	r10 = 1
 1e0d192:    02 18             	goto 4 <sdfile_open_part_dir+0x64 : 1e0d198 >
 1e0d194:    06 40             	r6 = [r0 + 0]
 1e0d196:    0a 70             	r10 = 0
 1e0d198:    98 fc 04 00       	r8 = r9 + 4			  ## sdfile_new.c:521:14
 1e0d19c:    00 a0             	r0 = sp + 0			  ## sdfile_new.c:521:14
 1e0d19e:    07 91             	r7 = r0 + 16			  ## sdfile_new.c:521:14
 1e0d1a0:    04 fd 02 09       	r4 = r0 | 2			  ## sdfile_new.c:521:14
 1e0d1a4:    00 a0             	r0 = sp + 0
 1e0d1a6:    02 72             	r2 = 32			  ## sdfile_new.c:528:9
 1e0d1a8:    61 08             	r1 = r6			  ## sdfile_new.c:528:9
 1e0d1aa:    97 f3 9b ce       	call 3120438 <memcpy : 106ee4 >			  ## sdfile_new.c:528:9
 1e0d1ae:    e1 71             	r1 = 30			  ## sdfile_new.c:529:13
 1e0d1b0:    40 08             	r0 = r4			  ## sdfile_new.c:529:13
 1e0d1b2:    bf f3 03 9c       	call -51194 <CRC16 : 1e009bc >			  ## sdfile_new.c:529:13
 1e0d1b6:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:529:81
 1e0d1ba:    10 f2 09 10       	if (r0 != r1) goto 18 <sdfile_open_part_dir+0x9C : 1e0d1d0 >			  ## sdfile_new.c:529:81
 1e0d1be:    70 08             	r0 = r7			  ## sdfile_new.c:535:15
 1e0d1c0:    51 08             	r1 = r5			  ## sdfile_new.c:535:15
 1e0d1c2:    e0 15             	call -1088 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:535:15
 1e0d1c4:    08 20             	if (r0 == 0) goto 16 <sdfile_open_part_dir+0xA2 : 1e0d1d6 >
 1e0d1c6:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:547:19
 1e0d1ca:    06 82             	r6 += 32			  ## sdfile_new.c:546:14
 1e0d1cc:    eb 23             	if (r1 == 0) goto -42 <sdfile_open_part_dir+0x70 : 1e0d1a4 >
 1e0d1ce:    0e 18             	goto 28 <sdfile_open_part_dir+0xB8 : 1e0d1ec >
 1e0d1d0:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E5659 : 1ffff05 >
 1e0d1d4:    0b 18             	goto 22 <sdfile_open_part_dir+0xB8 : 1e0d1ec >
 1e0d1d6:    01 a0             	r1 = sp + 0
 1e0d1d8:    02 72             	r2 = 32			  ## sdfile_new.c:537:13
 1e0d1da:    80 08             	r0 = r8			  ## sdfile_new.c:537:13
 1e0d1dc:    97 f3 82 ce       	call 3120388 <memcpy : 106ee4 >			  ## sdfile_new.c:537:13
 1e0d1e0:    0a e0 01 10       	if (r10 != 0) goto 2 <sdfile_open_part_dir+0xB2 : 1e0d1e6 >			  ## sdfile_new.c:537:13
 1e0d1e4:    16 02             	r6 = [sp+4]			  ## sdfile_new.c:538:35
 1e0d1e6:    16 f6 08 90       	[r9 + 8] = r6			  ## sdfile_new.c:538:28
 1e0d1ea:    00 70             	r0 = 0
 1e0d1ec:    10 0a             	sp += 32
 1e0d1ee:    5a 01             	{pc, r10-r4} = [sp++]			  ## sdfile_new.c:550:1


sdfile_for_each_file_in_dir:
 1e0d1f0:    79 01             	[--sp] = {rets, r9-r4}			  ## sdfile_new.c:450:0
 1e0d1f2:    f0 0b             	sp += -32			  ## sdfile_new.c:450:0
 1e0d1f4:    25 08             	r5 = r2			  ## sdfile_new.c:450:0
 1e0d1f6:    18 08             	r8 = r1			  ## sdfile_new.c:450:0
 1e0d1f8:    06 08             	r6 = r0			  ## sdfile_new.c:450:0
 1e0d1fa:    00 a0             	r0 = sp + 0			  ## sdfile_new.c:450:0
 1e0d1fc:    07 91             	r7 = r0 + 16			  ## sdfile_new.c:450:0
 1e0d1fe:    04 fd 02 09       	r4 = r0 | 2			  ## sdfile_new.c:450:0
 1e0d202:    09 72             	r9 = 32			  ## sdfile_new.c:450:0
 1e0d204:    00 a0             	r0 = sp + 0			  ## sdfile_new.c:450:0
 1e0d206:    02 72             	r2 = 32			  ## sdfile_new.c:450:0
 1e0d208:    61 08             	r1 = r6			  ## sdfile_new.c:450:0
 1e0d20a:    97 f3 6b ce       	call 3120342 <memcpy : 106ee4 >			  ## sdfile_new.c:450:0
 1e0d20e:    e1 71             	r1 = 30			  ## sdfile_new.c:450:0
 1e0d210:    40 08             	r0 = r4			  ## sdfile_new.c:450:0
 1e0d212:    bf f3 d3 9b       	call -51290 <CRC16 : 1e009bc >			  ## sdfile_new.c:450:0
 1e0d216:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:450:0
 1e0d21a:    10 f2 09 10       	if (r0 != r1) goto 18 <sdfile_for_each_file_in_dir+0x40 : 1e0d230 >			  ## sdfile_new.c:450:0
 1e0d21e:    70 08             	r0 = r7			  ## sdfile_new.c:463:15
 1e0d220:    51 08             	r1 = r5			  ## sdfile_new.c:463:15
 1e0d222:    b0 15             	call -1184 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:463:15
 1e0d224:    0c 20             	if (r0 == 0) goto 24 <sdfile_for_each_file_in_dir+0x4E : 1e0d23e >
 1e0d226:    80 f5 0e 00       	r0 = h[sp+14] (u)			  ## sdfile_new.c:472:18
 1e0d22a:    12 30             	if (r0 != 0) goto 36 <sdfile_for_each_file_in_dir+0x60 : 1e0d250 >
 1e0d22c:    06 82             	r6 += 32			  ## sdfile_new.c:456:45
 1e0d22e:    ea 1f             	goto -44 <sdfile_for_each_file_in_dir+0x14 : 1e0d204 >
 1e0d230:    f9 8f             	r9 += -1			  ## sdfile_new.c:460:20
 1e0d232:    06 82             	r6 += 32			  ## sdfile_new.c:456:45
 1e0d234:    09 e0 e6 cf       	ifs (r9 > 0) goto -52 <sdfile_for_each_file_in_dir+0x14 : 1e0d204 >
 1e0d238:    04 fb 02 ff       	r4 = -254 <bank_code_load_addr+0x1E5656 : 1ffff02 >
 1e0d23c:    0a 18             	goto 20 <sdfile_for_each_file_in_dir+0x62 : 1e0d252 >
 1e0d23e:    04 70             	r4 = 0
 1e0d240:    08 e0 07 00       	if (r8 == 0) goto 14 <sdfile_for_each_file_in_dir+0x62 : 1e0d252 >
 1e0d244:    01 a0             	r1 = sp + 0
 1e0d246:    02 72             	r2 = 32			  ## sdfile_new.c:467:17
 1e0d248:    80 08             	r0 = r8			  ## sdfile_new.c:467:17
 1e0d24a:    97 f3 4b ce       	call 3120278 <memcpy : 106ee4 >			  ## sdfile_new.c:467:17
 1e0d24e:    01 18             	goto 2 <sdfile_for_each_file_in_dir+0x62 : 1e0d252 >			  ## sdfile_new.c:467:17
 1e0d250:    14 70             	r4 = 1
 1e0d252:    40 08             	r0 = r4			  ## sdfile_new.c:478:1
 1e0d254:    10 0a             	sp += 32			  ## sdfile_new.c:478:1
 1e0d256:    59 01             	{pc, r9-r4} = [sp++]			  ## sdfile_new.c:478:1


sdfile_open_file_in_dir:
 1e0d258:    75 01             	[--sp] = {rets, r5, r4}			  ## sdfile_new.c:568:0
 1e0d25a:    15 08             	r5 = r1			  ## sdfile_new.c:568:0
 1e0d25c:    23 4a             	r3 = [r5 + 8]			  ## sdfile_new.c:571:30
 1e0d25e:    04 08             	r4 = r0			  ## sdfile_new.c:571:30
 1e0d260:    41 98             	r1 = r4 + 4			  ## sdfile_new.c:573:56
 1e0d262:    30 fc 20 00       	r0 = r3 + 32			  ## sdfile_new.c:571:35
 1e0d266:    c4 17             	call -120 <sdfile_for_each_file_in_dir : 1e0d1f0 >			  ## sdfile_new.c:573:11
 1e0d268:    11 30             	if (r0 != 0) goto 34 <sdfile_open_file_in_dir+0x34 : 1e0d28c >
 1e0d26a:    02 69             	r2 = b[r4 + 16] (u)			  ## sdfile_new.c:576:25
 1e0d26c:    21 48             	r1 = [r4 + 8]			  ## sdfile_new.c:576:25
 1e0d26e:    24 f3 02 20       	if ((r2 & 16) != 0) goto 4 <sdfile_open_file_in_dir+0x1E : 1e0d276 >
 1e0d272:    82 9a             	r2 = r5 + 8			  ## sdfile_new.c:571:30
 1e0d274:    08 18             	goto 16 <sdfile_open_file_in_dir+0x2E : 1e0d286 >			  ## sdfile_new.c:571:30
 1e0d276:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >
 1e0d27c:    03 f6 98 21       	r3 = [r2 + 408]			  ## sdfile_new.c:158:29
 1e0d280:    e1 b2             	r1 = r1 - r3			  ## sdfile_new.c:158:19
 1e0d282:    22 fc 9c 01       	r2 = r2 + 412
 1e0d286:    02 44             	r2 = [r2 + 0]
 1e0d288:    21 09             	r1 += r2
 1e0d28a:    29 48             	[r4 + 8] = r1
 1e0d28c:    55 01             	{pc, r5, r4} = [sp++]			  ## sdfile_new.c:586:5


sdfile_open_spc_part_file:
 1e0d28e:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:590:0
 1e0d290:    04 08             	r4 = r0			  ## sdfile_new.c:590:0
 1e0d292:    10 fc 20 00       	r0 = r1 + 32			  ## sdfile_new.c:593:35
 1e0d296:    41 98             	r1 = r4 + 4			  ## sdfile_new.c:595:56
 1e0d298:    ab 17             	call -170 <sdfile_for_each_file_in_dir : 1e0d1f0 >			  ## sdfile_new.c:595:11
 1e0d29a:    04 30             	if (r0 != 0) goto 8 <sdfile_open_spc_part_file+0x16 : 1e0d2a4 >
 1e0d29c:    00 69             	r0 = b[r4 + 16] (u)			  ## sdfile_new.c:598:25
 1e0d29e:    81 fd 08 00       	r0 = uextra(r0, p:1, l:1)			  ## sdfile_new.c:598:13
 1e0d2a2:    f0 8f             	r0 += -1			  ## sdfile_new.c:598:13
 1e0d2a4:    54 01             	{pc, r4} = [sp++]


sdfile_for_each_dir:
 1e0d2a6:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:481:0
 1e0d2a8:    f0 0b             	sp += -32			  ## sdfile_new.c:481:0
 1e0d2aa:    16 08             	r6 = r1			  ## sdfile_new.c:481:0
 1e0d2ac:    08 08             	r8 = r0			  ## sdfile_new.c:481:0
 1e0d2ae:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:484:24
 1e0d2b4:    05 f6 a8 01       	r5 = [r0 + 424]			  ## sdfile_new.c:484:24
 1e0d2b8:    00 a0             	r0 = sp + 0
 1e0d2ba:    07 91             	r7 = r0 + 16
 1e0d2bc:    04 fd 02 09       	r4 = r0 | 2
 1e0d2c0:    00 a0             	r0 = sp + 0
 1e0d2c2:    02 72             	r2 = 32			  ## sdfile_new.c:487:9
 1e0d2c4:    51 08             	r1 = r5			  ## sdfile_new.c:487:9
 1e0d2c6:    97 f3 0d ce       	call 3120154 <memcpy : 106ee4 >			  ## sdfile_new.c:487:9
 1e0d2ca:    e1 71             	r1 = 30			  ## sdfile_new.c:488:13
 1e0d2cc:    40 08             	r0 = r4			  ## sdfile_new.c:488:13
 1e0d2ce:    bf f3 75 9b       	call -51478 <CRC16 : 1e009bc >			  ## sdfile_new.c:488:13
 1e0d2d2:    81 f5 00 00       	r1 = h[sp] (u)			  ## sdfile_new.c:488:81
 1e0d2d6:    10 f2 0c 10       	if (r0 != r1) goto 24 <sdfile_for_each_dir+0x4C : 1e0d2f2 >			  ## sdfile_new.c:488:81
 1e0d2da:    70 08             	r0 = r7			  ## sdfile_new.c:492:15
 1e0d2dc:    61 08             	r1 = r6			  ## sdfile_new.c:492:15
 1e0d2de:    52 15             	call -1372 <sdfile_strcase_cmp : 1e0cd84 >			  ## sdfile_new.c:492:15
 1e0d2e0:    0b 20             	if (r0 == 0) goto 22 <sdfile_for_each_dir+0x52 : 1e0d2f8 >
 1e0d2e2:    20 02             	r0 = [sp+8]			  ## sdfile_new.c:499:22
 1e0d2e4:    81 f5 0e 00       	r1 = h[sp+14] (u)			  ## sdfile_new.c:500:19
 1e0d2e8:    05 09             	r5 += r0			  ## sdfile_new.c:499:14
 1e0d2ea:    ea 23             	if (r1 == 0) goto -44 <sdfile_for_each_dir+0x1A : 1e0d2c0 >
 1e0d2ec:    00 fb 01 ff       	r0 = -255 <bank_code_load_addr+0x1E5655 : 1ffff01 >
 1e0d2f0:    0b 18             	goto 22 <sdfile_for_each_dir+0x62 : 1e0d308 >
 1e0d2f2:    00 fb 05 ff       	r0 = -251 <bank_code_load_addr+0x1E5659 : 1ffff05 >
 1e0d2f6:    08 18             	goto 16 <sdfile_for_each_dir+0x62 : 1e0d308 >
 1e0d2f8:    01 a0             	r1 = sp + 0
 1e0d2fa:    02 72             	r2 = 32			  ## sdfile_new.c:494:13
 1e0d2fc:    80 08             	r0 = r8			  ## sdfile_new.c:494:13
 1e0d2fe:    97 f3 f1 cd       	call 3120098 <memcpy : 106ee4 >			  ## sdfile_new.c:494:13
 1e0d302:    15 f6 04 80       	[r8 + 4] = r5			  ## sdfile_new.c:495:28
 1e0d306:    00 70             	r0 = 0			  ## sdfile_new.c:495:28
 1e0d308:    10 0a             	sp += 32
 1e0d30a:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:503:1


sdfile_open:
 1e0d30c:    7a 01             	[--sp] = {rets, r10-r4}			  ## sdfile_new.c:798:0
 1e0d30e:    c0 0b             	sp += -128			  ## sdfile_new.c:798:0
 1e0d310:    16 08             	r6 = r1			  ## sdfile_new.c:798:0
 1e0d312:    09 08             	r9 = r0			  ## sdfile_new.c:798:0
 1e0d314:    5b 2c             	if (r6 == 0) goto 182 <sdfile_open+0xC0 : 1e0d3cc >			  ## sdfile_new.c:798:0
 1e0d316:    40 72             	r0 = 36			  ## sdfile_new.c:808:31
 1e0d318:    bf f3 a2 e9       	call -11452 <malloc : 1e0a660 >			  ## sdfile_new.c:808:31
 1e0d31c:    05 08             	r5 = r0			  ## sdfile_new.c:808:31
 1e0d31e:    ce 2a             	if (r5 == 0) goto 412 <sdfile_open+0x1B0 : 1e0d4bc >			  ## sdfile_new.c:808:31
 1e0d320:    01 70             	r1 = 0			  ## sdfile_new.c:813:5
 1e0d322:    42 72             	r2 = 36			  ## sdfile_new.c:813:5
 1e0d324:    97 f3 e4 cd       	call 3120072 <memset : 106ef0 >			  ## sdfile_new.c:813:5
 1e0d328:    00 f6 08 90       	r0 = [r9 + 8]			  ## sdfile_new.c:815:24
 1e0d32c:    27 91             	r7 = r0 + 18			  ## sdfile_new.c:815:17
 1e0d32e:    c1 ff d5 df e0 01 	r1 = 31514581 <update_target_end+0xF5 : 1e0dfd5 >			  ## sdfile_new.c:815:10
 1e0d334:    70 08             	r0 = r7			  ## sdfile_new.c:815:10
 1e0d336:    97 f3 dd cd       	call 3120058 <strcmp : 106ef4 >			  ## sdfile_new.c:815:10
 1e0d33a:    ca ff 70 20 00 00 	r10 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:815:10
 1e0d340:    48 20             	if (r0 == 0) goto 144 <sdfile_open+0xC6 : 1e0d3d2 >			  ## sdfile_new.c:815:10
 1e0d342:    c1 ff c3 df e0 01 	r1 = 31514563 <update_target_end+0xE3 : 1e0dfc3 >			  ## sdfile_new.c:817:17
 1e0d348:    70 08             	r0 = r7			  ## sdfile_new.c:817:17
 1e0d34a:    97 f3 d3 cd       	call 3120038 <strcmp : 106ef4 >			  ## sdfile_new.c:817:17
 1e0d34e:    78 20             	if (r0 == 0) goto 240 <sdfile_open+0x134 : 1e0d440 >			  ## sdfile_new.c:817:17
 1e0d350:    c8 ff b6 df e0 01 	r8 = 31514550 <update_target_end+0xD6 : 1e0dfb6 >
 1e0d356:    70 08             	r0 = r7			  ## sdfile_new.c:819:17
 1e0d358:    81 08             	r1 = r8			  ## sdfile_new.c:819:17
 1e0d35a:    97 f3 cb cd       	call 3120022 <strcmp : 106ef4 >			  ## sdfile_new.c:819:17
 1e0d35e:    07 70             	r7 = 0			  ## sdfile_new.c:819:17
 1e0d360:    a7 30             	if (r0 != 0) goto 334 <sdfile_open+0x1A4 : 1e0d4b0 >			  ## sdfile_new.c:819:17
 1e0d362:    77 a2             	r7 = sp + 39
 1e0d364:    01 70             	r1 = 0			  ## sdfile_new.c:665:10
 1e0d366:    12 71             	r2 = 17			  ## sdfile_new.c:665:10
 1e0d368:    70 08             	r0 = r7			  ## sdfile_new.c:665:10
 1e0d36a:    97 f3 c1 cd       	call 3120002 <memset : 106ef0 >			  ## sdfile_new.c:665:10
 1e0d36e:    04 f6 a4 a1       	r4 = [r10 + 420]			  ## sdfile_new.c:669:48
 1e0d372:    c0 a5             	r0 = sp + 92			  ## sdfile_new.c:669:48
 1e0d374:    40 80             	r0 += 4			  ## sdfile_new.c:669:26
 1e0d376:    02 72             	r2 = 32			  ## sdfile_new.c:669:5
 1e0d378:    41 08             	r1 = r4			  ## sdfile_new.c:669:5
 1e0d37a:    97 f3 b3 cd       	call 3119974 <memcpy : 106ee4 >			  ## sdfile_new.c:669:5
 1e0d37e:    9c 03             	[sp+100] = r4			  ## sdfile_new.c:671:19
 1e0d380:    60 08             	r0 = r6			  ## sdfile_new.c:673:16
 1e0d382:    71 08             	r1 = r7			  ## sdfile_new.c:673:16
 1e0d384:    a1 16             	call -702 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:673:16
 1e0d386:    06 08             	r6 = r0			  ## sdfile_new.c:673:16
 1e0d388:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:674:9
 1e0d38a:    8c 20             	if (r0 == 0) goto 280 <sdfile_open+0x198 : 1e0d4a4 >			  ## sdfile_new.c:674:9
 1e0d38c:    c4 a5             	r4 = sp + 92
 1e0d38e:    01 70             	r1 = 0			  ## sdfile_new.c:676:9
 1e0d390:    42 72             	r2 = 36			  ## sdfile_new.c:676:9
 1e0d392:    40 08             	r0 = r4			  ## sdfile_new.c:676:9
 1e0d394:    97 f3 ac cd       	call 3119960 <memset : 106ef0 >			  ## sdfile_new.c:676:9
 1e0d398:    71 a2             	r1 = sp + 39
 1e0d39a:    40 08             	r0 = r4			  ## sdfile_new.c:677:15
 1e0d39c:    82 08             	r2 = r8			  ## sdfile_new.c:677:15
 1e0d39e:    ca 16             	call -620 <sdfile_open_part_dir : 1e0d134 >			  ## sdfile_new.c:677:15
 1e0d3a0:    07 08             	r7 = r0			  ## sdfile_new.c:677:15
 1e0d3a2:    85 3e             	if (r7 != 0) goto 266 <sdfile_open+0x1A2 : 1e0d4ae >
 1e0d3a4:    71 a2             	r1 = sp + 39
 1e0d3a6:    60 08             	r0 = r6			  ## sdfile_new.c:681:20
 1e0d3a8:    8f 16             	call -738 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:681:20
 1e0d3aa:    06 08             	r6 = r0			  ## sdfile_new.c:681:20
 1e0d3ac:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:682:13
 1e0d3ae:    94 20             	if (r0 == 0) goto 296 <sdfile_open+0x1CC : 1e0d4d8 >			  ## sdfile_new.c:682:13
 1e0d3b0:    c0 a5             	r0 = sp + 92
 1e0d3b2:    71 a2             	r1 = sp + 39
 1e0d3b4:    82 08             	r2 = r8			  ## sdfile_new.c:683:19
 1e0d3b6:    be 16             	call -644 <sdfile_open_part_dir : 1e0d134 >			  ## sdfile_new.c:683:19
 1e0d3b8:    07 08             	r7 = r0			  ## sdfile_new.c:683:19
 1e0d3ba:    79 3e             	if (r7 != 0) goto 242 <sdfile_open+0x1A2 : 1e0d4ae >
 1e0d3bc:    74 a2             	r4 = sp + 39
 1e0d3be:    60 08             	r0 = r6			  ## sdfile_new.c:687:24
 1e0d3c0:    41 08             	r1 = r4			  ## sdfile_new.c:687:24
 1e0d3c2:    82 16             	call -764 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:687:24
 1e0d3c4:    c1 a5             	r1 = sp + 92			  ## sdfile_new.c:687:24
 1e0d3c6:    50 08             	r0 = r5			  ## sdfile_new.c:688:19
 1e0d3c8:    42 08             	r2 = r4			  ## sdfile_new.c:688:19
 1e0d3ca:    6f 18             	goto 222 <sdfile_open+0x19E : 1e0d4aa >			  ## sdfile_new.c:688:19
 1e0d3cc:    07 fb 02 ff       	r7 = -254 <bank_code_load_addr+0x1E5656 : 1ffff02 >
 1e0d3d0:    76 18             	goto 236 <sdfile_open+0x1B2 : 1e0d4be >
 1e0d3d2:    77 a2             	r7 = sp + 39
 1e0d3d4:    01 70             	r1 = 0			  ## sdfile_new.c:626:10
 1e0d3d6:    12 71             	r2 = 17			  ## sdfile_new.c:626:10
 1e0d3d8:    70 08             	r0 = r7			  ## sdfile_new.c:626:10
 1e0d3da:    97 f3 89 cd       	call 3119890 <memset : 106ef0 >			  ## sdfile_new.c:626:10
 1e0d3de:    01 f6 a0 a1       	r1 = [r10 + 416]			  ## sdfile_new.c:630:48
 1e0d3e2:    00 a0             	r0 = sp + 0			  ## sdfile_new.c:630:48
 1e0d3e4:    40 80             	r0 += 4			  ## sdfile_new.c:630:26
 1e0d3e6:    02 72             	r2 = 32			  ## sdfile_new.c:630:5
 1e0d3e8:    97 f3 7c cd       	call 3119864 <memcpy : 106ee4 >			  ## sdfile_new.c:630:5
 1e0d3ec:    00 f6 9c a1       	r0 = [r10 + 412]			  ## sdfile_new.c:632:29
 1e0d3f0:    28 02             	[sp+8] = r0			  ## sdfile_new.c:632:19
 1e0d3f2:    60 08             	r0 = r6			  ## sdfile_new.c:634:16
 1e0d3f4:    71 08             	r1 = r7			  ## sdfile_new.c:634:16
 1e0d3f6:    68 16             	call -816 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:634:16
 1e0d3f8:    06 08             	r6 = r0			  ## sdfile_new.c:634:16
 1e0d3fa:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:635:9
 1e0d3fc:    43 20             	if (r0 == 0) goto 134 <sdfile_open+0x178 : 1e0d484 >			  ## sdfile_new.c:635:9
 1e0d3fe:    07 a0             	r7 = sp + 0
 1e0d400:    01 70             	r1 = 0			  ## sdfile_new.c:637:9
 1e0d402:    42 72             	r2 = 36			  ## sdfile_new.c:637:9
 1e0d404:    70 08             	r0 = r7			  ## sdfile_new.c:637:9
 1e0d406:    97 f3 73 cd       	call 3119846 <memset : 106ef0 >			  ## sdfile_new.c:637:9
 1e0d40a:    71 a2             	r1 = sp + 39
 1e0d40c:    c8 ff a8 df e0 01 	r8 = 31514536 <update_target_end+0xC8 : 1e0dfa8 >
 1e0d412:    70 08             	r0 = r7			  ## sdfile_new.c:638:15
 1e0d414:    82 08             	r2 = r8			  ## sdfile_new.c:638:15
 1e0d416:    8e 16             	call -740 <sdfile_open_part_dir : 1e0d134 >			  ## sdfile_new.c:638:15
 1e0d418:    07 08             	r7 = r0			  ## sdfile_new.c:638:15
 1e0d41a:    49 3e             	if (r7 != 0) goto 146 <sdfile_open+0x1A2 : 1e0d4ae >
 1e0d41c:    71 a2             	r1 = sp + 39
 1e0d41e:    60 08             	r0 = r6			  ## sdfile_new.c:642:20
 1e0d420:    53 16             	call -858 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:642:20
 1e0d422:    06 08             	r6 = r0			  ## sdfile_new.c:642:20
 1e0d424:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:643:13
 1e0d426:    4e 20             	if (r0 == 0) goto 156 <sdfile_open+0x1B8 : 1e0d4c4 >			  ## sdfile_new.c:643:13
 1e0d428:    00 a0             	r0 = sp + 0
 1e0d42a:    71 a2             	r1 = sp + 39
 1e0d42c:    82 08             	r2 = r8			  ## sdfile_new.c:644:19
 1e0d42e:    82 16             	call -764 <sdfile_open_part_dir : 1e0d134 >			  ## sdfile_new.c:644:19
 1e0d430:    07 08             	r7 = r0			  ## sdfile_new.c:644:19
 1e0d432:    3d 3e             	if (r7 != 0) goto 122 <sdfile_open+0x1A2 : 1e0d4ae >
 1e0d434:    77 a2             	r7 = sp + 39
 1e0d436:    60 08             	r0 = r6			  ## sdfile_new.c:648:24
 1e0d438:    71 08             	r1 = r7			  ## sdfile_new.c:648:24
 1e0d43a:    46 16             	call -884 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:648:24
 1e0d43c:    01 a0             	r1 = sp + 0			  ## sdfile_new.c:648:24
 1e0d43e:    1f 18             	goto 62 <sdfile_open+0x172 : 1e0d47e >			  ## sdfile_new.c:648:24
 1e0d440:    77 a2             	r7 = sp + 39
 1e0d442:    01 70             	r1 = 0			  ## sdfile_new.c:703:10
 1e0d444:    12 71             	r2 = 17			  ## sdfile_new.c:703:10
 1e0d446:    70 08             	r0 = r7			  ## sdfile_new.c:703:10
 1e0d448:    97 f3 52 cd       	call 3119780 <memset : 106ef0 >			  ## sdfile_new.c:703:10
 1e0d44c:    60 08             	r0 = r6			  ## sdfile_new.c:706:16
 1e0d44e:    71 08             	r1 = r7			  ## sdfile_new.c:706:16
 1e0d450:    3b 16             	call -906 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:706:16
 1e0d452:    06 08             	r6 = r0			  ## sdfile_new.c:706:16
 1e0d454:    00 6c             	r0 = b[r6 + 0] (u)			  ## sdfile_new.c:707:9
 1e0d456:    18 20             	if (r0 == 0) goto 48 <sdfile_open+0x17C : 1e0d488 >			  ## sdfile_new.c:707:9
 1e0d458:    80 a3             	r0 = sp + 56
 1e0d45a:    40 80             	r0 += 4			  ## sdfile_new.c:555:38
 1e0d45c:    71 a2             	r1 = sp + 39
 1e0d45e:    23 17             	call -442 <sdfile_for_each_dir : 1e0d2a6 >			  ## sdfile_new.c:555:11
 1e0d460:    07 08             	r7 = r0			  ## sdfile_new.c:555:11
 1e0d462:    25 3e             	if (r7 != 0) goto 74 <sdfile_open+0x1A2 : 1e0d4ae >
 1e0d464:    c0 f5 48 00       	r0 = b[sp+72] (u)			  ## sdfile_new.c:557:24
 1e0d468:    20 fd 0f 09       	r0 = r0 & 15			  ## sdfile_new.c:557:29
 1e0d46c:    07 fb 01 ff       	r7 = -255 <bank_code_load_addr+0x1E5655 : 1ffff01 >			  ## sdfile_new.c:557:29
 1e0d470:    30 e0 1d 10       	if (r0 != 3) goto 58 <sdfile_open+0x1A2 : 1e0d4ae >
 1e0d474:    77 a2             	r7 = sp + 39
 1e0d476:    60 08             	r0 = r6			  ## sdfile_new.c:713:9
 1e0d478:    71 08             	r1 = r7			  ## sdfile_new.c:713:9
 1e0d47a:    26 16             	call -948 <__sdfile_path_get_name : 1e0d0c8 >			  ## sdfile_new.c:713:9
 1e0d47c:    81 a3             	r1 = sp + 56			  ## sdfile_new.c:713:9
 1e0d47e:    50 08             	r0 = r5
 1e0d480:    72 08             	r2 = r7
 1e0d482:    13 18             	goto 38 <sdfile_open+0x19E : 1e0d4aa >
 1e0d484:    01 a0             	r1 = sp + 0
 1e0d486:    0f 18             	goto 30 <sdfile_open+0x19A : 1e0d4a6 >
 1e0d488:    40 9a             	r0 = r5 + 4			  ## sdfile_new.c:610:39
 1e0d48a:    71 a2             	r1 = sp + 39			  ## sdfile_new.c:610:39
 1e0d48c:    0c 17             	call -488 <sdfile_for_each_dir : 1e0d2a6 >			  ## sdfile_new.c:610:11
 1e0d48e:    21 4a             	r1 = [r5 + 8]			  ## sdfile_new.c:610:11
 1e0d490:    07 08             	r7 = r0			  ## sdfile_new.c:610:11
 1e0d492:    05 3e             	if (r7 != 0) goto 10 <sdfile_open+0x192 : 1e0d49e >
 1e0d494:    01 82             	r1 += 32			  ## sdfile_new.c:613:25
 1e0d496:    29 4a             	[r5 + 8] = r1			  ## sdfile_new.c:613:25
 1e0d498:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:614:24
 1e0d49a:    00 8e             	r0 += -32			  ## sdfile_new.c:614:24
 1e0d49c:    38 4a             	[r5 + 12] = r0			  ## sdfile_new.c:614:24
 1e0d49e:    11 f6 1c a1       	[r10 + 284] = r1			  ## sdfile_new.c:617:32
 1e0d4a2:    05 18             	goto 10 <sdfile_open+0x1A2 : 1e0d4ae >			  ## sdfile_new.c:617:32
 1e0d4a4:    c1 a5             	r1 = sp + 92
 1e0d4a6:    72 a2             	r2 = sp + 39
 1e0d4a8:    50 08             	r0 = r5
 1e0d4aa:    d6 16             	call -596 <sdfile_open_file_in_dir : 1e0d258 >
 1e0d4ac:    07 08             	r7 = r0
 1e0d4ae:    04 2e             	if (r7 == 0) goto 8 <sdfile_open+0x1AC : 1e0d4b8 >
 1e0d4b0:    50 08             	r0 = r5			  ## sdfile_new.c:833:5
 1e0d4b2:    bf f3 e8 e8       	call -11824 <free : 1e0a686 >			  ## sdfile_new.c:833:5
 1e0d4b6:    03 18             	goto 6 <sdfile_open+0x1B2 : 1e0d4be >			  ## sdfile_new.c:833:5
 1e0d4b8:    15 f6 0c 90       	[r9 + 12] = r5			  ## sdfile_new.c:827:29
 1e0d4bc:    07 70             	r7 = 0
 1e0d4be:    70 08             	r0 = r7			  ## sdfile_new.c:835:1
 1e0d4c0:    40 0a             	sp += 128			  ## sdfile_new.c:835:1
 1e0d4c2:    5a 01             	{pc, r10-r4} = [sp++]			  ## sdfile_new.c:835:1
 1e0d4c4:    20 02             	r0 = [sp+8]			  ## sdfile_new.c:651:65
 1e0d4c6:    01 f6 98 a1       	r1 = [r10 + 408]			  ## sdfile_new.c:158:29
 1e0d4ca:    02 f6 9c a1       	r2 = [r10 + 412]			  ## sdfile_new.c:158:53
 1e0d4ce:    00 8e             	r0 += -32			  ## sdfile_new.c:158:19
 1e0d4d0:    60 b0             	r0 = r0 - r1			  ## sdfile_new.c:158:43
 1e0d4d2:    81 b0             	r1 = r0 + r2			  ## sdfile_new.c:651:71
 1e0d4d4:    29 02             	[sp+8] = r1			  ## sdfile_new.c:651:27
 1e0d4d6:    09 18             	goto 18 <sdfile_open+0x1DE : 1e0d4ea >			  ## sdfile_new.c:651:27
 1e0d4d8:    90 03             	r0 = [sp+100]			  ## sdfile_new.c:690:65
 1e0d4da:    01 f6 98 a1       	r1 = [r10 + 408]			  ## sdfile_new.c:158:29
 1e0d4de:    02 f6 9c a1       	r2 = [r10 + 412]			  ## sdfile_new.c:158:53
 1e0d4e2:    00 8e             	r0 += -32			  ## sdfile_new.c:158:19
 1e0d4e4:    60 b0             	r0 = r0 - r1			  ## sdfile_new.c:158:43
 1e0d4e6:    81 b0             	r1 = r0 + r2			  ## sdfile_new.c:690:71
 1e0d4e8:    99 03             	[sp+100] = r1			  ## sdfile_new.c:690:27
 1e0d4ea:    72 a2             	r2 = sp + 39
 1e0d4ec:    50 08             	r0 = r5
 1e0d4ee:    cf 16             	call -610 <sdfile_open_spc_part_file : 1e0d28e >
 1e0d4f0:    dd 1f             	goto -70 <sdfile_open+0x1A0 : 1e0d4ac >


sdfile_read:
 1e0d4f2:    77 01             	[--sp] = {rets, r7-r4}			  ## sdfile_new.c:838:0
 1e0d4f4:    24 08             	r4 = r2			  ## sdfile_new.c:838:0
 1e0d4f6:    02 08             	r2 = r0			  ## sdfile_new.c:838:0
 1e0d4f8:    00 70             	r0 = 0			  ## sdfile_new.c:838:0
 1e0d4fa:    12 24             	if (r2 == 0) goto 36 <sdfile_read+0x2E : 1e0d520 >			  ## sdfile_new.c:838:0
 1e0d4fc:    35 44             	r5 = [r2 + 12]			  ## sdfile_new.c:846:38
 1e0d4fe:    10 2a             	if (r5 == 0) goto 32 <sdfile_read+0x2E : 1e0d520 >
 1e0d500:    06 4a             	r6 = [r5 + 0]			  ## sdfile_new.c:852:43
 1e0d502:    20 4a             	r0 = [r5 + 8]			  ## sdfile_new.c:859:56
 1e0d504:    37 4a             	r7 = [r5 + 12]			  ## sdfile_new.c:852:30
 1e0d506:    82 b1             	r2 = r0 + r6			  ## sdfile_new.c:859:42
 1e0d508:    10 08             	r0 = r1			  ## sdfile_new.c:859:5
 1e0d50a:    21 08             	r1 = r2			  ## sdfile_new.c:859:5
 1e0d50c:    42 08             	r2 = r4			  ## sdfile_new.c:859:5
 1e0d50e:    97 f3 e9 cc       	call 3119570 <memcpy : 106ee4 >			  ## sdfile_new.c:859:5
 1e0d512:    a0 bf             	r0 = r7 - r6			  ## sdfile_new.c:852:34
 1e0d514:    40 f2 01 30       	if (r0 < r4) goto 2 <sdfile_read+0x28 : 1e0d51a >
 1e0d518:    40 08             	r0 = r4			  ## sdfile_new.c:855:9
 1e0d51a:    01 4a             	r1 = [r5 + 0]			  ## sdfile_new.c:861:17
 1e0d51c:    01 09             	r1 += r0			  ## sdfile_new.c:861:17
 1e0d51e:    09 4a             	[r5 + 0] = r1			  ## sdfile_new.c:861:17
 1e0d520:    57 01             	{pc, r7-r4} = [sp++]			  ## sdfile_new.c:864:1


sdfile_write:
 1e0d522:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:896:0
 1e0d524:    03 08             	r3 = r0			  ## sdfile_new.c:896:0
 1e0d526:    00 70             	r0 = 0			  ## sdfile_new.c:896:0
 1e0d528:    2a 26             	if (r3 == 0) goto 84 <sdfile_write+0x5C : 1e0d57e >			  ## sdfile_new.c:896:0
 1e0d52a:    35 46             	r5 = [r3 + 12]			  ## sdfile_new.c:906:38
 1e0d52c:    28 2a             	if (r5 == 0) goto 80 <sdfile_write+0x5C : 1e0d57e >
 1e0d52e:    03 4a             	r3 = [r5 + 0]			  ## sdfile_new.c:912:43
 1e0d530:    30 4a             	r0 = [r5 + 12]			  ## sdfile_new.c:912:30
 1e0d532:    e4 b0             	r4 = r0 - r3			  ## sdfile_new.c:912:34
 1e0d534:    24 f2 01 30       	if (r4 < r2) goto 2 <sdfile_write+0x18 : 1e0d53a >
 1e0d538:    24 08             	r4 = r2			  ## sdfile_new.c:915:9
 1e0d53a:    26 4a             	r6 = [r5 + 8]			  ## sdfile_new.c:919:39
 1e0d53c:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:919:39
 1e0d542:    08 f6 9c 21       	r8 = [r2 + 412]			  ## sdfile_new.c:163:29
 1e0d546:    02 f6 98 21       	r2 = [r2 + 408]			  ## sdfile_new.c:163:48
 1e0d54a:    63 09             	r3 += r6			  ## sdfile_new.c:919:25
 1e0d54c:    0b 28             	if (r4 == 0) goto 22 <sdfile_write+0x42 : 1e0d564 >
 1e0d54e:    06 70             	r6 = 0
 1e0d550:    07 fa 00 16       	r7 = b[r1+r6] (u)			  ## sdfile_new.c:783:14
 1e0d554:    00 fa 00 36       	r0 = b[r3+r6] (u)			  ## sdfile_new.c:783:24
 1e0d558:    50 bf             	r0 &= r7			  ## sdfile_new.c:783:22
 1e0d55a:    70 f2 11 10       	if (r0 != r7) goto 34 <sdfile_write+0x5E : 1e0d580 >			  ## sdfile_new.c:783:22
 1e0d55e:    16 80             	r6 += 1			  ## sdfile_new.c:782:31
 1e0d560:    46 f2 f6 3f       	if (r6 < r4) goto -20 <sdfile_write+0x2E : 1e0d550 >
 1e0d564:    90 fb 80 03       	r0 = r3 - r8			  ## sdfile_new.c:163:19
 1e0d568:    02 09             	r2 += r0			  ## sdfile_new.c:163:38
 1e0d56a:    10 08             	r0 = r1			  ## sdfile_new.c:927:11
 1e0d56c:    41 08             	r1 = r4			  ## sdfile_new.c:927:11
 1e0d56e:    bf f3 e3 9b       	call -51258 <norflash_write : 1e00d38 >			  ## sdfile_new.c:927:11
 1e0d572:    40 f2 04 10       	if (r0 != r4) goto 8 <sdfile_write+0x5C : 1e0d57e >
 1e0d576:    00 4a             	r0 = [r5 + 0]			  ## sdfile_new.c:930:21
 1e0d578:    40 09             	r0 += r4			  ## sdfile_new.c:930:21
 1e0d57a:    08 4a             	[r5 + 0] = r0			  ## sdfile_new.c:930:21
 1e0d57c:    40 08             	r0 = r4			  ## sdfile_new.c:930:21
 1e0d57e:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:934:1
 1e0d580:    00 fb 06 ff       	r0 = -250 <bank_code_load_addr+0x1E565A : 1ffff06 >
 1e0d584:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:934:1


sdfile_seek:
 1e0d586:    0e 20             	if (r0 == 0) goto 28 <sdfile_seek+0x1E : 1e0d5a4 >			  ## sdfile_new.c:867:0
 1e0d588:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:872:38
 1e0d58a:    0c 20             	if (r0 == 0) goto 24 <sdfile_seek+0x1E : 1e0d5a4 >
 1e0d58c:    22 e0 04 00       	if (r2 == 2) goto 8 <sdfile_seek+0x12 : 1e0d598 >			  ## sdfile_new.c:878:5
 1e0d590:    12 e0 05 00       	if (r2 == 1) goto 10 <sdfile_seek+0x18 : 1e0d59e >
 1e0d594:    06 24             	if (r2 == 0) goto 12 <sdfile_seek+0x1C : 1e0d5a2 >
 1e0d596:    06 18             	goto 12 <sdfile_seek+0x1E : 1e0d5a4 >
 1e0d598:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:886:35
 1e0d59a:    61 b4             	r1 = r2 - r1			  ## sdfile_new.c:886:39
 1e0d59c:    02 18             	goto 4 <sdfile_seek+0x1C : 1e0d5a2 >
 1e0d59e:    02 40             	r2 = [r0 + 0]			  ## sdfile_new.c:883:21
 1e0d5a0:    21 09             	r1 += r2			  ## sdfile_new.c:883:21
 1e0d5a2:    09 40             	[r0 + 0] = r1
 1e0d5a4:    00 70             	r0 = 0			  ## sdfile_new.c:891:1
 1e0d5a6:    20 00             	rts			  ## sdfile_new.c:891:1


sdfile_len:
 1e0d5a8:    01 08             	r1 = r0			  ## sdfile_new.c:952:0
 1e0d5aa:    00 70             	r0 = 0			  ## sdfile_new.c:952:0
 1e0d5ac:    03 22             	if (r1 == 0) goto 6 <sdfile_len+0xC : 1e0d5b4 >			  ## sdfile_new.c:952:0
 1e0d5ae:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:957:38
 1e0d5b0:    01 22             	if (r1 == 0) goto 2 <sdfile_len+0xC : 1e0d5b4 >
 1e0d5b2:    30 42             	r0 = [r1 + 12]			  ## sdfile_new.c:963:24
 1e0d5b4:    20 00             	rts			  ## sdfile_new.c:964:1


sdfile_pos:
 1e0d5b6:    01 08             	r1 = r0			  ## sdfile_new.c:967:0
 1e0d5b8:    00 70             	r0 = 0			  ## sdfile_new.c:967:0
 1e0d5ba:    03 22             	if (r1 == 0) goto 6 <sdfile_pos+0xC : 1e0d5c2 >			  ## sdfile_new.c:967:0
 1e0d5bc:    31 42             	r1 = [r1 + 12]			  ## sdfile_new.c:972:38
 1e0d5be:    01 22             	if (r1 == 0) goto 2 <sdfile_pos+0xC : 1e0d5c2 >
 1e0d5c0:    00 42             	r0 = [r1 + 0]			  ## sdfile_new.c:975:23
 1e0d5c2:    20 00             	rts			  ## sdfile_new.c:979:1


sdfile_get_name:
 1e0d5c4:    74 01             	[--sp] = {rets, r4}			  ## sdfile_new.c:982:0
 1e0d5c6:    24 08             	r4 = r2			  ## sdfile_new.c:982:0
 1e0d5c8:    02 08             	r2 = r0			  ## sdfile_new.c:982:0
 1e0d5ca:    00 70             	r0 = 0			  ## sdfile_new.c:982:0
 1e0d5cc:    0c 24             	if (r2 == 0) goto 24 <sdfile_get_name+0x22 : 1e0d5e6 >			  ## sdfile_new.c:982:0
 1e0d5ce:    32 44             	r2 = [r2 + 12]			  ## sdfile_new.c:987:38
 1e0d5d0:    0a 24             	if (r2 == 0) goto 20 <sdfile_get_name+0x22 : 1e0d5e6 >
 1e0d5d2:    04 e1 01 b0       	ifs (r4 < 16) goto 2 <sdfile_get_name+0x14 : 1e0d5d8 >
 1e0d5d6:    04 71             	r4 = 16
 1e0d5d8:    42 81             	r2 += 20			  ## sdfile_new.c:996:5
 1e0d5da:    10 08             	r0 = r1			  ## sdfile_new.c:996:5
 1e0d5dc:    21 08             	r1 = r2			  ## sdfile_new.c:996:5
 1e0d5de:    42 08             	r2 = r4			  ## sdfile_new.c:996:5
 1e0d5e0:    97 f3 80 cc       	call 3119360 <memcpy : 106ee4 >			  ## sdfile_new.c:996:5
 1e0d5e4:    40 08             	r0 = r4			  ## sdfile_new.c:996:5
 1e0d5e6:    54 01             	{pc, r4} = [sp++]			  ## sdfile_new.c:999:1


sdfile_close:
 1e0d5e8:    34 00             	[--sp] = rets			  ## sdfile_new.c:937:0
 1e0d5ea:    04 20             	if (r0 == 0) goto 8 <sdfile_close+0xC : 1e0d5f4 >			  ## sdfile_new.c:937:0
 1e0d5ec:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:942:38
 1e0d5ee:    02 20             	if (r0 == 0) goto 4 <sdfile_close+0xC : 1e0d5f4 >
 1e0d5f0:    bf f3 49 e8       	call -12142 <free : 1e0a686 >			  ## sdfile_new.c:945:9
 1e0d5f4:    00 70             	r0 = 0			  ## sdfile_new.c:949:1
 1e0d5f6:    30 00             	pc = [sp++]			  ## sdfile_new.c:949:1


sdfile_delete:
 1e0d5f8:    78 01             	[--sp] = {rets, r8-r4}			  ## sdfile_new.c:2182:0
 1e0d5fa:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:2186:34
 1e0d5fc:    08 70             	r8 = 0
 1e0d5fe:    26 20             	if (r0 == 0) goto 76 <sdfile_delete+0x54 : 1e0d64c >
 1e0d600:    c1 ff 60 26 00 00 	r1 = 9824 <vm_obj : 2660 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e0d606:    01 f9 6d 11       	r1 = b[r1 + 365] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e0d60a:    07 fb 00 10       	r7 = 4096 <sys_clock_limit+0x74 : 1000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e0d60e:    02 f3 02 10       	if ((r1 & 4) == 0) goto 4 <sdfile_delete+0x1E : 1e0d616 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1467:9
 1e0d612:    07 fb 00 01       	r7 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >
 1e0d616:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >
 1e0d61c:    03 f6 9c 21       	r3 = [r2 + 412]			  ## sdfile_new.c:163:29
 1e0d620:    24 40             	r4 = [r0 + 8]			  ## sdfile_new.c:2191:21
 1e0d622:    02 f6 98 21       	r2 = [r2 + 408]			  ## sdfile_new.c:163:48
 1e0d626:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:2193:20
 1e0d628:    e3 b8             	r3 = r4 - r3			  ## sdfile_new.c:163:19
 1e0d62a:    85 b6             	r5 = r3 + r2			  ## sdfile_new.c:163:38
 1e0d62c:    44 b1             	r4 = r0 + r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1475:31
 1e0d62e:    54 f2 0c 90       	if (r4 <= r5) goto 24 <sdfile_delete+0x52 : 1e0d64a >
 1e0d632:    81 fd 10 01       	r0 = uextra(r1, p:2, l:1)
 1e0d636:    06 fd 02 09       	r6 = r0 | 2
 1e0d63a:    60 08             	r0 = r6			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e0d63c:    51 08             	r1 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e0d63e:    bf f3 cd 9a       	call -51814 <sfc_erase : 1e00bdc >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e0d642:    04 20             	if (r0 == 0) goto 8 <sdfile_delete+0x54 : 1e0d64c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1477:13
 1e0d644:    75 09             	r5 += r7			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/vm/vm.c:1476:40
 1e0d646:    45 f2 f8 3f       	if (r5 < r4) goto -16 <sdfile_delete+0x42 : 1e0d63a >
 1e0d64a:    18 70             	r8 = 1
 1e0d64c:    80 08             	r0 = r8			  ## sdfile_new.c:2201:1
 1e0d64e:    58 01             	{pc, r8-r4} = [sp++]			  ## sdfile_new.c:2201:1


sdfile_get_attrs:
 1e0d650:    0e 20             	if (r0 == 0) goto 28 <sdfile_get_attrs+0x1E : 1e0d66e >			  ## sdfile_new.c:1002:0
 1e0d652:    30 40             	r0 = [r0 + 12]			  ## sdfile_new.c:1007:38
 1e0d654:    0c 20             	if (r0 == 0) goto 24 <sdfile_get_attrs+0x1E : 1e0d66e >
 1e0d656:    02 61             	r2 = b[r0 + 16] (u)			  ## sdfile_new.c:1014:22
 1e0d658:    22 fd 0f 29       	r2 = r2 & 15			  ## sdfile_new.c:1014:27
 1e0d65c:    32 e0 03 10       	if (r2 != 3) goto 6 <sdfile_get_attrs+0x16 : 1e0d666 >			  ## sdfile_new.c:1014:27
 1e0d660:    02 62             	r2 = b[r1 + 0] (u)			  ## sdfile_new.c:1015:20
 1e0d662:    12 b1             	r2 |= 4			  ## sdfile_new.c:1015:20
 1e0d664:    0a 62             	b[r1 + 0] = r2			  ## sdfile_new.c:1015:20
 1e0d666:    32 40             	r2 = [r0 + 12]			  ## sdfile_new.c:1020:31
 1e0d668:    1a 42             	[r1 + 4] = r2			  ## sdfile_new.c:1020:17
 1e0d66a:    20 40             	r0 = [r0 + 8]			  ## sdfile_new.c:1021:32
 1e0d66c:    28 42             	[r1 + 8] = r0			  ## sdfile_new.c:1021:18
 1e0d66e:    00 70             	r0 = 0			  ## sdfile_new.c:1023:1
 1e0d670:    20 00             	rts			  ## sdfile_new.c:1023:1


fopen:
 1e0d672:    7d 01             	[--sp] = {rets, r13-r4}			  ## vfs.c:385:0
 1e0d674:    1a 08             	r10 = r1			  ## vfs.c:385:0
 1e0d676:    0d 08             	r13 = r0			  ## vfs.c:385:0
 1e0d678:    97 f3 90 cb       	call 3118880 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d67c:    c6 ff 8c 08 00 00 	r6 = 2188 <head.1703 : 88c >			  ## spinlock.h:77:5
 1e0d682:    07 4c             	r7 = [r6 + 0]			  ## spinlock.h:77:5
 1e0d684:    67 f2 12 00       	if (r7 == r6) goto 36 <fopen+0x3A : 1e0d6ac >			  ## spinlock.h:77:5
 1e0d688:    00 f9 5c 70       	r0 = b[r7 + 92] (u)			  ## vfs.c:97:17
 1e0d68c:    74 fc c0 ff       	r4 = r7 + -64			  ## vfs.c:97:17
 1e0d690:    0a 20             	if (r0 == 0) goto 20 <fopen+0x34 : 1e0d6a6 >			  ## vfs.c:97:17
 1e0d692:    15 48             	r5 = [r4 + 4]			  ## vfs.c:100:28
 1e0d694:    50 08             	r0 = r5			  ## vfs.c:100:40
 1e0d696:    97 f3 31 cc       	call 3119202 <strlen : 106efc >			  ## vfs.c:100:40
 1e0d69a:    02 08             	r2 = r0			  ## vfs.c:100:40
 1e0d69c:    50 08             	r0 = r5			  ## vfs.c:100:18
 1e0d69e:    d1 08             	r1 = r13			  ## vfs.c:100:18
 1e0d6a0:    97 f3 24 cc       	call 3119176 <memcmp : 106eec >			  ## vfs.c:100:18
 1e0d6a4:    08 20             	if (r0 == 0) goto 16 <fopen+0x44 : 1e0d6b6 >			  ## vfs.c:100:18
 1e0d6a6:    07 49             	r7 = [r4 + 64]
 1e0d6a8:    67 f2 ee 1f       	if (r7 != r6) goto -36 <fopen+0x16 : 1e0d688 >
 1e0d6ac:    97 f3 74 cb       	call 3118824 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d6b0:    0c 70             	r12 = 0			  ## spinlock.h:88:5
 1e0d6b2:    c0 08             	r0 = r12			  ## vfs.c:435:1
 1e0d6b4:    5d 01             	{pc, r13-r4} = [sp++]			  ## vfs.c:435:1
 1e0d6b6:    97 f3 6f cb       	call 3118814 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d6ba:    4b fc 4c 00       	r11 = r4 + 76			  ## vfs.c:397:11
 1e0d6be:    01 70             	r1 = 0			  ## vfs.c:397:11
 1e0d6c0:    0c 70             	r12 = 0			  ## vfs.c:397:11
 1e0d6c2:    b0 08             	r0 = r11			  ## vfs.c:397:11
 1e0d6c4:    97 f3 ae cb       	call 3118940 <os_mutex_pend : 106e24 >			  ## vfs.c:397:11
 1e0d6c8:    01 f9 5c 70       	r1 = b[r7 + 92] (u)			  ## vfs.c:397:11
 1e0d6cc:    45 22             	if (r1 == 0) goto 138 <fopen+0xE6 : 1e0d758 >
 1e0d6ce:    f1 31             	if (r0 != 0) goto -30 <fopen+0x40 : 1e0d6b2 >
 1e0d6d0:    10 48             	r0 = [r4 + 4]			  ## vfs.c:403:53
 1e0d6d2:    97 f3 13 cc       	call 3119142 <strlen : 106efc >			  ## vfs.c:403:42
 1e0d6d6:    d0 09             	r0 += r13			  ## vfs.c:134:13
 1e0d6d8:    10 80             	r0 += 1			  ## vfs.c:134:13
 1e0d6da:    85 99             	r5 = r4 + 24			  ## vfs.c:403:29
 1e0d6dc:    22 6b             	r2 = b[r5 + 18] (u)
 1e0d6de:    28 9b             	r8 = r5 + 18			  ## vfs.c:134:13
 1e0d6e0:    01 70             	r1 = 0
 1e0d6e2:    03 fa 00 01       	r3 = b[r0+r1] (u)			  ## vfs.c:135:24
 1e0d6e6:    32 f2 05 10       	if (r2 != r3) goto 10 <fopen+0x82 : 1e0d6f4 >			  ## vfs.c:135:9
 1e0d6ea:    42 ba             	r2 = r5 + r1			  ## vfs.c:135:24
 1e0d6ec:    32 65             	r2 = b[r2 + 19] (u)			  ## vfs.c:136:17
 1e0d6ee:    11 80             	r1 += 1			  ## vfs.c:136:17
 1e0d6f0:    f8 35             	if (r2 != 0) goto -16 <fopen+0x70 : 1e0d6e2 >			  ## vfs.c:136:17
 1e0d6f2:    03 18             	goto 6 <fopen+0x88 : 1e0d6fa >			  ## vfs.c:136:17
 1e0d6f4:    05 4a             	r5 = [r5 + 0]			  ## vfs.c:141:22
 1e0d6f6:    f2 3b             	if (r5 != 0) goto -28 <fopen+0x6A : 1e0d6dc >
 1e0d6f8:    2f 18             	goto 94 <fopen+0xE6 : 1e0d758 >
 1e0d6fa:    2e 2a             	if (r5 == 0) goto 92 <fopen+0xE6 : 1e0d758 >
 1e0d6fc:    97 f3 4e cb       	call 3118748 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d700:    00 71             	r0 = 16			  ## vfs.c:159:26
 1e0d702:    bf f3 ad e7       	call -12454 <malloc : 1e0a660 >			  ## vfs.c:159:26
 1e0d706:    09 08             	r9 = r0			  ## vfs.c:159:26
 1e0d708:    0c 40             	[r0 + 0] = r4			  ## vfs.c:160:14
 1e0d70a:    97 f3 45 cb       	call 3118730 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d70e:    09 e0 23 00       	if (r9 == 0) goto 70 <fopen+0xE6 : 1e0d758 >			  ## spinlock.h:88:5
 1e0d712:    15 f6 08 90       	[r9 + 8] = r5			  ## vfs.c:413:16
 1e0d716:    c0 98             	r0 = r4 + 12			  ## vfs.c:414:22
 1e0d718:    10 f6 04 90       	[r9 + 4] = r0			  ## vfs.c:414:15
 1e0d71c:    20 48             	r0 = [r4 + 8]			  ## vfs.c:418:13
 1e0d71e:    65 40             	r5 = [r0 + 24]			  ## vfs.c:418:18
 1e0d720:    12 2a             	if (r5 == 0) goto 36 <fopen+0xD4 : 1e0d746 >
 1e0d722:    10 48             	r0 = [r4 + 4]			  ## vfs.c:416:31
 1e0d724:    97 f3 ea cb       	call 3119060 <strlen : 106efc >			  ## vfs.c:416:20
 1e0d728:    80 fb 00 6d       	r6 = r13 + r0			  ## vfs.c:416:18
 1e0d72c:    80 08             	r0 = r8			  ## vfs.c:416:43
 1e0d72e:    97 f3 e5 cb       	call 3119050 <strlen : 106efc >			  ## vfs.c:416:43
 1e0d732:    60 09             	r0 += r6			  ## vfs.c:416:37
 1e0d734:    11 90             	r1 = r0 + 1			  ## vfs.c:416:41
 1e0d736:    90 08             	r0 = r9			  ## vfs.c:419:19
 1e0d738:    a2 08             	r2 = r10			  ## vfs.c:419:19
 1e0d73a:    85 00             	call r5			  ## vfs.c:419:19
 1e0d73c:    04 20             	if (r0 == 0) goto 8 <fopen+0xD4 : 1e0d746 >
 1e0d73e:    90 08             	r0 = r9			  ## vfs.c:170:9
 1e0d740:    bf f3 a1 e7       	call -12478 <free : 1e0a686 >			  ## vfs.c:170:9
 1e0d744:    09 18             	goto 18 <fopen+0xE6 : 1e0d758 >			  ## vfs.c:170:9
 1e0d746:    97 f3 29 cb       	call 3118674 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e0d74a:    08 00             	csync			  ## atomic.h:16:5
 1e0d74c:    20 49             	r0 = [r4 + 72]			  ## atomic.h:18:14
 1e0d74e:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e0d750:    28 49             	[r4 + 72] = r0			  ## atomic.h:19:16
 1e0d752:    97 f3 21 cb       	call 3118658 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e0d756:    9c 08             	r12 = r9			  ## atomic.h:21:5
 1e0d758:    b0 08             	r0 = r11
 1e0d75a:    97 f3 65 cb       	call 3118794 <os_mutex_post : 106e28 >
 1e0d75e:    a9 1f             	goto -174 <fopen+0x40 : 1e0d6b2 >


fread:
 1e0d760:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:439:0
 1e0d762:    05 08             	r5 = r0			  ## vfs.c:439:0
 1e0d764:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:445:11
 1e0d766:    26 08             	r6 = r2			  ## vfs.c:445:11
 1e0d768:    17 08             	r7 = r1
 1e0d76a:    c0 84             	r0 += 76			  ## vfs.c:445:11
 1e0d76c:    01 70             	r1 = 0			  ## vfs.c:445:11
 1e0d76e:    04 70             	r4 = 0			  ## vfs.c:445:11
 1e0d770:    97 f3 58 cb       	call 3118768 <os_mutex_pend : 106e24 >			  ## vfs.c:445:11
 1e0d774:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:445:11
 1e0d776:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:445:11
 1e0d77a:    0b 24             	if (r2 == 0) goto 22 <fread+0x32 : 1e0d792 >
 1e0d77c:    0e 30             	if (r0 != 0) goto 28 <fread+0x3A : 1e0d79a >
 1e0d77e:    20 42             	r0 = [r1 + 8]			  ## vfs.c:450:19
 1e0d780:    73 40             	r3 = [r0 + 28]			  ## vfs.c:450:24
 1e0d782:    07 26             	if (r3 == 0) goto 14 <fread+0x32 : 1e0d792 >			  ## vfs.c:450:24
 1e0d784:    50 08             	r0 = r5			  ## vfs.c:451:16
 1e0d786:    71 08             	r1 = r7			  ## vfs.c:451:16
 1e0d788:    62 08             	r2 = r6			  ## vfs.c:451:16
 1e0d78a:    83 00             	call r3			  ## vfs.c:451:16
 1e0d78c:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:451:16
 1e0d78e:    04 08             	r4 = r0			  ## vfs.c:451:16
 1e0d790:    00 00             	nop
 1e0d792:    10 fc 4c 00       	r0 = r1 + 76
 1e0d796:    97 f3 47 cb       	call 3118734 <os_mutex_post : 106e28 >
 1e0d79a:    40 08             	r0 = r4			  ## vfs.c:457:1
 1e0d79c:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:457:1


fseek:
 1e0d79e:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:503:0
 1e0d7a0:    04 08             	r4 = r0			  ## vfs.c:503:0
 1e0d7a2:    00 48             	r0 = [r4 + 0]			  ## vfs.c:509:11
 1e0d7a4:    25 08             	r5 = r2			  ## vfs.c:509:11
 1e0d7a6:    16 08             	r6 = r1
 1e0d7a8:    c0 84             	r0 += 76			  ## vfs.c:509:11
 1e0d7aa:    01 70             	r1 = 0			  ## vfs.c:509:11
 1e0d7ac:    97 f3 3a cb       	call 3118708 <os_mutex_pend : 106e24 >			  ## vfs.c:509:11
 1e0d7b0:    01 48             	r1 = [r4 + 0]			  ## vfs.c:509:11
 1e0d7b2:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:509:11
 1e0d7b6:    0c 24             	if (r2 == 0) goto 24 <fseek+0x32 : 1e0d7d0 >
 1e0d7b8:    d7 06             	r7 = -19
 1e0d7ba:    15 30             	if (r0 != 0) goto 42 <fseek+0x48 : 1e0d7e6 >
 1e0d7bc:    20 42             	r0 = [r1 + 8]			  ## vfs.c:514:19
 1e0d7be:    a3 40             	r3 = [r0 + 40]			  ## vfs.c:514:24
 1e0d7c0:    0d 26             	if (r3 == 0) goto 26 <fseek+0x3E : 1e0d7dc >			  ## vfs.c:514:24
 1e0d7c2:    40 08             	r0 = r4			  ## vfs.c:515:15
 1e0d7c4:    61 08             	r1 = r6			  ## vfs.c:515:15
 1e0d7c6:    52 08             	r2 = r5			  ## vfs.c:515:15
 1e0d7c8:    83 00             	call r3			  ## vfs.c:515:15
 1e0d7ca:    01 48             	r1 = [r4 + 0]			  ## vfs.c:515:15
 1e0d7cc:    07 08             	r7 = r0			  ## vfs.c:515:15
 1e0d7ce:    07 18             	goto 14 <fseek+0x40 : 1e0d7de >
 1e0d7d0:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:509:11
 1e0d7d4:    97 f3 28 cb       	call 3118672 <os_mutex_post : 106e28 >			  ## vfs.c:509:11
 1e0d7d8:    d7 06             	r7 = -19
 1e0d7da:    05 18             	goto 10 <fseek+0x48 : 1e0d7e6 >
 1e0d7dc:    07 70             	r7 = 0
 1e0d7de:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:518:30
 1e0d7e2:    97 f3 21 cb       	call 3118658 <os_mutex_post : 106e28 >			  ## vfs.c:518:5
 1e0d7e6:    70 08             	r0 = r7			  ## vfs.c:521:1
 1e0d7e8:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:521:1


fwrite:
 1e0d7ea:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:481:0
 1e0d7ec:    05 08             	r5 = r0			  ## vfs.c:481:0
 1e0d7ee:    00 4a             	r0 = [r5 + 0]			  ## vfs.c:487:11
 1e0d7f0:    26 08             	r6 = r2			  ## vfs.c:487:11
 1e0d7f2:    17 08             	r7 = r1
 1e0d7f4:    c0 84             	r0 += 76			  ## vfs.c:487:11
 1e0d7f6:    01 70             	r1 = 0			  ## vfs.c:487:11
 1e0d7f8:    04 70             	r4 = 0			  ## vfs.c:487:11
 1e0d7fa:    97 f3 13 cb       	call 3118630 <os_mutex_pend : 106e24 >			  ## vfs.c:487:11
 1e0d7fe:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:487:11
 1e0d800:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:487:11
 1e0d804:    0b 24             	if (r2 == 0) goto 22 <fwrite+0x32 : 1e0d81c >
 1e0d806:    0e 30             	if (r0 != 0) goto 28 <fwrite+0x3A : 1e0d824 >
 1e0d808:    20 42             	r0 = [r1 + 8]			  ## vfs.c:492:19
 1e0d80a:    93 40             	r3 = [r0 + 36]			  ## vfs.c:492:24
 1e0d80c:    07 26             	if (r3 == 0) goto 14 <fwrite+0x32 : 1e0d81c >			  ## vfs.c:492:24
 1e0d80e:    50 08             	r0 = r5			  ## vfs.c:493:16
 1e0d810:    71 08             	r1 = r7			  ## vfs.c:493:16
 1e0d812:    62 08             	r2 = r6			  ## vfs.c:493:16
 1e0d814:    83 00             	call r3			  ## vfs.c:493:16
 1e0d816:    01 4a             	r1 = [r5 + 0]			  ## vfs.c:493:16
 1e0d818:    04 08             	r4 = r0			  ## vfs.c:493:16
 1e0d81a:    00 00             	nop
 1e0d81c:    10 fc 4c 00       	r0 = r1 + 76
 1e0d820:    97 f3 02 cb       	call 3118596 <os_mutex_post : 106e28 >
 1e0d824:    40 08             	r0 = r4			  ## vfs.c:499:1
 1e0d826:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:499:1


fclose:
 1e0d828:    77 01             	[--sp] = {rets, r7-r4}			  ## vfs.c:525:0
 1e0d82a:    04 08             	r4 = r0			  ## vfs.c:525:0
 1e0d82c:    00 48             	r0 = [r4 + 0]			  ## vfs.c:530:11
 1e0d82e:    c0 84             	r0 += 76			  ## vfs.c:530:11
 1e0d830:    01 70             	r1 = 0			  ## vfs.c:530:11
 1e0d832:    97 f3 f7 ca       	call 3118574 <os_mutex_pend : 106e24 >			  ## vfs.c:530:11
 1e0d836:    01 48             	r1 = [r4 + 0]			  ## vfs.c:530:11
 1e0d838:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:530:11
 1e0d83c:    05 08             	r5 = r0			  ## vfs.c:530:11
 1e0d83e:    06 34             	if (r2 != 0) goto 12 <fclose+0x24 : 1e0d84c >
 1e0d840:    10 fc 4c 00       	r0 = r1 + 76			  ## vfs.c:530:11
 1e0d844:    97 f3 f0 ca       	call 3118560 <os_mutex_post : 106e28 >			  ## vfs.c:530:11
 1e0d848:    01 48             	r1 = [r4 + 0]
 1e0d84a:    a5 06             	r5 = -22
 1e0d84c:    20 42             	r0 = [r1 + 8]			  ## vfs.c:532:19
 1e0d84e:    22 41             	r2 = [r0 + 72]			  ## vfs.c:532:24
 1e0d850:    03 24             	if (r2 == 0) goto 6 <fclose+0x30 : 1e0d858 >			  ## vfs.c:532:24
 1e0d852:    40 08             	r0 = r4			  ## vfs.c:533:9
 1e0d854:    82 00             	call r2			  ## vfs.c:533:9
 1e0d856:    01 48             	r1 = [r4 + 0]			  ## vfs.c:533:9
 1e0d858:    30 42             	r0 = [r1 + 12]			  ## vfs.c:536:23
 1e0d85a:    02 20             	if (r0 == 0) goto 4 <fclose+0x38 : 1e0d860 >			  ## vfs.c:536:23
 1e0d85c:    80 f3 a7 00       	call 334 <dev_ioctl : 1e0d9ae >			  ## vfs.c:537:9
 1e0d860:    04 3a             	if (r5 != 0) goto 8 <fclose+0x42 : 1e0d86a >
 1e0d862:    00 48             	r0 = [r4 + 0]			  ## vfs.c:541:30
 1e0d864:    c0 84             	r0 += 76			  ## vfs.c:541:34
 1e0d866:    97 f3 df ca       	call 3118526 <os_mutex_post : 106e28 >			  ## vfs.c:541:9
 1e0d86a:    06 48             	r6 = [r4 + 0]			  ## vfs.c:544:23
 1e0d86c:    97 f3 96 ca       	call 3118380 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e0d870:    08 00             	csync			  ## atomic.h:32:5
 1e0d872:    20 4d             	r0 = [r6 + 72]			  ## atomic.h:34:14
 1e0d874:    07 fc ff ff       	r7 = r0 + -1			  ## atomic.h:35:22
 1e0d878:    2f 4d             	[r6 + 72] = r7			  ## atomic.h:35:16
 1e0d87a:    97 f3 8d ca       	call 3118362 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e0d87e:    14 3e             	if (r7 != 0) goto 40 <fclose+0x80 : 1e0d8a8 >			  ## atomic.h:37:5
 1e0d880:    97 f3 8c ca       	call 3118360 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0d884:    00 4d             	r0 = [r6 + 64]			  ## list.h:171:36
 1e0d886:    11 4d             	r1 = [r6 + 68]			  ## list.h:171:23
 1e0d888:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0d88a:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0d88c:    60 fc 40 00       	r0 = r6 + 64			  ## vfs.c:80:23
 1e0d890:    08 4d             	[r6 + 64] = r0			  ## list.h:172:17
 1e0d892:    18 4d             	[r6 + 68] = r0			  ## list.h:173:17
 1e0d894:    97 f3 80 ca       	call 3118336 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0d898:    20 4c             	r0 = [r6 + 8]			  ## vfs.c:82:17
 1e0d89a:    21 40             	r1 = [r0 + 8]			  ## vfs.c:82:22
 1e0d89c:    02 22             	if (r1 == 0) goto 4 <fclose+0x7A : 1e0d8a2 >			  ## vfs.c:82:22
 1e0d89e:    60 08             	r0 = r6			  ## vfs.c:83:13
 1e0d8a0:    81 00             	call r1			  ## vfs.c:83:13
 1e0d8a2:    60 08             	r0 = r6			  ## vfs.c:85:9
 1e0d8a4:    bf f3 ef e6       	call -12834 <free : 1e0a686 >			  ## vfs.c:85:9
 1e0d8a8:    40 08             	r0 = r4			  ## vfs.c:170:9
 1e0d8aa:    bf f3 ec e6       	call -12840 <free : 1e0a686 >			  ## vfs.c:170:9
 1e0d8ae:    50 08             	r0 = r5			  ## vfs.c:548:5
 1e0d8b0:    57 01             	{pc, r7-r4} = [sp++]			  ## vfs.c:548:5


fget_attrs:
 1e0d8b2:    75 01             	[--sp] = {rets, r5, r4}			  ## vfs.c:1156:0
 1e0d8b4:    04 08             	r4 = r0			  ## vfs.c:1156:0
 1e0d8b6:    00 48             	r0 = [r4 + 0]			  ## vfs.c:1161:11
 1e0d8b8:    15 08             	r5 = r1			  ## vfs.c:1161:11
 1e0d8ba:    c0 84             	r0 += 76			  ## vfs.c:1161:11
 1e0d8bc:    01 70             	r1 = 0			  ## vfs.c:1161:11
 1e0d8be:    97 f3 b1 ca       	call 3118434 <os_mutex_pend : 106e24 >			  ## vfs.c:1161:11
 1e0d8c2:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1161:11
 1e0d8c4:    02 f9 9c 10       	r2 = b[r1 + 156] (u)			  ## vfs.c:1161:11
 1e0d8c8:    0a 24             	if (r2 == 0) goto 20 <fget_attrs+0x2C : 1e0d8de >
 1e0d8ca:    0d 30             	if (r0 != 0) goto 26 <fget_attrs+0x34 : 1e0d8e6 >
 1e0d8cc:    00 70             	r0 = 0
 1e0d8ce:    08 6a             	b[r5 + 0] = r0			  ## vfs.c:1166:16
 1e0d8d0:    20 42             	r0 = [r1 + 8]			  ## vfs.c:1168:19
 1e0d8d2:    a2 41             	r2 = [r0 + 104]			  ## vfs.c:1168:24
 1e0d8d4:    04 24             	if (r2 == 0) goto 8 <fget_attrs+0x2C : 1e0d8de >			  ## vfs.c:1168:24
 1e0d8d6:    40 08             	r0 = r4			  ## vfs.c:1169:15
 1e0d8d8:    51 08             	r1 = r5			  ## vfs.c:1169:15
 1e0d8da:    82 00             	call r2			  ## vfs.c:1169:15
 1e0d8dc:    01 48             	r1 = [r4 + 0]			  ## vfs.c:1169:15
 1e0d8de:    10 fc 4c 00       	r0 = r1 + 76
 1e0d8e2:    97 f3 a1 ca       	call 3118402 <os_mutex_post : 106e28 >
 1e0d8e6:    55 01             	{pc, r5, r4} = [sp++]


sdfile_cpu_addr2flash_addr:
 1e0d8e8:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## sdfile_new.c:162:0
 1e0d8ee:    02 f6 9c 11       	r2 = [r1 + 412]			  ## sdfile_new.c:163:29
 1e0d8f2:    01 f6 98 11       	r1 = [r1 + 408]			  ## sdfile_new.c:163:48
 1e0d8f6:    a0 b0             	r0 = r0 - r2			  ## sdfile_new.c:163:19
 1e0d8f8:    10 09             	r0 += r1			  ## sdfile_new.c:163:38
 1e0d8fa:    20 00             	rts			  ## sdfile_new.c:163:5


ASCII_StrCmp:
 1e0d8fc:    74 01             	[--sp] = {rets, r4}			  ## ASCII_lib.c:42:0
 1e0d8fe:    02 70             	r2 = 0			  ## ASCII_lib.c:42:0
 1e0d900:    04 fa 00 02       	r4 = b[r0+r2] (u)			  ## ASCII_lib.c:46:14
 1e0d904:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## ASCII_lib.c:46:14
 1e0d908:    0f 28             	if (r4 == 0) goto 30 <ASCII_StrCmp+0x2C : 1e0d928 >			  ## ASCII_lib.c:46:14
 1e0d90a:    0f 26             	if (r3 == 0) goto 30 <ASCII_StrCmp+0x2E : 1e0d92a >
 1e0d90c:    a4 e2 08 00       	if (r4 == 42) goto 16 <ASCII_StrCmp+0x24 : 1e0d920 >
 1e0d910:    f4 e3 06 00       	if (r4 == 63) goto 12 <ASCII_StrCmp+0x24 : 1e0d920 >
 1e0d914:    a3 e2 04 00       	if (r3 == 42) goto 8 <ASCII_StrCmp+0x24 : 1e0d920 >
 1e0d918:    34 f2 02 00       	if (r4 == r3) goto 4 <ASCII_StrCmp+0x24 : 1e0d920 >
 1e0d91c:    f3 e3 05 10       	if (r3 != 63) goto 10 <ASCII_StrCmp+0x2E : 1e0d92a >
 1e0d920:    12 80             	r2 += 1			  ## ASCII_lib.c:45:5
 1e0d922:    f2 ef ed 1f       	if (r2 != -1) goto -38 <ASCII_StrCmp+0x4 : 1e0d900 >			  ## ASCII_lib.c:45:5
 1e0d926:    03 18             	goto 6 <ASCII_StrCmp+0x32 : 1e0d92e >			  ## ASCII_lib.c:45:5
 1e0d928:    02 26             	if (r3 == 0) goto 4 <ASCII_StrCmp+0x32 : 1e0d92e >
 1e0d92a:    10 94             	r0 = r2 + 1
 1e0d92c:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1
 1e0d92e:    00 70             	r0 = 0
 1e0d930:    54 01             	{pc, r4} = [sp++]			  ## ASCII_lib.c:66:1


dev_open:
 1e0d932:    77 01             	[--sp] = {rets, r7-r4}			  ## device_api.c:21:0
 1e0d934:    fe 0b             	sp += -4			  ## device_api.c:21:0
 1e0d936:    15 08             	r5 = r1			  ## device_api.c:21:0
 1e0d938:    01 08             	r1 = r0			  ## device_api.c:21:0
 1e0d93a:    c7 ff 68 a3 e0 01 	r7 = 31499112 <system_text_start : 1e0a368 >			  ## device_api.c:21:0
 1e0d940:    c6 ff 68 a3 e0 01 	r6 = 31499112 <system_text_start : 1e0a368 >			  ## device_api.c:21:0
 1e0d946:    04 70             	r4 = 0			  ## device_api.c:21:0
 1e0d948:    76 f2 1c 20       	if (r6 >= r7) goto 56 <dev_open+0x52 : 1e0d984 >			  ## device_api.c:21:0
 1e0d94c:    00 4c             	r0 = [r6 + 0]			  ## device_api.c:28:30
 1e0d94e:    bf f3 d5 ff       	call -86 <ASCII_StrCmp : 1e0d8fc >			  ## device_api.c:28:14
 1e0d952:    04 20             	if (r0 == 0) goto 8 <dev_open+0x2A : 1e0d95c >			  ## device_api.c:28:14
 1e0d954:    c6 80             	r6 += 12			  ## device_api.c:27:5
 1e0d956:    76 f2 f9 3f       	if (r6 < r7) goto -14 <dev_open+0x1A : 1e0d94c >
 1e0d95a:    14 18             	goto 40 <dev_open+0x52 : 1e0d984 >
 1e0d95c:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:29:22
 1e0d95e:    23 40             	r3 = [r0 + 8]			  ## device_api.c:29:27
 1e0d960:    02 a0             	r2 = sp + 0			  ## device_api.c:29:27
 1e0d962:    10 08             	r0 = r1			  ## device_api.c:29:19
 1e0d964:    21 08             	r1 = r2			  ## device_api.c:29:19
 1e0d966:    52 08             	r2 = r5			  ## device_api.c:29:19
 1e0d968:    83 00             	call r3			  ## device_api.c:29:19
 1e0d96a:    0c 30             	if (r0 != 0) goto 24 <dev_open+0x52 : 1e0d984 >
 1e0d96c:    10 4c             	r0 = [r6 + 4]			  ## device_api.c:34:30
 1e0d96e:    04 02             	r4 = [sp]			  ## device_api.c:34:13
 1e0d970:    28 48             	[r4 + 8] = r0			  ## device_api.c:34:25
 1e0d972:    97 f3 13 ca       	call 3118118 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e0d976:    08 00             	csync			  ## atomic.h:16:5
 1e0d978:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e0d97a:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e0d97c:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e0d97e:    97 f3 0b ca       	call 3118102 <local_irq_enable : 106d98 >			  ## atomic.h:21:5
 1e0d982:    04 02             	r4 = [sp]			  ## device_api.c:37:20
 1e0d984:    40 08             	r0 = r4			  ## device_api.c:42:1
 1e0d986:    02 0a             	sp += 4			  ## device_api.c:42:1
 1e0d988:    57 01             	{pc, r7-r4} = [sp++]			  ## device_api.c:42:1


dev_close:
 1e0d98a:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:111:0
 1e0d98c:    04 08             	r4 = r0			  ## device_api.c:111:0
 1e0d98e:    97 f3 05 ca       	call 3118090 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e0d992:    08 00             	csync			  ## atomic.h:32:5
 1e0d994:    00 48             	r0 = [r4 + 0]			  ## atomic.h:34:14
 1e0d996:    05 fc ff ff       	r5 = r0 + -1			  ## atomic.h:35:22
 1e0d99a:    0d 48             	[r4 + 0] = r5			  ## atomic.h:35:16
 1e0d99c:    97 f3 fc c9       	call 3118072 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e0d9a0:    05 3a             	if (r5 != 0) goto 10 <dev_close+0x22 : 1e0d9ac >			  ## atomic.h:37:5
 1e0d9a2:    20 48             	r0 = [r4 + 8]			  ## device_api.c:115:21
 1e0d9a4:    71 40             	r1 = [r0 + 28]			  ## device_api.c:115:26
 1e0d9a6:    02 22             	if (r1 == 0) goto 4 <dev_close+0x22 : 1e0d9ac >			  ## device_api.c:115:26
 1e0d9a8:    40 08             	r0 = r4			  ## device_api.c:116:20
 1e0d9aa:    81 00             	call r1			  ## device_api.c:116:20
 1e0d9ac:    55 01             	{pc, r5, r4} = [sp++]


dev_ioctl:
 1e0d9ae:    34 00             	[--sp] = rets			  ## device_api.c:99:0
 1e0d9b0:    21 40             	r1 = [r0 + 8]			  ## device_api.c:102:17
 1e0d9b2:    63 42             	r3 = [r1 + 24]			  ## device_api.c:102:22
 1e0d9b4:    03 26             	if (r3 == 0) goto 6 <dev_ioctl+0xE : 1e0d9bc >			  ## device_api.c:102:22
 1e0d9b6:    01 71             	r1 = 16			  ## device_api.c:103:16
 1e0d9b8:    02 70             	r2 = 0			  ## device_api.c:103:16
 1e0d9ba:    83 00             	call r3			  ## device_api.c:103:16
 1e0d9bc:    30 00             	pc = [sp++]


devices_init:
 1e0d9be:    75 01             	[--sp] = {rets, r5, r4}			  ## device_api.c:150:0
 1e0d9c0:    c5 ff 68 a3 e0 01 	r5 = 31499112 <system_text_start : 1e0a368 >			  ## device_api.c:150:0
 1e0d9c6:    c4 ff 68 a3 e0 01 	r4 = 31499112 <system_text_start : 1e0a368 >			  ## device_api.c:150:0
 1e0d9cc:    54 f2 0d 20       	if (r4 >= r5) goto 26 <devices_init+0x2C : 1e0d9ea >			  ## device_api.c:150:0
 1e0d9d0:    10 48             	r0 = [r4 + 4]			  ## device_api.c:156:18
 1e0d9d2:    08 20             	if (r0 == 0) goto 16 <devices_init+0x26 : 1e0d9e4 >
 1e0d9d4:    12 40             	r2 = [r0 + 4]			  ## device_api.c:157:25
 1e0d9d6:    06 24             	if (r2 == 0) goto 12 <devices_init+0x26 : 1e0d9e4 >			  ## device_api.c:157:25
 1e0d9d8:    21 48             	r1 = [r4 + 8]			  ## device_api.c:159:35
 1e0d9da:    40 08             	r0 = r4			  ## device_api.c:159:19
 1e0d9dc:    82 00             	call r2			  ## device_api.c:159:19
 1e0d9de:    02 20             	if (r0 == 0) goto 4 <devices_init+0x26 : 1e0d9e4 >
 1e0d9e0:    8f f3 8e ac       	call 2054428 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0d9e4:    c4 80             	r4 += 12			  ## device_api.c:155:5
 1e0d9e6:    54 f2 f3 3f       	if (r4 < r5) goto -26 <devices_init+0x12 : 1e0d9d0 >
 1e0d9ea:    55 01             	{pc, r5, r4} = [sp++]


boot_info_init:
 1e0d9ec:    21 40             	r1 = [r0 + 8]			  ## init.c:131:0
 1e0d9ee:    12 40             	r2 = [r0 + 4]			  ## init.c:136:5
 1e0d9f0:    c3 ff 00 08 00 00 	r3 = 2048 <report_mmu_tlb_size : 800 >			  ## init.c:136:5
 1e0d9f6:    59 46             	[r3 + 20] = r1			  ## init.c:136:5
 1e0d9f8:    4a 46             	[r3 + 16] = r2			  ## init.c:136:5
 1e0d9fa:    01 40             	r1 = [r0 + 0]			  ## init.c:137:34
 1e0d9fc:    22 42             	r2 = [r1 + 8]			  ## init.c:137:43
 1e0d9fe:    6a 46             	[r3 + 24] = r2			  ## init.c:137:26
 1e0da00:    d1 62             	r1 = b[r1 + 13] (u)			  ## init.c:138:41
 1e0da02:    09 66             	b[r3 + 0] = r1			  ## init.c:138:24
 1e0da04:    61 50             	r1 = h[r0 + 12] (u)			  ## init.c:139:31
 1e0da06:    e9 56             	h[r3 + 28] = r1			  ## init.c:139:23
 1e0da08:    71 50             	r1 = h[r0 + 14] (u)			  ## init.c:140:34
 1e0da0a:    f9 56             	h[r3 + 30] = r1			  ## init.c:140:26
 1e0da0c:    51 40             	r1 = [r0 + 20]			  ## init.c:141:5
 1e0da0e:    40 40             	r0 = [r0 + 16]			  ## init.c:141:5
 1e0da10:    99 46             	[r3 + 36] = r1			  ## init.c:141:5
 1e0da12:    88 46             	[r3 + 32] = r0			  ## init.c:141:5
 1e0da14:    20 00             	rts			  ## init.c:147:1


main:
 1e0da16:    34 00             	[--sp] = rets			  ## init.c:204:0
 1e0da18:    bf f3 75 ad       	call -42262 <wdt_close : 1e03506 >			  ## init.c:205:5
 1e0da1c:    97 f3 c2 c9       	call 3117956 <os_init : 106da4 >			  ## init.c:207:5
 1e0da20:    bf f3 53 af       	call -41306 <setup_arch : 1e038ca >			  ## init.c:209:5
 1e0da24:    c0 ff 06 db e0 01 	r0 = 31513350 <app_task_handler : 1e0db06 >			  ## init.c:213:5
 1e0da2a:    c2 ff 4b e0 e0 01 	r2 = 31514699 <update_target_end+0x16B : 1e0e04b >			  ## init.c:213:5
 1e0da30:    01 70             	r1 = 0			  ## init.c:213:5
 1e0da32:    bf f3 bf ed       	call -9346 <task_create : 1e0b5b4 >			  ## init.c:213:5
 1e0da36:    97 f3 b7 c9       	call 3117934 <os_start : 106da8 >			  ## init.c:215:5
 1e0da3a:    02 00             	idle			  ## init.c:220:9
 1e0da3c:    fe 1f             	goto -4 <main+0x24 : 1e0da3a >			  ## init.c:219:5


app_task_init:
 1e0da3e:    75 01             	[--sp] = {rets, r5, r4}			  ## init.c:71:0
 1e0da40:    c4 ff c8 dd e0 01 	r4 = 31514056 <late_initcall_begin : 1e0ddc8 >			  ## init.c:71:0
 1e0da46:    c5 ff c0 dd e0 01 	r5 = 31514048 <initcall_end : 1e0ddc0 >			  ## init.c:71:0
 1e0da4c:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x1C : 1e0da5a >			  ## init.c:71:0
 1e0da50:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:29:5
 1e0da54:    80 00             	call r0			  ## init.c:29:5
 1e0da56:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x12 : 1e0da50 >
 1e0da5a:    c4 ff d0 dd e0 01 	r4 = 31514064 <syscfg_ops_begin : 1e0ddd0 >
 1e0da60:    c5 ff cc dd e0 01 	r5 = 31514060 <platform_initcall_begin : 1e0ddcc >
 1e0da66:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x36 : 1e0da74 >
 1e0da6a:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:39:5
 1e0da6e:    80 00             	call r0			  ## init.c:39:5
 1e0da70:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x2C : 1e0da6a >
 1e0da74:    bf f3 b2 b4       	call -38556 <board_init : 1e043dc >			  ## init.c:76:5
 1e0da78:    c4 ff c0 dd e0 01 	r4 = 31514048 <initcall_end : 1e0ddc0 >			  ## init.c:76:5
 1e0da7e:    c5 ff bc dd e0 01 	r5 = 31514044 <initcall_begin : 1e0ddbc >			  ## init.c:76:5
 1e0da84:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x54 : 1e0da92 >
 1e0da88:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:24:5
 1e0da8c:    80 00             	call r0			  ## init.c:24:5
 1e0da8e:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x4A : 1e0da88 >
 1e0da92:    c4 ff d0 dd e0 01 	r4 = 31514064 <syscfg_ops_begin : 1e0ddd0 >
 1e0da98:    c5 ff d0 dd e0 01 	r5 = 31514064 <syscfg_ops_begin : 1e0ddd0 >
 1e0da9e:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x6E : 1e0daac >
 1e0daa2:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:44:5
 1e0daa6:    80 00             	call r0			  ## init.c:44:5
 1e0daa8:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x64 : 1e0daa2 >
 1e0daac:    c4 ff cc dd e0 01 	r4 = 31514060 <platform_initcall_begin : 1e0ddcc >
 1e0dab2:    c5 ff c8 dd e0 01 	r5 = 31514056 <late_initcall_begin : 1e0ddc8 >
 1e0dab8:    45 f2 05 20       	if (r5 >= r4) goto 10 <app_task_init+0x88 : 1e0dac6 >
 1e0dabc:    40 f6 04 50       	r0 = [r5 ++= 4]			  ## init.c:34:5
 1e0dac0:    80 00             	call r0			  ## init.c:34:5
 1e0dac2:    45 f2 fb 3f       	if (r5 < r4) goto -10 <app_task_init+0x7E : 1e0dabc >
 1e0dac6:    c0 ff 60 08 00 00 	r0 = 2144 <head : 860 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e0dacc:    08 40             	[r0 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:188:16
 1e0dace:    18 40             	[r0 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e0dad0:    c0 ff e8 1d 00 00 	r0 = 7656 <mutex.1521 : 1de8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e0dad6:    97 f3 a1 c9       	call 3117890 <os_mutex_create : 106e1c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e0dada:    c0 ff b8 09 00 00 	r0 = 2488 <system_data_end : 9b8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e0dae0:    c1 ff 98 09 00 00 	r1 = 2456 <system_data_start : 998 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:440:5
 1e0dae6:    01 f2 09 20       	if (r1 >= r0) goto 18 <app_task_init+0xBE : 1e0dafc >
 1e0daea:    01 81             	r1 += 16
 1e0daec:    09 42             	[r1 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:188:16
 1e0daee:    02 93             	r2 = r1 + 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:442:5
 1e0daf0:    13 fc 20 00       	r3 = r1 + 32			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:442:5
 1e0daf4:    19 42             	[r1 + 4] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e0daf6:    31 08             	r1 = r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e0daf8:    02 f2 f8 3f       	if (r2 < r0) goto -16 <app_task_init+0xAE : 1e0daec >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:189:16
 1e0dafc:    bf f3 6d f2       	call -6950 <register_sys_event_handler : 1e0bfda >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:446:5
 1e0db00:    15 01             	{rets, r5, r4} = [sp++]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:448:5
 1e0db02:    ff f3 f0 b5       	goto -37920 <app_main : 1e046e6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/system/app_core/app_core.c:448:5


app_task_handler:
 1e0db06:    c0 0b             	sp += -128			  ## init.c:87:0
 1e0db08:    9a 17             	call -204 <app_task_init : 1e0da3e >			  ## init.c:91:5
 1e0db0a:    c4 ff d9 df e0 01 	r4 = 31514585 <update_target_end+0xF9 : 1e0dfd9 >
 1e0db10:    01 a0             	r1 = sp + 0
 1e0db12:    02 72             	r2 = 32			  ## init.c:94:15
 1e0db14:    40 08             	r0 = r4			  ## init.c:94:15
 1e0db16:    97 f3 5b c9       	call 3117750 <os_taskq_pend : 106dd0 >			  ## init.c:94:15
 1e0db1a:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <app_task_handler+0xA : 1e0db10 >			  ## init.c:95:13
 1e0db1e:    00 a0             	r0 = sp + 0
 1e0db20:    bf f3 e0 f5       	call -5184 <app_core_msg_handler : 1e0c6e4 >			  ## init.c:98:9
 1e0db24:    f5 1f             	goto -22 <app_task_handler+0xA : 1e0db10 >			  ## init.c:98:9


lbuf_alloc:
 1e0db26:    77 01             	[--sp] = {rets, r7-r4}			  ## lbuf.c:214:0
 1e0db28:    04 08             	r4 = r0			  ## lbuf.c:214:0
 1e0db2a:    b0 58             	r0 = h[r4 + 22] (u)			  ## lbuf.c:224:14
 1e0db2c:    42 69             	r2 = b[r4 + 20] (u)			  ## lbuf.c:224:14
 1e0db2e:    43 91             	r3 = r0 + 20			  ## lbuf.c:224:14
 1e0db30:    20 fc ff ff       	r0 = r2 + -1			  ## lbuf.c:224:14
 1e0db34:    e2 fd 30 50       	r5 = r0 & r3			  ## lbuf.c:224:14
 1e0db38:    66 b5             	r6 = r2 - r5			  ## lbuf.c:224:14
 1e0db3a:    07 70             	r7 = 0			  ## lbuf.c:224:14
 1e0db3c:    05 70             	r5 = 0			  ## lbuf.c:224:14
 1e0db3e:    30 f0 01 00       	if ((r0 & r3) == 0) goto 2 <lbuf_alloc+0x1E : 1e0db44 >
 1e0db42:    65 08             	r5 = r6			  ## lbuf.c:224:14
 1e0db44:    31 09             	r1 += r3			  ## lbuf.c:226:11
 1e0db46:    51 09             	r1 += r5			  ## lbuf.c:226:11
 1e0db48:    e2 fd 00 31       	r3 = r1 & r0			  ## lbuf.c:226:11
 1e0db4c:    e3 b4             	r3 = r2 - r3			  ## lbuf.c:226:11
 1e0db4e:    02 70             	r2 = 0			  ## lbuf.c:226:11
 1e0db50:    01 f0 01 00       	if ((r1 & r0) == 0) goto 2 <lbuf_alloc+0x30 : 1e0db56 >			  ## lbuf.c:226:11
 1e0db54:    32 08             	r2 = r3			  ## lbuf.c:226:11
 1e0db56:    46 b4             	r6 = r2 + r1			  ## lbuf.c:226:11
 1e0db58:    97 f3 20 c9       	call 3117632 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0db5c:    21 48             	r1 = [r4 + 8]			  ## lbuf.c:230:5
 1e0db5e:    82 98             	r2 = r4 + 8			  ## lbuf.c:230:5
 1e0db60:    00 70             	r0 = 0			  ## lbuf.c:230:5
 1e0db62:    21 f2 19 00       	if (r1 == r2) goto 50 <lbuf_alloc+0x72 : 1e0db98 >			  ## lbuf.c:230:5
 1e0db66:    41 f2 04 90       	if (r1 <= r4) goto 8 <lbuf_alloc+0x4C : 1e0db72 >
 1e0db6a:    63 48             	r3 = [r4 + 24]			  ## lbuf.c:232:67
 1e0db6c:    43 09             	r3 += r4			  ## lbuf.c:232:59
 1e0db6e:    31 f2 02 90       	if (r1 <= r3) goto 4 <lbuf_alloc+0x50 : 1e0db76 >			  ## lbuf.c:232:59
 1e0db72:    60 f3 00 00       	trigger			  ## lbuf.c:233:13
 1e0db76:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:237:16
 1e0db78:    63 f2 08 30       	if (r3 < r6) goto 16 <lbuf_alloc+0x66 : 1e0db8c >			  ## lbuf.c:237:16
 1e0db7c:    03 20             	if (r0 == 0) goto 6 <lbuf_alloc+0x5E : 1e0db84 >
 1e0db7e:    27 40             	r7 = [r0 + 8]			  ## lbuf.c:241:28
 1e0db80:    37 f2 01 90       	if (r7 <= r3) goto 2 <lbuf_alloc+0x60 : 1e0db86 >			  ## lbuf.c:241:28
 1e0db84:    10 08             	r0 = r1
 1e0db86:    73 48             	r3 = [r4 + 28]			  ## lbuf.c:245:28
 1e0db88:    31 f2 05 80       	if (r1 > r3) goto 10 <lbuf_alloc+0x70 : 1e0db96 >			  ## lbuf.c:245:28
 1e0db8c:    01 42             	r1 = [r1 + 0]			  ## lbuf.c:230:5
 1e0db8e:    21 f2 ea 1f       	if (r1 != r2) goto -44 <lbuf_alloc+0x40 : 1e0db66 >
 1e0db92:    07 70             	r7 = 0
 1e0db94:    01 18             	goto 2 <lbuf_alloc+0x72 : 1e0db98 >
 1e0db96:    17 08             	r7 = r1
 1e0db98:    01 3e             	if (r7 != 0) goto 2 <lbuf_alloc+0x76 : 1e0db9c >
 1e0db9a:    07 08             	r7 = r0			  ## lbuf.c:251:9
 1e0db9c:    0d 2e             	if (r7 == 0) goto 26 <lbuf_alloc+0x92 : 1e0dbb8 >
 1e0db9e:    7f 48             	[r4 + 28] = r7			  ## lbuf.c:254:25
 1e0dba0:    22 4e             	r2 = [r7 + 8]			  ## lbuf.c:257:16
 1e0dba2:    c0 9c             	r0 = r6 + 12			  ## lbuf.c:257:26
 1e0dba4:    02 f2 0a 90       	if (r2 <= r0) goto 20 <lbuf_alloc+0x96 : 1e0dbbc >			  ## lbuf.c:257:13
 1e0dba8:    80 bf             	r0 = r7 + r6			  ## lbuf.c:258:44
 1e0dbaa:    a1 b5             	r1 = r2 - r6			  ## lbuf.c:259:31
 1e0dbac:    29 40             	[r0 + 8] = r1			  ## lbuf.c:259:22
 1e0dbae:    02 4e             	r2 = [r7 + 0]			  ## lbuf.c:261:61
 1e0dbb0:    11 4e             	r1 = [r7 + 4]			  ## lbuf.c:261:46
 1e0dbb2:    18 44             	[r2 + 4] = r0			  ## list.h:137:16
 1e0dbb4:    0a 40             	[r0 + 0] = r2			  ## list.h:138:16
 1e0dbb6:    05 18             	goto 10 <lbuf_alloc+0x9C : 1e0dbc2 >			  ## list.h:138:16
 1e0dbb8:    04 70             	r4 = 0
 1e0dbba:    10 18             	goto 32 <lbuf_alloc+0xB6 : 1e0dbdc >
 1e0dbbc:    00 4e             	r0 = [r7 + 0]			  ## list.h:165:36
 1e0dbbe:    11 4e             	r1 = [r7 + 4]			  ## list.h:165:23
 1e0dbc0:    26 08             	r6 = r2			  ## list.h:165:23
 1e0dbc2:    19 40             	[r0 + 4] = r1
 1e0dbc4:    08 42             	[r1 + 0] = r0
 1e0dbc6:    40 bf             	r0 = r7 + r5			  ## lbuf.c:268:43
 1e0dbc8:    4e 50             	h[r0 + 8] = r6			  ## lbuf.c:269:20
 1e0dbca:    21 b1             	r1 = r0 - r4			  ## lbuf.c:270:37
 1e0dbcc:    59 50             	h[r0 + 10] = r1			  ## lbuf.c:270:23
 1e0dbce:    01 70             	r1 = 0			  ## lbuf.c:271:28
 1e0dbd0:    d9 60             	b[r0 + 13] = r1			  ## lbuf.c:271:28
 1e0dbd2:    11 70             	r1 = 1			  ## lbuf.c:272:20
 1e0dbd4:    c9 60             	b[r0 + 12] = r1			  ## lbuf.c:272:20
 1e0dbd6:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e0dbd8:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e0dbda:    44 91             	r4 = r0 + 20			  ## lbuf.c:280:21
 1e0dbdc:    97 f3 dc c8       	call 3117496 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0dbe0:    40 08             	r0 = r4			  ## lbuf.c:290:5
 1e0dbe2:    57 01             	{pc, r7-r4} = [sp++]			  ## lbuf.c:290:5


lbuf_real_size:
 1e0dbe4:    00 f7 f4 0f       	r0 = h[r0 + -12] (u)			  ## lbuf.c:391:0
 1e0dbe8:    20 00             	rts			  ## lbuf.c:394:5


lbuf_free:
 1e0dbea:    78 01             	[--sp] = {rets, r8-r4}			  ## lbuf.c:493:0
 1e0dbec:    28 fb 00 13       	r1 = rets			  ## lbuf.c:503:5
 1e0dbf0:    20 20             	if (r0 == 0) goto 64 <lbuf_free+0x48 : 1e0dc32 >
 1e0dbf2:    07 fc ec ff       	r7 = r0 + -20
 1e0dbf6:    50 5e             	r0 = h[r7 + 10] (u)			  ## lbuf.c:512:48
 1e0dbf8:    26 be             	r6 = r7 - r0			  ## lbuf.c:512:46
 1e0dbfa:    b4 5c             	r4 = h[r6 + 22] (u)			  ## lbuf.c:516:14
 1e0dbfc:    45 6d             	r5 = b[r6 + 20] (u)			  ## lbuf.c:516:14
 1e0dbfe:    08 f7 08 70       	r8 = h[r7 + 8] (u)			  ## lbuf.c:519:22
 1e0dc02:    97 f3 cb c8       	call 3117462 <local_irq_disable : 106d9c >			  ## spinlock.h:77:5
 1e0dc06:    c0 6e             	r0 = b[r7 + 12] (u)			  ## lbuf.c:524:9
 1e0dc08:    f0 8f             	r0 += -1			  ## lbuf.c:524:9
 1e0dc0a:    c8 6e             	b[r7 + 12] = r0			  ## lbuf.c:524:9
 1e0dc0c:    c1 ff ff ff 01 00 	r1 = 131071 <text_size+0x7E1F : 1ffff >			  ## lbuf.c:516:14
 1e0dc12:    43 ba             	r3 = r5 + r1			  ## lbuf.c:516:14
 1e0dc14:    44 81             	r4 += 20			  ## lbuf.c:516:14
 1e0dc16:    e2 fd 40 13       	r1 = r3 & r4			  ## lbuf.c:516:14
 1e0dc1a:    62 b3             	r2 = r1 - r5			  ## lbuf.c:518:40
 1e0dc1c:    05 70             	r5 = 0			  ## lbuf.c:518:40
 1e0dc1e:    01 70             	r1 = 0			  ## lbuf.c:518:40
 1e0dc20:    43 f0 01 00       	if ((r3 & r4) == 0) goto 2 <lbuf_free+0x3C : 1e0dc26 >
 1e0dc24:    21 08             	r1 = r2			  ## lbuf.c:518:40
 1e0dc26:    60 ff ff 09 06 00 	if ((r0 & 255) == 0) goto 12 <lbuf_free+0x4E : 1e0dc38 >
 1e0dc2c:    97 f3 b4 c8       	call 3117416 <local_irq_enable : 106d98 >			  ## spinlock.h:88:5
 1e0dc30:    01 18             	goto 2 <lbuf_free+0x4A : 1e0dc34 >			  ## spinlock.h:88:5
 1e0dc32:    05 70             	r5 = 0
 1e0dc34:    50 08             	r0 = r5			  ## lbuf.c:577:1
 1e0dc36:    58 01             	{pc, r8-r4} = [sp++]			  ## lbuf.c:577:1
 1e0dc38:    02 4e             	r2 = [r7 + 0]			  ## list.h:165:36
 1e0dc3a:    13 4e             	r3 = [r7 + 4]			  ## list.h:165:23
 1e0dc3c:    40 be             	r0 = r7 + r1			  ## lbuf.c:518:40
 1e0dc3e:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e0dc40:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e0dc42:    18 f6 08 00       	[r0 + 8] = r8			  ## lbuf.c:534:14
 1e0dc46:    21 4c             	r1 = [r6 + 8]			  ## lbuf.c:537:5
 1e0dc48:    82 9c             	r2 = r6 + 8			  ## lbuf.c:537:5
 1e0dc4a:    21 f2 0f 00       	if (r1 == r2) goto 30 <lbuf_free+0x82 : 1e0dc6c >
 1e0dc4e:    61 f2 10 90       	if (r1 <= r6) goto 32 <lbuf_free+0x88 : 1e0dc72 >
 1e0dc52:    63 4c             	r3 = [r6 + 24]			  ## lbuf.c:539:67
 1e0dc54:    63 09             	r3 += r6			  ## lbuf.c:539:59
 1e0dc56:    31 f2 0c 80       	if (r1 > r3) goto 24 <lbuf_free+0x88 : 1e0dc72 >			  ## lbuf.c:539:59
 1e0dc5a:    01 f2 0d 80       	if (r1 > r0) goto 26 <lbuf_free+0x8E : 1e0dc78 >			  ## lbuf.c:544:24
 1e0dc5e:    23 42             	r3 = [r1 + 8]			  ## lbuf.c:544:41
 1e0dc60:    13 09             	r3 += r1			  ## lbuf.c:544:36
 1e0dc62:    03 f2 27 80       	if (r3 > r0) goto 78 <lbuf_free+0xCA : 1e0dcb4 >			  ## lbuf.c:544:36
 1e0dc66:    01 42             	r1 = [r1 + 0]			  ## lbuf.c:537:5
 1e0dc68:    21 f2 f1 1f       	if (r1 != r2) goto -30 <lbuf_free+0x64 : 1e0dc4e >
 1e0dc6c:    43 94             	r3 = r2 + 4			  ## list.h:154:28
 1e0dc6e:    21 08             	r1 = r2			  ## list.h:154:28
 1e0dc70:    04 18             	goto 8 <lbuf_free+0x90 : 1e0dc7a >			  ## list.h:154:28
 1e0dc72:    60 f3 00 00       	trigger			  ## lbuf.c:540:13
 1e0dc76:    da 1f             	goto -76 <lbuf_free+0x42 : 1e0dc2c >			  ## lbuf.c:540:13
 1e0dc78:    43 92             	r3 = r1 + 4			  ## lbuf.c:551:46
 1e0dc7a:    02 46             	r2 = [r3 + 0]
 1e0dc7c:    08 46             	[r3 + 0] = r0			  ## list.h:137:16
 1e0dc7e:    09 40             	[r0 + 0] = r1			  ## list.h:138:16
 1e0dc80:    1a 40             	[r0 + 4] = r2			  ## list.h:139:16
 1e0dc82:    08 44             	[r2 + 0] = r0			  ## list.h:140:16
 1e0dc84:    23 44             	r3 = [r2 + 8]			  ## lbuf.c:563:27
 1e0dc86:    01 40             	r1 = [r0 + 0]			  ## lbuf.c:561:12
 1e0dc88:    84 b6             	r4 = r3 + r2			  ## lbuf.c:563:19
 1e0dc8a:    04 f2 06 10       	if (r4 != r0) goto 12 <lbuf_free+0xB0 : 1e0dc9a >			  ## lbuf.c:563:19
 1e0dc8e:    38 09             	r8 += r3			  ## lbuf.c:564:19
 1e0dc90:    18 f6 08 20       	[r2 + 8] = r8			  ## lbuf.c:564:19
 1e0dc94:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e0dc96:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e0dc98:    20 08             	r0 = r2			  ## list.h:160:16
 1e0dc9a:    80 fb 80 20       	r2 = r0 + r8			  ## lbuf.c:568:18
 1e0dc9e:    15 70             	r5 = 1
 1e0dca0:    12 f2 c4 1f       	if (r2 != r1) goto -120 <lbuf_free+0x42 : 1e0dc2c >
 1e0dca4:    22 42             	r2 = [r1 + 8]			  ## lbuf.c:569:27
 1e0dca6:    82 09             	r2 += r8			  ## lbuf.c:569:18
 1e0dca8:    2a 40             	[r0 + 8] = r2			  ## lbuf.c:569:18
 1e0dcaa:    00 42             	r0 = [r1 + 0]			  ## list.h:165:36
 1e0dcac:    11 42             	r1 = [r1 + 4]			  ## list.h:165:23
 1e0dcae:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e0dcb0:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e0dcb2:    bc 1f             	goto -136 <lbuf_free+0x42 : 1e0dc2c >			  ## list.h:160:16
 1e0dcb4:    60 f3 00 00       	trigger			  ## lbuf.c:545:13
 1e0dcb8:    b9 1f             	goto -142 <lbuf_free+0x42 : 1e0dc2c >			  ## lbuf.c:545:13


lbuf_realloc:
 1e0dcba:    79 01             	[--sp] = {rets, r9-r4}			  ## lbuf.c:310:0
 1e0dcbc:    09 08             	r9 = r0			  ## lbuf.c:310:0
 1e0dcbe:    04 fc f4 ff       	r4 = r0 + -12			  ## lbuf.c:310:0
 1e0dcc2:    10 58             	r0 = h[r4 + 2] (u)			  ## lbuf.c:316:67
 1e0dcc4:    90 fb 00 39       	r3 = r9 - r0			  ## lbuf.c:315:28
 1e0dcc8:    80 f9 ec 3f       	r0 = b[r3 ++= -20] (u)			  ## lbuf.c:322:12
 1e0dccc:    06 fc ff ff       	r6 = r0 + -1			  ## lbuf.c:322:12
 1e0dcd0:    e2 fd 10 56       	r5 = r6 & r1			  ## lbuf.c:322:12
 1e0dcd4:    60 b1             	r0 = r0 - r5			  ## lbuf.c:322:12
 1e0dcd6:    05 70             	r5 = 0			  ## lbuf.c:322:12
 1e0dcd8:    16 f0 01 00       	if ((r6 & r1) == 0) goto 2 <lbuf_realloc+0x24 : 1e0dcde >
 1e0dcdc:    05 08             	r5 = r0			  ## lbuf.c:322:12
 1e0dcde:    00 58             	r0 = h[r4 + 0] (u)
 1e0dce0:    15 09             	r5 += r1			  ## lbuf.c:322:12
 1e0dce2:    05 f2 03 d0       	ifs (r5 <= r0) goto 6 <lbuf_realloc+0x32 : 1e0dcec >
 1e0dce6:    8f f3 0b ab       	call 2053654 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0dcea:    00 58             	r0 = h[r4 + 0] (u)			  ## cpu.h:148:5
 1e0dcec:    50 f2 28 d0       	ifs (r0 <= r5) goto 80 <lbuf_realloc+0x86 : 1e0dd40 >
 1e0dcf0:    41 67             	r1 = b[r3 + 20] (u)			  ## lbuf.c:330:14
 1e0dcf2:    b6 56             	r6 = h[r3 + 22] (u)			  ## lbuf.c:330:14
 1e0dcf4:    c7 ff ff ff 01 00 	r7 = 131071 <text_size+0x7E1F : 1ffff >			  ## lbuf.c:330:14
 1e0dcfa:    17 09             	r7 += r1			  ## lbuf.c:330:14
 1e0dcfc:    46 81             	r6 += 20			  ## lbuf.c:330:14
 1e0dcfe:    e2 fd 60 27       	r2 = r7 & r6			  ## lbuf.c:330:14
 1e0dd02:    a8 b2             	r8 = r1 - r2			  ## lbuf.c:330:14
 1e0dd04:    01 70             	r1 = 0			  ## lbuf.c:330:14
 1e0dd06:    67 f0 01 00       	if ((r7 & r6) == 0) goto 2 <lbuf_realloc+0x52 : 1e0dd0c >			  ## lbuf.c:330:14
 1e0dd0a:    81 08             	r1 = r8			  ## lbuf.c:330:14
 1e0dd0c:    67 b1             	r7 = r0 - r5			  ## lbuf.c:337:20
 1e0dd0e:    c7 e0 17 30       	if (r7 < 12) goto 46 <lbuf_realloc+0x86 : 1e0dd40 >			  ## lbuf.c:337:20
 1e0dd12:    16 09             	r6 += r1			  ## lbuf.c:334:40
 1e0dd14:    72 c0             	r2 = r6 << 1			  ## lbuf.c:337:31
 1e0dd16:    27 f2 13 b0       	ifs (r7 < r2) goto 38 <lbuf_realloc+0x86 : 1e0dd40 >			  ## lbuf.c:337:31
 1e0dd1a:    42 bd             	r2 = r6 + r5			  ## lbuf.c:347:27
 1e0dd1c:    0a 58             	h[r4 + 0] = r2			  ## lbuf.c:347:16
 1e0dd1e:    b2 56             	r2 = h[r3 + 22] (u)			  ## lbuf.c:349:42
 1e0dd20:    92 09             	r2 += r9			  ## lbuf.c:349:40
 1e0dd22:    52 09             	r2 += r5			  ## lbuf.c:349:57
 1e0dd24:    21 09             	r1 += r2			  ## lbuf.c:349:64
 1e0dd26:    02 70             	r2 = 0			  ## lbuf.c:350:23
 1e0dd28:    da 62             	b[r1 + 13] = r2			  ## lbuf.c:350:23
 1e0dd2a:    12 70             	r2 = 1			  ## lbuf.c:351:15
 1e0dd2c:    ca 62             	b[r1 + 12] = r2			  ## lbuf.c:351:15
 1e0dd2e:    02 58             	r2 = h[r4 + 0] (u)			  ## lbuf.c:352:30
 1e0dd30:    a0 b0             	r0 = r0 - r2			  ## lbuf.c:352:21
 1e0dd32:    48 52             	h[r1 + 8] = r0			  ## lbuf.c:352:15
 1e0dd34:    e0 b2             	r0 = r1 - r3			  ## lbuf.c:353:29
 1e0dd36:    58 52             	h[r1 + 10] = r0			  ## lbuf.c:353:17
 1e0dd38:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e0dd3a:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e0dd3c:    40 93             	r0 = r1 + 20			  ## lbuf.c:362:19
 1e0dd3e:    55 17             	call -342 <lbuf_free : 1e0dbea >			  ## lbuf.c:362:5
 1e0dd40:    59 01             	{pc, r9-r4} = [sp++]


system_code_end:
 1e0dd42:    00 00             	nop


vfs_ops_begin:
 1e0dd44:    ce df             	r6 = r1 >>> 31
 1e0dd46:    e0 01             	[--sp] = {psr}
 1e0dd48:    44 d0             	r4 = r0 >> 1
 1e0dd4a:    e0 01             	[--sp] = {psr}
 1e0dd4c:    00 00             	nop
 1e0dd4e:    00 00             	nop
 1e0dd50:    00 00             	nop
 1e0dd52:    00 00             	nop
 1e0dd54:    00 00             	nop
 1e0dd56:    00 00             	nop
 1e0dd58:    00 00             	nop
 1e0dd5a:    00 00             	nop
 1e0dd5c:    0c d3             	r4 = r1 >> 12
 1e0dd5e:    e0 01             	[--sp] = {psr}
 1e0dd60:    f2 d4             	r2 = r6 >> 19
 1e0dd62:    e0 01             	[--sp] = {psr}
 1e0dd64:    00 00             	nop
 1e0dd66:    00 00             	nop
 1e0dd68:    22 d5             	r2 = r4 >> 20
 1e0dd6a:    e0 01             	[--sp] = {psr}
 1e0dd6c:    86 d5             	r6 = r0 >> 22
 1e0dd6e:    e0 01             	[--sp] = {psr}
 1e0dd70:    00 00             	nop
 1e0dd72:    00 00             	nop
 1e0dd74:    a8 d5             	r0 = r5 >> 22
 1e0dd76:    e0 01             	[--sp] = {psr}
 1e0dd78:    b6 d5             	r6 = r6 >> 22
 1e0dd7a:    e0 01             	[--sp] = {psr}
 1e0dd7c:    00 00             	nop
 1e0dd7e:    00 00             	nop
 1e0dd80:    c4 d5             	r4 = r0 >> 23
 1e0dd82:    e0 01             	[--sp] = {psr}
 1e0dd84:    00 00             	nop
 1e0dd86:    00 00             	nop
 1e0dd88:    00 00             	nop
 1e0dd8a:    00 00             	nop
 1e0dd8c:    e8 d5             	r0 = r5 >> 23
 1e0dd8e:    e0 01             	[--sp] = {psr}
 1e0dd90:    f8 d5             	r0 = r7 >> 23
 1e0dd92:    e0 01             	[--sp] = {psr}
 1e0dd94:    00 00             	nop
 1e0dd96:    00 00             	nop
 1e0dd98:    00 00             	nop
 1e0dd9a:    00 00             	nop
 1e0dd9c:    00 00             	nop
 1e0dd9e:    00 00             	nop
 1e0dda0:    00 00             	nop
 1e0dda2:    00 00             	nop
 1e0dda4:    00 00             	nop
 1e0dda6:    00 00             	nop
 1e0dda8:    00 00             	nop
 1e0ddaa:    00 00             	nop
 1e0ddac:    50 d6             	r0 = r2 >> 25
 1e0ddae:    e0 01             	[--sp] = {psr}
 1e0ddb0:    00 00             	nop
 1e0ddb2:    00 00             	nop
 1e0ddb4:    00 00             	nop
 1e0ddb6:    00 00             	nop


vfs_ops_end:
 1e0ddb8:    7e cd             	r6 = r7 <<< 21
 1e0ddba:    e0 01             	[--sp] = {psr}


initcall_begin:
 1e0ddbc:    f2 11             	call 996 <trans_profile_data+0xA : 1e0e1a2 >
 1e0ddbe:    e0 01             	[--sp] = {psr}


initcall_end:
 1e0ddc0:    b6 bd             	r6 ^= 134217728
 1e0ddc2:    e0 01             	[--sp] = {psr}


__initcall_sdfile_init:
 1e0ddc4:    30 cf             	r0 = r6 <<< 28
 1e0ddc6:    e0 01             	[--sp] = {psr}


late_initcall_begin:
 1e0ddc8:    6e 5c             	h[r6 + 12] = r6
 1e0ddca:    e0 01             	[--sp] = {psr}


platform_initcall_begin:
 1e0ddcc:    fe c6             	r6 = r7 << 27
 1e0ddce:    e0 01             	[--sp] = {psr}


syscfg_ops_begin:
 1e0ddd0:    8e cb             	r6 = r1 <<< 14
 1e0ddd2:    e0 01             	[--sp] = {psr}
 1e0ddd4:    26 cc             	r6 = r4 <<< 16
 1e0ddd6:    e0 01             	[--sp] = {psr}
 1e0ddd8:    40 cc             	r0 = r0 <<< 17
 1e0ddda:    e0 01             	[--sp] = {psr}
 1e0dddc:    8c cc             	r4 = r1 <<< 18
 1e0ddde:    e0 01             	[--sp] = {psr}
 1e0dde0:    00 00             	nop
 1e0dde2:    00 00             	nop
 1e0dde4:    00 00             	nop
 1e0dde6:    00 00             	nop
 1e0dde8:    00 00             	nop
 1e0ddea:    00 00             	nop


cfg_vm:
 1e0ddec:    00 27             	if (r3 == 0) goto -512 <lbuf_free+0x4 : 1e0dbee >
 1e0ddee:    e0 01             	[--sp] = {psr}
 1e0ddf0:    42 29             	if (r4 == 0) goto -380 <lbuf_free+0x8C : 1e0dc76 >
 1e0ddf2:    e0 01             	[--sp] = {psr}
 1e0ddf4:    50 29             	if (r4 == 0) goto -352 <lbuf_free+0xAC : 1e0dc96 >
 1e0ddf6:    e0 01             	[--sp] = {psr}
 1e0ddf8:    1c 2a             	if (r5 == 0) goto 56 <ota_lp_target+0x2 : 1e0de32 >
 1e0ddfa:    e0 01             	[--sp] = {psr}
 1e0ddfc:    00 00             	nop
 1e0ddfe:    00 00             	nop
 1e0de00:    00 00             	nop
 1e0de02:    00 00             	nop
 1e0de04:    00 00             	nop
 1e0de06:    00 00             	nop


cfg_bin:
 1e0de08:    90 c8             	r0 = r2 <<< 2
 1e0de0a:    e0 01             	[--sp] = {psr}
 1e0de0c:    54 c9             	r4 = r2 <<< 5
 1e0de0e:    e0 01             	[--sp] = {psr}
 1e0de10:    68 ca             	r0 = r5 <<< 9
 1e0de12:    e0 01             	[--sp] = {psr}
 1e0de14:    00 00             	nop
 1e0de16:    00 00             	nop
 1e0de18:    00 00             	nop
 1e0de1a:    00 00             	nop
 1e0de1c:    a8 ca             	r0 = r5 <<< 10
 1e0de1e:    e0 01             	[--sp] = {psr}
 1e0de20:    b6 ca             	r6 = r6 <<< 10
 1e0de22:    e0 01             	[--sp] = {psr}


syscfg_ops_end:
 1e0de24:    e0 de             	r0 = r4 >>> 27
 1e0de26:    e0 01             	[--sp] = {psr}
 1e0de28:    00 00             	nop
 1e0de2a:    00 00             	nop
 1e0de2c:    80 04             	r0 = r2.b0 (u)
 1e0de2e:    e0 01             	[--sp] = {psr}


ota_lp_target:
 1e0de30:    ee de             	r6 = r5 >>> 27
 1e0de32:    e0 01             	[--sp] = {psr}
 1e0de34:    00 00             	nop
 1e0de36:    00 00             	nop
 1e0de38:    e2 11             	call 964 <trans_connection_param_table+0x1A : 1e0e1fe >
 1e0de3a:    e0 01             	[--sp] = {psr}


idle_lp_target:
 1e0de3c:    f2 de             	r2 = r6 >>> 27
 1e0de3e:    e0 01             	[--sp] = {psr}
 1e0de40:    00 00             	nop
 1e0de42:    00 00             	nop
 1e0de44:    94 12             	call 1320 <dev_id_list+0xC6 : 1e0e36e >
 1e0de46:    e0 01             	[--sp] = {psr}


spple_state_lp_target:
 1e0de48:    14 df             	r4 = r2 >>> 28
 1e0de4a:    e0 01             	[--sp] = {psr}
 1e0de4c:    00 00             	nop
 1e0de4e:    00 00             	nop
 1e0de50:    d6 13             	call 1964 <dev_id_list+0x356 : 1e0e5fe >
 1e0de52:    e0 01             	[--sp] = {psr}


pwm_lp_target:
 1e0de54:    2c df             	r4 = r5 >>> 28
 1e0de56:    e0 01             	[--sp] = {psr}
 1e0de58:    00 00             	nop
 1e0de5a:    00 00             	nop
 1e0de5c:    a6 16             	call -692 <lbuf_alloc+0x84 : 1e0dbaa >
 1e0de5e:    e0 01             	[--sp] = {psr}


__wakeup_is_idle_target:
 1e0de60:    83 df             	r3 = r0 >>> 30
 1e0de62:    e0 01             	[--sp] = {psr}
 1e0de64:    00 00             	nop
 1e0de66:    00 00             	nop
 1e0de68:    6c 2e             	if (r7 == 0) goto 216 <update_target_end+0x62 : 1e0df42 >
 1e0de6a:    e0 01             	[--sp] = {psr}


usb_dev_lp_target:
 1e0de6c:    8d df             	r5 = r1 >>> 30
 1e0de6e:    e0 01             	[--sp] = {psr}
 1e0de70:    00 00             	nop
 1e0de72:    00 00             	nop
 1e0de74:    d6 2e             	if (r7 == 0) goto 428 <update_target_end+0x142 : 1e0e022 >
 1e0de76:    e0 01             	[--sp] = {psr}


usr_systimer_lp_target:
 1e0de78:    e6 df             	r6 = r4 >>> 31
 1e0de7a:    e0 01             	[--sp] = {psr}
 1e0de7c:    00 00             	nop
 1e0de7e:    00 00             	nop
 1e0de80:    8c ba             	r12 = r5 + r2
 1e0de82:    e0 01             	[--sp] = {psr}


btstack_lowpower_target:
 1e0de84:    23 e0 e0 01       	if (r3 == 2) goto 960 <wk_param+0x38 : 1e0e248 >
 1e0de88:    00 00             	nop
 1e0de8a:    00 00             	nop
 1e0de8c:    04 6c             	r4 = b[r6 + 0] (u)
 1e0de8e:    e0 01             	[--sp] = {psr}


uart:
 1e0de90:    3d df             	r5 = r7 >>> 28
 1e0de92:    e0 01             	[--sp] = {psr}
 1e0de94:    1a 24             	if (r2 == 0) goto 52 <os+0xA : 1e0deca >
 1e0de96:    e0 01             	[--sp] = {psr}
 1e0de98:    34 24             	if (r2 == 0) goto 104 <update_target_end+0x22 : 1e0df02 >
 1e0de9a:    e0 01             	[--sp] = {psr}


clock_sfc:
 1e0de9c:    37 df             	r7 = r6 >>> 28
 1e0de9e:    e0 01             	[--sp] = {psr}
 1e0dea0:    70 3b             	if (r5 != 0) goto -288 <vfs_ops_begin+0x3E : 1e0dd82 >
 1e0dea2:    00 00             	nop
 1e0dea4:    72 3b             	if (r5 != 0) goto -284 <vfs_ops_begin+0x46 : 1e0dd8a >
 1e0dea6:    00 00             	nop


vm_sfc:
 1e0dea8:    c7 df             	r7 = r0 >>> 31
 1e0deaa:    e0 01             	[--sp] = {psr}
 1e0deac:    86 45             	r6 = [r2 + 96]
 1e0deae:    00 00             	nop
 1e0deb0:    a2 45             	r2 = [r2 + 104]
 1e0deb2:    00 00             	nop


tmr:
 1e0deb4:    91 df             	r1 = r2 >>> 30
 1e0deb6:    e0 01             	[--sp] = {psr}
 1e0deb8:    da 2e             	if (r7 == 0) goto 436 <update_target_end+0x18E : 1e0e06e >
 1e0deba:    e0 01             	[--sp] = {psr}
 1e0debc:    e4 47             	r4 = [r3 + 120]
 1e0debe:    00 00             	nop


os:
 1e0dec0:    96 df             	r6 = r2 >>> 30
 1e0dec2:    e0 01             	[--sp] = {psr}
 1e0dec4:    5a a8             	r10 = sp + 133
 1e0dec6:    e0 01             	[--sp] = {psr}
 1e0dec8:    5e a8             	r14 = sp + 133
 1e0deca:    e0 01             	[--sp] = {psr}


bt:
 1e0decc:    54 e0 e0 01       	if (r4 == 5) goto 960 <wdt_time+0x28 : 1e0e290 >
 1e0ded0:    4c ee e0 01       	if (r12 == -28) goto 960 <wdt_time+0x2C : 1e0e294 >
 1e0ded4:    d6 ee e0 01       	if (r6 == -19) goto 960 <wdt_time+0x30 : 1e0e298 >


update_target_begin:
 1e0ded8:    bd e0 e0 01       	if (r13 == 11) goto 960 <wdt_time+0x34 : 1e0e29c >
 1e0dedc:    50 56             	r0 = h[r3 + 10] (u)
 1e0dede:    e1 01             	[--sp] = {psr, reti}


update_target_end:
 1e0dee0:    62 74             	r2 = 70
 1e0dee2:    5f 74             	r15 = 69
 1e0dee4:    65 73             	r5 = 54
 1e0dee6:    74 00             	sti r4
 1e0dee8:    62 72             	r2 = 38
 1e0deea:    65 64             	r5 = b[r2 + 6] (u)
 1e0deec:    72 00             	sti r2
 1e0deee:    6f 74             	r15 = 70
 1e0def0:    61 00             	cli r1
 1e0def2:    69 64             	b[r2 + 6] = r1
 1e0def4:    65 6c             	r5 = b[r6 + 6] (u)
 1e0def6:    5f 6c             	b[r6 + 5] = r7
 1e0def8:    70 00             	sti r0
 1e0defa:    62 74             	r2 = 70
 1e0defc:    65 6e             	r5 = b[r7 + 6] (u)
 1e0defe:    63 72             	r3 = 38
 1e0df00:    79 00             	sti r9
 1e0df02:    64 77             	r4 = 118
 1e0df04:    5f 75             	r15 = 85
 1e0df06:    70 64             	r0 = b[r2 + 7] (u)
 1e0df08:    61 74             	r1 = 70
 1e0df0a:    65 00             	cli r5
 1e0df0c:    75 73             	r5 = 55
 1e0df0e:    62 5f             	r2 = h[r7 + 44] (u)
 1e0df10:    6d 73             	r13 = 54
 1e0df12:    64 00             	cli r4
 1e0df14:    73 70             	r3 = 7
 1e0df16:    70 6c             	r0 = b[r6 + 7] (u)
 1e0df18:    65 5f             	r5 = h[r7 + 44] (u)
 1e0df1a:    73 74             	r3 = 71
 1e0df1c:    61 74             	r1 = 70
 1e0df1e:    65 5f             	r5 = h[r7 + 44] (u)
 1e0df20:    64 65             	r4 = b[r2 + 22] (u)
 1e0df22:    61 6c             	r1 = b[r6 + 6] (u)
 1e0df24:    00 73             	r0 = 48
 1e0df26:    70 70             	r0 = 7
 1e0df28:    5f 6c             	b[r6 + 5] = r7
 1e0df2a:    65 00             	cli r5
 1e0df2c:    70 77             	r0 = 119
 1e0df2e:    6d 5f             	h[r7 + 44] = r5
 1e0df30:    6c 70             	r12 = 6
 1e0df32:    00 41             	r0 = [r0 + 64]
 1e0df34:    25 75             	r5 = 82
 1e0df36:    00 63             	r0 = b[r1 + 16] (u)
 1e0df38:    6c 6f             	b[r7 + 22] = r4
 1e0df3a:    63 6b             	r3 = b[r5 + 22] (u)
 1e0df3c:    00 75             	r0 = 80
 1e0df3e:    61 72             	r1 = 38
 1e0df40:    74 00             	sti r4
 1e0df42:    44 42             	r4 = [r1 + 16]
 1e0df44:    47 5f             	r7 = h[r7 + 40] (u)
 1e0df46:    46 46             	r6 = [r3 + 16]
 1e0df48:    54 00             	testset b[r4]
 1e0df4a:    44 42             	r4 = [r1 + 16]
 1e0df4c:    47 5f             	r7 = h[r7 + 40] (u)
 1e0df4e:    45 51             	r5 = h[r0 + 40] (u)
 1e0df50:    00 43             	r0 = [r1 + 64]
 1e0df52:    78 72             	r8 = 39
 1e0df54:    77 30             	if (r0 != 0) goto 238 <update_target_end+0x164 : 1e0e044 >
 1e0df56:    72 77             	r2 = 119
 1e0df58:    31 72             	r1 = 35
 1e0df5a:    77 00             	sti r7
 1e0df5c:    6d 6e             	b[r7 + 6] = r5
 1e0df5e:    74 2f             	if (r7 == 0) goto -280 <spple_state_lp_target : 1e0de48 >
 1e0df60:    73 64             	r3 = b[r2 + 7] (u)
 1e0df62:    66 69             	r6 = b[r4 + 22] (u)
 1e0df64:    6c 65             	b[r2 + 22] = r4
 1e0df66:    2f 72             	r15 = 34
 1e0df68:    65 73             	r5 = 54
 1e0df6a:    2f 70             	r15 = 2
 1e0df6c:    31 31             	if (r0 != 0) goto -414 <syscfg_ops_begin : 1e0ddd0 >
 1e0df6e:    5f 63             	b[r1 + 21] = r7
 1e0df70:    6f 64             	b[r2 + 6] = r7
 1e0df72:    65 2e             	if (r7 == 0) goto 202 <update_target_end+0x15E : 1e0e03e >
 1e0df74:    62 69             	r2 = b[r4 + 22] (u)
 1e0df76:    6e 00             	cli r14
 1e0df78:    44 42             	r4 = [r1 + 16]
 1e0df7a:    47 5f             	r7 = h[r7 + 40] (u)
 1e0df7c:    52 45             	r2 = [r2 + 84]
 1e0df7e:    56 00             	testset b[r6]
 1e0df80:    30 72             	r0 = 35
 1e0df82:    00 77             	r0 = 112
 1e0df84:    6b 75             	r11 = 86
 1e0df86:    70 5f             	r0 = h[r7 + 46] (u)
 1e0df88:    68 6f             	b[r7 + 22] = r0
 1e0df8a:    6c 64             	b[r2 + 6] = r4
 1e0df8c:    00 6f             	r0 = b[r7 + 16] (u)
 1e0df8e:    74 67             	r4 = b[r3 + 23] (u)
 1e0df90:    00 74             	r0 = 64
 1e0df92:    6d 72             	r13 = 38
 1e0df94:    31 00             	pc = [sp++]
 1e0df96:    6f 73             	r15 = 54
 1e0df98:    00 49             	r0 = [r4 + 64]
 1e0df9a:    44 4c             	r4 = [r6 + 16]
 1e0df9c:    45 00             	testset b[r5]
 1e0df9e:    73 79             	r3 = 151
 1e0dfa0:    73 5f             	r3 = h[r7 + 46] (u)
 1e0dfa2:    65 76             	r5 = 102
 1e0dfa4:    65 6e             	r5 = b[r7 + 6] (u)
 1e0dfa6:    74 00             	sti r4
 1e0dfa8:    61 70             	r1 = 6
 1e0dfaa:    70 5f             	r0 = h[r7 + 46] (u)
 1e0dfac:    61 72             	r1 = 38
 1e0dfae:    65 61             	r5 = b[r0 + 22] (u)
 1e0dfb0:    5f 68             	b[r4 + 5] = r7
 1e0dfb2:    65 61             	r5 = b[r0 + 22] (u)
 1e0dfb4:    64 00             	cli r4
 1e0dfb6:    45 58             	r5 = h[r4 + 8] (u)
 1e0dfb8:    54 5f             	r4 = h[r7 + 42] (u)
 1e0dfba:    52 45             	r2 = [r2 + 84]
 1e0dfbc:    53 45             	r3 = [r2 + 84]
 1e0dfbe:    52 56             	r2 = h[r3 + 10] (u)
 1e0dfc0:    45 44             	r5 = [r2 + 16]
 1e0dfc2:    00 72             	r0 = 32
 1e0dfc4:    65 73             	r5 = 54
 1e0dfc6:    00 76             	r0 = 96
 1e0dfc8:    6d 00             	cli r13
 1e0dfca:    6d 6e             	b[r7 + 6] = r5
 1e0dfcc:    74 2f             	if (r7 == 0) goto -280 <tmr+0x2 : 1e0deb6 >
 1e0dfce:    73 64             	r3 = b[r2 + 7] (u)
 1e0dfd0:    66 69             	r6 = b[r4 + 22] (u)
 1e0dfd2:    6c 65             	b[r2 + 22] = r4
 1e0dfd4:    00 61             	r0 = b[r0 + 16] (u)
 1e0dfd6:    70 70             	r0 = 7
 1e0dfd8:    00 74             	r0 = 64
 1e0dfda:    61 73             	r1 = 54
 1e0dfdc:    6b 71             	r11 = 22
 1e0dfde:    00 28             	if (r4 == 0) goto 0 <update_target_end+0x100 : 1e0dfe0 >
 1e0dfe0:    6e 75             	r14 = 86
 1e0dfe2:    6c 6c             	b[r6 + 6] = r4
 1e0dfe4:    29 00             	swi 1
 1e0dfe6:    75 73             	r5 = 55
 1e0dfe8:    72 5f             	r2 = h[r7 + 46] (u)
 1e0dfea:    73 79             	r3 = 151
 1e0dfec:    73 74             	r3 = 71
 1e0dfee:    69 6d             	b[r6 + 22] = r1
 1e0dff0:    65 72             	r5 = 38
 1e0dff2:    00 6d             	r0 = b[r6 + 16] (u)
 1e0dff4:    6e 74             	r14 = 70
 1e0dff6:    2f 73             	r15 = 50
 1e0dff8:    64 66             	r4 = b[r3 + 6] (u)
 1e0dffa:    69 6c             	b[r6 + 6] = r1
 1e0dffc:    65 2f             	if (r7 == 0) goto -310 <os+0x8 : 1e0dec8 >
 1e0dffe:    61 70             	r1 = 6
 1e0e000:    70 2f             	if (r7 == 0) goto -288 <update_target_end+0x2 : 1e0dee2 >
 1e0e002:    63 66             	r3 = b[r3 + 6] (u)
 1e0e004:    67 5f             	r7 = h[r7 + 44] (u)
 1e0e006:    74 6f             	r4 = b[r7 + 23] (u)
 1e0e008:    6f 6c             	b[r6 + 6] = r7
 1e0e00a:    2e 62             	b[r1 + 2] = r6
 1e0e00c:    69 6e             	b[r7 + 6] = r1
 1e0e00e:    00 6d             	r0 = b[r6 + 16] (u)
 1e0e010:    6e 74             	r14 = 70
 1e0e012:    2f 73             	r15 = 50
 1e0e014:    64 66             	r4 = b[r3 + 6] (u)
 1e0e016:    69 6c             	b[r6 + 6] = r1
 1e0e018:    65 2f             	if (r7 == 0) goto -310 <update_target_end+0x4 : 1e0dee4 >
 1e0e01a:    61 70             	r1 = 6
 1e0e01c:    70 2f             	if (r7 == 0) goto -288 <update_target_end+0x1E : 1e0defe >
 1e0e01e:    62 74             	r2 = 70
 1e0e020:    69 66             	b[r3 + 6] = r1
 1e0e022:    00 62             	r0 = b[r1 + 0] (u)
 1e0e024:    74 73             	r4 = 55
 1e0e026:    74 61             	r4 = b[r0 + 23] (u)
 1e0e028:    63 6b             	r3 = b[r5 + 22] (u)
 1e0e02a:    5f 6c             	b[r6 + 5] = r7
 1e0e02c:    6f 77             	r15 = 118
 1e0e02e:    70 77             	r0 = 119
 1e0e030:    65 72             	r5 = 38
 1e0e032:    5f 64             	b[r2 + 5] = r7
 1e0e034:    65 61             	r5 = b[r0 + 22] (u)
 1e0e036:    6c 00             	cli r12
 1e0e038:    62 74             	r2 = 70
 1e0e03a:    73 74             	r3 = 71
 1e0e03c:    61 63             	r1 = b[r1 + 22] (u)
 1e0e03e:    6b 00             	cli r11
 1e0e040:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x1C6 : 1e0e0a6 >
 1e0e042:    32 44             	r2 = [r2 + 12]
 1e0e044:    00 32             	if (r1 != 0) goto 0 <update_target_end+0x166 : 1e0e046 >
 1e0e046:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x1CC : 1e0e0ac >
 1e0e048:    32 32             	if (r1 != 0) goto 100 <update_target_end+0x1CE : 1e0e0ae >
 1e0e04a:    00 61             	r0 = b[r0 + 16] (u)
 1e0e04c:    70 70             	r0 = 7
 1e0e04e:    5f 63             	b[r1 + 21] = r7
 1e0e050:    6f 72             	r15 = 38
 1e0e052:    65 00             	cli r5
 1e0e054:    62 74             	r2 = 70
 1e0e056:    00 31             	if (r0 != 0) goto -512 <pwm_lp_target+0x4 : 1e0de58 >
 1e0e058:    31 31             	if (r0 != 0) goto -414 <tmr+0x8 : 1e0debc >
 1e0e05a:    32 31             	if (r0 != 0) goto -412 <os : 1e0dec0 >
 1e0e05c:    34 00             	[--sp] = rets
 1e0e05e:    62 30             	if (r0 != 0) goto 196 <task_info_table+0xC : 1e0e124 >
 1e0e060:    33 00             	pc = [sp++]
 1e0e062:    62 30             	if (r0 != 0) goto 196 <task_info_table+0x10 : 1e0e128 >
 1e0e064:    34 00             	[--sp] = rets
 1e0e066:    62 74             	r2 = 70
 1e0e068:    63 74             	r3 = 70
 1e0e06a:    72 6c             	r2 = b[r6 + 7] (u)
 1e0e06c:    65 72             	r5 = 38
 1e0e06e:    00 48             	r0 = [r4 + 0]
 1e0e070:    34 5f             	r4 = h[r7 + 38] (u)
 1e0e072:    43 6f             	r3 = b[r7 + 20] (u)
 1e0e074:    6e 74             	r14 = 70
 1e0e076:    72 6f             	r2 = b[r7 + 23] (u)
 1e0e078:    6c 6c             	b[r6 + 6] = r4
 1e0e07a:    65 72             	r5 = 38
 1e0e07c:    00 6c             	r0 = b[r6 + 0] (u)
 1e0e07e:    69 6e             	b[r7 + 6] = r1
 1e0e080:    6b 5f             	h[r7 + 44] = r3
 1e0e082:    6c 61             	b[r0 + 22] = r4
 1e0e084:    79 65             	b[r2 + 23] = r1
 1e0e086:    72 00             	sti r2
 1e0e088:    31 48             	r1 = [r4 + 12]
 1e0e08a:    32 32             	if (r1 != 0) goto 100 <default_profile_data+0x6 : 1e0e0f0 >
 1e0e08c:    32 00             	pc = [sp++]
 1e0e08e:    31 48             	r1 = [r4 + 12]
 1e0e090:    63 30             	if (r0 != 0) goto 198 <task_info_table+0x40 : 1e0e158 >
 1e0e092:    38 00             	cc = 0
 1e0e094:    31 48             	r1 = [r4 + 12]
 1e0e096:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x1A : 1e0defa >
 1e0e098:    41 32             	if (r1 != 0) goto 130 <task_info_table+0x4 : 1e0e11c >
 1e0e09a:    32 32             	if (r1 != 0) goto 100 <default_profile_data+0x16 : 1e0e100 >
 1e0e09c:    31 00             	pc = [sp++]
 1e0e09e:    31 48             	r1 = [r4 + 12]
 1e0e0a0:    31 00             	pc = [sp++]
 1e0e0a2:    31 48             	r1 = [r4 + 12]
 1e0e0a4:    32 00             	pc = [sp++]
 1e0e0a6:    31 48             	r1 = [r4 + 12]
 1e0e0a8:    31 32             	if (r1 != 0) goto 98 <default_profile_data+0x22 : 1e0e10c >
 1e0e0aa:    32 00             	pc = [sp++]
 1e0e0ac:    31 48             	r1 = [r4 + 12]
 1e0e0ae:    48 00             	testset b[r8]
 1e0e0b0:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x34 : 1e0df14 >
 1e0e0b2:    31 00             	pc = [sp++]
 1e0e0b4:    31 31             	if (r0 != 0) goto -414 <update_target_end+0x38 : 1e0df18 >
 1e0e0b6:    32 00             	pc = [sp++]
 1e0e0b8:    31 63             	r1 = b[r1 + 19] (u)
 1e0e0ba:    30 38             	if (r4 != 0) goto 96 <task_info_table+0x4 : 1e0e11c >
 1e0e0bc:    00 62             	r0 = b[r1 + 0] (u)
 1e0e0be:    6c 65             	b[r2 + 22] = r4
 1e0e0c0:    00 72             	r0 = 32
 1e0e0c2:    65 73             	r5 = 54
 1e0e0c4:    2e 62             	b[r1 + 2] = r6
 1e0e0c6:    69 6e             	b[r7 + 6] = r1
 1e0e0c8:    00 4c             	r0 = [r6 + 0]
 1e0e0ca:    4f 41             	[r0 + 80] = r7
 1e0e0cc:    44 45             	r4 = [r2 + 80]
 1e0e0ce:    52 2e             	if (r7 == 0) goto 164 <task_info_table+0x5C : 1e0e174 >
 1e0e0d0:    42 49             	r2 = [r4 + 80]
 1e0e0d2:    4e 00             	testset b[r14]
 1e0e0d4:    00 00             	nop
 1e0e0d6:    00 00             	nop
 1e0e0d8:    00 00             	nop
 1e0e0da:    00 00             	nop
 1e0e0dc:    00 00             	nop
 1e0e0de:    00 00             	nop
 1e0e0e0:    57 69             	r7 = b[r4 + 21] (u)
 1e0e0e2:    52 54             	r2 = h[r2 + 10] (u)
 1e0e0e4:    5f 41             	[r0 + 84] = r7
 1e0e0e6:    43 5f             	r3 = h[r7 + 40] (u)
 1e0e0e8:    54 4d             	r4 = [r6 + 84]


default_profile_data:
 1e0e0ea:    0a 00             	ssync
 1e0e0ec:    02 00             	idle
 1e0e0ee:    01 00             	nop
 1e0e0f0:    00 28             	if (r4 == 0) goto 0 <default_profile_data+0x8 : 1e0e0f2 >
 1e0e0f2:    00 18             	goto 0 <default_profile_data+0xA : 1e0e0f4 >
 1e0e0f4:    00 00             	nop
 1e0e0f6:    00 00             	nop
 1e0e0f8:    05 5a             	r5 = h[r5 + 0] (u)
 1e0e0fa:    00 00             	nop
 1e0e0fc:    de 10             	call 444 <dev_id_list+0x12 : 1e0e2ba >
 1e0e0fe:    e0 01             	[--sp] = {psr}
 1e0e100:    18 66             	b[r3 + 1] = r0
 1e0e102:    e1 01             	[--sp] = {psr, reti}
 1e0e104:    01 00             	nop
 1e0e106:    00 00             	nop
 1e0e108:    09 5a             	h[r5 + 0] = r1
 1e0e10a:    00 00             	nop
 1e0e10c:    52 0f             	r2 = r2 * r5
 1e0e10e:    e0 01             	[--sp] = {psr}
 1e0e110:    34 66             	r4 = b[r3 + 3] (u)
 1e0e112:    e1 01             	[--sp] = {psr, reti}
 1e0e114:    01 00             	nop
 1e0e116:    00 00             	nop


task_info_table:
 1e0e118:    4b e0 e0 01       	if (r11 == 4) goto 960 <dev_id_list+0x234 : 1e0e4dc >
 1e0e11c:    01 00             	nop
 1e0e11e:    80 02             	r0 = [sp+32]
 1e0e120:    80 00             	call r0
 1e0e122:    00 00             	nop
 1e0e124:    9e df             	r6 = r3 >>> 30
 1e0e126:    e0 01             	[--sp] = {psr}
 1e0e128:    07 00             	hbkpt
 1e0e12a:    00 01             	{r3-r0} = [sp++]
 1e0e12c:    00 00             	nop
 1e0e12e:    00 00             	nop
 1e0e130:    66 e0 e0 01       	if (r6 == 6) goto 960 <dev_id_list+0x24C : 1e0e4f4 >
 1e0e134:    04 00             	bkpt
 1e0e136:    00 02             	r0 = [sp]
 1e0e138:    00 01             	{r3-r0} = [sp++]
 1e0e13a:    00 00             	nop
 1e0e13c:    fa de             	r2 = r7 >>> 27
 1e0e13e:    e0 01             	[--sp] = {psr}
 1e0e140:    01 00             	nop
 1e0e142:    00 02             	r0 = [sp]
 1e0e144:    80 00             	call r0
 1e0e146:    00 00             	nop
 1e0e148:    38 e0 e0 01       	if (r8 == 3) goto 960 <dev_id_list+0x264 : 1e0e50c >
 1e0e14c:    03 00             	idle
 1e0e14e:    00 03             	r0 = [sp+64]
 1e0e150:    00 01             	{r3-r0} = [sp++]
 1e0e152:    00 00             	nop
 1e0e154:    ea df             	r2 = r5 >>> 31
 1e0e156:    e0 01             	[--sp] = {psr}
 1e0e158:    07 00             	hbkpt
 1e0e15a:    80 00             	call r0
 1e0e15c:    00 00             	nop
 1e0e15e:    00 00             	nop
 1e0e160:    05 df             	r5 = r0 >>> 28
 1e0e162:    e0 01             	[--sp] = {psr}
 1e0e164:    01 00             	nop
 1e0e166:    00 02             	r0 = [sp]
 1e0e168:    00 00             	nop
 1e0e16a:    00 00             	nop
 1e0e16c:    02 df             	r2 = r0 >>> 28
 1e0e16e:    e0 01             	[--sp] = {psr}
 1e0e170:    02 00             	idle
 1e0e172:    00 01             	{r3-r0} = [sp++]
 1e0e174:    80 00             	call r0
 1e0e176:    00 00             	nop
 1e0e178:    0c df             	r4 = r1 >>> 28
 1e0e17a:    e0 01             	[--sp] = {psr}
 1e0e17c:    01 00             	nop
 1e0e17e:    00 02             	r0 = [sp]
 1e0e180:    80 00             	call r0
 1e0e182:    00 00             	nop
 1e0e184:    00 00             	nop
 1e0e186:    00 00             	nop
 1e0e188:    00 00             	nop
 1e0e18a:    00 00             	nop
 1e0e18c:    00 00             	nop
 1e0e18e:    00 00             	nop


app_spple_ops:
 1e0e190:    e8 13             	call 2000 <TXPWR_table+0x22 : 1e0e962 >
 1e0e192:    e0 01             	[--sp] = {psr}
 1e0e194:    d0 14             	call -1632 <lbuf_alloc+0x10 : 1e0db36 >
 1e0e196:    e0 01             	[--sp] = {psr}


trans_profile_data:
 1e0e198:    0a 00             	ssync
 1e0e19a:    02 00             	idle
 1e0e19c:    01 00             	nop
 1e0e19e:    00 28             	if (r4 == 0) goto 0 <trans_profile_data+0x8 : 1e0e1a0 >
 1e0e1a0:    00 18             	goto 0 <trans_profile_data+0xA : 1e0e1a2 >
 1e0e1a2:    0d 00             	syscall
 1e0e1a4:    02 00             	idle
 1e0e1a6:    02 00             	idle
 1e0e1a8:    03 28             	if (r4 == 0) goto 6 <trans_profile_data+0x18 : 1e0e1b0 >
 1e0e1aa:    0a 03             	[sp+64] = r2
 1e0e1ac:    00 00             	nop
 1e0e1ae:    2a 08             	r10 = r2
 1e0e1b0:    00 0a             	sp += 0
 1e0e1b2:    01 03             	r1 = [sp+64]
 1e0e1b4:    00 00             	nop
 1e0e1b6:    2a 0a             	sp += 84
 1e0e1b8:    00 02             	r0 = [sp]
 1e0e1ba:    00 04             	r0 = r0.b0 (u)
 1e0e1bc:    00 00             	nop
 1e0e1be:    28 00             	swi 0
 1e0e1c0:    ae 0d             	r14 >>= r6
 1e0e1c2:    00 02             	r0 = [sp]
 1e0e1c4:    00 12             	call 1024 <dev_id_list+0x31E : 1e0e5c6 >
 1e0e1c6:    00 03             	r0 = [sp+64]
 1e0e1c8:    28 0a             	sp += 80
 1e0e1ca:    13 00             	lockclr
 1e0e1cc:    10 ae             	r0 = sp + 225
 1e0e1ce:    08 00             	csync
 1e0e1d0:    0a 01             	{r10-r4} = [sp++]
 1e0e1d2:    13 00             	lockclr
 1e0e1d4:    10 ae             	r0 = sp + 225
 1e0e1d6:    00 00             	nop


trans_server_init_cfg:
 1e0e1d8:    4a 17             	call -364 <update_target_end+0x18E : 1e0e06e >
 1e0e1da:    e0 01             	[--sp] = {psr}
 1e0e1dc:    ae 1b             	goto 1884 <bt_frac_pll_int_48m+0x4E : 1e0e93a >
 1e0e1de:    e0 01             	[--sp] = {psr}
 1e0e1e0:    3e 1f             	goto -388 <update_target_end+0x17E : 1e0e05e >
 1e0e1e2:    e0 01             	[--sp] = {psr}


trans_connection_param_table:
 1e0e1e4:    10 00             	lockclr
 1e0e1e6:    18 00             	cli
 1e0e1e8:    0a 00             	ssync
 1e0e1ea:    58 02             	[sp+20] = r0
 1e0e1ec:    0c 00             	syscall
 1e0e1ee:    1c 00             	sti
 1e0e1f0:    0a 00             	ssync
 1e0e1f2:    58 02             	[sp+20] = r0
 1e0e1f4:    08 00             	csync
 1e0e1f6:    14 00             	lockset
 1e0e1f8:    0a 00             	ssync
 1e0e1fa:    58 02             	[sp+20] = r0
 1e0e1fc:    ff ff ff ff ff ff 	pc = 4294967295


btif_table:
 1e0e202:    66 00             	cli r6
 1e0e204:    06 00             	hbkpt
 1e0e206:    6e 00             	cli r14
 1e0e208:    06 00             	hbkpt
 1e0e20a:    00 00             	nop
 1e0e20c:    00 00             	nop
 1e0e20e:    00 00             	nop


wk_param:
 1e0e210:    00 00             	nop
 1e0e212:    00 00             	nop
 1e0e214:    00 00             	nop
 1e0e216:    00 00             	nop
 1e0e218:    00 00             	nop
 1e0e21a:    00 00             	nop
 1e0e21c:    00 00             	nop
 1e0e21e:    00 00             	nop
 1e0e220:    00 00             	nop
 1e0e222:    00 00             	nop
 1e0e224:    00 00             	nop
 1e0e226:    00 00             	nop
 1e0e228:    00 00             	nop
 1e0e22a:    00 00             	nop
 1e0e22c:    00 00             	nop
 1e0e22e:    00 00             	nop
 1e0e230:    00 00             	nop
 1e0e232:    00 00             	nop
 1e0e234:    00 00             	nop
 1e0e236:    00 00             	nop
 1e0e238:    00 00             	nop
 1e0e23a:    00 00             	nop
 1e0e23c:    00 00             	nop
 1e0e23e:    00 00             	nop
 1e0e240:    00 00             	nop
 1e0e242:    00 00             	nop
 1e0e244:    00 00             	nop
 1e0e246:    00 00             	nop
 1e0e248:    00 00             	nop
 1e0e24a:    00 00             	nop
 1e0e24c:    00 00             	nop
 1e0e24e:    00 00             	nop
 1e0e250:    00 00             	nop
 1e0e252:    00 00             	nop
 1e0e254:    00 00             	nop
 1e0e256:    00 00             	nop
 1e0e258:    00 00             	nop
 1e0e25a:    00 00             	nop
 1e0e25c:    ff 01             	[--sp] = {psr, sr4, rets, retx, rete, reti}
 1e0e25e:    ff 03             	[sp+124] = r7
 1e0e260:    ff 03             	[sp+124] = r7
 1e0e262:    fe ff 00 01 02 00 	sp = 131328


wdt_time:
 1e0e268:    01 00             	nop
 1e0e26a:    00 00             	nop
 1e0e26c:    02 00             	idle
 1e0e26e:    00 00             	nop
 1e0e270:    04 00             	bkpt
 1e0e272:    00 00             	nop
 1e0e274:    08 00             	csync
 1e0e276:    00 00             	nop
 1e0e278:    10 00             	lockclr
 1e0e27a:    00 00             	nop
 1e0e27c:    20 00             	rts
 1e0e27e:    00 00             	nop
 1e0e280:    40 00             	testset b[r0]
 1e0e282:    00 00             	nop
 1e0e284:    80 00             	call r0
 1e0e286:    00 00             	nop
 1e0e288:    00 01             	{r3-r0} = [sp++]
 1e0e28a:    00 00             	nop
 1e0e28c:    00 02             	r0 = [sp]
 1e0e28e:    00 00             	nop
 1e0e290:    00 04             	r0 = r0.b0 (u)
 1e0e292:    00 00             	nop
 1e0e294:    00 08             	r0 = r0
 1e0e296:    00 00             	nop
 1e0e298:    00 10             	call 0 <wdt_time+0x32 : 1e0e29a >
 1e0e29a:    00 00             	nop
 1e0e29c:    00 20             	if (r0 == 0) goto 0 <wdt_time+0x36 : 1e0e29e >
 1e0e29e:    00 00             	nop
 1e0e2a0:    00 40             	r0 = [r0 + 0]
 1e0e2a2:    00 00             	nop
 1e0e2a4:    00 80             	r0 += 0
 1e0e2a6:    00 00             	nop


dev_id_list:
 1e0e2a8:    44 42             	r4 = [r1 + 16]
 1e0e2aa:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e2ac:    52 45             	r2 = [r2 + 84]
 1e0e2ae:    56 00             	testset b[r6]
 1e0e2b0:    00 00             	nop
 1e0e2b2:    00 00             	nop
 1e0e2b4:    00 00             	nop
 1e0e2b6:    00 00             	nop
 1e0e2b8:    00 44             	r0 = [r2 + 0]
 1e0e2ba:    42 47             	r2 = [r3 + 80]
 1e0e2bc:    5f 41             	[r0 + 84] = r7
 1e0e2be:    4c 4e             	[r7 + 16] = r4
 1e0e2c0:    4b 30             	if (r0 != 0) goto 150 <dev_id_list+0xB0 : 1e0e358 >
 1e0e2c2:    00 00             	nop
 1e0e2c4:    00 00             	nop
 1e0e2c6:    00 00             	nop
 1e0e2c8:    00 01             	{r3-r0} = [sp++]
 1e0e2ca:    44 42             	r4 = [r1 + 16]
 1e0e2cc:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e2ce:    41 4c             	r1 = [r6 + 16]
 1e0e2d0:    4e 4b             	[r5 + 80] = r6
 1e0e2d2:    31 00             	pc = [sp++]
 1e0e2d4:    00 00             	nop
 1e0e2d6:    00 00             	nop
 1e0e2d8:    00 00             	nop
 1e0e2da:    02 44             	r2 = [r2 + 0]
 1e0e2dc:    42 47             	r2 = [r3 + 80]
 1e0e2de:    5f 41             	[r0 + 84] = r7
 1e0e2e0:    55 44             	r5 = [r2 + 20]
 1e0e2e2:    49 4f             	[r7 + 80] = r1
 1e0e2e4:    00 00             	nop
 1e0e2e6:    00 00             	nop
 1e0e2e8:    00 00             	nop
 1e0e2ea:    00 03             	r0 = [sp+64]
 1e0e2ec:    44 42             	r4 = [r1 + 16]
 1e0e2ee:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e2f0:    53 50             	r3 = h[r0 + 10] (u)
 1e0e2f2:    44 49             	r4 = [r4 + 80]
 1e0e2f4:    46 5f             	r6 = h[r7 + 40] (u)
 1e0e2f6:    44 00             	testset b[r4]
 1e0e2f8:    00 00             	nop
 1e0e2fa:    00 00             	nop
 1e0e2fc:    04 44             	r4 = [r2 + 0]
 1e0e2fe:    42 47             	r2 = [r3 + 80]
 1e0e300:    5f 53             	h[r1 + 42] = r7
 1e0e302:    50 44             	r0 = [r2 + 20]
 1e0e304:    49 46             	[r3 + 16] = r1
 1e0e306:    5f 49             	[r4 + 84] = r7
 1e0e308:    00 00             	nop
 1e0e30a:    00 00             	nop
 1e0e30c:    00 05             	r0 = r4.b0 (u)
 1e0e30e:    44 42             	r4 = [r1 + 16]
 1e0e310:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e312:    49 53             	h[r1 + 40] = r1
 1e0e314:    50 00             	testset b[r0]
 1e0e316:    00 00             	nop
 1e0e318:    00 00             	nop
 1e0e31a:    00 00             	nop
 1e0e31c:    00 00             	nop
 1e0e31e:    06 44             	r6 = [r2 + 0]
 1e0e320:    42 47             	r2 = [r3 + 80]
 1e0e322:    5f 50             	h[r0 + 10] = r7
 1e0e324:    41 50             	r1 = h[r0 + 8] (u)
 1e0e326:    00 00             	nop
 1e0e328:    00 00             	nop
 1e0e32a:    00 00             	nop
 1e0e32c:    00 00             	nop
 1e0e32e:    00 07             	r0 = -16
 1e0e330:    44 42             	r4 = [r1 + 16]
 1e0e332:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e334:    50 4c             	r0 = [r6 + 20]
 1e0e336:    4e 4b             	[r5 + 80] = r6
 1e0e338:    00 00             	nop
 1e0e33a:    00 00             	nop
 1e0e33c:    00 00             	nop
 1e0e33e:    00 00             	nop
 1e0e340:    08 44             	[r2 + 0] = r0
 1e0e342:    42 47             	r2 = [r3 + 80]
 1e0e344:    5f 53             	h[r1 + 42] = r7
 1e0e346:    42 43             	r2 = [r1 + 80]
 1e0e348:    00 00             	nop
 1e0e34a:    00 00             	nop
 1e0e34c:    00 00             	nop
 1e0e34e:    00 00             	nop
 1e0e350:    00 09             	r0 += r0
 1e0e352:    44 42             	r4 = [r1 + 16]
 1e0e354:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e356:    41 41             	r1 = [r0 + 80]
 1e0e358:    43 00             	testset b[r3]
 1e0e35a:    00 00             	nop
 1e0e35c:    00 00             	nop
 1e0e35e:    00 00             	nop
 1e0e360:    00 00             	nop
 1e0e362:    0a 44             	[r2 + 0] = r2
 1e0e364:    42 47             	r2 = [r3 + 80]
 1e0e366:    5f 41             	[r0 + 84] = r7
 1e0e368:    45 53             	r5 = h[r1 + 40] (u)
 1e0e36a:    00 00             	nop
 1e0e36c:    00 00             	nop
 1e0e36e:    00 00             	nop
 1e0e370:    00 00             	nop
 1e0e372:    00 0b             	sp += -512
 1e0e374:    44 42             	r4 = [r1 + 16]
 1e0e376:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e378:    53 44             	r3 = [r2 + 20]
 1e0e37a:    30 00             	pc = [sp++]
 1e0e37c:    00 00             	nop
 1e0e37e:    00 00             	nop
 1e0e380:    00 00             	nop
 1e0e382:    00 00             	nop
 1e0e384:    0c 44             	[r2 + 0] = r4
 1e0e386:    42 47             	r2 = [r3 + 80]
 1e0e388:    5f 53             	h[r1 + 42] = r7
 1e0e38a:    44 31             	if (r0 != 0) goto -376 <wk_param+0x4 : 1e0e214 >
 1e0e38c:    00 00             	nop
 1e0e38e:    00 00             	nop
 1e0e390:    00 00             	nop
 1e0e392:    00 00             	nop
 1e0e394:    00 0d             	r0 <<= r4
 1e0e396:    44 42             	r4 = [r1 + 16]
 1e0e398:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e39a:    53 50             	r3 = h[r0 + 10] (u)
 1e0e39c:    49 30             	if (r0 != 0) goto 146 <dev_id_list+0x188 : 1e0e430 >
 1e0e39e:    00 00             	nop
 1e0e3a0:    00 00             	nop
 1e0e3a2:    00 00             	nop
 1e0e3a4:    00 00             	nop
 1e0e3a6:    0e 44             	[r2 + 0] = r6
 1e0e3a8:    42 47             	r2 = [r3 + 80]
 1e0e3aa:    5f 53             	h[r1 + 42] = r7
 1e0e3ac:    50 49             	r0 = [r4 + 84]
 1e0e3ae:    31 00             	pc = [sp++]
 1e0e3b0:    00 00             	nop
 1e0e3b2:    00 00             	nop
 1e0e3b4:    00 00             	nop
 1e0e3b6:    00 0f             	r0 = r0 * r4
 1e0e3b8:    44 42             	r4 = [r1 + 16]
 1e0e3ba:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e3bc:    53 50             	r3 = h[r0 + 10] (u)
 1e0e3be:    49 32             	if (r1 != 0) goto 146 <dev_id_list+0x1AA : 1e0e452 >
 1e0e3c0:    00 00             	nop
 1e0e3c2:    00 00             	nop
 1e0e3c4:    00 00             	nop
 1e0e3c6:    00 00             	nop
 1e0e3c8:    10 44             	r0 = [r2 + 4]
 1e0e3ca:    42 47             	r2 = [r3 + 80]
 1e0e3cc:    5f 55             	h[r2 + 42] = r7
 1e0e3ce:    41 52             	r1 = h[r1 + 8] (u)
 1e0e3d0:    54 30             	if (r0 != 0) goto 168 <dev_id_list+0x1D2 : 1e0e47a >
 1e0e3d2:    57 00             	testset b[r7]
 1e0e3d4:    00 00             	nop
 1e0e3d6:    00 00             	nop
 1e0e3d8:    00 11             	call 512 <dev_id_list+0x332 : 1e0e5da >
 1e0e3da:    44 42             	r4 = [r1 + 16]
 1e0e3dc:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e3de:    55 41             	r5 = [r0 + 84]
 1e0e3e0:    52 54             	r2 = h[r2 + 10] (u)
 1e0e3e2:    30 52             	r0 = h[r1 + 6] (u)
 1e0e3e4:    00 00             	nop
 1e0e3e6:    00 00             	nop
 1e0e3e8:    00 00             	nop
 1e0e3ea:    12 44             	r2 = [r2 + 4]
 1e0e3ec:    42 47             	r2 = [r3 + 80]
 1e0e3ee:    5f 55             	h[r2 + 42] = r7
 1e0e3f0:    41 52             	r1 = h[r1 + 8] (u)
 1e0e3f2:    54 31             	if (r0 != 0) goto -344 <wdt_time+0x34 : 1e0e29c >
 1e0e3f4:    57 00             	testset b[r7]
 1e0e3f6:    00 00             	nop
 1e0e3f8:    00 00             	nop
 1e0e3fa:    00 13             	call 1536 <anl_gain_set+0x64 : 1e0e9fc >
 1e0e3fc:    44 42             	r4 = [r1 + 16]
 1e0e3fe:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e400:    55 41             	r5 = [r0 + 84]
 1e0e402:    52 54             	r2 = h[r2 + 10] (u)
 1e0e404:    31 52             	r1 = h[r1 + 6] (u)
 1e0e406:    00 00             	nop
 1e0e408:    00 00             	nop
 1e0e40a:    00 00             	nop
 1e0e40c:    14 44             	r4 = [r2 + 4]
 1e0e40e:    42 47             	r2 = [r3 + 80]
 1e0e410:    5f 55             	h[r2 + 42] = r7
 1e0e412:    41 52             	r1 = h[r1 + 8] (u)
 1e0e414:    54 32             	if (r1 != 0) goto 168 <dev_id_list+0x216 : 1e0e4be >
 1e0e416:    57 00             	testset b[r7]
 1e0e418:    00 00             	nop
 1e0e41a:    00 00             	nop
 1e0e41c:    00 15             	call -1536 <cfg_bin+0x16 : 1e0de1e >
 1e0e41e:    44 42             	r4 = [r1 + 16]
 1e0e420:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e422:    55 41             	r5 = [r0 + 84]
 1e0e424:    52 54             	r2 = h[r2 + 10] (u)
 1e0e426:    32 52             	r2 = h[r1 + 6] (u)
 1e0e428:    00 00             	nop
 1e0e42a:    00 00             	nop
 1e0e42c:    00 00             	nop
 1e0e42e:    16 44             	r6 = [r2 + 4]
 1e0e430:    42 47             	r2 = [r3 + 80]
 1e0e432:    5f 43             	[r1 + 84] = r7
 1e0e434:    54 4d             	r4 = [r6 + 84]
 1e0e436:    00 00             	nop
 1e0e438:    00 00             	nop
 1e0e43a:    00 00             	nop
 1e0e43c:    00 00             	nop
 1e0e43e:    00 17             	call -512 <wk_param+0x30 : 1e0e240 >
 1e0e440:    44 42             	r4 = [r1 + 16]
 1e0e442:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e444:    41 58             	r1 = h[r4 + 8] (u)
 1e0e446:    49 5f             	h[r7 + 40] = r1
 1e0e448:    4d 30             	if (r0 != 0) goto 154 <dev_id_list+0x23C : 1e0e4e4 >
 1e0e44a:    00 00             	nop
 1e0e44c:    00 00             	nop
 1e0e44e:    00 00             	nop
 1e0e450:    80 44             	r0 = [r2 + 32]
 1e0e452:    42 47             	r2 = [r3 + 80]
 1e0e454:    5f 41             	[r0 + 84] = r7
 1e0e456:    58 49             	[r4 + 84] = r0
 1e0e458:    5f 4d             	[r6 + 84] = r7
 1e0e45a:    31 00             	pc = [sp++]
 1e0e45c:    00 00             	nop
 1e0e45e:    00 00             	nop
 1e0e460:    00 81             	r0 += 16
 1e0e462:    44 42             	r4 = [r1 + 16]
 1e0e464:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e466:    41 58             	r1 = h[r4 + 8] (u)
 1e0e468:    49 5f             	h[r7 + 40] = r1
 1e0e46a:    4d 32             	if (r1 != 0) goto 154 <dev_id_list+0x25E : 1e0e506 >
 1e0e46c:    00 00             	nop
 1e0e46e:    00 00             	nop
 1e0e470:    00 00             	nop
 1e0e472:    82 44             	r2 = [r2 + 32]
 1e0e474:    42 47             	r2 = [r3 + 80]
 1e0e476:    5f 41             	[r0 + 84] = r7
 1e0e478:    58 49             	[r4 + 84] = r0
 1e0e47a:    5f 4d             	[r6 + 84] = r7
 1e0e47c:    33 00             	pc = [sp++]
 1e0e47e:    00 00             	nop
 1e0e480:    00 00             	nop
 1e0e482:    00 83             	r0 += 48
 1e0e484:    44 42             	r4 = [r1 + 16]
 1e0e486:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e488:    41 58             	r1 = h[r4 + 8] (u)
 1e0e48a:    49 5f             	h[r7 + 40] = r1
 1e0e48c:    4d 34             	if (r2 != 0) goto 154 <dev_id_list+0x280 : 1e0e528 >
 1e0e48e:    00 00             	nop
 1e0e490:    00 00             	nop
 1e0e492:    00 00             	nop
 1e0e494:    84 44             	r4 = [r2 + 32]
 1e0e496:    42 47             	r2 = [r3 + 80]
 1e0e498:    5f 41             	[r0 + 84] = r7
 1e0e49a:    58 49             	[r4 + 84] = r0
 1e0e49c:    5f 4d             	[r6 + 84] = r7
 1e0e49e:    35 00             	[--sp] = rets
 1e0e4a0:    00 00             	nop
 1e0e4a2:    00 00             	nop
 1e0e4a4:    00 85             	r0 += 80
 1e0e4a6:    44 42             	r4 = [r1 + 16]
 1e0e4a8:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e4aa:    41 58             	r1 = h[r4 + 8] (u)
 1e0e4ac:    49 5f             	h[r7 + 40] = r1
 1e0e4ae:    4d 36             	if (r3 != 0) goto 154 <dev_id_list+0x2A2 : 1e0e54a >
 1e0e4b0:    00 00             	nop
 1e0e4b2:    00 00             	nop
 1e0e4b4:    00 00             	nop
 1e0e4b6:    86 44             	r6 = [r2 + 32]
 1e0e4b8:    42 47             	r2 = [r3 + 80]
 1e0e4ba:    5f 41             	[r0 + 84] = r7
 1e0e4bc:    58 49             	[r4 + 84] = r0
 1e0e4be:    5f 4d             	[r6 + 84] = r7
 1e0e4c0:    37 00             	[--sp] = rets
 1e0e4c2:    00 00             	nop
 1e0e4c4:    00 00             	nop
 1e0e4c6:    00 87             	r0 += 112
 1e0e4c8:    44 42             	r4 = [r1 + 16]
 1e0e4ca:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e4cc:    41 58             	r1 = h[r4 + 8] (u)
 1e0e4ce:    49 5f             	h[r7 + 40] = r1
 1e0e4d0:    4d 38             	if (r4 != 0) goto 154 <dev_id_list+0x2C4 : 1e0e56c >
 1e0e4d2:    00 00             	nop
 1e0e4d4:    00 00             	nop
 1e0e4d6:    00 00             	nop
 1e0e4d8:    88 44             	[r2 + 32] = r0
 1e0e4da:    42 47             	r2 = [r3 + 80]
 1e0e4dc:    5f 41             	[r0 + 84] = r7
 1e0e4de:    58 49             	[r4 + 84] = r0
 1e0e4e0:    5f 4d             	[r6 + 84] = r7
 1e0e4e2:    39 00             	cc = 0
 1e0e4e4:    00 00             	nop
 1e0e4e6:    00 00             	nop
 1e0e4e8:    00 89             	r0 += -112
 1e0e4ea:    44 42             	r4 = [r1 + 16]
 1e0e4ec:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e4ee:    41 58             	r1 = h[r4 + 8] (u)
 1e0e4f0:    49 5f             	h[r7 + 40] = r1
 1e0e4f2:    4d 41             	[r0 + 80] = r5
 1e0e4f4:    00 00             	nop
 1e0e4f6:    00 00             	nop
 1e0e4f8:    00 00             	nop
 1e0e4fa:    8a 44             	[r2 + 32] = r2
 1e0e4fc:    42 47             	r2 = [r3 + 80]
 1e0e4fe:    5f 41             	[r0 + 84] = r7
 1e0e500:    58 49             	[r4 + 84] = r0
 1e0e502:    5f 4d             	[r6 + 84] = r7
 1e0e504:    42 00             	testset b[r2]
 1e0e506:    00 00             	nop
 1e0e508:    00 00             	nop
 1e0e50a:    00 8b             	r0 += -80
 1e0e50c:    44 42             	r4 = [r1 + 16]
 1e0e50e:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e510:    41 58             	r1 = h[r4 + 8] (u)
 1e0e512:    49 5f             	h[r7 + 40] = r1
 1e0e514:    4d 43             	[r1 + 80] = r5
 1e0e516:    00 00             	nop
 1e0e518:    00 00             	nop
 1e0e51a:    00 00             	nop
 1e0e51c:    8c 44             	[r2 + 32] = r4
 1e0e51e:    42 47             	r2 = [r3 + 80]
 1e0e520:    5f 41             	[r0 + 84] = r7
 1e0e522:    58 49             	[r4 + 84] = r0
 1e0e524:    5f 4d             	[r6 + 84] = r7
 1e0e526:    44 00             	testset b[r4]
 1e0e528:    00 00             	nop
 1e0e52a:    00 00             	nop
 1e0e52c:    00 8d             	r0 += -48
 1e0e52e:    44 42             	r4 = [r1 + 16]
 1e0e530:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e532:    41 58             	r1 = h[r4 + 8] (u)
 1e0e534:    49 5f             	h[r7 + 40] = r1
 1e0e536:    4d 45             	[r2 + 80] = r5
 1e0e538:    00 00             	nop
 1e0e53a:    00 00             	nop
 1e0e53c:    00 00             	nop
 1e0e53e:    8e 44             	[r2 + 32] = r6
 1e0e540:    42 47             	r2 = [r3 + 80]
 1e0e542:    5f 41             	[r0 + 84] = r7
 1e0e544:    58 49             	[r4 + 84] = r0
 1e0e546:    5f 4d             	[r6 + 84] = r7
 1e0e548:    46 00             	testset b[r6]
 1e0e54a:    00 00             	nop
 1e0e54c:    00 00             	nop
 1e0e54e:    00 8f             	r0 += -16
 1e0e550:    44 42             	r4 = [r1 + 16]
 1e0e552:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e554:    55 53             	r5 = h[r1 + 42] (u)
 1e0e556:    42 00             	testset b[r2]
 1e0e558:    00 00             	nop
 1e0e55a:    00 00             	nop
 1e0e55c:    00 00             	nop
 1e0e55e:    00 00             	nop
 1e0e560:    a0 44             	r0 = [r2 + 40]
 1e0e562:    42 47             	r2 = [r3 + 80]
 1e0e564:    5f 42             	[r1 + 20] = r7
 1e0e566:    54 00             	testset b[r4]
 1e0e568:    00 00             	nop
 1e0e56a:    00 00             	nop
 1e0e56c:    00 00             	nop
 1e0e56e:    00 00             	nop
 1e0e570:    00 a2             	r0 = sp + 32
 1e0e572:    44 42             	r4 = [r1 + 16]
 1e0e574:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e576:    46 46             	r6 = [r3 + 16]
 1e0e578:    54 00             	testset b[r4]
 1e0e57a:    00 00             	nop
 1e0e57c:    00 00             	nop
 1e0e57e:    00 00             	nop
 1e0e580:    00 00             	nop
 1e0e582:    a3 44             	r3 = [r2 + 40]
 1e0e584:    42 47             	r2 = [r3 + 80]
 1e0e586:    5f 45             	[r2 + 84] = r7
 1e0e588:    51 00             	testset b[r1]
 1e0e58a:    00 00             	nop
 1e0e58c:    00 00             	nop
 1e0e58e:    00 00             	nop
 1e0e590:    00 00             	nop
 1e0e592:    00 a4             	r0 = sp + 64
 1e0e594:    44 42             	r4 = [r1 + 16]
 1e0e596:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e598:    46 49             	r6 = [r4 + 80]
 1e0e59a:    52 00             	testset b[r2]
 1e0e59c:    00 00             	nop
 1e0e59e:    00 00             	nop
 1e0e5a0:    00 00             	nop
 1e0e5a2:    00 00             	nop
 1e0e5a4:    a5 44             	r5 = [r2 + 40]
 1e0e5a6:    42 47             	r2 = [r3 + 80]
 1e0e5a8:    5f 43             	[r1 + 84] = r7
 1e0e5aa:    50 55             	r0 = h[r2 + 42] (u)
 1e0e5ac:    30 5f             	r0 = h[r7 + 38] (u)
 1e0e5ae:    57 52             	r7 = h[r1 + 10] (u)
 1e0e5b0:    00 00             	nop
 1e0e5b2:    00 00             	nop
 1e0e5b4:    00 f0 44 42       	if ((r0 & r0) == 0) goto 33928 <active_update_task+0x1C6 : 1e16a40 >
 1e0e5b8:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e5ba:    43 50             	r3 = h[r0 + 8] (u)
 1e0e5bc:    55 30             	if (r0 != 0) goto 170 <timer_div.1454 : 1e0e668 >
 1e0e5be:    5f 52             	h[r1 + 10] = r7
 1e0e5c0:    44 00             	testset b[r4]
 1e0e5c2:    00 00             	nop
 1e0e5c4:    00 00             	nop
 1e0e5c6:    f1 44             	r1 = [r2 + 60]
 1e0e5c8:    42 47             	r2 = [r3 + 80]
 1e0e5ca:    5f 43             	[r1 + 84] = r7
 1e0e5cc:    50 55             	r0 = h[r2 + 42] (u)
 1e0e5ce:    30 5f             	r0 = h[r7 + 38] (u)
 1e0e5d0:    49 46             	[r3 + 16] = r1
 1e0e5d2:    00 00             	nop
 1e0e5d4:    00 00             	nop
 1e0e5d6:    00 f2 44 42       	if (r0 ?? r0) goto 1160 <anl_gain_set+0xCA : 1e0ea62 >
 1e0e5da:    47 5f             	r7 = h[r7 + 40] (u)
 1e0e5dc:    53 44             	r3 = [r2 + 20]
 1e0e5de:    54 41             	r4 = [r0 + 84]
 1e0e5e0:    50 00             	testset b[r0]
 1e0e5e2:    00 00             	nop
 1e0e5e4:    00 00             	nop
 1e0e5e6:    00 00             	nop
 1e0e5e8:    ff 4d             	[r6 + 124] = r7
 1e0e5ea:    53 47             	r3 = [r3 + 84]
 1e0e5ec:    5f 4e             	[r7 + 20] = r7
 1e0e5ee:    55 4c             	r5 = [r6 + 20]
 1e0e5f0:    4c 00             	testset b[r12]
 1e0e5f2:    00 00             	nop
 1e0e5f4:    00 00             	nop
 1e0e5f6:    00 00             	nop
 1e0e5f8:    00 ff 00 00 00 00 	if (r0 == 0) goto 0 <dev_id_list+0x356 : 1e0e5fe >
 1e0e5fe:    ff ff 00 f0 ff ff 	pc = 4294963200
 1e0e604:    00 ff ff ff c9 00 	if (r15 == -1) goto 402 <__VERSION_END+0x6 : 1e0e79c >
 1e0e60a:    00 00             	nop
 1e0e60c:    c8 00             	pfetch [r8]
 1e0e60e:    00 00             	nop
 1e0e610:    cc 00             	pfetch [r12]
 1e0e612:    00 00             	nop
 1e0e614:    00 00             	nop
 1e0e616:    00 00             	nop
 1e0e618:    00 00             	nop
 1e0e61a:    00 00             	nop
 1e0e61c:    00 00             	nop
 1e0e61e:    00 00             	nop


flash_powerup_ok_flash:
 1e0e620:    66 6c             	r6 = b[r6 + 6] (u)
 1e0e622:    61 73             	r1 = 54
 1e0e624:    68 5f             	h[r7 + 44] = r0
 1e0e626:    70 6f             	r0 = b[r7 + 23] (u)
 1e0e628:    77 65             	r7 = b[r2 + 23] (u)
 1e0e62a:    72 75             	r2 = 87
 1e0e62c:    70 5f             	r0 = h[r7 + 46] (u)
 1e0e62e:    6f 6b             	b[r5 + 22] = r7
 1e0e630:    00 00             	nop
 1e0e632:    00 00             	nop
 1e0e634:    00 00             	nop
 1e0e636:    00 00             	nop
 1e0e638:    00 00             	nop
 1e0e63a:    00 00             	nop
 1e0e63c:    00 00             	nop
 1e0e63e:    00 00             	nop


PB_valid:
 1e0e640:    00 01             	{r3-r0} = [sp++]
 1e0e642:    02 03             	r2 = [sp+64]
 1e0e644:    04 05             	r4 = r4.b0 (u)
 1e0e646:    06 07             	r6 = -16
 1e0e648:    08 09             	r8 += r0


PA_map_tbl:
 1e0e64a:    01 02             	r1 = [sp]
 1e0e64c:    03 04             	r3 = r0.b0 (u)
 1e0e64e:    05 06             	r5 = -32
 1e0e650:    07 08             	r7 = r0
 1e0e652:    09 0a             	sp += 16


PB_map_tbl:
 1e0e654:    0b 0c             	r11 <<= r0
 1e0e656:    0d 0e             	r5 = r1 * r0
 1e0e658:    0f 10             	call 30 <timer_div.1454+0x10 : 1e0e678 >
 1e0e65a:    11 12             	call 1058 <anl_gain_set_h+0x6 : 1e0ea7e >
 1e0e65c:    13 14             	call -2010 <btstack_lowpower_target : 1e0de84 >


PD_valid:
 1e0e65e:    00 01             	{r3-r0} = [sp++]
 1e0e660:    02 03             	r2 = [sp+64]
 1e0e662:    04 15             	call -1528 <update_target_end+0x18C : 1e0e06c >


PD_map_tbl:
 1e0e663:    15 16             	call -982 <wdt_time+0x27 : 1e0e28f >
 1e0e665:    17 18             	goto 46 <timer_div.1454+0x2D : 1e0e695 >
 1e0e667:    19 01             	{rets, r9-r4} = [sp++]


timer_div.1454:
 1e0e668:    01 00             	nop
 1e0e66a:    00 00             	nop
 1e0e66c:    04 00             	bkpt
 1e0e66e:    00 00             	nop
 1e0e670:    10 00             	lockclr
 1e0e672:    00 00             	nop
 1e0e674:    40 00             	testset b[r0]
 1e0e676:    00 00             	nop
 1e0e678:    02 00             	idle
 1e0e67a:    00 00             	nop
 1e0e67c:    08 00             	csync
 1e0e67e:    00 00             	nop
 1e0e680:    20 00             	rts
 1e0e682:    00 00             	nop
 1e0e684:    80 00             	call r0
 1e0e686:    00 00             	nop
 1e0e688:    00 01             	{r3-r0} = [sp++]
 1e0e68a:    00 00             	nop
 1e0e68c:    00 04             	r0 = r0.b0 (u)
 1e0e68e:    00 00             	nop
 1e0e690:    00 10             	call 0 <timer_div.1454+0x2A : 1e0e692 >
 1e0e692:    00 00             	nop
 1e0e694:    00 40             	r0 = [r0 + 0]
 1e0e696:    00 00             	nop
 1e0e698:    00 02             	r0 = [sp]
 1e0e69a:    00 00             	nop
 1e0e69c:    00 08             	r0 = r0
 1e0e69e:    00 00             	nop
 1e0e6a0:    00 20             	if (r0 == 0) goto 0 <timer_div.1454+0x3A : 1e0e6a2 >
 1e0e6a2:    00 00             	nop
 1e0e6a4:    00 80             	r0 += 0
 1e0e6a6:    00 00             	nop


timer_power_ops:
 1e0e6a8:    00 00             	nop
 1e0e6aa:    00 00             	nop
 1e0e6ac:    00 00             	nop
 1e0e6ae:    00 00             	nop
 1e0e6b0:    00 00             	nop
 1e0e6b2:    00 00             	nop
 1e0e6b4:    4e 2f             	if (r7 == 0) goto -356 <dev_id_list+0x2AA : 1e0e552 >
 1e0e6b6:    e0 01             	[--sp] = {psr}
 1e0e6b8:    6a 2f             	if (r7 == 0) goto -300 <dev_id_list+0x2E6 : 1e0e58e >
 1e0e6ba:    e0 01             	[--sp] = {psr}
 1e0e6bc:    00 00             	nop
 1e0e6be:    00 00             	nop


sys_power_ops:
 1e0e6c0:    00 00             	nop
 1e0e6c2:    00 00             	nop
 1e0e6c4:    c8 b2             	r8 = r1 + r3
 1e0e6c6:    e0 01             	[--sp] = {psr}
 1e0e6c8:    00 00             	nop
 1e0e6ca:    00 00             	nop
 1e0e6cc:    50 b3             	r0 &= r1
 1e0e6ce:    e0 01             	[--sp] = {psr}
 1e0e6d0:    66 b3             	r6 = r1 - r5
 1e0e6d2:    e0 01             	[--sp] = {psr}
 1e0e6d4:    00 00             	nop
 1e0e6d6:    00 00             	nop


group_item_table:
 1e0e6d8:    65 00             	cli r5
 1e0e6da:    20 00             	rts
 1e0e6dc:    14 00             	lockset


bluetooth_base_uuid:
 1e0e6de:    fb 34             	if (r2 != 0) goto 502 <m_code_addr+0x136 : 1e0e8d6 >
 1e0e6e0:    9b 5f             	h[r7 + 50] = r3
 1e0e6e2:    80 00             	call r0
 1e0e6e4:    00 80             	r0 += 0
 1e0e6e6:    00 10             	call 0 <bluetooth_base_uuid+0xA : 1e0e6e8 >
 1e0e6e8:    00 00             	nop
 1e0e6ea:    00 00             	nop
 1e0e6ec:    00 00             	nop
 1e0e6ee:    00 18             	goto 0 <bluetooth_base_uuid+0x12 : 1e0e6f0 >
 1e0e6f0:    4e 66             	b[r3 + 4] = r6


ufw_flash_file_match_api.match_file_prefix:
 1e0e6f1:    66 6c             	r6 = b[r6 + 6] (u)
 1e0e6f3:    61 73             	r1 = 54
 1e0e6f5:    68 00             	cli r8


ufw_flash_file_match_api.match_file_suffix:
 1e0e6f7:    2e 62             	b[r1 + 2] = r6
 1e0e6f9:    69 6e             	b[r7 + 6] = r1
 1e0e6fb:    00 00             	nop


boot_addr_tab:
 1e0e6fc:    00 00             	nop
 1e0e6fe:    00 00             	nop
 1e0e700:    00 10             	call 0 <boot_addr_tab+0x6 : 1e0e702 >
 1e0e702:    00 00             	nop
 1e0e704:    00 00             	nop
 1e0e706:    01 00             	nop
 1e0e708:    01 02             	r1 = [sp]
 1e0e70a:    04 08             	r4 = r0
 1e0e70c:    01 03             	r1 = [sp+64]
 1e0e70e:    05 07             	r5 = -16


gpio_regs:
 1e0e710:    00 50             	r0 = h[r0 + 0] (u)
 1e0e712:    1e 00             	sti
 1e0e714:    00 51             	r0 = h[r0 + 32] (u)
 1e0e716:    1e 00             	sti
 1e0e718:    00 53             	r0 = h[r1 + 32] (u)
 1e0e71a:    1e 00             	sti
 1e0e71c:    00 59             	r0 = h[r4 + 32] (u)
 1e0e71e:    1e 00             	sti


gpio_out_regs:
 1e0e720:    00 56             	r0 = h[r3 + 0] (u)
 1e0e722:    1e 00             	sti
 1e0e724:    28 56             	h[r3 + 4] = r0
 1e0e726:    1e 00             	sti
 1e0e728:    50 56             	r0 = h[r3 + 10] (u)
 1e0e72a:    1e 00             	sti
 1e0e72c:    74 56             	r4 = h[r3 + 14] (u)
 1e0e72e:    1e 00             	sti


clock_mcpwm:
 1e0e730:    c6 03             	r6 = [sp+112]
 1e0e732:    e0 01             	[--sp] = {psr}
 1e0e734:    d8 03             	[sp+116] = r0
 1e0e736:    e0 01             	[--sp] = {psr}


clock_uart:
 1e0e738:    5e 24             	if (r2 == 0) goto 188 <m_code_addr+0x56 : 1e0e7f6 >
 1e0e73a:    e0 01             	[--sp] = {psr}
 1e0e73c:    60 24             	if (r2 == 0) goto 192 <m_code_addr+0x5E : 1e0e7fe >
 1e0e73e:    e0 01             	[--sp] = {psr}


clock_timer:
 1e0e740:    2e 2f             	if (r7 == 0) goto -420 <dev_id_list+0x2F6 : 1e0e59e >
 1e0e742:    e0 01             	[--sp] = {psr}
 1e0e744:    4a 2f             	if (r7 == 0) goto -364 <dev_id_list+0x332 : 1e0e5da >
 1e0e746:    e0 01             	[--sp] = {psr}


clock_lrc:
 1e0e748:    8a 2f             	if (r7 == 0) goto -236 <PD_valid : 1e0e65e >
 1e0e74a:    e0 01             	[--sp] = {psr}
 1e0e74c:    cc 2f             	if (r7 == 0) goto -104 <bluetooth_base_uuid+0x8 : 1e0e6e6 >
 1e0e74e:    e0 01             	[--sp] = {psr}


clock_port:
 1e0e750:    7c a8             	r12 = sp + 135
 1e0e752:    e0 01             	[--sp] = {psr}
 1e0e754:    88 a8             	r8 = sp + 136
 1e0e756:    e0 01             	[--sp] = {psr}


storage_device_end:
 1e0e758:    c5 56             	r5 = h[r3 + 24] (u)
 1e0e75a:    a9 0b             	sp += -176
 1e0e75c:    42 54             	r2 = h[r2 + 8] (u)
 1e0e75e:    43 54             	r3 = h[r2 + 8] (u)
 1e0e760:    52 4c             	r2 = [r6 + 20]
 1e0e762:    45 52             	r5 = h[r1 + 8] (u)
 1e0e764:    2d 40             	[r0 + 8] = r5
 1e0e766:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x2C : 1e0e7cc >
 1e0e768:    32 32             	if (r1 != 0) goto 100 <m_code_addr+0x2E : 1e0e7ce >
 1e0e76a:    30 33             	if (r1 != 0) goto -416 <dev_id_list+0x324 : 1e0e5cc >
 1e0e76c:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x30 : 1e0e7d0 >
 1e0e76e:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x2A : 1e0e7ca >
 1e0e770:    30 33             	if (r1 != 0) goto -416 <dev_id_list+0x32A : 1e0e5d2 >
 1e0e772:    63 61             	r3 = b[r0 + 22] (u)
 1e0e774:    31 31             	if (r0 != 0) goto -414 <dev_id_list+0x330 : 1e0e5d8 >
 1e0e776:    38 00             	cc = 0


lib_update_version:
 1e0e778:    d7 56             	r7 = h[r3 + 26] (u)
 1e0e77a:    a9 0b             	sp += -176
 1e0e77c:    55 50             	r5 = h[r0 + 10] (u)
 1e0e77e:    44 41             	r4 = [r0 + 80]
 1e0e780:    54 45             	r4 = [r2 + 84]
 1e0e782:    2d 40             	[r0 + 8] = r5
 1e0e784:    32 30             	if (r0 != 0) goto 100 <m_code_addr+0x4A : 1e0e7ea >
 1e0e786:    32 32             	if (r1 != 0) goto 100 <m_code_addr+0x4C : 1e0e7ec >
 1e0e788:    30 33             	if (r1 != 0) goto -416 <dev_id_list+0x342 : 1e0e5ea >
 1e0e78a:    31 34             	if (r2 != 0) goto 98 <m_code_addr+0x4E : 1e0e7ee >
 1e0e78c:    2d 24             	if (r2 == 0) goto 90 <m_code_addr+0x48 : 1e0e7e8 >
 1e0e78e:    32 31             	if (r0 != 0) goto -412 <dev_id_list+0x34C : 1e0e5f4 >
 1e0e790:    38 39             	if (r4 != 0) goto -400 <dev_id_list+0x35A : 1e0e602 >
 1e0e792:    64 64             	r4 = b[r2 + 6] (u)
 1e0e794:    62 00             	cli r2


__VERSION_END:
 1e0e796:    00 00             	nop
 1e0e798:    00 00             	nop
 1e0e79a:    00 00             	nop
 1e0e79c:    00 00             	nop
 1e0e79e:    00 00             	nop


m_code_addr:
 1e0e7a0:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7a2:    05 00             	bkpt
 1e0e7a4:    00 00             	nop
 1e0e7a6:    10 00             	lockclr
 1e0e7a8:    ab aa             	r11 = sp + 170
 1e0e7aa:    1a 00             	cli
 1e0e7ac:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7ae:    25 00             	rtx
 1e0e7b0:    00 00             	nop
 1e0e7b2:    30 00             	pc = [sp++]
 1e0e7b4:    ab aa             	r11 = sp + 170
 1e0e7b6:    3a 00             	cc = 1
 1e0e7b8:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7ba:    45 00             	testset b[r5]
 1e0e7bc:    00 00             	nop
 1e0e7be:    50 00             	testset b[r0]
 1e0e7c0:    ab aa             	r11 = sp + 170
 1e0e7c2:    5a 00             	testset b[r10]
 1e0e7c4:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7c6:    65 00             	cli r5
 1e0e7c8:    00 00             	nop
 1e0e7ca:    70 00             	sti r0
 1e0e7cc:    ab aa             	r11 = sp + 170
 1e0e7ce:    7a 00             	sti r10
 1e0e7d0:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7d2:    85 00             	call r5
 1e0e7d4:    00 00             	nop
 1e0e7d6:    90 00             	goto r0
 1e0e7d8:    ab aa             	r11 = sp + 170
 1e0e7da:    9a 00             	goto r10
 1e0e7dc:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7de:    a5 00             	tbb [r5]
 1e0e7e0:    00 00             	nop
 1e0e7e2:    b0 00             	tbh [r0]
 1e0e7e4:    ab aa             	r11 = sp + 170
 1e0e7e6:    ba 00             	tbh [r10]
 1e0e7e8:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7ea:    c5 00             	pfetch [r5]
 1e0e7ec:    00 00             	nop
 1e0e7ee:    d0 00             	iflush [r0]
 1e0e7f0:    ab aa             	r11 = sp + 170
 1e0e7f2:    da 00             	iflush [r10]
 1e0e7f4:    55 55             	r5 = h[r2 + 42] (u)
 1e0e7f6:    e5 00             	flush [r5]
 1e0e7f8:    00 00             	nop
 1e0e7fa:    f0 00             	flushinv [r0]
 1e0e7fc:    ab aa             	r11 = sp + 170
 1e0e7fe:    fa 00             	flushinv [r10]
 1e0e800:    55 55             	r5 = h[r2 + 42] (u)
 1e0e802:    05 00             	bkpt
 1e0e804:    00 00             	nop
 1e0e806:    10 00             	lockclr
 1e0e808:    ab aa             	r11 = sp + 170
 1e0e80a:    1a 00             	cli
 1e0e80c:    55 55             	r5 = h[r2 + 42] (u)
 1e0e80e:    25 00             	rtx
 1e0e810:    00 00             	nop
 1e0e812:    30 00             	pc = [sp++]
 1e0e814:    ab aa             	r11 = sp + 170
 1e0e816:    3a 00             	cc = 1
 1e0e818:    55 55             	r5 = h[r2 + 42] (u)
 1e0e81a:    45 00             	testset b[r5]
 1e0e81c:    00 00             	nop
 1e0e81e:    50 00             	testset b[r0]
 1e0e820:    ab aa             	r11 = sp + 170
 1e0e822:    5a 00             	testset b[r10]
 1e0e824:    55 55             	r5 = h[r2 + 42] (u)
 1e0e826:    65 00             	cli r5
 1e0e828:    00 00             	nop
 1e0e82a:    70 00             	sti r0
 1e0e82c:    ab aa             	r11 = sp + 170
 1e0e82e:    7a 00             	sti r10
 1e0e830:    55 55             	r5 = h[r2 + 42] (u)
 1e0e832:    85 00             	call r5
 1e0e834:    00 00             	nop
 1e0e836:    90 00             	goto r0
 1e0e838:    ab aa             	r11 = sp + 170
 1e0e83a:    9a 00             	goto r10
 1e0e83c:    55 55             	r5 = h[r2 + 42] (u)
 1e0e83e:    a5 00             	tbb [r5]
 1e0e840:    00 00             	nop
 1e0e842:    b0 00             	tbh [r0]
 1e0e844:    ab aa             	r11 = sp + 170
 1e0e846:    ba 00             	tbh [r10]
 1e0e848:    55 55             	r5 = h[r2 + 42] (u)
 1e0e84a:    c5 00             	pfetch [r5]
 1e0e84c:    00 00             	nop
 1e0e84e:    d0 00             	iflush [r0]
 1e0e850:    ab aa             	r11 = sp + 170
 1e0e852:    da 00             	iflush [r10]
 1e0e854:    55 55             	r5 = h[r2 + 42] (u)
 1e0e856:    e5 00             	flush [r5]
 1e0e858:    00 00             	nop
 1e0e85a:    f0 00             	flushinv [r0]
 1e0e85c:    ab aa             	r11 = sp + 170
 1e0e85e:    fa 00             	flushinv [r10]
 1e0e860:    55 55             	r5 = h[r2 + 42] (u)
 1e0e862:    05 00             	bkpt
 1e0e864:    00 00             	nop
 1e0e866:    10 00             	lockclr
 1e0e868:    ab aa             	r11 = sp + 170
 1e0e86a:    1a 00             	cli
 1e0e86c:    55 55             	r5 = h[r2 + 42] (u)
 1e0e86e:    25 00             	rtx
 1e0e870:    00 00             	nop
 1e0e872:    30 00             	pc = [sp++]
 1e0e874:    ab aa             	r11 = sp + 170
 1e0e876:    3a 00             	cc = 1
 1e0e878:    55 55             	r5 = h[r2 + 42] (u)
 1e0e87a:    45 00             	testset b[r5]
 1e0e87c:    00 00             	nop
 1e0e87e:    50 00             	testset b[r0]
 1e0e880:    ab aa             	r11 = sp + 170
 1e0e882:    5a 00             	testset b[r10]
 1e0e884:    55 55             	r5 = h[r2 + 42] (u)
 1e0e886:    65 00             	cli r5
 1e0e888:    00 00             	nop
 1e0e88a:    70 00             	sti r0
 1e0e88c:    ab aa             	r11 = sp + 170
 1e0e88e:    7a 00             	sti r10
 1e0e890:    55 55             	r5 = h[r2 + 42] (u)
 1e0e892:    85 00             	call r5
 1e0e894:    00 00             	nop
 1e0e896:    90 00             	goto r0
 1e0e898:    ab aa             	r11 = sp + 170
 1e0e89a:    9a 00             	goto r10
 1e0e89c:    55 55             	r5 = h[r2 + 42] (u)
 1e0e89e:    a5 00             	tbb [r5]
 1e0e8a0:    00 00             	nop
 1e0e8a2:    b0 00             	tbh [r0]
 1e0e8a4:    ab aa             	r11 = sp + 170
 1e0e8a6:    ba 00             	tbh [r10]
 1e0e8a8:    55 55             	r5 = h[r2 + 42] (u)
 1e0e8aa:    c5 00             	pfetch [r5]
 1e0e8ac:    00 00             	nop
 1e0e8ae:    d0 00             	iflush [r0]
 1e0e8b0:    ab aa             	r11 = sp + 170
 1e0e8b2:    da 00             	iflush [r10]
 1e0e8b4:    55 55             	r5 = h[r2 + 42] (u)
 1e0e8b6:    e5 00             	flush [r5]
 1e0e8b8:    00 00             	nop
 1e0e8ba:    f0 00             	flushinv [r0]
 1e0e8bc:    ab aa             	r11 = sp + 170
 1e0e8be:    fa 00             	flushinv [r10]
 1e0e8c0:    55 55             	r5 = h[r2 + 42] (u)
 1e0e8c2:    05 00             	bkpt
 1e0e8c4:    00 00             	nop
 1e0e8c6:    10 00             	lockclr
 1e0e8c8:    ab aa             	r11 = sp + 170
 1e0e8ca:    1a 00             	cli
 1e0e8cc:    55 55             	r5 = h[r2 + 42] (u)
 1e0e8ce:    25 00             	rtx
 1e0e8d0:    00 00             	nop
 1e0e8d2:    30 00             	pc = [sp++]
 1e0e8d4:    ab aa             	r11 = sp + 170
 1e0e8d6:    3a 00             	cc = 1
 1e0e8d8:    55 55             	r5 = h[r2 + 42] (u)
 1e0e8da:    45 00             	testset b[r5]
 1e0e8dc:    00 00             	nop
 1e0e8de:    50 00             	testset b[r0]
 1e0e8e0:    ab aa             	r11 = sp + 170
 1e0e8e2:    5a 00             	testset b[r10]
 1e0e8e4:    00 00             	nop
 1e0e8e6:    00 00             	nop
 1e0e8e8:    00 00             	nop
 1e0e8ea:    00 00             	nop


bt_frac_pll_int_48m:
 1e0e8ec:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8ee:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8f0:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8f2:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8f4:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8f6:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8f8:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8fa:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8fc:    64 64             	r4 = b[r2 + 6] (u)
 1e0e8fe:    64 64             	r4 = b[r2 + 6] (u)
 1e0e900:    64 64             	r4 = b[r2 + 6] (u)
 1e0e902:    64 64             	r4 = b[r2 + 6] (u)
 1e0e904:    65 65             	r5 = b[r2 + 22] (u)
 1e0e906:    65 65             	r5 = b[r2 + 22] (u)
 1e0e908:    65 65             	r5 = b[r2 + 22] (u)
 1e0e90a:    65 65             	r5 = b[r2 + 22] (u)
 1e0e90c:    65 65             	r5 = b[r2 + 22] (u)
 1e0e90e:    65 65             	r5 = b[r2 + 22] (u)
 1e0e910:    65 65             	r5 = b[r2 + 22] (u)
 1e0e912:    65 65             	r5 = b[r2 + 22] (u)
 1e0e914:    65 65             	r5 = b[r2 + 22] (u)
 1e0e916:    65 65             	r5 = b[r2 + 22] (u)
 1e0e918:    65 65             	r5 = b[r2 + 22] (u)
 1e0e91a:    65 65             	r5 = b[r2 + 22] (u)
 1e0e91c:    66 66             	r6 = b[r3 + 6] (u)
 1e0e91e:    66 66             	r6 = b[r3 + 6] (u)
 1e0e920:    66 66             	r6 = b[r3 + 6] (u)
 1e0e922:    66 66             	r6 = b[r3 + 6] (u)
 1e0e924:    66 66             	r6 = b[r3 + 6] (u)
 1e0e926:    66 66             	r6 = b[r3 + 6] (u)
 1e0e928:    66 66             	r6 = b[r3 + 6] (u)
 1e0e92a:    66 66             	r6 = b[r3 + 6] (u)
 1e0e92c:    66 66             	r6 = b[r3 + 6] (u)
 1e0e92e:    66 66             	r6 = b[r3 + 6] (u)
 1e0e930:    66 66             	r6 = b[r3 + 6] (u)
 1e0e932:    66 66             	r6 = b[r3 + 6] (u)
 1e0e934:    67 67             	r7 = b[r3 + 22] (u)
 1e0e936:    67 67             	r7 = b[r3 + 22] (u)
 1e0e938:    67 67             	r7 = b[r3 + 22] (u)
 1e0e93a:    67 67             	r7 = b[r3 + 22] (u)
 1e0e93c:    67 00             	cli r7
 1e0e93e:    00 00             	nop


TXPWR_table:
 1e0e940:    d1 da             	r1 = r2 >>> 11
 1e0e942:    00 1e             	goto -1024 <dev_id_list+0x29C : 1e0e544 >
 1e0e944:    d1 da             	r1 = r2 >>> 11
 1e0e946:    01 1e             	goto -1022 <dev_id_list+0x2A2 : 1e0e54a >
 1e0e948:    d1 da             	r1 = r2 >>> 11
 1e0e94a:    03 1e             	goto -1018 <dev_id_list+0x2AA : 1e0e552 >
 1e0e94c:    d1 da             	r1 = r2 >>> 11
 1e0e94e:    07 1e             	goto -1010 <dev_id_list+0x2B6 : 1e0e55e >
 1e0e950:    d1 da             	r1 = r2 >>> 11
 1e0e952:    0f 1e             	goto -994 <dev_id_list+0x2CA : 1e0e572 >
 1e0e954:    d1 da             	r1 = r2 >>> 11
 1e0e956:    1f 1e             	goto -962 <dev_id_list+0x2EE : 1e0e596 >
 1e0e958:    d1 da             	r1 = r2 >>> 11
 1e0e95a:    3f 1e             	goto -898 <dev_id_list+0x332 : 1e0e5da >
 1e0e95c:    d1 da             	r1 = r2 >>> 11
 1e0e95e:    7f 1e             	goto -770 <PD_valid : 1e0e65e >
 1e0e960:    d1 da             	r1 = r2 >>> 11
 1e0e962:    ff 1e             	goto -514 <storage_device_end+0xA : 1e0e762 >
 1e0e964:    d1 da             	r1 = r2 >>> 11
 1e0e966:    ff 1f             	goto -2 <TXPWR_table+0x26 : 1e0e966 >
 1e0e968:    e9 da             	r1 = r5 >>> 11
 1e0e96a:    ff 1f             	goto -2 <TXPWR_table+0x2A : 1e0e96a >


TXSET_table:
 1e0e96c:    f2 00             	flushinv [r2]
 1e0e96e:    00 00             	nop
 1e0e970:    f2 00             	flushinv [r2]
 1e0e972:    00 00             	nop
 1e0e974:    f2 00             	flushinv [r2]
 1e0e976:    00 00             	nop
 1e0e978:    f2 00             	flushinv [r2]
 1e0e97a:    00 00             	nop
 1e0e97c:    f2 00             	flushinv [r2]
 1e0e97e:    00 00             	nop
 1e0e980:    f2 00             	flushinv [r2]
 1e0e982:    00 00             	nop
 1e0e984:    f2 00             	flushinv [r2]
 1e0e986:    00 00             	nop
 1e0e988:    f2 00             	flushinv [r2]
 1e0e98a:    00 00             	nop
 1e0e98c:    f2 00             	flushinv [r2]
 1e0e98e:    00 00             	nop
 1e0e990:    f2 00             	flushinv [r2]
 1e0e992:    00 00             	nop
 1e0e994:    f2 00             	flushinv [r2]
 1e0e996:    00 00             	nop


anl_gain_set:
 1e0e998:    47 0d             	r7 <<= r5
 1e0e99a:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x26 : 1e0eb7e >
 1e0e99c:    47 0d             	r7 <<= r5
 1e0e99e:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2A : 1e0eb82 >
 1e0e9a0:    47 0d             	r7 <<= r5
 1e0e9a2:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x2E : 1e0eb86 >
 1e0e9a4:    47 0d             	r7 <<= r5
 1e0e9a6:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x32 : 1e0eb8a >
 1e0e9a8:    47 0d             	r7 <<= r5
 1e0e9aa:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x36 : 1e0eb8e >
 1e0e9ac:    47 0d             	r7 <<= r5
 1e0e9ae:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3A : 1e0eb92 >
 1e0e9b0:    47 0d             	r7 <<= r5
 1e0e9b2:    f1 20             	if (r0 == 0) goto 482 <gain_adj_step+0x3E : 1e0eb96 >
 1e0e9b4:    47 0d             	r7 <<= r5
 1e0e9b6:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x2 : 1e0eb9a >
 1e0e9b8:    47 0d             	r7 <<= r5
 1e0e9ba:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x6 : 1e0eb9e >
 1e0e9bc:    47 0d             	r7 <<= r5
 1e0e9be:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xA : 1e0eba2 >
 1e0e9c0:    47 0d             	r7 <<= r5
 1e0e9c2:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0xE : 1e0eba6 >
 1e0e9c4:    47 0d             	r7 <<= r5
 1e0e9c6:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x12 : 1e0ebaa >
 1e0e9c8:    47 0d             	r7 <<= r5
 1e0e9ca:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x16 : 1e0ebae >
 1e0e9cc:    47 0d             	r7 <<= r5
 1e0e9ce:    f1 20             	if (r0 == 0) goto 482 <bt_pll_para+0x1A : 1e0ebb2 >
 1e0e9d0:    47 0d             	r7 <<= r5
 1e0e9d2:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x2 : 1e0ebb6 >
 1e0e9d4:    47 0d             	r7 <<= r5
 1e0e9d6:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x6 : 1e0ebba >
 1e0e9d8:    47 0d             	r7 <<= r5
 1e0e9da:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0xA : 1e0ebbe >
 1e0e9dc:    47 0d             	r7 <<= r5
 1e0e9de:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0xE : 1e0ebc2 >
 1e0e9e0:    47 0d             	r7 <<= r5
 1e0e9e2:    f1 20             	if (r0 == 0) goto 482 <bt_max_pwr_set+0x12 : 1e0ebc6 >
 1e0e9e4:    47 0d             	r7 <<= r5
 1e0e9e6:    f1 20             	if (r0 == 0) goto 482 <btagc_init+0x2 : 1e0ebca >
 1e0e9e8:    47 0d             	r7 <<= r5
 1e0e9ea:    f1 20             	if (r0 == 0) goto 482 <btagc_init+0x6 : 1e0ebce >
 1e0e9ec:    47 0d             	r7 <<= r5
 1e0e9ee:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0xA : 1e0ebd2 >
 1e0e9f0:    47 2d             	if (r6 == 0) goto -370 <m_code_addr+0xE0 : 1e0e880 >
 1e0e9f2:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0xE : 1e0ebd6 >
 1e0e9f4:    47 4d             	r7 = [r6 + 80]
 1e0e9f6:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x12 : 1e0ebda >
 1e0e9f8:    46 0d             	r6 <<= r5
 1e0e9fa:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x16 : 1e0ebde >
 1e0e9fc:    46 2d             	if (r6 == 0) goto -372 <m_code_addr+0xEA : 1e0e88a >
 1e0e9fe:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x1A : 1e0ebe2 >
 1e0ea00:    46 4d             	r6 = [r6 + 80]
 1e0ea02:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x1E : 1e0ebe6 >
 1e0ea04:    46 6d             	r6 = b[r6 + 20] (u)
 1e0ea06:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x22 : 1e0ebea >
 1e0ea08:    46 8d             	r6 += -44
 1e0ea0a:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x26 : 1e0ebee >
 1e0ea0c:    46 ad             	r6 = sp + 212
 1e0ea0e:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x2A : 1e0ebf2 >
 1e0ea10:    46 cd             	r6 = r0 <<< 21
 1e0ea12:    f1 22             	if (r1 == 0) goto 482 <btagc_init+0x2E : 1e0ebf6 >
 1e0ea14:    46 ed f1 22       	if (r6 >= 212) goto 1506 <bt_analog_part_init+0x1C : 1e0effa >
 1e0ea18:    44 0d             	r4 <<= r5
 1e0ea1a:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x36 : 1e0ebfe >
 1e0ea1c:    44 2d             	if (r6 == 0) goto -376 <m_code_addr+0x106 : 1e0e8a6 >
 1e0ea1e:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x3A : 1e0ec02 >
 1e0ea20:    44 4d             	r4 = [r6 + 80]
 1e0ea22:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x3E : 1e0ec06 >
 1e0ea24:    44 6d             	r4 = b[r6 + 20] (u)
 1e0ea26:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x42 : 1e0ec0a >
 1e0ea28:    44 8d             	r4 += -44
 1e0ea2a:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x46 : 1e0ec0e >
 1e0ea2c:    44 ad             	r4 = sp + 212
 1e0ea2e:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x4A : 1e0ec12 >
 1e0ea30:    44 cd             	r4 = r0 <<< 21
 1e0ea32:    f1 28             	if (r4 == 0) goto 482 <btagc_init+0x4E : 1e0ec16 >
 1e0ea34:    44 ed f1 28       	if (r4 >= 212) goto -3614 <lbuf_free+0x30 : 1e0dc1a >
 1e0ea38:    c1 0f             	r1 = r0 * r7
 1e0ea3a:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x56 : 1e0ec1e >
 1e0ea3c:    c1 2f             	if (r7 == 0) goto -126 <anl_gain_set+0x28 : 1e0e9c0 >
 1e0ea3e:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x5A : 1e0ec22 >
 1e0ea40:    c1 4f             	r1 = [r7 + 112]
 1e0ea42:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x5E : 1e0ec26 >
 1e0ea44:    c1 6f             	r1 = b[r7 + 28] (u)
 1e0ea46:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x62 : 1e0ec2a >
 1e0ea48:    c1 8f             	r1 += -4
 1e0ea4a:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x66 : 1e0ec2e >
 1e0ea4c:    c1 af             	r1 = sp + 252
 1e0ea4e:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x6A : 1e0ec32 >
 1e0ea50:    c1 cf             	r1 = r0 <<< 31
 1e0ea52:    f1 2e             	if (r7 == 0) goto 482 <btagc_init+0x6E : 1e0ec36 >
 1e0ea54:    c1 ef f1 2e       	if (r1 >= 252) goto -542 <m_code_addr+0x9A : 1e0e83a >
 1e0ea58:    c8 0d             	r8 <<= r7
 1e0ea5a:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x76 : 1e0ec3e >
 1e0ea5c:    c8 2d             	if (r6 == 0) goto -112 <anl_gain_set+0x56 : 1e0e9ee >
 1e0ea5e:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x7A : 1e0ec42 >
 1e0ea60:    c8 4d             	[r6 + 112] = r0
 1e0ea62:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x7E : 1e0ec46 >
 1e0ea64:    c8 6d             	b[r6 + 28] = r0
 1e0ea66:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x82 : 1e0ec4a >
 1e0ea68:    c8 8d             	r8 += -36
 1e0ea6a:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x86 : 1e0ec4e >
 1e0ea6c:    c8 ad             	r8 = sp + 220
 1e0ea6e:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x8A : 1e0ec52 >
 1e0ea70:    c8 cd             	r0 = r1 <<< 23
 1e0ea72:    f1 2c             	if (r6 == 0) goto 482 <btagc_init+0x8E : 1e0ec56 >
 1e0ea74:    c8 ed f1 2c       	if (r8 >= 220) goto -1566 <dev_id_list+0x1B2 : 1e0e45a >


anl_gain_set_h:
 1e0ea78:    0d 00             	syscall
 1e0ea7a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x20 : 1e0ea98 >
 1e0ea7e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x24 : 1e0ea9c >
 1e0ea82:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x28 : 1e0eaa0 >
 1e0ea86:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x2C : 1e0eaa4 >
 1e0ea8a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x30 : 1e0eaa8 >
 1e0ea8e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x34 : 1e0eaac >
 1e0ea92:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x38 : 1e0eab0 >
 1e0ea96:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x3C : 1e0eab4 >
 1e0ea9a:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x40 : 1e0eab8 >
 1e0ea9e:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x44 : 1e0eabc >
 1e0eaa2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x48 : 1e0eac0 >
 1e0eaa6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x4C : 1e0eac4 >
 1e0eaaa:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x50 : 1e0eac8 >
 1e0eaae:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x54 : 1e0eacc >
 1e0eab2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x58 : 1e0ead0 >
 1e0eab6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x5C : 1e0ead4 >
 1e0eaba:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x60 : 1e0ead8 >
 1e0eabe:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x64 : 1e0eadc >
 1e0eac2:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x68 : 1e0eae0 >
 1e0eac6:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x6C : 1e0eae4 >
 1e0eaca:    00 f0 0d 00       	if ((r0 & r0) == 0) goto 26 <anl_gain_set_h+0x70 : 1e0eae8 >
 1e0eace:    00 f2 0d 00       	if (r0 == r0) goto 26 <anl_gain_set_h+0x74 : 1e0eaec >
 1e0ead2:    00 f4 0d 00       	[r0 + 0] |= 2256
 1e0ead6:    00 f6 0d 00       	r0 = [r0 + 13]
 1e0eada:    00 f8 0d 00       	r0 = h[r0+r0] (u)
 1e0eade:    00 fa 0d 00       	r0 = b[r0+r0] (u)
 1e0eae2:    00 fc 0d 00       	r0 = r0 + 13
 1e0eae6:    00 fe 0d 00       	r0 = r0 * 2256
 1e0eaea:    00 00             	nop
 1e0eaec:    0d 00             	syscall
 1e0eaee:    00 02             	r0 = [sp]
 1e0eaf0:    0d 00             	syscall
 1e0eaf2:    00 04             	r0 = r0.b0 (u)
 1e0eaf4:    0d 00             	syscall
 1e0eaf6:    00 06             	r0 = -32
 1e0eaf8:    0d 00             	syscall
 1e0eafa:    00 08             	r0 = r0
 1e0eafc:    0d 00             	syscall
 1e0eafe:    00 0a             	sp += 0
 1e0eb00:    0d 00             	syscall
 1e0eb02:    00 0c             	r0 <<= r0
 1e0eb04:    0d 00             	syscall
 1e0eb06:    00 0e             	r0 = r0 * r0
 1e0eb08:    0d 00             	syscall
 1e0eb0a:    00 10             	call 0 <anl_gain_set_h+0x94 : 1e0eb0c >
 1e0eb0c:    0d 00             	syscall
 1e0eb0e:    00 12             	call 1024 <bt_exit_deepsleep+0x3A : 1e0ef10 >
 1e0eb10:    0d 00             	syscall
 1e0eb12:    00 14             	call -2048 <dev_id_list+0x6C : 1e0e314 >
 1e0eb14:    0d 00             	syscall
 1e0eb16:    00 16             	call -1024 <gpio_regs+0x8 : 1e0e718 >
 1e0eb18:    0d 00             	syscall
 1e0eb1a:    00 18             	goto 0 <anl_gain_set_h+0xA4 : 1e0eb1c >
 1e0eb1c:    0d 00             	syscall
 1e0eb1e:    00 1a             	goto 1024 <bt_exit_deepsleep+0x4A : 1e0ef20 >
 1e0eb20:    0d 00             	syscall
 1e0eb22:    00 1c             	goto -2048 <dev_id_list+0x7C : 1e0e324 >
 1e0eb24:    0d 00             	syscall
 1e0eb26:    00 1e             	goto -1024 <gpio_out_regs+0x8 : 1e0e728 >
 1e0eb28:    0d 00             	syscall
 1e0eb2a:    00 20             	if (r0 == 0) goto 0 <anl_gain_set_h+0xB4 : 1e0eb2c >
 1e0eb2c:    0d 00             	syscall
 1e0eb2e:    00 22             	if (r1 == 0) goto 0 <anl_gain_set_h+0xB8 : 1e0eb30 >
 1e0eb30:    0d 00             	syscall
 1e0eb32:    00 24             	if (r2 == 0) goto 0 <anl_gain_set_h+0xBC : 1e0eb34 >
 1e0eb34:    0d 00             	syscall
 1e0eb36:    00 26             	if (r3 == 0) goto 0 <anl_gain_set_h+0xC0 : 1e0eb38 >
 1e0eb38:    0d 00             	syscall
 1e0eb3a:    00 28             	if (r4 == 0) goto 0 <anl_gain_set_h+0xC4 : 1e0eb3c >
 1e0eb3c:    0d 00             	syscall
 1e0eb3e:    00 2a             	if (r5 == 0) goto 0 <anl_gain_set_h+0xC8 : 1e0eb40 >
 1e0eb40:    0d 00             	syscall
 1e0eb42:    00 2c             	if (r6 == 0) goto 0 <anl_gain_set_h+0xCC : 1e0eb44 >
 1e0eb44:    0d 00             	syscall
 1e0eb46:    00 2e             	if (r7 == 0) goto 0 <anl_gain_set_h+0xD0 : 1e0eb48 >
 1e0eb48:    0d 00             	syscall
 1e0eb4a:    00 30             	if (r0 != 0) goto 0 <anl_gain_set_h+0xD4 : 1e0eb4c >
 1e0eb4c:    0d 00             	syscall
 1e0eb4e:    00 32             	if (r1 != 0) goto 0 <anl_gain_set_h+0xD8 : 1e0eb50 >
 1e0eb50:    0d 00             	syscall
 1e0eb52:    00 34             	if (r2 != 0) goto 0 <anl_gain_set_h+0xDC : 1e0eb54 >
 1e0eb54:    0d 00             	syscall
 1e0eb56:    00 36             	if (r3 != 0) goto 0 <gain_adj_step : 1e0eb58 >


gain_adj_step:
 1e0eb58:    ec ed ed ee       	if (r12 ?? -34) goto -550 <bt_frac_pll_int_48m+0x4A : 1e0e936 >
 1e0eb5c:    ee ef ef f0       	if (r14 ?? -2) goto 478 <btagc_init+0x176 : 1e0ed3e >
 1e0eb60:    f0 f1 f1 f2       	if ((r0 & r15) != 0) goto -6686 <sdfile_open_part_dir+0x12 : 1e0d146 >
 1e0eb64:    f2 f3 f3 f4       	goto -1709594 <uECC_vli_cmp_unsafe+0x1B66552 : 1c6d54e >
 1e0eb68:    f4 f5              <unkown instruction>
 1e0eb6a:    f5 f6 f6 f7       	[r15 ++= r7] = r5
 1e0eb6e:    f7 f8 f8 f9       	h[r15 ++= r9] = r7.h
 1e0eb72:    f9 fa              <unkown instruction>
 1e0eb74:    fa fb fb fc       	r10 = sp + 64763
 1e0eb78:    fc fd fd 00       	r0 = r0 <> r15
 1e0eb7c:    00 00             	nop
 1e0eb7e:    00 00             	nop
 1e0eb80:    00 00             	nop
 1e0eb82:    00 00             	nop
 1e0eb84:    00 00             	nop
 1e0eb86:    03 03             	r3 = [sp+64]
 1e0eb88:    04 04             	r4 = r0.b0 (u)
 1e0eb8a:    05 05             	r5 = r4.b0 (u)
 1e0eb8c:    06 06             	r6 = -32
 1e0eb8e:    07 07             	r7 = -16
 1e0eb90:    08 08             	r8 = r0
 1e0eb92:    09 09             	r9 += r0
 1e0eb94:    0a 0a             	sp += 20
 1e0eb96:    0b 0b             	sp += -492


bt_pll_para:
 1e0eb98:    c1 ff b8 09 00 00 	r1 = 2488 <system_data_end : 9b8 >			  ## RF.c:89:0
 1e0eb9e:    02 70             	r2 = 0			  ## RF.c:96:17
 1e0eba0:    fa 62             	b[r1 + 15] = r2			  ## RF.c:96:17
 1e0eba2:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDC060 : f4240 >			  ## RF.c:99:24
 1e0eba8:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## RF.c:99:24
 1e0ebac:    68 62             	b[r1 + 6] = r0			  ## RF.c:99:18
 1e0ebae:    a0 70             	r0 = 10			  ## RF.c:100:17
 1e0ebb0:    78 62             	b[r1 + 7] = r0			  ## RF.c:100:17
 1e0ebb2:    20 00             	rts			  ## RF.c:102:1


bt_max_pwr_set:
 1e0ebb4:    20 fd 0f 09       	r0 = r0 & 15			  ## RF.c:55:0
 1e0ebb8:    01 fb 50 68       	r1 = 26704 <report_overlay_end+0x1648 : 6850 >			  ## RF.c:59:20
 1e0ebbc:    50 b2             	r0 |= r1			  ## RF.c:59:20
 1e0ebbe:    c1 ff b8 09 00 00 	r1 = 2488 <system_data_end : 9b8 >			  ## RF.c:59:20
 1e0ebc4:    08 52             	h[r1 + 0] = r0			  ## RF.c:59:20
 1e0ebc6:    20 00             	rts			  ## RF.c:60:1


btagc_init:
 1e0ebc8:    79 01             	[--sp] = {rets, r9-r4}			  ## btagc.c:321:0
 1e0ebca:    c8 ff 80 fd 1c 00 	r8 = 1899904 <uECC_vli_cmp_unsafe+0xC8D84 : 1cfd80 >			  ## btagc.c:321:0
 1e0ebd0:    00 f4 10 8a       	[r8 + 0] |= 4096			  ## btagc.c:233:5
 1e0ebd4:    00 f4 20 8a       	[r8 + 0] |= 8192			  ## btagc.c:234:5
 1e0ebd8:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:235:5
 1e0ebdc:    c2 ff 98 e9 e0 01 	r2 = 31517080 <anl_gain_set : 1e0e998 >			  ## btagc.c:235:5
 1e0ebe2:    03 70             	r3 = 0
 1e0ebe4:    c4 ff 78 ea e0 01 	r4 = 31517304 <anl_gain_set_h : 1e0ea78 >
 1e0ebea:    c5 ff 98 e9 e0 01 	r5 = 31517080 <anl_gain_set : 1e0e998 >
 1e0ebf0:    13 f6 18 80       	[r8 + 24] = r3			  ## btagc.c:239:20
 1e0ebf4:    06 f6 00 80       	r6 = [r8 + 0]			  ## btagc.c:239:20
 1e0ebf8:    76 b7             	r6 &= 4294950911			  ## btagc.c:239:20
 1e0ebfa:    16 f6 00 80       	[r8 + 0] = r6			  ## btagc.c:239:20
 1e0ebfe:    73 e3 07 c0       	ifs (r3 > 55) goto 14 <btagc_init+0x48 : 1e0ec10 >			  ## btagc.c:241:13
 1e0ec02:    06 4a             	r6 = [r5 + 0]			  ## btagc.c:252:26
 1e0ec04:    16 f6 1c 80       	[r8 + 28] = r6			  ## btagc.c:252:24
 1e0ec08:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:254:13
 1e0ec0c:    06 48             	r6 = [r4 + 0]			  ## btagc.c:255:26
 1e0ec0e:    1a 18             	goto 52 <btagc_init+0x7C : 1e0ec44 >			  ## btagc.c:255:26
 1e0ec10:    09 f9 01 20       	r9 = b[r2 + 1] (u)			  ## btagc.c:262:28
 1e0ec14:    07 64             	r7 = b[r2 + 0] (u)			  ## btagc.c:261:28
 1e0ec16:    21 64             	r1 = b[r2 + 2] (u)			  ## btagc.c:263:28
 1e0ec18:    36 64             	r6 = b[r2 + 3] (u)			  ## btagc.c:264:28
 1e0ec1a:    c8 fd 40 79       	r7 <= insert(r9, p:8, l:8)			  ## btagc.c:261:67
 1e0ec1e:    c8 fd 80 71       	r7 <= insert(r1, p:16, l:8)			  ## btagc.c:262:67
 1e0ec22:    c8 fd c0 76       	r7 <= insert(r6, p:24, l:8)			  ## btagc.c:263:68
 1e0ec26:    17 f6 1c 80       	[r8 + 28] = r7			  ## btagc.c:261:24
 1e0ec2a:    00 f4 40 8a       	[r8 + 0] |= 16384			  ## btagc.c:266:13
 1e0ec2e:    09 f9 05 20       	r9 = b[r2 + 5] (u)			  ## btagc.c:268:28
 1e0ec32:    46 64             	r6 = b[r2 + 4] (u)			  ## btagc.c:267:28
 1e0ec34:    67 64             	r7 = b[r2 + 6] (u)			  ## btagc.c:269:28
 1e0ec36:    71 64             	r1 = b[r2 + 7] (u)			  ## btagc.c:270:28
 1e0ec38:    c8 fd 40 69       	r6 <= insert(r9, p:8, l:8)			  ## btagc.c:267:67
 1e0ec3c:    c8 fd 80 67       	r6 <= insert(r7, p:16, l:8)			  ## btagc.c:268:67
 1e0ec40:    c8 fd c0 61       	r6 <= insert(r1, p:24, l:8)			  ## btagc.c:269:68
 1e0ec44:    16 f6 1c 80       	[r8 + 28] = r6
 1e0ec48:    82 80             	r2 += 8			  ## btagc.c:238:19
 1e0ec4a:    45 80             	r5 += 4			  ## btagc.c:238:19
 1e0ec4c:    13 80             	r3 += 1			  ## btagc.c:238:26
 1e0ec4e:    44 80             	r4 += 4			  ## btagc.c:238:19
 1e0ec50:    03 e4 ce 1f       	if (r3 != 64) goto -100 <btagc_init+0x28 : 1e0ebf0 >			  ## btagc.c:238:19
 1e0ec54:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:274:5
 1e0ec58:    f1 b6             	r1 &= 4294959103			  ## btagc.c:274:5
 1e0ec5a:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:274:5
 1e0ec5e:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:275:5
 1e0ec62:    71 b7             	r1 &= 4294950911			  ## btagc.c:275:5
 1e0ec64:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:275:5
 1e0ec68:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:276:5
 1e0ec6c:    71 b6             	r1 &= 4294963199			  ## btagc.c:276:5
 1e0ec6e:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:276:5
 1e0ec72:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:277:5
 1e0ec76:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:334:5
 1e0ec7a:    31 fd 0e 1b       	r1 = r1 & 4294049791			  ## btagc.c:334:5
 1e0ec7e:    01 fd 0a 1b       	r1 = r1 | 655360			  ## btagc.c:334:5
 1e0ec82:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:334:5
 1e0ec86:    00 f4 01 89       	[r8 + 0] |= 1			  ## btagc.c:336:5
 1e0ec8a:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:337:5
 1e0ec8e:    31 fd 1e 19       	r1 = r1 & 4294967265			  ## btagc.c:337:5
 1e0ec92:    01 fd 06 19       	r1 = r1 | 6			  ## btagc.c:337:5
 1e0ec96:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:337:5
 1e0ec9a:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:338:5
 1e0ec9e:    02 fb 3f fc       	r2 = -961 <bank_code_load_addr+0x1E5393 : 1fffc3f >			  ## btagc.c:338:5
 1e0eca2:    51 b5             	r1 &= r2			  ## btagc.c:338:5
 1e0eca4:    11 b3             	r1 |= 64			  ## btagc.c:338:5
 1e0eca6:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:338:5
 1e0ecaa:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:339:5
 1e0ecae:    20 fd 01 09       	r0 = r0 & 1			  ## btagc.c:339:5
 1e0ecb2:    71 b5             	r1 &= 4294966271			  ## btagc.c:339:5
 1e0ecb4:    c1 fd 50 10       	r1 <= insert(r0, p:10, l:1)			  ## btagc.c:339:5
 1e0ecb8:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:339:5
 1e0ecbc:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:340:5
 1e0ecc0:    f1 b5             	r1 &= 4294965247			  ## btagc.c:340:5
 1e0ecc2:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:340:5
 1e0ecc6:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:341:5
 1e0ecca:    71 b6             	r1 &= 4294963199			  ## btagc.c:341:5
 1e0eccc:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:341:5
 1e0ecd0:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:342:5
 1e0ecd4:    f1 b6             	r1 &= 4294959103			  ## btagc.c:342:5
 1e0ecd6:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:342:5
 1e0ecda:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:343:5
 1e0ecde:    71 b7             	r1 &= 4294950911			  ## btagc.c:343:5
 1e0ece0:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:343:5
 1e0ece4:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:344:5
 1e0ece8:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:345:5
 1e0ecec:    71 b8             	r1 &= 4294901759			  ## btagc.c:345:5
 1e0ecee:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:345:5
 1e0ecf2:    01 f6 00 80       	r1 = [r8 + 0]			  ## btagc.c:346:5
 1e0ecf6:    71 ba             	r1 &= 4293918719			  ## btagc.c:346:5
 1e0ecf8:    c1 fd a0 10       	r1 <= insert(r0, p:20, l:1)			  ## btagc.c:346:5
 1e0ecfc:    11 f6 00 80       	[r8 + 0] = r1			  ## btagc.c:346:5
 1e0ed00:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:347:5
 1e0ed04:    30 fd fc 06       	r0 = r0 & 4162846719			  ## btagc.c:347:5
 1e0ed08:    00 fd 70 06       	r0 = r0 | 62914560			  ## btagc.c:347:5
 1e0ed0c:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:347:5
 1e0ed10:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:348:5
 1e0ed14:    f0 bd             	r0 &= 4160749567			  ## btagc.c:348:5
 1e0ed16:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:348:5
 1e0ed1a:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:349:5
 1e0ed1e:    70 be             	r0 &= 4026531839			  ## btagc.c:349:5
 1e0ed20:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:349:5
 1e0ed24:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:351:5
 1e0ed28:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:351:5
 1e0ed2c:    00 fd 37 09       	r0 = r0 | 55			  ## btagc.c:351:5
 1e0ed30:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:351:5
 1e0ed34:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:352:5
 1e0ed38:    30 fd 3f 0a       	r0 = r0 & 4294951167			  ## btagc.c:352:5
 1e0ed3c:    00 fd 27 0a       	r0 = r0 | 9984			  ## btagc.c:352:5
 1e0ed40:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:352:5
 1e0ed44:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:353:5
 1e0ed48:    30 fd 60 02       	r0 = r0 & 4294852607			  ## btagc.c:353:5
 1e0ed4c:    00 fd 20 02       	r0 = r0 | 81920			  ## btagc.c:353:5
 1e0ed50:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:353:5
 1e0ed54:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:354:5
 1e0ed58:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## btagc.c:354:5
 1e0ed5c:    00 fd 0a 0b       	r0 = r0 | 655360			  ## btagc.c:354:5
 1e0ed60:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:354:5
 1e0ed64:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:355:5
 1e0ed68:    70 ba             	r0 &= 4293918719			  ## btagc.c:355:5
 1e0ed6a:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:355:5
 1e0ed6e:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:356:5
 1e0ed72:    30 fd 70 06       	r0 = r0 & 4232052735			  ## btagc.c:356:5
 1e0ed76:    00 fd c0 0b       	r0 = r0 | 12582912			  ## btagc.c:356:5
 1e0ed7a:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:356:5
 1e0ed7e:    00 f6 04 80       	r0 = [r8 + 4]			  ## btagc.c:357:5
 1e0ed82:    30 fd 3c 0c       	r0 = r0 & 3288334335			  ## btagc.c:357:5
 1e0ed86:    10 bd             	r0 |= 67108864			  ## btagc.c:357:5
 1e0ed88:    10 f6 04 80       	[r8 + 4] = r0			  ## btagc.c:357:5
 1e0ed8c:    01 f4 40 8c       	[r8 + 4] |= 1073741824			  ## btagc.c:358:5
 1e0ed90:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:360:5
 1e0ed94:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:360:5
 1e0ed98:    00 fd 29 09       	r0 = r0 | 41			  ## btagc.c:360:5
 1e0ed9c:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:360:5
 1e0eda0:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:361:5
 1e0eda4:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:361:5
 1e0eda8:    00 fd 24 00       	r0 = r0 | 2624			  ## btagc.c:361:5
 1e0edac:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:361:5
 1e0edb0:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:362:5
 1e0edb4:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:362:5
 1e0edb8:    00 fd a4 02       	r0 = r0 | 167936			  ## btagc.c:362:5
 1e0edbc:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:362:5
 1e0edc0:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:363:5
 1e0edc4:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:363:5
 1e0edc8:    00 fd ac 0b       	r0 = r0 | 11272192			  ## btagc.c:363:5
 1e0edcc:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:363:5
 1e0edd0:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:364:5
 1e0edd4:    30 fd 3f 0c       	r0 = r0 & 3238002687			  ## btagc.c:364:5
 1e0edd8:    00 fd 2d 0c       	r0 = r0 | 754974720			  ## btagc.c:364:5
 1e0eddc:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:364:5
 1e0ede0:    00 f6 08 80       	r0 = [r8 + 8]			  ## btagc.c:365:5
 1e0ede4:    30 fd c0 0c       	r0 = r0 & 1073741823			  ## btagc.c:365:5
 1e0ede8:    10 f6 08 80       	[r8 + 8] = r0			  ## btagc.c:365:5
 1e0edec:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:367:5
 1e0edf0:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## btagc.c:367:5
 1e0edf4:    00 fd 2f 09       	r0 = r0 | 47			  ## btagc.c:367:5
 1e0edf8:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:367:5
 1e0edfc:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:368:5
 1e0ee00:    30 fd 7c 00       	r0 = r0 & 4294963263			  ## btagc.c:368:5
 1e0ee04:    00 fd 5c 00       	r0 = r0 | 3520			  ## btagc.c:368:5
 1e0ee08:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:368:5
 1e0ee0c:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:369:5
 1e0ee10:    30 fd fc 02       	r0 = r0 & 4294709247			  ## btagc.c:369:5
 1e0ee14:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:369:5
 1e0ee18:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:370:5
 1e0ee1c:    30 fd fc 0b       	r0 = r0 & 4278452223			  ## btagc.c:370:5
 1e0ee20:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:370:5
 1e0ee24:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:371:5
 1e0ee28:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## btagc.c:371:5
 1e0ee2c:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:371:5
 1e0ee30:    00 f6 0c 80       	r0 = [r8 + 12]			  ## btagc.c:372:5
 1e0ee34:    30 fd fc 0c       	r0 = r0 & 67108863			  ## btagc.c:372:5
 1e0ee38:    10 f6 0c 80       	[r8 + 12] = r0			  ## btagc.c:372:5
 1e0ee3c:    00 f6 00 80       	r0 = [r8 + 0]			  ## btagc.c:374:5
 1e0ee40:    f0 b7             	r0 &= 4294934527			  ## btagc.c:374:5
 1e0ee42:    10 f6 00 80       	[r8 + 0] = r0			  ## btagc.c:374:5
 1e0ee46:    00 f4 80 8a       	[r8 + 0] |= 32768			  ## btagc.c:375:5
 1e0ee4a:    59 01             	{pc, r9-r4} = [sp++]			  ## btagc.c:376:1


bt_enter_deepsleep:
 1e0ee4c:    74 01             	[--sp] = {rets, r4}			  ## RF.c:529:0
 1e0ee4e:    c0 ff b8 09 00 00 	r0 = 2488 <system_data_end : 9b8 >			  ## RF.c:530:12
 1e0ee54:    90 60             	r0 = b[r0 + 9] (u)			  ## RF.c:530:12
 1e0ee56:    3e 20             	if (r0 == 0) goto 124 <bt_enter_deepsleep+0x88 : 1e0eed4 >			  ## RF.c:530:12
 1e0ee58:    00 fb fc 03       	r0 = 1020 <BTCTLER_LE_RAM_TOTAL+0x1E : 3fc >			  ## RF.c:534:25
 1e0ee5c:    bf f3 00 dc       	call -18432 <malloc : 1e0a660 >			  ## RF.c:534:25
 1e0ee60:    04 08             	r4 = r0			  ## RF.c:534:25
 1e0ee62:    c0 ff 60 29 00 00 	r0 = 10592 <rf_pwr_off_info_p : 2960 >			  ## RF.c:534:23
 1e0ee68:    0c 40             	[r0 + 0] = r4			  ## RF.c:534:23
 1e0ee6a:    02 38             	if (r4 != 0) goto 4 <bt_enter_deepsleep+0x24 : 1e0ee70 >			  ## RF.c:534:23
 1e0ee6c:    8f f3 48 a2       	call 2049168 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0ee70:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## RF.c:537:5
 1e0ee76:    02 7a             	r2 = 160			  ## RF.c:537:5
 1e0ee78:    40 08             	r0 = r4			  ## RF.c:537:5
 1e0ee7a:    97 f3 33 c0       	call 3113062 <memcpy : 106ee4 >			  ## RF.c:537:5
 1e0ee7e:    40 fc a0 00       	r0 = r4 + 160			  ## RF.c:539:37
 1e0ee82:    20 fb 1c 1b       	r1 = 1835008			  ## RF.c:539:5
 1e0ee86:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:539:5
 1e0ee8a:    97 f3 2b c0       	call 3113046 <memcpy : 106ee4 >			  ## RF.c:539:5
 1e0ee8e:    40 fc e0 01       	r0 = r4 + 480			  ## RF.c:541:37
 1e0ee92:    c1 ff 00 fc 1c 00 	r1 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:541:5
 1e0ee98:    02 fb 10 02       	r2 = 528 <BTCTLER_CL_RAM_TOTAL+0x2C : 210 >			  ## RF.c:541:5
 1e0ee9c:    97 f3 22 c0       	call 3113028 <memcpy : 106ee4 >			  ## RF.c:541:5
 1e0eea0:    c0 ff b4 00 1c 00 	r0 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## RF.c:541:5
 1e0eea6:    21 40             	r1 = [r0 + 8]			  ## RF.c:543:44
 1e0eea8:    42 fc f0 03       	r2 = r4 + 1008			  ## RF.c:543:44
 1e0eeac:    09 44             	[r2 + 0] = r1			  ## RF.c:543:42
 1e0eeae:    01 40             	r1 = [r0 + 0]			  ## RF.c:544:45
 1e0eeb0:    19 44             	[r2 + 4] = r1			  ## RF.c:544:43
 1e0eeb2:    10 40             	r0 = [r0 + 4]			  ## RF.c:545:45
 1e0eeb4:    28 44             	[r2 + 8] = r0			  ## RF.c:545:43
 1e0eeb6:    00 fb 60 01       	r0 = 352 <DRIVER_RAM_TOTAL+0x6E : 160 >			  ## RF.c:550:29
 1e0eeba:    bf f3 d1 db       	call -18526 <malloc : 1e0a660 >			  ## RF.c:550:29
 1e0eebe:    02 08             	r2 = r0			  ## RF.c:550:29
 1e0eec0:    c0 ff 64 29 00 00 	r0 = 10596 <ble_pwr_off_store : 2964 >			  ## RF.c:550:27
 1e0eec6:    0a 40             	[r0 + 0] = r2			  ## RF.c:550:27
 1e0eec8:    02 34             	if (r2 != 0) goto 4 <bt_enter_deepsleep+0x82 : 1e0eece >			  ## RF.c:550:27
 1e0eeca:    8f f3 19 a2       	call 2049074 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e0eece:    20 08             	r0 = r2			  ## RF.c:553:9
 1e0eed0:    80 f3 1c 14       	call 10296 <ble_enter_deepsleep : 1e1170c >			  ## RF.c:553:9
 1e0eed4:    54 01             	{pc, r4} = [sp++]			  ## RF.c:555:1


bt_exit_deepsleep:
 1e0eed6:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:558:0
 1e0eed8:    c1 ff b8 09 00 00 	r1 = 2488 <system_data_end : 9b8 >			  ## RF.c:558:0
 1e0eede:    90 62             	r0 = b[r1 + 9] (u)			  ## RF.c:559:12
 1e0eee0:    7d 20             	if (r0 == 0) goto 250 <bt_exit_deepsleep+0x106 : 1e0efdc >			  ## RF.c:559:12
 1e0eee2:    10 70             	r0 = 1			  ## RF.c:569:21
 1e0eee4:    c2 ff 00 21 1f 00 	r2 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:569:21
 1e0eeea:    10 f6 00 21       	[r2 + 256] = r0			  ## RF.c:569:21
 1e0eeee:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:569:21
 1e0eef4:    03 40             	r3 = [r0 + 0]			  ## RF.c:572:5
 1e0eef6:    33 fd c0 3a       	r3 = r3 & 4294918143			  ## RF.c:572:5
 1e0eefa:    13 b7             	r3 |= 16384			  ## RF.c:572:5
 1e0eefc:    0b 40             	[r0 + 0] = r3			  ## RF.c:572:5
 1e0eefe:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:574:11
 1e0ef00:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:574:24
 1e0ef04:    8f f3 26 ae       	call 2055244 <delay : 4b54 >			  ## RF.c:574:5
 1e0ef08:    00 f4 80 29       	[r2 + 0] |= 128			  ## RF.c:575:5
 1e0ef0c:    00 44             	r0 = [r2 + 0]			  ## RF.c:576:5
 1e0ef0e:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:576:5
 1e0ef12:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:576:5
 1e0ef16:    08 44             	[r2 + 0] = r0			  ## RF.c:576:5
 1e0ef18:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:578:11
 1e0ef1a:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:578:24
 1e0ef1e:    8f f3 19 ae       	call 2055218 <delay : 4b54 >			  ## RF.c:578:5
 1e0ef22:    00 44             	r0 = [r2 + 0]			  ## RF.c:579:5
 1e0ef24:    70 b0             	r0 &= 4294967294			  ## RF.c:579:5
 1e0ef26:    08 44             	[r2 + 0] = r0			  ## RF.c:579:5
 1e0ef28:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:580:11
 1e0ef2a:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:580:24
 1e0ef2e:    8f f3 11 ae       	call 2055202 <delay : 4b54 >			  ## RF.c:580:5
 1e0ef32:    00 f4 01 29       	[r2 + 0] |= 1			  ## RF.c:581:5
 1e0ef36:    60 62             	r0 = b[r1 + 6] (u)			  ## RF.c:583:11
 1e0ef38:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:583:24
 1e0ef3c:    8f f3 0a ae       	call 2055188 <delay : 4b54 >			  ## RF.c:583:5
 1e0ef40:    c0 ff 7c fc 1c 00 	r0 = 1899644 <uECC_vli_cmp_unsafe+0xC8C80 : 1cfc7c >			  ## RF.c:584:5
 1e0ef46:    00 f4 40 09       	[r0 + 0] |= 64			  ## RF.c:584:5
 1e0ef4a:    c4 ff 20 01 1c 00 	r4 = 1835296 <uECC_vli_cmp_unsafe+0xB9124 : 1c0120 >			  ## RF.c:584:5
 1e0ef50:    03 f4 01 49       	[r4 + 12] |= 1			  ## RF.c:586:22
 1e0ef54:    c5 ff 60 29 00 00 	r5 = 10592 <rf_pwr_off_info_p : 2960 >
 1e0ef5a:    00 4a             	r0 = [r5 + 0]
 1e0ef5c:    01 70             	r1 = 0
 1e0ef5e:    c2 ff 00 19 1e 00 	r2 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e0ef64:    33 fd 01 19       	r3 = r1 & 4294967294			  ## RF.c:593:22
 1e0ef68:    83 e0 02 00       	if (r3 == 8) goto 4 <bt_exit_deepsleep+0x9A : 1e0ef70 >			  ## RF.c:593:22
 1e0ef6c:    03 40             	r3 = [r0 + 0]			  ## RF.c:594:34
 1e0ef6e:    0b 44             	[r2 + 0] = r3			  ## RF.c:594:32
 1e0ef70:    40 80             	r0 += 4			  ## RF.c:592:19
 1e0ef72:    11 80             	r1 += 1			  ## RF.c:592:62
 1e0ef74:    42 80             	r2 += 4			  ## RF.c:592:19
 1e0ef76:    81 e2 f5 1f       	if (r1 != 40) goto -22 <bt_exit_deepsleep+0x8E : 1e0ef64 >			  ## RF.c:592:19
 1e0ef7a:    06 4a             	r6 = [r5 + 0]			  ## RF.c:601:41
 1e0ef7c:    61 fc a0 00       	r1 = r6 + 160			  ## RF.c:601:5
 1e0ef80:    20 fb 1c 0b       	r0 = 1835008			  ## RF.c:601:5
 1e0ef84:    02 fb 40 01       	r2 = 320 <DRIVER_RAM_TOTAL+0x4E : 140 >			  ## RF.c:601:5
 1e0ef88:    97 f3 ac bf       	call 3112792 <memcpy : 106ee4 >			  ## RF.c:601:5
 1e0ef8c:    60 fc e0 01       	r0 = r6 + 480			  ## RF.c:603:5
 1e0ef90:    01 fb d5 ff       	r1 = -43 <bank_code_load_addr+0x1E5729 : 1ffffd5 >			  ## RF.c:603:5
 1e0ef94:    c2 ff 00 fc 1c 00 	r2 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:603:5
 1e0ef9a:    21 e0 02 30       	if (r1 < 2) goto 4 <bt_exit_deepsleep+0xCC : 1e0efa2 >
 1e0ef9e:    03 40             	r3 = [r0 + 0]			  ## RF.c:606:65
 1e0efa0:    0b 44             	[r2 + 0] = r3			  ## RF.c:606:63
 1e0efa2:    40 80             	r0 += 4			  ## RF.c:603:19
 1e0efa4:    11 80             	r1 += 1			  ## RF.c:603:19
 1e0efa6:    42 80             	r2 += 4			  ## RF.c:603:19
 1e0efa8:    91 e5 f7 1f       	if (r1 != 89) goto -18 <bt_exit_deepsleep+0xC4 : 1e0ef9a >			  ## RF.c:603:19
 1e0efac:    00 4a             	r0 = [r5 + 0]			  ## RF.c:611:23
 1e0efae:    01 fc f0 03       	r1 = r0 + 1008			  ## RF.c:611:23
 1e0efb2:    12 42             	r2 = [r1 + 4]			  ## RF.c:611:42
 1e0efb4:    0a 48             	[r4 + 0] = r2			  ## RF.c:611:21
 1e0efb6:    22 42             	r2 = [r1 + 8]			  ## RF.c:612:42
 1e0efb8:    1a 48             	[r4 + 4] = r2			  ## RF.c:612:21
 1e0efba:    01 42             	r1 = [r1 + 0]			  ## RF.c:613:44
 1e0efbc:    29 48             	[r4 + 8] = r1			  ## RF.c:613:23
 1e0efbe:    01 f4 80 4a       	[r4 + 4] |= 32768			  ## RF.c:615:21
 1e0efc2:    02 f4 80 4a       	[r4 + 8] |= 32768			  ## RF.c:616:23
 1e0efc6:    bf f3 5e db       	call -18756 <free : 1e0a686 >			  ## RF.c:625:5
 1e0efca:    c4 ff 64 29 00 00 	r4 = 10596 <ble_pwr_off_store : 2964 >			  ## RF.c:631:28
 1e0efd0:    00 48             	r0 = [r4 + 0]			  ## RF.c:631:28
 1e0efd2:    80 f3 bc 13       	call 10104 <ble_exit_deepsleep : 1e1174e >			  ## RF.c:631:9
 1e0efd6:    00 48             	r0 = [r4 + 0]			  ## RF.c:633:14
 1e0efd8:    bf f3 55 db       	call -18774 <free : 1e0a686 >			  ## RF.c:633:9
 1e0efdc:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:635:1


bt_analog_part_init:
 1e0efde:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1811:0
 1e0efe4:    15 f4 10 0a       	[r0 + 84] |= 4096			  ## analog.c:1817:23
 1e0efe8:    51 41             	r1 = [r0 + 84]			  ## analog.c:1818:23
 1e0efea:    f1 b5             	r1 &= 4294965247			  ## analog.c:1818:23
 1e0efec:    59 41             	[r0 + 84] = r1			  ## analog.c:1818:23
 1e0efee:    51 41             	r1 = [r0 + 84]			  ## analog.c:1819:23
 1e0eff0:    f1 b6             	r1 &= 4294959103			  ## analog.c:1819:23
 1e0eff2:    59 41             	[r0 + 84] = r1			  ## analog.c:1819:23
 1e0eff4:    15 f4 40 0a       	[r0 + 84] |= 16384			  ## analog.c:1820:23
 1e0eff8:    15 f4 80 09       	[r0 + 84] |= 128			  ## analog.c:1824:23
 1e0effc:    c1 ff e5 83 80 48 	r1 = 1216381925 <uECC_vli_cmp_unsafe+0x7013E9 : 8083e5 >			  ## analog.c:1826:22
 1e0f002:    09 40             	[r0 + 0] = r1			  ## analog.c:1826:22
 1e0f004:    c1 ff 16 80 1c 04 	r1 = 68976662 <uECC_vli_cmp_unsafe+0xC101A : 1c8016 >			  ## analog.c:1842:22
 1e0f00a:    19 40             	[r0 + 4] = r1			  ## analog.c:1842:22
 1e0f00c:    c1 ff d8 85 00 00 	r1 = 34264 <BTCTLER_CODE_TOTAL+0x4C4 : 85d8 >			  ## analog.c:1857:22
 1e0f012:    29 40             	[r0 + 8] = r1			  ## analog.c:1857:22
 1e0f014:    c1 ff 00 3e 88 00 	r1 = 8928768 <uECC_vli_cmp_unsafe+0x77CE04 : 883e00 >			  ## analog.c:1869:22
 1e0f01a:    39 40             	[r0 + 12] = r1			  ## analog.c:1869:22
 1e0f01c:    c1 ff 62 2e 40 01 	r1 = 20983394 <uECC_vli_cmp_unsafe+0x12FBE66 : 1402e62 >			  ## analog.c:1880:22
 1e0f022:    49 40             	[r0 + 16] = r1			  ## analog.c:1880:22
 1e0f024:    01 40             	r1 = [r0 + 0]			  ## analog.c:1880:22
 1e0f026:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1E4F93 : 1fff83f >			  ## analog.c:1880:22
 1e0f02a:    51 b5             	r1 &= r2			  ## analog.c:1880:22
 1e0f02c:    09 40             	[r0 + 0] = r1			  ## analog.c:1880:22
 1e0f02e:    11 40             	r1 = [r0 + 4]			  ## analog.c:1880:22
 1e0f030:    c2 ff ff 0f c7 ff 	r2 = 4291235839 <uECC_vli_cmp_unsafe+0x1B6A003 : 1c70fff >			  ## analog.c:1880:22
 1e0f036:    51 b5             	r1 &= r2			  ## analog.c:1880:22
 1e0f038:    19 40             	[r0 + 4] = r1			  ## analog.c:1880:22
 1e0f03a:    01 40             	r1 = [r0 + 0]			  ## analog.c:1880:22
 1e0f03c:    02 fb 40 03       	r2 = 832 <BTCTLER_LE_CONTROLLER_BSS_SIZE+0x34 : 340 >			  ## analog.c:1880:22
 1e0f040:    51 b4             	r1 |= r2			  ## analog.c:1880:22
 1e0f042:    09 40             	[r0 + 0] = r1			  ## analog.c:1880:22
 1e0f044:    01 f4 44 04       	[r0 + 4] |= 1605632			  ## analog.c:1880:22
 1e0f048:    c1 ff 18 05 d0 00 	r1 = 13632792 <uECC_vli_cmp_unsafe+0xBF951C : d00518 >			  ## analog.c:1902:23
 1e0f04e:    59 40             	[r0 + 20] = r1			  ## analog.c:1902:23
 1e0f050:    c1 ff 5a d3 e6 ff 	r1 = 4293317466 <bank_code_load_addr+0x52AAE : 1e6d35a >			  ## analog.c:1925:22
 1e0f056:    69 40             	[r0 + 24] = r1			  ## analog.c:1925:22
 1e0f058:    c7 f4 0f 09       	[r0 + 28] = 15			  ## analog.c:1937:22
 1e0f05c:    81 40             	r1 = [r0 + 32]			  ## analog.c:1951:22
 1e0f05e:    31 fd 7f 13       	r1 = r1 & 4294445055			  ## analog.c:1951:22
 1e0f062:    89 40             	[r0 + 32] = r1			  ## analog.c:1951:22
 1e0f064:    08 f4 2a 03       	[r0 + 32] |= 348160			  ## analog.c:1954:22
 1e0f068:    c1 ff df 06 a9 02 	r1 = 44631775 <uECC_vli_cmp_unsafe+0x9896E3 : a906df >			  ## analog.c:1958:23
 1e0f06e:    a9 40             	[r0 + 40] = r1			  ## analog.c:1958:23
 1e0f070:    c1 ff 01 b4 06 42 	r1 = 1107735553 <text_size+0x53221 : 6b401 >			  ## analog.c:1978:23
 1e0f076:    b9 40             	[r0 + 44] = r1			  ## analog.c:1978:23
 1e0f078:    01 fc 0c 2e       	r1 = r0 + 11788
 1e0f07c:    00 f4 20 19       	[r1 + 0] |= 32			  ## analog.c:1796:9
 1e0f080:    02 42             	r2 = [r1 + 0]			  ## analog.c:1797:9
 1e0f082:    03 fb 3f fe       	r3 = -449 <bank_code_load_addr+0x1E5593 : 1fffe3f >			  ## analog.c:1797:9
 1e0f086:    52 b7             	r2 &= r3			  ## analog.c:1797:9
 1e0f088:    12 b4             	r2 |= 256			  ## analog.c:1797:9
 1e0f08a:    0a 42             	[r1 + 0] = r2			  ## analog.c:1797:9
 1e0f08c:    04 f4 01 0a       	[r0 + 16] |= 256			  ## analog.c:1798:26
 1e0f090:    04 f4 02 0c       	[r0 + 16] |= 33554432			  ## analog.c:1799:26
 1e0f094:    41 40             	r1 = [r0 + 16]			  ## analog.c:1800:26
 1e0f096:    f1 b4             	r1 &= 4294966783			  ## analog.c:1800:26
 1e0f098:    49 40             	[r0 + 16] = r1			  ## analog.c:1800:26
 1e0f09a:    20 00             	rts			  ## analog.c:1997:1


get_bta_pll_bank:
 1e0f09c:    74 01             	[--sp] = {rets, r4}			  ## analog.c:301:0
 1e0f09e:    01 70             	r1 = 0			  ## analog.c:301:0
 1e0f0a0:    43 71             	r3 = 20			  ## analog.c:301:0
 1e0f0a2:    c2 ff b8 09 00 00 	r2 = 2488 <system_data_end : 9b8 >			  ## analog.c:301:0
 1e0f0a8:    04 fa 00 32       	r4 = b[r3+r2] (u)			  ## analog.c:305:24
 1e0f0ac:    04 f2 08 80       	if (r4 > r0) goto 16 <get_bta_pll_bank+0x24 : 1e0f0c0 >			  ## analog.c:305:24
 1e0f0b0:    34 fc ee ff       	r4 = r3 + -18			  ## analog.c:304:19
 1e0f0b4:    13 80             	r3 += 1			  ## analog.c:304:19
 1e0f0b6:    11 80             	r1 += 1			  ## analog.c:304:19
 1e0f0b8:    f4 e1 f6 3f       	if (r4 < 31) goto -20 <get_bta_pll_bank+0xC : 1e0f0a8 >			  ## analog.c:304:19
 1e0f0bc:    00 70             	r0 = 0
 1e0f0be:    03 18             	goto 6 <get_bta_pll_bank+0x2A : 1e0f0c6 >
 1e0f0c0:    00 f9 32 20       	r0 = b[r2 + 50] (u)			  ## analog.c:297:12
 1e0f0c4:    60 b0             	r0 = r0 - r1			  ## analog.c:306:13
 1e0f0c6:    00 04             	r0 = r0.b0 (u)			  ## analog.c:311:1
 1e0f0c8:    54 01             	{pc, r4} = [sp++]			  ## analog.c:311:1


bt_fre_offset_value_init:
 1e0f0ca:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:211:0
 1e0f0cc:    fc 0b             	sp += -8			  ## analog.c:211:0
 1e0f0ce:    c4 ff b8 09 00 00 	r4 = 2488 <system_data_end : 9b8 >			  ## analog.c:211:0
 1e0f0d4:    00 70             	r0 = 0			  ## analog.c:211:0
 1e0f0d6:    58 58             	h[r4 + 10] = r0			  ## analog.c:213:19
 1e0f0d8:    c8 68             	b[r4 + 12] = r0			  ## analog.c:214:24
 1e0f0da:    01 a0             	r1 = sp + 0			  ## analog.c:214:24
 1e0f0dc:    e0 76             	r0 = 110			  ## analog.c:218:11
 1e0f0de:    62 70             	r2 = 6			  ## analog.c:218:11
 1e0f0e0:    bf f3 33 eb       	call -10650 <syscfg_read : 1e0c74a >			  ## analog.c:218:11
 1e0f0e4:    00 04             	r0 = r0.b0 (u)			  ## analog.c:219:10
 1e0f0e6:    60 e0 1b 10       	if (r0 != 6) goto 54 <bt_fre_offset_value_init+0x56 : 1e0f120 >			  ## analog.c:219:10
 1e0f0ea:    85 f5 00 00       	r5 = h[sp] (u)			  ## analog.c:219:28
 1e0f0ee:    00 a0             	r0 = sp + 0			  ## analog.c:219:28
 1e0f0f0:    90 b0             	r0 |= 2			  ## analog.c:219:52
 1e0f0f2:    41 70             	r1 = 4			  ## analog.c:219:35
 1e0f0f4:    bf f3 62 8c       	call -59196 <CRC16 : 1e009bc >			  ## analog.c:219:35
 1e0f0f8:    05 f2 12 10       	if (r5 != r0) goto 36 <bt_fre_offset_value_init+0x56 : 1e0f120 >			  ## analog.c:219:35
 1e0f0fc:    80 f5 04 00       	r0 = h[sp+4] (u)			  ## analog.c:220:29
 1e0f100:    81 f5 02 00       	r1 = h[sp+2] (u)			  ## analog.c:220:29
 1e0f104:    d0 fd 80 10       	r1 <= insert(r0, p:16, l:16)			  ## analog.c:220:29
 1e0f108:    59 58             	h[r4 + 10] = r1			  ## analog.c:220:23
 1e0f10a:    10 70             	r0 = 1			  ## analog.c:221:28
 1e0f10c:    09 c4             	r1 = r1 << 16			  ## analog.c:222:14
 1e0f10e:    41 fb c8 1b       	r1 = r1 + 13107200			  ## analog.c:222:35
 1e0f112:    42 fb c8 05       	r2 = r0 + 26214400			  ## analog.c:222:35
 1e0f116:    c8 68             	b[r4 + 12] = r0			  ## analog.c:221:28
 1e0f118:    21 f2 02 30       	if (r1 < r2) goto 4 <bt_fre_offset_value_init+0x56 : 1e0f120 >			  ## analog.c:221:28
 1e0f11c:    00 70             	r0 = 0			  ## analog.c:223:27
 1e0f11e:    58 58             	h[r4 + 10] = r0			  ## analog.c:223:27
 1e0f120:    04 0a             	sp += 8
 1e0f122:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:229:1


reset_trim_info:
 1e0f124:    75 01             	[--sp] = {rets, r5, r4}			  ## analog.c:77:0
 1e0f126:    c0 ff 08 fc 1c 00 	r0 = 1899528 <uECC_vli_cmp_unsafe+0xC8C0C : 1cfc08 >			  ## analog.c:77:0
 1e0f12c:    01 40             	r1 = [r0 + 0]			  ## analog.c:86:17
 1e0f12e:    02 fb 00 fc       	r2 = -1024 <bank_code_load_addr+0x1E5354 : 1fffc00 >			  ## analog.c:86:17
 1e0f132:    51 b5             	r1 &= r2			  ## analog.c:86:17
 1e0f134:    09 40             	[r0 + 0] = r1			  ## analog.c:86:17
 1e0f136:    c1 ff 3c 29 00 00 	r1 = 10556 <tws_bulk_pool_end : 293c >			  ## analog.c:109:21
 1e0f13c:    12 62             	r2 = b[r1 + 1] (u)			  ## analog.c:87:20
 1e0f13e:    03 62             	r3 = b[r1 + 0] (u)			  ## analog.c:87:20
 1e0f140:    04 40             	r4 = [r0 + 0]			  ## analog.c:87:17
 1e0f142:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:87:20
 1e0f146:    02 fb ff 03       	r2 = 1023 <BTCTLER_LE_RAM_TOTAL+0x21 : 3ff >			  ## analog.c:87:20
 1e0f14a:    53 b5             	r3 &= r2			  ## analog.c:87:20
 1e0f14c:    53 b8             	r3 |= r4			  ## analog.c:87:17
 1e0f14e:    0b 40             	[r0 + 0] = r3			  ## analog.c:87:17
 1e0f150:    03 40             	r3 = [r0 + 0]			  ## analog.c:88:17
 1e0f152:    c4 ff ff 03 f0 ff 	r4 = 4293919743 <bank_code_load_addr+0xE5B53 : 1f003ff >			  ## analog.c:88:17
 1e0f158:    53 b9             	r3 &= r4			  ## analog.c:88:17
 1e0f15a:    0b 40             	[r0 + 0] = r3			  ## analog.c:88:17
 1e0f15c:    33 62             	r3 = b[r1 + 3] (u)			  ## analog.c:89:20
 1e0f15e:    24 62             	r4 = b[r1 + 2] (u)			  ## analog.c:89:20
 1e0f160:    05 40             	r5 = [r0 + 0]			  ## analog.c:89:17
 1e0f162:    c8 fd 40 43       	r4 <= insert(r3, p:8, l:8)			  ## analog.c:89:20
 1e0f166:    52 b9             	r2 &= r4			  ## analog.c:89:20
 1e0f168:    92 c2             	r2 = r2 << 10			  ## analog.c:89:20
 1e0f16a:    52 ba             	r2 |= r5			  ## analog.c:89:17
 1e0f16c:    0a 40             	[r0 + 0] = r2			  ## analog.c:89:17
 1e0f16e:    22 40             	r2 = [r0 + 8]			  ## analog.c:92:17
 1e0f170:    32 fd ff 29       	r2 = r2 & 4294967040			  ## analog.c:92:17
 1e0f174:    2a 40             	[r0 + 8] = r2			  ## analog.c:92:17
 1e0f176:    42 62             	r2 = b[r1 + 4] (u)			  ## analog.c:93:21
 1e0f178:    23 40             	r3 = [r0 + 8]			  ## analog.c:93:17
 1e0f17a:    52 b6             	r2 |= r3			  ## analog.c:93:17
 1e0f17c:    2a 40             	[r0 + 8] = r2			  ## analog.c:93:17
 1e0f17e:    22 40             	r2 = [r0 + 8]			  ## analog.c:94:17
 1e0f180:    32 fd ff 2a       	r2 = r2 & 4294902015			  ## analog.c:94:17
 1e0f184:    2a 40             	[r0 + 8] = r2			  ## analog.c:94:17
 1e0f186:    72 62             	r2 = b[r1 + 7] (u)			  ## analog.c:95:21
 1e0f188:    63 62             	r3 = b[r1 + 6] (u)			  ## analog.c:95:21
 1e0f18a:    24 40             	r4 = [r0 + 8]			  ## analog.c:95:17
 1e0f18c:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## analog.c:95:21
 1e0f190:    1a c2             	r2 = r3 << 8			  ## analog.c:95:21
 1e0f192:    a2 04             	r2 = r2.l (u)			  ## analog.c:95:21
 1e0f194:    52 b8             	r2 |= r4			  ## analog.c:95:17
 1e0f196:    2a 40             	[r0 + 8] = r2			  ## analog.c:95:17
 1e0f198:    22 40             	r2 = [r0 + 8]			  ## analog.c:96:17
 1e0f19a:    32 fd ff 2b       	r2 = r2 & 4278255615			  ## analog.c:96:17
 1e0f19e:    2a 40             	[r0 + 8] = r2			  ## analog.c:96:17
 1e0f1a0:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:97:21
 1e0f1a2:    23 40             	r3 = [r0 + 8]			  ## analog.c:97:17
 1e0f1a4:    12 c4             	r2 = r2 << 16			  ## analog.c:97:21
 1e0f1a6:    52 b6             	r2 |= r3			  ## analog.c:97:17
 1e0f1a8:    2a 40             	[r0 + 8] = r2			  ## analog.c:97:17
 1e0f1aa:    c2 ff 08 19 1e 00 	r2 = 1972488 <uECC_vli_cmp_unsafe+0xDA90C : 1e1908 >			  ## analog.c:97:17
 1e0f1b0:    03 44             	r3 = [r2 + 0]			  ## analog.c:100:22
 1e0f1b2:    33 fd ff 35       	r3 = r3 & 4261543935			  ## analog.c:100:22
 1e0f1b6:    0b 44             	[r2 + 0] = r3			  ## analog.c:100:22
 1e0f1b8:    e3 62             	r3 = b[r1 + 14] (u)			  ## analog.c:101:25
 1e0f1ba:    04 44             	r4 = [r2 + 0]			  ## analog.c:101:22
 1e0f1bc:    5b c4             	r3 = r3 << 17			  ## analog.c:101:25
 1e0f1be:    53 b8             	r3 |= r4			  ## analog.c:101:22
 1e0f1c0:    0b 44             	[r2 + 0] = r3			  ## analog.c:101:22
 1e0f1c2:    13 44             	r3 = [r2 + 4]			  ## analog.c:102:22
 1e0f1c4:    33 fd ff 39       	r3 = r3 & 4294967040			  ## analog.c:102:22
 1e0f1c8:    1b 44             	[r2 + 4] = r3			  ## analog.c:102:22
 1e0f1ca:    03 63             	r3 = b[r1 + 16] (u)			  ## analog.c:103:25
 1e0f1cc:    14 44             	r4 = [r2 + 4]			  ## analog.c:103:22
 1e0f1ce:    53 b8             	r3 |= r4			  ## analog.c:103:22
 1e0f1d0:    1b 44             	[r2 + 4] = r3			  ## analog.c:103:22
 1e0f1d2:    32 40             	r2 = [r0 + 12]			  ## analog.c:106:17
 1e0f1d4:    03 fb 00 fe       	r3 = -512 <bank_code_load_addr+0x1E5554 : 1fffe00 >			  ## analog.c:106:17
 1e0f1d8:    52 b7             	r2 &= r3			  ## analog.c:106:17
 1e0f1da:    3a 40             	[r0 + 12] = r2			  ## analog.c:106:17
 1e0f1dc:    32 63             	r2 = b[r1 + 19] (u)			  ## analog.c:107:21
 1e0f1de:    23 63             	r3 = b[r1 + 18] (u)			  ## analog.c:107:21
 1e0f1e0:    34 40             	r4 = [r0 + 12]			  ## analog.c:107:17
 1e0f1e2:    c8 fd 40 32       	r3 <= insert(r2, p:8, l:8)			  ## analog.c:107:21
 1e0f1e6:    02 fb ff 01       	r2 = 511 <BTCTLER_CL_RAM_TOTAL+0x1B : 1ff >			  ## analog.c:107:21
 1e0f1ea:    53 b5             	r3 &= r2			  ## analog.c:107:21
 1e0f1ec:    53 b8             	r3 |= r4			  ## analog.c:107:17
 1e0f1ee:    3b 40             	[r0 + 12] = r3			  ## analog.c:107:17
 1e0f1f0:    33 40             	r3 = [r0 + 12]			  ## analog.c:108:17
 1e0f1f2:    c4 ff ff 01 fc ff 	r4 = 4294705663 <bank_code_load_addr+0x1A5953 : 1fc01ff >			  ## analog.c:108:17
 1e0f1f8:    53 b9             	r3 &= r4			  ## analog.c:108:17
 1e0f1fa:    3b 40             	[r0 + 12] = r3			  ## analog.c:108:17
 1e0f1fc:    53 63             	r3 = b[r1 + 21] (u)			  ## analog.c:109:21
 1e0f1fe:    41 63             	r1 = b[r1 + 20] (u)			  ## analog.c:109:21
 1e0f200:    34 40             	r4 = [r0 + 12]			  ## analog.c:109:17
 1e0f202:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## analog.c:109:21
 1e0f206:    51 b5             	r1 &= r2			  ## analog.c:109:21
 1e0f208:    49 c2             	r1 = r1 << 9			  ## analog.c:109:21
 1e0f20a:    51 b8             	r1 |= r4			  ## analog.c:109:17
 1e0f20c:    39 40             	[r0 + 12] = r1			  ## analog.c:109:17
 1e0f20e:    55 01             	{pc, r5, r4} = [sp++]			  ## analog.c:110:1


txtrim_analog_init:
 1e0f210:    34 00             	[--sp] = rets			  ## analog.c:1060:0
 1e0f212:    e5 16             	call -566 <bt_analog_part_init : 1e0efde >			  ## analog.c:1061:5
 1e0f214:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1061:5
 1e0f21a:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:1063:22
 1e0f21e:    11 40             	r1 = [r0 + 4]			  ## analog.c:1066:22
 1e0f220:    f1 b5             	r1 &= 4294965247			  ## analog.c:1066:22
 1e0f222:    19 40             	[r0 + 4] = r1			  ## analog.c:1066:22
 1e0f224:    21 40             	r1 = [r0 + 8]			  ## analog.c:1067:22
 1e0f226:    71 b0             	r1 &= 4294967294			  ## analog.c:1067:22
 1e0f228:    29 40             	[r0 + 8] = r1			  ## analog.c:1067:22
 1e0f22a:    21 40             	r1 = [r0 + 8]			  ## analog.c:1068:22
 1e0f22c:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1E5593 : 1fffe3f >			  ## analog.c:1068:22
 1e0f230:    51 b5             	r1 &= r2			  ## analog.c:1068:22
 1e0f232:    29 40             	[r0 + 8] = r1			  ## analog.c:1068:22
 1e0f234:    21 40             	r1 = [r0 + 8]			  ## analog.c:1069:22
 1e0f236:    71 b0             	r1 &= 4294967294			  ## analog.c:1069:22
 1e0f238:    29 40             	[r0 + 8] = r1			  ## analog.c:1069:22
 1e0f23a:    31 40             	r1 = [r0 + 12]			  ## analog.c:1070:22
 1e0f23c:    31 fd 1e 1b       	r1 = r1 & 4293001215			  ## analog.c:1070:22
 1e0f240:    39 40             	[r0 + 12] = r1			  ## analog.c:1070:22
 1e0f242:    31 40             	r1 = [r0 + 12]			  ## analog.c:1071:22
 1e0f244:    31 fd 7c 1a       	r1 = r1 & 4294935551			  ## analog.c:1071:22
 1e0f248:    39 40             	[r0 + 12] = r1			  ## analog.c:1071:22
 1e0f24a:    41 40             	r1 = [r0 + 16]			  ## analog.c:1072:22
 1e0f24c:    71 b1             	r1 &= 4294967291			  ## analog.c:1072:22
 1e0f24e:    49 40             	[r0 + 16] = r1			  ## analog.c:1072:22
 1e0f250:    41 40             	r1 = [r0 + 16]			  ## analog.c:1073:22
 1e0f252:    71 b8             	r1 &= 4294901759			  ## analog.c:1073:22
 1e0f254:    49 40             	[r0 + 16] = r1			  ## analog.c:1073:22
 1e0f256:    31 40             	r1 = [r0 + 12]			  ## analog.c:1076:22
 1e0f258:    c2 ff 00 04 16 00 	r2 = 1442816 <uECC_vli_cmp_unsafe+0x59404 : 160400 >			  ## analog.c:1076:22
 1e0f25e:    51 b4             	r1 |= r2			  ## analog.c:1076:22
 1e0f260:    39 40             	[r0 + 12] = r1			  ## analog.c:1076:22
 1e0f262:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:1079:22
 1e0f266:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:1082:22
 1e0f26a:    03 f4 01 0b       	[r0 + 12] |= 65536			  ## analog.c:1084:22
 1e0f26e:    05 f4 0f 09       	[r0 + 20] |= 15			  ## analog.c:1089:22
 1e0f272:    51 40             	r1 = [r0 + 20]			  ## analog.c:1094:22
 1e0f274:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:1094:22
 1e0f27a:    51 b4             	r1 |= r2			  ## analog.c:1094:22
 1e0f27c:    59 40             	[r0 + 20] = r1			  ## analog.c:1094:22
 1e0f27e:    61 40             	r1 = [r0 + 24]			  ## analog.c:1098:22
 1e0f280:    69 40             	[r0 + 24] = r1			  ## analog.c:1098:22
 1e0f282:    71 40             	r1 = [r0 + 28]			  ## analog.c:1100:22
 1e0f284:    c2 ff 10 00 18 00 	r2 = 1572880 <uECC_vli_cmp_unsafe+0x79014 : 180010 >			  ## analog.c:1100:22
 1e0f28a:    51 b4             	r1 |= r2			  ## analog.c:1100:22
 1e0f28c:    79 40             	[r0 + 28] = r1			  ## analog.c:1100:22
 1e0f28e:    30 00             	pc = [sp++]			  ## analog.c:1112:1


vco_lock_trim:
 1e0f290:    7f 01             	[--sp] = {rets, r15-r4}			  ## analog.c:1405:0
 1e0f292:    fe 0b             	sp += -4			  ## analog.c:1405:0
 1e0f294:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1405:0
 1e0f29a:    0e f6 00 40       	r14 = [r4 + 0]			  ## analog.c:1415:26
 1e0f29e:    0f f6 04 40       	r15 = [r4 + 4]			  ## analog.c:1416:26
 1e0f2a2:    0d f6 08 40       	r13 = [r4 + 8]			  ## analog.c:1417:26
 1e0f2a6:    09 f6 0c 40       	r9 = [r4 + 12]			  ## analog.c:1418:26
 1e0f2aa:    0a f6 10 40       	r10 = [r4 + 16]			  ## analog.c:1419:26
 1e0f2ae:    0b f6 14 40       	r11 = [r4 + 20]			  ## analog.c:1420:26
 1e0f2b2:    0c f6 18 40       	r12 = [r4 + 24]			  ## analog.c:1421:26
 1e0f2b6:    70 48             	r0 = [r4 + 28]			  ## analog.c:1422:26
 1e0f2b8:    08 02             	[sp] = r0			  ## analog.c:1428:5
 1e0f2ba:    aa 17             	call -172 <txtrim_analog_init : 1e0f210 >			  ## analog.c:1428:5
 1e0f2bc:    05 70             	r5 = 0
 1e0f2be:    c1 ff c0 fd 1c 00 	r1 = 1899968 <uECC_vli_cmp_unsafe+0xC8DC4 : 1cfdc0 >
 1e0f2c4:    0d 42             	[r1 + 0] = r5			  ## analog.c:1430:45
 1e0f2c6:    1d 42             	[r1 + 4] = r5			  ## analog.c:1430:31
 1e0f2c8:    2d 42             	[r1 + 8] = r5			  ## analog.c:1430:17
 1e0f2ca:    13 fc e0 fe       	r3 = r1 + -288			  ## analog.c:1430:17
 1e0f2ce:    00 f4 01 3b       	[r3 + 0] |= 65536			  ## analog.c:1432:20
 1e0f2d2:    20 70             	r0 = 2			  ## analog.c:1433:5
 1e0f2d4:    8f f3 3e ac       	call 2054268 <delay : 4b54 >			  ## analog.c:1433:5
 1e0f2d8:    12 fc 50 fe       	r2 = r1 + -432			  ## analog.c:1433:5
 1e0f2dc:    1b f4 02 29       	[r2 + 108] |= 2			  ## analog.c:1434:13
 1e0f2e0:    20 70             	r0 = 2			  ## analog.c:1435:5
 1e0f2e2:    8f f3 37 ac       	call 2054254 <delay : 4b54 >			  ## analog.c:1435:5
 1e0f2e6:    1b f4 04 29       	[r2 + 108] |= 4			  ## analog.c:1436:13
 1e0f2ea:    20 70             	r0 = 2			  ## analog.c:1437:5
 1e0f2ec:    8f f3 32 ac       	call 2054244 <delay : 4b54 >			  ## analog.c:1437:5
 1e0f2f0:    02 f4 15 19       	[r1 + 8] |= 21			  ## analog.c:1438:17
 1e0f2f4:    20 70             	r0 = 2			  ## analog.c:1439:5
 1e0f2f6:    8f f3 2d ac       	call 2054234 <delay : 4b54 >			  ## analog.c:1439:5
 1e0f2fa:    02 f4 02 1c       	[r1 + 8] |= 33554432			  ## analog.c:1440:17
 1e0f2fe:    20 70             	r0 = 2			  ## analog.c:1441:5
 1e0f300:    8f f3 28 ac       	call 2054224 <delay : 4b54 >			  ## analog.c:1441:5
 1e0f304:    20 42             	r0 = [r1 + 8]			  ## analog.c:1442:17
 1e0f306:    28 42             	[r1 + 8] = r0			  ## analog.c:1442:17
 1e0f308:    20 70             	r0 = 2			  ## analog.c:1443:5
 1e0f30a:    8f f3 23 ac       	call 2054214 <delay : 4b54 >			  ## analog.c:1443:5
 1e0f30e:    20 42             	r0 = [r1 + 8]			  ## analog.c:1444:17
 1e0f310:    28 42             	[r1 + 8] = r0			  ## analog.c:1444:17
 1e0f312:    20 70             	r0 = 2			  ## analog.c:1445:5
 1e0f314:    8f f3 1e ac       	call 2054204 <delay : 4b54 >			  ## analog.c:1445:5
 1e0f318:    00 f4 2a 19       	[r1 + 0] |= 42			  ## analog.c:1446:17
 1e0f31c:    20 70             	r0 = 2			  ## analog.c:1447:5
 1e0f31e:    8f f3 19 ac       	call 2054194 <delay : 4b54 >			  ## analog.c:1447:5
 1e0f322:    00 f4 01 1a       	[r1 + 0] |= 256			  ## analog.c:1448:17
 1e0f326:    20 70             	r0 = 2			  ## analog.c:1449:5
 1e0f328:    8f f3 14 ac       	call 2054184 <delay : 4b54 >			  ## analog.c:1449:5
 1e0f32c:    00 42             	r0 = [r1 + 0]			  ## analog.c:1450:17
 1e0f32e:    f0 b4             	r0 &= 4294966783			  ## analog.c:1450:17
 1e0f330:    08 42             	[r1 + 0] = r0			  ## analog.c:1450:17
 1e0f332:    20 70             	r0 = 2			  ## analog.c:1451:5
 1e0f334:    8f f3 0e ac       	call 2054172 <delay : 4b54 >			  ## analog.c:1451:5
 1e0f338:    00 f4 0c 1a       	[r1 + 0] |= 3072			  ## analog.c:1452:17
 1e0f33c:    20 70             	r0 = 2			  ## analog.c:1453:5
 1e0f33e:    8f f3 09 ac       	call 2054162 <delay : 4b54 >			  ## analog.c:1453:5
 1e0f342:    00 f4 01 1b       	[r1 + 0] |= 65536			  ## analog.c:1454:17
 1e0f346:    20 70             	r0 = 2			  ## analog.c:1455:5
 1e0f348:    8f f3 04 ac       	call 2054152 <delay : 4b54 >			  ## analog.c:1455:5
 1e0f34c:    00 f4 02 1b       	[r1 + 0] |= 131072			  ## analog.c:1456:17
 1e0f350:    20 70             	r0 = 2			  ## analog.c:1457:5
 1e0f352:    8f f3 ff ab       	call 2054142 <delay : 4b54 >			  ## analog.c:1457:5
 1e0f356:    00 f4 20 1b       	[r1 + 0] |= 2097152			  ## analog.c:1458:17
 1e0f35a:    20 70             	r0 = 2			  ## analog.c:1459:5
 1e0f35c:    8f f3 fa ab       	call 2054132 <delay : 4b54 >			  ## analog.c:1459:5
 1e0f360:    01 f4 80 19       	[r1 + 4] |= 128			  ## analog.c:1460:17
 1e0f364:    20 70             	r0 = 2			  ## analog.c:1461:5
 1e0f366:    8f f3 f5 ab       	call 2054122 <delay : 4b54 >			  ## analog.c:1461:5
 1e0f36a:    01 f4 40 19       	[r1 + 4] |= 64			  ## analog.c:1462:17
 1e0f36e:    20 70             	r0 = 2			  ## analog.c:1463:5
 1e0f370:    8f f3 f0 ab       	call 2054112 <delay : 4b54 >			  ## analog.c:1463:5
 1e0f374:    05 f4 08 2a       	[r2 + 20] |= 2048			  ## analog.c:1464:17
 1e0f378:    00 44             	r0 = [r2 + 0]			  ## analog.c:1466:17
 1e0f37a:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1466:17
 1e0f37e:    08 44             	[r2 + 0] = r0			  ## analog.c:1466:17
 1e0f380:    00 44             	r0 = [r2 + 0]			  ## analog.c:1467:17
 1e0f382:    08 44             	[r2 + 0] = r0			  ## analog.c:1467:17
 1e0f384:    00 44             	r0 = [r2 + 0]			  ## analog.c:1468:17
 1e0f386:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1468:17
 1e0f38a:    08 44             	[r2 + 0] = r0			  ## analog.c:1468:17
 1e0f38c:    00 f4 78 29       	[r2 + 0] |= 120			  ## analog.c:1469:17
 1e0f390:    a0 70             	r0 = 10			  ## analog.c:1471:5
 1e0f392:    8f f3 df ab       	call 2054078 <delay : 4b54 >			  ## analog.c:1471:5
 1e0f396:    00 42             	r0 = [r1 + 0]			  ## analog.c:1474:21
 1e0f398:    f0 b8             	r0 &= 4294836223			  ## analog.c:1474:21
 1e0f39a:    08 42             	[r1 + 0] = r0			  ## analog.c:1474:21
 1e0f39c:    20 70             	r0 = 2			  ## analog.c:1475:9
 1e0f39e:    8f f3 d9 ab       	call 2054066 <delay : 4b54 >			  ## analog.c:1475:9
 1e0f3a2:    00 f4 02 1b       	[r1 + 0] |= 131072			  ## analog.c:1476:21
 1e0f3a6:    30 42             	r0 = [r1 + 12]			  ## analog.c:1477:17
 1e0f3a8:    3a f3 fd 0f       	if ((r0 & 67108864) != 0) goto -6 <vco_lock_trim+0x116 : 1e0f3a6 >			  ## analog.c:1477:9
 1e0f3ac:    15 80             	r5 += 1			  ## analog.c:1473:25
 1e0f3ae:    40 05             	r0 = r5.b0 (u)			  ## analog.c:1473:25
 1e0f3b0:    30 e0 f1 1f       	if (r0 != 3) goto -30 <vco_lock_trim+0x106 : 1e0f396 >			  ## analog.c:1473:25
 1e0f3b4:    05 70             	r5 = 0
 1e0f3b6:    06 70             	r6 = 0
 1e0f3b8:    00 42             	r0 = [r1 + 0]			  ## analog.c:1482:21
 1e0f3ba:    f0 b8             	r0 &= 4294836223			  ## analog.c:1482:21
 1e0f3bc:    08 42             	[r1 + 0] = r0			  ## analog.c:1482:21
 1e0f3be:    20 70             	r0 = 2			  ## analog.c:1483:9
 1e0f3c0:    8f f3 c8 ab       	call 2054032 <delay : 4b54 >			  ## analog.c:1483:9
 1e0f3c4:    00 f4 02 1b       	[r1 + 0] |= 131072			  ## analog.c:1484:21
 1e0f3c8:    30 42             	r0 = [r1 + 12]			  ## analog.c:1485:17
 1e0f3ca:    3a f3 fd 0f       	if ((r0 & 67108864) != 0) goto -6 <vco_lock_trim+0x138 : 1e0f3c8 >			  ## analog.c:1485:9
 1e0f3ce:    40 42             	r0 = [r1 + 16]			  ## analog.c:1487:20
 1e0f3d0:    57 42             	r7 = [r1 + 20]			  ## analog.c:1489:20
 1e0f3d2:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1488:25
 1e0f3d6:    80 fe 00 50       	r5 += r0 * r0			  ## analog.c:1491:34
 1e0f3da:    b0 fd 40 07       	r0 = sextra(r7, p:8, l:16)			  ## analog.c:1490:25
 1e0f3de:    16 80             	r6 += 1			  ## analog.c:1480:26
 1e0f3e0:    87 05             	r7 = r6.b0 (u)			  ## analog.c:1480:26
 1e0f3e2:    80 fe 00 50       	r5 += r0 * r0			  ## analog.c:1491:15
 1e0f3e6:    97 e1 e7 1f       	if (r7 != 25) goto -50 <vco_lock_trim+0x128 : 1e0f3b8 >
 1e0f3ea:    00 44             	r0 = [r2 + 0]			  ## analog.c:1497:17
 1e0f3ec:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:1497:17
 1e0f3f0:    08 44             	[r2 + 0] = r0			  ## analog.c:1497:17
 1e0f3f2:    c0 ff 3c 29 00 00 	r0 = 10556 <tws_bulk_pool_end : 293c >			  ## analog.c:1502:20
 1e0f3f8:    c6 60             	r6 = b[r0 + 12] (u)			  ## analog.c:1498:20
 1e0f3fa:    07 44             	r7 = [r2 + 0]			  ## analog.c:1498:17
 1e0f3fc:    36 c4             	r6 = r6 << 16			  ## analog.c:1498:20
 1e0f3fe:    56 be             	r6 |= r7			  ## analog.c:1498:17
 1e0f400:    0e 44             	[r2 + 0] = r6			  ## analog.c:1498:17
 1e0f402:    06 44             	r6 = [r2 + 0]			  ## analog.c:1499:17
 1e0f404:    36 fd ff 6a       	r6 = r6 & 4294902015			  ## analog.c:1499:17
 1e0f408:    0e 44             	[r2 + 0] = r6			  ## analog.c:1499:17
 1e0f40a:    76 60             	r6 = b[r0 + 7] (u)			  ## analog.c:1500:20
 1e0f40c:    67 60             	r7 = b[r0 + 6] (u)			  ## analog.c:1500:20
 1e0f40e:    08 f6 00 20       	r8 = [r2 + 0]			  ## analog.c:1500:17
 1e0f412:    d8 fd 40 76       	r7 <= insert(r6, p:8, l:24)			  ## analog.c:1500:20
 1e0f416:    3e c2             	r6 = r7 << 8			  ## analog.c:1500:20
 1e0f418:    a6 05             	r6 = r6.l (u)			  ## analog.c:1500:20
 1e0f41a:    e0 fd 80 66       	r6 = r6 | r8			  ## analog.c:1500:17
 1e0f41e:    0e 44             	[r2 + 0] = r6			  ## analog.c:1500:17
 1e0f420:    06 44             	r6 = [r2 + 0]			  ## analog.c:1501:17
 1e0f422:    36 fd ff 69       	r6 = r6 & 4294967040			  ## analog.c:1501:17
 1e0f426:    0e 44             	[r2 + 0] = r6			  ## analog.c:1501:17
 1e0f428:    40 60             	r0 = b[r0 + 4] (u)			  ## analog.c:1502:20
 1e0f42a:    06 44             	r6 = [r2 + 0]			  ## analog.c:1502:17
 1e0f42c:    50 bc             	r0 |= r6			  ## analog.c:1502:17
 1e0f42e:    08 44             	[r2 + 0] = r0			  ## analog.c:1502:17
 1e0f430:    00 46             	r0 = [r3 + 0]			  ## analog.c:1503:20
 1e0f432:    70 b8             	r0 &= 4294901759			  ## analog.c:1503:20
 1e0f434:    08 46             	[r3 + 0] = r0			  ## analog.c:1503:20
 1e0f436:    20 70             	r0 = 2			  ## analog.c:1504:5
 1e0f438:    8f f3 8c ab       	call 2053912 <delay : 4b54 >			  ## analog.c:1504:5
 1e0f43c:    b0 45             	r0 = [r2 + 108]			  ## analog.c:1505:13
 1e0f43e:    f0 b0             	r0 &= 4294967293			  ## analog.c:1505:13
 1e0f440:    b8 45             	[r2 + 108] = r0			  ## analog.c:1505:13
 1e0f442:    20 70             	r0 = 2			  ## analog.c:1506:5
 1e0f444:    8f f3 86 ab       	call 2053900 <delay : 4b54 >			  ## analog.c:1506:5
 1e0f448:    b0 45             	r0 = [r2 + 108]			  ## analog.c:1507:13
 1e0f44a:    70 b1             	r0 &= 4294967291			  ## analog.c:1507:13
 1e0f44c:    b8 45             	[r2 + 108] = r0			  ## analog.c:1507:13
 1e0f44e:    20 70             	r0 = 2			  ## analog.c:1508:5
 1e0f450:    8f f3 80 ab       	call 2053888 <delay : 4b54 >			  ## analog.c:1508:5
 1e0f454:    00 70             	r0 = 0			  ## analog.c:1508:5
 1e0f456:    08 42             	[r1 + 0] = r0			  ## analog.c:1509:45
 1e0f458:    18 42             	[r1 + 4] = r0			  ## analog.c:1509:31
 1e0f45a:    28 42             	[r1 + 8] = r0			  ## analog.c:1509:17
 1e0f45c:    20 70             	r0 = 2			  ## analog.c:1510:5
 1e0f45e:    8f f3 79 ab       	call 2053874 <delay : 4b54 >			  ## analog.c:1510:5
 1e0f462:    50 44             	r0 = [r2 + 20]			  ## analog.c:1511:17
 1e0f464:    f0 b5             	r0 &= 4294965247			  ## analog.c:1511:17
 1e0f466:    58 44             	[r2 + 20] = r0			  ## analog.c:1511:17
 1e0f468:    1e f6 00 40       	[r4 + 0] = r14			  ## analog.c:1513:22
 1e0f46c:    1f f6 04 40       	[r4 + 4] = r15			  ## analog.c:1514:22
 1e0f470:    1d f6 08 40       	[r4 + 8] = r13			  ## analog.c:1515:22
 1e0f474:    19 f6 0c 40       	[r4 + 12] = r9			  ## analog.c:1516:22
 1e0f478:    1a f6 10 40       	[r4 + 16] = r10			  ## analog.c:1517:22
 1e0f47c:    1b f6 14 40       	[r4 + 20] = r11			  ## analog.c:1518:22
 1e0f480:    1c f6 18 40       	[r4 + 24] = r12			  ## analog.c:1519:22
 1e0f484:    90 71             	r0 = 25			  ## analog.c:1495:10
 1e0f486:    c0 fe 00 05       	r0 = r5 / r0 (u)			  ## analog.c:1495:10
 1e0f48a:    01 02             	r1 = [sp]			  ## analog.c:1520:22
 1e0f48c:    79 48             	[r4 + 28] = r1			  ## analog.c:1520:22
 1e0f48e:    02 0a             	sp += 4			  ## analog.c:1520:22
 1e0f490:    5f 01             	{pc, r15-r4} = [sp++]			  ## analog.c:1522:5


set_ldo_trim_res:
 1e0f492:    7f 01             	[--sp] = {rets, r15-r4}			  ## analog.c:3712:0
 1e0f494:    04 08             	r4 = r0			  ## analog.c:3712:0
 1e0f496:    08 f9 09 40       	r8 = b[r4 + 9] (u)			  ## analog.c:3740:13
 1e0f49a:    09 f9 07 40       	r9 = b[r4 + 7] (u)			  ## analog.c:3737:13
 1e0f49e:    0a f9 06 40       	r10 = b[r4 + 6] (u)			  ## analog.c:3734:13
 1e0f4a2:    0b f9 04 40       	r11 = b[r4 + 4] (u)			  ## analog.c:3728:13
 1e0f4a6:    0c f9 03 40       	r12 = b[r4 + 3] (u)			  ## analog.c:3725:13
 1e0f4aa:    26 68             	r6 = b[r4 + 2] (u)			  ## analog.c:3722:13
 1e0f4ac:    0e f9 01 40       	r14 = b[r4 + 1] (u)			  ## analog.c:3719:13
 1e0f4b0:    0f f9 00 40       	r15 = b[r4 + 0] (u)			  ## analog.c:3716:13
 1e0f4b4:    40 71             	r0 = 20			  ## analog.c:3745:5
 1e0f4b6:    8f f3 4d ab       	call 2053786 <delay : 4b54 >			  ## analog.c:3745:5
 1e0f4ba:    10 70             	r0 = 1			  ## analog.c:3745:5
 1e0f4bc:    12 70             	r2 = 1			  ## analog.c:3716:31
 1e0f4be:    0f e0 01 00       	if (r15 == 0) goto 2 <set_ldo_trim_res+0x32 : 1e0f4c4 >			  ## analog.c:3716:31
 1e0f4c2:    02 70             	r2 = 0			  ## analog.c:3716:31
 1e0f4c4:    21 70             	r1 = 2
 1e0f4c6:    0f e0 01 00       	if (r15 == 0) goto 2 <set_ldo_trim_res+0x3A : 1e0f4cc >
 1e0f4ca:    11 70             	r1 = 1			  ## analog.c:3720:18
 1e0f4cc:    0e e0 01 00       	if (r14 == 0) goto 2 <set_ldo_trim_res+0x40 : 1e0f4d2 >
 1e0f4d0:    21 08             	r1 = r2			  ## analog.c:3719:9
 1e0f4d2:    12 70             	r2 = 1			  ## analog.c:3722:13
 1e0f4d4:    01 2c             	if (r6 == 0) goto 2 <set_ldo_trim_res+0x46 : 1e0f4d8 >			  ## analog.c:3722:13
 1e0f4d6:    02 70             	r2 = 0			  ## analog.c:3722:13
 1e0f4d8:    21 09             	r1 += r2			  ## analog.c:3722:9
 1e0f4da:    12 70             	r2 = 1			  ## analog.c:3725:13
 1e0f4dc:    0c e0 01 00       	if (r12 == 0) goto 2 <set_ldo_trim_res+0x50 : 1e0f4e2 >			  ## analog.c:3725:13
 1e0f4e0:    02 70             	r2 = 0			  ## analog.c:3725:13
 1e0f4e2:    21 09             	r1 += r2			  ## analog.c:3725:9
 1e0f4e4:    12 70             	r2 = 1			  ## analog.c:3728:13
 1e0f4e6:    0b e0 01 00       	if (r11 == 0) goto 2 <set_ldo_trim_res+0x5A : 1e0f4ec >			  ## analog.c:3728:13
 1e0f4ea:    02 70             	r2 = 0			  ## analog.c:3728:13
 1e0f4ec:    21 09             	r1 += r2			  ## analog.c:3728:9
 1e0f4ee:    12 70             	r2 = 1			  ## analog.c:3734:13
 1e0f4f0:    0a e0 01 00       	if (r10 == 0) goto 2 <set_ldo_trim_res+0x64 : 1e0f4f6 >			  ## analog.c:3734:13
 1e0f4f4:    02 70             	r2 = 0			  ## analog.c:3734:13
 1e0f4f6:    21 09             	r1 += r2			  ## analog.c:3734:9
 1e0f4f8:    12 70             	r2 = 1			  ## analog.c:3737:13
 1e0f4fa:    09 e0 01 00       	if (r9 == 0) goto 2 <set_ldo_trim_res+0x6E : 1e0f500 >			  ## analog.c:3737:13
 1e0f4fe:    02 70             	r2 = 0			  ## analog.c:3737:13
 1e0f500:    21 09             	r1 += r2			  ## analog.c:3737:9
 1e0f502:    08 e0 01 00       	if (r8 == 0) goto 2 <set_ldo_trim_res+0x76 : 1e0f508 >
 1e0f506:    00 70             	r0 = 0			  ## analog.c:3740:13
 1e0f508:    10 09             	r0 += r1			  ## analog.c:3740:9
 1e0f50a:    20 e0 a2 80       	if (r0 > 2) goto 324 <set_ldo_trim_res+0x1C0 : 1e0f652 >
 1e0f50e:    c0 16             	call -640 <vco_lock_trim : 1e0f290 >			  ## analog.c:3762:17
 1e0f510:    c1 68             	r1 = b[r4 + 12] (u)			  ## analog.c:3764:17
 1e0f512:    b5 68             	r5 = b[r4 + 11] (u)			  ## analog.c:3764:17
 1e0f514:    0d 08             	r13 = r0			  ## analog.c:3762:17
 1e0f516:    c8 fd 40 51       	r5 <= insert(r1, p:8, l:8)			  ## analog.c:3764:17
 1e0f51a:    c7 ff 00 19 1e 00 	r7 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3764:17
 1e0f520:    00 f3 0a 50       	if ((r5 & 1) == 0) goto 20 <set_ldo_trim_res+0xA6 : 1e0f538 >			  ## analog.c:3764:17
 1e0f524:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3766:31
 1e0f526:    30 fd 1c 0a       	r0 = r0 & 4294960127			  ## analog.c:3766:31
 1e0f52a:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3766:31
 1e0f52c:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3767:31
 1e0f52e:    21 fd 07 f9       	r1 = r15 & 7			  ## analog.c:3767:34
 1e0f532:    89 c2             	r1 = r1 << 10			  ## analog.c:3767:34
 1e0f534:    50 b2             	r0 |= r1			  ## analog.c:3767:31
 1e0f536:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3767:31
 1e0f538:    01 f3 0a 50       	if ((r5 & 2) == 0) goto 20 <set_ldo_trim_res+0xBE : 1e0f550 >
 1e0f53c:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3777:31
 1e0f53e:    30 fd e0 0a       	r0 = r0 & 4294909951			  ## analog.c:3777:31
 1e0f542:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3777:31
 1e0f544:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3778:31
 1e0f546:    21 fd 07 e9       	r1 = r14 & 7			  ## analog.c:3778:34
 1e0f54a:    49 c3             	r1 = r1 << 13			  ## analog.c:3778:34
 1e0f54c:    50 b2             	r0 |= r1			  ## analog.c:3778:31
 1e0f54e:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3778:31
 1e0f550:    02 f3 0a 50       	if ((r5 & 4) == 0) goto 20 <set_ldo_trim_res+0xD6 : 1e0f568 >
 1e0f554:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3788:31
 1e0f556:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3788:31
 1e0f55a:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3788:31
 1e0f55c:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3789:31
 1e0f55e:    21 fd 07 69       	r1 = r6 & 7			  ## analog.c:3789:34
 1e0f562:    09 c4             	r1 = r1 << 16			  ## analog.c:3789:34
 1e0f564:    50 b2             	r0 |= r1			  ## analog.c:3789:31
 1e0f566:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3789:31
 1e0f568:    03 f3 0a 50       	if ((r5 & 8) == 0) goto 20 <set_ldo_trim_res+0xEE : 1e0f580 >
 1e0f56c:    a0 4e             	r0 = [r7 + 40]			  ## analog.c:3799:31
 1e0f56e:    30 fd 07 0c       	r0 = r0 & 4177526783			  ## analog.c:3799:31
 1e0f572:    a8 4e             	[r7 + 40] = r0			  ## analog.c:3799:31
 1e0f574:    a0 4e             	r0 = [r7 + 40]			  ## analog.c:3800:31
 1e0f576:    21 fd 07 c9       	r1 = r12 & 7			  ## analog.c:3800:34
 1e0f57a:    09 c6             	r1 = r1 << 24			  ## analog.c:3800:34
 1e0f57c:    50 b2             	r0 |= r1			  ## analog.c:3800:31
 1e0f57e:    a8 4e             	[r7 + 40] = r0			  ## analog.c:3800:31
 1e0f580:    04 f3 0b 50       	if ((r5 & 16) == 0) goto 22 <set_ldo_trim_res+0x108 : 1e0f59a >
 1e0f584:    80 4e             	r0 = [r7 + 32]			  ## analog.c:3810:30
 1e0f586:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## analog.c:3810:30
 1e0f58a:    88 4e             	[r7 + 32] = r0			  ## analog.c:3810:30
 1e0f58c:    80 4e             	r0 = [r7 + 32]			  ## analog.c:3811:30
 1e0f58e:    f0 fd 10 1b       	r1 = r11 << 2			  ## analog.c:3811:33
 1e0f592:    21 fd 1c 19       	r1 = r1 & 28			  ## analog.c:3811:33
 1e0f596:    50 b2             	r0 |= r1			  ## analog.c:3811:30
 1e0f598:    88 4e             	[r7 + 32] = r0			  ## analog.c:3811:30
 1e0f59a:    06 f3 0a 50       	if ((r5 & 64) == 0) goto 20 <set_ldo_trim_res+0x120 : 1e0f5b2 >
 1e0f59e:    40 4e             	r0 = [r7 + 16]			  ## analog.c:3832:30
 1e0f5a0:    30 fd c0 0b       	r0 = r0 & 4282384383			  ## analog.c:3832:30
 1e0f5a4:    48 4e             	[r7 + 16] = r0			  ## analog.c:3832:30
 1e0f5a6:    40 4e             	r0 = [r7 + 16]			  ## analog.c:3833:30
 1e0f5a8:    21 fd 03 a9       	r1 = r10 & 3			  ## analog.c:3833:33
 1e0f5ac:    89 c5             	r1 = r1 << 22			  ## analog.c:3833:33
 1e0f5ae:    50 b2             	r0 |= r1			  ## analog.c:3833:30
 1e0f5b0:    48 4e             	[r7 + 16] = r0			  ## analog.c:3833:30
 1e0f5b2:    50 05             	r0 = r5.b0 (s)			  ## analog.c:3841:13
 1e0f5b4:    f0 ef 0a c0       	ifs (r0 > -1) goto 20 <set_ldo_trim_res+0x13A : 1e0f5cc >			  ## analog.c:3841:13
 1e0f5b8:    60 4e             	r0 = [r7 + 24]			  ## analog.c:3843:30
 1e0f5ba:    30 fd 60 02       	r0 = r0 & 4294852607			  ## analog.c:3843:30
 1e0f5be:    68 4e             	[r7 + 24] = r0			  ## analog.c:3843:30
 1e0f5c0:    60 4e             	r0 = [r7 + 24]			  ## analog.c:3844:30
 1e0f5c2:    21 fd 07 99       	r1 = r9 & 7			  ## analog.c:3844:33
 1e0f5c6:    89 c3             	r1 = r1 << 14			  ## analog.c:3844:33
 1e0f5c8:    50 b2             	r0 |= r1			  ## analog.c:3844:30
 1e0f5ca:    68 4e             	[r7 + 24] = r0			  ## analog.c:3844:30
 1e0f5cc:    09 f3 0a 50       	if ((r5 & 512) == 0) goto 20 <set_ldo_trim_res+0x152 : 1e0f5e4 >
 1e0f5d0:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3855:30
 1e0f5d2:    30 fd e0 0b       	r0 = r0 & 4280287231			  ## analog.c:3855:30
 1e0f5d6:    08 4e             	[r7 + 0] = r0			  ## analog.c:3855:30
 1e0f5d8:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3856:30
 1e0f5da:    21 fd 07 89       	r1 = r8 & 7			  ## analog.c:3856:33
 1e0f5de:    49 c5             	r1 = r1 << 21			  ## analog.c:3856:33
 1e0f5e0:    50 b2             	r0 |= r1			  ## analog.c:3856:30
 1e0f5e2:    08 4e             	[r7 + 0] = r0			  ## analog.c:3856:30
 1e0f5e4:    20 73             	r0 = 50			  ## analog.c:3864:9
 1e0f5e6:    8f f3 b5 aa       	call 2053482 <delay : 4b54 >			  ## analog.c:3864:9
 1e0f5ea:    52 16             	call -860 <vco_lock_trim : 1e0f290 >			  ## analog.c:3865:17
 1e0f5ec:    90 fb 00 0d       	r0 = r13 - r0			  ## analog.c:3871:24
 1e0f5f0:    01 fb c1 12       	r1 = 4801 <_cpu0_sstack_begin+0x291 : 12c1 >			  ## analog.c:3871:41
 1e0f5f4:    10 f2 1e b0       	ifs (r0 < r1) goto 60 <set_ldo_trim_res+0x1A2 : 1e0f634 >			  ## analog.c:3871:41
 1e0f5f8:    02 f3 1c 50       	if ((r5 & 4) == 0) goto 56 <set_ldo_trim_res+0x1A2 : 1e0f634 >
 1e0f5fc:    80 05             	r0 = r6.b0 (u)			  ## analog.c:3871:81
 1e0f5fe:    50 e0 28 80       	if (r0 > 5) goto 80 <set_ldo_trim_res+0x1C0 : 1e0f652 >			  ## analog.c:3871:81
 1e0f602:    16 80             	r6 += 1			  ## analog.c:3874:34
 1e0f604:    2e 68             	b[r4 + 2] = r6			  ## analog.c:3874:34
 1e0f606:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3875:35
 1e0f608:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3875:35
 1e0f60c:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3875:35
 1e0f60e:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3876:35
 1e0f610:    21 fd 07 69       	r1 = r6 & 7			  ## analog.c:3876:38
 1e0f614:    09 c4             	r1 = r1 << 16			  ## analog.c:3876:38
 1e0f616:    50 b2             	r0 |= r1			  ## analog.c:3876:35
 1e0f618:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3876:35
 1e0f61a:    20 73             	r0 = 50			  ## analog.c:3878:17
 1e0f61c:    8f f3 9a aa       	call 2053428 <delay : 4b54 >			  ## analog.c:3878:17
 1e0f620:    37 16             	call -914 <vco_lock_trim : 1e0f290 >			  ## analog.c:3879:25
 1e0f622:    01 08             	r1 = r0			  ## analog.c:3879:25
 1e0f624:    a0 70             	r0 = 10			  ## analog.c:3882:17
 1e0f626:    8f f3 95 aa       	call 2053418 <delay : 4b54 >			  ## analog.c:3882:17
 1e0f62a:    90 fb 10 0d       	r0 = r13 - r1			  ## analog.c:3871:24
 1e0f62e:    2c ff 96 00 e4 ff 	ifs (r0 > 4800) goto -56 <set_ldo_trim_res+0x16A : 1e0f5fc >			  ## analog.c:3871:24
 1e0f634:    80 05             	r0 = r6.b0 (u)			  ## analog.c:3884:38
 1e0f636:    50 e0 0c 80       	if (r0 > 5) goto 24 <set_ldo_trim_res+0x1C0 : 1e0f652 >			  ## analog.c:3884:38
 1e0f63a:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3885:39
 1e0f63c:    30 fd 07 0b       	r0 = r0 & 4294508543			  ## analog.c:3885:39
 1e0f640:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3885:39
 1e0f642:    b0 4e             	r0 = [r7 + 44]			  ## analog.c:3886:39
 1e0f644:    31 c4             	r1 = r6 << 16			  ## analog.c:3886:42
 1e0f646:    41 fb 01 1b       	r1 = r1 + 65536			  ## analog.c:3886:42
 1e0f64a:    21 fd 07 1b       	r1 = r1 & 458752			  ## analog.c:3886:42
 1e0f64e:    50 b2             	r0 |= r1			  ## analog.c:3886:39
 1e0f650:    b8 4e             	[r7 + 44] = r0			  ## analog.c:3886:39
 1e0f652:    5f 01             	{pc, r15-r4} = [sp++]			  ## analog.c:3897:1


rxtrim_analog_init:
 1e0f654:    34 00             	[--sp] = rets			  ## analog.c:606:0
 1e0f656:    c3 14             	call -1658 <bt_analog_part_init : 1e0efde >			  ## analog.c:607:5
 1e0f658:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:607:5
 1e0f65e:    01 40             	r1 = [r0 + 0]			  ## analog.c:609:22
 1e0f660:    02 fb 3f f8       	r2 = -1985 <bank_code_load_addr+0x1E4F93 : 1fff83f >			  ## analog.c:609:22
 1e0f664:    51 b5             	r1 &= r2			  ## analog.c:609:22
 1e0f666:    09 40             	[r0 + 0] = r1			  ## analog.c:609:22
 1e0f668:    01 40             	r1 = [r0 + 0]			  ## analog.c:610:22
 1e0f66a:    02 fb c0 03       	r2 = 960 <NVRAM_DATA_SIZE+0x7C : 3c0 >			  ## analog.c:610:22
 1e0f66e:    51 b4             	r1 |= r2			  ## analog.c:610:22
 1e0f670:    09 40             	[r0 + 0] = r1			  ## analog.c:610:22
 1e0f672:    61 40             	r1 = [r0 + 24]			  ## analog.c:612:22
 1e0f674:    c2 ff ff ff 1f 00 	r2 = 2097151 <uECC_vli_cmp_unsafe+0xF9003 : 1fffff >			  ## analog.c:612:22
 1e0f67a:    51 b5             	r1 &= r2			  ## analog.c:612:22
 1e0f67c:    69 40             	[r0 + 24] = r1			  ## analog.c:612:22
 1e0f67e:    06 f4 fc 06       	[r0 + 24] |= 132120576			  ## analog.c:613:22
 1e0f682:    21 40             	r1 = [r0 + 8]			  ## analog.c:615:22
 1e0f684:    02 fb 3f fe       	r2 = -449 <bank_code_load_addr+0x1E5593 : 1fffe3f >			  ## analog.c:615:22
 1e0f688:    51 b5             	r1 &= r2			  ## analog.c:615:22
 1e0f68a:    29 40             	[r0 + 8] = r1			  ## analog.c:615:22
 1e0f68c:    11 40             	r1 = [r0 + 4]			  ## analog.c:616:22
 1e0f68e:    31 fd f0 1a       	r1 = r1 & 4294905855			  ## analog.c:616:22
 1e0f692:    19 40             	[r0 + 4] = r1			  ## analog.c:616:22
 1e0f694:    31 40             	r1 = [r0 + 12]			  ## analog.c:618:22
 1e0f696:    c2 ff ff 83 e1 ff 	r2 = 4292969471 <text_end+0xFF : 1e183ff >			  ## analog.c:618:22
 1e0f69c:    51 b5             	r1 &= r2			  ## analog.c:618:22
 1e0f69e:    39 40             	[r0 + 12] = r1			  ## analog.c:618:22
 1e0f6a0:    21 40             	r1 = [r0 + 8]			  ## analog.c:621:22
 1e0f6a2:    02 fb c0 01       	r2 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:621:22
 1e0f6a6:    51 b4             	r1 |= r2			  ## analog.c:621:22
 1e0f6a8:    29 40             	[r0 + 8] = r1			  ## analog.c:621:22
 1e0f6aa:    01 f4 50 0a       	[r0 + 4] |= 20480			  ## analog.c:622:22
 1e0f6ae:    31 40             	r1 = [r0 + 12]			  ## analog.c:624:22
 1e0f6b0:    c2 ff 00 7c 15 00 	r2 = 1408000 <uECC_vli_cmp_unsafe+0x50C04 : 157c00 >			  ## analog.c:624:22
 1e0f6b6:    51 b4             	r1 |= r2			  ## analog.c:624:22
 1e0f6b8:    39 40             	[r0 + 12] = r1			  ## analog.c:624:22
 1e0f6ba:    04 f4 05 09       	[r0 + 16] |= 5			  ## analog.c:628:22
 1e0f6be:    04 f4 01 0b       	[r0 + 16] |= 65536			  ## analog.c:631:22
 1e0f6c2:    01 f4 08 0a       	[r0 + 4] |= 2048			  ## analog.c:633:22
 1e0f6c6:    02 f4 01 09       	[r0 + 8] |= 1			  ## analog.c:634:22
 1e0f6ca:    00 f4 0c 0b       	[r0 + 0] |= 786432			  ## analog.c:635:22
 1e0f6ce:    01 f4 01 09       	[r0 + 4] |= 1			  ## analog.c:638:22
 1e0f6d2:    05 f4 0d 09       	[r0 + 20] |= 13			  ## analog.c:640:22
 1e0f6d6:    51 40             	r1 = [r0 + 20]			  ## analog.c:645:22
 1e0f6d8:    c2 ff 80 c0 00 00 	r2 = 49280 <_nv_pre_end+0x580 : c080 >			  ## analog.c:645:22
 1e0f6de:    51 b4             	r1 |= r2			  ## analog.c:645:22
 1e0f6e0:    59 40             	[r0 + 20] = r1			  ## analog.c:645:22
 1e0f6e2:    06 f4 10 0b       	[r0 + 24] |= 1048576			  ## analog.c:649:22
 1e0f6e6:    30 00             	pc = [sp++]			  ## analog.c:651:1


get_ldo_voltage:
 1e0f6e8:    77 01             	[--sp] = {rets, r7-r4}			  ## analog.c:3362:0
 1e0f6ea:    c7 ff 00 19 1e 00 	r7 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:3362:0
 1e0f6f0:    01 4e             	r1 = [r7 + 0]			  ## analog.c:3358:5
 1e0f6f2:    04 08             	r4 = r0			  ## analog.c:3358:5
 1e0f6f4:    30 fd 38 1a       	r0 = r1 & 4294952959			  ## analog.c:3358:5
 1e0f6f8:    08 4e             	[r7 + 0] = r0			  ## analog.c:3358:5
 1e0f6fa:    bf f3 ad a5       	call -46246 <adc_pmu_detect_en : 1e04258 >			  ## analog.c:3367:5
 1e0f6fe:    d0 70             	r0 = 13			  ## analog.c:3368:5
 1e0f700:    bf f3 cf 85       	call -62562 <adc_sample : 1e002a2 >			  ## analog.c:3368:5
 1e0f704:    05 70             	r5 = 0
 1e0f706:    76 fc 00 18       	r6 = r7 + 6144
 1e0f70a:    00 70             	r0 = 0
 1e0f70c:    01 4c             	r1 = [r6 + 0]			  ## analog.c:3370:26
 1e0f70e:    51 04             	r1 = r1.b0 (s)			  ## analog.c:3370:16
 1e0f710:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <get_ldo_voltage+0x24 : 1e0f70c >			  ## analog.c:3370:9
 1e0f714:    11 4c             	r1 = [r6 + 4]			  ## analog.c:3372:30
 1e0f716:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3373:21
 1e0f71a:    10 80             	r0 += 1			  ## analog.c:3369:30
 1e0f71c:    15 09             	r5 += r1			  ## analog.c:3372:19
 1e0f71e:    a0 e0 f5 1f       	if (r0 != 10) goto -22 <get_ldo_voltage+0x24 : 1e0f70c >
 1e0f722:    00 4e             	r0 = [r7 + 0]			  ## analog.c:3358:5
 1e0f724:    21 fd 07 49       	r1 = r4 & 7			  ## analog.c:3358:5
 1e0f728:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3358:5
 1e0f72c:    c3 fd 58 01       	r0 <= insert(r1, p:11, l:3)			  ## analog.c:3358:5
 1e0f730:    08 4e             	[r7 + 0] = r0			  ## analog.c:3358:5
 1e0f732:    80 7c             	r0 = 200			  ## analog.c:3377:5
 1e0f734:    8f f3 0e aa       	call 2053148 <delay : 4b54 >			  ## analog.c:3377:5
 1e0f738:    f0 70             	r0 = 15			  ## analog.c:3379:5
 1e0f73a:    bf f3 b2 85       	call -62620 <adc_sample : 1e002a2 >			  ## analog.c:3379:5
 1e0f73e:    00 70             	r0 = 0
 1e0f740:    01 70             	r1 = 0
 1e0f742:    02 4c             	r2 = [r6 + 0]			  ## analog.c:3381:26
 1e0f744:    92 04             	r2 = r2.b0 (s)			  ## analog.c:3381:16
 1e0f746:    f2 ef fc cf       	ifs (r2 > -1) goto -8 <get_ldo_voltage+0x5A : 1e0f742 >			  ## analog.c:3381:9
 1e0f74a:    12 4c             	r2 = [r6 + 4]			  ## analog.c:3383:30
 1e0f74c:    00 f4 40 69       	[r6 + 0] |= 64			  ## analog.c:3384:21
 1e0f750:    11 80             	r1 += 1			  ## analog.c:3380:30
 1e0f752:    20 09             	r0 += r2			  ## analog.c:3383:19
 1e0f754:    a1 e0 f5 1f       	if (r1 != 10) goto -22 <get_ldo_voltage+0x5A : 1e0f742 >
 1e0f758:    c1 ff 00 08 00 00 	r1 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e0f75e:    f1 52             	r1 = h[r1 + 30] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:23
 1e0f760:    a2 70             	r2 = 10			  ## analog.c:3388:29
 1e0f762:    c0 fe 20 35       	r3 = r5 / r2 (u)			  ## analog.c:3387:29
 1e0f766:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## analog.c:3388:29
 1e0f76a:    85 fd 20 11       	r1 = uextra(r1, p:4, l:5)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:40
 1e0f76e:    01 fe 03 19       	r1 = r1 * 3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:21:40
 1e0f772:    11 fc 21 03       	r1 = r1 + 801			  ## analog.c:3346:11
 1e0f776:    08 0e             	r0 = r1 * r0			  ## analog.c:3347:23
 1e0f778:    c0 fe 30 00       	r0 = r0 / r3 (u)			  ## analog.c:3347:29
 1e0f77c:    57 01             	{pc, r7-r4} = [sp++]			  ## analog.c:3395:5


bta_pll_config_init:
 1e0f77e:    7c 01             	[--sp] = {rets, r12-r4}			  ## analog.c:2617:0
 1e0f780:    04 70             	r4 = 0			  ## analog.c:2617:0
 1e0f782:    cc ff ac fc 1c 00 	r12 = 1899692 <uECC_vli_cmp_unsafe+0xC8CB0 : 1cfcac >			  ## analog.c:2617:0
 1e0f788:    14 f6 00 c0       	[r12 + 0] = r4			  ## analog.c:2623:19
 1e0f78c:    c6 ff a0 e7 e0 01 	r6 = 31516576 <m_code_addr : 1e0e7a0 >			  ## analog.c:2623:19
 1e0f792:    f7 74             	r7 = 79			  ## analog.c:2623:19
 1e0f794:    c8 ff ec e8 e0 01 	r8 = 31516908 <bt_frac_pll_int_48m : 1e0e8ec >			  ## analog.c:2623:19
 1e0f79a:    c9 ff 24 01 08 00 	r9 = 524580 <text_size+0x67F44 : 80124 >			  ## analog.c:2623:19
 1e0f7a0:    4a fb 10 9b       	r10 = r9 + 1048576			  ## analog.c:2623:19
 1e0f7a4:    cb ff ff ff 7f 00 	r11 = 8388607 <uECC_vli_cmp_unsafe+0x6F9003 : 7fffff >			  ## analog.c:2623:19
 1e0f7aa:    05 fa 00 48       	r5 = b[r4+r8] (u)			  ## analog.c:2630:32
 1e0f7ae:    c0 05             	r0 = r7.b0 (u)			  ## analog.c:2627:16
 1e0f7b0:    75 14             	call -1814 <get_bta_pll_bank : 1e0f09c >			  ## analog.c:2627:16
 1e0f7b2:    41 f6 04 60       	r1 = [r6 ++= 4]			  ## analog.c:2629:32
 1e0f7b6:    52 fb 40 1b       	r2 = r1 - 4194304			  ## analog.c:2632:64
 1e0f7ba:    00 c3             	r0 = r0 << 12			  ## analog.c:2632:64
 1e0f7bc:    23 ff 80 2b 05 00 	if (r2 < 8388608) goto 10 <bta_pll_config_init+0x4E : 1e0f7cc >			  ## analog.c:2632:64
 1e0f7c2:    e0 fd 90 00       	r0 = r0 | r9			  ## analog.c:2634:126
 1e0f7c6:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2634:28
 1e0f7ca:    0c 18             	goto 24 <bta_pll_config_init+0x66 : 1e0f7e4 >			  ## analog.c:2634:28
 1e0f7cc:    e0 fd a0 00       	r0 = r0 | r10			  ## analog.c:2637:126
 1e0f7d0:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2637:28
 1e0f7d4:    b1 f2 04 c0       	ifs (r1 > r11) goto 8 <bta_pll_config_init+0x62 : 1e0f7e0 >			  ## analog.c:2639:17
 1e0f7d8:    41 fb 80 1b       	r1 = r1 + 8388608			  ## analog.c:2641:38
 1e0f7dc:    f5 8f             	r5 += -1			  ## analog.c:2640:38
 1e0f7de:    02 18             	goto 4 <bta_pll_config_init+0x66 : 1e0f7e4 >
 1e0f7e0:    51 fb 80 1b       	r1 = r1 - 8388608			  ## analog.c:2643:38
 1e0f7e4:    08 d9             	r0 = r1 >>> 4			  ## analog.c:2646:77
 1e0f7e6:    29 c5             	r1 = r5 << 20			  ## analog.c:2646:46
 1e0f7e8:    50 b2             	r0 |= r1			  ## analog.c:2646:53
 1e0f7ea:    10 f6 04 c0       	[r12 + 4] = r0			  ## analog.c:2646:23
 1e0f7ee:    14 80             	r4 += 1			  ## analog.c:2626:26
 1e0f7f0:    17 80             	r7 += 1			  ## analog.c:2626:19
 1e0f7f2:    14 e5 da 1f       	if (r4 != 81) goto -76 <bta_pll_config_init+0x2C : 1e0f7aa >			  ## analog.c:2626:19
 1e0f7f6:    5c 01             	{pc, r12-r4} = [sp++]			  ## analog.c:2648:1


bt_rf_init:
 1e0f7f8:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF.c:395:0
 1e0f7fa:    64 0b             	sp += -312			  ## RF.c:395:0
 1e0f7fc:    80 f3 9f 0c       	call 6462 <set_bt_version : 1e1113e >			  ## RF.c:399:5
 1e0f800:    10 70             	r0 = 1			  ## RF.c:400:21
 1e0f802:    cd ff 00 21 1f 00 	r13 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:400:21
 1e0f808:    10 f6 00 d1       	[r13 + 256] = r0			  ## RF.c:400:21
 1e0f80c:    cc ff b8 09 00 00 	r12 = 2488 <system_data_end : 9b8 >			  ## RF.c:400:21
 1e0f812:    08 70             	r8 = 0			  ## RF.c:400:21
 1e0f814:    18 f9 0f c0       	b[r12 + 15] = r8			  ## RF.c:96:17
 1e0f818:    80 71             	r0 = 24			  ## RF.c:99:18
 1e0f81a:    10 f9 06 c0       	b[r12 + 6] = r0			  ## RF.c:99:18
 1e0f81e:    a0 70             	r0 = 10			  ## RF.c:99:18
 1e0f820:    10 f9 07 c0       	b[r12 + 7] = r0			  ## RF.c:100:17
 1e0f824:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:100:17
 1e0f82a:    01 40             	r1 = [r0 + 0]			  ## RF.c:407:5
 1e0f82c:    31 fd c0 1a       	r1 = r1 & 4294918143			  ## RF.c:407:5
 1e0f830:    11 b7             	r1 |= 16384			  ## RF.c:407:5
 1e0f832:    09 40             	[r0 + 0] = r1			  ## RF.c:407:5
 1e0f834:    00 7f             	r0 = 240			  ## RF.c:409:5
 1e0f836:    8f f3 8d a9       	call 2052890 <delay : 4b54 >			  ## RF.c:409:5
 1e0f83a:    00 f4 80 d9       	[r13 + 0] |= 128			  ## RF.c:410:5
 1e0f83e:    00 f6 00 d0       	r0 = [r13 + 0]			  ## RF.c:411:5
 1e0f842:    30 fd 1f 0b       	r0 = r0 & 4292935679			  ## RF.c:411:5
 1e0f846:    00 fd 0c 0b       	r0 = r0 | 786432			  ## RF.c:411:5
 1e0f84a:    10 f6 00 d0       	[r13 + 0] = r0			  ## RF.c:411:5
 1e0f84e:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:413:11
 1e0f852:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:413:24
 1e0f856:    8f f3 7d a9       	call 2052858 <delay : 4b54 >			  ## RF.c:413:5
 1e0f85a:    00 f4 01 d9       	[r13 + 0] |= 1			  ## RF.c:414:5
 1e0f85e:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## RF.c:415:11
 1e0f862:    00 fe 0a 09       	r0 = r0 * 10			  ## RF.c:415:24
 1e0f866:    8f f3 75 a9       	call 2052842 <delay : 4b54 >			  ## RF.c:415:5
 1e0f86a:    c4 ff 00 fc 1c 00 	r4 = 1899520 <uECC_vli_cmp_unsafe+0xC8C04 : 1cfc00 >			  ## RF.c:415:5
 1e0f870:    10 f4 04 4a       	[r4 + 64] |= 1024			  ## RF.c:416:16
 1e0f874:    cf ff 00 19 1e 00 	r15 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e0f87a:    18 f6 50 f0       	[r15 + 80] = r8
 1e0f87e:    d5 f4 80 f9       	[r15 + 84] = 128
 1e0f882:    14 f4 40 49       	[r4 + 80] |= 64			  ## analog.c:2969:16
 1e0f886:    47 fc 98 00       	r7 = r4 + 152
 1e0f88a:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2763:20
 1e0f88c:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## analog.c:2763:20
 1e0f890:    18 4e             	[r7 + 4] = r0			  ## analog.c:2763:20
 1e0f892:    01 f4 08 79       	[r7 + 4] |= 8			  ## analog.c:2764:20
 1e0f896:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2765:20
 1e0f898:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2765:20
 1e0f89c:    08 4e             	[r7 + 0] = r0			  ## analog.c:2765:20
 1e0f89e:    00 f4 32 79       	[r7 + 0] |= 50			  ## analog.c:2766:20
 1e0f8a2:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2767:21
 1e0f8a4:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2767:21
 1e0f8a8:    08 4e             	[r7 + 0] = r0			  ## analog.c:2767:21
 1e0f8aa:    00 f4 32 7b       	[r7 + 0] |= 3276800			  ## analog.c:2768:21
 1e0f8ae:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2769:21
 1e0f8b0:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2769:21
 1e0f8b4:    08 4e             	[r7 + 0] = r0			  ## analog.c:2769:21
 1e0f8b6:    00 f4 08 7a       	[r7 + 0] |= 2048			  ## analog.c:2770:21
 1e0f8ba:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2771:21
 1e0f8bc:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2771:21
 1e0f8c0:    08 4e             	[r7 + 0] = r0			  ## analog.c:2771:21
 1e0f8c2:    00 4e             	r0 = [r7 + 0]			  ## analog.c:2772:21
 1e0f8c4:    08 4e             	[r7 + 0] = r0			  ## analog.c:2772:21
 1e0f8c6:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2773:21
 1e0f8c8:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:2773:21
 1e0f8cc:    18 4e             	[r7 + 4] = r0			  ## analog.c:2773:21
 1e0f8ce:    01 f4 32 7b       	[r7 + 4] |= 3276800			  ## analog.c:2774:21
 1e0f8d2:    10 4e             	r0 = [r7 + 4]			  ## analog.c:2775:21
 1e0f8d4:    30 fd ff 0c       	r0 = r0 & 16777215			  ## analog.c:2775:21
 1e0f8d8:    18 4e             	[r7 + 4] = r0			  ## analog.c:2775:21
 1e0f8da:    01 f4 32 7c       	[r7 + 4] |= 838860800			  ## analog.c:2776:21
 1e0f8de:    a0 70             	r0 = 10			  ## analog.c:2777:5
 1e0f8e0:    8f f3 38 a9       	call 2052720 <delay : 4b54 >			  ## analog.c:2777:5
 1e0f8e4:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2780:20
 1e0f8e6:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:2780:20
 1e0f8ea:    28 4e             	[r7 + 8] = r0			  ## analog.c:2780:20
 1e0f8ec:    02 f4 0a 79       	[r7 + 8] |= 10			  ## analog.c:2781:20
 1e0f8f0:    20 4e             	r0 = [r7 + 8]			  ## analog.c:2782:20
 1e0f8f2:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:2782:20
 1e0f8f6:    28 4e             	[r7 + 8] = r0			  ## analog.c:2782:20
 1e0f8f8:    02 f4 0a 7a       	[r7 + 8] |= 2560			  ## analog.c:2783:20
 1e0f8fc:    d2 f4 b9 49       	[r4 + 72] = 185			  ## analog.c:2813:17
 1e0f900:    c0 ff 44 d1 ff 0c 	r0 = 218091844 <uECC_vli_cmp_unsafe+0xEF6148 : ffd144 >			  ## analog.c:2815:18
 1e0f906:    08 48             	[r4 + 0] = r0			  ## analog.c:2815:18
 1e0f908:    c0 ff de 3c 00 6e 	r0 = 1845509342 <ze_entry_tm+0xA6 : 3cde >			  ## analog.c:2830:18
 1e0f90e:    18 48             	[r4 + 4] = r0			  ## analog.c:2830:18
 1e0f910:    c0 ff 00 00 10 32 	r0 = 839909376 <text_size+0xE7E20 : 100000 >			  ## analog.c:2845:18
 1e0f916:    28 48             	[r4 + 8] = r0			  ## analog.c:2845:18
 1e0f918:    c3 f4 80 4f       	[r4 + 12] = 2155905152			  ## analog.c:2851:18
 1e0f91c:    00 fb 78 78       	r0 = 30840 <nvbss_size+0xC38 : 7878 >			  ## analog.c:2856:18
 1e0f920:    48 48             	[r4 + 16] = r0			  ## analog.c:2856:18
 1e0f922:    c0 ff ff 00 fc 23 	r0 = 603717887 <bank_code_load_addr+0x1A5853 : 1fc00ff >			  ## analog.c:2860:18
 1e0f928:    58 48             	[r4 + 20] = r0			  ## analog.c:2860:18
 1e0f92a:    18 f6 18 40       	[r4 + 24] = r8			  ## analog.c:2866:18
 1e0f92e:    18 f6 1c 40       	[r4 + 28] = r8			  ## analog.c:2868:18
 1e0f932:    c0 ff 37 55 55 36 	r0 = 911562039 <uECC_vli_cmp_unsafe+0x44E53B : 555537 >			  ## analog.c:2870:18
 1e0f938:    88 48             	[r4 + 32] = r0			  ## analog.c:2870:18
 1e0f93a:    c0 ff 40 80 6d 7c 	r0 = 2087551040 <uECC_vli_cmp_unsafe+0x5D1044 : 6d8040 >			  ## analog.c:2876:18
 1e0f940:    98 48             	[r4 + 36] = r0			  ## analog.c:2876:18
 1e0f942:    c0 ff 20 c8 05 06 	r0 = 101042208 <text_size+0x44640 : 5c820 >			  ## analog.c:2892:18
 1e0f948:    a8 48             	[r4 + 40] = r0			  ## analog.c:2892:18
 1e0f94a:    c0 ff b8 00 20 03 	r0 = 52428984 <uECC_vli_cmp_unsafe+0x10F90BC : 12000b8 >			  ## analog.c:2902:18
 1e0f950:    b8 48             	[r4 + 44] = r0			  ## analog.c:2902:18
 1e0f952:    c0 ff dc e5 14 00 	r0 = 1369564 <uECC_vli_cmp_unsafe+0x475E0 : 14e5dc >			  ## analog.c:2908:18
 1e0f958:    4e fc c0 01       	r14 = r4 + 448			  ## analog.c:2908:18
 1e0f95c:    10 f6 24 e0       	[r14 + 36] = r0			  ## analog.c:2908:18
 1e0f960:    c0 ff 40 00 08 00 	r0 = 524352 <text_size+0x67E60 : 80040 >			  ## analog.c:2918:18
 1e0f966:    10 f6 28 e0       	[r14 + 40] = r0			  ## analog.c:2918:18
 1e0f96a:    40 fb e0 da       	r0 = r13 + 57344			  ## analog.c:2921:18
 1e0f96e:    10 f6 2c e0       	[r14 + 44] = r0			  ## analog.c:2921:18
 1e0f972:    c0 ff 00 04 80 00 	r0 = 8389632 <uECC_vli_cmp_unsafe+0x6F9404 : 800400 >			  ## analog.c:2924:18
 1e0f978:    10 f6 30 e0       	[r14 + 48] = r0			  ## analog.c:2924:18
 1e0f97c:    c0 ff 20 40 14 00 	r0 = 1327136 <uECC_vli_cmp_unsafe+0x3D024 : 144020 >			  ## analog.c:2927:18
 1e0f982:    10 f6 34 e0       	[r14 + 52] = r0			  ## analog.c:2927:18
 1e0f986:    c0 ff ff 2f 3f 00 	r0 = 4141055 <uECC_vli_cmp_unsafe+0x2EC003 : 3f2fff >			  ## analog.c:2930:18
 1e0f98c:    10 f6 38 e0       	[r14 + 56] = r0			  ## analog.c:2930:18
 1e0f990:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2938:18
 1e0f992:    70 be             	r0 &= 4026531839			  ## analog.c:2938:18
 1e0f994:    a8 48             	[r4 + 40] = r0			  ## analog.c:2938:18
 1e0f996:    a0 48             	r0 = [r4 + 40]			  ## analog.c:2939:18
 1e0f998:    f0 be             	r0 &= 3758096383			  ## analog.c:2939:18
 1e0f99a:    a8 48             	[r4 + 40] = r0			  ## analog.c:2939:18
 1e0f99c:    bf f3 1f fb       	call -2498 <bt_analog_part_init : 1e0efde >			  ## analog.c:2007:5
 1e0f9a0:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:370:23
 1e0f9a4:    30 fd f0 0c       	r0 = r0 & 268435455			  ## analog.c:370:23
 1e0f9a8:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:370:23
 1e0f9ac:    0b f4 40 fc       	[r15 + 44] |= 1073741824			  ## analog.c:371:23
 1e0f9b0:    c0 ff 52 52 dd 00 	r0 = 14504530 <uECC_vli_cmp_unsafe+0xCCE256 : dd5252 >			  ## analog.c:373:23
 1e0f9b6:    10 f6 30 f0       	[r15 + 48] = r0			  ## analog.c:373:23
 1e0f9ba:    c0 ff 77 a0 01 00 	r0 = 106615 <text_size+0x1E97 : 1a077 >			  ## analog.c:382:23
 1e0f9c0:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:382:23
 1e0f9c4:    0a f4 08 fc       	[r15 + 40] |= 134217728			  ## analog.c:391:23
 1e0f9c8:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:393:23
 1e0f9cc:    01 fb 7f f8       	r1 = -1921 <bank_code_load_addr+0x1E4FD3 : 1fff87f >			  ## analog.c:393:23
 1e0f9d0:    50 b3             	r0 &= r1			  ## analog.c:393:23
 1e0f9d2:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:393:23
 1e0f9d6:    15 f4 80 f9       	[r15 + 84] |= 128			  ## analog.c:394:23
 1e0f9da:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:317:23
 1e0f9de:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:317:23
 1e0f9e2:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:317:23
 1e0f9e6:    0d f4 4a f9       	[r15 + 52] |= 74			  ## analog.c:318:23
 1e0f9ea:    7a 70             	r10 = 7			  ## analog.c:318:23
 1e0f9ec:    cb ff ff ff 00 00 	r11 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## analog.c:318:23
 1e0f9f2:    03 70             	r3 = 0
 1e0f9f4:    89 08             	r9 = r8
 1e0f9f6:    85 08             	r5 = r8
 1e0f9f8:    36 fc ff ff       	r6 = r3 + -1			  ## analog.c:327:31
 1e0f9fc:    00 f6 30 f0       	r0 = [r15 + 48]			  ## analog.c:327:31
 1e0fa00:    30 fd fe 05       	r0 = r0 & 4261675007			  ## analog.c:327:31
 1e0fa04:    a3 05             	r3 = r6.l (u)			  ## analog.c:328:19
 1e0fa06:    10 f6 30 f0       	[r15 + 48] = r0			  ## analog.c:327:31
 1e0fa0a:    a0 08             	r0 = r10			  ## analog.c:327:31
 1e0fa0c:    b3 f2 05 00       	if (r3 == r11) goto 10 <bt_rf_init+0x222 : 1e0fa1a >			  ## analog.c:327:31
 1e0fa10:    90 07             	r0 = -7			  ## analog.c:330:24
 1e0fa12:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x220 : 1e0fa18 >			  ## analog.c:330:24
 1e0fa16:    80 70             	r0 = 8			  ## analog.c:330:24
 1e0fa18:    a0 09             	r0 += r10			  ## analog.c:330:24
 1e0fa1a:    01 f6 30 f0       	r1 = [r15 + 48]
 1e0fa1e:    80 c4             	r0 = r0 << 18
 1e0fa20:    20 fd fe 05       	r0 = r0 & 33292288
 1e0fa24:    50 b2             	r0 |= r1
 1e0fa26:    10 f6 30 f0       	[r15 + 48] = r0
 1e0fa2a:    00 f6 28 f0       	r0 = [r15 + 40]			  ## analog.c:335:31
 1e0fa2e:    70 b1             	r0 &= 4294967291			  ## analog.c:335:31
 1e0fa30:    10 f6 28 f0       	[r15 + 40] = r0			  ## analog.c:335:31
 1e0fa34:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:336:19
 1e0fa38:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:336:32
 1e0fa3c:    8f f3 8a a8       	call 2052372 <delay : 4b54 >			  ## analog.c:336:13
 1e0fa40:    0a f4 04 f9       	[r15 + 40] |= 4			  ## analog.c:337:31
 1e0fa44:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:338:19
 1e0fa48:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:338:32
 1e0fa4c:    8f f3 82 a8       	call 2052356 <delay : 4b54 >			  ## analog.c:338:13
 1e0fa50:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:340:30
 1e0fa54:    01 f6 78 f0       	r1 = [r15 + 120]			  ## analog.c:341:30
 1e0fa58:    02 f6 78 f0       	r2 = [r15 + 120]			  ## analog.c:342:30
 1e0fa5c:    50 b2             	r0 |= r1			  ## analog.c:341:18
 1e0fa5e:    50 b4             	r0 |= r2			  ## analog.c:342:18
 1e0fa60:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:342:18
 1e0fa64:    b3 f2 0c 00       	if (r3 == r11) goto 24 <bt_rf_init+0x288 : 1e0fa80 >			  ## analog.c:342:18
 1e0fa68:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x276 : 1e0fa6e >
 1e0fa6c:    09 08             	r9 = r0			  ## analog.c:348:13
 1e0fa6e:    b6 f0 01 00       	if ((r6 & r11) == 0) goto 2 <bt_rf_init+0x27C : 1e0fa74 >
 1e0fa72:    50 08             	r0 = r5			  ## analog.c:348:13
 1e0fa74:    16 80             	r6 += 1			  ## analog.c:326:23
 1e0fa76:    a1 05             	r1 = r6.l (u)			  ## analog.c:326:23
 1e0fa78:    05 08             	r5 = r0			  ## analog.c:326:23
 1e0fa7a:    21 e0 bf 1f       	if (r1 != 2) goto -130 <bt_rf_init+0x204 : 1e0f9fc >			  ## analog.c:326:23
 1e0fa7e:    03 18             	goto 6 <bt_rf_init+0x28E : 1e0fa86 >			  ## analog.c:326:23
 1e0fa80:    13 70             	r3 = 1
 1e0fa82:    08 08             	r8 = r0
 1e0fa84:    b9 1f             	goto -142 <bt_rf_init+0x200 : 1e0f9f8 >
 1e0fa86:    e6 fd 00 38       	r3 = r8.l (u)			  ## analog.c:352:20
 1e0fa8a:    e6 fd 00 19       	r1 = r9.l (u)			  ## analog.c:352:20
 1e0fa8e:    31 f2 09 10       	if (r1 != r3) goto 18 <bt_rf_init+0x2AC : 1e0faa4 >			  ## analog.c:352:20
 1e0fa92:    21 04             	r1 = r0.l (u)
 1e0fa94:    a0 08             	r0 = r10
 1e0fa96:    31 f2 06 10       	if (r1 != r3) goto 12 <bt_rf_init+0x2AE : 1e0faa6 >
 1e0fa9a:    0a 91             	r10 = r0 + 16			  ## analog.c:325:51
 1e0fa9c:    80 08             	r0 = r8			  ## analog.c:325:51
 1e0fa9e:    8a e7 a8 3f       	if (r10 < 120) goto -176 <bt_rf_init+0x1FA : 1e0f9f2 >			  ## analog.c:325:51
 1e0faa2:    01 18             	goto 2 <bt_rf_init+0x2AE : 1e0faa6 >			  ## analog.c:325:51
 1e0faa4:    a0 08             	r0 = r10
 1e0faa6:    00 fd 0f 09       	r0 = r0 | 15			  ## analog.c:360:12
 1e0faaa:    10 f9 32 c0       	b[r12 + 50] = r0			  ## analog.c:396:45
 1e0faae:    a8 74             	r8 = 74
 1e0fab0:    01 70             	r1 = 0
 1e0fab2:    a2 74             	r2 = 74
 1e0fab4:    03 18             	goto 6 <bt_rf_init+0x2C4 : 1e0fabc >
 1e0fab6:    00 f9 32 c0       	r0 = b[r12 + 50] (u)
 1e0faba:    58 08             	r8 = r5
 1e0fabc:    05 f6 30 f0       	r5 = [r15 + 48]			  ## analog.c:402:27
 1e0fac0:    35 fd fe 55       	r5 = r5 & 4261675007			  ## analog.c:402:27
 1e0fac4:    15 f6 30 f0       	[r15 + 48] = r5			  ## analog.c:402:27
 1e0fac8:    05 f6 30 f0       	r5 = [r15 + 48]			  ## analog.c:403:27
 1e0facc:    60 b0             	r0 = r0 - r1			  ## analog.c:297:52
 1e0face:    80 c4             	r0 = r0 << 18			  ## analog.c:403:31
 1e0fad0:    20 fd fe 05       	r0 = r0 & 33292288			  ## analog.c:403:31
 1e0fad4:    50 ba             	r0 |= r5			  ## analog.c:403:27
 1e0fad6:    10 f6 30 f0       	[r15 + 48] = r0			  ## analog.c:403:27
 1e0fada:    25 08             	r5 = r2			  ## analog.c:403:27
 1e0fadc:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:408:31
 1e0fae0:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:408:31
 1e0fae4:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:408:31
 1e0fae8:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:409:31
 1e0faec:    46 05             	r6 = r5.b0 (u)			  ## analog.c:409:35
 1e0faee:    50 bc             	r0 |= r6			  ## analog.c:409:31
 1e0faf0:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:409:31
 1e0faf4:    00 f6 28 f0       	r0 = [r15 + 40]			  ## analog.c:416:31
 1e0faf8:    70 b1             	r0 &= 4294967291			  ## analog.c:416:31
 1e0fafa:    10 f6 28 f0       	[r15 + 40] = r0			  ## analog.c:416:31
 1e0fafe:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:417:19
 1e0fb02:    00 fe 05 09       	r0 = r0 * 5			  ## analog.c:417:32
 1e0fb06:    8f f3 25 a8       	call 2052170 <delay : 4b54 >			  ## analog.c:417:13
 1e0fb0a:    0a f4 04 f9       	[r15 + 40] |= 4			  ## analog.c:418:31
 1e0fb0e:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:419:19
 1e0fb12:    00 fe 3c 09       	r0 = r0 * 60			  ## analog.c:419:32
 1e0fb16:    8f f3 1d a8       	call 2052154 <delay : 4b54 >			  ## analog.c:419:13
 1e0fb1a:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:421:30
 1e0fb1e:    06 f6 78 f0       	r6 = [r15 + 120]			  ## analog.c:422:30
 1e0fb22:    03 f6 78 f0       	r3 = [r15 + 120]			  ## analog.c:423:30
 1e0fb26:    50 bc             	r0 |= r6			  ## analog.c:422:18
 1e0fb28:    50 b6             	r0 |= r3			  ## analog.c:423:18
 1e0fb2a:    82 fd 08 00       	r0 = uextra(r0, p:1, l:2)			  ## analog.c:425:17
 1e0fb2e:    10 e0 0f 00       	if (r0 == 1) goto 30 <bt_rf_init+0x358 : 1e0fb50 >			  ## analog.c:425:17
 1e0fb32:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_rf_init+0x348 : 1e0fb40 >
 1e0fb36:    15 80             	r5 += 1			  ## analog.c:438:25
 1e0fb38:    40 05             	r0 = r5.b0 (u)			  ## analog.c:438:25
 1e0fb3a:    70 ea cf 9f       	if (r0 <= 167) goto -98 <bt_rf_init+0x2E4 : 1e0fadc >			  ## analog.c:438:25
 1e0fb3e:    07 18             	goto 14 <bt_rf_init+0x356 : 1e0fb4e >			  ## analog.c:438:25
 1e0fb40:    10 9a             	r0 = r5 + 1			  ## analog.c:430:25
 1e0fb42:    03 04             	r3 = r0.b0 (u)			  ## analog.c:430:25
 1e0fb44:    52 08             	r2 = r5			  ## analog.c:430:25
 1e0fb46:    05 08             	r5 = r0			  ## analog.c:430:25
 1e0fb48:    73 ea c8 9f       	if (r3 <= 167) goto -112 <bt_rf_init+0x2E4 : 1e0fadc >			  ## analog.c:430:25
 1e0fb4c:    72 7a             	r2 = 167
 1e0fb4e:    75 7a             	r5 = 167
 1e0fb50:    80 fb c0 01       	r0 = r1 + r12			  ## analog.c:446:9
 1e0fb54:    83 04             	r3 = r2.b0 (u)			  ## analog.c:446:48
 1e0fb56:    e4 fd 00 68       	r6 = r8.b0 (u)			  ## analog.c:446:37
 1e0fb5a:    63 09             	r3 += r6			  ## analog.c:446:46
 1e0fb5c:    33 80             	r3 += 3			  ## analog.c:446:54
 1e0fb5e:    5b d0             	r3 = r3 >> 1			  ## analog.c:446:59
 1e0fb60:    11 80             	r1 += 1			  ## analog.c:400:42
 1e0fb62:    3b 61             	b[r0 + 19] = r3			  ## analog.c:446:34
 1e0fb64:    f1 e1 a7 1f       	if (r1 != 31) goto -178 <bt_rf_init+0x2BE : 1e0fab6 >			  ## analog.c:446:34
 1e0fb68:    00 f6 34 f0       	r0 = [r15 + 52]			  ## analog.c:450:23
 1e0fb6c:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:450:23
 1e0fb70:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:450:23
 1e0fb74:    0d f4 9b f9       	[r15 + 52] |= 155			  ## analog.c:451:23
 1e0fb78:    b0 79             	r0 = 155			  ## analog.c:452:13
 1e0fb7a:    bf f3 8f fa       	call -2786 <get_bta_pll_bank : 1e0f09c >			  ## analog.c:452:13
 1e0fb7e:    01 f6 30 f0       	r1 = [r15 + 48]			  ## analog.c:453:23
 1e0fb82:    31 fd fe 15       	r1 = r1 & 4261675007			  ## analog.c:453:23
 1e0fb86:    11 f6 30 f0       	[r15 + 48] = r1			  ## analog.c:453:23
 1e0fb8a:    01 f6 30 f0       	r1 = [r15 + 48]			  ## analog.c:454:23
 1e0fb8e:    82 c4             	r2 = r0 << 18			  ## analog.c:454:27
 1e0fb90:    22 fd fe 25       	r2 = r2 & 33292288			  ## analog.c:454:27
 1e0fb94:    51 b4             	r1 |= r2			  ## analog.c:454:23
 1e0fb96:    11 f6 30 f0       	[r15 + 48] = r1			  ## analog.c:454:23
 1e0fb9a:    01 f6 28 f0       	r1 = [r15 + 40]			  ## analog.c:456:23
 1e0fb9e:    f1 bd             	r1 &= 4160749567			  ## analog.c:456:23
 1e0fba0:    11 f6 28 f0       	[r15 + 40] = r1			  ## analog.c:456:23
 1e0fba4:    f0 b3             	r0 &= 4294967167			  ## analog.c:2025:26
 1e0fba6:    b1 fc 53 46       	r1 = r11 + 18003			  ## analog.c:2024:53
 1e0fbaa:    c7 fd 90 10       	r1 <= insert(r0, p:18, l:7)			  ## analog.c:2024:53
 1e0fbae:    11 f6 30 f0       	[r15 + 48] = r1			  ## analog.c:2018:23
 1e0fbb2:    c0 ff 77 e0 39 03 	r0 = 54124663 <uECC_vli_cmp_unsafe+0x129707B : 139e077 >			  ## analog.c:2027:23
 1e0fbb8:    10 f6 34 f0       	[r15 + 52] = r0			  ## analog.c:2027:23
 1e0fbbc:    8e f4 ff fc       	[r15 + 56] &= 4278190080			  ## analog.c:2036:23
 1e0fbc0:    00 f6 38 f0       	r0 = [r15 + 56]			  ## analog.c:2037:23
 1e0fbc4:    c1 ff 55 55 25 00 	r1 = 2446677 <uECC_vli_cmp_unsafe+0x14E559 : 255555 >			  ## analog.c:2037:23
 1e0fbca:    50 b2             	r0 |= r1			  ## analog.c:2037:23
 1e0fbcc:    10 f6 38 f0       	[r15 + 56] = r0			  ## analog.c:2037:23
 1e0fbd0:    0a f4 01 f9       	[r15 + 40] |= 1			  ## analog.c:2039:23
 1e0fbd4:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:2040:17
 1e0fbd8:    00 fe 96 09       	r0 = r0 * 150			  ## analog.c:2040:15
 1e0fbdc:    8f f3 ba a7       	call 2051956 <delay : 4b54 >			  ## analog.c:2040:5
 1e0fbe0:    0d f4 80 fc       	[r15 + 52] |= 2147483648			  ## analog.c:2041:23
 1e0fbe4:    00 f9 06 c0       	r0 = b[r12 + 6] (u)			  ## analog.c:2042:16
 1e0fbe8:    00 fe 0a 09       	r0 = r0 * 10			  ## analog.c:2042:14
 1e0fbec:    8f f3 b2 a7       	call 2051940 <delay : 4b54 >			  ## analog.c:2042:5
 1e0fbf0:    0a f4 04 f9       	[r15 + 40] |= 4			  ## analog.c:2043:23
 1e0fbf4:    bf f3 69 fa       	call -2862 <bt_fre_offset_value_init : 1e0f0ca >			  ## analog.c:238:5
 1e0fbf8:    11 a1             	r1 = sp + 17			  ## analog.c:238:5
 1e0fbfa:    d0 75             	r0 = 93			  ## analog.c:242:21
 1e0fbfc:    32 72             	r2 = 35			  ## analog.c:242:21
 1e0fbfe:    bf f3 a4 e5       	call -13496 <syscfg_read : 1e0c74a >			  ## analog.c:242:21
 1e0fc02:    01 04             	r1 = r0.b0 (u)			  ## analog.c:243:13
 1e0fc04:    c0 ff 3c 29 00 00 	r0 = 10556 <tws_bulk_pool_end : 293c >			  ## analog.c:243:13
 1e0fc0a:    c6 ff 53 29 00 00 	r6 = 10579 <ldo_trim_res : 2953 >			  ## analog.c:243:13
 1e0fc10:    31 e2 10 10       	if (r1 != 35) goto 32 <bt_rf_init+0x43C : 1e0fc34 >			  ## analog.c:243:13
 1e0fc14:    14 a1             	r4 = sp + 17
 1e0fc16:    62 71             	r2 = 22			  ## analog.c:244:13
 1e0fc18:    41 08             	r1 = r4			  ## analog.c:244:13
 1e0fc1a:    97 f3 63 b9       	call 3109574 <memcpy : 106ee4 >			  ## analog.c:244:13
 1e0fc1e:    61 99             	r1 = r4 + 22			  ## analog.c:245:56
 1e0fc20:    d2 70             	r2 = 13			  ## analog.c:245:13
 1e0fc22:    60 08             	r0 = r6			  ## analog.c:245:13
 1e0fc24:    97 f3 5e b9       	call 3109564 <memcpy : 106ee4 >			  ## analog.c:245:13
 1e0fc28:    bf f3 7c fa       	call -2824 <reset_trim_info : 1e0f124 >			  ## analog.c:246:13
 1e0fc2c:    60 08             	r0 = r6			  ## analog.c:247:13
 1e0fc2e:    31 14             	call -1950 <set_ldo_trim_res : 1e0f492 >			  ## analog.c:247:13
 1e0fc30:    c0 f3 08 08       	goto 4112 <.GJTIE705_1_1_+0xE66 : 1e10c44 >			  ## analog.c:247:13
 1e0fc34:    bf f3 ec fa       	call -2600 <txtrim_analog_init : 1e0f210 >			  ## analog.c:1116:5
 1e0fc38:    01 70             	r1 = 0			  ## analog.c:1116:5
 1e0fc3a:    11 f6 08 e0       	[r14 + 8] = r1			  ## analog.c:1118:17
 1e0fc3e:    20 70             	r0 = 2			  ## analog.c:1119:5
 1e0fc40:    8f f3 88 a7       	call 2051856 <delay : 4b54 >			  ## analog.c:1119:5
 1e0fc44:    11 f6 04 e0       	[r14 + 4] = r1			  ## analog.c:1120:17
 1e0fc48:    20 70             	r0 = 2			  ## analog.c:1121:5
 1e0fc4a:    8f f3 83 a7       	call 2051846 <delay : 4b54 >			  ## analog.c:1121:5
 1e0fc4e:    11 f6 00 e0       	[r14 + 0] = r1			  ## analog.c:1122:17
 1e0fc52:    20 70             	r0 = 2			  ## analog.c:1123:5
 1e0fc54:    8f f3 7e a7       	call 2051836 <delay : 4b54 >			  ## analog.c:1123:5
 1e0fc58:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1124:20
 1e0fc5c:    20 70             	r0 = 2			  ## analog.c:1125:5
 1e0fc5e:    8f f3 79 a7       	call 2051826 <delay : 4b54 >			  ## analog.c:1125:5
 1e0fc62:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1126:13
 1e0fc66:    20 70             	r0 = 2			  ## analog.c:1127:5
 1e0fc68:    8f f3 74 a7       	call 2051816 <delay : 4b54 >			  ## analog.c:1127:5
 1e0fc6c:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1128:13
 1e0fc70:    20 70             	r0 = 2			  ## analog.c:1129:5
 1e0fc72:    8f f3 6f a7       	call 2051806 <delay : 4b54 >			  ## analog.c:1129:5
 1e0fc76:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:1130:17
 1e0fc7a:    20 70             	r0 = 2			  ## analog.c:1131:5
 1e0fc7c:    8f f3 6a a7       	call 2051796 <delay : 4b54 >			  ## analog.c:1131:5
 1e0fc80:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1132:17
 1e0fc84:    20 70             	r0 = 2			  ## analog.c:1133:5
 1e0fc86:    8f f3 65 a7       	call 2051786 <delay : 4b54 >			  ## analog.c:1133:5
 1e0fc8a:    20 70             	r0 = 2			  ## analog.c:1135:5
 1e0fc8c:    8f f3 62 a7       	call 2051780 <delay : 4b54 >			  ## analog.c:1135:5
 1e0fc90:    20 70             	r0 = 2			  ## analog.c:1137:5
 1e0fc92:    8f f3 5f a7       	call 2051774 <delay : 4b54 >			  ## analog.c:1137:5
 1e0fc96:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:1138:17
 1e0fc9a:    20 70             	r0 = 2			  ## analog.c:1139:5
 1e0fc9c:    8f f3 5a a7       	call 2051764 <delay : 4b54 >			  ## analog.c:1139:5
 1e0fca0:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1140:17
 1e0fca4:    20 70             	r0 = 2			  ## analog.c:1141:5
 1e0fca6:    8f f3 55 a7       	call 2051754 <delay : 4b54 >			  ## analog.c:1141:5
 1e0fcaa:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1142:17
 1e0fcae:    f0 b4             	r0 &= 4294966783			  ## analog.c:1142:17
 1e0fcb0:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1142:17
 1e0fcb4:    20 70             	r0 = 2			  ## analog.c:1143:5
 1e0fcb6:    8f f3 4d a7       	call 2051738 <delay : 4b54 >			  ## analog.c:1143:5
 1e0fcba:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1144:17
 1e0fcbe:    20 70             	r0 = 2			  ## analog.c:1145:5
 1e0fcc0:    8f f3 48 a7       	call 2051728 <delay : 4b54 >			  ## analog.c:1145:5
 1e0fcc4:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1146:17
 1e0fcc8:    20 70             	r0 = 2			  ## analog.c:1147:5
 1e0fcca:    8f f3 43 a7       	call 2051718 <delay : 4b54 >			  ## analog.c:1147:5
 1e0fcce:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1148:17
 1e0fcd2:    20 70             	r0 = 2			  ## analog.c:1149:5
 1e0fcd4:    8f f3 3e a7       	call 2051708 <delay : 4b54 >			  ## analog.c:1149:5
 1e0fcd8:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1150:17
 1e0fcdc:    20 70             	r0 = 2			  ## analog.c:1151:5
 1e0fcde:    8f f3 39 a7       	call 2051698 <delay : 4b54 >			  ## analog.c:1151:5
 1e0fce2:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1152:17
 1e0fce6:    20 70             	r0 = 2			  ## analog.c:1153:5
 1e0fce8:    8f f3 34 a7       	call 2051688 <delay : 4b54 >			  ## analog.c:1153:5
 1e0fcec:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1154:17
 1e0fcf0:    20 70             	r0 = 2			  ## analog.c:1155:5
 1e0fcf2:    8f f3 2f a7       	call 2051678 <delay : 4b54 >			  ## analog.c:1155:5
 1e0fcf6:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1156:17
 1e0fcfa:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1163:17
 1e0fcfe:    f0 b8             	r0 &= 4294836223			  ## analog.c:1163:17
 1e0fd00:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1163:17
 1e0fd04:    50 70             	r0 = 5			  ## analog.c:1164:5
 1e0fd06:    8f f3 25 a7       	call 2051658 <delay : 4b54 >			  ## analog.c:1164:5
 1e0fd0a:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1165:17
 1e0fd0e:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1166:13
 1e0fd12:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <bt_rf_init+0x516 : 1e0fd0e >			  ## analog.c:1166:5
 1e0fd16:    00 70             	r0 = 0
 1e0fd18:    38 02             	[sp+12] = r0
 1e0fd1a:    f3 07             	r3 = -1
 1e0fd1c:    3f 70             	r15 = 3
 1e0fd1e:    0d fb 00 fc       	r13 = -1024 <bank_code_load_addr+0x1E5354 : 1fffc00 >
 1e0fd22:    09 fb ff 03       	r9 = 1023 <BTCTLER_LE_RAM_TOTAL+0x21 : 3ff >
 1e0fd26:    cb ff ff 03 f0 ff 	r11 = 4293919743 <bank_code_load_addr+0xE5B53 : 1f003ff >
 1e0fd2c:    4c fb 10 db       	r12 = r13 + 1048576
 1e0fd30:    0a 70             	r10 = 0
 1e0fd32:    01 fb 9c ff       	r1 = -100 <bank_code_load_addr+0x1E56F0 : 1ffff9c >
 1e0fd36:    32 08             	r2 = r3
 1e0fd38:    06 08             	r6 = r0
 1e0fd3a:    e4 fd 00 5f       	r5 = r15.b0 (u)
 1e0fd3e:    35 e0 24 80       	if (r5 > 3) goto 72 <.GJTIE705_0_0_+0x42 : 1e0fd8a >
 1e0fd42:    a5 00             	tbb [r5]


.GJTIS705_0_0_:
 1e0fd44:    02     < 2 : 0x2 >
 1e0fd45:    0b     < 11 : 0xB >
 1e0fd46:    02     < 2 : 0x2 >
 1e0fd47:    15     < 21 : 0x15 >
 1e0fd48:    20 48             	r0 = [r4 + 8]
 1e0fd4a:    e2 fd d0 00       	r0 = r0 & r13
 1e0fd4e:    28 48             	[r4 + 8] = r0
 1e0fd50:    20 48             	r0 = [r4 + 8]
 1e0fd52:    e2 fd 90 31       	r3 = r1 & r9
 1e0fd56:    50 b6             	r0 |= r3
 1e0fd58:    17 18             	goto 46 <.GJTIE705_0_0_+0x40 : 1e0fd88 >
 1e0fd5a:    20 48             	r0 = [r4 + 8]			  ## analog.c:1174:29
 1e0fd5c:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1174:29
 1e0fd60:    28 48             	[r4 + 8] = r0			  ## analog.c:1174:29
 1e0fd62:    20 48             	r0 = [r4 + 8]			  ## analog.c:1175:29
 1e0fd64:    8b c2             	r3 = r1 << 10			  ## analog.c:1175:32
 1e0fd66:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1175:32
 1e0fd6a:    50 b6             	r0 |= r3			  ## analog.c:1175:29
 1e0fd6c:    0d 18             	goto 26 <.GJTIE705_0_0_+0x40 : 1e0fd88 >			  ## analog.c:1175:29
 1e0fd6e:    20 48             	r0 = [r4 + 8]			  ## analog.c:1180:29
 1e0fd70:    e2 fd b0 00       	r0 = r0 & r11			  ## analog.c:1180:29
 1e0fd74:    28 48             	[r4 + 8] = r0			  ## analog.c:1180:29
 1e0fd76:    20 48             	r0 = [r4 + 8]			  ## analog.c:1181:29
 1e0fd78:    8b c2             	r3 = r1 << 10			  ## analog.c:1181:32
 1e0fd7a:    e2 fd c0 33       	r3 = r3 & r12			  ## analog.c:1181:32
 1e0fd7e:    50 b6             	r0 |= r3			  ## analog.c:1181:29
 1e0fd80:    28 48             	[r4 + 8] = r0			  ## analog.c:1181:29
 1e0fd82:    20 48             	r0 = [r4 + 8]			  ## analog.c:1182:29
 1e0fd84:    e2 fd d0 00       	r0 = r0 & r13			  ## analog.c:1182:29
 1e0fd88:    28 48             	[r4 + 8] = r0
 1e0fd8a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1186:25
 1e0fd8e:    f0 b8             	r0 &= 4294836223			  ## analog.c:1186:25
 1e0fd90:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1186:25
 1e0fd94:    50 70             	r0 = 5			  ## analog.c:1187:13
 1e0fd96:    8f f3 dd a6       	call 2051514 <delay : 4b54 >			  ## analog.c:1187:13
 1e0fd9a:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1188:25
 1e0fd9e:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1189:21
 1e0fda2:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE705_0_0_+0x56 : 1e0fd9e >			  ## analog.c:1189:13
 1e0fda6:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1192:24
 1e0fdaa:    03 f6 14 e0       	r3 = [r14 + 20]			  ## analog.c:1194:24
 1e0fdae:    b0 fd 40 83       	r8 = sextra(r3, p:8, l:16)			  ## analog.c:1195:29
 1e0fdb2:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1193:29
 1e0fdb6:    03 0e             	r3 = r0 * r0			  ## analog.c:1196:28
 1e0fdb8:    80 fe 80 38       	r3 += r8 * r8			  ## analog.c:1196:37
 1e0fdbc:    10 08             	r0 = r1			  ## analog.c:1198:17
 1e0fdbe:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE705_0_0_+0x7C : 1e0fdc4 >
 1e0fdc2:    60 08             	r0 = r6			  ## analog.c:1198:17
 1e0fdc4:    23 f2 01 30       	if (r3 < r2) goto 2 <.GJTIE705_0_0_+0x82 : 1e0fdca >
 1e0fdc8:    23 08             	r3 = r2			  ## analog.c:1198:17
 1e0fdca:    11 80             	r1 += 1			  ## analog.c:1169:34
 1e0fdcc:    32 08             	r2 = r3			  ## analog.c:1169:34
 1e0fdce:    06 08             	r6 = r0			  ## analog.c:1169:34
 1e0fdd0:    41 e6 b3 1f       	if (r1 != 100) goto -154 <bt_rf_init+0x542 : 1e0fd3a >			  ## analog.c:1169:34
 1e0fdd4:    35 e0 17 80       	if (r5 > 3) goto 46 <.GJTIE705_1_1_+0x28 : 1e0fe06 >
 1e0fdd8:    a5 00             	tbb [r5]


.GJTIS705_1_1_:
 1e0fdda:    02     < 2 : 0x2 >
 1e0fddb:    0a     < 10 : 0xA >
 1e0fddc:    02     < 2 : 0x2 >
 1e0fddd:    0a     < 10 : 0xA >
 1e0fdde:    21 48             	r1 = [r4 + 8]			  ## analog.c:1204:25
 1e0fde0:    e2 fd d0 11       	r1 = r1 & r13			  ## analog.c:1204:25
 1e0fde4:    29 48             	[r4 + 8] = r1			  ## analog.c:1204:25
 1e0fde6:    e2 fd 90 10       	r1 = r0 & r9			  ## analog.c:1205:28
 1e0fdea:    0a 08             	r10 = r0			  ## analog.c:1205:28
 1e0fdec:    08 18             	goto 16 <.GJTIE705_1_1_+0x20 : 1e0fdfe >			  ## analog.c:1205:28
 1e0fdee:    21 48             	r1 = [r4 + 8]			  ## analog.c:1210:25
 1e0fdf0:    e2 fd b0 11       	r1 = r1 & r11			  ## analog.c:1210:25
 1e0fdf4:    29 48             	[r4 + 8] = r1			  ## analog.c:1210:25
 1e0fdf6:    81 c2             	r1 = r0 << 10			  ## analog.c:1211:28
 1e0fdf8:    e2 fd c0 11       	r1 = r1 & r12			  ## analog.c:1211:28
 1e0fdfc:    38 02             	[sp+12] = r0			  ## analog.c:1211:28
 1e0fdfe:    22 48             	r2 = [r4 + 8]
 1e0fe00:    51 b4             	r1 |= r2
 1e0fe02:    29 48             	[r4 + 8] = r1
 1e0fe04:    f3 07             	r3 = -1
 1e0fe06:    f1 fc ff ff       	r1 = r15 + -1			  ## analog.c:1168:26
 1e0fe0a:    5f 04             	r15 = r1.b0 (s)			  ## analog.c:1168:26
 1e0fe0c:    ff ef 91 cf       	ifs (r15 > -1) goto -222 <bt_rf_init+0x53A : 1e0fd32 >			  ## analog.c:1168:26
 1e0fe10:    cb ff 3c 29 00 00 	r11 = 10556 <tws_bulk_pool_end : 293c >
 1e0fe16:    1a f9 00 b0       	b[r11 + 0] = r10			  ## analog.c:1221:22
 1e0fe1a:    f2 fd 40 0a       	r0 = r10 >> 8			  ## analog.c:1221:22
 1e0fe1e:    10 f9 01 b0       	b[r11 + 1] = r0			  ## analog.c:1221:22
 1e0fe22:    31 02             	r1 = [sp+12]			  ## analog.c:1221:22
 1e0fe24:    08 d2             	r0 = r1 >> 8			  ## analog.c:1222:22
 1e0fe26:    10 f9 03 b0       	b[r11 + 3] = r0			  ## analog.c:1222:22
 1e0fe2a:    11 f9 02 b0       	b[r11 + 2] = r1			  ## analog.c:1222:22
 1e0fe2e:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1224:20
 1e0fe30:    70 b8             	r0 &= 4294901759			  ## analog.c:1224:20
 1e0fe32:    28 4e             	[r7 + 8] = r0			  ## analog.c:1224:20
 1e0fe34:    20 70             	r0 = 2			  ## analog.c:1225:5
 1e0fe36:    8f f3 8d a6       	call 2051354 <delay : 4b54 >			  ## analog.c:1225:5
 1e0fe3a:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1226:13
 1e0fe3c:    f0 b0             	r0 &= 4294967293			  ## analog.c:1226:13
 1e0fe3e:    f8 49             	[r4 + 124] = r0			  ## analog.c:1226:13
 1e0fe40:    20 70             	r0 = 2			  ## analog.c:1227:5
 1e0fe42:    8f f3 87 a6       	call 2051342 <delay : 4b54 >			  ## analog.c:1227:5
 1e0fe46:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1228:13
 1e0fe48:    70 b1             	r0 &= 4294967291			  ## analog.c:1228:13
 1e0fe4a:    f8 49             	[r4 + 124] = r0			  ## analog.c:1228:13
 1e0fe4c:    20 70             	r0 = 2			  ## analog.c:1229:5
 1e0fe4e:    8f f3 81 a6       	call 2051330 <delay : 4b54 >			  ## analog.c:1229:5
 1e0fe52:    05 70             	r5 = 0			  ## analog.c:1229:5
 1e0fe54:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1230:45
 1e0fe58:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1230:31
 1e0fe5c:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1230:17
 1e0fe60:    20 70             	r0 = 2			  ## analog.c:1231:5
 1e0fe62:    8f f3 77 a6       	call 2051310 <delay : 4b54 >			  ## analog.c:1231:5
 1e0fe66:    90 48             	r0 = [r4 + 36]			  ## analog.c:1232:17
 1e0fe68:    f0 b5             	r0 &= 4294965247			  ## analog.c:1232:17
 1e0fe6a:    98 48             	[r4 + 36] = r0			  ## analog.c:1232:17
 1e0fe6c:    bf f3 d0 f9       	call -3168 <txtrim_analog_init : 1e0f210 >			  ## analog.c:1240:5
 1e0fe70:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1241:45
 1e0fe74:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1241:31
 1e0fe78:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1241:17
 1e0fe7c:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:1243:20
 1e0fe80:    20 70             	r0 = 2			  ## analog.c:1244:5
 1e0fe82:    8f f3 67 a6       	call 2051278 <delay : 4b54 >			  ## analog.c:1244:5
 1e0fe86:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:1245:13
 1e0fe8a:    20 70             	r0 = 2			  ## analog.c:1246:5
 1e0fe8c:    8f f3 62 a6       	call 2051268 <delay : 4b54 >			  ## analog.c:1246:5
 1e0fe90:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:1247:13
 1e0fe94:    20 70             	r0 = 2			  ## analog.c:1248:5
 1e0fe96:    8f f3 5d a6       	call 2051258 <delay : 4b54 >			  ## analog.c:1248:5
 1e0fe9a:    02 f4 15 e9       	[r14 + 8] |= 21			  ## analog.c:1249:17
 1e0fe9e:    20 70             	r0 = 2			  ## analog.c:1250:5
 1e0fea0:    8f f3 58 a6       	call 2051248 <delay : 4b54 >			  ## analog.c:1250:5
 1e0fea4:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:1251:17
 1e0fea8:    20 70             	r0 = 2			  ## analog.c:1252:5
 1e0feaa:    8f f3 53 a6       	call 2051238 <delay : 4b54 >			  ## analog.c:1252:5
 1e0feae:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1253:17
 1e0feb2:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1253:17
 1e0feb6:    20 70             	r0 = 2			  ## analog.c:1254:5
 1e0feb8:    8f f3 4c a6       	call 2051224 <delay : 4b54 >			  ## analog.c:1254:5
 1e0febc:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:1255:17
 1e0fec0:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:1255:17
 1e0fec4:    20 70             	r0 = 2			  ## analog.c:1256:5
 1e0fec6:    8f f3 45 a6       	call 2051210 <delay : 4b54 >			  ## analog.c:1256:5
 1e0feca:    00 f4 2a e9       	[r14 + 0] |= 42			  ## analog.c:1257:17
 1e0fece:    20 70             	r0 = 2			  ## analog.c:1258:5
 1e0fed0:    8f f3 40 a6       	call 2051200 <delay : 4b54 >			  ## analog.c:1258:5
 1e0fed4:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:1259:17
 1e0fed8:    20 70             	r0 = 2			  ## analog.c:1260:5
 1e0feda:    8f f3 3b a6       	call 2051190 <delay : 4b54 >			  ## analog.c:1260:5
 1e0fede:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1261:17
 1e0fee2:    f0 b4             	r0 &= 4294966783			  ## analog.c:1261:17
 1e0fee4:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1261:17
 1e0fee8:    20 70             	r0 = 2			  ## analog.c:1262:5
 1e0feea:    8f f3 33 a6       	call 2051174 <delay : 4b54 >			  ## analog.c:1262:5
 1e0feee:    00 f4 0c ea       	[r14 + 0] |= 3072			  ## analog.c:1263:17
 1e0fef2:    20 70             	r0 = 2			  ## analog.c:1264:5
 1e0fef4:    8f f3 2e a6       	call 2051164 <delay : 4b54 >			  ## analog.c:1264:5
 1e0fef8:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:1265:17
 1e0fefc:    20 70             	r0 = 2			  ## analog.c:1266:5
 1e0fefe:    8f f3 29 a6       	call 2051154 <delay : 4b54 >			  ## analog.c:1266:5
 1e0ff02:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1267:17
 1e0ff06:    20 70             	r0 = 2			  ## analog.c:1268:5
 1e0ff08:    8f f3 24 a6       	call 2051144 <delay : 4b54 >			  ## analog.c:1268:5
 1e0ff0c:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:1269:17
 1e0ff10:    20 70             	r0 = 2			  ## analog.c:1270:5
 1e0ff12:    8f f3 1f a6       	call 2051134 <delay : 4b54 >			  ## analog.c:1270:5
 1e0ff16:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:1271:17
 1e0ff1a:    20 70             	r0 = 2			  ## analog.c:1272:5
 1e0ff1c:    8f f3 1a a6       	call 2051124 <delay : 4b54 >			  ## analog.c:1272:5
 1e0ff20:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:1273:17
 1e0ff24:    20 70             	r0 = 2			  ## analog.c:1274:5
 1e0ff26:    8f f3 15 a6       	call 2051114 <delay : 4b54 >			  ## analog.c:1274:5
 1e0ff2a:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:1275:17
 1e0ff2e:    40 48             	r0 = [r4 + 16]			  ## analog.c:1285:17
 1e0ff30:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1285:17
 1e0ff34:    48 48             	[r4 + 16] = r0			  ## analog.c:1285:17
 1e0ff36:    04 f4 40 4a       	[r4 + 16] |= 16384			  ## analog.c:1286:17
 1e0ff3a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1290:17
 1e0ff3e:    f0 b8             	r0 &= 4294836223			  ## analog.c:1290:17
 1e0ff40:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1290:17
 1e0ff44:    20 70             	r0 = 2			  ## analog.c:1291:5
 1e0ff46:    8f f3 05 a6       	call 2051082 <delay : 4b54 >			  ## analog.c:1291:5
 1e0ff4a:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1292:17
 1e0ff4e:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1293:13
 1e0ff52:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE705_1_1_+0x170 : 1e0ff4e >			  ## analog.c:1293:5
 1e0ff56:    40 48             	r0 = [r4 + 16]
 1e0ff58:    30 fd ff 09       	r0 = r0 & 4294967040
 1e0ff5c:    48 48             	[r4 + 16] = r0
 1e0ff5e:    08 70             	r8 = 0
 1e0ff60:    f3 07             	r3 = -1
 1e0ff62:    e2 71             	r2 = 30
 1e0ff64:    ca ff 00 19 1e 00 	r10 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e0ff6a:    40 48             	r0 = [r4 + 16]			  ## analog.c:1297:21
 1e0ff6c:    50 b4             	r0 |= r2			  ## analog.c:1297:21
 1e0ff6e:    48 48             	[r4 + 16] = r0			  ## analog.c:1297:21
 1e0ff70:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:1299:21
 1e0ff74:    85 08             	r5 = r8			  ## analog.c:1299:21
 1e0ff76:    f0 b8             	r0 &= 4294836223			  ## analog.c:1299:21
 1e0ff78:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1299:21
 1e0ff7c:    20 70             	r0 = 2			  ## analog.c:1300:9
 1e0ff7e:    8f f3 e9 a5       	call 2051026 <delay : 4b54 >			  ## analog.c:1300:9
 1e0ff82:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1301:21
 1e0ff86:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1302:17
 1e0ff8a:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE705_1_1_+0x1A8 : 1e0ff86 >			  ## analog.c:1302:9
 1e0ff8e:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1305:20
 1e0ff92:    01 f6 14 e0       	r1 = [r14 + 20]			  ## analog.c:1307:20
 1e0ff96:    46 48             	r6 = [r4 + 16]			  ## analog.c:1307:20
 1e0ff98:    36 fd ff 69       	r6 = r6 & 4294967040			  ## analog.c:1307:20
 1e0ff9c:    b0 fd 40 11       	r1 = sextra(r1, p:8, l:16)			  ## analog.c:1308:25
 1e0ffa0:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1306:25
 1e0ffa4:    00 0e             	r0 = r0 * r0			  ## analog.c:1309:24
 1e0ffa6:    80 fe 10 01       	r0 += r1 * r1			  ## analog.c:1309:33
 1e0ffaa:    4e 48             	[r4 + 16] = r6
 1e0ffac:    28 08             	r8 = r2			  ## analog.c:1311:13
 1e0ffae:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE705_1_1_+0x1D6 : 1e0ffb4 >			  ## analog.c:1311:13
 1e0ffb2:    58 08             	r8 = r5			  ## analog.c:1311:13
 1e0ffb4:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE705_1_1_+0x1DC : 1e0ffba >
 1e0ffb8:    30 08             	r0 = r3			  ## analog.c:1311:13
 1e0ffba:    12 80             	r2 += 1			  ## analog.c:1295:27
 1e0ffbc:    03 08             	r3 = r0			  ## analog.c:1295:27
 1e0ffbe:    a2 e5 d4 1f       	if (r2 != 90) goto -88 <.GJTIE705_1_1_+0x18C : 1e0ff6a >
 1e0ffc2:    40 48             	r0 = [r4 + 16]			  ## analog.c:1320:17
 1e0ffc4:    e4 fd 00 28       	r2 = r8.b0 (u)			  ## analog.c:1320:21
 1e0ffc8:    50 b4             	r0 |= r2			  ## analog.c:1320:17
 1e0ffca:    48 48             	[r4 + 16] = r0			  ## analog.c:1320:17
 1e0ffcc:    f2 fd 40 08       	r0 = r8 >> 8			  ## analog.c:1326:22
 1e0ffd0:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1326:22
 1e0ffd4:    18 f9 04 b0       	b[r11 + 4] = r8			  ## analog.c:1326:22
 1e0ffd8:    40 48             	r0 = [r4 + 16]			  ## analog.c:1328:17
 1e0ffda:    30 fd ff 0b       	r0 = r0 & 4278255615			  ## analog.c:1328:17
 1e0ffde:    48 48             	[r4 + 16] = r0			  ## analog.c:1328:17
 1e0ffe0:    40 48             	r0 = [r4 + 16]			  ## analog.c:1329:17
 1e0ffe2:    48 48             	[r4 + 16] = r0			  ## analog.c:1329:17
 1e0ffe4:    40 48             	r0 = [r4 + 16]
 1e0ffe6:    30 fd ff 0b       	r0 = r0 & 4278255615
 1e0ffea:    48 48             	[r4 + 16] = r0
 1e0ffec:    f3 07             	r3 = -1
 1e0ffee:    c2 ff e2 ff 00 00 	r2 = 65506 <_IRQ_MEM_ADDR+0xE2 : ffe2 >
 1e0fff4:    80 08             	r0 = r8
 1e0fff6:    45 48             	r5 = [r4 + 16]			  ## analog.c:1334:21
 1e0fff8:    86 04             	r6 = r2.b0 (u)			  ## analog.c:1334:24
 1e0fffa:    36 c4             	r6 = r6 << 16			  ## analog.c:1334:24
 1e0fffc:    55 bc             	r5 |= r6			  ## analog.c:1334:21
 1e0fffe:    4d 48             	[r4 + 16] = r5			  ## analog.c:1334:21
 1e10000:    06 f6 00 e0       	r6 = [r14 + 0]			  ## analog.c:1336:21
 1e10004:    09 08             	r9 = r0			  ## analog.c:1336:21
 1e10006:    30 fd 02 6b       	r0 = r6 & 4294836223			  ## analog.c:1336:21
 1e1000a:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:1336:21
 1e1000e:    20 70             	r0 = 2			  ## analog.c:1337:9
 1e10010:    8f f3 a0 a5       	call 2050880 <delay : 4b54 >			  ## analog.c:1337:9
 1e10014:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:1338:21
 1e10018:    00 f6 0c e0       	r0 = [r14 + 12]			  ## analog.c:1339:17
 1e1001c:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE705_1_1_+0x23A : 1e10018 >			  ## analog.c:1339:9
 1e10020:    00 f6 10 e0       	r0 = [r14 + 16]			  ## analog.c:1342:20
 1e10024:    06 f6 14 e0       	r6 = [r14 + 20]			  ## analog.c:1344:20
 1e10028:    41 48             	r1 = [r4 + 16]			  ## analog.c:1344:20
 1e1002a:    31 fd ff 1b       	r1 = r1 & 4278255615			  ## analog.c:1344:20
 1e1002e:    b0 fd 40 56       	r5 = sextra(r6, p:8, l:16)			  ## analog.c:1345:25
 1e10032:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:1343:25
 1e10036:    06 0e             	r6 = r0 * r0			  ## analog.c:1346:24
 1e10038:    80 fe 50 65       	r6 += r5 * r5			  ## analog.c:1346:33
 1e1003c:    49 48             	[r4 + 16] = r1
 1e1003e:    20 08             	r0 = r2			  ## analog.c:1348:13
 1e10040:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE705_1_1_+0x268 : 1e10046 >
 1e10044:    90 08             	r0 = r9			  ## analog.c:1348:13
 1e10046:    36 f2 01 30       	if (r6 < r3) goto 2 <.GJTIE705_1_1_+0x26E : 1e1004c >
 1e1004a:    36 08             	r6 = r3			  ## analog.c:1348:13
 1e1004c:    12 80             	r2 += 1			  ## analog.c:1332:28
 1e1004e:    a1 04             	r1 = r2.l (u)			  ## analog.c:1332:28
 1e10050:    63 08             	r3 = r6			  ## analog.c:1332:28
 1e10052:    e1 e1 d0 1f       	if (r1 != 30) goto -96 <.GJTIE705_1_1_+0x218 : 1e0fff6 >
 1e10056:    41 48             	r1 = [r4 + 16]			  ## analog.c:1357:17
 1e10058:    02 c4             	r2 = r0 << 16			  ## analog.c:1357:20
 1e1005a:    42 fb ff 2b       	r2 = r2 + 16711680			  ## analog.c:1357:20
 1e1005e:    22 fd ff 2b       	r2 = r2 & 16711680			  ## analog.c:1357:20
 1e10062:    51 b4             	r1 |= r2			  ## analog.c:1357:17
 1e10064:    e6 fd 00 28       	r2 = r8.l (u)			  ## analog.c:1359:14
 1e10068:    49 48             	[r4 + 16] = r1			  ## analog.c:1357:17
 1e1006a:    f2 e3 04 80       	if (r2 > 63) goto 8 <.GJTIE705_1_1_+0x298 : 1e10076 >			  ## analog.c:1359:9
 1e1006e:    01 74             	r1 = 64			  ## analog.c:1360:24
 1e10070:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1360:24
 1e10074:    02 18             	goto 4 <.GJTIE705_1_1_+0x29C : 1e1007a >			  ## analog.c:1360:24
 1e10076:    8a fd 30 18       	r1 = uextra(r8, p:6, l:10)			  ## analog.c:1362:24
 1e1007a:    01 fe 0a 19       	r1 = r1 * 10
 1e1007e:    62 04             	r2 = r1.l (u)
 1e10080:    01 fb b0 04       	r1 = 1200 <BTCTLER_LE_RAM_TOTAL+0xD2 : 4b0 >			  ## analog.c:1364:26
 1e10084:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## analog.c:1364:26
 1e10088:    63 07             	r3 = -10			  ## analog.c:1365:15
 1e1008a:    ce 0e             	r6 = r1 * r3			  ## analog.c:1365:15
 1e1008c:    a5 70             	r5 = 10			  ## analog.c:1365:15
 1e1008e:    80 fe 50 61       	r6 += r1 * r5			  ## analog.c:1365:15
 1e10092:    56 e0 06 b0       	ifs (r6 < 5) goto 12 <.GJTIE705_1_1_+0x2C4 : 1e100a2 >			  ## analog.c:1365:15
 1e10096:    01 fe 0a 19       	r1 = r1 * 10			  ## analog.c:1364:37
 1e1009a:    a1 80             	r1 += 10			  ## analog.c:1366:22
 1e1009c:    61 04             	r1 = r1.l (u)			  ## analog.c:1366:22
 1e1009e:    c0 fe 50 11       	r1 = r1 / r5 (u)			  ## analog.c:1366:28
 1e100a2:    06 fb dc 05       	r6 = 1500 <BTCTLER_CONTROLLER_DATA_SIZE+0x11E : 5dc >			  ## analog.c:1371:30
 1e100a6:    c0 fe 20 26       	r2 = r6 / r2 (u)			  ## analog.c:1371:30
 1e100aa:    d3 0e             	r3 = r2 * r3			  ## analog.c:1372:17
 1e100ac:    80 fe 50 32       	r3 += r2 * r5			  ## analog.c:1372:17
 1e100b0:    53 e0 07 b0       	ifs (r3 < 5) goto 14 <.GJTIE705_1_1_+0x2E4 : 1e100c2 >			  ## analog.c:1372:17
 1e100b4:    02 fe 0a 29       	r2 = r2 * 10			  ## analog.c:1371:41
 1e100b8:    a2 80             	r2 += 10			  ## analog.c:1373:26
 1e100ba:    a2 04             	r2 = r2.l (u)			  ## analog.c:1373:26
 1e100bc:    a3 70             	r3 = 10			  ## analog.c:1373:26
 1e100be:    c0 fe 30 22       	r2 = r2 / r3 (u)			  ## analog.c:1373:32
 1e100c2:    10 f9 0c b0       	b[r11 + 12] = r0			  ## analog.c:1379:22
 1e100c6:    00 d2             	r0 = r0 >> 8			  ## analog.c:1379:22
 1e100c8:    10 f9 0d b0       	b[r11 + 13] = r0			  ## analog.c:1379:22
 1e100cc:    40 48             	r0 = [r4 + 16]			  ## analog.c:1380:17
 1e100ce:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## analog.c:1380:17
 1e100d2:    48 48             	[r4 + 16] = r0			  ## analog.c:1380:17
 1e100d4:    04 f4 78 4a       	[r4 + 16] |= 30720			  ## analog.c:1381:17
 1e100d8:    40 48             	r0 = [r4 + 16]			  ## analog.c:1382:17
 1e100da:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1382:17
 1e100de:    48 48             	[r4 + 16] = r0			  ## analog.c:1382:17
 1e100e0:    40 48             	r0 = [r4 + 16]			  ## analog.c:1383:17
 1e100e2:    43 04             	r3 = r1.b0 (u)			  ## analog.c:1383:20
 1e100e4:    50 b6             	r0 |= r3			  ## analog.c:1383:17
 1e100e6:    48 48             	[r4 + 16] = r0			  ## analog.c:1383:17
 1e100e8:    05 70             	r5 = 0			  ## analog.c:1383:17
 1e100ea:    15 f9 07 b0       	b[r11 + 7] = r5			  ## analog.c:1385:22
 1e100ee:    80 77             	r0 = 120			  ## analog.c:1385:22
 1e100f0:    10 f9 06 b0       	b[r11 + 6] = r0			  ## analog.c:1385:22
 1e100f4:    08 d2             	r0 = r1 >> 8			  ## analog.c:1386:22
 1e100f6:    10 f9 05 b0       	b[r11 + 5] = r0			  ## analog.c:1386:22
 1e100fa:    11 f9 04 b0       	b[r11 + 4] = r1			  ## analog.c:1386:22
 1e100fe:    15 f9 0b b0       	b[r11 + 11] = r5			  ## analog.c:1388:24
 1e10102:    60 79             	r0 = 150			  ## analog.c:1388:24
 1e10104:    10 f9 0a b0       	b[r11 + 10] = r0			  ## analog.c:1388:24
 1e10108:    10 d2             	r0 = r2 >> 8			  ## analog.c:1389:24
 1e1010a:    10 f9 09 b0       	b[r11 + 9] = r0			  ## analog.c:1389:24
 1e1010e:    12 f9 08 b0       	b[r11 + 8] = r2			  ## analog.c:1389:24
 1e10112:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1392:20
 1e10114:    70 b8             	r0 &= 4294901759			  ## analog.c:1392:20
 1e10116:    28 4e             	[r7 + 8] = r0			  ## analog.c:1392:20
 1e10118:    20 70             	r0 = 2			  ## analog.c:1393:5
 1e1011a:    8f f3 1b a5       	call 2050614 <delay : 4b54 >			  ## analog.c:1393:5
 1e1011e:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1394:13
 1e10120:    f0 b0             	r0 &= 4294967293			  ## analog.c:1394:13
 1e10122:    f8 49             	[r4 + 124] = r0			  ## analog.c:1394:13
 1e10124:    20 70             	r0 = 2			  ## analog.c:1395:5
 1e10126:    8f f3 15 a5       	call 2050602 <delay : 4b54 >			  ## analog.c:1395:5
 1e1012a:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1396:13
 1e1012c:    70 b1             	r0 &= 4294967291			  ## analog.c:1396:13
 1e1012e:    f8 49             	[r4 + 124] = r0			  ## analog.c:1396:13
 1e10130:    20 70             	r0 = 2			  ## analog.c:1397:5
 1e10132:    8f f3 0f a5       	call 2050590 <delay : 4b54 >			  ## analog.c:1397:5
 1e10136:    15 f6 00 e0       	[r14 + 0] = r5			  ## analog.c:1398:45
 1e1013a:    15 f6 04 e0       	[r14 + 4] = r5			  ## analog.c:1398:31
 1e1013e:    15 f6 08 e0       	[r14 + 8] = r5			  ## analog.c:1398:17
 1e10142:    20 70             	r0 = 2			  ## analog.c:1399:5
 1e10144:    8f f3 06 a5       	call 2050572 <delay : 4b54 >			  ## analog.c:1399:5
 1e10148:    90 48             	r0 = [r4 + 36]			  ## analog.c:1400:17
 1e1014a:    f0 b5             	r0 &= 4294965247			  ## analog.c:1400:17
 1e1014c:    98 48             	[r4 + 36] = r0			  ## analog.c:1400:17
 1e1014e:    bf f3 81 fa       	call -2814 <rxtrim_analog_init : 1e0f654 >			  ## analog.c:903:5
 1e10152:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:905:22
 1e10156:    01 fb 3f fe       	r1 = -449 <bank_code_load_addr+0x1E5593 : 1fffe3f >			  ## analog.c:905:22
 1e1015a:    50 b3             	r0 &= r1			  ## analog.c:905:22
 1e1015c:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:905:22
 1e10160:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:906:22
 1e10164:    01 fb c0 01       	r1 = 448 <BTCTLER_CONTROLLER_BSS_SIZE : 1c0 >			  ## analog.c:906:22
 1e10168:    50 b2             	r0 |= r1			  ## analog.c:906:22
 1e1016a:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:906:22
 1e1016e:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:908:22
 1e10172:    30 fd 1e 0b       	r0 = r0 & 4293001215			  ## analog.c:908:22
 1e10176:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:908:22
 1e1017a:    03 f4 15 ab       	[r10 + 12] |= 1376256			  ## analog.c:909:22
 1e1017e:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:912:22
 1e10182:    f0 b5             	r0 &= 4294965247			  ## analog.c:912:22
 1e10184:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:912:22
 1e10188:    02 f4 01 a9       	[r10 + 8] |= 1			  ## analog.c:913:22
 1e1018c:    00 f6 04 a0       	r0 = [r10 + 4]			  ## analog.c:914:22
 1e10190:    70 b0             	r0 &= 4294967294			  ## analog.c:914:22
 1e10192:    10 f6 04 a0       	[r10 + 4] = r0			  ## analog.c:914:22
 1e10196:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:916:13
 1e1019a:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:917:20
 1e1019e:    1f f4 10 49       	[r4 + 124] |= 16			  ## analog.c:918:13
 1e101a2:    90 48             	r0 = [r4 + 36]			  ## analog.c:919:17
 1e101a4:    98 48             	[r4 + 36] = r0			  ## analog.c:919:17
 1e101a6:    00 48             	r0 = [r4 + 0]			  ## analog.c:920:17
 1e101a8:    30 fd 0c 0c       	r0 = r0 & 4093640703			  ## analog.c:920:17
 1e101ac:    08 48             	[r4 + 0] = r0			  ## analog.c:920:17
 1e101ae:    40 a3             	r0 = sp + 52			  ## analog.c:920:17
 1e101b0:    98 4e             	[r7 + 36] = r0			  ## analog.c:922:19
 1e101b2:    01 70             	r1 = 0			  ## analog.c:925:20
 1e101b4:    02 fb 00 01       	r2 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## analog.c:925:20
 1e101b8:    97 f3 9a b6       	call 3108148 <memset : 106ef0 >			  ## analog.c:925:20
 1e101bc:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:928:22
 1e101c0:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:928:22
 1e101c4:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:928:22
 1e101c8:    00 f6 08 a0       	r0 = [r10 + 8]			  ## analog.c:929:22
 1e101cc:    10 f6 08 a0       	[r10 + 8] = r0			  ## analog.c:929:22
 1e101d0:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:931:22
 1e101d4:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:931:22
 1e101d8:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:931:22
 1e101dc:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:932:22
 1e101e0:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:932:22
 1e101e4:    00 f6 0c a0       	r0 = [r10 + 12]			  ## analog.c:934:22
 1e101e8:    f0 b4             	r0 &= 4294966783			  ## analog.c:934:22
 1e101ea:    10 f6 0c a0       	[r10 + 12] = r0			  ## analog.c:934:22
 1e101ee:    03 f4 02 aa       	[r10 + 12] |= 512			  ## analog.c:935:22
 1e101f2:    c8 f4 40 7b       	[r7 + 32] = 4194304			  ## analog.c:938:23
 1e101f6:    80 4e             	r0 = [r7 + 32]			  ## analog.c:939:16
 1e101f8:    00 d4             	r0 = r0 >> 16			  ## analog.c:939:9
 1e101fa:    fd 31             	if (r0 != 0) goto -6 <.GJTIE705_1_1_+0x418 : 1e101f6 >			  ## analog.c:939:9
 1e101fc:    15 80             	r5 += 1			  ## analog.c:937:26
 1e101fe:    60 05             	r0 = r5.l (u)			  ## analog.c:937:26
 1e10200:    40 e1 f7 1f       	if (r0 != 20) goto -18 <.GJTIE705_1_1_+0x414 : 1e101f2 >			  ## analog.c:937:26
 1e10204:    40 a3             	r0 = sp + 52
 1e10206:    00 fc fc 00       	r0 = r0 + 252
 1e1020a:    18 02             	[sp+4] = r0
 1e1020c:    08 70             	r8 = 0
 1e1020e:    02 fb f8 0f       	r2 = 4088 <sys_clock_limit+0x6C : ff8 >
 1e10212:    83 94             	r3 = r2 + 8
 1e10214:    00 70             	r0 = 0
 1e10216:    28 02             	[sp+8] = r0
 1e10218:    08 02             	[sp] = r0
 1e1021a:    0a fd 40 8b       	r10 = r8 | 4194304
 1e1021e:    b9 08             	r9 = r11
 1e10220:    00 70             	r0 = 0
 1e10222:    0c 70             	r12 = 0
 1e10224:    38 02             	[sp+12] = r0
 1e10226:    00 70             	r0 = 0
 1e10228:    1a f6 20 70       	[r7 + 32] = r10			  ## analog.c:955:31
 1e1022c:    81 4e             	r1 = [r7 + 32]			  ## analog.c:956:24
 1e1022e:    09 d4             	r1 = r1 >> 16			  ## analog.c:956:17
 1e10230:    fd 33             	if (r1 != 0) goto -6 <.GJTIE705_1_1_+0x44E : 1e1022c >			  ## analog.c:956:17
 1e10232:    10 80             	r0 += 1			  ## analog.c:954:36
 1e10234:    21 04             	r1 = r0.l (u)			  ## analog.c:954:36
 1e10236:    21 e0 f7 1f       	if (r1 != 2) goto -18 <.GJTIE705_1_1_+0x44A : 1e10228 >			  ## analog.c:954:36
 1e1023a:    01 70             	r1 = 0
 1e1023c:    f0 73             	r0 = 63
 1e1023e:    16 02             	r6 = [sp+4]
 1e10240:    45 f6 fc 6f       	r5 = [r6 ++= -4]			  ## analog.c:967:24
 1e10244:    2c c4             	r4 = r5 << 16			  ## analog.c:967:35
 1e10246:    e4 d8             	r4 = r4 >>> 3			  ## analog.c:969:67
 1e10248:    80 fe 20 41       	r4 += r1 * r2			  ## analog.c:969:50
 1e1024c:    e0 fe 30 14       	r1 = r4 / r3 (s)			  ## analog.c:969:75
 1e10250:    2c dc             	r4 = r5 >>> 16			  ## analog.c:968:34
 1e10252:    f0 fd 68 f4       	r15 = r4 << 13			  ## analog.c:970:67
 1e10256:    80 fe 20 f1       	r15 += r1 * r2			  ## analog.c:970:50
 1e1025a:    f0 8f             	r0 += -1			  ## analog.c:965:42
 1e1025c:    e0 fe 30 1f       	r1 = r15 / r3 (s)			  ## analog.c:970:75
 1e10260:    00 e0 ee cf       	ifs (r0 > 0) goto -36 <.GJTIE705_1_1_+0x462 : 1e10240 >			  ## analog.c:965:13
 1e10264:    20 fb 08 0b       	r0 = 524288			  ## analog.c:972:21
 1e10268:    e0 fe 00 bf       	r11 = r15 / r0 (s)			  ## analog.c:972:21
 1e1026c:    6d fb 00 b9       	r13 = 0 - r11			  ## analog.c:975:23
 1e10270:    d1 08             	r1 = r13			  ## analog.c:974:17
 1e10272:    c0 ff 01 00 f8 ff 	r0 = 4294443009 <bank_code_load_addr+0x165755 : 1f80001 >			  ## analog.c:974:17
 1e10278:    0f f2 01 b0       	ifs (r15 < r0) goto 2 <.GJTIE705_1_1_+0x4A0 : 1e1027e >			  ## analog.c:974:17
 1e1027c:    b1 08             	r1 = r11			  ## analog.c:974:17
 1e1027e:    26 70             	r6 = 2			  ## analog.c:984:13
 1e10280:    c1 e3 01 c0       	ifs (r1 > 60) goto 2 <.GJTIE705_1_1_+0x4A8 : 1e10286 >			  ## analog.c:984:13
 1e10284:    16 70             	r6 = 1			  ## analog.c:984:13
 1e10286:    40 70             	r0 = 4			  ## analog.c:980:17
 1e10288:    81 e7 01 c0       	ifs (r1 > 120) goto 2 <.GJTIE705_1_1_+0x4B0 : 1e1028e >			  ## analog.c:980:17
 1e1028c:    60 08             	r0 = r6			  ## analog.c:980:17
 1e1028e:    08 e0 19 00       	if (r8 == 0) goto 50 <.GJTIE705_1_1_+0x4E6 : 1e102c4 >
 1e10292:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10298:    31 48             	r1 = [r4 + 12]
 1e1029a:    36 fd 01 1a       	r6 = r1 & 4294967039			  ## analog.c:1006:38
 1e1029e:    11 b4             	r1 |= 256			  ## analog.c:1004:38
 1e102a0:    c5 ff 01 00 f8 ff 	r5 = 4294443009 <bank_code_load_addr+0x165755 : 1f80001 >			  ## analog.c:1003:21
 1e102a6:    5f f2 01 b0       	ifs (r15 < r5) goto 2 <.GJTIE705_1_1_+0x4CE : 1e102ac >			  ## analog.c:1003:21
 1e102aa:    61 08             	r1 = r6			  ## analog.c:1003:21
 1e102ac:    39 48             	[r4 + 12] = r1
 1e102ae:    31 48             	r1 = [r4 + 12]			  ## analog.c:1009:34
 1e102b0:    31 fd ff 19       	r1 = r1 & 4294967040			  ## analog.c:1009:34
 1e102b4:    39 48             	[r4 + 12] = r1			  ## analog.c:1009:34
 1e102b6:    21 02             	r1 = [sp+8]			  ## analog.c:1008:30
 1e102b8:    61 04             	r1 = r1.l (u)			  ## analog.c:1008:30
 1e102ba:    01 09             	r1 += r0			  ## analog.c:1008:41
 1e102bc:    00 70             	r0 = 0			  ## analog.c:1008:41
 1e102be:    29 02             	[sp+8] = r1
 1e102c0:    c6 98             	r6 = r4 + 12
 1e102c2:    1b 18             	goto 54 <.GJTIE705_1_1_+0x51C : 1e102fa >
 1e102c4:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e102ca:    21 42             	r1 = [r1 + 8]
 1e102cc:    36 fd 02 1c       	r6 = r1 & 4261412863			  ## analog.c:995:38
 1e102d0:    91 bc             	r1 |= 33554432			  ## analog.c:993:38
 1e102d2:    c4 ff 01 00 f8 ff 	r4 = 4294443009 <bank_code_load_addr+0x165755 : 1f80001 >			  ## analog.c:992:21
 1e102d8:    4f f2 01 b0       	ifs (r15 < r4) goto 2 <.GJTIE705_1_1_+0x500 : 1e102de >			  ## analog.c:992:21
 1e102dc:    61 08             	r1 = r6			  ## analog.c:992:21
 1e102de:    c4 ff 00 19 1e 00 	r4 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e102e4:    29 48             	[r4 + 8] = r1
 1e102e6:    21 48             	r1 = [r4 + 8]			  ## analog.c:999:34
 1e102e8:    31 fd ff 15       	r1 = r1 & 4261543935			  ## analog.c:999:34
 1e102ec:    29 48             	[r4 + 8] = r1			  ## analog.c:999:34
 1e102ee:    01 02             	r1 = [sp]			  ## analog.c:998:30
 1e102f0:    61 04             	r1 = r1.l (u)			  ## analog.c:998:30
 1e102f2:    01 09             	r1 += r0			  ## analog.c:998:41
 1e102f4:    10 71             	r0 = 17			  ## analog.c:998:41
 1e102f6:    09 02             	[sp] = r1
 1e102f8:    86 98             	r6 = r4 + 8
 1e102fa:    04 4c             	r4 = [r6 + 0]
 1e102fc:    41 04             	r1 = r1.b0 (u)
 1e102fe:    f8 fd 00 01       	r0 = r1 << r0
 1e10302:    50 b8             	r0 |= r4
 1e10304:    08 4c             	[r6 + 0] = r0
 1e10306:    b1 08             	r1 = r11			  ## analog.c:1024:17
 1e10308:    c0 ff 00 00 f8 ff 	r0 = 4294443008 <bank_code_load_addr+0x165754 : 1f80000 >			  ## analog.c:1024:17
 1e1030e:    0f f2 01 c0       	ifs (r15 > r0) goto 2 <.GJTIE705_1_1_+0x536 : 1e10314 >			  ## analog.c:1024:17
 1e10312:    d1 08             	r1 = r13			  ## analog.c:1024:17
 1e10314:    10 70             	r0 = 1			  ## analog.c:1024:25
 1e10316:    74 fc 68 ff       	r4 = r7 + -152			  ## analog.c:1024:25
 1e1031a:    a1 e1 01 b0       	ifs (r1 < 26) goto 2 <.GJTIE705_1_1_+0x542 : 1e10320 >			  ## analog.c:1024:25
 1e1031e:    00 70             	r0 = 0
 1e10320:    40 fe 90 1b       	r1 = r11 * r9			  ## analog.c:1024:38
 1e10324:    c9 d7             	r1 = r1 >> 31			  ## analog.c:1024:45
 1e10326:    e2 fd c0 11       	r1 = r1 & r12			  ## analog.c:1024:50
 1e1032a:    50 b2             	r0 |= r1			  ## analog.c:1024:31
 1e1032c:    cf ff 00 19 1e 00 	r15 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:1024:31
 1e10332:    1c 30             	if (r0 != 0) goto 56 <.GJTIE705_1_1_+0x58E : 1e1036c >			  ## analog.c:1024:31
 1e10334:    35 02             	r5 = [sp+12]
 1e10336:    10 9a             	r0 = r5 + 1			  ## analog.c:1038:23
 1e10338:    1c 70             	r12 = 1
 1e1033a:    b9 08             	r9 = r11
 1e1033c:    01 fb b9 0b       	r1 = 3001 <BTCTLER_CL_CODE_TOTAL+0x1EB : bb9 >			  ## analog.c:1038:17
 1e10340:    15 f2 70 bf       	ifs (r5 < r1) goto -288 <.GJTIE705_1_1_+0x446 : 1e10224 >			  ## analog.c:1038:17
 1e10344:    00 f6 08 f0       	r0 = [r15 + 8]			  ## analog.c:1040:34
 1e10348:    30 fd ff 05       	r0 = r0 & 4261543935			  ## analog.c:1040:34
 1e1034c:    10 f6 08 f0       	[r15 + 8] = r0			  ## analog.c:1040:34
 1e10350:    00 f6 08 f0       	r0 = [r15 + 8]			  ## analog.c:1041:34
 1e10354:    10 f6 08 f0       	[r15 + 8] = r0			  ## analog.c:1041:34
 1e10358:    00 f6 0c f0       	r0 = [r15 + 12]			  ## analog.c:1042:34
 1e1035c:    30 fd ff 09       	r0 = r0 & 4294967040			  ## analog.c:1042:34
 1e10360:    10 f6 0c f0       	[r15 + 12] = r0			  ## analog.c:1042:34
 1e10364:    00 f6 0c f0       	r0 = [r15 + 12]			  ## analog.c:1043:34
 1e10368:    10 f6 0c f0       	[r15 + 12] = r0			  ## analog.c:1043:34
 1e1036c:    18 80             	r8 += 1			  ## analog.c:946:25
 1e1036e:    28 e0 54 1f       	if (r8 != 2) goto -344 <.GJTIE705_1_1_+0x43C : 1e1021a >			  ## analog.c:946:25
 1e10372:    cb ff 3c 29 00 00 	r11 = 10556 <tws_bulk_pool_end : 293c >
 1e10378:    00 02             	r0 = [sp]
 1e1037a:    10 f9 0e b0       	b[r11 + 14] = r0			  ## analog.c:1049:28
 1e1037e:    00 d2             	r0 = r0 >> 8			  ## analog.c:1049:28
 1e10380:    10 f9 0f b0       	b[r11 + 15] = r0			  ## analog.c:1049:28
 1e10384:    21 02             	r1 = [sp+8]			  ## analog.c:1049:28
 1e10386:    08 d2             	r0 = r1 >> 8			  ## analog.c:1050:28
 1e10388:    10 f9 11 b0       	b[r11 + 17] = r0			  ## analog.c:1050:28
 1e1038c:    11 f9 10 b0       	b[r11 + 16] = r1			  ## analog.c:1050:28
 1e10390:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1052:13
 1e10392:    f0 b0             	r0 &= 4294967293			  ## analog.c:1052:13
 1e10394:    f8 49             	[r4 + 124] = r0			  ## analog.c:1052:13
 1e10396:    20 4e             	r0 = [r7 + 8]			  ## analog.c:1053:20
 1e10398:    70 b8             	r0 &= 4294901759			  ## analog.c:1053:20
 1e1039a:    28 4e             	[r7 + 8] = r0			  ## analog.c:1053:20
 1e1039c:    f0 49             	r0 = [r4 + 124]			  ## analog.c:1054:13
 1e1039e:    70 b2             	r0 &= 4294967279			  ## analog.c:1054:13
 1e103a0:    f8 49             	[r4 + 124] = r0			  ## analog.c:1054:13
 1e103a2:    00 f4 0c 4c       	[r4 + 0] |= 201326592			  ## analog.c:1055:17
 1e103a6:    bf f3 55 f9       	call -3414 <rxtrim_analog_init : 1e0f654 >			  ## analog.c:721:5
 1e103aa:    02 70             	r2 = 0			  ## analog.c:721:5
 1e103ac:    12 f6 08 e0       	[r14 + 8] = r2			  ## analog.c:723:17
 1e103b0:    20 70             	r0 = 2			  ## analog.c:724:5
 1e103b2:    8f f3 cf a3       	call 2049950 <delay : 4b54 >			  ## analog.c:724:5
 1e103b6:    12 f6 04 e0       	[r14 + 4] = r2			  ## analog.c:725:17
 1e103ba:    20 70             	r0 = 2			  ## analog.c:726:5
 1e103bc:    8f f3 ca a3       	call 2049940 <delay : 4b54 >			  ## analog.c:726:5
 1e103c0:    12 f6 00 e0       	[r14 + 0] = r2			  ## analog.c:727:17
 1e103c4:    20 70             	r0 = 2			  ## analog.c:728:5
 1e103c6:    8f f3 c5 a3       	call 2049930 <delay : 4b54 >			  ## analog.c:728:5
 1e103ca:    02 f4 01 7b       	[r7 + 8] |= 65536			  ## analog.c:729:20
 1e103ce:    20 70             	r0 = 2			  ## analog.c:730:5
 1e103d0:    8f f3 c0 a3       	call 2049920 <delay : 4b54 >			  ## analog.c:730:5
 1e103d4:    1f f4 02 49       	[r4 + 124] |= 2			  ## analog.c:731:13
 1e103d8:    20 70             	r0 = 2			  ## analog.c:732:5
 1e103da:    8f f3 bb a3       	call 2049910 <delay : 4b54 >			  ## analog.c:732:5
 1e103de:    1f f4 04 49       	[r4 + 124] |= 4			  ## analog.c:733:13
 1e103e2:    20 70             	r0 = 2			  ## analog.c:734:5
 1e103e4:    8f f3 b6 a3       	call 2049900 <delay : 4b54 >			  ## analog.c:734:5
 1e103e8:    02 f4 20 e9       	[r14 + 8] |= 32			  ## analog.c:735:17
 1e103ec:    20 70             	r0 = 2			  ## analog.c:736:5
 1e103ee:    8f f3 b1 a3       	call 2049890 <delay : 4b54 >			  ## analog.c:736:5
 1e103f2:    02 f4 02 ec       	[r14 + 8] |= 33554432			  ## analog.c:737:17
 1e103f6:    20 70             	r0 = 2			  ## analog.c:738:5
 1e103f8:    8f f3 ac a3       	call 2049880 <delay : 4b54 >			  ## analog.c:738:5
 1e103fc:    02 f4 01 eb       	[r14 + 8] |= 65536			  ## analog.c:739:17
 1e10400:    20 70             	r0 = 2			  ## analog.c:740:5
 1e10402:    8f f3 a7 a3       	call 2049870 <delay : 4b54 >			  ## analog.c:740:5
 1e10406:    02 f4 10 eb       	[r14 + 8] |= 1048576			  ## analog.c:741:17
 1e1040a:    20 70             	r0 = 2			  ## analog.c:742:5
 1e1040c:    8f f3 a2 a3       	call 2049860 <delay : 4b54 >			  ## analog.c:742:5
 1e10410:    00 f4 20 e9       	[r14 + 0] |= 32			  ## analog.c:743:17
 1e10414:    20 70             	r0 = 2			  ## analog.c:744:5
 1e10416:    8f f3 9d a3       	call 2049850 <delay : 4b54 >			  ## analog.c:744:5
 1e1041a:    00 f4 01 ea       	[r14 + 0] |= 256			  ## analog.c:745:17
 1e1041e:    20 70             	r0 = 2			  ## analog.c:746:5
 1e10420:    8f f3 98 a3       	call 2049840 <delay : 4b54 >			  ## analog.c:746:5
 1e10424:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:747:17
 1e10428:    f0 b4             	r0 &= 4294966783			  ## analog.c:747:17
 1e1042a:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:747:17
 1e1042e:    20 70             	r0 = 2			  ## analog.c:748:5
 1e10430:    8f f3 90 a3       	call 2049824 <delay : 4b54 >			  ## analog.c:748:5
 1e10434:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:749:17
 1e10438:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:749:17
 1e1043c:    20 70             	r0 = 2			  ## analog.c:750:5
 1e1043e:    8f f3 89 a3       	call 2049810 <delay : 4b54 >			  ## analog.c:750:5
 1e10442:    00 f4 01 eb       	[r14 + 0] |= 65536			  ## analog.c:751:17
 1e10446:    20 70             	r0 = 2			  ## analog.c:752:5
 1e10448:    8f f3 84 a3       	call 2049800 <delay : 4b54 >			  ## analog.c:752:5
 1e1044c:    00 f4 02 eb       	[r14 + 0] |= 131072			  ## analog.c:753:17
 1e10450:    20 70             	r0 = 2			  ## analog.c:754:5
 1e10452:    8f f3 7f a3       	call 2049790 <delay : 4b54 >			  ## analog.c:754:5
 1e10456:    00 f4 20 eb       	[r14 + 0] |= 2097152			  ## analog.c:755:17
 1e1045a:    20 70             	r0 = 2			  ## analog.c:756:5
 1e1045c:    8f f3 7a a3       	call 2049780 <delay : 4b54 >			  ## analog.c:756:5
 1e10460:    20 70             	r0 = 2			  ## analog.c:757:5
 1e10462:    8f f3 77 a3       	call 2049774 <delay : 4b54 >			  ## analog.c:757:5
 1e10466:    00 f4 01 ec       	[r14 + 0] |= 16777216			  ## analog.c:758:17
 1e1046a:    20 70             	r0 = 2			  ## analog.c:759:5
 1e1046c:    8f f3 72 a3       	call 2049764 <delay : 4b54 >			  ## analog.c:759:5
 1e10470:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:760:17
 1e10474:    20 70             	r0 = 2			  ## analog.c:761:5
 1e10476:    8f f3 6d a3       	call 2049754 <delay : 4b54 >			  ## analog.c:761:5
 1e1047a:    00 f4 20 ec       	[r14 + 0] |= 536870912			  ## analog.c:762:17
 1e1047e:    20 70             	r0 = 2			  ## analog.c:763:5
 1e10480:    8f f3 68 a3       	call 2049744 <delay : 4b54 >			  ## analog.c:763:5
 1e10484:    01 f4 80 e9       	[r14 + 4] |= 128			  ## analog.c:765:17
 1e10488:    20 70             	r0 = 2			  ## analog.c:766:5
 1e1048a:    8f f3 63 a3       	call 2049734 <delay : 4b54 >			  ## analog.c:766:5
 1e1048e:    01 f4 40 e9       	[r14 + 4] |= 64			  ## analog.c:767:17
 1e10492:    20 70             	r0 = 2			  ## analog.c:769:5
 1e10494:    8f f3 5e a3       	call 2049724 <delay : 4b54 >			  ## analog.c:769:5
 1e10498:    09 f4 08 4a       	[r4 + 36] |= 2048			  ## analog.c:770:17
 1e1049c:    50 48             	r0 = [r4 + 20]			  ## analog.c:776:17
 1e1049e:    c1 ff ff ff 03 f8 	r1 = 4161011711 <text_size+0x27E1F : 3ffff >			  ## analog.c:776:17
 1e104a4:    50 b3             	r0 &= r1			  ## analog.c:776:17
 1e104a6:    58 48             	[r4 + 20] = r0			  ## analog.c:776:17
 1e104a8:    50 70             	r0 = 5			  ## analog.c:777:5
 1e104aa:    8f f3 53 a3       	call 2049702 <delay : 4b54 >			  ## analog.c:777:5
 1e104ae:    05 f4 7f 46       	[r4 + 20] |= 66846720			  ## analog.c:778:17
 1e104b2:    50 70             	r0 = 5			  ## analog.c:779:5
 1e104b4:    8f f3 4e a3       	call 2049692 <delay : 4b54 >			  ## analog.c:779:5
 1e104b8:    50 48             	r0 = [r4 + 20]			  ## analog.c:780:17
 1e104ba:    c8 ff ff 01 fc ff 	r8 = 4294705663 <bank_code_load_addr+0x1A5953 : 1fc01ff >			  ## analog.c:780:17
 1e104c0:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:780:17
 1e104c4:    58 48             	[r4 + 20] = r0			  ## analog.c:780:17
 1e104c6:    40 71             	r0 = 20			  ## analog.c:781:5
 1e104c8:    49 71             	r9 = 20			  ## analog.c:781:5
 1e104ca:    8f f3 43 a3       	call 2049670 <delay : 4b54 >			  ## analog.c:781:5
 1e104ce:    50 48             	r0 = [r4 + 20]
 1e104d0:    0a fb 00 fe       	r10 = -512 <bank_code_load_addr+0x1E5554 : 1fffe00 >
 1e104d4:    e2 fd a0 00       	r0 = r0 & r10
 1e104d8:    58 48             	[r4 + 20] = r0
 1e104da:    50 70             	r0 = 5			  ## analog.c:785:9
 1e104dc:    8f f3 3a a3       	call 2049652 <delay : 4b54 >			  ## analog.c:785:9
 1e104e0:    f6 07             	r6 = -1			  ## analog.c:785:9
 1e104e2:    c5 7d             	r5 = 220			  ## analog.c:785:9
 1e104e4:    50 48             	r0 = [r4 + 20]			  ## analog.c:786:21
 1e104e6:    21 08             	r1 = r2			  ## analog.c:786:21
 1e104e8:    50 ba             	r0 |= r5			  ## analog.c:786:21
 1e104ea:    58 48             	[r4 + 20] = r0			  ## analog.c:786:21
 1e104ec:    40 71             	r0 = 20			  ## analog.c:787:9
 1e104ee:    8f f3 31 a3       	call 2049634 <delay : 4b54 >			  ## analog.c:787:9
 1e104f2:    02 70             	r2 = 0
 1e104f4:    03 70             	r3 = 0
 1e104f6:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:791:25
 1e104fa:    f0 bc             	r0 &= 4261412863			  ## analog.c:791:25
 1e104fc:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:791:25
 1e10500:    50 70             	r0 = 5			  ## analog.c:792:13
 1e10502:    8f f3 27 a3       	call 2049614 <delay : 4b54 >			  ## analog.c:792:13
 1e10506:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:793:25
 1e1050a:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:794:21
 1e1050e:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE705_1_1_+0x72C : 1e1050a >			  ## analog.c:794:13
 1e10512:    00 f6 1c e0       	r0 = [r14 + 28]			  ## analog.c:796:24
 1e10516:    04 f6 20 e0       	r4 = [r14 + 32]			  ## analog.c:798:24
 1e1051a:    b0 fd 40 00       	r0 = sextra(r0, p:8, l:16)			  ## analog.c:797:29
 1e1051e:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:38
 1e10522:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:799:29
 1e10526:    13 80             	r3 += 1			  ## analog.c:790:30
 1e10528:    e4 04             	r4 = r3.l (u)			  ## analog.c:790:30
 1e1052a:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:800:19
 1e1052e:    44 e1 e2 1f       	if (r4 != 20) goto -60 <.GJTIE705_1_1_+0x718 : 1e104f6 >
 1e10532:    74 fc 68 ff       	r4 = r7 + -152
 1e10536:    50 48             	r0 = [r4 + 20]
 1e10538:    e2 fd a0 00       	r0 = r0 & r10
 1e1053c:    58 48             	[r4 + 20] = r0
 1e1053e:    50 70             	r0 = 5			  ## analog.c:785:9
 1e10540:    8f f3 08 a3       	call 2049552 <delay : 4b54 >			  ## analog.c:785:9
 1e10544:    e0 fe 90 02       	r0 = r2 / r9 (s)			  ## analog.c:802:14
 1e10548:    52 08             	r2 = r5			  ## analog.c:804:13
 1e1054a:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE705_1_1_+0x772 : 1e10550 >			  ## analog.c:804:13
 1e1054e:    12 08             	r2 = r1			  ## analog.c:804:13
 1e10550:    60 f2 01 30       	if (r0 < r6) goto 2 <.GJTIE705_1_1_+0x778 : 1e10556 >
 1e10554:    60 08             	r0 = r6			  ## analog.c:804:13
 1e10556:    15 80             	r5 += 1			  ## analog.c:783:29
 1e10558:    06 08             	r6 = r0			  ## analog.c:783:29
 1e1055a:    01 ff 18 51 c2 ff 	if (r5 != 280) goto -124 <.GJTIE705_1_1_+0x706 : 1e104e4 >
 1e10560:    50 48             	r0 = [r4 + 20]			  ## analog.c:815:17
 1e10562:    09 fb ff 01       	r9 = 511 <BTCTLER_CL_RAM_TOTAL+0x1B : 1ff >			  ## analog.c:815:21
 1e10566:    e2 fd 90 12       	r1 = r2 & r9			  ## analog.c:815:21
 1e1056a:    50 b2             	r0 |= r1			  ## analog.c:815:17
 1e1056c:    58 48             	[r4 + 20] = r0			  ## analog.c:815:17
 1e1056e:    40 71             	r0 = 20			  ## analog.c:816:5
 1e10570:    4a 71             	r10 = 20			  ## analog.c:816:5
 1e10572:    8f f3 ef a2       	call 2049502 <delay : 4b54 >			  ## analog.c:816:5
 1e10576:    10 d2             	r0 = r2 >> 8			  ## analog.c:820:22
 1e10578:    10 f9 13 b0       	b[r11 + 19] = r0			  ## analog.c:820:22
 1e1057c:    12 f9 12 b0       	b[r11 + 18] = r2			  ## analog.c:820:22
 1e10580:    50 48             	r0 = [r4 + 20]			  ## analog.c:824:17
 1e10582:    e2 fd 80 00       	r0 = r0 & r8			  ## analog.c:824:17
 1e10586:    58 48             	[r4 + 20] = r0			  ## analog.c:824:17
 1e10588:    50 48             	r0 = [r4 + 20]			  ## analog.c:825:17
 1e1058a:    58 48             	[r4 + 20] = r0			  ## analog.c:825:17
 1e1058c:    50 48             	r0 = [r4 + 20]
 1e1058e:    e2 fd 80 00       	r0 = r0 & r8
 1e10592:    58 48             	[r4 + 20] = r0
 1e10594:    c1 ff d8 ff 00 00 	r1 = 65496 <_IRQ_MEM_ADDR+0xD8 : ffd8 >
 1e1059a:    f3 07             	r3 = -1
 1e1059c:    2b 08             	r11 = r2
 1e1059e:    50 70             	r0 = 5			  ## analog.c:828:9
 1e105a0:    8f f3 d8 a2       	call 2049456 <delay : 4b54 >			  ## analog.c:828:9
 1e105a4:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:828:9
 1e105a8:    04 08             	r4 = r0			  ## analog.c:828:9
 1e105aa:    50 48             	r0 = [r4 + 20]			  ## analog.c:829:21
 1e105ac:    e2 fd 90 21       	r2 = r1 & r9			  ## analog.c:829:24
 1e105b0:    52 c2             	r2 = r2 << 9			  ## analog.c:829:24
 1e105b2:    50 b4             	r0 |= r2			  ## analog.c:829:21
 1e105b4:    58 48             	[r4 + 20] = r0			  ## analog.c:829:21
 1e105b6:    40 71             	r0 = 20			  ## analog.c:830:9
 1e105b8:    8f f3 cc a2       	call 2049432 <delay : 4b54 >			  ## analog.c:830:9
 1e105bc:    02 70             	r2 = 0
 1e105be:    05 70             	r5 = 0
 1e105c0:    00 f6 00 e0       	r0 = [r14 + 0]			  ## analog.c:833:25
 1e105c4:    f0 bc             	r0 &= 4261412863			  ## analog.c:833:25
 1e105c6:    10 f6 00 e0       	[r14 + 0] = r0			  ## analog.c:833:25
 1e105ca:    50 70             	r0 = 5			  ## analog.c:834:13
 1e105cc:    8f f3 c2 a2       	call 2049412 <delay : 4b54 >			  ## analog.c:834:13
 1e105d0:    00 f4 02 ec       	[r14 + 0] |= 33554432			  ## analog.c:835:25
 1e105d4:    00 f6 18 e0       	r0 = [r14 + 24]			  ## analog.c:836:21
 1e105d8:    3a f3 fc 0f       	if ((r0 & 67108864) != 0) goto -8 <.GJTIE705_1_1_+0x7F6 : 1e105d4 >			  ## analog.c:836:13
 1e105dc:    04 f6 1c e0       	r4 = [r14 + 28]			  ## analog.c:838:24
 1e105e0:    50 70             	r0 = 5			  ## analog.c:839:13
 1e105e2:    8f f3 b7 a2       	call 2049390 <delay : 4b54 >			  ## analog.c:839:13
 1e105e6:    06 f6 20 e0       	r6 = [r14 + 32]			  ## analog.c:841:24
 1e105ea:    50 70             	r0 = 5			  ## analog.c:842:13
 1e105ec:    8f f3 b2 a2       	call 2049380 <delay : 4b54 >			  ## analog.c:842:13
 1e105f0:    b0 fd 40 04       	r0 = sextra(r4, p:8, l:16)			  ## analog.c:840:29
 1e105f4:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:38
 1e105f8:    b0 fd 40 06       	r0 = sextra(r6, p:8, l:16)			  ## analog.c:843:29
 1e105fc:    15 80             	r5 += 1			  ## analog.c:832:30
 1e105fe:    64 05             	r4 = r5.l (u)			  ## analog.c:832:30
 1e10600:    80 fe 00 20       	r2 += r0 * r0			  ## analog.c:844:19
 1e10604:    44 e1 dc 1f       	if (r4 != 20) goto -72 <.GJTIE705_1_1_+0x7E2 : 1e105c0 >
 1e10608:    70 fc 68 ff       	r0 = r7 + -152
 1e1060c:    05 08             	r5 = r0
 1e1060e:    50 4a             	r0 = [r5 + 20]
 1e10610:    e2 fd 80 40       	r4 = r0 & r8
 1e10614:    e0 fe a0 02       	r0 = r2 / r10 (s)			  ## analog.c:846:14
 1e10618:    5c 4a             	[r5 + 20] = r4
 1e1061a:    12 08             	r2 = r1			  ## analog.c:848:13
 1e1061c:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE705_1_1_+0x844 : 1e10622 >			  ## analog.c:848:13
 1e10620:    b2 08             	r2 = r11			  ## analog.c:848:13
 1e10622:    30 f2 01 30       	if (r0 < r3) goto 2 <.GJTIE705_1_1_+0x84A : 1e10628 >
 1e10626:    30 08             	r0 = r3			  ## analog.c:848:13
 1e10628:    11 80             	r1 += 1			  ## analog.c:826:28
 1e1062a:    64 04             	r4 = r1.l (u)			  ## analog.c:826:28
 1e1062c:    03 08             	r3 = r0			  ## analog.c:826:28
 1e1062e:    84 e2 b5 1f       	if (r4 != 40) goto -150 <.GJTIE705_1_1_+0x7BE : 1e1059c >
 1e10632:    54 08             	r4 = r5
 1e10634:    50 48             	r0 = [r4 + 20]			  ## analog.c:856:17
 1e10636:    51 c2             	r1 = r2 << 9			  ## analog.c:856:21
 1e10638:    c3 ff 00 fe 03 00 	r3 = 261632 <text_size+0x27C20 : 3fe00 >			  ## analog.c:856:21
 1e1063e:    51 b7             	r1 &= r3			  ## analog.c:856:21
 1e10640:    50 b2             	r0 |= r1			  ## analog.c:856:17
 1e10642:    58 48             	[r4 + 20] = r0			  ## analog.c:856:17
 1e10644:    10 d2             	r0 = r2 >> 8			  ## analog.c:860:22
 1e10646:    c1 ff 3c 29 00 00 	r1 = 10556 <tws_bulk_pool_end : 293c >			  ## analog.c:860:22
 1e1064c:    58 63             	b[r1 + 21] = r0			  ## analog.c:860:22
 1e1064e:    4a 63             	b[r1 + 20] = r2			  ## analog.c:860:22
 1e10650:    20 4e             	r0 = [r7 + 8]			  ## analog.c:875:20
 1e10652:    70 b8             	r0 &= 4294901759			  ## analog.c:875:20
 1e10654:    28 4e             	[r7 + 8] = r0			  ## analog.c:875:20
 1e10656:    20 70             	r0 = 2			  ## analog.c:876:5
 1e10658:    8f f3 7c a2       	call 2049272 <delay : 4b54 >			  ## analog.c:876:5
 1e1065c:    f0 49             	r0 = [r4 + 124]			  ## analog.c:877:13
 1e1065e:    f0 b0             	r0 &= 4294967293			  ## analog.c:877:13
 1e10660:    f8 49             	[r4 + 124] = r0			  ## analog.c:877:13
 1e10662:    20 70             	r0 = 2			  ## analog.c:878:5
 1e10664:    8f f3 76 a2       	call 2049260 <delay : 4b54 >			  ## analog.c:878:5
 1e10668:    f0 49             	r0 = [r4 + 124]			  ## analog.c:879:13
 1e1066a:    70 b1             	r0 &= 4294967291			  ## analog.c:879:13
 1e1066c:    f8 49             	[r4 + 124] = r0			  ## analog.c:879:13
 1e1066e:    20 70             	r0 = 2			  ## analog.c:880:5
 1e10670:    8f f3 70 a2       	call 2049248 <delay : 4b54 >			  ## analog.c:880:5
 1e10674:    00 f6 08 e0       	r0 = [r14 + 8]			  ## analog.c:881:17
 1e10678:    30 fd 03 0c       	r0 = r0 & 4244635647			  ## analog.c:881:17
 1e1067c:    10 f6 08 e0       	[r14 + 8] = r0			  ## analog.c:881:17
 1e10680:    20 70             	r0 = 2			  ## analog.c:882:5
 1e10682:    8f f3 67 a2       	call 2049230 <delay : 4b54 >			  ## analog.c:882:5
 1e10686:    90 48             	r0 = [r4 + 36]			  ## analog.c:883:17
 1e10688:    f0 b5             	r0 &= 4294965247			  ## analog.c:883:17
 1e1068a:    98 48             	[r4 + 36] = r0			  ## analog.c:883:17
 1e1068c:    bf f3 a7 f4       	call -5810 <bt_analog_part_init : 1e0efde >			  ## analog.c:266:9
 1e10690:    bf f3 48 f5       	call -5488 <reset_trim_info : 1e0f124 >			  ## analog.c:268:9
 1e10694:    0a f6 00 f0       	r10 = [r15 + 0]			  ## analog.c:3939:29
 1e10698:    40 71             	r0 = 20			  ## analog.c:3940:5
 1e1069a:    8f f3 5b a2       	call 2049206 <delay : 4b54 >			  ## analog.c:3940:5
 1e1069e:    0e f6 04 f0       	r14 = [r15 + 4]			  ## analog.c:3941:29
 1e106a2:    40 71             	r0 = 20			  ## analog.c:3942:5
 1e106a4:    8f f3 56 a2       	call 2049196 <delay : 4b54 >			  ## analog.c:3942:5
 1e106a8:    00 f6 08 f0       	r0 = [r15 + 8]			  ## analog.c:3943:29
 1e106ac:    38 02             	[sp+12] = r0			  ## analog.c:3944:5
 1e106ae:    40 71             	r0 = 20			  ## analog.c:3944:5
 1e106b0:    8f f3 50 a2       	call 2049184 <delay : 4b54 >			  ## analog.c:3944:5
 1e106b4:    09 f6 0c f0       	r9 = [r15 + 12]			  ## analog.c:3945:29
 1e106b8:    40 71             	r0 = 20			  ## analog.c:3946:5
 1e106ba:    8f f3 4b a2       	call 2049174 <delay : 4b54 >			  ## analog.c:3946:5
 1e106be:    0d f6 10 f0       	r13 = [r15 + 16]			  ## analog.c:3947:29
 1e106c2:    40 71             	r0 = 20			  ## analog.c:3948:5
 1e106c4:    8f f3 46 a2       	call 2049164 <delay : 4b54 >			  ## analog.c:3948:5
 1e106c8:    00 f6 14 f0       	r0 = [r15 + 20]			  ## analog.c:3949:29
 1e106cc:    28 02             	[sp+8] = r0			  ## analog.c:3950:5
 1e106ce:    40 71             	r0 = 20			  ## analog.c:3950:5
 1e106d0:    8f f3 40 a2       	call 2049152 <delay : 4b54 >			  ## analog.c:3950:5
 1e106d4:    08 f6 18 f0       	r8 = [r15 + 24]			  ## analog.c:3951:29
 1e106d8:    40 71             	r0 = 20			  ## analog.c:3952:5
 1e106da:    8f f3 3b a2       	call 2049142 <delay : 4b54 >			  ## analog.c:3952:5
 1e106de:    0b f6 20 f0       	r11 = [r15 + 32]			  ## analog.c:3953:29
 1e106e2:    40 71             	r0 = 20			  ## analog.c:3954:5
 1e106e4:    8f f3 36 a2       	call 2049132 <delay : 4b54 >			  ## analog.c:3954:5
 1e106e8:    00 f6 24 f0       	r0 = [r15 + 36]			  ## analog.c:3955:29
 1e106ec:    40 71             	r0 = 20			  ## analog.c:3956:5
 1e106ee:    8f f3 31 a2       	call 2049122 <delay : 4b54 >			  ## analog.c:3956:5
 1e106f2:    00 f6 28 f0       	r0 = [r15 + 40]			  ## analog.c:3957:30
 1e106f6:    40 71             	r0 = 20			  ## analog.c:3958:5
 1e106f8:    8f f3 2c a2       	call 2049112 <delay : 4b54 >			  ## analog.c:3958:5
 1e106fc:    00 70             	r0 = 0			  ## analog.c:3958:5
 1e106fe:    c6 ff 53 29 00 00 	r6 = 10579 <ldo_trim_res : 2953 >			  ## analog.c:3958:5
 1e10704:    98 6c             	b[r6 + 9] = r0			  ## analog.c:3979:29
 1e10706:    78 6c             	b[r6 + 7] = r0			  ## analog.c:3972:34
 1e10708:    68 6c             	b[r6 + 6] = r0			  ## analog.c:3972:34
 1e1070a:    58 6c             	b[r6 + 5] = r0			  ## analog.c:3972:34
 1e1070c:    48 6c             	b[r6 + 4] = r0			  ## analog.c:3972:34
 1e1070e:    38 6c             	b[r6 + 3] = r0			  ## analog.c:3972:34
 1e10710:    28 6c             	b[r6 + 2] = r0			  ## analog.c:3972:34
 1e10712:    18 6c             	b[r6 + 1] = r0			  ## analog.c:3972:34
 1e10714:    08 6c             	b[r6 + 0] = r0			  ## analog.c:3972:34
 1e10716:    c0 6c             	r0 = b[r6 + 12] (u)			  ## analog.c:3981:35
 1e10718:    b1 6c             	r1 = b[r6 + 11] (u)			  ## analog.c:3981:35
 1e1071a:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## analog.c:3981:35
 1e1071e:    20 fd fd 1a       	r0 = r1 & 64768			  ## analog.c:3989:28
 1e10722:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:3989:28
 1e10724:    00 d2             	r0 = r0 >> 8			  ## analog.c:3989:28
 1e10726:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:3989:28
 1e10728:    97 f3 38 b3       	call 3106416 <local_irq_disable : 106d9c >			  ## analog.c:3991:5
 1e1072c:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:3400:23
 1e10730:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e10734:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:3400:23
 1e10738:    0b f4 28 fb       	[r15 + 44] |= 2621440			  ## analog.c:3400:23
 1e1073c:    40 71             	r0 = 20			  ## analog.c:3995:5
 1e1073e:    8f f3 09 a2       	call 2049042 <delay : 4b54 >			  ## analog.c:3995:5
 1e10742:    00 6c             	r0 = b[r6 + 0] (u)			  ## analog.c:3995:5
 1e10744:    cf ff ff 03 f8 ff 	r15 = 4294444031 <bank_code_load_addr+0x165B53 : 1f803ff >			  ## analog.c:3995:5
 1e1074a:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10750:    12 08             	r2 = r1
 1e10752:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3413:23
 1e10754:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3413:23
 1e10758:    a9 44             	[r2 + 40] = r1			  ## analog.c:3413:23
 1e1075a:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3415:23
 1e1075c:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3415:23
 1e10760:    b9 44             	[r2 + 44] = r1			  ## analog.c:3415:23
 1e10762:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3419:23
 1e10766:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3421:23
 1e10768:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3421:29
 1e1076c:    80 c2             	r0 = r0 << 10			  ## analog.c:3421:29
 1e1076e:    50 b2             	r0 |= r1			  ## analog.c:3421:23
 1e10770:    00 fd 54 03       	r0 = r0 | 434176			  ## analog.c:3421:23
 1e10774:    b8 44             	[r2 + 44] = r0			  ## analog.c:3421:23
 1e10776:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:3999:9
 1e1077a:    8f f3 eb a1       	call 2048982 <delay : 4b54 >			  ## analog.c:3999:9
 1e1077e:    20 70             	r0 = 2			  ## analog.c:4000:13
 1e10780:    bf f3 b2 f7       	call -4252 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4000:13
 1e10784:    01 6c             	r1 = b[r6 + 0] (u)			  ## analog.c:4000:13
 1e10786:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE705_1_1_+0x9BA : 1e10798 >			  ## analog.c:4000:13
 1e1078c:    10 92             	r0 = r1 + 1			  ## analog.c:4003:40
 1e1078e:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4003:40
 1e10790:    08 6c             	b[r6 + 0] = r0			  ## analog.c:4003:40
 1e10792:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE705_1_1_+0x96C : 1e1074a >			  ## analog.c:4003:40
 1e10796:    02 18             	goto 4 <.GJTIE705_1_1_+0x9BE : 1e1079c >			  ## analog.c:4003:40
 1e10798:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE705_1_1_+0x9C2 : 1e107a0 >
 1e1079c:    71 70             	r1 = 7
 1e1079e:    09 6c             	b[r6 + 0] = r1			  ## analog.c:4007:40
 1e107a0:    c0 6c             	r0 = b[r6 + 12] (u)
 1e107a2:    b2 6c             	r2 = b[r6 + 11] (u)
 1e107a4:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e107a8:    03 fd 01 29       	r3 = r2 | 1			  ## analog.c:4014:39
 1e107ac:    30 fd 01 29       	r0 = r2 & 4294967294			  ## analog.c:4011:39
 1e107b0:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4010:85
 1e107b4:    02 08             	r2 = r0			  ## analog.c:4010:71
 1e107b6:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE705_1_1_+0x9DE : 1e107bc >			  ## analog.c:4010:71
 1e107ba:    32 08             	r2 = r3			  ## analog.c:4010:71
 1e107bc:    d1 8f             	r1 += -3			  ## analog.c:4010:41
 1e107be:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0x9E6 : 1e107c4 >			  ## analog.c:4010:41
 1e107c2:    20 08             	r0 = r2			  ## analog.c:4010:71
 1e107c4:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4011:39
 1e107c6:    00 d2             	r0 = r0 >> 8			  ## analog.c:4011:39
 1e107c8:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4011:39
 1e107ca:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e107d0:    01 08             	r1 = r0
 1e107d2:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3400:23
 1e107d4:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e107d8:    b8 42             	[r1 + 44] = r0			  ## analog.c:3400:23
 1e107da:    0b f4 38 1b       	[r1 + 44] |= 3670016			  ## analog.c:3400:23
 1e107de:    40 71             	r0 = 20			  ## analog.c:4024:5
 1e107e0:    8f f3 b8 a1       	call 2048880 <delay : 4b54 >			  ## analog.c:4024:5
 1e107e4:    10 6c             	r0 = b[r6 + 1] (u)			  ## analog.c:4024:5
 1e107e6:    c5 ff 00 14 06 00 	r5 = 398336 <text_size+0x49220 : 61400 >			  ## analog.c:4024:5
 1e107ec:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e107f2:    12 08             	r2 = r1
 1e107f4:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3428:23
 1e107f6:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3428:23
 1e107fa:    a9 44             	[r2 + 40] = r1			  ## analog.c:3428:23
 1e107fc:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3430:23
 1e107fe:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3430:23
 1e10802:    b9 44             	[r2 + 44] = r1			  ## analog.c:3430:23
 1e10804:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3434:23
 1e10808:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3436:23
 1e1080a:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3437:29
 1e1080e:    40 c3             	r0 = r0 << 13			  ## analog.c:3437:29
 1e10810:    50 b2             	r0 |= r1			  ## analog.c:3436:23
 1e10812:    50 ba             	r0 |= r5			  ## analog.c:3436:23
 1e10814:    b8 44             	[r2 + 44] = r0			  ## analog.c:3436:23
 1e10816:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4028:9
 1e1081a:    8f f3 9b a1       	call 2048822 <delay : 4b54 >			  ## analog.c:4028:9
 1e1081e:    20 70             	r0 = 2			  ## analog.c:4029:13
 1e10820:    bf f3 62 f7       	call -4412 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4029:13
 1e10824:    11 6c             	r1 = b[r6 + 1] (u)			  ## analog.c:4029:13
 1e10826:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE705_1_1_+0xA5A : 1e10838 >			  ## analog.c:4029:13
 1e1082c:    10 92             	r0 = r1 + 1			  ## analog.c:4032:38
 1e1082e:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4032:38
 1e10830:    18 6c             	b[r6 + 1] = r0			  ## analog.c:4032:38
 1e10832:    81 e0 db 3f       	if (r1 < 8) goto -74 <.GJTIE705_1_1_+0xA0E : 1e107ec >			  ## analog.c:4032:38
 1e10836:    02 18             	goto 4 <.GJTIE705_1_1_+0xA5E : 1e1083c >			  ## analog.c:4032:38
 1e10838:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE705_1_1_+0xA62 : 1e10840 >
 1e1083c:    71 70             	r1 = 7
 1e1083e:    19 6c             	b[r6 + 1] = r1			  ## analog.c:4036:38
 1e10840:    c0 6c             	r0 = b[r6 + 12] (u)
 1e10842:    b2 6c             	r2 = b[r6 + 11] (u)
 1e10844:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e10848:    03 fd 02 29       	r3 = r2 | 2			  ## analog.c:4043:37
 1e1084c:    30 fd 02 29       	r0 = r2 & 4294967293			  ## analog.c:4040:37
 1e10850:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4039:93
 1e10854:    02 08             	r2 = r0			  ## analog.c:4039:74
 1e10856:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE705_1_1_+0xA7E : 1e1085c >			  ## analog.c:4039:74
 1e1085a:    32 08             	r2 = r3			  ## analog.c:4039:74
 1e1085c:    d1 8f             	r1 += -3			  ## analog.c:4039:39
 1e1085e:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0xA86 : 1e10864 >			  ## analog.c:4039:39
 1e10862:    20 08             	r0 = r2			  ## analog.c:4039:74
 1e10864:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4040:37
 1e10866:    00 d2             	r0 = r0 >> 8			  ## analog.c:4040:37
 1e10868:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4040:37
 1e1086a:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e10870:    01 08             	r1 = r0
 1e10872:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3400:23
 1e10874:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e10878:    b8 42             	[r1 + 44] = r0			  ## analog.c:3400:23
 1e1087a:    0b f4 48 1b       	[r1 + 44] |= 4718592			  ## analog.c:3400:23
 1e1087e:    40 71             	r0 = 20			  ## analog.c:4053:5
 1e10880:    8f f3 68 a1       	call 2048720 <delay : 4b54 >			  ## analog.c:4053:5
 1e10884:    20 6c             	r0 = b[r6 + 2] (u)			  ## analog.c:4053:5
 1e10886:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1088c:    12 08             	r2 = r1
 1e1088e:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3443:23
 1e10890:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3443:23
 1e10894:    a9 44             	[r2 + 40] = r1			  ## analog.c:3443:23
 1e10896:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3445:23
 1e10898:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3445:23
 1e1089c:    b9 44             	[r2 + 44] = r1			  ## analog.c:3445:23
 1e1089e:    0a f4 03 2c       	[r2 + 40] |= 50331648			  ## analog.c:3449:23
 1e108a2:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3451:23
 1e108a4:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3453:29
 1e108a8:    00 c4             	r0 = r0 << 16			  ## analog.c:3453:29
 1e108aa:    50 b2             	r0 |= r1			  ## analog.c:3451:23
 1e108ac:    00 fd b4 0a       	r0 = r0 | 46080			  ## analog.c:3451:23
 1e108b0:    b8 44             	[r2 + 44] = r0			  ## analog.c:3451:23
 1e108b2:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4057:9
 1e108b6:    8f f3 4d a1       	call 2048666 <delay : 4b54 >			  ## analog.c:4057:9
 1e108ba:    20 70             	r0 = 2			  ## analog.c:4058:13
 1e108bc:    bf f3 14 f7       	call -4568 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4058:13
 1e108c0:    21 6c             	r1 = b[r6 + 2] (u)			  ## analog.c:4058:13
 1e108c2:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE705_1_1_+0xAF6 : 1e108d4 >			  ## analog.c:4058:13
 1e108c8:    10 92             	r0 = r1 + 1			  ## analog.c:4061:35
 1e108ca:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4061:35
 1e108cc:    28 6c             	b[r6 + 2] = r0			  ## analog.c:4061:35
 1e108ce:    81 e0 da 3f       	if (r1 < 8) goto -76 <.GJTIE705_1_1_+0xAA8 : 1e10886 >			  ## analog.c:4061:35
 1e108d2:    02 18             	goto 4 <.GJTIE705_1_1_+0xAFA : 1e108d8 >			  ## analog.c:4061:35
 1e108d4:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE705_1_1_+0xAFE : 1e108dc >
 1e108d8:    71 70             	r1 = 7
 1e108da:    29 6c             	b[r6 + 2] = r1			  ## analog.c:4065:35
 1e108dc:    c0 6c             	r0 = b[r6 + 12] (u)
 1e108de:    b2 6c             	r2 = b[r6 + 11] (u)
 1e108e0:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e108e4:    03 fd 04 29       	r3 = r2 | 4			  ## analog.c:4072:34
 1e108e8:    30 fd 04 29       	r0 = r2 & 4294967291			  ## analog.c:4069:34
 1e108ec:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4068:86
 1e108f0:    02 08             	r2 = r0			  ## analog.c:4068:69
 1e108f2:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE705_1_1_+0xB1A : 1e108f8 >			  ## analog.c:4068:69
 1e108f6:    32 08             	r2 = r3			  ## analog.c:4068:69
 1e108f8:    d1 8f             	r1 += -3			  ## analog.c:4068:36
 1e108fa:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0xB22 : 1e10900 >			  ## analog.c:4068:36
 1e108fe:    20 08             	r0 = r2			  ## analog.c:4068:69
 1e10900:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4069:34
 1e10902:    00 d2             	r0 = r0 >> 8			  ## analog.c:4069:34
 1e10904:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4069:34
 1e10906:    c0 ff 00 19 1e 00 	r0 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1090c:    01 08             	r1 = r0
 1e1090e:    b0 42             	r0 = [r1 + 44]			  ## analog.c:3400:23
 1e10910:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e10914:    b8 42             	[r1 + 44] = r0			  ## analog.c:3400:23
 1e10916:    0b f4 58 1b       	[r1 + 44] |= 5767168			  ## analog.c:3400:23
 1e1091a:    40 71             	r0 = 20			  ## analog.c:4082:5
 1e1091c:    8f f3 1a a1       	call 2048564 <delay : 4b54 >			  ## analog.c:4082:5
 1e10920:    30 6c             	r0 = b[r6 + 3] (u)			  ## analog.c:4082:5
 1e10922:    45 fb a0 5a       	r5 = r5 + 40960			  ## analog.c:4082:5
 1e10926:    c1 ff 00 19 1e 00 	r1 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >
 1e1092c:    12 08             	r2 = r1
 1e1092e:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3459:23
 1e10930:    31 fd 07 1c       	r1 = r1 & 4177526783			  ## analog.c:3459:23
 1e10934:    a9 44             	[r2 + 40] = r1			  ## analog.c:3459:23
 1e10936:    b1 44             	r1 = [r2 + 44]			  ## analog.c:3461:23
 1e10938:    e2 fd f0 11       	r1 = r1 & r15			  ## analog.c:3461:23
 1e1093c:    b9 44             	[r2 + 44] = r1			  ## analog.c:3461:23
 1e1093e:    a1 44             	r1 = [r2 + 40]			  ## analog.c:3465:23
 1e10940:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3465:29
 1e10944:    00 c6             	r0 = r0 << 24			  ## analog.c:3465:29
 1e10946:    50 b2             	r0 |= r1			  ## analog.c:3465:23
 1e10948:    a8 44             	[r2 + 40] = r0			  ## analog.c:3465:23
 1e1094a:    b0 44             	r0 = [r2 + 44]			  ## analog.c:3467:23
 1e1094c:    50 ba             	r0 |= r5			  ## analog.c:3467:23
 1e1094e:    b8 44             	[r2 + 44] = r0			  ## analog.c:3467:23
 1e10950:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4086:9
 1e10954:    8f f3 fe a0       	call 2048508 <delay : 4b54 >			  ## analog.c:4086:9
 1e10958:    20 70             	r0 = 2			  ## analog.c:4087:13
 1e1095a:    bf f3 c5 f6       	call -4726 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4087:13
 1e1095e:    31 6c             	r1 = b[r6 + 3] (u)			  ## analog.c:4087:13
 1e10960:    08 ff 84 03 06 00 	if (r0 > 900) goto 12 <.GJTIE705_1_1_+0xB94 : 1e10972 >			  ## analog.c:4087:13
 1e10966:    10 92             	r0 = r1 + 1			  ## analog.c:4090:35
 1e10968:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4090:35
 1e1096a:    38 6c             	b[r6 + 3] = r0			  ## analog.c:4090:35
 1e1096c:    81 e0 db 3f       	if (r1 < 8) goto -74 <.GJTIE705_1_1_+0xB48 : 1e10926 >			  ## analog.c:4090:35
 1e10970:    02 18             	goto 4 <.GJTIE705_1_1_+0xB98 : 1e10976 >			  ## analog.c:4090:35
 1e10972:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE705_1_1_+0xB9C : 1e1097a >
 1e10976:    71 70             	r1 = 7
 1e10978:    39 6c             	b[r6 + 3] = r1			  ## analog.c:4094:35
 1e1097a:    c0 6c             	r0 = b[r6 + 12] (u)
 1e1097c:    b2 6c             	r2 = b[r6 + 11] (u)
 1e1097e:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e10982:    03 fd 08 29       	r3 = r2 | 8			  ## analog.c:4101:34
 1e10986:    30 fd 08 29       	r0 = r2 & 4294967287			  ## analog.c:4098:34
 1e1098a:    64 fb 02 19       	r4 = 2 - r1			  ## analog.c:4097:86
 1e1098e:    02 08             	r2 = r0			  ## analog.c:4097:69
 1e10990:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE705_1_1_+0xBB8 : 1e10996 >			  ## analog.c:4097:69
 1e10994:    32 08             	r2 = r3			  ## analog.c:4097:69
 1e10996:    e1 8f             	r1 += -2			  ## analog.c:4097:36
 1e10998:    cf ff 00 19 1e 00 	r15 = 1972480 <uECC_vli_cmp_unsafe+0xDA904 : 1e1900 >			  ## analog.c:4097:36
 1e1099e:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0xBC6 : 1e109a4 >			  ## analog.c:4097:36
 1e109a2:    20 08             	r0 = r2			  ## analog.c:4097:69
 1e109a4:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4098:34
 1e109a6:    00 d2             	r0 = r0 >> 8			  ## analog.c:4098:34
 1e109a8:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4098:34
 1e109aa:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:3400:23
 1e109ae:    30 fd 78 0b       	r0 = r0 & 4287102975			  ## analog.c:3400:23
 1e109b2:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:3400:23
 1e109b6:    00 f6 2c f0       	r0 = [r15 + 44]			  ## analog.c:3406:27
 1e109ba:    10 f6 2c f0       	[r15 + 44] = r0			  ## analog.c:3406:27
 1e109be:    40 71             	r0 = 20			  ## analog.c:4112:5
 1e109c0:    8f f3 c8 a0       	call 2048400 <delay : 4b54 >			  ## analog.c:4112:5
 1e109c4:    40 6c             	r0 = b[r6 + 4] (u)			  ## analog.c:4112:5
 1e109c6:    c4 ff e1 ff 1f ff 	r4 = 4280287201 <uECC_vli_cmp_unsafe+0x10F8FE5 : 11fffe1 >			  ## analog.c:4112:5
 1e109cc:    01 f6 20 f0       	r1 = [r15 + 32]			  ## analog.c:3510:22
 1e109d0:    51 b9             	r1 &= r4			  ## analog.c:3510:22
 1e109d2:    11 f6 20 f0       	[r15 + 32] = r1			  ## analog.c:3510:22
 1e109d6:    01 f6 20 f0       	r1 = [r15 + 32]			  ## analog.c:3515:22
 1e109da:    80 c0             	r0 = r0 << 2			  ## analog.c:3516:25
 1e109dc:    20 fd 1c 09       	r0 = r0 & 28			  ## analog.c:3516:25
 1e109e0:    50 b2             	r0 |= r1			  ## analog.c:3515:22
 1e109e2:    00 fd 60 0b       	r0 = r0 | 6291456			  ## analog.c:3515:22
 1e109e6:    10 f6 20 f0       	[r15 + 32] = r0			  ## analog.c:3515:22
 1e109ea:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4116:9
 1e109ee:    8f f3 b1 a0       	call 2048354 <delay : 4b54 >			  ## analog.c:4116:9
 1e109f2:    10 70             	r0 = 1			  ## analog.c:4117:13
 1e109f4:    bf f3 78 f6       	call -4880 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4117:13
 1e109f8:    41 6c             	r1 = b[r6 + 4] (u)			  ## analog.c:4117:13
 1e109fa:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE705_1_1_+0xC2E : 1e10a0c >			  ## analog.c:4117:13
 1e10a00:    10 92             	r0 = r1 + 1			  ## analog.c:4120:35
 1e10a02:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4120:35
 1e10a04:    48 6c             	b[r6 + 4] = r0			  ## analog.c:4120:35
 1e10a06:    81 e0 e1 3f       	if (r1 < 8) goto -62 <.GJTIE705_1_1_+0xBEE : 1e109cc >			  ## analog.c:4120:35
 1e10a0a:    02 18             	goto 4 <.GJTIE705_1_1_+0xC32 : 1e10a10 >			  ## analog.c:4120:35
 1e10a0c:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE705_1_1_+0xC36 : 1e10a14 >
 1e10a10:    71 70             	r1 = 7
 1e10a12:    49 6c             	b[r6 + 4] = r1			  ## analog.c:4124:35
 1e10a14:    c0 6c             	r0 = b[r6 + 12] (u)
 1e10a16:    b2 6c             	r2 = b[r6 + 11] (u)
 1e10a18:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e10a1c:    03 fd 10 29       	r3 = r2 | 16			  ## analog.c:4131:34
 1e10a20:    30 fd 10 29       	r0 = r2 & 4294967279			  ## analog.c:4128:34
 1e10a24:    64 fb 03 19       	r4 = 3 - r1			  ## analog.c:4127:84
 1e10a28:    02 08             	r2 = r0			  ## analog.c:4127:68
 1e10a2a:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE705_1_1_+0xC52 : 1e10a30 >			  ## analog.c:4127:68
 1e10a2e:    32 08             	r2 = r3			  ## analog.c:4127:68
 1e10a30:    d1 8f             	r1 += -3			  ## analog.c:4127:36
 1e10a32:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0xC5A : 1e10a38 >			  ## analog.c:4127:36
 1e10a36:    20 08             	r0 = r2			  ## analog.c:4127:68
 1e10a38:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4128:34
 1e10a3a:    00 d2             	r0 = r0 >> 8			  ## analog.c:4128:34
 1e10a3c:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4128:34
 1e10a3e:    1b f6 20 f0       	[r15 + 32] = r11			  ## analog.c:4137:22
 1e10a42:    40 71             	r0 = 20			  ## analog.c:4180:5
 1e10a44:    8f f3 86 a0       	call 2048268 <delay : 4b54 >			  ## analog.c:4180:5
 1e10a48:    60 6c             	r0 = b[r6 + 6] (u)			  ## analog.c:4180:5
 1e10a4a:    cb ff e5 53 a7 44 	r11 = 1151816677 <uECC_vli_cmp_unsafe+0x96E3E9 : a753e5 >			  ## analog.c:4180:5
 1e10a50:    c5 ff 00 3e 0d 02 	r5 = 34422272 <text_size+0xBBC20 : d3e00 >			  ## analog.c:4180:5
 1e10a56:    c4 ff a5 16 0d 01 	r4 = 17634981 <uECC_vli_cmp_unsafe+0xFCA6A9 : 10d16a5 >			  ## analog.c:4180:5
 1e10a5c:    1b f6 00 f0       	[r15 + 0] = r11			  ## analog.c:3581:22
 1e10a60:    15 f6 0c f0       	[r15 + 12] = r5			  ## analog.c:3596:22
 1e10a64:    80 c5             	r0 = r0 << 22			  ## analog.c:3621:26
 1e10a66:    20 fd c0 0b       	r0 = r0 & 12582912			  ## analog.c:3621:26
 1e10a6a:    50 b8             	r0 |= r4			  ## analog.c:3621:55
 1e10a6c:    10 f6 10 f0       	[r15 + 16] = r0			  ## analog.c:3607:22
 1e10a70:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4184:9
 1e10a74:    8f f3 6e a0       	call 2048220 <delay : 4b54 >			  ## analog.c:4184:9
 1e10a78:    20 70             	r0 = 2			  ## analog.c:4185:13
 1e10a7a:    bf f3 35 f6       	call -5014 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4185:13
 1e10a7e:    61 6c             	r1 = b[r6 + 6] (u)			  ## analog.c:4185:13
 1e10a80:    08 ff 52 03 06 00 	if (r0 > 850) goto 12 <.GJTIE705_1_1_+0xCB4 : 1e10a92 >			  ## analog.c:4185:13
 1e10a86:    10 92             	r0 = r1 + 1			  ## analog.c:4188:36
 1e10a88:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4188:36
 1e10a8a:    68 6c             	b[r6 + 6] = r0			  ## analog.c:4188:36
 1e10a8c:    41 e0 e6 3f       	if (r1 < 4) goto -52 <.GJTIE705_1_1_+0xC7E : 1e10a5c >			  ## analog.c:4188:36
 1e10a90:    02 18             	goto 4 <.GJTIE705_1_1_+0xCB8 : 1e10a96 >			  ## analog.c:4188:36
 1e10a92:    41 e0 02 30       	if (r1 < 4) goto 4 <.GJTIE705_1_1_+0xCBC : 1e10a9a >
 1e10a96:    31 70             	r1 = 3
 1e10a98:    69 6c             	b[r6 + 6] = r1			  ## analog.c:4192:36
 1e10a9a:    c0 6c             	r0 = b[r6 + 12] (u)
 1e10a9c:    b2 6c             	r2 = b[r6 + 11] (u)
 1e10a9e:    c8 fd 40 20       	r2 <= insert(r0, p:8, l:8)
 1e10aa2:    c0 ff bf ff 00 00 	r0 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## analog.c:4196:35
 1e10aa8:    50 b5             	r0 &= r2			  ## analog.c:4196:35
 1e10aaa:    12 b3             	r2 |= 64			  ## analog.c:4199:35
 1e10aac:    f1 8f             	r1 += -1			  ## analog.c:4195:37
 1e10aae:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0xCD6 : 1e10ab4 >			  ## analog.c:4195:37
 1e10ab2:    20 08             	r0 = r2			  ## analog.c:4195:74
 1e10ab4:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4196:35
 1e10ab6:    00 d2             	r0 = r0 >> 8			  ## analog.c:4196:35
 1e10ab8:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4196:35
 1e10aba:    1a f6 00 f0       	[r15 + 0] = r10			  ## analog.c:4203:22
 1e10abe:    19 f6 0c f0       	[r15 + 12] = r9			  ## analog.c:4204:22
 1e10ac2:    1d f6 10 f0       	[r15 + 16] = r13			  ## analog.c:4205:22
 1e10ac6:    40 71             	r0 = 20			  ## analog.c:4214:5
 1e10ac8:    8f f3 44 a0       	call 2048136 <delay : 4b54 >			  ## analog.c:4214:5
 1e10acc:    70 6c             	r0 = b[r6 + 7] (u)			  ## analog.c:4214:5
 1e10ace:    c4 ff 96 18 1a 00 	r4 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## analog.c:4214:5
 1e10ad4:    b9 fc 00 80       	r9 = r11 + -32768			  ## analog.c:4214:5
 1e10ad8:    cb ff 9b c5 d0 08 	r11 = 147899803 <uECC_vli_cmp_unsafe+0xC0559F : d0c59b >			  ## analog.c:4214:5
 1e10ade:    c5 ff 5a 13 e6 ff 	r5 = 4293268314 <bank_code_load_addr+0x46AAE : 1e6135a >			  ## analog.c:4214:5
 1e10ae4:    cc ff b8 09 00 00 	r12 = 2488 <system_data_end : 9b8 >			  ## analog.c:4214:5
 1e10aea:    4d fb 04 f2       	r13 = r15 + 67584			  ## analog.c:4214:5
 1e10aee:    01 68             	r1 = b[r4 + 0] (u)			  ## analog.c:3633:5
 1e10af0:    21 fd f8 19       	r1 = r1 & 248			  ## analog.c:3633:5
 1e10af4:    11 b1             	r1 |= 4			  ## analog.c:3633:5
 1e10af6:    09 68             	b[r4 + 0] = r1			  ## analog.c:3633:5
 1e10af8:    19 f6 00 f0       	[r15 + 0] = r9			  ## analog.c:3635:22
 1e10afc:    1b f6 14 f0       	[r15 + 20] = r11			  ## analog.c:3650:23
 1e10b00:    80 c3             	r0 = r0 << 14			  ## analog.c:3678:25
 1e10b02:    20 fd 60 02       	r0 = r0 & 114688			  ## analog.c:3678:25
 1e10b06:    50 ba             	r0 |= r5			  ## analog.c:3682:52
 1e10b08:    10 f6 18 f0       	[r15 + 24] = r0			  ## analog.c:3673:22
 1e10b0c:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4218:9
 1e10b10:    8f f3 20 a0       	call 2048064 <delay : 4b54 >			  ## analog.c:4218:9
 1e10b14:    20 70             	r0 = 2			  ## analog.c:4219:13
 1e10b16:    bf f3 e7 f5       	call -5170 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4219:13
 1e10b1a:    71 6c             	r1 = b[r6 + 7] (u)			  ## analog.c:4219:13
 1e10b1c:    08 ff 1a 04 06 00 	if (r0 > 1050) goto 12 <.GJTIE705_1_1_+0xD50 : 1e10b2e >			  ## analog.c:4219:13
 1e10b22:    10 92             	r0 = r1 + 1			  ## analog.c:4222:35
 1e10b24:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4222:35
 1e10b26:    78 6c             	b[r6 + 7] = r0			  ## analog.c:4222:35
 1e10b28:    81 e0 e1 3f       	if (r1 < 8) goto -62 <.GJTIE705_1_1_+0xD10 : 1e10aee >			  ## analog.c:4222:35
 1e10b2c:    02 18             	goto 4 <.GJTIE705_1_1_+0xD54 : 1e10b32 >			  ## analog.c:4222:35
 1e10b2e:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE705_1_1_+0xD58 : 1e10b36 >
 1e10b32:    71 70             	r1 = 7
 1e10b34:    79 6c             	b[r6 + 7] = r1			  ## analog.c:4226:35
 1e10b36:    c0 6c             	r0 = b[r6 + 12] (u)
 1e10b38:    b2 6c             	r2 = b[r6 + 11] (u)
 1e10b3a:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e10b3e:    03 fd 80 29       	r3 = r2 | 128			  ## analog.c:4233:34
 1e10b42:    30 fd 80 29       	r0 = r2 & 4294967167			  ## analog.c:4230:34
 1e10b46:    65 fb 03 19       	r5 = 3 - r1			  ## analog.c:4229:92
 1e10b4a:    02 08             	r2 = r0			  ## analog.c:4229:72
 1e10b4c:    15 e0 01 c0       	ifs (r5 > 1) goto 2 <.GJTIE705_1_1_+0xD74 : 1e10b52 >			  ## analog.c:4229:72
 1e10b50:    32 08             	r2 = r3			  ## analog.c:4229:72
 1e10b52:    d1 8f             	r1 += -3			  ## analog.c:4229:36
 1e10b54:    c9 ff 3c 29 00 00 	r9 = 10556 <tws_bulk_pool_end : 293c >			  ## analog.c:4229:36
 1e10b5a:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0xD82 : 1e10b60 >			  ## analog.c:4229:36
 1e10b5e:    20 08             	r0 = r2			  ## analog.c:4229:72
 1e10b60:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4230:34
 1e10b62:    00 d2             	r0 = r0 >> 8			  ## analog.c:4230:34
 1e10b64:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4230:34
 1e10b66:    00 68             	r0 = b[r4 + 0] (u)			  ## analog.c:4237:5
 1e10b68:    20 fd f8 09       	r0 = r0 & 248			  ## analog.c:4237:5
 1e10b6c:    00 fd 03 09       	r0 = r0 | 3			  ## analog.c:4237:5
 1e10b70:    08 68             	b[r4 + 0] = r0			  ## analog.c:4237:5
 1e10b72:    1a f6 00 f0       	[r15 + 0] = r10			  ## analog.c:4238:22
 1e10b76:    20 02             	r0 = [sp+8]			  ## analog.c:4239:22
 1e10b78:    10 f6 14 f0       	[r15 + 20] = r0			  ## analog.c:4239:22
 1e10b7c:    18 f6 18 f0       	[r15 + 24] = r8			  ## analog.c:4240:22
 1e10b80:    40 71             	r0 = 20			  ## analog.c:4249:5
 1e10b82:    8f f3 e7 9f       	call 2047950 <delay : 4b54 >			  ## analog.c:4249:5
 1e10b86:    90 6c             	r0 = b[r6 + 9] (u)			  ## analog.c:4249:5
 1e10b88:    c4 ff e5 d2 0f 49 	r4 = 1225773797 <uECC_vli_cmp_unsafe+0xFF62E9 : 10fd2e5 >			  ## analog.c:4249:5
 1e10b8e:    20 fd 07 09       	r0 = r0 & 7			  ## analog.c:3700:24
 1e10b92:    41 08             	r1 = r4			  ## analog.c:3702:51
 1e10b94:    c3 fd a8 10       	r1 <= insert(r0, p:21, l:3)			  ## analog.c:3702:51
 1e10b98:    11 f6 00 f0       	[r15 + 0] = r1			  ## analog.c:3690:22
 1e10b9c:    01 f4 40 fb       	[r15 + 4] |= 4194304			  ## analog.c:3705:22
 1e10ba0:    02 f4 01 f9       	[r15 + 8] |= 1			  ## analog.c:3707:22
 1e10ba4:    00 fb d0 07       	r0 = 2000 <DRIVER_CODE_TOTAL+0x4A : 7d0 >			  ## analog.c:4253:9
 1e10ba8:    8f f3 d4 9f       	call 2047912 <delay : 4b54 >			  ## analog.c:4253:9
 1e10bac:    20 70             	r0 = 2			  ## analog.c:4254:13
 1e10bae:    bf f3 9b f5       	call -5322 <get_ldo_voltage : 1e0f6e8 >			  ## analog.c:4254:13
 1e10bb2:    91 6c             	r1 = b[r6 + 9] (u)			  ## analog.c:4254:13
 1e10bb4:    08 ff 4c 04 06 00 	if (r0 > 1100) goto 12 <.GJTIE705_1_1_+0xDE8 : 1e10bc6 >			  ## analog.c:4254:13
 1e10bba:    10 92             	r0 = r1 + 1			  ## analog.c:4257:33
 1e10bbc:    01 04             	r1 = r0.b0 (u)			  ## analog.c:4257:33
 1e10bbe:    98 6c             	b[r6 + 9] = r0			  ## analog.c:4257:33
 1e10bc0:    81 e0 e5 3f       	if (r1 < 8) goto -54 <.GJTIE705_1_1_+0xDB0 : 1e10b8e >			  ## analog.c:4257:33
 1e10bc4:    02 18             	goto 4 <.GJTIE705_1_1_+0xDEC : 1e10bca >			  ## analog.c:4257:33
 1e10bc6:    81 e0 02 30       	if (r1 < 8) goto 4 <.GJTIE705_1_1_+0xDF0 : 1e10bce >
 1e10bca:    71 70             	r1 = 7
 1e10bcc:    99 6c             	b[r6 + 9] = r1			  ## analog.c:4261:33
 1e10bce:    c0 6c             	r0 = b[r6 + 12] (u)
 1e10bd0:    b2 6c             	r2 = b[r6 + 11] (u)
 1e10bd2:    d8 fd 40 20       	r2 <= insert(r0, p:8, l:24)
 1e10bd6:    03 fd 02 2a       	r3 = r2 | 512			  ## analog.c:4268:32
 1e10bda:    30 fd 02 2a       	r0 = r2 & 4294966783			  ## analog.c:4265:32
 1e10bde:    64 fb 04 19       	r4 = 4 - r1			  ## analog.c:4264:86
 1e10be2:    02 08             	r2 = r0			  ## analog.c:4264:68
 1e10be4:    14 e0 01 c0       	ifs (r4 > 1) goto 2 <.GJTIE705_1_1_+0xE0C : 1e10bea >			  ## analog.c:4264:68
 1e10be8:    32 08             	r2 = r3			  ## analog.c:4264:68
 1e10bea:    c1 8f             	r1 += -4			  ## analog.c:4264:34
 1e10bec:    21 e0 01 c0       	ifs (r1 > 2) goto 2 <.GJTIE705_1_1_+0xE14 : 1e10bf2 >			  ## analog.c:4264:34
 1e10bf0:    20 08             	r0 = r2			  ## analog.c:4264:68
 1e10bf2:    b8 6c             	b[r6 + 11] = r0			  ## analog.c:4265:32
 1e10bf4:    00 d2             	r0 = r0 >> 8			  ## analog.c:4265:32
 1e10bf6:    c8 6c             	b[r6 + 12] = r0			  ## analog.c:4265:32
 1e10bf8:    1a f6 00 f0       	[r15 + 0] = r10			  ## analog.c:4272:22
 1e10bfc:    1e f6 04 f0       	[r15 + 4] = r14			  ## analog.c:4273:22
 1e10c00:    30 02             	r0 = [sp+12]			  ## analog.c:4274:22
 1e10c02:    10 f6 08 f0       	[r15 + 8] = r0			  ## analog.c:4274:22
 1e10c06:    00 f6 00 f0       	r0 = [r15 + 0]			  ## analog.c:3358:5
 1e10c0a:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## analog.c:3358:5
 1e10c0e:    10 f6 00 f0       	[r15 + 0] = r0			  ## analog.c:3358:5
 1e10c12:    97 f3 c1 b0       	call 3105154 <local_irq_enable : 106d98 >			  ## analog.c:4283:5
 1e10c16:    bf f3 e2 f1       	call -7228 <bt_analog_part_init : 1e0efde >			  ## analog.c:278:9
 1e10c1a:    bf f3 83 f2       	call -6906 <reset_trim_info : 1e0f124 >			  ## analog.c:281:9
 1e10c1e:    60 08             	r0 = r6			  ## analog.c:282:9
 1e10c20:    bf f3 37 f4       	call -6034 <set_ldo_trim_res : 1e0f492 >			  ## analog.c:282:9
 1e10c24:    14 a1             	r4 = sp + 17			  ## analog.c:282:9
 1e10c26:    62 71             	r2 = 22			  ## analog.c:285:9
 1e10c28:    40 08             	r0 = r4			  ## analog.c:285:9
 1e10c2a:    91 08             	r1 = r9			  ## analog.c:285:9
 1e10c2c:    97 f3 5a b1       	call 3105460 <memcpy : 106ee4 >			  ## analog.c:285:9
 1e10c30:    60 99             	r0 = r4 + 22			  ## analog.c:286:31
 1e10c32:    d2 70             	r2 = 13			  ## analog.c:286:9
 1e10c34:    61 08             	r1 = r6			  ## analog.c:286:9
 1e10c36:    97 f3 55 b1       	call 3105450 <memcpy : 106ee4 >			  ## analog.c:286:9
 1e10c3a:    d0 75             	r0 = 93			  ## analog.c:287:9
 1e10c3c:    32 72             	r2 = 35			  ## analog.c:287:9
 1e10c3e:    41 08             	r1 = r4			  ## analog.c:287:9
 1e10c40:    bf f3 e8 dd       	call -17456 <syscfg_write : 1e0c814 >			  ## analog.c:287:9
 1e10c44:    15 f4 80 f9       	[r15 + 84] |= 128			  ## analog.c:1579:23
 1e10c48:    00 f6 00 f0       	r0 = [r15 + 0]			  ## analog.c:1581:22
 1e10c4c:    c1 ff 21 00 0c 00 	r1 = 786465 <text_size+0xA7E41 : c0021 >			  ## analog.c:1581:22
 1e10c52:    50 b2             	r0 |= r1			  ## analog.c:1581:22
 1e10c54:    10 f6 00 f0       	[r15 + 0] = r0			  ## analog.c:1581:22
 1e10c58:    01 f4 40 fb       	[r15 + 4] |= 4194304			  ## analog.c:1586:22
 1e10c5c:    00 f6 04 f0       	r0 = [r15 + 4]			  ## analog.c:1588:22
 1e10c60:    f0 b5             	r0 &= 4294965247			  ## analog.c:1588:22
 1e10c62:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1588:22
 1e10c66:    02 70             	r2 = 0
 1e10c68:    01 70             	r1 = 0
 1e10c6a:    00 70             	r0 = 0
 1e10c6c:    03 f6 04 f0       	r3 = [r15 + 4]			  ## analog.c:1591:26
 1e10c70:    33 fd 1e 3c       	r3 = r3 & 3791650815			  ## analog.c:1591:26
 1e10c74:    13 f6 04 f0       	[r15 + 4] = r3			  ## analog.c:1591:26
 1e10c78:    03 f6 04 f0       	r3 = [r15 + 4]			  ## analog.c:1592:26
 1e10c7c:    04 08             	r4 = r0			  ## analog.c:1592:26
 1e10c7e:    e0 fd 20 03       	r0 = r3 | r2			  ## analog.c:1592:26
 1e10c82:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1592:26
 1e10c86:    00 fb 58 02       	r0 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## analog.c:1593:9
 1e10c8a:    8f f3 63 9f       	call 2047686 <delay : 4b54 >			  ## analog.c:1593:9
 1e10c8e:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:1594:25
 1e10c92:    00 fb 58 02       	r0 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## analog.c:1595:9
 1e10c96:    8f f3 5d 9f       	call 2047674 <delay : 4b54 >			  ## analog.c:1595:9
 1e10c9a:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:1596:25
 1e10c9e:    00 fb 58 02       	r0 = 600 <BTCTLER_CL_RAM_TOTAL+0x74 : 258 >			  ## analog.c:1597:9
 1e10ca2:    8f f3 57 9f       	call 2047662 <delay : 4b54 >			  ## analog.c:1597:9
 1e10ca6:    00 f6 78 f0       	r0 = [r15 + 120]			  ## analog.c:1598:25
 1e10caa:    81 fd 18 00       	r0 = uextra(r0, p:3, l:1)			  ## analog.c:1598:16
 1e10cae:    60 ff ff 49 01 00 	if ((r4 & 255) == 0) goto 2 <.GJTIE705_1_1_+0xED8 : 1e10cb6 >			  ## analog.c:1598:16
 1e10cb4:    06 20             	if (r0 == 0) goto 12 <.GJTIE705_1_1_+0xEE4 : 1e10cc2 >
 1e10cb6:    11 80             	r1 += 1			  ## analog.c:1590:26
 1e10cb8:    42 fb 02 2c       	r2 = r2 + 33554432			  ## analog.c:1590:19
 1e10cbc:    01 e1 d6 3f       	if (r1 < 16) goto -84 <.GJTIE705_1_1_+0xE8E : 1e10c6c >			  ## analog.c:1590:19
 1e10cc0:    0d 18             	goto 26 <.GJTIE705_1_1_+0xEFE : 1e10cdc >			  ## analog.c:1590:19
 1e10cc2:    00 f6 04 f0       	r0 = [r15 + 4]			  ## analog.c:1602:30
 1e10cc6:    30 fd 1e 0c       	r0 = r0 & 3791650815			  ## analog.c:1602:30
 1e10cca:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1602:30
 1e10cce:    00 f6 04 f0       	r0 = [r15 + 4]			  ## analog.c:1603:30
 1e10cd2:    50 b4             	r0 |= r2			  ## analog.c:1603:30
 1e10cd4:    10 f6 04 f0       	[r15 + 4] = r0			  ## analog.c:1603:30
 1e10cd8:    01 f4 08 fa       	[r15 + 4] |= 2048			  ## analog.c:1604:30
 1e10cdc:    10 fc ff ff       	r0 = r1 + -1			  ## analog.c:1610:18
 1e10ce0:    01 04             	r1 = r0.b0 (u)			  ## analog.c:1610:18
 1e10ce2:    04 70             	r4 = 0			  ## analog.c:1610:18
 1e10ce4:    10 70             	r0 = 1			  ## analog.c:1610:18
 1e10ce6:    91 e0 01 30       	if (r1 < 9) goto 2 <.GJTIE705_1_1_+0xF0E : 1e10cec >			  ## analog.c:1610:18
 1e10cea:    00 70             	r0 = 0			  ## analog.c:1610:18
 1e10cec:    c5 ff 52 29 00 00 	r5 = 10578 <lnav_flag : 2952 >
 1e10cf2:    08 6a             	b[r5 + 0] = r0
 1e10cf4:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:2060:23
 1e10cf8:    70 b7             	r0 &= 4294950911			  ## analog.c:2060:23
 1e10cfa:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2060:23
 1e10cfe:    c0 ff ee ff b5 fe 	r0 = 4273340398 <uECC_vli_cmp_unsafe+0xA58FF2 : b5ffee >			  ## analog.c:2060:23
 1e10d04:    10 f6 50 f0       	[r15 + 80] = r0			  ## analog.c:2060:23
 1e10d08:    c0 ff 61 90 ff 01 	r0 = 33525857 <bank_code_load_addr+0x1DE7B5 : 1ff9061 >			  ## analog.c:2060:23
 1e10d0e:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2060:23
 1e10d12:    bf f3 34 f5       	call -5528 <bta_pll_config_init : 1e0f77e >			  ## analog.c:2975:5
 1e10d16:    c5 f4 b4 79       	[r7 + 20] = 180			  ## analog.c:3155:19
 1e10d1a:    c1 ff 40 e9 e0 01 	r1 = 31516992 <TXPWR_table : 1e0e940 >			  ## analog.c:3155:19
 1e10d20:    c2 ff 6c e9 e0 01 	r2 = 31517036 <TXSET_table : 1e0e96c >			  ## analog.c:3155:19
 1e10d26:    03 70             	r3 = 0			  ## analog.c:3155:19
 1e10d28:    6c 4e             	[r7 + 24] = r4			  ## analog.c:3157:23
 1e10d2a:    a0 70             	r0 = 10			  ## analog.c:3158:9
 1e10d2c:    8f f3 12 9f       	call 2047524 <delay : 4b54 >			  ## analog.c:3158:9
 1e10d30:    80 f6 00 31       	r0 = [r3+r1]			  ## analog.c:3158:9
 1e10d34:    68 4e             	[r7 + 24] = r0			  ## analog.c:3158:9
 1e10d36:    a0 70             	r0 = 10			  ## analog.c:3170:9
 1e10d38:    8f f3 0c 9f       	call 2047512 <delay : 4b54 >			  ## analog.c:3170:9
 1e10d3c:    80 f6 00 32       	r0 = [r3+r2]			  ## analog.c:3171:25
 1e10d40:    68 4e             	[r7 + 24] = r0			  ## analog.c:3171:23
 1e10d42:    a0 70             	r0 = 10			  ## analog.c:3172:9
 1e10d44:    8f f3 06 9f       	call 2047500 <delay : 4b54 >			  ## analog.c:3172:9
 1e10d48:    43 80             	r3 += 4			  ## analog.c:3156:19
 1e10d4a:    c3 e2 ed 1f       	if (r3 != 44) goto -38 <.GJTIE705_1_1_+0xF4A : 1e10d28 >			  ## analog.c:3156:5
 1e10d4e:    00 6a             	r0 = b[r5 + 0] (u)			  ## analog.c:2981:16
 1e10d50:    01 70             	r1 = 0			  ## analog.c:2981:5
 1e10d52:    bf f3 39 ef       	call -8590 <btagc_init : 1e0ebc8 >			  ## analog.c:2981:5
 1e10d56:    15 f4 10 fa       	[r15 + 84] |= 4096			  ## analog.c:2988:23
 1e10d5a:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:2989:23
 1e10d5e:    f0 b5             	r0 &= 4294965247			  ## analog.c:2989:23
 1e10d60:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2989:23
 1e10d64:    00 f6 54 f0       	r0 = [r15 + 84]			  ## analog.c:2990:23
 1e10d68:    f0 b6             	r0 &= 4294959103			  ## analog.c:2990:23
 1e10d6a:    10 f6 54 f0       	[r15 + 84] = r0			  ## analog.c:2990:23
 1e10d6e:    70 fc 68 ff       	r0 = r7 + -152			  ## analog.c:2990:23
 1e10d72:    01 08             	r1 = r0			  ## analog.c:2990:23
 1e10d74:    40 43             	r0 = [r1 + 80]			  ## analog.c:2992:16
 1e10d76:    70 b3             	r0 &= 4294967231			  ## analog.c:2992:16
 1e10d78:    48 43             	[r1 + 80] = r0			  ## analog.c:2992:16
 1e10d7a:    1f f4 40 19       	[r1 + 124] |= 64			  ## RF.c:361:5
 1e10d7e:    00 f9 0d c0       	r0 = b[r12 + 13] (u)			  ## RF.c:447:12
 1e10d82:    0b 20             	if (r0 == 0) goto 22 <.GJTIE705_1_1_+0xFBC : 1e10d9a >			  ## RF.c:447:12
 1e10d84:    00 f4 08 d9       	[r13 + 0] |= 8			  ## RF.c:385:5
 1e10d88:    00 f4 10 d9       	[r13 + 0] |= 16			  ## RF.c:386:5
 1e10d8c:    f0 fc 08 39       	r0 = r15 + 14600			  ## RF.c:386:5
 1e10d90:    01 40             	r1 = [r0 + 0]			  ## RF.c:387:19
 1e10d92:    02 fb 7f fe       	r2 = -385 <bank_code_load_addr+0x1E55D3 : 1fffe7f >			  ## RF.c:387:19
 1e10d96:    51 b5             	r1 &= r2			  ## RF.c:387:19
 1e10d98:    09 40             	[r0 + 0] = r1			  ## RF.c:387:19
 1e10d9a:    10 70             	r0 = 1			  ## RF.c:450:14
 1e10d9c:    10 f9 09 c0       	b[r12 + 9] = r0			  ## RF.c:450:14
 1e10da0:    9c 0a             	sp += 312			  ## RF.c:450:14
 1e10da2:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF.c:451:1


bt_rf_close:
 1e10da4:    34 00             	[--sp] = rets			  ## RF.c:455:0
 1e10da6:    c0 ff b8 09 00 00 	r0 = 2488 <system_data_end : 9b8 >			  ## RF.c:455:0
 1e10dac:    91 60             	r1 = b[r0 + 9] (u)			  ## RF.c:456:12
 1e10dae:    1b 22             	if (r1 == 0) goto 54 <bt_rf_close+0x42 : 1e10de6 >			  ## RF.c:456:12
 1e10db0:    01 70             	r1 = 0
 1e10db2:    99 60             	b[r0 + 9] = r1			  ## RF.c:459:14
 1e10db4:    c2 ff 00 21 1f 00 	r2 = 2040064 <uECC_vli_cmp_unsafe+0xEB104 : 1f2100 >			  ## RF.c:459:14
 1e10dba:    00 44             	r0 = [r2 + 0]			  ## RF.c:460:5
 1e10dbc:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## RF.c:460:5
 1e10dc0:    08 44             	[r2 + 0] = r0			  ## RF.c:460:5
 1e10dc2:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## RF.c:461:5
 1e10dc6:    8f f3 c5 9e       	call 2047370 <delay : 4b54 >			  ## RF.c:461:5
 1e10dca:    09 44             	[r2 + 0] = r1			  ## RF.c:462:17
 1e10dcc:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## RF.c:463:5
 1e10dd0:    8f f3 c0 9e       	call 2047360 <delay : 4b54 >			  ## RF.c:463:5
 1e10dd4:    c0 ff 10 00 1e 00 	r0 = 1966096 <uECC_vli_cmp_unsafe+0xD9014 : 1e0010 >			  ## RF.c:464:5
 1e10dda:    00 f4 c0 0a       	[r0 + 0] |= 49152			  ## RF.c:464:5
 1e10dde:    00 fb e8 03       	r0 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## RF.c:465:5
 1e10de2:    8f f3 b7 9e       	call 2047342 <delay : 4b54 >			  ## RF.c:465:5
 1e10de6:    30 00             	pc = [sp++]			  ## RF.c:468:1


get_bt_osc_offset_flag:
 1e10de8:    34 00             	[--sp] = rets			  ## analog.c:114:0
 1e10dea:    e0 76             	r0 = 110			  ## analog.c:115:9
 1e10dec:    bf f3 1b df       	call -16842 <btif_eara_check_id : 1e0cc26 >			  ## analog.c:115:9
 1e10df0:    01 70             	r1 = 0			  ## analog.c:115:9
 1e10df2:    04 20             	if (r0 == 0) goto 8 <get_bt_osc_offset_flag+0x14 : 1e10dfc >			  ## analog.c:115:9
 1e10df4:    c0 ff b8 09 00 00 	r0 = 2488 <system_data_end : 9b8 >			  ## analog.c:117:19
 1e10dfa:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:117:19
 1e10dfc:    40 04             	r0 = r1.b0 (u)			  ## analog.c:122:1
 1e10dfe:    30 00             	pc = [sp++]			  ## analog.c:122:1


bt_osc_offset_set:
 1e10e00:    c1 ff b8 09 00 00 	r1 = 2488 <system_data_end : 9b8 >			  ## analog.c:125:0
 1e10e06:    c2 62             	r2 = b[r1 + 12] (u)			  ## analog.c:126:12
 1e10e08:    03 34             	if (r2 != 0) goto 6 <bt_osc_offset_set+0x10 : 1e10e10 >			  ## analog.c:126:12
 1e10e0a:    52 52             	r2 = h[r1 + 10] (u)			  ## analog.c:130:9
 1e10e0c:    20 09             	r0 += r2			  ## analog.c:130:9
 1e10e0e:    58 52             	h[r1 + 10] = r0
 1e10e10:    20 00             	rts			  ## analog.c:137:1


bt_osc_offset_save:
 1e10e12:    74 01             	[--sp] = {rets, r4}			  ## analog.c:193:0
 1e10e14:    fc 0b             	sp += -8			  ## analog.c:193:0
 1e10e16:    c0 ff b8 09 00 00 	r0 = 2488 <system_data_end : 9b8 >			  ## analog.c:193:0
 1e10e1c:    c1 60             	r1 = b[r0 + 12] (u)			  ## analog.c:196:12
 1e10e1e:    13 32             	if (r1 != 0) goto 38 <bt_osc_offset_save+0x34 : 1e10e46 >			  ## analog.c:196:12
 1e10e20:    21 f7 0a 00       	r1 = h[r0 + 10] (s)			  ## analog.c:200:18
 1e10e24:    04 a0             	r4 = sp + 0			  ## analog.c:200:18
 1e10e26:    00 fd 02 49       	r0 = r4 | 2			  ## analog.c:200:9
 1e10e2a:    0a d4             	r2 = r1 >> 16			  ## analog.c:200:16
 1e10e2c:    1a 50             	h[r0 + 2] = r2			  ## analog.c:200:16
 1e10e2e:    91 f5 02 00       	h[sp+2] = r1			  ## analog.c:200:16
 1e10e32:    41 70             	r1 = 4			  ## analog.c:201:15
 1e10e34:    bf f3 c2 7d       	call -66684 <CRC16 : 1e009bc >			  ## analog.c:201:15
 1e10e38:    90 f5 00 00       	h[sp] = r0			  ## analog.c:201:13
 1e10e3c:    e0 76             	r0 = 110			  ## analog.c:206:5
 1e10e3e:    62 70             	r2 = 6			  ## analog.c:206:5
 1e10e40:    41 08             	r1 = r4			  ## analog.c:206:5
 1e10e42:    bf f3 e7 dc       	call -17970 <syscfg_write : 1e0c814 >			  ## analog.c:206:5
 1e10e46:    04 0a             	sp += 8
 1e10e48:    54 01             	{pc, r4} = [sp++]			  ## analog.c:208:1


bt_fre_offset_get:
 1e10e4a:    c0 ff b8 09 00 00 	r0 = 2488 <system_data_end : 9b8 >			  ## analog.c:187:0
 1e10e50:    20 f7 0a 00       	r0 = h[r0 + 10] (s)			  ## analog.c:188:12
 1e10e54:    20 00             	rts			  ## analog.c:188:5


bt_get_fine_cnt:
 1e10e56:    76 01             	[--sp] = {rets, r6-r4}			  ## RF.c:498:0
 1e10e58:    c1 ff c0 4e 00 00 	r1 = 20160 <nvbss_begin : 4ec0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1740:23
 1e10e5e:    01 f9 47 10       	r1 = b[r1 + 71] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1740:23
 1e10e62:    04 08             	r4 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:1740:23
 1e10e64:    00 70             	r0 = 0
 1e10e66:    37 32             	if (r1 != 0) goto 110 <bt_get_fine_cnt+0x80 : 1e10ed6 >
 1e10e68:    c6 ff 70 20 00 00 	r6 = 8304 <gatt_client_conn_handle : 2070 >
 1e10e6e:    01 f9 84 60       	r1 = b[r6 + 132] (u)
 1e10e72:    31 22             	if (r1 == 0) goto 98 <bt_get_fine_cnt+0x80 : 1e10ed6 >
 1e10e74:    05 f6 88 60       	r5 = [r6 + 136]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:272:25
 1e10e78:    01 70             	r1 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e10e7a:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e10e7c:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e10e7e:    42 08             	r2 = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e10e80:    bf f3 96 a7       	call -45268 <__muldi3 : 1e05db0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:33
 1e10e84:    c2 ff 00 48 e8 01 	r2 = 32000000 <bank_code_load_addr+0x69F54 : 1e84800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e10e8a:    03 70             	r3 = 0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e10e8c:    bf f3 ab a7       	call -45226 <__udivdi3 : 1e05de6 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:275:68
 1e10e90:    01 f6 90 60       	r1 = [r6 + 144]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:269:26
 1e10e94:    c2 ff 00 ca 9a 3b 	r2 = 1000000000 <uECC_vli_cmp_unsafe+0x18A5A04 : 19aca00 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e10e9a:    c0 fe 50 32       	r3 = r2 / r5 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:64
 1e10e9e:    c0 fe 10 12       	r1 = r2 / r1 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:39
 1e10ea2:    e1 b2             	r1 = r1 - r3			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:280:49
 1e10ea4:    40 0e             	r0 = r0 * r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:283:34
 1e10ea6:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e10eaa:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:283:48
 1e10eae:    bf f3 83 a9       	call -44282 <__floatsisf : 1e061b8 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e10eb2:    05 08             	r5 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e10eb4:    00 fb d4 30       	r0 = 12500 <report_bss_end+0x4 : 30d4 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e10eb8:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:22
 1e10ebc:    bf f3 ac a9       	call -44200 <__floatunsisf : 1e06218 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:14
 1e10ec0:    c1 ff 00 00 20 c0 	r1 = 3223322624 <uECC_vli_cmp_unsafe+0xF9004 : 200000 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e10ec6:    bf f3 9c a8       	call -44744 <__addsf3 : 1e06002 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e10eca:    01 08             	r1 = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:31
 1e10ecc:    50 08             	r0 = r5			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e10ece:    bf f3 cd a9       	call -44134 <__subsf3 : 1e0626c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e10ed2:    bf f3 4b a9       	call -44394 <__fixsfsi : 1e0616c >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/lrc_hw.c:285:11
 1e10ed6:    c1 ff 6c fc 1c 00 	r1 = 1899628 <uECC_vli_cmp_unsafe+0xC8C70 : 1cfc6c >			  ## RF.c:505:19
 1e10edc:    01 42             	r1 = [r1 + 0]			  ## RF.c:505:19
 1e10ede:    40 09             	r0 += r4			  ## RF.c:505:61
 1e10ee0:    02 fb ff 07       	r2 = 2047 <report_data_size+0x1F : 7ff >			  ## RF.c:505:32
 1e10ee4:    51 b5             	r1 &= r2			  ## RF.c:505:32
 1e10ee6:    c2 70             	r2 = 12			  ## RF.c:505:41
 1e10ee8:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## RF.c:505:41
 1e10eec:    10 09             	r0 += r1			  ## RF.c:505:14
 1e10eee:    56 01             	{pc, r6-r4} = [sp++]			  ## RF.c:507:5


hci_transport_controller:
 1e10ef0:    6f e0 e0 01       	if (r15 == 6) goto 960 <.GJTIE783_0_0_+0x38 : 1e112b4 >
 1e10ef4:    dc 12             	call 1464 <clear_all_anchor_cnt+0x48 : 1e114ae >
 1e10ef6:    e1 01             	[--sp] = {psr, reti}
 1e10ef8:    de 12             	call 1468 <hw_entity_free+0x4 : 1e114b6 >
 1e10efa:    e1 01             	[--sp] = {psr, reti}
 1e10efc:    e2 12             	call 1476 <__set_anchor_cnt+0x6 : 1e114c2 >
 1e10efe:    e1 01             	[--sp] = {psr, reti}
 1e10f00:    e6 12             	call 1484 <__set_anchor_cnt+0x12 : 1e114ce >
 1e10f02:    e1 01             	[--sp] = {psr, reti}
 1e10f04:    f0 12             	call 1504 <__set_anchor_cnt+0x2A : 1e114e6 >
 1e10f06:    e1 01             	[--sp] = {psr, reti}
 1e10f08:    f4 12             	call 1512 <__set_anchor_cnt+0x36 : 1e114f2 >
 1e10f0a:    e1 01             	[--sp] = {psr, reti}
 1e10f0c:    00 00             	nop
 1e10f0e:    00 00             	nop
 1e10f10:    00 00             	nop
 1e10f12:    00 00             	nop
 1e10f14:    00 00             	nop
 1e10f16:    00 00             	nop


btctrler_testbox_update_msg_handle_register:
 1e10f18:    c0 ff b8 0d 00 00 	r0 = 3512 <bt_testbox_update_msg_handle : db8 >			  ## btctrler_task.c:83:0
 1e10f1e:    c1 ff c2 0d e0 01 	r1 = 31460802 <testbox_update_msg_handle : 1e00dc2 >			  ## btctrler_task.c:84:34
 1e10f24:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:84:34
 1e10f26:    20 00             	rts			  ## btctrler_task.c:85:1


btctrler_task_init:
 1e10f28:    c0 ff 68 29 00 00 	r0 = 10600 <h4_transport : 2968 >			  ## btctrler_task.c:446:0
 1e10f2e:    c1 ff f0 0e e1 01 	r1 = 31526640 <hci_transport_controller : 1e10ef0 >			  ## btctrler_task.c:454:20
 1e10f34:    09 40             	[r0 + 0] = r1			  ## btctrler_task.c:454:20
 1e10f36:    c0 ff 3c 12 e1 01 	r0 = 31527484 <btctrler_task : 1e1123c >			  ## btctrler_task.c:458:5
 1e10f3c:    c2 ff 66 e0 e0 01 	r2 = 31514726 <update_target_end+0x186 : 1e0e066 >			  ## btctrler_task.c:458:5
 1e10f42:    01 70             	r1 = 0			  ## btctrler_task.c:458:5
 1e10f44:    ff f3 36 d3       	goto -22932 <task_create : 1e0b5b4 >			  ## btctrler_task.c:458:5


btctrler_task_ready:
 1e10f48:    74 01             	[--sp] = {rets, r4}			  ## btctrler_task.c:324:0
 1e10f4a:    fe 0b             	sp += -4			  ## btctrler_task.c:324:0
 1e10f4c:    00 75             	r0 = 80			  ## btctrler_task.c:327:19
 1e10f4e:    bf f3 87 cb       	call -26866 <malloc : 1e0a660 >			  ## btctrler_task.c:327:19
 1e10f52:    02 08             	r2 = r0			  ## btctrler_task.c:327:19
 1e10f54:    0a 02             	[sp] = r2			  ## btctrler_task.c:327:13
 1e10f56:    02 34             	if (r2 != 0) goto 4 <btctrler_task_ready+0x14 : 1e10f5c >			  ## btctrler_task.c:327:13
 1e10f58:    8f f3 d2 91       	call 2040740 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e10f5c:    01 70             	r1 = 0			  ## btctrler_task.c:330:5
 1e10f5e:    20 08             	r0 = r2			  ## btctrler_task.c:330:5
 1e10f60:    97 f3 4e af       	call 3104412 <os_sem_create : 106e00 >			  ## btctrler_task.c:330:5
 1e10f64:    c0 ff 66 e0 e0 01 	r0 = 31514726 <update_target_end+0x186 : 1e0e066 >			  ## btctrler_task.c:332:11
 1e10f6a:    c1 ff 0c 00 40 00 	r1 = 4194316 <uECC_vli_cmp_unsafe+0x2F9010 : 40000c >			  ## btctrler_task.c:332:11
 1e10f70:    03 a0             	r3 = sp + 0			  ## btctrler_task.c:332:11
 1e10f72:    12 70             	r2 = 1			  ## btctrler_task.c:332:11
 1e10f74:    14 70             	r4 = 1			  ## btctrler_task.c:332:11
 1e10f76:    97 f3 33 af       	call 3104358 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:332:11
 1e10f7a:    02 02             	r2 = [sp]			  ## btctrler_task.c:332:11
 1e10f7c:    05 20             	if (r0 == 0) goto 10 <btctrler_task_ready+0x40 : 1e10f88 >
 1e10f7e:    20 08             	r0 = r2			  ## btctrler_task.c:338:5
 1e10f80:    bf f3 81 cb       	call -26878 <free : 1e0a686 >			  ## btctrler_task.c:338:5
 1e10f84:    04 70             	r4 = 0
 1e10f86:    07 18             	goto 14 <btctrler_task_ready+0x4E : 1e10f96 >
 1e10f88:    01 70             	r1 = 0			  ## btctrler_task.c:334:9
 1e10f8a:    20 08             	r0 = r2			  ## btctrler_task.c:334:9
 1e10f8c:    97 f3 3c af       	call 3104376 <os_sem_pend : 106e08 >			  ## btctrler_task.c:334:9
 1e10f90:    00 02             	r0 = [sp]			  ## btctrler_task.c:335:14
 1e10f92:    bf f3 78 cb       	call -26896 <free : 1e0a686 >			  ## btctrler_task.c:335:9
 1e10f96:    40 08             	r0 = r4			  ## btctrler_task.c:340:1
 1e10f98:    02 0a             	sp += 4			  ## btctrler_task.c:340:1
 1e10f9a:    54 01             	{pc, r4} = [sp++]			  ## btctrler_task.c:340:1


btctrler_hci_cmd_to_task:
 1e10f9c:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:251:0
 1e10f9e:    76 01             	[--sp] = {rets, r6-r4}			  ## btctrler_task.c:251:0
 1e10fa0:    de 0b             	sp += -68			  ## btctrler_task.c:251:0
 1e10fa2:    14 08             	r4 = r1			  ## btctrler_task.c:251:0
 1e10fa4:    05 08             	r5 = r0			  ## btctrler_task.c:251:0
 1e10fa6:    04 e1 02 30       	if (r4 < 16) goto 4 <btctrler_hci_cmd_to_task+0x12 : 1e10fae >			  ## btctrler_task.c:251:0
 1e10faa:    8f f3 a9 91       	call 2040658 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e10fae:    40 a5             	r0 = sp + 84
 1e10fb0:    08 02             	[sp] = r0			  ## btctrler_task.c:259:5
 1e10fb2:    14 e0 0a b0       	ifs (r4 < 1) goto 20 <btctrler_hci_cmd_to_task+0x2E : 1e10fca >			  ## btctrler_task.c:259:5
 1e10fb6:    40 a0             	r0 = sp + 4
 1e10fb8:    41 08             	r1 = r4
 1e10fba:    02 02             	r2 = [sp]			  ## btctrler_task.c:261:19
 1e10fbc:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:261:19
 1e10fbe:    0b 02             	[sp] = r3			  ## btctrler_task.c:261:19
 1e10fc0:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:261:19
 1e10fc2:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:261:17
 1e10fc6:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <btctrler_hci_cmd_to_task+0x1E : 1e10fba >			  ## btctrler_task.c:261:17
 1e10fca:    c6 ff 66 e0 e0 01 	r6 = 31514726 <update_target_end+0x186 : 1e0e066 >
 1e10fd0:    0f 18             	goto 30 <btctrler_hci_cmd_to_task+0x54 : 1e10ff0 >
 1e10fd2:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e10fd6:    61 ff ff 09 12 00 	if ((r0 & 255) != 0) goto 36 <btctrler_hci_cmd_to_task+0x64 : 1e11000 >
 1e10fdc:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e10fe0:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e10fe4:    01 ff 00 03 0b 00 	if (r0 != 768) goto 22 <btctrler_hci_cmd_to_task+0x64 : 1e11000 >
 1e10fea:    20 70             	r0 = 2			  ## btctrler_task.c:276:9
 1e10fec:    97 f3 e4 ae       	call 3104200 <os_time_dly : 106db8 >			  ## btctrler_task.c:276:9
 1e10ff0:    43 a0             	r3 = sp + 4
 1e10ff2:    60 08             	r0 = r6
 1e10ff4:    51 08             	r1 = r5
 1e10ff6:    42 08             	r2 = r4
 1e10ff8:    97 f3 f2 ae       	call 3104228 <os_taskq_post_type : 106de0 >
 1e10ffc:    50 e1 e9 0f       	if (r0 == 21) goto -46 <btctrler_hci_cmd_to_task+0x36 : 1e10fd2 >
 1e11000:    22 0a             	sp += 68
 1e11002:    16 01             	{rets, r6-r4} = [sp++]
 1e11004:    04 0a             	sp += 8
 1e11006:    20 00             	rts


btctrler_task_exit:
 1e11008:    74 01             	[--sp] = {rets, r4}			  ## btctrler_task.c:466:0
 1e1100a:    fe 0b             	sp += -4			  ## btctrler_task.c:466:0
 1e1100c:    00 75             	r0 = 80			  ## btctrler_task.c:475:19
 1e1100e:    bf f3 27 cb       	call -27058 <malloc : 1e0a660 >			  ## btctrler_task.c:475:19
 1e11012:    02 08             	r2 = r0			  ## btctrler_task.c:475:19
 1e11014:    0a 02             	[sp] = r2			  ## btctrler_task.c:475:13
 1e11016:    02 34             	if (r2 != 0) goto 4 <btctrler_task_exit+0x14 : 1e1101c >			  ## btctrler_task.c:475:13
 1e11018:    8f f3 72 91       	call 2040548 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1101c:    01 70             	r1 = 0			  ## btctrler_task.c:478:5
 1e1101e:    20 08             	r0 = r2			  ## btctrler_task.c:478:5
 1e11020:    97 f3 ee ae       	call 3104220 <os_sem_create : 106e00 >			  ## btctrler_task.c:478:5
 1e11024:    80 f3 ea 27       	call 20436 <bredr_link_check_used : 1e15ffc >			  ## btctrler_task.c:480:12
 1e11028:    0a 20             	if (r0 == 0) goto 20 <btctrler_task_exit+0x36 : 1e1103e >			  ## btctrler_task.c:480:12
 1e1102a:    14 70             	r4 = 1
 1e1102c:    30 70             	r0 = 3			  ## btctrler_task.c:481:9
 1e1102e:    97 f3 c3 ae       	call 3104134 <os_time_dly : 106db8 >			  ## btctrler_task.c:481:9
 1e11032:    80 f3 e3 27       	call 20422 <bredr_link_check_used : 1e15ffc >			  ## btctrler_task.c:480:12
 1e11036:    34 e6 02 c0       	ifs (r4 > 99) goto 4 <btctrler_task_exit+0x36 : 1e1103e >			  ## btctrler_task.c:480:12
 1e1103a:    14 80             	r4 += 1			  ## btctrler_task.c:480:36
 1e1103c:    f7 31             	if (r0 != 0) goto -18 <btctrler_task_exit+0x24 : 1e1102c >			  ## btctrler_task.c:480:36
 1e1103e:    c0 ff 02 00 40 00 	r0 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## btctrler_task.c:484:5
 1e11044:    11 70             	r1 = 1			  ## btctrler_task.c:484:5
 1e11046:    02 fb 03 0c       	r2 = 3075 <BTCTLER_CL_CODE_TOTAL+0x235 : c03 >			  ## btctrler_task.c:484:5
 1e1104a:    14 70             	r4 = 1			  ## btctrler_task.c:484:5
 1e1104c:    a7 17             	call -178 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## btctrler_task.c:484:5
 1e1104e:    80 f3 d3 25       	call 19366 <lmp_get_conn_num : 1e15bf8 >			  ## btctrler_task.c:487:12
 1e11052:    09 20             	if (r0 == 0) goto 18 <btctrler_task_exit+0x5E : 1e11066 >			  ## btctrler_task.c:487:12
 1e11054:    30 70             	r0 = 3			  ## btctrler_task.c:488:9
 1e11056:    97 f3 af ae       	call 3104094 <os_time_dly : 106db8 >			  ## btctrler_task.c:488:9
 1e1105a:    80 f3 cd 25       	call 19354 <lmp_get_conn_num : 1e15bf8 >			  ## btctrler_task.c:487:12
 1e1105e:    34 e6 02 c0       	ifs (r4 > 99) goto 4 <btctrler_task_exit+0x5E : 1e11066 >			  ## btctrler_task.c:487:12
 1e11062:    14 80             	r4 += 1			  ## btctrler_task.c:487:31
 1e11064:    f7 31             	if (r0 != 0) goto -18 <btctrler_task_exit+0x4C : 1e11054 >			  ## btctrler_task.c:487:31
 1e11066:    c4 ff 66 e0 e0 01 	r4 = 31514726 <update_target_end+0x186 : 1e0e066 >			  ## btctrler_task.c:491:5
 1e1106c:    c1 ff 0d 00 40 00 	r1 = 4194317 <uECC_vli_cmp_unsafe+0x2F9011 : 40000d >			  ## btctrler_task.c:491:5
 1e11072:    03 a0             	r3 = sp + 0			  ## btctrler_task.c:491:5
 1e11074:    12 70             	r2 = 1			  ## btctrler_task.c:491:5
 1e11076:    40 08             	r0 = r4			  ## btctrler_task.c:491:5
 1e11078:    97 f3 b2 ae       	call 3104100 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:491:5
 1e1107c:    00 02             	r0 = [sp]			  ## btctrler_task.c:493:17
 1e1107e:    01 70             	r1 = 0			  ## btctrler_task.c:493:5
 1e11080:    97 f3 c2 ae       	call 3104132 <os_sem_pend : 106e08 >			  ## btctrler_task.c:493:5
 1e11084:    00 02             	r0 = [sp]			  ## btctrler_task.c:494:10
 1e11086:    bf f3 fe ca       	call -27140 <free : 1e0a686 >			  ## btctrler_task.c:494:5
 1e1108a:    40 08             	r0 = r4			  ## btctrler_task.c:496:5
 1e1108c:    bf f3 b5 d2       	call -23190 <task_kill : 1e0b5fa >			  ## btctrler_task.c:496:5
 1e11090:    02 0a             	sp += 4			  ## btctrler_task.c:496:5
 1e11092:    54 01             	{pc, r4} = [sp++]			  ## btctrler_task.c:496:5


lmp_hci_cmd_to_conn_for_handle:
 1e11094:    cf f3 34 91       	goto 2040424 <p33_soft_reset : 3300 >			  ## btctrler_task.c:218:0


bredr_link_event:
 1e11098:    62 01             	[--sp] = {r3, r2}			  ## btctrler_task.c:315:0
 1e1109a:    77 01             	[--sp] = {rets, r7-r4}			  ## btctrler_task.c:315:0
 1e1109c:    f4 0b             	sp += -24			  ## btctrler_task.c:315:0
 1e1109e:    c2 a2             	r2 = sp + 44			  ## btctrler_task.c:315:0
 1e110a0:    0a 02             	[sp] = r2			  ## btctrler_task.c:318:5
 1e110a2:    5a 02             	[sp+20] = r2
 1e110a4:    18 02             	[sp+4] = r0			  ## btctrler_task.c:287:13
 1e110a6:    14 92             	r4 = r1 + 1
 1e110a8:    11 e0 0a b0       	ifs (r1 < 1) goto 20 <bredr_link_event+0x28 : 1e110c0 >
 1e110ac:    40 a0             	r0 = sp + 4
 1e110ae:    40 80             	r0 += 4			  ## btctrler_task.c:290:19
 1e110b0:    52 02             	r2 = [sp+20]			  ## btctrler_task.c:290:19
 1e110b2:    43 94             	r3 = r2 + 4			  ## btctrler_task.c:290:19
 1e110b4:    5b 02             	[sp+20] = r3			  ## btctrler_task.c:290:19
 1e110b6:    02 44             	r2 = [r2 + 0]			  ## btctrler_task.c:290:19
 1e110b8:    52 f6 04 00       	[r0 ++= 4] = r2			  ## btctrler_task.c:290:17
 1e110bc:    51 f3 f8 ff       	if (--r1 != 0) goto -16 <bredr_link_event+0x18 : 1e110b0 >			  ## btctrler_task.c:290:17
 1e110c0:    c5 ff 66 e0 e0 01 	r5 = 31514726 <update_target_end+0x186 : 1e0e066 >
 1e110c6:    c1 ff 01 00 40 00 	r1 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >			  ## btctrler_task.c:295:15
 1e110cc:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:295:15
 1e110ce:    50 08             	r0 = r5			  ## btctrler_task.c:295:15
 1e110d0:    42 08             	r2 = r4			  ## btctrler_task.c:295:15
 1e110d2:    97 f3 85 ae       	call 3104010 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:295:15
 1e110d6:    07 08             	r7 = r0			  ## btctrler_task.c:295:15
 1e110d8:    57 e1 22 10       	if (r7 != 21) goto 68 <bredr_link_event+0x88 : 1e11120 >
 1e110dc:    c6 ff 01 00 40 00 	r6 = 4194305 <uECC_vli_cmp_unsafe+0x2F9005 : 400001 >
 1e110e2:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:72:5
 1e110e6:    57 71             	r7 = 21
 1e110e8:    61 ff ff 09 19 00 	if ((r0 & 255) != 0) goto 50 <bredr_link_event+0x88 : 1e11120 >
 1e110ee:    28 fb 00 0b       	r0 = icfg			  ## cpu.h:79:5
 1e110f2:    20 fd 03 0a       	r0 = r0 & 768			  ## cpu.h:80:18
 1e110f6:    01 ff 00 03 12 00 	if (r0 != 768) goto 36 <bredr_link_event+0x88 : 1e11120 >
 1e110fc:    8f f3 24 90       	call 2039880 <os_current_task : 3148 >			  ## btctrler_task.c:303:21
 1e11100:    51 08             	r1 = r5			  ## btctrler_task.c:303:14
 1e11102:    97 f3 f7 ae       	call 3104238 <strcmp : 106ef4 >			  ## btctrler_task.c:303:14
 1e11106:    0c 20             	if (r0 == 0) goto 24 <bredr_link_event+0x88 : 1e11120 >			  ## btctrler_task.c:303:14
 1e11108:    20 70             	r0 = 2			  ## btctrler_task.c:308:9
 1e1110a:    97 f3 55 ae       	call 3103914 <os_time_dly : 106db8 >			  ## btctrler_task.c:308:9
 1e1110e:    43 a0             	r3 = sp + 4			  ## btctrler_task.c:308:9
 1e11110:    50 08             	r0 = r5			  ## btctrler_task.c:295:15
 1e11112:    61 08             	r1 = r6			  ## btctrler_task.c:295:15
 1e11114:    42 08             	r2 = r4			  ## btctrler_task.c:295:15
 1e11116:    97 f3 63 ae       	call 3103942 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:295:15
 1e1111a:    07 08             	r7 = r0			  ## btctrler_task.c:295:15
 1e1111c:    57 e1 e1 0f       	if (r7 == 21) goto -62 <bredr_link_event+0x4A : 1e110e2 >
 1e11120:    70 08             	r0 = r7			  ## btctrler_task.c:320:5
 1e11122:    0c 0a             	sp += 24			  ## btctrler_task.c:320:5
 1e11124:    17 01             	{rets, r7-r4} = [sp++]			  ## btctrler_task.c:320:5
 1e11126:    04 0a             	sp += 8			  ## btctrler_task.c:320:5
 1e11128:    20 00             	rts			  ## btctrler_task.c:320:5


lmp_hci_cmd_to_conn_for_addr:
 1e1112a:    cf f3 e9 90       	goto 2040274 <p33_soft_reset : 3300 >			  ## btctrler_task.c:201:0


le_hci_send_acl_packet:
 1e1112e:    c2 ff 6c 29 00 00 	r2 = 10604 <__h4_send_packet : 296c >			  ## hci_controller.c:348:0
 1e11134:    03 44             	r3 = [r2 + 0]			  ## hci_controller.c:351:5
 1e11136:    12 08             	r2 = r1			  ## hci_controller.c:351:5
 1e11138:    01 08             	r1 = r0			  ## hci_controller.c:351:5
 1e1113a:    20 70             	r0 = 2			  ## hci_controller.c:351:5
 1e1113c:    93 00             	goto r3			  ## hci_controller.c:351:5


set_bt_version:
 1e1113e:    c0 ff d4 0d 00 00 	r0 = 3540 <hci_param : dd4 >			  ## device_manager.c:151:0
 1e11144:    c1 70             	r1 = 12			  ## device_manager.c:153:31
 1e11146:    89 60             	b[r0 + 8] = r1			  ## device_manager.c:152:27
 1e11148:    c9 60             	b[r0 + 12] = r1			  ## device_manager.c:153:31
 1e1114a:    20 00             	rts			  ## device_manager.c:154:1


hci_controller_init:
 1e1114c:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:852:0
 1e1114e:    bf f3 53 f3       	call -6490 <bt_rf_init : 1e0f7f8 >			  ## hci_controller.c:858:5
 1e11152:    c4 ff 68 29 00 00 	r4 = 10600 <h4_transport : 2968 >			  ## hci_controller.c:858:5
 1e11158:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:826:9
 1e1115a:    c1 ff bc 0d 00 00 	r1 = 3516 <bt_task_thread : dbc >			  ## list.h:189:16
 1e11160:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e11162:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e11164:    0f 20             	if (r0 == 0) goto 30 <hci_controller_init+0x38 : 1e11184 >			  ## list.h:189:16
 1e11166:    11 40             	r1 = [r0 + 4]			  ## hci_controller.c:830:23
 1e11168:    03 22             	if (r1 == 0) goto 6 <hci_controller_init+0x24 : 1e11170 >			  ## hci_controller.c:830:23
 1e1116a:    00 70             	r0 = 0			  ## hci_controller.c:831:9
 1e1116c:    81 00             	call r1			  ## hci_controller.c:831:9
 1e1116e:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:831:9
 1e11170:    21 40             	r1 = [r0 + 8]			  ## hci_controller.c:834:23
 1e11172:    02 22             	if (r1 == 0) goto 4 <hci_controller_init+0x2C : 1e11178 >			  ## hci_controller.c:834:23
 1e11174:    81 00             	call r1			  ## hci_controller.c:835:9
 1e11176:    00 48             	r0 = [r4 + 0]			  ## hci_controller.c:835:9
 1e11178:    41 40             	r1 = [r0 + 16]			  ## hci_controller.c:838:23
 1e1117a:    04 22             	if (r1 == 0) goto 8 <hci_controller_init+0x38 : 1e11184 >			  ## hci_controller.c:838:23
 1e1117c:    c0 ff 02 13 e1 01 	r0 = 31527682 <hci_h4_download_data : 1e11302 >			  ## hci_controller.c:839:9
 1e11182:    81 00             	call r1			  ## hci_controller.c:839:9
 1e11184:    14 01             	{rets, r4} = [sp++]			  ## hci_controller.c:920:9
 1e11186:    c0 f3 d6 15       	goto 11180 <ll_init : 1e13d36 >			  ## hci_controller.c:920:9


hci_send_event:
 1e1118a:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:699:0
 1e1118c:    34 00             	[--sp] = rets			  ## hci_controller.c:699:0
 1e1118e:    c0 fb f8 fd       	sp += -520			  ## hci_controller.c:699:0
 1e11192:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:703:15
 1e11196:    e2 fb 0c 02       	r2 = sp + 524			  ## hci_controller.c:703:15
 1e1119a:    0a 02             	[sp] = r2			  ## hci_controller.c:705:5
 1e1119c:    40 a0             	r0 = sp + 4			  ## hci_controller.c:705:5
 1e1119e:    90 b0             	r0 |= 2			  ## hci_controller.c:706:29
 1e111a0:    bf f3 97 9b       	call -51410 <__vsprintf : 1e048d2 >			  ## hci_controller.c:706:17
 1e111a4:    02 08             	r2 = r0			  ## hci_controller.c:706:17
 1e111a6:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event+0x26 : 1e111b0 >
 1e111ac:    8f f3 a8 90       	call 2040144 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e111b0:    c0 ff 68 29 00 00 	r0 = 10600 <h4_transport : 2968 >			  ## hci_controller.c:667:9
 1e111b6:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:667:9
 1e111b8:    d2 f5 05 00       	b[sp+5] = r2			  ## hci_controller.c:708:16
 1e111bc:    08 20             	if (r0 == 0) goto 16 <hci_send_event+0x44 : 1e111ce >
 1e111be:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:667:39
 1e111c0:    06 26             	if (r3 == 0) goto 12 <hci_send_event+0x44 : 1e111ce >			  ## hci_controller.c:667:39
 1e111c2:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:711:68
 1e111c6:    22 90             	r2 = r0 + 2			  ## hci_controller.c:711:66
 1e111c8:    41 a0             	r1 = sp + 4
 1e111ca:    40 70             	r0 = 4			  ## hci_controller.c:668:16
 1e111cc:    83 00             	call r3			  ## hci_controller.c:668:16
 1e111ce:    c0 fb 08 02       	sp += 520
 1e111d2:    88 01             	{rets} = [sp++]
 1e111d4:    04 0a             	sp += 8
 1e111d6:    20 00             	rts


hci_send_event_cmd_complete:
 1e111d8:    62 01             	[--sp] = {r3, r2}			  ## hci_controller.c:745:0
 1e111da:    74 01             	[--sp] = {rets, r4}			  ## hci_controller.c:745:0
 1e111dc:    c0 fb f8 fd       	sp += -520			  ## hci_controller.c:745:0
 1e111e0:    04 08             	r4 = r0			  ## hci_controller.c:745:0
 1e111e2:    e0 70             	r0 = 14			  ## hci_controller.c:749:15
 1e111e4:    d0 f5 04 00       	b[sp+4] = r0			  ## hci_controller.c:749:15
 1e111e8:    e2 fb 10 02       	r2 = sp + 528			  ## hci_controller.c:749:15
 1e111ec:    0a 02             	[sp] = r2			  ## hci_controller.c:751:5
 1e111ee:    40 a0             	r0 = sp + 4			  ## hci_controller.c:751:5
 1e111f0:    50 80             	r0 += 5			  ## hci_controller.c:752:29
 1e111f2:    bf f3 6e 9b       	call -51492 <__vsprintf : 1e048d2 >			  ## hci_controller.c:752:17
 1e111f6:    02 08             	r2 = r0			  ## hci_controller.c:752:17
 1e111f8:    0b ff 00 21 02 00 	ifs (r2 < 256) goto 4 <hci_send_event_cmd_complete+0x2A : 1e11202 >
 1e111fe:    8f f3 7f 90       	call 2040062 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e11202:    30 94             	r0 = r2 + 3			  ## hci_controller.c:754:20
 1e11204:    d0 f5 05 00       	b[sp+5] = r0			  ## hci_controller.c:754:16
 1e11208:    11 70             	r1 = 1			  ## hci_controller.c:754:16
 1e1120a:    c0 ff 68 29 00 00 	r0 = 10600 <h4_transport : 2968 >			  ## hci_controller.c:667:9
 1e11210:    00 40             	r0 = [r0 + 0]			  ## hci_controller.c:667:9
 1e11212:    d1 f5 06 00       	b[sp+6] = r1			  ## hci_controller.c:757:17
 1e11216:    d4 f5 07 00       	b[sp+7] = r4			  ## hci_controller.c:758:17
 1e1121a:    21 d2             	r1 = r4 >> 8			  ## hci_controller.c:759:26
 1e1121c:    d1 f5 08 00       	b[sp+8] = r1			  ## hci_controller.c:759:17
 1e11220:    08 20             	if (r0 == 0) goto 16 <hci_send_event_cmd_complete+0x5A : 1e11232 >
 1e11222:    63 40             	r3 = [r0 + 24]			  ## hci_controller.c:667:39
 1e11224:    06 26             	if (r3 == 0) goto 12 <hci_send_event_cmd_complete+0x5A : 1e11232 >			  ## hci_controller.c:667:39
 1e11226:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## hci_controller.c:761:68
 1e1122a:    22 90             	r2 = r0 + 2			  ## hci_controller.c:761:66
 1e1122c:    41 a0             	r1 = sp + 4
 1e1122e:    40 70             	r0 = 4			  ## hci_controller.c:668:16
 1e11230:    83 00             	call r3			  ## hci_controller.c:668:16
 1e11232:    c0 fb 08 02       	sp += 520
 1e11236:    14 01             	{rets, r4} = [sp++]
 1e11238:    04 0a             	sp += 8
 1e1123a:    20 00             	rts


btctrler_task:
 1e1123c:    e4 0b             	sp += -56			  ## btctrler_task.c:88:0
 1e1123e:    86 17             	call -244 <hci_controller_init : 1e1114c >			  ## btctrler_task.c:91:5
 1e11240:    00 a0             	r0 = sp + 0			  ## btctrler_task.c:91:5
 1e11242:    44 90             	r4 = r0 + 4
 1e11244:    c6 ff fa ff bf ff 	r6 = 4290772986 <uECC_vli_cmp_unsafe+0x1AF8FFE : 1bffffa >
 1e1124a:    c5 ff bc 0d 00 00 	r5 = 3516 <bt_task_thread : dbc >
 1e11250:    c7 ff b8 0d 00 00 	r7 = 3512 <bt_testbox_update_msg_handle : db8 >
 1e11256:    c8 ff 68 29 00 00 	r8 = 10600 <h4_transport : 2968 >
 1e1125c:    01 a0             	r1 = sp + 0
 1e1125e:    00 70             	r0 = 0			  ## btctrler_task.c:94:19
 1e11260:    e2 70             	r2 = 14			  ## btctrler_task.c:94:19
 1e11262:    97 f3 b5 ad       	call 3103594 <os_taskq_pend : 106dd0 >			  ## btctrler_task.c:94:19
 1e11266:    d0 e0 f9 1f       	if (r0 != 13) goto -14 <btctrler_task+0x20 : 1e1125c >			  ## btctrler_task.c:95:13
 1e1126a:    00 02             	r0 = [sp]			  ## btctrler_task.c:99:17
 1e1126c:    81 b1             	r1 = r0 + r6			  ## btctrler_task.c:99:9
 1e1126e:    71 e0 20 80       	if (r1 > 7) goto 64 <.GJTIE783_0_0_+0x36 : 1e112b2 >			  ## btctrler_task.c:99:9
 1e11272:    a1 00             	tbb [r1]


.GJTIS783_0_0_:
 1e11274:    0d     < 13 : 0xD >
 1e11275:    1f     < 31 : 0x1F >
 1e11276:    04     < 4 : 0x4 >
 1e11277:    04     < 4 : 0x4 >
 1e11278:    04     < 4 : 0x4 >
 1e11279:    04     < 4 : 0x4 >
 1e1127a:    09     < 9 : 0x9 >
 1e1127b:    11     < 17 : 0x11 >
 1e1127c:    01 4e             	r1 = [r7 + 0]			  ## btctrler_task.c:158:17
 1e1127e:    19 22             	if (r1 == 0) goto 50 <.GJTIE783_0_0_+0x36 : 1e112b2 >			  ## btctrler_task.c:158:17
 1e11280:    bf f3 9f 7d       	call -66754 <testbox_update_msg_handle : 1e00dc2 >			  ## btctrler_task.c:159:17
 1e11284:    16 18             	goto 44 <.GJTIE783_0_0_+0x36 : 1e112b2 >			  ## btctrler_task.c:159:17
 1e11286:    10 02             	r0 = [sp+4]			  ## btctrler_task.c:144:35
 1e11288:    97 f3 c0 ad       	call 3103616 <os_sem_post : 106e0c >			  ## btctrler_task.c:144:13
 1e1128c:    12 18             	goto 36 <.GJTIE783_0_0_+0x36 : 1e112b2 >			  ## btctrler_task.c:144:13
 1e1128e:    40 08             	r0 = r4			  ## btctrler_task.c:137:21
 1e11290:    80 f3 fb 23       	call 18422 <ll_hci_cmd_handler : 1e15a8a >			  ## btctrler_task.c:137:21
 1e11294:    0e 18             	goto 28 <.GJTIE783_0_0_+0x36 : 1e112b2 >			  ## btctrler_task.c:137:21
 1e11296:    00 f6 00 80       	r0 = [r8 + 0]			  ## hci_controller.c:946:5
 1e1129a:    30 40             	r0 = [r0 + 12]			  ## hci_controller.c:946:19
 1e1129c:    80 00             	call r0			  ## hci_controller.c:946:5
 1e1129e:    80 f3 2b 15       	call 10838 <ll_destroy : 1e13cf8 >			  ## hci_controller.c:968:9
 1e112a2:    bf f3 7f fd       	call -1282 <bt_rf_close : 1e10da4 >			  ## hci_controller.c:971:5
 1e112a6:    10 02             	r0 = [sp+4]			  ## btctrler_task.c:149:35
 1e112a8:    97 f3 b0 ad       	call 3103584 <os_sem_post : 106e0c >			  ## btctrler_task.c:149:13
 1e112ac:    40 71             	r0 = 20			  ## btctrler_task.c:150:13
 1e112ae:    97 f3 83 ad       	call 3103494 <os_time_dly : 106db8 >			  ## btctrler_task.c:150:13
 1e112b2:    50 08             	r0 = r5			  ## hci_controller.c:847:5
 1e112b4:    bf f3 bf a4       	call -46722 <thread_run : 1e05c36 >			  ## hci_controller.c:847:5
 1e112b8:    d1 1f             	goto -94 <btctrler_task+0x20 : 1e1125c >			  ## hci_controller.c:847:5


bt_task_create:
 1e112ba:    00 70             	r0 = 0			  ## btctrler_task.c:39:0
 1e112bc:    20 00             	rts			  ## btctrler_task.c:41:5


bt_task_delete:
 1e112be:    00 70             	r0 = 0			  ## btctrler_task.c:45:0
 1e112c0:    20 00             	rts			  ## btctrler_task.c:46:5


bt_task_suspend:
 1e112c2:    00 70             	r0 = 0			  ## btctrler_task.c:50:0
 1e112c4:    20 00             	rts			  ## btctrler_task.c:59:5


bt_task_resume:
 1e112c6:    34 00             	[--sp] = rets			  ## btctrler_task.c:63:0
 1e112c8:    c0 ff 66 e0 e0 01 	r0 = 31514726 <update_target_end+0x186 : 1e0e066 >			  ## btctrler_task.c:69:5
 1e112ce:    f1 7f             	r1 = 255			  ## btctrler_task.c:69:5
 1e112d0:    02 70             	r2 = 0			  ## btctrler_task.c:69:5
 1e112d2:    03 70             	r3 = 0			  ## btctrler_task.c:69:5
 1e112d4:    97 f3 84 ad       	call 3103496 <os_taskq_post_type : 106de0 >			  ## btctrler_task.c:69:5
 1e112d8:    00 70             	r0 = 0			  ## btctrler_task.c:71:5
 1e112da:    30 00             	pc = [sp++]			  ## btctrler_task.c:71:5


h4_controller_init:
 1e112dc:    20 00             	rts			  ## h4_controller_interface.c:26:0


h4_controller_open:
 1e112de:    00 70             	r0 = 0			  ## h4_controller_interface.c:31:0
 1e112e0:    20 00             	rts			  ## h4_controller_interface.c:33:5


h4_controller_close:
 1e112e2:    00 70             	r0 = 0			  ## h4_controller_interface.c:37:0
 1e112e4:    20 00             	rts			  ## h4_controller_interface.c:39:5


h4_controller_register_packet_handler:
 1e112e6:    c1 ff 6c 29 00 00 	r1 = 10604 <__h4_send_packet : 296c >			  ## h4_controller_interface.c:43:0
 1e112ec:    08 42             	[r1 + 0] = r0			  ## h4_controller_interface.c:45:22
 1e112ee:    20 00             	rts			  ## h4_controller_interface.c:47:1


h4_controller_can_send_now:
 1e112f0:    00 70             	r0 = 0			  ## h4_controller_interface.c:54:0
 1e112f2:    20 00             	rts			  ## h4_controller_interface.c:55:5


h4_controller_send_packet:
 1e112f4:    34 00             	[--sp] = rets			  ## h4_controller_interface.c:62:0
 1e112f6:    00 04             	r0 = r0.b0 (u)			  ## h4_controller_interface.c:65:5
 1e112f8:    a2 04             	r2 = r2.l (u)			  ## h4_controller_interface.c:65:5
 1e112fa:    bf f3 6a c4       	call -30508 <hci_packet_handler : 1e09bd2 >			  ## h4_controller_interface.c:65:5
 1e112fe:    00 70             	r0 = 0			  ## h4_controller_interface.c:66:5
 1e11300:    30 00             	pc = [sp++]			  ## h4_controller_interface.c:66:5


hci_h4_download_data:
 1e11302:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_controller.c:612:0
 1e11304:    25 08             	r5 = r2			  ## hci_controller.c:612:0
 1e11306:    14 08             	r4 = r1			  ## hci_controller.c:612:0
 1e11308:    20 e0 1d 00       	if (r0 == 2) goto 58 <hci_h4_download_data+0x44 : 1e11346 >			  ## hci_controller.c:616:5
 1e1130c:    10 e0 27 10       	if (r0 != 1) goto 78 <hci_h4_download_data+0x5C : 1e1135e >
 1e11310:    0b ff ff 50 02 00 	ifs (r5 < 255) goto 4 <hci_h4_download_data+0x18 : 1e1131a >
 1e11316:    8f f3 f3 8f       	call 2039782 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1131a:    c7 ff 70 29 00 00 	r7 = 10608 <hdl.3994 : 2970 >
 1e11320:    20 4e             	r0 = [r7 + 8]			  ## hci_controller.c:585:39
 1e11322:    21 9a             	r1 = r5 + 2			  ## hci_controller.c:585:45
 1e11324:    bf f3 a6 a3       	call -47284 <lbuf_alloc_btctrler : 1e05a74 >			  ## hci_controller.c:585:11
 1e11328:    06 08             	r6 = r0			  ## hci_controller.c:585:11
 1e1132a:    19 2c             	if (r6 == 0) goto 50 <hci_h4_download_data+0x5C : 1e1135e >			  ## hci_controller.c:585:11
 1e1132c:    0d 5c             	h[r6 + 0] = r5			  ## hci_controller.c:591:15
 1e1132e:    20 9c             	r0 = r6 + 2			  ## hci_controller.c:592:17
 1e11330:    41 08             	r1 = r4			  ## hci_controller.c:592:5
 1e11332:    52 08             	r2 = r5			  ## hci_controller.c:592:5
 1e11334:    97 f3 d6 ad       	call 3103660 <memcpy : 106ee4 >			  ## hci_controller.c:592:5
 1e11338:    60 08             	r0 = r6			  ## hci_controller.c:602:5
 1e1133a:    bf f3 0e a4       	call -47076 <lbuf_push_btctrler : 1e05b5a >			  ## hci_controller.c:602:5
 1e1133e:    80 9f             	r0 = r7 + 24			  ## hci_controller.c:604:5
 1e11340:    17 01             	{rets, r7-r4} = [sp++]			  ## hci_controller.c:604:5
 1e11342:    ff f3 1f a4       	goto -47042 <thread_resume : 1e05b84 >			  ## hci_controller.c:604:5
 1e11346:    01 70             	r1 = 0			  ## hci_controller.c:626:18
 1e11348:    40 08             	r0 = r4			  ## hci_controller.c:626:18
 1e1134a:    bf f3 ff a3       	call -47106 <btctler_little_endian_read_16 : 1e05b4c >			  ## hci_controller.c:626:18
 1e1134e:    30 fd f0 0a       	r0 = r0 & 4294905855			  ## hci_controller.c:629:36
 1e11352:    80 f3 36 15       	call 10860 <ll_link_for_handle : 1e13dc2 >			  ## hci_controller.c:629:17
 1e11356:    03 20             	if (r0 == 0) goto 6 <hci_h4_download_data+0x5C : 1e1135e >			  ## hci_controller.c:629:17
 1e11358:    40 08             	r0 = r4			  ## hci_controller.c:631:21
 1e1135a:    80 f3 23 24       	call 18502 <ll_push_acl_data : 1e15ba4 >			  ## hci_controller.c:631:21
 1e1135e:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_controller.c:657:1


ble_power_ops:
 1e11360:    bd e0 e0 01       	if (r13 == 11) goto 960 <ble_enter_deepsleep+0x18 : 1e11724 >
 1e11364:    8a 37             	if (r3 != 0) goto -236 <.GJTIS783_0_0_+0x6 : 1e1127a >
 1e11366:    e1 01             	[--sp] = {psr, reti}
 1e11368:    5e 38             	if (r4 != 0) goto 188 <ble_hw_disable+0x16 : 1e11426 >
 1e1136a:    e1 01             	[--sp] = {psr, reti}
 1e1136c:    8e 38             	if (r4 != 0) goto 284 <clear_all_anchor_cnt+0x24 : 1e1148a >
 1e1136e:    e1 01             	[--sp] = {psr, reti}
 1e11370:    6e 39             	if (r4 != 0) goto -292 <btctrler_task+0x12 : 1e1124e >
 1e11372:    e1 01             	[--sp] = {psr, reti}
 1e11374:    d2 3a             	if (r5 != 0) goto 420 <__set_anchor_cnt+0x5E : 1e1151a >
 1e11376:    e1 01             	[--sp] = {psr, reti}


ble_power_put:
 1e11378:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:695:0
 1e1137a:    04 08             	r4 = r0			  ## le_low_power.c:695:0
 1e1137c:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:696:13
 1e1137e:    08 20             	if (r0 == 0) goto 16 <ble_power_put+0x18 : 1e11390 >
 1e11380:    01 40             	r1 = [r0 + 0]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:171:36
 1e11382:    12 40             	r2 = [r0 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:171:23
 1e11384:    1a 42             	[r1 + 4] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:159:16
 1e11386:    09 44             	[r2 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:160:16
 1e11388:    bf f3 7d c9       	call -27910 <free : 1e0a686 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:736:5
 1e1138c:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:698:24
 1e11390:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:700:1


__set_hw_irq:
 1e11392:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:650:0
 1e11394:    15 08             	r5 = r1			  ## RF_ble.c:650:0
 1e11396:    04 08             	r4 = r0			  ## RF_ble.c:650:0
 1e11398:    97 f3 00 ad       	call 3103232 <local_irq_disable : 106d9c >			  ## RF_ble.c:651:5
 1e1139c:    08 00             	csync			  ## RF_ble.c:651:5
 1e1139e:    c0 ff 28 80 1c 00 	r0 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >
 1e113a4:    1d 2a             	if (r5 == 0) goto 58 <__set_hw_irq+0x4E : 1e113e0 >
 1e113a6:    22 fd 01 59       	r2 = r5 & 1			  ## RF_ble.c:654:9
 1e113aa:    13 40             	r3 = [r0 + 4]			  ## RF_ble.c:654:9
 1e113ac:    f8 fd 40 12       	r1 = r2 << r4			  ## RF_ble.c:654:9
 1e113b0:    15 70             	r5 = 1			  ## RF_ble.c:654:9
 1e113b2:    05 0d             	r5 <<= r4			  ## RF_ble.c:654:9
 1e113b4:    e3 fd 50 33       	r3 = r3 & ~r5			  ## RF_ble.c:654:9
 1e113b8:    53 b2             	r3 |= r1			  ## RF_ble.c:654:9
 1e113ba:    1b 40             	[r0 + 4] = r3			  ## RF_ble.c:654:9
 1e113bc:    83 98             	r3 = r4 + 8			  ## RF_ble.c:655:9
 1e113be:    16 40             	r6 = [r0 + 4]			  ## RF_ble.c:655:9
 1e113c0:    c2 0c             	r2 <<= r3			  ## RF_ble.c:655:9
 1e113c2:    03 fb 00 01       	r3 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:655:9
 1e113c6:    03 0d             	r3 <<= r4			  ## RF_ble.c:655:9
 1e113c8:    e3 fd 30 46       	r4 = r6 & ~r3			  ## RF_ble.c:655:9
 1e113cc:    54 b4             	r4 |= r2			  ## RF_ble.c:655:9
 1e113ce:    1c 40             	[r0 + 4] = r4			  ## RF_ble.c:655:9
 1e113d0:    94 40             	r4 = [r0 + 36]			  ## RF_ble.c:656:9
 1e113d2:    e3 fd 30 44       	r4 = r4 & ~r3			  ## RF_ble.c:656:9
 1e113d6:    54 b4             	r4 |= r2			  ## RF_ble.c:656:9
 1e113d8:    9c 40             	[r0 + 36] = r4			  ## RF_ble.c:656:9
 1e113da:    d3 b7             	r3 = ~r3			  ## RF_ble.c:655:9
 1e113dc:    d4 bb             	r4 = ~r5			  ## RF_ble.c:654:9
 1e113de:    09 18             	goto 18 <__set_hw_irq+0x60 : 1e113f2 >			  ## RF_ble.c:654:9
 1e113e0:    01 fb 00 01       	r1 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## RF_ble.c:660:5
 1e113e4:    01 0d             	r1 <<= r4			  ## RF_ble.c:660:5
 1e113e6:    d3 b3             	r3 = ~r1			  ## RF_ble.c:660:5
 1e113e8:    11 70             	r1 = 1			  ## RF_ble.c:659:5
 1e113ea:    01 0d             	r1 <<= r4			  ## RF_ble.c:659:5
 1e113ec:    d4 b3             	r4 = ~r1			  ## RF_ble.c:659:5
 1e113ee:    02 70             	r2 = 0			  ## RF_ble.c:659:5
 1e113f0:    01 70             	r1 = 0			  ## RF_ble.c:659:5
 1e113f2:    05 40             	r5 = [r0 + 0]			  ## RF_ble.c:659:5
 1e113f4:    55 b9             	r5 &= r4			  ## RF_ble.c:659:5
 1e113f6:    55 b2             	r5 |= r1			  ## RF_ble.c:659:5
 1e113f8:    0d 40             	[r0 + 0] = r5			  ## RF_ble.c:659:5
 1e113fa:    05 40             	r5 = [r0 + 0]			  ## RF_ble.c:660:5
 1e113fc:    53 bb             	r3 &= r5			  ## RF_ble.c:660:5
 1e113fe:    52 b6             	r2 |= r3			  ## RF_ble.c:660:5
 1e11400:    0a 40             	[r0 + 0] = r2			  ## RF_ble.c:660:5
 1e11402:    92 40             	r2 = [r0 + 36]			  ## RF_ble.c:661:5
 1e11404:    52 b9             	r2 &= r4			  ## RF_ble.c:661:5
 1e11406:    51 b4             	r1 |= r2			  ## RF_ble.c:661:5
 1e11408:    99 40             	[r0 + 36] = r1			  ## RF_ble.c:661:5
 1e1140a:    16 01             	{rets, r6-r4} = [sp++]			  ## RF_ble.c:663:5
 1e1140c:    d7 f3 c4 ac       	goto 3103112 <local_irq_enable : 106d98 >			  ## RF_ble.c:663:5


ble_hw_disable:
 1e11410:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:681:0
 1e11412:    04 08             	r4 = r0			  ## RF_ble.c:681:0
 1e11414:    97 f3 c2 ac       	call 3103108 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11418:    08 00             	csync			  ## RF_ble.c:304:5
 1e1141a:    c5 ff 1c 80 1c 00 	r5 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e11420:    c1 f4 00 59       	[r5 + 4] = 0			  ## RF_ble.c:306:21
 1e11424:    08 00             	csync			  ## RF_ble.c:307:5
 1e11426:    c6 ff a4 2c 00 00 	r6 = 11428 <bb_hdl : 2ca4 >
 1e1142c:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:147:19
 1e1142e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11430:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11432:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e11434:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e11438:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1143a:    01 fb f0 07       	r1 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:308:50
 1e1143e:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e11440:    01 fb 05 38       	r1 = 14341 <read_flash_id+0x21 : 3805 >			  ## RF_ble.c:308:67
 1e11444:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e11446:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:308:21
 1e11448:    97 f3 a6 ac       	call 3103052 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1144c:    70 4a             	r0 = [r5 + 28]			  ## RF_ble.c:685:16
 1e1144e:    21 f3 fd 0f       	if ((r0 & 2) != 0) goto -6 <ble_hw_disable+0x3C : 1e1144c >			  ## RF_ble.c:685:9
 1e11452:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:147:19
 1e11454:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11456:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11458:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e1145a:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e1145e:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:692:5
 1e11460:    01 70             	r1 = 0			  ## RF_ble.c:692:5
 1e11462:    16 01             	{rets, r6-r4} = [sp++]			  ## RF_ble.c:692:5
 1e11464:    96 1f             	goto -212 <__set_hw_irq : 1e11392 >			  ## RF_ble.c:692:5


clear_all_anchor_cnt:
 1e11466:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:1611:0
 1e11468:    04 08             	r4 = r0			  ## RF_ble.c:1611:0
 1e1146a:    08 70             	r8 = 0			  ## RF_ble.c:1611:0
 1e1146c:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:1611:0
 1e11472:    c9 ff a4 2c 00 00 	r9 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:1611:0
 1e11478:    c5 71             	r5 = 28			  ## RF_ble.c:1611:0
 1e1147a:    07 70             	r7 = 0			  ## RF_ble.c:1611:0
 1e1147c:    97 f3 8e ac       	call 3103004 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11480:    08 00             	csync			  ## RF_ble.c:304:5
 1e11482:    18 f6 04 60       	[r6 + 4] = r8			  ## RF_ble.c:306:21
 1e11486:    08 00             	csync			  ## RF_ble.c:307:5
 1e11488:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1148c:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1148e:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11490:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e11494:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e11496:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e1149a:    50 be             	r0 |= r7			  ## RF_ble.c:308:67
 1e1149c:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:308:67
 1e114a0:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e114a2:    97 f3 79 ac       	call 3102962 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e114a6:    77 fc 00 04       	r7 = r7 + 1024			  ## RF_ble.c:1612:22
 1e114aa:    21 ff 44 7a e6 ff 	if (r7 != 17408) goto -52 <clear_all_anchor_cnt+0x16 : 1e1147c >			  ## RF_ble.c:1612:5
 1e114b0:    59 01             	{pc, r9-r4} = [sp++]			  ## RF_ble.c:1615:1


hw_entity_free:
 1e114b2:    03 20             	if (r0 == 0) goto 6 <hw_entity_free+0x8 : 1e114ba >			  ## RF_ble.c:3130:0
 1e114b4:    01 70             	r1 = 0			  ## RF_ble.c:3140:17
 1e114b6:    11 f9 64 02       	b[r0 + 612] = r1			  ## RF_ble.c:3140:17
 1e114ba:    20 00             	rts			  ## RF_ble.c:3141:1


__set_anchor_cnt:
 1e114bc:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:315:0
 1e114be:    15 08             	r5 = r1			  ## RF_ble.c:315:0
 1e114c0:    04 08             	r4 = r0			  ## RF_ble.c:315:0
 1e114c2:    97 f3 6b ac       	call 3102934 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e114c6:    08 00             	csync			  ## RF_ble.c:304:5
 1e114c8:    07 70             	r7 = 0			  ## RF_ble.c:304:5
 1e114ca:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e114d0:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e114d2:    08 00             	csync			  ## RF_ble.c:307:5
 1e114d4:    c8 ff a4 2c 00 00 	r8 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e114da:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e114de:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e114e0:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e114e2:    cb 71             	r11 = 28			  ## RF_ble.c:147:17
 1e114e4:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e114e8:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e114ea:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e114ee:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e114f0:    01 fb 05 1c       	r1 = 7173 <btstack_stack+0x9 : 1c05 >			  ## RF_ble.c:308:67
 1e114f4:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e114f6:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e114f8:    97 f3 4e ac       	call 3102876 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e114fc:    97 f3 4e ac       	call 3102876 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11500:    08 00             	csync			  ## RF_ble.c:304:5
 1e11502:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e11504:    08 00             	csync			  ## RF_ble.c:307:5
 1e11506:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e1150a:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1150c:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1150e:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e11512:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e11514:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e11518:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:308:67
 1e1151c:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e1151e:    97 f3 3b ac       	call 3102838 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e11522:    97 f3 3b ac       	call 3102838 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11526:    08 00             	csync			  ## RF_ble.c:304:5
 1e11528:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e1152a:    08 00             	csync			  ## RF_ble.c:307:5
 1e1152c:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e11530:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11532:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11534:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e11538:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1153a:    09 fb f0 07       	r9 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:308:50
 1e1153e:    e2 fd 90 00       	r0 = r0 & r9			  ## RF_ble.c:308:50
 1e11542:    0a fb 05 38       	r10 = 14341 <read_flash_id+0x21 : 3805 >			  ## RF_ble.c:308:67
 1e11546:    e0 fd a0 00       	r0 = r0 | r10			  ## RF_ble.c:308:67
 1e1154a:    57 fc ff ff       	r7 = r5 + -1			  ## RF_ble.c:326:39
 1e1154e:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e11550:    01 3a             	if (r5 != 0) goto 2 <__set_anchor_cnt+0x98 : 1e11554 >			  ## RF_ble.c:308:21
 1e11552:    07 70             	r7 = 0			  ## RF_ble.c:326:39
 1e11554:    e5 05             	r5 = r7.l (u)			  ## RF_ble.c:326:44
 1e11556:    97 f3 1f ac       	call 3102782 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1155a:    97 f3 1f ac       	call 3102782 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1155e:    08 00             	csync			  ## RF_ble.c:304:5
 1e11560:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:306:21
 1e11562:    08 00             	csync			  ## RF_ble.c:307:5
 1e11564:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e11568:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1156a:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1156c:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e11570:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e11572:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e11576:    00 fd 05 09       	r0 = r0 | 5			  ## RF_ble.c:308:67
 1e1157a:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e1157c:    38 d4             	r0 = r7 >> 16			  ## RF_ble.c:328:58
 1e1157e:    05 fd 80 0a       	r5 = r0 | 32768			  ## RF_ble.c:328:44
 1e11582:    97 f3 09 ac       	call 3102738 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e11586:    97 f3 09 ac       	call 3102738 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1158a:    08 00             	csync			  ## RF_ble.c:304:5
 1e1158c:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:306:21
 1e1158e:    08 00             	csync			  ## RF_ble.c:307:5
 1e11590:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e11594:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11596:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11598:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e1159c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e1159e:    e2 fd 90 00       	r0 = r0 & r9			  ## RF_ble.c:308:50
 1e115a2:    e0 fd a0 00       	r0 = r0 | r10			  ## RF_ble.c:308:67
 1e115a6:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e115a8:    1b 01             	{rets, r11-r4} = [sp++]			  ## RF_ble.c:310:5
 1e115aa:    d7 f3 f5 ab       	goto 3102698 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


ble_hw_enable:
 1e115ae:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:674:0
 1e115b0:    c2 ff a4 2c 00 00 	r2 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e115b6:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:147:19
 1e115b8:    42 44             	r2 = [r2 + 16]			  ## RF_ble.c:147:35
 1e115ba:    14 08             	r4 = r1			  ## RF_ble.c:147:35
 1e115bc:    05 08             	r5 = r0
 1e115be:    a0 ba             	r0 = r5 - r2			  ## RF_ble.c:147:17
 1e115c0:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e115c2:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e115c6:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:669:5
 1e115c8:    11 70             	r1 = 1			  ## RF_ble.c:669:5
 1e115ca:    e3 16             	call -570 <__set_hw_irq : 1e11392 >			  ## RF_ble.c:669:5
 1e115cc:    50 08             	r0 = r5			  ## RF_ble.c:676:5
 1e115ce:    41 08             	r1 = r4			  ## RF_ble.c:676:5
 1e115d0:    15 01             	{rets, r5, r4} = [sp++]			  ## RF_ble.c:676:5
 1e115d2:    74 1f             	goto -280 <__set_anchor_cnt : 1e114bc >			  ## RF_ble.c:676:5


le_hw_resume:
 1e115d4:    34 00             	[--sp] = rets			  ## RF_ble.c:3999:0
 1e115d6:    02 40             	r2 = [r0 + 0]			  ## RF_ble.c:4000:13
 1e115d8:    03 f9 53 21       	r3 = b[r2 + 339] (u)			  ## RF_ble.c:4000:22
 1e115dc:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:4000:9
 1e115de:    23 e0 04 00       	if (r3 == 2) goto 8 <le_hw_resume+0x16 : 1e115ea >			  ## RF_ble.c:4000:9
 1e115e2:    23 70             	r3 = 2			  ## RF_ble.c:4011:28
 1e115e4:    13 f9 53 21       	b[r2 + 339] = r3			  ## RF_ble.c:4011:28
 1e115e8:    e2 17             	call -60 <ble_hw_enable : 1e115ae >			  ## RF_ble.c:4012:5
 1e115ea:    30 00             	pc = [sp++]			  ## RF_ble.c:4013:1


le_hw_close:
 1e115ec:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:4043:0
 1e115ee:    04 08             	r4 = r0			  ## RF_ble.c:4043:0
 1e115f0:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:4044:31
 1e115f2:    5f 2a             	if (r5 == 0) goto 190 <le_hw_close+0xC6 : 1e116b2 >
 1e115f4:    c1 16             	call -638 <ble_power_put : 1e11378 >			  ## RF_ble.c:4056:5
 1e115f6:    40 08             	r0 = r4			  ## RF_ble.c:4058:5
 1e115f8:    0b 17             	call -490 <ble_hw_disable : 1e11410 >			  ## RF_ble.c:4058:5
 1e115fa:    56 fc 78 01       	r6 = r5 + 376			  ## RF_ble.c:4058:5
 1e115fe:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:4062:17
 1e11600:    bf f3 28 7d       	call -66992 <hw_dma_free : 1e01054 >			  ## RF_ble.c:4062:5
 1e11604:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:4063:17
 1e11606:    bf f3 25 7d       	call -66998 <hw_dma_free : 1e01054 >			  ## RF_ble.c:4063:5
 1e1160a:    05 70             	r5 = 0			  ## RF_ble.c:4063:5
 1e1160c:    2d 4c             	[r6 + 8] = r5			  ## RF_ble.c:233:15
 1e1160e:    3d 4c             	[r6 + 12] = r5			  ## RF_ble.c:234:15
 1e11610:    10 4c             	r0 = [r6 + 4]			  ## RF_ble.c:4065:17
 1e11612:    bf f3 1f 7d       	call -67010 <hw_dma_free : 1e01054 >			  ## RF_ble.c:4065:5
 1e11616:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:4066:17
 1e11618:    bf f3 1c 7d       	call -67016 <hw_dma_free : 1e01054 >			  ## RF_ble.c:4066:5
 1e1161c:    0d 4c             	[r6 + 0] = r5			  ## RF_ble.c:215:15
 1e1161e:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:216:15
 1e11620:    60 fc 20 00       	r0 = r6 + 32			  ## RF_ble.c:4069:24
 1e11624:    bf f3 17 7d       	call -67026 <hw_dma_clear : 1e01056 >			  ## RF_ble.c:4069:5
 1e11628:    80 9d             	r0 = r6 + 24			  ## RF_ble.c:4070:24
 1e1162a:    bf f3 14 7d       	call -67032 <hw_dma_clear : 1e01056 >			  ## RF_ble.c:4070:5
 1e1162e:    00 9d             	r0 = r6 + 16			  ## RF_ble.c:4071:24
 1e11630:    bf f3 11 7d       	call -67038 <hw_dma_clear : 1e01056 >			  ## RF_ble.c:4071:5
 1e11634:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3205:21
 1e11636:    c6 ff a4 2c 00 00 	r6 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:3205:21
 1e1163c:    18 20             	if (r0 == 0) goto 48 <le_hw_close+0x82 : 1e1166e >			  ## RF_ble.c:3205:21
 1e1163e:    40 08             	r0 = r4			  ## RF_ble.c:3210:5
 1e11640:    12 17             	call -476 <clear_all_anchor_cnt : 1e11466 >			  ## RF_ble.c:3210:5
 1e11642:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3212:32
 1e11644:    00 f6 e4 01       	r0 = [r0 + 484]			  ## RF_ble.c:3212:41
 1e11648:    bf f3 15 7d       	call -67030 <btctler_nv_memory_free : 1e01076 >			  ## RF_ble.c:3212:5
 1e1164c:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:3213:5
 1e1164e:    41 40             	r1 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11650:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e11652:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e11654:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e11658:    41 04             	r1 = r1.b0 (u)			  ## RF_ble.c:3213:5
 1e1165a:    55 f8 00 01       	h[r0+r1<<1] = r5			  ## RF_ble.c:3213:37
 1e1165e:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:3214:19
 1e11662:    f1 8f             	r1 += -1			  ## RF_ble.c:3214:19
 1e11664:    11 f9 20 00       	b[r0 + 32] = r1			  ## RF_ble.c:3214:19
 1e11668:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3216:24
 1e1166a:    23 17             	call -442 <hw_entity_free : 1e114b2 >			  ## RF_ble.c:3216:5
 1e1166c:    0d 48             	[r4 + 0] = r5			  ## RF_ble.c:3217:17
 1e1166e:    97 f3 95 ab       	call 3102506 <local_irq_disable : 106d9c >			  ## RF_ble.c:4080:5
 1e11672:    08 00             	csync			  ## RF_ble.c:4080:5
 1e11674:    00 4c             	r0 = [r6 + 0]
 1e11676:    01 08             	r1 = r0
 1e11678:    02 70             	r2 = 0
 1e1167a:    83 f7 02 10       	r3 = h[r1 ++= 2] (u)			  ## RF_ble.c:4790:13
 1e1167e:    0e 26             	if (r3 == 0) goto 28 <le_hw_close+0xB0 : 1e1169c >			  ## RF_ble.c:4790:13
 1e11680:    43 40             	r3 = [r0 + 16]			  ## RF_ble.c:4791:35
 1e11682:    84 f6 00 35       	r4 = [r3+r5]			  ## RF_ble.c:4792:29
 1e11686:    0a 28             	if (r4 == 0) goto 20 <le_hw_close+0xB0 : 1e1169c >
 1e11688:    46 fc 52 01       	r6 = r4 + 338
 1e1168c:    07 6c             	r7 = b[r6 + 0] (u)			  ## RF_ble.c:4796:31
 1e1168e:    37 e0 02 00       	if (r7 == 3) goto 4 <le_hw_close+0xAA : 1e11696 >			  ## RF_ble.c:4796:31
 1e11692:    17 e0 03 10       	if (r7 != 1) goto 6 <le_hw_close+0xB0 : 1e1169c >
 1e11696:    16 6c             	r6 = b[r6 + 1] (u)
 1e11698:    16 e0 05 00       	if (r6 == 1) goto 10 <le_hw_close+0xBA : 1e116a6 >
 1e1169c:    12 80             	r2 += 1			  ## RF_ble.c:4789:42
 1e1169e:    c5 81             	r5 += 28			  ## RF_ble.c:4789:22
 1e116a0:    82 e0 eb 3f       	if (r2 < 8) goto -42 <le_hw_close+0x8E : 1e1167a >			  ## RF_ble.c:4789:22
 1e116a4:    04 18             	goto 8 <le_hw_close+0xC2 : 1e116ae >			  ## RF_ble.c:4789:22
 1e116a6:    01 f7 5a 42       	r1 = h[r4 + 602] (u)
 1e116aa:    40 b7             	r0 = r3 + r5
 1e116ac:    93 17             	call -218 <le_hw_resume : 1e115d4 >
 1e116ae:    97 f3 73 ab       	call 3102438 <local_irq_enable : 106d98 >			  ## RF_ble.c:4084:5
 1e116b2:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:4085:1


le_hw_destroy:
 1e116b4:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:4571:0
 1e116b6:    c4 ff a4 2c 00 00 	r4 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:4571:0
 1e116bc:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4574:11
 1e116be:    25 20             	if (r0 == 0) goto 74 <le_hw_destroy+0x56 : 1e1170a >			  ## RF_ble.c:4574:11
 1e116c0:    05 70             	r5 = 0
 1e116c2:    06 70             	r6 = 0			  ## RF_ble.c:4581:13
 1e116c4:    03 18             	goto 6 <le_hw_destroy+0x18 : 1e116cc >			  ## RF_ble.c:4581:13
 1e116c6:    00 48             	r0 = [r4 + 0]
 1e116c8:    c5 81             	r5 += 28			  ## RF_ble.c:4580:5
 1e116ca:    26 80             	r6 += 2			  ## RF_ble.c:4580:5
 1e116cc:    01 f8 00 06       	r1 = h[r0+r6] (u)			  ## RF_ble.c:4581:13
 1e116d0:    03 22             	if (r1 == 0) goto 6 <le_hw_destroy+0x24 : 1e116d8 >			  ## RF_ble.c:4581:13
 1e116d2:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:4582:42
 1e116d4:    50 09             	r0 += r5			  ## RF_ble.c:4582:13
 1e116d6:    8a 17             	call -236 <le_hw_close : 1e115ec >			  ## RF_ble.c:4582:13
 1e116d8:    e6 e0 f5 1f       	if (r6 != 14) goto -22 <le_hw_destroy+0x12 : 1e116c6 >
 1e116dc:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >
 1e116e2:    00 f6 b8 50       	r0 = [r5 + 184]			  ## hw_dma.c:127:17
 1e116e6:    09 20             	if (r0 == 0) goto 18 <le_hw_destroy+0x46 : 1e116fa >			  ## hw_dma.c:127:17
 1e116e8:    01 f6 b4 50       	r1 = [r5 + 180]			  ## hw_dma.c:127:31
 1e116ec:    06 22             	if (r1 == 0) goto 12 <le_hw_destroy+0x46 : 1e116fa >			  ## hw_dma.c:127:31
 1e116ee:    bf f3 e1 7c       	call -67134 <lbuf_clear_btctrler : 1e010b4 >			  ## hw_dma.c:128:9
 1e116f2:    00 f6 b4 50       	r0 = [r5 + 180]			  ## hw_dma.c:129:37
 1e116f6:    bf f3 dd 7c       	call -67142 <lbuf_clear_btctrler : 1e010b4 >			  ## hw_dma.c:129:9
 1e116fa:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4589:10
 1e116fc:    bf f3 c3 c7       	call -28794 <free : 1e0a686 >			  ## RF_ble.c:4589:5
 1e11700:    00 70             	r0 = 0			  ## RF_ble.c:4589:5
 1e11702:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:4590:12
 1e11704:    20 fb 64 14       	r1 = 1867776			  ## RF_ble.c:4592:14
 1e11708:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:4592:14
 1e1170a:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:4596:1


ble_enter_deepsleep:
 1e1170c:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:721:0
 1e1170e:    04 08             	r4 = r0			  ## le_low_power.c:721:0
 1e11710:    20 fb 64 14       	r1 = 1867776			  ## le_low_power.c:722:5
 1e11714:    c2 75             	r2 = 92			  ## le_low_power.c:722:5
 1e11716:    97 f3 e5 ab       	call 3102666 <memcpy : 106ee4 >			  ## le_low_power.c:722:5
 1e1171a:    40 fc 5c 00       	r0 = r4 + 92			  ## le_low_power.c:727:9
 1e1171e:    22 70             	r2 = 2			  ## le_low_power.c:727:9
 1e11720:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:727:9
 1e11726:    03 fb 02 40       	r3 = 16386 <check_flash_type+0x4E : 4002 >			  ## le_low_power.c:727:9
 1e1172a:    0a 42             	[r1 + 0] = r2			  ## le_low_power.c:705:21
 1e1172c:    08 00             	csync			  ## le_low_power.c:706:5
 1e1172e:    25 42             	r5 = [r1 + 8]			  ## le_low_power.c:708:12
 1e11730:    22 fc 00 04       	r2 = r2 + 1024			  ## le_low_power.c:727:27
 1e11734:    95 f7 02 00       	h[r0 ++= 2] = r5			  ## le_low_power.c:728:45
 1e11738:    32 f2 f7 1f       	if (r2 != r3) goto -18 <ble_enter_deepsleep+0x1E : 1e1172a >			  ## le_low_power.c:727:9
 1e1173c:    b0 42             	r0 = [r1 + 44]			  ## le_low_power.c:732:39
 1e1173e:    10 f6 5c 41       	[r4 + 348] = r0			  ## le_low_power.c:732:37
 1e11742:    c0 ff 44 0f 00 00 	r0 = 3908 <ble_finetimecnt_poweroff_sfr : f44 >			  ## le_low_power.c:734:34
 1e11748:    c0 f4 00 09       	[r0 + 0] = 0			  ## le_low_power.c:734:34
 1e1174c:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:735:1


ble_exit_deepsleep:
 1e1174e:    77 01             	[--sp] = {rets, r7-r4}			  ## le_low_power.c:759:0
 1e11750:    04 08             	r4 = r0			  ## le_low_power.c:759:0
 1e11752:    20 fb 64 04       	r0 = 1867776			  ## le_low_power.c:760:5
 1e11756:    c2 75             	r2 = 92			  ## le_low_power.c:760:5
 1e11758:    41 08             	r1 = r4			  ## le_low_power.c:760:5
 1e1175a:    97 f3 c3 ab       	call 3102598 <memcpy : 106ee4 >			  ## le_low_power.c:760:5
 1e1175e:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## le_low_power.c:760:5
 1e11764:    07 f4 01 09       	[r0 + 28] |= 1			  ## le_low_power.c:764:5
 1e11768:    07 f4 04 09       	[r0 + 28] |= 4			  ## le_low_power.c:766:5
 1e1176c:    41 fc 5c 00       	r1 = r4 + 92
 1e11770:    02 70             	r2 = 0
 1e11772:    53 70             	r3 = 5
 1e11774:    05 fb 05 40       	r5 = 16389 <check_flash_type+0x51 : 4005 >
 1e11778:    16 08             	r6 = r1
 1e1177a:    22 e0 06 00       	if (r2 == 2) goto 12 <ble_exit_deepsleep+0x3C : 1e1178a >
 1e1177e:    92 e0 04 00       	if (r2 == 9) goto 8 <ble_exit_deepsleep+0x3C : 1e1178a >
 1e11782:    07 5c             	r7 = h[r6 + 0] (u)			  ## le_low_power.c:772:51
 1e11784:    1f 40             	[r0 + 4] = r7			  ## le_low_power.c:714:21
 1e11786:    08 00             	csync			  ## le_low_power.c:715:5
 1e11788:    0b 40             	[r0 + 0] = r3			  ## le_low_power.c:716:21
 1e1178a:    26 80             	r6 += 2			  ## le_low_power.c:769:27
 1e1178c:    33 fc 00 04       	r3 = r3 + 1024			  ## le_low_power.c:769:27
 1e11790:    12 80             	r2 += 1			  ## le_low_power.c:769:72
 1e11792:    53 f2 f2 1f       	if (r3 != r5) goto -28 <ble_exit_deepsleep+0x2C : 1e1177a >
 1e11796:    92 52             	r2 = h[r1 + 18] (u)			  ## le_low_power.c:744:18
 1e11798:    21 52             	r1 = h[r1 + 4] (u)			  ## le_low_power.c:746:18
 1e1179a:    d3 d1             	r3 = r2 >> 7			  ## le_low_power.c:748:42
 1e1179c:    21 fd fe 1a       	r1 = r1 & 65024			  ## le_low_power.c:748:31
 1e117a0:    51 b6             	r1 |= r3			  ## le_low_power.c:748:31
 1e117a2:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e117a4:    08 00             	csync			  ## le_low_power.c:715:5
 1e117a6:    01 fb 05 08       	r1 = 2053 <report_mmu_tlb_size+0x5 : 805 >			  ## le_low_power.c:716:21
 1e117aa:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e117ac:    01 fd 40 29       	r1 = r2 | 64			  ## le_low_power.c:754:49
 1e117b0:    19 40             	[r0 + 4] = r1			  ## le_low_power.c:714:21
 1e117b2:    08 00             	csync			  ## le_low_power.c:715:5
 1e117b4:    01 fb 05 24       	r1 = 9221 <pmu_voltage+0x49 : 2405 >			  ## le_low_power.c:716:21
 1e117b8:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:716:21
 1e117ba:    00 f6 5c 41       	r0 = [r4 + 348]			  ## le_low_power.c:779:48
 1e117be:    c1 ff 44 0f 00 00 	r1 = 3908 <ble_finetimecnt_poweroff_sfr : f44 >			  ## le_low_power.c:779:34
 1e117c4:    08 42             	[r1 + 0] = r0			  ## le_low_power.c:779:34
 1e117c6:    57 01             	{pc, r7-r4} = [sp++]			  ## le_low_power.c:780:1


le_hw_init:
 1e117c8:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:4552:0
 1e117ca:    c7 ff 80 fc 1c 00 	r7 = 1899648 <uECC_vli_cmp_unsafe+0xC8C84 : 1cfc80 >			  ## RF_ble.c:4552:0
 1e117d0:    00 f4 01 79       	[r7 + 0] |= 1			  ## RF_ble.c:4555:16
 1e117d4:    20 fb 64 64       	r6 = 1867776			  ## RF_ble.c:4555:16
 1e117d8:    c0 f4 01 69       	[r6 + 0] = 1			  ## RF_ble.c:4557:15
 1e117dc:    00 fb 01 13       	r0 = 4865 <_cpu0_sstack_begin+0x2D1 : 1301 >			  ## RF_ble.c:4560:17
 1e117e0:    d8 4c             	[r6 + 52] = r0			  ## RF_ble.c:4560:17
 1e117e2:    00 fb 46 15       	r0 = 5446 <_cpu0_sstack_begin+0x516 : 1546 >			  ## RF_ble.c:4528:14
 1e117e6:    bf f3 3b c7       	call -29066 <malloc : 1e0a660 >			  ## RF_ble.c:4528:14
 1e117ea:    04 08             	r4 = r0			  ## RF_ble.c:4528:14
 1e117ec:    c0 ff a4 2c 00 00 	r0 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:4528:12
 1e117f2:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:4528:12
 1e117f4:    02 38             	if (r4 != 0) goto 4 <le_hw_init+0x32 : 1e117fa >			  ## RF_ble.c:4528:12
 1e117f6:    8f f3 83 8d       	call 2038534 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e117fa:    01 70             	r1 = 0			  ## RF_ble.c:4530:5
 1e117fc:    02 fb 46 15       	r2 = 5446 <_cpu0_sstack_begin+0x516 : 1546 >			  ## RF_ble.c:4530:5
 1e11800:    40 08             	r0 = r4			  ## RF_ble.c:4530:5
 1e11802:    97 f3 75 ab       	call 3102442 <memset : 106ef0 >			  ## RF_ble.c:4530:5
 1e11806:    40 fc 24 00       	r0 = r4 + 36			  ## RF_ble.c:4532:58
 1e1180a:    48 48             	[r4 + 16] = r0			  ## RF_ble.c:4532:24
 1e1180c:    40 fc 40 00       	r0 = r4 + 64			  ## RF_ble.c:4533:69
 1e11810:    58 48             	[r4 + 20] = r0			  ## RF_ble.c:4533:31
 1e11812:    40 fc a8 02       	r0 = r4 + 680			  ## RF_ble.c:4534:51
 1e11816:    68 48             	[r4 + 24] = r0			  ## RF_ble.c:4534:28
 1e11818:    45 fc f7 0b       	r5 = r4 + 3063			  ## RF_ble.c:4535:51
 1e1181c:    7d 48             	[r4 + 28] = r5			  ## RF_ble.c:4535:28
 1e1181e:    1c 4e             	[r7 + 4] = r4			  ## RF_ble.c:4543:19
 1e11820:    41 fc 46 15       	r1 = r4 + 5446			  ## RF_ble.c:4545:45
 1e11824:    09 4f             	[r7 + 64] = r1			  ## RF_ble.c:4545:19
 1e11826:    01 fb 4f 09       	r1 = 2383 <data_magic+0x37 : 94f >			  ## hw_dma.c:34:18
 1e1182a:    bf f3 40 a0       	call -49024 <lbuf_init_btctrler : 1e058ae >			  ## hw_dma.c:34:18
 1e1182e:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >			  ## hw_dma.c:36:16
 1e11834:    10 f6 b4 40       	[r4 + 180] = r0			  ## hw_dma.c:34:16
 1e11838:    01 fb 4f 09       	r1 = 2383 <data_magic+0x37 : 94f >			  ## hw_dma.c:36:18
 1e1183c:    50 08             	r0 = r5			  ## hw_dma.c:36:18
 1e1183e:    bf f3 36 a0       	call -49044 <lbuf_init_btctrler : 1e058ae >			  ## hw_dma.c:36:18
 1e11842:    10 f6 b8 40       	[r4 + 184] = r0			  ## hw_dma.c:36:16
 1e11846:    c2 ff 54 2d e1 01 	r2 = 31534420 <ble_event_irq_handler : 1e12d54 >			  ## RF_ble.c:4564:5
 1e1184c:    70 72             	r0 = 39			  ## RF_ble.c:4564:5
 1e1184e:    21 70             	r1 = 2			  ## RF_ble.c:4564:5
 1e11850:    bf f3 df c7       	call -28738 <request_irq : 1e0a812 >			  ## RF_ble.c:4564:5
 1e11854:    c2 ff 1e 36 e1 01 	r2 = 31536670 <ble_rx_irq_handler : 1e1361e >			  ## RF_ble.c:4565:5
 1e1185a:    60 72             	r0 = 38			  ## RF_ble.c:4565:5
 1e1185c:    21 70             	r1 = 2			  ## RF_ble.c:4565:5
 1e1185e:    bf f3 d8 c7       	call -28752 <request_irq : 1e0a812 >			  ## RF_ble.c:4565:5
 1e11862:    00 f4 20 6a       	[r6 + 0] |= 8192			  ## RF_ble.c:1724:5
 1e11866:    00 f4 40 6a       	[r6 + 0] |= 16384			  ## RF_ble.c:1725:5
 1e1186a:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:1726:5
 1e1186c:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1726:5
 1e1186e:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:1726:5
 1e11870:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:1736:5
 1e11872:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1E5354 : 1fffc00 >			  ## RF_ble.c:1736:5
 1e11876:    50 b3             	r0 &= r1			  ## RF_ble.c:1736:5
 1e11878:    00 fd 46 09       	r0 = r0 | 70			  ## RF_ble.c:1736:5
 1e1187c:    28 4c             	[r6 + 8] = r0			  ## RF_ble.c:1736:5
 1e1187e:    20 4c             	r0 = [r6 + 8]			  ## RF_ble.c:1737:5
 1e11880:    30 fd f8 0a       	r0 = r0 & 4294903807			  ## RF_ble.c:1737:5
 1e11884:    00 fd 78 0a       	r0 = r0 | 30720			  ## RF_ble.c:1737:5
 1e11888:    28 4c             	[r6 + 8] = r0			  ## RF_ble.c:1737:5
 1e1188a:    30 4c             	r0 = [r6 + 12]			  ## RF_ble.c:1738:5
 1e1188c:    50 b3             	r0 &= r1			  ## RF_ble.c:1738:5
 1e1188e:    00 fd 46 09       	r0 = r0 | 70			  ## RF_ble.c:1738:5
 1e11892:    38 4c             	[r6 + 12] = r0			  ## RF_ble.c:1738:5
 1e11894:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1739:5
 1e11896:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1739:5
 1e1189a:    00 fd 3e 09       	r0 = r0 | 62			  ## RF_ble.c:1739:5
 1e1189e:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1739:5
 1e118a0:    40 4c             	r0 = [r6 + 16]			  ## RF_ble.c:1740:5
 1e118a2:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1740:5
 1e118a6:    00 fd 3e 0a       	r0 = r0 | 15872			  ## RF_ble.c:1740:5
 1e118aa:    48 4c             	[r6 + 16] = r0			  ## RF_ble.c:1740:5
 1e118ac:    50 4c             	r0 = [r6 + 20]			  ## RF_ble.c:1741:5
 1e118ae:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1741:5
 1e118b2:    00 fd 1e 09       	r0 = r0 | 30			  ## RF_ble.c:1741:5
 1e118b6:    58 4c             	[r6 + 20] = r0			  ## RF_ble.c:1741:5
 1e118b8:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1742:5
 1e118ba:    30 fd ff 09       	r0 = r0 & 4294967040			  ## RF_ble.c:1742:5
 1e118be:    00 fd 14 09       	r0 = r0 | 20			  ## RF_ble.c:1742:5
 1e118c2:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1742:5
 1e118c4:    60 4c             	r0 = [r6 + 24]			  ## RF_ble.c:1743:5
 1e118c6:    30 fd ff 0a       	r0 = r0 & 4294902015			  ## RF_ble.c:1743:5
 1e118ca:    00 fd 14 0a       	r0 = r0 | 5120			  ## RF_ble.c:1743:5
 1e118ce:    68 4c             	[r6 + 24] = r0			  ## RF_ble.c:1743:5
 1e118d0:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:4568:1


hw_alloc_rx:
 1e118d2:    34 00             	[--sp] = rets			  ## RF_ble.c:175:0
 1e118d4:    41 91             	r1 = r0 + 20			  ## RF_ble.c:178:53
 1e118d6:    00 70             	r0 = 0			  ## RF_ble.c:178:27
 1e118d8:    bf f3 02 a1       	call -48636 <hw_dma_alloc : 1e05ae0 >			  ## RF_ble.c:178:27
 1e118dc:    02 08             	r2 = r0			  ## RF_ble.c:178:27
 1e118de:    05 24             	if (r2 == 0) goto 10 <hw_alloc_rx+0x18 : 1e118ea >			  ## RF_ble.c:178:27
 1e118e0:    60 ff 03 29 02 00 	if ((r2 & 3) == 0) goto 4 <hw_alloc_rx+0x18 : 1e118ea >
 1e118e6:    8f f3 0b 8d       	call 2038294 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e118ea:    20 08             	r0 = r2			  ## RF_ble.c:183:5
 1e118ec:    30 00             	pc = [sp++]			  ## RF_ble.c:183:5


PHY_TO_BLE:
 1e118ee:    34 00             	[--sp] = rets			  ## RF_ble.c:135:0
 1e118f0:    c1 ff a4 2c 00 00 	r1 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:135:0
 1e118f6:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:135:0
 1e118f8:    62 b0             	r2 = r0 - r1			  ## RF_ble.c:135:0
 1e118fa:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## RF_ble.c:135:0
 1e11900:    02 f2 02 30       	if (r2 < r0) goto 4 <PHY_TO_BLE+0x1A : 1e11908 >			  ## RF_ble.c:135:0
 1e11904:    8f f3 fc 8c       	call 2038264 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e11908:    20 08             	r0 = r2			  ## RF_ble.c:137:5
 1e1190a:    30 00             	pc = [sp++]			  ## RF_ble.c:137:5


ble_hw_tx:
 1e1190c:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:239:0
 1e1190e:    15 08             	r5 = r1			  ## RF_ble.c:239:0
 1e11910:    03 08             	r3 = r0			  ## RF_ble.c:239:0
 1e11912:    20 6b             	r0 = b[r5 + 18] (u)			  ## RF_ble.c:239:0
 1e11914:    06 46             	r6 = [r3 + 0]			  ## RF_ble.c:241:34
 1e11916:    24 08             	r4 = r2
 1e11918:    07 28             	if (r4 == 0) goto 14 <ble_hw_tx+0x1C : 1e11928 >
 1e1191a:    0d 20             	if (r0 == 0) goto 26 <ble_hw_tx+0x2A : 1e11936 >
 1e1191c:    40 9b             	r0 = r5 + 20			  ## RF_ble.c:253:44
 1e1191e:    e7 17             	call -50 <PHY_TO_BLE : 1e118ee >			  ## RF_ble.c:253:33
 1e11920:    a8 5c             	h[r6 + 20] = r0			  ## RF_ble.c:253:31
 1e11922:    20 6b             	r0 = b[r5 + 18] (u)			  ## RF_ble.c:254:9
 1e11924:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:254:9
 1e11926:    08 18             	goto 16 <ble_hw_tx+0x2C : 1e11938 >			  ## RF_ble.c:254:9
 1e11928:    1d 20             	if (r0 == 0) goto 58 <ble_hw_tx+0x58 : 1e11964 >
 1e1192a:    40 9b             	r0 = r5 + 20			  ## RF_ble.c:246:44
 1e1192c:    e0 17             	call -64 <PHY_TO_BLE : 1e118ee >			  ## RF_ble.c:246:33
 1e1192e:    98 5c             	h[r6 + 18] = r0			  ## RF_ble.c:246:31
 1e11930:    20 6b             	r0 = b[r5 + 18] (u)			  ## RF_ble.c:247:9
 1e11932:    00 c2             	r0 = r0 << 8			  ## RF_ble.c:247:9
 1e11934:    18 18             	goto 48 <ble_hw_tx+0x5A : 1e11966 >			  ## RF_ble.c:247:9
 1e11936:    00 70             	r0 = 0
 1e11938:    81 5a             	r1 = h[r5 + 16] (u)			  ## RF_ble.c:255:35
 1e1193a:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:255:72
 1e1193e:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:255:41
 1e11940:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:255:47
 1e11944:    51 b4             	r1 |= r2			  ## RF_ble.c:255:66
 1e11946:    c9 5c             	h[r6 + 24] = r1			  ## RF_ble.c:255:28
 1e11948:    e1 5c             	r1 = h[r6 + 28] (u)			  ## RF_ble.c:256:25
 1e1194a:    82 5a             	r2 = h[r5 + 16] (u)			  ## RF_ble.c:257:52
 1e1194c:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:256:14
 1e11950:    50 b2             	r0 |= r1			  ## RF_ble.c:257:45
 1e11952:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:257:55
 1e11954:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:257:55
 1e11958:    50 b2             	r0 |= r1			  ## RF_ble.c:257:61
 1e1195a:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:257:72
 1e1195e:    50 b2             	r0 |= r1			  ## RF_ble.c:257:66
 1e11960:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:257:28
 1e11962:    16 18             	goto 44 <ble_hw_tx+0x84 : 1e11990 >			  ## RF_ble.c:257:28
 1e11964:    00 70             	r0 = 0
 1e11966:    81 5a             	r1 = h[r5 + 16] (u)			  ## RF_ble.c:248:35
 1e11968:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:248:72
 1e1196c:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:248:41
 1e1196e:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:248:47
 1e11972:    51 b4             	r1 |= r2			  ## RF_ble.c:248:66
 1e11974:    b9 5c             	h[r6 + 22] = r1			  ## RF_ble.c:248:28
 1e11976:    d1 5c             	r1 = h[r6 + 26] (u)			  ## RF_ble.c:249:25
 1e11978:    82 5a             	r2 = h[r5 + 16] (u)			  ## RF_ble.c:250:52
 1e1197a:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:249:14
 1e1197e:    50 b2             	r0 |= r1			  ## RF_ble.c:250:45
 1e11980:    91 d1             	r1 = r2 >> 6			  ## RF_ble.c:250:55
 1e11982:    21 fd 08 19       	r1 = r1 & 8			  ## RF_ble.c:250:55
 1e11986:    50 b2             	r0 |= r1			  ## RF_ble.c:250:61
 1e11988:    82 fd 20 12       	r1 = uextra(r2, p:4, l:2)			  ## RF_ble.c:250:72
 1e1198c:    50 b2             	r0 |= r1			  ## RF_ble.c:250:66
 1e1198e:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:250:28
 1e11990:    80 67             	r0 = b[r3 + 24] (u)			  ## RF_ble.c:263:17
 1e11992:    09 20             	if (r0 == 0) goto 18 <ble_hw_tx+0x9A : 1e119a6 >			  ## RF_ble.c:263:17
 1e11994:    09 28             	if (r4 == 0) goto 18 <ble_hw_tx+0x9C : 1e119a8 >
 1e11996:    e0 5c             	r0 = h[r6 + 28] (u)			  ## RF_ble.c:265:9
 1e11998:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:265:9
 1e1199a:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:265:9
 1e1199c:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:265:9
 1e1199e:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:265:9
 1e119a2:    50 b2             	r0 |= r1			  ## RF_ble.c:265:9
 1e119a4:    e8 5c             	h[r6 + 28] = r0			  ## RF_ble.c:265:9
 1e119a6:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:267:1
 1e119a8:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:264:26
 1e119aa:    01 67             	r1 = b[r3 + 16] (u)			  ## RF_ble.c:264:26
 1e119ac:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:264:26
 1e119ae:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:264:26
 1e119b0:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:264:26
 1e119b4:    50 b2             	r0 |= r1			  ## RF_ble.c:264:26
 1e119b6:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:264:26
 1e119b8:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:267:1


__hw_tx_buf_proess:
 1e119ba:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:2377:0
 1e119bc:    08 08             	r8 = r0			  ## RF_ble.c:2377:0
 1e119be:    04 40             	r4 = [r0 + 0]			  ## RF_ble.c:2378:34
 1e119c0:    19 08             	r9 = r1
 1e119c2:    88 c0             	r0 = r1 << 2
 1e119c4:    40 09             	r0 += r4
 1e119c6:    06 fc 80 01       	r6 = r0 + 384
 1e119ca:    01 4c             	r1 = [r6 + 0]
 1e119cc:    45 fc 90 01       	r5 = r4 + 400
 1e119d0:    48 24             	if (r2 == 0) goto 144 <__hw_tx_buf_proess+0xA8 : 1e11a62 >			  ## RF_ble.c:2384:9
 1e119d2:    0f 22             	if (r1 == 0) goto 30 <__hw_tx_buf_proess+0x38 : 1e119f2 >
 1e119d4:    30 4b             	r0 = [r5 + 76]			  ## RF_ble.c:2358:13
 1e119d6:    05 20             	if (r0 == 0) goto 10 <__hw_tx_buf_proess+0x28 : 1e119e2 >			  ## RF_ble.c:2358:13
 1e119d8:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:2358:37
 1e119da:    03 24             	if (r2 == 0) goto 6 <__hw_tx_buf_proess+0x28 : 1e119e2 >
 1e119dc:    20 4b             	r0 = [r5 + 72]			  ## RF_ble.c:2359:43
 1e119de:    82 00             	call r2			  ## RF_ble.c:2359:9
 1e119e0:    01 4c             	r1 = [r6 + 0]
 1e119e2:    32 42             	r2 = [r1 + 12]			  ## RF_ble.c:2387:32
 1e119e4:    03 24             	if (r2 == 0) goto 6 <__hw_tx_buf_proess+0x32 : 1e119ec >			  ## RF_ble.c:2387:32
 1e119e6:    20 4b             	r0 = [r5 + 72]			  ## RF_ble.c:2388:49
 1e119e8:    82 00             	call r2			  ## RF_ble.c:2388:17
 1e119ea:    01 4c             	r1 = [r6 + 0]			  ## RF_ble.c:2388:17
 1e119ec:    10 08             	r0 = r1			  ## RF_ble.c:2390:13
 1e119ee:    bf f3 31 7b       	call -67998 <hw_dma_free : 1e01054 >			  ## RF_ble.c:2390:13
 1e119f2:    00 f9 f5 41       	r0 = b[r4 + 501] (u)			  ## RF_ble.c:2393:17
 1e119f6:    07 70             	r7 = 0			  ## RF_ble.c:2393:17
 1e119f8:    04 30             	if (r0 != 0) goto 8 <__hw_tx_buf_proess+0x48 : 1e11a02 >			  ## RF_ble.c:2393:17
 1e119fa:    50 08             	r0 = r5			  ## RF_ble.c:2395:22
 1e119fc:    bf f3 94 a0       	call -48856 <hw_dma_pop : 1e05b28 >			  ## RF_ble.c:2395:22
 1e11a00:    07 08             	r7 = r0			  ## RF_ble.c:2395:22
 1e11a02:    07 3e             	if (r7 != 0) goto 14 <__hw_tx_buf_proess+0x58 : 1e11a12 >
 1e11a04:    00 f9 f4 41       	r0 = b[r4 + 500] (u)			  ## RF_ble.c:2399:13
 1e11a08:    04 30             	if (r0 != 0) goto 8 <__hw_tx_buf_proess+0x58 : 1e11a12 >			  ## RF_ble.c:2399:13
 1e11a0a:    80 9a             	r0 = r5 + 8			  ## RF_ble.c:2401:38
 1e11a0c:    bf f3 8c a0       	call -48872 <hw_dma_pop : 1e05b28 >			  ## RF_ble.c:2401:22
 1e11a10:    07 08             	r7 = r0			  ## RF_ble.c:2401:22
 1e11a12:    04 86             	r4 += 96
 1e11a14:    38 2e             	if (r7 == 0) goto 112 <__hw_tx_buf_proess+0xCC : 1e11a86 >
 1e11a16:    21 4a             	r1 = [r5 + 8]			  ## list.h:124:18
 1e11a18:    82 9a             	r2 = r5 + 8			  ## RF_ble.c:2422:13
 1e11a1a:    10 70             	r0 = 1			  ## RF_ble.c:2422:13
 1e11a1c:    21 f2 01 10       	if (r1 != r2) goto 2 <__hw_tx_buf_proess+0x68 : 1e11a22 >			  ## RF_ble.c:2422:13
 1e11a20:    00 70             	r0 = 0
 1e11a22:    81 5e             	r1 = h[r7 + 16] (u)			  ## RF_ble.c:2422:13
 1e11a24:    f1 b4             	r1 &= 4294966783			  ## RF_ble.c:2422:13
 1e11a26:    c1 fd 48 10       	r1 <= insert(r0, p:9, l:1)			  ## RF_ble.c:2422:13
 1e11a2a:    89 5e             	h[r7 + 16] = r1			  ## RF_ble.c:2422:13
 1e11a2c:    0f 4c             	[r6 + 0] = r7			  ## RF_ble.c:2429:23
 1e11a2e:    80 08             	r0 = r8			  ## RF_ble.c:2436:9
 1e11a30:    71 08             	r1 = r7			  ## RF_ble.c:2436:9
 1e11a32:    92 08             	r2 = r9			  ## RF_ble.c:2436:9
 1e11a34:    6b 17             	call -298 <ble_hw_tx : 1e1190c >			  ## RF_ble.c:2436:9
 1e11a36:    10 58             	r0 = h[r4 + 2] (u)			  ## RF_ble.c:2439:9
 1e11a38:    81 5e             	r1 = h[r7 + 16] (u)			  ## RF_ble.c:2439:9
 1e11a3a:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2439:9
 1e11a3c:    c9 d0             	r1 = r1 >> 3			  ## RF_ble.c:2439:9
 1e11a3e:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2439:9
 1e11a42:    e0 fd 00 21       	r2 = r1 | r0			  ## RF_ble.c:2439:9
 1e11a46:    41 98             	r1 = r4 + 4			  ## RF_ble.c:2442:62
 1e11a48:    50 98             	r0 = r4 + 5			  ## RF_ble.c:2442:40
 1e11a4a:    1a 58             	h[r4 + 2] = r2			  ## RF_ble.c:2439:9
 1e11a4c:    09 e0 01 10       	if (r9 != 0) goto 2 <__hw_tx_buf_proess+0x98 : 1e11a52 >			  ## RF_ble.c:2439:9
 1e11a50:    10 08             	r0 = r1			  ## RF_ble.c:2442:21
 1e11a52:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:2443:9
 1e11a54:    71 b0             	r1 &= 4294967294			  ## RF_ble.c:2443:9
 1e11a56:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:2443:9
 1e11a58:    21 4e             	r1 = [r7 + 8]			  ## RF_ble.c:2445:17
 1e11a5a:    14 22             	if (r1 == 0) goto 40 <__hw_tx_buf_proess+0xCA : 1e11a84 >			  ## RF_ble.c:2445:17
 1e11a5c:    20 4b             	r0 = [r5 + 72]			  ## RF_ble.c:2446:30
 1e11a5e:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:2446:13
 1e11a60:    91 00             	goto r1			  ## RF_ble.c:2446:13
 1e11a62:    10 22             	if (r1 == 0) goto 32 <__hw_tx_buf_proess+0xCA : 1e11a84 >
 1e11a64:    80 52             	r0 = h[r1 + 16] (u)			  ## RF_ble.c:2452:22
 1e11a66:    29 f3 0d 00       	if ((r0 & 512) != 0) goto 26 <__hw_tx_buf_proess+0xCA : 1e11a84 >			  ## RF_ble.c:2452:22
 1e11a6a:    23 4a             	r3 = [r5 + 8]			  ## list.h:124:18
 1e11a6c:    84 9a             	r4 = r5 + 8			  ## RF_ble.c:2453:17
 1e11a6e:    12 70             	r2 = 1
 1e11a70:    43 f2 01 10       	if (r3 != r4) goto 2 <__hw_tx_buf_proess+0xBC : 1e11a76 >
 1e11a74:    02 70             	r2 = 0			  ## RF_ble.c:2453:17
 1e11a76:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:2453:17
 1e11a78:    c1 fd 48 02       	r0 <= insert(r2, p:9, l:1)			  ## RF_ble.c:2458:21
 1e11a7c:    88 52             	h[r1 + 16] = r0			  ## RF_ble.c:2459:28
 1e11a7e:    80 08             	r0 = r8			  ## RF_ble.c:2462:17
 1e11a80:    92 08             	r2 = r9			  ## RF_ble.c:2462:17
 1e11a82:    44 17             	call -376 <ble_hw_tx : 1e1190c >			  ## RF_ble.c:2462:17
 1e11a84:    59 01             	{pc, r9-r4} = [sp++]			  ## RF_ble.c:2468:1
 1e11a86:    10 58             	r0 = h[r4 + 2] (u)			  ## RF_ble.c:2408:13
 1e11a88:    70 b3             	r0 &= 4294967231			  ## RF_ble.c:2408:13
 1e11a8a:    18 58             	h[r4 + 2] = r0			  ## RF_ble.c:2408:13
 1e11a8c:    c0 f4 00 69       	[r6 + 0] = 0			  ## RF_ble.c:2412:27
 1e11a90:    59 01             	{pc, r9-r4} = [sp++]			  ## RF_ble.c:2468:1


__hw_tx_process:
 1e11a92:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2507:0
 1e11a94:    fe 0b             	sp += -4			  ## RF_ble.c:2507:0
 1e11a96:    04 08             	r4 = r0			  ## RF_ble.c:2507:0
 1e11a98:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:2508:34
 1e11a9a:    61 2e             	if (r7 == 0) goto 194 <__hw_tx_process+0xCC : 1e11b5e >
 1e11a9c:    00 f9 52 71       	r0 = b[r7 + 338] (u)			  ## RF_ble.c:2517:13
 1e11aa0:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2517:36
 1e11aa2:    60 e0 5c 10       	if (r0 != 6) goto 184 <__hw_tx_process+0xCC : 1e11b5e >			  ## RF_ble.c:2517:36
 1e11aa6:    97 f3 79 a9       	call 3101426 <local_irq_disable : 106d9c >			  ## RF_ble.c:2521:5
 1e11aaa:    08 00             	csync			  ## RF_ble.c:2521:5
 1e11aac:    08 00             	csync			  ## RF_ble.c:2522:9
 1e11aae:    76 fc ec 01       	r6 = r7 + 492			  ## RF_ble.c:2522:9
 1e11ab2:    00 4c             	r0 = [r6 + 0]			  ## RF_ble.c:2522:9
 1e11ab4:    10 e0 51 00       	if (r0 == 1) goto 162 <__hw_tx_process+0xC8 : 1e11b5a >			  ## RF_ble.c:2522:9
 1e11ab8:    97 f3 70 a9       	call 3101408 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e11abc:    08 00             	csync			  ## atomic.h:47:5
 1e11abe:    15 70             	r5 = 1			  ## atomic.h:47:5
 1e11ac0:    0d 4c             	[r6 + 0] = r5			  ## atomic.h:49:16
 1e11ac2:    97 f3 69 a9       	call 3101394 <local_irq_enable : 106d98 >			  ## atomic.h:51:5
 1e11ac6:    97 f3 67 a9       	call 3101390 <local_irq_enable : 106d98 >			  ## RF_ble.c:2528:5
 1e11aca:    70 5e             	r0 = h[r7 + 14] (u)			  ## RF_ble.c:2540:41
 1e11acc:    71 fc 64 00       	r1 = r7 + 100			  ## RF_ble.c:2540:41
 1e11ad0:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:2541:42
 1e11ad2:    20 fd 01 09       	r0 = r0 & 1			  ## RF_ble.c:2540:31
 1e11ad6:    13 62             	r3 = b[r1 + 1] (u)			  ## RF_ble.c:2542:42
 1e11ad8:    52 c0             	r2 = r2 << 1			  ## RF_ble.c:2541:32
 1e11ada:    22 fd 02 29       	r2 = r2 & 2			  ## RF_ble.c:2541:32
 1e11ade:    50 b4             	r0 |= r2			  ## RF_ble.c:2541:32
 1e11ae0:    9a c0             	r2 = r3 << 2			  ## RF_ble.c:2542:32
 1e11ae2:    22 fd 04 29       	r2 = r2 & 4			  ## RF_ble.c:2542:32
 1e11ae6:    50 b4             	r0 |= r2			  ## RF_ble.c:2542:32
 1e11ae8:    d0 f5 02 00       	b[sp+2] = r0			  ## RF_ble.c:2542:32
 1e11aec:    72 5e             	r2 = h[r7 + 14] (u)			  ## RF_ble.c:2545:41
 1e11aee:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:2546:42
 1e11af0:    22 fd 01 29       	r2 = r2 & 1			  ## RF_ble.c:2545:31
 1e11af4:    11 62             	r1 = b[r1 + 1] (u)			  ## RF_ble.c:2547:42
 1e11af6:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2546:32
 1e11af8:    23 fd 02 39       	r3 = r3 & 2			  ## RF_ble.c:2546:32
 1e11afc:    52 b6             	r2 |= r3			  ## RF_ble.c:2546:32
 1e11afe:    89 c0             	r1 = r1 << 2			  ## RF_ble.c:2547:32
 1e11b00:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:2547:32
 1e11b04:    51 b4             	r1 |= r2			  ## RF_ble.c:2547:32
 1e11b06:    d0 b2             	r0 ^= r1			  ## RF_ble.c:2549:34
 1e11b08:    d1 f5 03 00       	b[sp+3] = r1			  ## RF_ble.c:2547:32
 1e11b0c:    70 e0 06 80       	if (r0 > 7) goto 12 <__hw_tx_process+0x8A : 1e11b1c >			  ## RF_ble.c:2547:32
 1e11b10:    11 70             	r1 = 1
 1e11b12:    f8 fd 00 01       	r0 = r1 << r0
 1e11b16:    61 ff 8a 09 01 00 	if ((r0 & 138) != 0) goto 2 <__hw_tx_process+0x8C : 1e11b1e >
 1e11b1c:    05 70             	r5 = 0
 1e11b1e:    20 a0             	r0 = sp + 2
 1e11b20:    50 ba             	r0 |= r5			  ## RF_ble.c:2568:46
 1e11b22:    07 60             	r7 = b[r0 + 0] (u)			  ## RF_ble.c:2568:46
 1e11b24:    25 fd 01 79       	r5 = r7 & 1			  ## RF_ble.c:2568:46
 1e11b28:    10 9a             	r0 = r5 + 1			  ## RF_ble.c:2569:20
 1e11b2a:    fa fd 00 07       	r0 = r7 >> r0			  ## RF_ble.c:2569:20
 1e11b2e:    22 fd 01 09       	r2 = r0 & 1			  ## RF_ble.c:2569:20
 1e11b32:    40 08             	r0 = r4			  ## RF_ble.c:2573:5
 1e11b34:    51 08             	r1 = r5			  ## RF_ble.c:2573:5
 1e11b36:    41 17             	call -382 <__hw_tx_buf_proess : 1e119ba >			  ## RF_ble.c:2573:5
 1e11b38:    20 70             	r0 = 2			  ## RF_ble.c:2577:20
 1e11b3a:    00 f3 01 70       	if ((r7 & 1) == 0) goto 2 <__hw_tx_process+0xAE : 1e11b40 >			  ## RF_ble.c:2577:20
 1e11b3e:    10 70             	r0 = 1
 1e11b40:    fa fd 00 07       	r0 = r7 >> r0
 1e11b44:    22 fd 01 09       	r2 = r0 & 1
 1e11b48:    11 fd 01 59       	r1 = r5 ^ 1			  ## RF_ble.c:2576:20
 1e11b4c:    40 08             	r0 = r4			  ## RF_ble.c:2581:5
 1e11b4e:    35 17             	call -406 <__hw_tx_buf_proess : 1e119ba >			  ## RF_ble.c:2581:5
 1e11b50:    97 f3 24 a9       	call 3101256 <local_irq_disable : 106d9c >			  ## atomic.h:47:5
 1e11b54:    08 00             	csync			  ## atomic.h:47:5
 1e11b56:    c0 f4 00 69       	[r6 + 0] = 0			  ## atomic.h:49:16
 1e11b5a:    97 f3 1d a9       	call 3101242 <local_irq_enable : 106d98 >
 1e11b5e:    02 0a             	sp += 4
 1e11b60:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2585:1


__set_latency_disable:
 1e11b62:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:346:0
 1e11b64:    04 08             	r4 = r0			  ## RF_ble.c:346:0
 1e11b66:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:347:31
 1e11b68:    11 70             	r1 = 1			  ## RF_ble.c:350:27
 1e11b6a:    11 f9 57 01       	b[r0 + 343] = r1			  ## RF_ble.c:350:27
 1e11b6e:    97 f3 15 a9       	call 3101226 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e11b72:    08 00             	csync			  ## RF_ble.c:281:5
 1e11b74:    c8 ff a4 2c 00 00 	r8 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e11b7a:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e11b7e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11b80:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11b82:    c9 71             	r9 = 28			  ## RF_ble.c:147:17
 1e11b84:    e0 fe 90 00       	r0 = r0 / r9 (s)			  ## RF_ble.c:147:17
 1e11b88:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e11b8a:    07 fb f0 07       	r7 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:286:50
 1e11b8e:    50 bf             	r0 &= r7			  ## RF_ble.c:286:50
 1e11b90:    21 9f             	r1 = r7 + 18			  ## RF_ble.c:286:56
 1e11b92:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e11b94:    45 fb 64 94       	r5 = r9 + 1867776			  ## RF_ble.c:286:56
 1e11b98:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:286:21
 1e11b9a:    08 00             	csync			  ## RF_ble.c:287:5
 1e11b9c:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:288:13
 1e11b9e:    c1 ff ff f7 00 00 	r1 = 63487 <BD19_SDK_RAM_SIZE+0x7 : f7ff >			  ## RF_ble.c:355:31
 1e11ba4:    e2 fd 10 60       	r6 = r0 & r1			  ## RF_ble.c:355:31
 1e11ba8:    97 f3 f6 a8       	call 3101164 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e11bac:    97 f3 f6 a8       	call 3101164 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11bb0:    08 00             	csync			  ## RF_ble.c:304:5
 1e11bb2:    1e 4a             	[r5 + 4] = r6			  ## RF_ble.c:306:21
 1e11bb4:    08 00             	csync			  ## RF_ble.c:307:5
 1e11bb6:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:147:19
 1e11bba:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11bbc:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11bbe:    e0 fe 90 00       	r0 = r0 / r9 (s)			  ## RF_ble.c:147:17
 1e11bc2:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e11bc4:    50 bf             	r0 &= r7			  ## RF_ble.c:308:50
 1e11bc6:    51 9f             	r1 = r7 + 21			  ## RF_ble.c:308:67
 1e11bc8:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e11bca:    08 4a             	[r5 + 0] = r0			  ## RF_ble.c:308:21
 1e11bcc:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:310:5
 1e11bce:    d7 f3 e3 a8       	goto 3101126 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


ble_latency_manualhold:
 1e11bd2:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:460:0
 1e11bd4:    04 08             	r4 = r0			  ## RF_ble.c:460:0
 1e11bd6:    05 48             	r5 = [r4 + 0]			  ## RF_ble.c:461:34
 1e11bd8:    97 f3 e0 a8       	call 3101120 <local_irq_disable : 106d9c >			  ## RF_ble.c:463:5
 1e11bdc:    08 00             	csync			  ## RF_ble.c:463:5
 1e11bde:    00 f9 56 51       	r0 = b[r5 + 342] (u)			  ## RF_ble.c:465:13
 1e11be2:    02 20             	if (r0 == 0) goto 4 <ble_latency_manualhold+0x16 : 1e11be8 >			  ## RF_ble.c:465:13
 1e11be4:    40 08             	r0 = r4			  ## RF_ble.c:471:5
 1e11be6:    bd 17             	call -134 <__set_latency_disable : 1e11b62 >			  ## RF_ble.c:471:5
 1e11be8:    15 01             	{rets, r5, r4} = [sp++]
 1e11bea:    d7 f3 d5 a8       	goto 3101098 <local_irq_enable : 106d98 >


le_hw_send_packet_high:
 1e11bee:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:4148:0
 1e11bf0:    04 08             	r4 = r0			  ## RF_ble.c:4148:0
 1e11bf2:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:4149:34
 1e11bf4:    00 f7 ea 61       	r0 = h[r6 + 490] (u)
 1e11bf8:    a5 02             	r5 = [sp+40]
 1e11bfa:    38 08             	r8 = r3
 1e11bfc:    2a 08             	r10 = r2
 1e11bfe:    1b 08             	r11 = r1
 1e11c00:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet_high+0x1A : 1e11c08 >
 1e11c04:    8f f3 7c 8b       	call 2037496 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e11c08:    09 f5 24 00       	r9 = [sp+36]
 1e11c0c:    b0 71             	r0 = 27			  ## RF_ble.c:4153:14
 1e11c0e:    61 16             	call -830 <hw_alloc_rx : 1e118d2 >			  ## RF_ble.c:4153:14
 1e11c10:    07 08             	r7 = r0			  ## RF_ble.c:4153:14
 1e11c12:    03 3e             	if (r7 != 0) goto 6 <le_hw_send_packet_high+0x2C : 1e11c1a >			  ## RF_ble.c:4153:14
 1e11c14:    8f f3 74 8b       	call 2037480 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e11c18:    07 70             	r7 = 0			  ## cpu.h:148:5
 1e11c1a:    01 70             	r1 = 0			  ## RF_ble.c:4161:5
 1e11c1c:    42 71             	r2 = 20			  ## RF_ble.c:4161:5
 1e11c1e:    70 08             	r0 = r7			  ## RF_ble.c:4161:5
 1e11c20:    97 f3 66 a9       	call 3101388 <memset : 106ef0 >			  ## RF_ble.c:4161:5
 1e11c24:    1b f6 08 70       	[r7 + 8] = r11			  ## RF_ble.c:4163:25
 1e11c28:    1a f6 0c 70       	[r7 + 12] = r10			  ## RF_ble.c:4164:25
 1e11c2c:    f0 fd 20 08       	r0 = r8 << 4			  ## RF_ble.c:4166:5
 1e11c30:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:4166:5
 1e11c34:    88 5e             	h[r7 + 16] = r0			  ## RF_ble.c:4166:5
 1e11c36:    2d 6f             	b[r7 + 18] = r5			  ## RF_ble.c:4167:5
 1e11c38:    40 9f             	r0 = r7 + 20			  ## RF_ble.c:4172:16
 1e11c3a:    91 08             	r1 = r9			  ## RF_ble.c:4172:5
 1e11c3c:    52 08             	r2 = r5			  ## RF_ble.c:4172:5
 1e11c3e:    97 f3 51 a9       	call 3101346 <memcpy : 106ee4 >			  ## RF_ble.c:4172:5
 1e11c42:    65 fc 46 01       	r5 = r6 + 326			  ## RF_ble.c:4172:5
 1e11c46:    50 fc 4a 00       	r0 = r5 + 74			  ## RF_ble.c:4176:22
 1e11c4a:    71 08             	r1 = r7			  ## RF_ble.c:4176:5
 1e11c4c:    bf f3 5f 9f       	call -49474 <hw_dma_push : 1e05b0e >			  ## RF_ble.c:4176:5
 1e11c50:    00 5a             	r0 = h[r5 + 0] (u)
 1e11c52:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e11c56:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:882:23
 1e11c5a:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:882:23
 1e11c5c:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet_high+0x7C : 1e11c6a >			  ## RF_ble.c:882:23
 1e11c60:    e0 71             	r0 = 30			  ## RF_ble.c:886:28
 1e11c62:    10 f7 60 60       	h[r6 + 96] = r0			  ## RF_ble.c:886:28
 1e11c66:    10 f7 5e 60       	h[r6 + 94] = r0			  ## RF_ble.c:887:28
 1e11c6a:    40 08             	r0 = r4			  ## RF_ble.c:4180:5
 1e11c6c:    12 17             	call -476 <__hw_tx_process : 1e11a92 >			  ## RF_ble.c:4180:5
 1e11c6e:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:410:17
 1e11c70:    10 e0 02 80       	if (r0 > 1) goto 4 <le_hw_send_packet_high+0x8A : 1e11c78 >			  ## RF_ble.c:410:17
 1e11c74:    20 70             	r0 = 2
 1e11c76:    a8 5a             	h[r5 + 20] = r0
 1e11c78:    40 08             	r0 = r4			  ## RF_ble.c:4183:5
 1e11c7a:    1b 01             	{rets, r11-r4} = [sp++]			  ## RF_ble.c:4183:5
 1e11c7c:    aa 1f             	goto -172 <ble_latency_manualhold : 1e11bd2 >			  ## RF_ble.c:4183:5


__set_local_addr:
 1e11c7e:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:755:0
 1e11c80:    05 08             	r5 = r0			  ## RF_ble.c:755:0
 1e11c82:    30 5a             	r0 = h[r5 + 6] (u)			  ## RF_ble.c:758:23
 1e11c84:    24 08             	r4 = r2			  ## RF_ble.c:758:23
 1e11c86:    90 b1             	r0 |= 8			  ## RF_ble.c:758:23
 1e11c88:    38 5a             	h[r5 + 6] = r0			  ## RF_ble.c:758:23
 1e11c8a:    10 70             	r0 = 1			  ## RF_ble.c:758:23
 1e11c8c:    01 32             	if (r1 != 0) goto 2 <__set_local_addr+0x12 : 1e11c90 >			  ## RF_ble.c:758:23
 1e11c8e:    00 70             	r0 = 0			  ## RF_ble.c:760:27
 1e11c90:    10 f9 68 51       	b[r5 + 360] = r0			  ## RF_ble.c:760:25
 1e11c94:    50 fc 69 01       	r0 = r5 + 361			  ## RF_ble.c:762:5
 1e11c98:    62 70             	r2 = 6			  ## RF_ble.c:762:5
 1e11c9a:    41 08             	r1 = r4			  ## RF_ble.c:762:5
 1e11c9c:    97 f3 22 a9       	call 3101252 <memcpy : 106ee4 >			  ## RF_ble.c:762:5
 1e11ca0:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:764:29
 1e11ca2:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:764:45
 1e11ca4:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:764:43
 1e11ca8:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:764:43
 1e11cac:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:764:26
 1e11cae:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:765:29
 1e11cb0:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:765:45
 1e11cb2:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:765:43
 1e11cb6:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:765:26
 1e11cb8:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:766:29
 1e11cba:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:766:45
 1e11cbc:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:766:43
 1e11cc0:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:766:26
 1e11cc2:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:767:1


__set_peer_addr:
 1e11cc4:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:801:0
 1e11cc6:    24 08             	r4 = r2			  ## RF_ble.c:801:0
 1e11cc8:    05 08             	r5 = r0			  ## RF_ble.c:801:0
 1e11cca:    10 70             	r0 = 1			  ## RF_ble.c:801:0
 1e11ccc:    01 32             	if (r1 != 0) goto 2 <__set_peer_addr+0xC : 1e11cd0 >			  ## RF_ble.c:801:0
 1e11cce:    00 70             	r0 = 0			  ## RF_ble.c:802:26
 1e11cd0:    10 f9 6f 51       	b[r5 + 367] = r0			  ## RF_ble.c:802:24
 1e11cd4:    50 fc 70 01       	r0 = r5 + 368			  ## RF_ble.c:804:5
 1e11cd8:    62 70             	r2 = 6			  ## RF_ble.c:804:5
 1e11cda:    41 08             	r1 = r4			  ## RF_ble.c:804:5
 1e11cdc:    97 f3 02 a9       	call 3101188 <memcpy : 106ee4 >			  ## RF_ble.c:804:5
 1e11ce0:    10 68             	r0 = b[r4 + 1] (u)			  ## RF_ble.c:806:30
 1e11ce2:    01 68             	r1 = b[r4 + 0] (u)			  ## RF_ble.c:806:46
 1e11ce4:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## RF_ble.c:806:44
 1e11ce8:    50 fc 4c 00       	r0 = r5 + 76			  ## RF_ble.c:806:44
 1e11cec:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:806:27
 1e11cee:    31 68             	r1 = b[r4 + 3] (u)			  ## RF_ble.c:807:30
 1e11cf0:    22 68             	r2 = b[r4 + 2] (u)			  ## RF_ble.c:807:46
 1e11cf2:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:807:44
 1e11cf6:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:807:27
 1e11cf8:    51 68             	r1 = b[r4 + 5] (u)			  ## RF_ble.c:808:30
 1e11cfa:    42 68             	r2 = b[r4 + 4] (u)			  ## RF_ble.c:808:46
 1e11cfc:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:808:44
 1e11d00:    2a 50             	h[r0 + 4] = r2			  ## RF_ble.c:808:27
 1e11d02:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:809:1


__set_channel_map:
 1e11d04:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:813:0
 1e11d06:    08 70             	r8 = 0			  ## RF_ble.c:813:0
 1e11d08:    19 70             	r9 = 1			  ## RF_ble.c:813:0
 1e11d0a:    0a 70             	r10 = 0			  ## RF_ble.c:813:0
 1e11d0c:    04 70             	r4 = 0			  ## RF_ble.c:813:0
 1e11d0e:    62 c0             	r2 = r4 << 1			  ## RF_ble.c:814:9
 1e11d10:    27 94             	r7 = r2 + 2			  ## RF_ble.c:814:9
 1e11d12:    46 08             	r6 = r4			  ## RF_ble.c:814:9
 1e11d14:    54 e2 23 a0       	ifs (r4 >= 37) goto 70 <__set_channel_map+0x5A : 1e11d5e >
 1e11d18:    04 28             	if (r4 == 0) goto 8 <__set_channel_map+0x1E : 1e11d22 >
 1e11d1a:    b4 e0 03 10       	if (r4 != 11) goto 6 <__set_channel_map+0x20 : 1e11d24 >
 1e11d1e:    2a 70             	r10 = 2
 1e11d20:    01 18             	goto 2 <__set_channel_map+0x20 : 1e11d24 >
 1e11d22:    0a 70             	r10 = 0
 1e11d24:    03 b1             	r3 = r0 + r4			  ## RF_ble.c:836:29
 1e11d26:    16 f9 68 30       	b[r3 + 104] = r6			  ## RF_ble.c:836:29
 1e11d2a:    80 fb 70 2a       	r2 = r10 + r7			  ## RF_ble.c:837:31
 1e11d2e:    12 f9 b8 30       	b[r3 + 184] = r2			  ## RF_ble.c:837:29
 1e11d32:    23 fd 07 49       	r3 = r4 & 7			  ## RF_ble.c:838:31
 1e11d36:    e5 d8             	r5 = r4 >>> 3			  ## RF_ble.c:838:23
 1e11d38:    05 fa 00 15       	r5 = b[r1+r5] (u)			  ## RF_ble.c:838:13
 1e11d3c:    f8 fd 30 39       	r3 = r9 << r3			  ## RF_ble.c:838:31
 1e11d40:    16 80             	r6 += 1			  ## RF_ble.c:838:13
 1e11d42:    27 80             	r7 += 2			  ## RF_ble.c:838:13
 1e11d44:    14 80             	r4 += 1			  ## RF_ble.c:837:34
 1e11d46:    35 f0 e5 ff       	if ((r5 & r3) == 0) goto -54 <__set_channel_map+0x10 : 1e11d14 >
 1e11d4a:    80 fb 80 30       	r3 = r0 + r8			  ## RF_ble.c:839:13
 1e11d4e:    65 fc ff ff       	r5 = r6 + -1			  ## RF_ble.c:839:35
 1e11d52:    15 f9 90 30       	b[r3 + 144] = r5			  ## RF_ble.c:839:35
 1e11d56:    12 f9 e0 30       	b[r3 + 224] = r2			  ## RF_ble.c:840:37
 1e11d5a:    18 80             	r8 += 1			  ## RF_ble.c:840:33
 1e11d5c:    d8 1f             	goto -80 <__set_channel_map+0xA : 1e11d0e >
 1e11d5e:    03 fc 8d 00       	r3 = r0 + 141			  ## RF_ble.c:844:17
 1e11d62:    04 70             	r4 = 0			  ## RF_ble.c:844:17
 1e11d64:    55 72             	r5 = 37
 1e11d66:    c2 ff ee e6 e0 01 	r2 = 31516398 <bluetooth_base_uuid+0x10 : 1e0e6ee >
 1e11d6c:    06 fa 00 42       	r6 = b[r4+r2] (u)			  ## RF_ble.c:844:17
 1e11d70:    07 b7             	r7 = r3 + r4			  ## RF_ble.c:848:34
 1e11d72:    0d 6e             	b[r7 + 0] = r5			  ## RF_ble.c:848:34
 1e11d74:    16 f9 50 70       	b[r7 + 80] = r6			  ## RF_ble.c:849:34
 1e11d78:    15 f9 28 70       	b[r7 + 40] = r5			  ## RF_ble.c:850:34
 1e11d7c:    16 f9 78 70       	b[r7 + 120] = r6			  ## RF_ble.c:851:34
 1e11d80:    14 80             	r4 += 1			  ## RF_ble.c:843:25
 1e11d82:    15 80             	r5 += 1			  ## RF_ble.c:843:19
 1e11d84:    34 e0 f2 1f       	if (r4 != 3) goto -28 <__set_channel_map+0x68 : 1e11d6c >			  ## RF_ble.c:843:19
 1e11d88:    12 62             	r2 = b[r1 + 1] (u)			  ## RF_ble.c:854:23
 1e11d8a:    03 62             	r3 = b[r1 + 0] (u)			  ## RF_ble.c:854:42
 1e11d8c:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:854:40
 1e11d90:    7b 51             	h[r0 + 46] = r3			  ## RF_ble.c:854:20
 1e11d92:    32 62             	r2 = b[r1 + 3] (u)			  ## RF_ble.c:855:23
 1e11d94:    23 62             	r3 = b[r1 + 2] (u)			  ## RF_ble.c:855:42
 1e11d96:    d8 fd 40 32       	r3 <= insert(r2, p:8, l:24)			  ## RF_ble.c:855:40
 1e11d9a:    8b 51             	h[r0 + 48] = r3			  ## RF_ble.c:855:20
 1e11d9c:    41 62             	r1 = b[r1 + 4] (u)			  ## RF_ble.c:856:36
 1e11d9e:    21 fd 1f 19       	r1 = r1 & 31			  ## RF_ble.c:856:47
 1e11da2:    db fd 28 18       	r1 <= insert(r8, p:5, l:27)			  ## RF_ble.c:856:33
 1e11da6:    99 51             	h[r0 + 50] = r1			  ## RF_ble.c:856:20
 1e11da8:    71 51             	r1 = h[r0 + 46] (u)			  ## RF_ble.c:858:28
 1e11daa:    02 fc 50 02       	r2 = r0 + 592			  ## RF_ble.c:858:28
 1e11dae:    09 54             	h[r2 + 0] = r1			  ## RF_ble.c:858:18
 1e11db0:    81 51             	r1 = h[r0 + 48] (u)			  ## RF_ble.c:859:28
 1e11db2:    19 54             	h[r2 + 2] = r1			  ## RF_ble.c:859:18
 1e11db4:    90 51             	r0 = h[r0 + 50] (u)			  ## RF_ble.c:860:28
 1e11db6:    28 54             	h[r2 + 4] = r0			  ## RF_ble.c:860:18
 1e11db8:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:861:1


__set_hw_state:
 1e11dba:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:479:0
 1e11dbc:    04 08             	r4 = r0			  ## RF_ble.c:479:0
 1e11dbe:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:480:31
 1e11dc0:    00 fc 52 01       	r0 = r0 + 338
 1e11dc4:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:482:22
 1e11dc6:    3b 50             	h[r0 + 6] = r3			  ## RF_ble.c:483:22
 1e11dc8:    4a 60             	b[r0 + 4] = r2			  ## RF_ble.c:484:22
 1e11dca:    05 70             	r5 = 0			  ## RF_ble.c:485:27
 1e11dcc:    5d 60             	b[r0 + 5] = r5			  ## RF_ble.c:485:27
 1e11dce:    08 c3             	r0 = r1 << 12			  ## RF_ble.c:487:40
 1e11dd0:    d1 c2             	r1 = r2 << 11			  ## RF_ble.c:487:63
 1e11dd2:    50 b2             	r0 |= r1			  ## RF_ble.c:487:47
 1e11dd4:    e0 fd 30 50       	r5 = r0 | r3			  ## RF_ble.c:487:70
 1e11dd8:    97 f3 e0 a7       	call 3100608 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11ddc:    08 00             	csync			  ## RF_ble.c:304:5
 1e11dde:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e11de4:    1d 40             	[r0 + 4] = r5			  ## RF_ble.c:306:21
 1e11de6:    08 00             	csync			  ## RF_ble.c:307:5
 1e11de8:    c1 ff a4 2c 00 00 	r1 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e11dee:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:147:19
 1e11df0:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:147:35
 1e11df2:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e11df4:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e11df6:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e11dfa:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:308:50
 1e11dfc:    02 fb f0 07       	r2 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:308:50
 1e11e00:    51 b5             	r1 &= r2			  ## RF_ble.c:308:50
 1e11e02:    52 81             	r2 += 21			  ## RF_ble.c:308:67
 1e11e04:    51 b4             	r1 |= r2			  ## RF_ble.c:308:67
 1e11e06:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:308:21
 1e11e08:    15 01             	{rets, r5, r4} = [sp++]			  ## RF_ble.c:310:5
 1e11e0a:    d7 f3 c5 a7       	goto 3100554 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


__set_winoffset:
 1e11e0e:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:503:0
 1e11e10:    15 08             	r5 = r1			  ## RF_ble.c:503:0
 1e11e12:    04 08             	r4 = r0			  ## RF_ble.c:503:0
 1e11e14:    c7 ff a4 2c 00 00 	r7 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:503:0
 1e11e1a:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:503:0
 1e11e20:    08 2a             	if (r5 == 0) goto 16 <__set_winoffset+0x24 : 1e11e32 >			  ## RF_ble.c:504:9
 1e11e22:    97 f3 bb a7       	call 3100534 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11e26:    08 00             	csync			  ## RF_ble.c:304:5
 1e11e28:    00 fd 80 5a       	r0 = r5 | 32768			  ## RF_ble.c:505:47
 1e11e2c:    18 4c             	[r6 + 4] = r0			  ## RF_ble.c:306:21
 1e11e2e:    08 00             	csync			  ## RF_ble.c:307:5
 1e11e30:    06 18             	goto 12 <__set_winoffset+0x30 : 1e11e3e >			  ## RF_ble.c:307:5
 1e11e32:    97 f3 b3 a7       	call 3100518 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11e36:    08 00             	csync			  ## RF_ble.c:304:5
 1e11e38:    c1 f4 00 69       	[r6 + 4] = 0			  ## RF_ble.c:306:21
 1e11e3c:    08 00             	csync			  ## RF_ble.c:307:5
 1e11e3e:    00 4e             	r0 = [r7 + 0]
 1e11e40:    40 40             	r0 = [r0 + 16]
 1e11e42:    20 b8             	r0 = r4 - r0
 1e11e44:    c1 71             	r1 = 28
 1e11e46:    e0 fe 10 00       	r0 = r0 / r1 (s)
 1e11e4a:    00 c1             	r0 = r0 << 4
 1e11e4c:    20 fd 7f 00       	r0 = r0 & 4080
 1e11e50:    01 fb 05 10       	r1 = 4101 <driver_data_end+0x1 : 1005 >
 1e11e54:    50 b2             	r0 |= r1
 1e11e56:    08 4c             	[r6 + 0] = r0
 1e11e58:    17 01             	{rets, r7-r4} = [sp++]
 1e11e5a:    d7 f3 9d a7       	goto 3100474 <local_irq_enable : 106d98 >


__set_interval:
 1e11e5e:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:333:0
 1e11e60:    04 08             	r4 = r0			  ## RF_ble.c:333:0
 1e11e62:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:334:31
 1e11e64:    28 08             	r8 = r2
 1e11e66:    02 20             	if (r0 == 0) goto 4 <__set_interval+0xE : 1e11e6c >
 1e11e68:    11 f6 64 01       	[r0 + 356] = r1			  ## RF_ble.c:336:23
 1e11e6c:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:338:43
 1e11e70:    e0 fe 00 71       	r7 = r1 / r0 (s)			  ## RF_ble.c:338:43
 1e11e74:    e5 05             	r5 = r7.l (u)			  ## RF_ble.c:338:59
 1e11e76:    97 f3 91 a7       	call 3100450 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11e7a:    08 00             	csync			  ## RF_ble.c:304:5
 1e11e7c:    c6 ff 1c 80 1c 00 	r6 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e11e82:    1d 4c             	[r6 + 4] = r5			  ## RF_ble.c:306:21
 1e11e84:    08 00             	csync			  ## RF_ble.c:307:5
 1e11e86:    c9 ff a4 2c 00 00 	r9 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e11e8c:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e11e90:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11e92:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11e94:    c5 71             	r5 = 28			  ## RF_ble.c:147:17
 1e11e96:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e11e9a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e11e9c:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e11ea0:    01 fb 05 04       	r1 = 1029 <BTCTLER_LE_RAM_TOTAL+0x27 : 405 >			  ## RF_ble.c:308:67
 1e11ea4:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e11ea6:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e11ea8:    38 dc             	r0 = r7 >>> 16			  ## RF_ble.c:341:79
 1e11eaa:    f0 fd 78 18       	r1 = r8 << 15			  ## RF_ble.c:341:42
 1e11eae:    e0 fd 00 71       	r7 = r1 | r0			  ## RF_ble.c:341:49
 1e11eb2:    97 f3 71 a7       	call 3100386 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e11eb6:    97 f3 71 a7       	call 3100386 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11eba:    08 00             	csync			  ## RF_ble.c:304:5
 1e11ebc:    1f 4c             	[r6 + 4] = r7			  ## RF_ble.c:306:21
 1e11ebe:    08 00             	csync			  ## RF_ble.c:307:5
 1e11ec0:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e11ec4:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11ec6:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e11ec8:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e11ecc:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e11ece:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e11ed2:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e11ed4:    01 fb 05 3c       	r1 = 15365 <spi_soft_writebyte+0x81 : 3c05 >			  ## RF_ble.c:308:67
 1e11ed8:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e11eda:    08 4c             	[r6 + 0] = r0			  ## RF_ble.c:308:21
 1e11edc:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:310:5
 1e11ede:    d7 f3 5b a7       	goto 3100342 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


le_hw_ioctrl:
 1e11ee2:    62 01             	[--sp] = {r3, r2}			  ## RF_ble.c:4395:0
 1e11ee4:    7e 01             	[--sp] = {rets, r14-r4}			  ## RF_ble.c:4395:0
 1e11ee6:    fe 0b             	sp += -4			  ## RF_ble.c:4395:0
 1e11ee8:    05 08             	r5 = r0			  ## RF_ble.c:4395:0
 1e11eea:    40 a3             	r0 = sp + 52			  ## RF_ble.c:4395:0
 1e11eec:    08 02             	[sp] = r0			  ## RF_ble.c:4397:5
 1e11eee:    71 e1 2c 80       	if (r1 > 23) goto 88 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4397:5
 1e11ef2:    04 4a             	r4 = [r5 + 0]			  ## RF_ble.c:4398:31
 1e11ef4:    4b c0             	r3 = r1 << 1
 1e11ef6:    c9 ff a4 2c 00 00 	r9 = 11428 <bb_hdl : 2ca4 >
 1e11efc:    20 fb 64 a4       	r10 = 1867776
 1e11f00:    46 fc 40 00       	r6 = r4 + 64
 1e11f04:    4d fc 10 01       	r13 = r4 + 272
 1e11f08:    4b fc 50 01       	r11 = r4 + 336
 1e11f0c:    40 fc a0 01       	r0 = r4 + 416
 1e11f10:    42 fc e8 01       	r2 = r4 + 488
 1e11f14:    47 fc 4c 02       	r7 = r4 + 588
 1e11f18:    b3 00             	tbh [r3]


.GJTIL735_0_0_:
 1e11f1a:    18 00     < 24 : 0x18 >
 1e11f1c:    18 00     < 24 : 0x18 >
 1e11f1e:    1c 00     < 28 : 0x1C >
 1e11f20:    f8 00     < 248 : 0xF8 >
 1e11f22:    27 00     < 39 : 0x27 >
 1e11f24:    59 00     < 89 : 0x59 >
 1e11f26:    03 01     < 259 : 0x103 >
 1e11f28:    69 00     < 105 : 0x69 >
 1e11f2a:    9e 01     < 414 : 0x19E >
 1e11f2c:    8c 00     < 140 : 0x8C >
 1e11f2e:    b5 00     < 181 : 0xB5 >
 1e11f30:    a5 01     < 421 : 0x1A5 >
 1e11f32:    18 00     < 24 : 0x18 >
 1e11f34:    b2 01     < 434 : 0x1B2 >
 1e11f36:    18 00     < 24 : 0x18 >
 1e11f38:    d7 01     < 471 : 0x1D7 >
 1e11f3a:    18 00     < 24 : 0x18 >
 1e11f3c:    dd 01     < 477 : 0x1DD >
 1e11f3e:    e3 01     < 483 : 0x1E3 >
 1e11f40:    c2 00     < 194 : 0xC2 >
 1e11f42:    d0 00     < 208 : 0xD0 >
 1e11f44:    e9 01     < 489 : 0x1E9 >
 1e11f46:    de 00     < 222 : 0xDE >
 1e11f48:    ef 00     < 239 : 0xEF >
 1e11f4a:    02 0a             	sp += 4
 1e11f4c:    1e 01             	{rets, r14-r4} = [sp++]			  ## RF_ble.c:4500:1
 1e11f4e:    04 0a             	sp += 8			  ## RF_ble.c:4500:1
 1e11f50:    20 00             	rts			  ## RF_ble.c:4500:1
 1e11f52:    00 02             	r0 = [sp]			  ## RF_ble.c:4412:31
 1e11f54:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4412:31
 1e11f56:    09 02             	[sp] = r1			  ## RF_ble.c:4412:31
 1e11f58:    02 02             	r2 = [sp]			  ## RF_ble.c:4412:58
 1e11f5a:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4412:31
 1e11f5c:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4412:58
 1e11f5e:    08 02             	[sp] = r0			  ## RF_ble.c:4412:58
 1e11f60:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4412:58
 1e11f62:    40 08             	r0 = r4			  ## RF_ble.c:4412:9
 1e11f64:    8c 16             	call -744 <__set_local_addr : 1e11c7e >			  ## RF_ble.c:4412:9
 1e11f66:    f1 1f             	goto -30 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4412:9
 1e11f68:    00 02             	r0 = [sp]			  ## RF_ble.c:4419:33
 1e11f6a:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4419:33
 1e11f6c:    09 02             	[sp] = r1			  ## RF_ble.c:4419:33
 1e11f6e:    01 02             	r1 = [sp]			  ## RF_ble.c:4419:54
 1e11f70:    04 40             	r4 = [r0 + 0]			  ## RF_ble.c:4419:33
 1e11f72:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4419:54
 1e11f74:    08 02             	[sp] = r0			  ## RF_ble.c:4419:54
 1e11f76:    07 42             	r7 = [r1 + 0]			  ## RF_ble.c:4419:54
 1e11f78:    97 f3 10 a7       	call 3100192 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e11f7c:    08 00             	csync			  ## RF_ble.c:304:5
 1e11f7e:    14 f6 20 a0       	[r10 + 32] = r4			  ## RF_ble.c:306:21
 1e11f82:    08 00             	csync			  ## RF_ble.c:307:5
 1e11f84:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e11f88:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e11f8a:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e11f8c:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e11f8e:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e11f92:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e11f94:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e11f98:    01 fb 05 14       	r1 = 5125 <_cpu0_sstack_begin+0x3D5 : 1405 >			  ## RF_ble.c:308:67
 1e11f9c:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e11f9e:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e11fa2:    97 f3 f9 a6       	call 3100146 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e11fa6:    14 f7 0e b0       	h[r11 + 14] = r4			  ## RF_ble.c:524:18
 1e11faa:    10 9e             	r0 = r7 + 1			  ## RF_ble.c:525:39
 1e11fac:    10 f9 0d b0       	b[r11 + 13] = r0			  ## RF_ble.c:525:24
 1e11fb0:    00 f7 36 d0       	r0 = h[r13 + 54] (u)
 1e11fb4:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e11fb8:    01 fd 1e 1a       	r1 = r1 | 7680			  ## RF_ble.c:882:23
 1e11fbc:    11 f7 36 d0       	h[r13 + 54] = r1			  ## RF_ble.c:882:23
 1e11fc0:    2d f3 c3 0f       	if ((r0 & 8192) != 0) goto -122 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:882:23
 1e11fc4:    e0 71             	r0 = 30			  ## RF_ble.c:886:28
 1e11fc6:    08 5d             	h[r6 + 32] = r0			  ## RF_ble.c:886:28
 1e11fc8:    f8 5c             	h[r6 + 30] = r0			  ## RF_ble.c:887:28
 1e11fca:    bf 1f             	goto -130 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:887:28
 1e11fcc:    00 02             	r0 = [sp]			  ## RF_ble.c:4423:28
 1e11fce:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4423:28
 1e11fd0:    09 02             	[sp] = r1			  ## RF_ble.c:4423:28
 1e11fd2:    01 02             	r1 = [sp]			  ## RF_ble.c:4423:49
 1e11fd4:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4423:28
 1e11fd6:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4423:49
 1e11fd8:    0a 02             	[sp] = r2			  ## RF_ble.c:4423:49
 1e11fda:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4423:49
 1e11fdc:    19 59             	h[r4 + 34] = r1			  ## RF_ble.c:722:25
 1e11fde:    0a d4             	r2 = r1 >> 16			  ## RF_ble.c:724:36
 1e11fe0:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:724:25
 1e11fe2:    10 f7 02 d0       	h[r13 + 2] = r0			  ## RF_ble.c:725:25
 1e11fe6:    11 f6 3c d0       	[r13 + 60] = r1			  ## RF_ble.c:730:16
 1e11fea:    af 1f             	goto -162 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:730:16
 1e11fec:    00 02             	r0 = [sp]			  ## RF_ble.c:4435:62
 1e11fee:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4435:62
 1e11ff0:    09 02             	[sp] = r1			  ## RF_ble.c:4435:62
 1e11ff2:    08 f6 00 00       	r8 = [r0 + 0]			  ## RF_ble.c:4435:62
 1e11ff6:    00 f9 07 80       	r0 = b[r8 + 7] (u)			  ## RF_ble.c:1243:25
 1e11ffa:    01 f9 02 b0       	r1 = b[r11 + 2] (u)			  ## RF_ble.c:1253:14
 1e11ffe:    0a f7 08 80       	r10 = h[r8 + 8] (u)			  ## RF_ble.c:1253:14
 1e12002:    02 fb e2 04       	r2 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## RF_ble.c:1243:40
 1e12006:    80 0e             	r0 = r0 * r2			  ## RF_ble.c:1243:40
 1e12008:    00 fc 71 02       	r0 = r0 + 625			  ## RF_ble.c:1243:56
 1e1200c:    61 e0 7e 11       	if (r1 != 6) goto 764 <.GJTIE735_0_0_+0x3C2 : 1e1230c >			  ## RF_ble.c:1253:9
 1e12010:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:722:25
 1e12012:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:724:36
 1e12014:    29 59             	h[r4 + 36] = r1			  ## RF_ble.c:724:25
 1e12016:    21 73             	r1 = 50			  ## RF_ble.c:725:25
 1e12018:    11 f7 02 d0       	h[r13 + 2] = r1			  ## RF_ble.c:725:25
 1e1201c:    10 f6 3c d0       	[r13 + 60] = r0			  ## RF_ble.c:730:16
 1e12020:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1256:47
 1e12024:    61 70             	r1 = 6			  ## RF_ble.c:1256:9
 1e12026:    02 70             	r2 = 0			  ## RF_ble.c:1256:9
 1e12028:    50 08             	r0 = r5			  ## RF_ble.c:1256:9
 1e1202a:    c7 16             	call -626 <__set_hw_state : 1e11dba >			  ## RF_ble.c:1256:9
 1e1202c:    f0 fd 08 4a       	r4 = r10 << 1			  ## RF_ble.c:1254:38
 1e12030:    9c 19             	goto 824 <.GJTIE735_0_0_+0x420 : 1e1236a >
 1e12032:    01 02             	r1 = [sp]			  ## RF_ble.c:4438:36
 1e12034:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4438:36
 1e12036:    08 02             	[sp] = r0			  ## RF_ble.c:4438:36
 1e12038:    00 02             	r0 = [sp]			  ## RF_ble.c:4438:63
 1e1203a:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4438:36
 1e1203c:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4438:63
 1e1203e:    09 02             	[sp] = r1			  ## RF_ble.c:4438:63
 1e12040:    11 70             	r1 = 1			  ## RF_ble.c:4438:63
 1e12042:    01 34             	if (r2 != 0) goto 2 <.GJTIE735_0_0_+0xFC : 1e12046 >			  ## RF_ble.c:4438:63
 1e12044:    01 70             	r1 = 0			  ## RF_ble.c:1321:17
 1e12046:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4438:63
 1e12048:    e2 59             	r2 = h[r4 + 60] (u)			  ## RF_ble.c:1322:35
 1e1204a:    22 fd 7e 29       	r2 = r2 & 126			  ## RF_ble.c:1322:46
 1e1204e:    c1 fd 40 21       	r2 <= insert(r1, p:8, l:1)			  ## RF_ble.c:1322:79
 1e12052:    01 fd 01 29       	r1 = r2 | 1			  ## RF_ble.c:1322:79
 1e12056:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1322:24
 1e12058:    e1 59             	r1 = h[r4 + 60] (u)			  ## RF_ble.c:1323:24
 1e1205a:    11 b2             	r1 |= 16			  ## RF_ble.c:1323:24
 1e1205c:    e9 59             	h[r4 + 60] = r1			  ## RF_ble.c:1323:24
 1e1205e:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:1325:28
 1e12060:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:1325:44
 1e12062:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1325:42
 1e12066:    fa 59             	h[r4 + 62] = r2			  ## RF_ble.c:1325:25
 1e12068:    31 60             	r1 = b[r0 + 3] (u)			  ## RF_ble.c:1326:28
 1e1206a:    22 60             	r2 = b[r0 + 2] (u)			  ## RF_ble.c:1326:44
 1e1206c:    d8 fd 40 21       	r2 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1326:42
 1e12070:    0a 5c             	h[r6 + 0] = r2			  ## RF_ble.c:1326:25
 1e12072:    51 60             	r1 = b[r0 + 5] (u)			  ## RF_ble.c:1327:28
 1e12074:    40 60             	r0 = b[r0 + 4] (u)			  ## RF_ble.c:1327:44
 1e12076:    d8 fd 40 01       	r0 <= insert(r1, p:8, l:24)			  ## RF_ble.c:1327:42
 1e1207a:    18 5c             	h[r6 + 2] = r0			  ## RF_ble.c:1327:25
 1e1207c:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1305:21
 1e1207e:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:1305:21
 1e12080:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1305:21
 1e12082:    63 1f             	goto -314 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:1305:21
 1e12084:    01 02             	r1 = [sp]			  ## RF_ble.c:4442:35
 1e12086:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4442:35
 1e12088:    0a 02             	[sp] = r2			  ## RF_ble.c:4442:35
 1e1208a:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4442:35
 1e1208c:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:1352:27
 1e1208e:    61 ff ff 19 5b ff 	if ((r1 & 255) != 0) goto -330 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:1352:27
 1e12094:    01 70             	r1 = 0
 1e12096:    11 f6 54 b0       	[r11 + 84] = r1			  ## RF_ble.c:1355:34
 1e1209a:    29 60             	b[r0 + 2] = r1			  ## RF_ble.c:1356:34
 1e1209c:    56 1f             	goto -340 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:1356:34
 1e1209e:    00 02             	r0 = [sp]			  ## RF_ble.c:4479:17
 1e120a0:    02 f6 78 d0       	r2 = [r13 + 120]			  ## list.h:124:18
 1e120a4:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4479:17
 1e120a6:    09 02             	[sp] = r1			  ## RF_ble.c:4479:17
 1e120a8:    d3 fc 78 00       	r3 = r13 + 120			  ## RF_ble.c:4188:39
 1e120ac:    11 70             	r1 = 1			  ## list.h:124:23
 1e120ae:    32 f2 01 00       	if (r2 == r3) goto 2 <.GJTIE735_0_0_+0x16A : 1e120b4 >			  ## list.h:124:23
 1e120b2:    01 70             	r1 = 0			  ## list.h:124:23
 1e120b4:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4479:17
 1e120b6:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:4479:37
 1e120b8:    48 1f             	goto -368 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4479:37
 1e120ba:    00 02             	r0 = [sp]			  ## RF_ble.c:4482:24
 1e120bc:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4482:24
 1e120be:    09 02             	[sp] = r1			  ## RF_ble.c:4482:24
 1e120c0:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4482:24
 1e120c2:    01 f6 00 a0       	r1 = [r10 + 0]			  ## RF_ble.c:4194:9
 1e120c6:    41 23             	if (r1 == 0) goto -382 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4194:9
 1e120c8:    20 04             	r0 = r0.l (u)
 1e120ca:    11 70             	r1 = 1			  ## RF_ble.c:4196:30
 1e120cc:    d0 fd 40 10       	r1 <= insert(r0, p:8, l:16)			  ## RF_ble.c:4196:30
 1e120d0:    11 f6 34 a0       	[r10 + 52] = r1			  ## RF_ble.c:4196:21
 1e120d4:    3a 1f             	goto -396 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4196:21
 1e120d6:    00 02             	r0 = [sp]			  ## RF_ble.c:4488:44
 1e120d8:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4488:44
 1e120da:    09 02             	[sp] = r1			  ## RF_ble.c:4488:44
 1e120dc:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4488:44
 1e120de:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3374:23
 1e120e2:    20 fc 47 00       	r0 = r2 + 71			  ## RF_ble.c:3376:5
 1e120e6:    52 08             	r2 = r5			  ## RF_ble.c:3376:5
 1e120e8:    97 f3 fc a6       	call 3100152 <memcpy : 106ee4 >			  ## RF_ble.c:3376:5
 1e120ec:    15 f9 2e 42       	b[r4 + 558] = r5			  ## RF_ble.c:3378:22
 1e120f0:    20 6e             	r0 = b[r7 + 2] (u)			  ## RF_ble.c:3380:20
 1e120f2:    90 b0             	r0 |= 2			  ## RF_ble.c:3380:20
 1e120f4:    28 6e             	b[r7 + 2] = r0			  ## RF_ble.c:3380:20
 1e120f6:    29 1f             	goto -430 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:3380:20
 1e120f8:    00 02             	r0 = [sp]			  ## RF_ble.c:4491:40
 1e120fa:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4491:40
 1e120fc:    09 02             	[sp] = r1			  ## RF_ble.c:4491:40
 1e120fe:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4491:40
 1e12100:    10 f7 0a b0       	h[r11 + 10] = r0			  ## RF_ble.c:4491:40
 1e12104:    50 08             	r0 = r5			  ## RF_ble.c:4492:9
 1e12106:    65 15             	call -1334 <ble_latency_manualhold : 1e11bd2 >			  ## RF_ble.c:4492:9
 1e12108:    20 1f             	goto -448 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4492:9
 1e1210a:    00 02             	r0 = [sp]			  ## RF_ble.c:4415:30
 1e1210c:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4415:30
 1e1210e:    09 02             	[sp] = r1			  ## RF_ble.c:4415:30
 1e12110:    02 02             	r2 = [sp]			  ## RF_ble.c:4415:57
 1e12112:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:4415:30
 1e12114:    40 94             	r0 = r2 + 4			  ## RF_ble.c:4415:57
 1e12116:    08 02             	[sp] = r0			  ## RF_ble.c:4415:57
 1e12118:    02 44             	r2 = [r2 + 0]			  ## RF_ble.c:4415:57
 1e1211a:    40 08             	r0 = r4			  ## RF_ble.c:4415:9
 1e1211c:    d3 15             	call -1114 <__set_peer_addr : 1e11cc4 >			  ## RF_ble.c:4415:9
 1e1211e:    15 1f             	goto -470 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4415:9
 1e12120:    00 02             	r0 = [sp]			  ## RF_ble.c:4431:61
 1e12122:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4431:61
 1e12124:    09 02             	[sp] = r1			  ## RF_ble.c:4431:61
 1e12126:    08 f6 00 00       	r8 = [r0 + 0]			  ## RF_ble.c:4431:61
 1e1212a:    c0 ff 38 0f 00 00 	r0 = 3896 <g_ble_fp : f38 >			  ## RF_ble.c:1125:14
 1e12130:    0c 40             	[r0 + 0] = r4			  ## RF_ble.c:1125:14
 1e12132:    00 f7 36 d0       	r0 = h[r13 + 54] (u)
 1e12136:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e1213a:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:882:23
 1e1213e:    11 f7 36 d0       	h[r13 + 54] = r1			  ## RF_ble.c:882:23
 1e12142:    2d f3 03 00       	if ((r0 & 8192) != 0) goto 6 <.GJTIE735_0_0_+0x202 : 1e1214c >			  ## RF_ble.c:882:23
 1e12146:    c0 71             	r0 = 28			  ## RF_ble.c:886:28
 1e12148:    08 5d             	h[r6 + 32] = r0			  ## RF_ble.c:886:28
 1e1214a:    f8 5c             	h[r6 + 30] = r0			  ## RF_ble.c:887:28
 1e1214c:    20 fb 80 0a       	r0 = 32768			  ## RF_ble.c:1129:20
 1e12150:    08 58             	h[r4 + 0] = r0			  ## RF_ble.c:1129:20
 1e12152:    70 58             	r0 = h[r4 + 14] (u)			  ## RF_ble.c:1130:19
 1e12154:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:1130:19
 1e12156:    78 58             	h[r4 + 14] = r0			  ## RF_ble.c:1130:19
 1e12158:    0c 70             	r12 = 0			  ## RF_ble.c:1130:19
 1e1215a:    1c f7 10 40       	h[r4 + 16] = r12			  ## RF_ble.c:1132:19
 1e1215e:    01 70             	r1 = 0			  ## RF_ble.c:1134:23
 1e12160:    80 08             	r0 = r8			  ## RF_ble.c:1134:23
 1e12162:    bf f3 f3 9c       	call -50714 <btctler_little_endian_read_16 : 1e05b4c >			  ## RF_ble.c:1134:23
 1e12166:    58 58             	h[r4 + 10] = r0			  ## RF_ble.c:1134:21
 1e12168:    21 70             	r1 = 2			  ## RF_ble.c:1135:23
 1e1216a:    80 08             	r0 = r8			  ## RF_ble.c:1135:23
 1e1216c:    bf f3 ee 9c       	call -50724 <btctler_little_endian_read_16 : 1e05b4c >			  ## RF_ble.c:1135:23
 1e12170:    68 58             	h[r4 + 12] = r0			  ## RF_ble.c:1135:21
 1e12172:    80 fc 04 00       	r0 = r8 + 4			  ## RF_ble.c:1137:54
 1e12176:    01 70             	r1 = 0			  ## RF_ble.c:1137:24
 1e12178:    bf f3 e8 9c       	call -50736 <btctler_little_endian_read_16 : 1e05b4c >			  ## RF_ble.c:1137:24
 1e1217c:    28 5c             	h[r6 + 4] = r0			  ## RF_ble.c:1137:22
 1e1217e:    00 f9 06 80       	r0 = b[r8 + 6] (u)			  ## RF_ble.c:1138:24
 1e12182:    38 5c             	h[r6 + 6] = r0			  ## RF_ble.c:1138:22
 1e12184:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1141:21
 1e12186:    10 b1             	r0 |= 4			  ## RF_ble.c:1141:21
 1e12188:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1141:21
 1e1218a:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1143:5
 1e1218c:    f0 b4             	r0 &= 4294966783			  ## RF_ble.c:1143:5
 1e1218e:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1143:5
 1e12190:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1144:5
 1e12192:    00 fd 0c 0a       	r0 = r0 | 3072			  ## RF_ble.c:1144:5
 1e12196:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1144:5
 1e12198:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:1145:5
 1e1219a:    10 b6             	r0 |= 4096			  ## RF_ble.c:1145:5
 1e1219c:    48 58             	h[r4 + 8] = r0			  ## RF_ble.c:1145:5
 1e1219e:    10 5d             	r0 = h[r6 + 34] (u)			  ## RF_ble.c:1146:5
 1e121a0:    30 fd 30 09       	r0 = r0 & 4294967247			  ## RF_ble.c:1146:5
 1e121a4:    10 b2             	r0 |= 16			  ## RF_ble.c:1146:5
 1e121a6:    18 5d             	h[r6 + 34] = r0			  ## RF_ble.c:1146:5
 1e121a8:    40 fc 64 00       	r0 = r4 + 100			  ## RF_ble.c:1146:5
 1e121ac:    01 60             	r1 = b[r0 + 0] (u)			  ## RF_ble.c:1147:5
 1e121ae:    11 b0             	r1 |= 1			  ## RF_ble.c:1147:5
 1e121b0:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:1147:5
 1e121b2:    11 60             	r1 = b[r0 + 1] (u)			  ## RF_ble.c:1148:5
 1e121b4:    11 b0             	r1 |= 1			  ## RF_ble.c:1148:5
 1e121b6:    19 60             	b[r0 + 1] = r1			  ## RF_ble.c:1148:5
 1e121b8:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:1104:21
 1e121ba:    07 4a             	r7 = [r5 + 0]			  ## RF_ble.c:1104:21
 1e121bc:    05 30             	if (r0 != 0) goto 10 <.GJTIE735_0_0_+0x27E : 1e121c8 >
 1e121be:    00 5e             	r0 = h[r7 + 0] (u)			  ## RF_ble.c:1107:9
 1e121c0:    20 fd 80 0a       	r0 = r0 & 32768			  ## RF_ble.c:1107:9
 1e121c4:    10 b1             	r0 |= 4			  ## RF_ble.c:1107:9
 1e121c6:    08 5e             	h[r7 + 0] = r0			  ## RF_ble.c:1107:9
 1e121c8:    97 f3 e8 a5       	call 3099600 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e121cc:    08 00             	csync			  ## RF_ble.c:304:5
 1e121ce:    1c f6 20 a0       	[r10 + 32] = r12			  ## RF_ble.c:306:21
 1e121d2:    08 00             	csync			  ## RF_ble.c:307:5
 1e121d4:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e121d8:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e121da:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e121dc:    ce 71             	r14 = 28			  ## RF_ble.c:147:17
 1e121de:    e0 fe e0 00       	r0 = r0 / r14 (s)			  ## RF_ble.c:147:17
 1e121e2:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e121e4:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e121e8:    01 fb 05 14       	r1 = 5125 <_cpu0_sstack_begin+0x3D5 : 1405 >			  ## RF_ble.c:308:67
 1e121ec:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e121ee:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e121f2:    97 f3 d1 a5       	call 3099554 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e121f6:    1c f7 5e 71       	h[r7 + 350] = r12			  ## RF_ble.c:524:18
 1e121fa:    10 70             	r0 = 1			  ## RF_ble.c:524:18
 1e121fc:    10 f9 5d 71       	b[r7 + 349] = r0			  ## RF_ble.c:525:24
 1e12200:    1c f9 0d b0       	b[r11 + 13] = r12			  ## RF_ble.c:1161:24
 1e12204:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:1169:14
 1e12208:    30 e0 bb 10       	if (r0 != 3) goto 374 <.GJTIE735_0_0_+0x438 : 1e12382 >			  ## RF_ble.c:1169:9
 1e1220c:    97 f3 c6 a5       	call 3099532 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e12210:    08 00             	csync			  ## RF_ble.c:304:5
 1e12212:    00 70             	r0 = 0			  ## RF_ble.c:304:5
 1e12214:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:306:21
 1e12218:    08 00             	csync			  ## RF_ble.c:307:5
 1e1221a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1221e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e12220:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e12222:    e0 fe e0 00       	r0 = r0 / r14 (s)			  ## RF_ble.c:147:17
 1e12226:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e12228:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e1222c:    01 fb 05 10       	r1 = 4101 <driver_data_end+0x1 : 1005 >			  ## RF_ble.c:308:67
 1e12230:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e12232:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e12236:    97 f3 af a5       	call 3099486 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1223a:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## RF_ble.c:1174:31
 1e1223e:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1174:53
 1e12240:    41 90             	r1 = r0 + 4			  ## RF_ble.c:1174:61
 1e12242:    50 08             	r0 = r5			  ## RF_ble.c:1174:9
 1e12244:    bf f3 3a f9       	call -3468 <__set_anchor_cnt : 1e114bc >			  ## RF_ble.c:1174:9
 1e12248:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1185:47
 1e1224c:    61 70             	r1 = 6			  ## RF_ble.c:1185:9
 1e1224e:    02 70             	r2 = 0			  ## RF_ble.c:1185:9
 1e12250:    50 08             	r0 = r5			  ## RF_ble.c:1185:9
 1e12252:    b3 15             	call -1178 <__set_hw_state : 1e11dba >			  ## RF_ble.c:1185:9
 1e12254:    c2 18             	goto 388 <.GJTIE735_0_0_+0x490 : 1e123da >			  ## RF_ble.c:1185:9
 1e12256:    00 02             	r0 = [sp]			  ## RF_ble.c:4427:38
 1e12258:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4427:38
 1e1225a:    09 02             	[sp] = r1			  ## RF_ble.c:4427:38
 1e1225c:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:4427:38
 1e1225e:    40 08             	r0 = r4			  ## RF_ble.c:4427:9
 1e12260:    51 15             	call -1374 <__set_channel_map : 1e11d04 >			  ## RF_ble.c:4427:9
 1e12262:    73 1e             	goto -794 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4427:9
 1e12264:    01 02             	r1 = [sp]			  ## RF_ble.c:4446:38
 1e12266:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4446:38
 1e12268:    0a 02             	[sp] = r2			  ## RF_ble.c:4446:38
 1e1226a:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4446:38
 1e1226c:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:1341:27
 1e1226e:    61 ff ff 19 6b fe 	if ((r1 & 255) != 0) goto -810 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:1341:27
 1e12274:    01 70             	r1 = 0
 1e12276:    11 f6 58 b0       	[r11 + 88] = r1			  ## RF_ble.c:1344:34
 1e1227a:    39 60             	b[r0 + 3] = r1			  ## RF_ble.c:1345:34
 1e1227c:    66 1e             	goto -820 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:1345:34
 1e1227e:    00 02             	r0 = [sp]			  ## RF_ble.c:4450:35
 1e12280:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4450:35
 1e12282:    09 02             	[sp] = r1			  ## RF_ble.c:4450:35
 1e12284:    01 02             	r1 = [sp]			  ## RF_ble.c:4450:62
 1e12286:    02 60             	r2 = b[r0 + 0] (u)			  ## RF_ble.c:4450:35
 1e12288:    40 92             	r0 = r1 + 4			  ## RF_ble.c:4450:62
 1e1228a:    08 02             	[sp] = r0			  ## RF_ble.c:4450:62
 1e1228c:    05 42             	r5 = [r1 + 0]			  ## RF_ble.c:4450:62
 1e1228e:    30 58             	r0 = h[r4 + 6] (u)			  ## RF_ble.c:772:23
 1e12290:    f0 b1             	r0 &= 4294967287			  ## RF_ble.c:772:23
 1e12292:    38 58             	h[r4 + 6] = r0			  ## RF_ble.c:772:23
 1e12294:    10 70             	r0 = 1			  ## RF_ble.c:773:27
 1e12296:    01 34             	if (r2 != 0) goto 2 <.GJTIE735_0_0_+0x350 : 1e1229a >			  ## RF_ble.c:773:27
 1e12298:    00 70             	r0 = 0			  ## RF_ble.c:773:27
 1e1229a:    10 f9 18 b0       	b[r11 + 24] = r0			  ## RF_ble.c:773:25
 1e1229e:    d0 fc 59 00       	r0 = r13 + 89			  ## RF_ble.c:775:5
 1e122a2:    62 70             	r2 = 6			  ## RF_ble.c:775:5
 1e122a4:    51 08             	r1 = r5			  ## RF_ble.c:775:5
 1e122a6:    97 f3 1d a6       	call 3099706 <memcpy : 106ee4 >			  ## RF_ble.c:775:5
 1e122aa:    90 58             	r0 = h[r4 + 18] (u)			  ## RF_ble.c:782:19
 1e122ac:    06 f6 00 90       	r6 = [r9 + 0]			  ## RF_ble.c:782:51
 1e122b0:    60 09             	r0 += r6			  ## RF_ble.c:782:42
 1e122b2:    62 70             	r2 = 6			  ## RF_ble.c:784:5
 1e122b4:    51 08             	r1 = r5			  ## RF_ble.c:784:5
 1e122b6:    97 f3 15 a6       	call 3099690 <memcpy : 106ee4 >			  ## RF_ble.c:784:5
 1e122ba:    a0 58             	r0 = h[r4 + 20] (u)			  ## RF_ble.c:786:19
 1e122bc:    60 09             	r0 += r6			  ## RF_ble.c:786:42
 1e122be:    62 70             	r2 = 6			  ## RF_ble.c:788:5
 1e122c0:    51 08             	r1 = r5			  ## RF_ble.c:788:5
 1e122c2:    97 f3 0f a6       	call 3099678 <memcpy : 106ee4 >			  ## RF_ble.c:788:5
 1e122c6:    41 1e             	goto -894 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:788:5
 1e122c8:    00 02             	r0 = [sp]			  ## RF_ble.c:4468:30
 1e122ca:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4468:30
 1e122cc:    09 02             	[sp] = r1			  ## RF_ble.c:4468:30
 1e122ce:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4468:30
 1e122d0:    18 54             	h[r2 + 2] = r0			  ## RF_ble.c:1602:19
 1e122d2:    3b 1e             	goto -906 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:1602:19
 1e122d4:    00 02             	r0 = [sp]			  ## RF_ble.c:4471:29
 1e122d6:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4471:29
 1e122d8:    09 02             	[sp] = r1			  ## RF_ble.c:4471:29
 1e122da:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4471:29
 1e122dc:    c8 64             	b[r2 + 12] = r0			  ## RF_ble.c:4471:27
 1e122de:    35 1e             	goto -918 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4471:27
 1e122e0:    00 02             	r0 = [sp]			  ## RF_ble.c:4475:31
 1e122e2:    41 90             	r1 = r0 + 4			  ## RF_ble.c:4475:31
 1e122e4:    09 02             	[sp] = r1			  ## RF_ble.c:4475:31
 1e122e6:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:4475:31
 1e122e8:    d8 64             	b[r2 + 13] = r0			  ## RF_ble.c:4475:29
 1e122ea:    2f 1e             	goto -930 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:4475:29
 1e122ec:    01 02             	r1 = [sp]			  ## RF_ble.c:4485:39
 1e122ee:    42 92             	r2 = r1 + 4			  ## RF_ble.c:4485:39
 1e122f0:    0a 02             	[sp] = r2			  ## RF_ble.c:4485:39
 1e122f2:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:4485:39
 1e122f4:    85 f9 01 10       	r5 = b[r1 ++= 1] (u)			  ## RF_ble.c:3360:18
 1e122f8:    f0 86             	r0 += 111			  ## RF_ble.c:3362:5
 1e122fa:    52 08             	r2 = r5			  ## RF_ble.c:3362:5
 1e122fc:    97 f3 f2 a5       	call 3099620 <memcpy : 106ee4 >			  ## RF_ble.c:3362:5
 1e12300:    15 f9 0e 42       	b[r4 + 526] = r5			  ## RF_ble.c:3364:17
 1e12304:    20 6e             	r0 = b[r7 + 2] (u)			  ## RF_ble.c:3366:20
 1e12306:    10 b0             	r0 |= 1			  ## RF_ble.c:3366:20
 1e12308:    28 6e             	b[r7 + 2] = r0			  ## RF_ble.c:3366:20
 1e1230a:    1f 1e             	goto -962 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:3366:20
 1e1230c:    01 f7 18 80       	r1 = h[r8 + 24] (u)			  ## RF_ble.c:1274:59
 1e12310:    10 09             	r0 += r1			  ## RF_ble.c:1274:57
 1e12312:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:722:25
 1e12314:    01 d4             	r1 = r0 >> 16			  ## RF_ble.c:724:36
 1e12316:    29 59             	h[r4 + 36] = r1			  ## RF_ble.c:724:25
 1e12318:    21 73             	r1 = 50			  ## RF_ble.c:725:25
 1e1231a:    11 f7 02 d0       	h[r13 + 2] = r1			  ## RF_ble.c:725:25
 1e1231e:    10 f6 3c d0       	[r13 + 60] = r0			  ## RF_ble.c:730:16
 1e12322:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:1277:13
 1e12326:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1277:21
 1e1232a:    04 70             	r4 = 0			  ## RF_ble.c:1277:21
 1e1232c:    03 70             	r3 = 0			  ## RF_ble.c:1277:13
 1e1232e:    10 e0 02 80       	if (r0 > 1) goto 4 <.GJTIE735_0_0_+0x3EC : 1e12336 >			  ## RF_ble.c:1277:13
 1e12332:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1276:27
 1e12336:    12 70             	r2 = 1
 1e12338:    01 36             	if (r3 != 0) goto 2 <.GJTIE735_0_0_+0x3F2 : 1e1233c >
 1e1233a:    02 70             	r2 = 0			  ## RF_ble.c:1280:44
 1e1233c:    71 70             	r1 = 7			  ## RF_ble.c:1280:9
 1e1233e:    50 08             	r0 = r5			  ## RF_ble.c:1280:9
 1e12340:    3c 15             	call -1416 <__set_hw_state : 1e11dba >			  ## RF_ble.c:1280:9
 1e12342:    01 f7 16 80       	r1 = h[r8 + 22] (u)			  ## RF_ble.c:1281:33
 1e12346:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:740:19
 1e1234a:    c0 fe 00 21       	r2 = r1 / r0 (u)			  ## RF_ble.c:740:19
 1e1234e:    4a 5c             	h[r6 + 8] = r2			  ## RF_ble.c:744:23
 1e12350:    d0 fe 00 01       	r0 = r1 % r0 (u)			  ## RF_ble.c:741:17
 1e12354:    00 fd 50 0a       	r0 = r0 | 20480			  ## RF_ble.c:747:25
 1e12358:    58 5c             	h[r6 + 10] = r0			  ## RF_ble.c:747:23
 1e1235a:    f0 fd 08 0a       	r0 = r10 << 1			  ## RF_ble.c:1266:59
 1e1235e:    f0 8f             	r0 += -1			  ## RF_ble.c:1266:63
 1e12360:    11 f6 38 d0       	[r13 + 56] = r1			  ## RF_ble.c:750:15
 1e12364:    0a e0 01 00       	if (r10 == 0) goto 2 <.GJTIE735_0_0_+0x420 : 1e1236a >			  ## RF_ble.c:750:15
 1e12368:    04 08             	r4 = r0			  ## RF_ble.c:1266:21
 1e1236a:    50 08             	r0 = r5			  ## RF_ble.c:1285:5
 1e1236c:    41 08             	r1 = r4			  ## RF_ble.c:1285:5
 1e1236e:    4f 15             	call -1378 <__set_winoffset : 1e11e0e >			  ## RF_ble.c:1285:5
 1e12370:    00 f7 0a 80       	r0 = h[r8 + 10] (u)			  ## RF_ble.c:1286:24
 1e12374:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## RF_ble.c:1286:40
 1e12378:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1286:40
 1e1237a:    12 70             	r2 = 1			  ## RF_ble.c:1286:5
 1e1237c:    50 08             	r0 = r5			  ## RF_ble.c:1286:5
 1e1237e:    6f 15             	call -1314 <__set_interval : 1e11e5e >			  ## RF_ble.c:1286:5
 1e12380:    e4 1d             	goto -1080 <.GJTIE735_0_0_ : 1e11f4a >			  ## RF_ble.c:1286:5
 1e12382:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## RF_ble.c:1195:42
 1e12386:    01 70             	r1 = 0			  ## RF_ble.c:1195:29
 1e12388:    03 20             	if (r0 == 0) goto 6 <.GJTIE735_0_0_+0x446 : 1e12390 >			  ## RF_ble.c:1195:29
 1e1238a:    40 c0             	r0 = r0 << 1			  ## RF_ble.c:1195:77
 1e1238c:    01 fc ff ff       	r1 = r0 + -1			  ## RF_ble.c:1195:81
 1e12390:    50 08             	r0 = r5			  ## RF_ble.c:1195:9
 1e12392:    3d 15             	call -1414 <__set_winoffset : 1e11e0e >			  ## RF_ble.c:1195:9
 1e12394:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:1199:13
 1e12398:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:1199:21
 1e1239c:    03 70             	r3 = 0			  ## RF_ble.c:1199:13
 1e1239e:    10 e0 02 80       	if (r0 > 1) goto 4 <.GJTIE735_0_0_+0x45C : 1e123a6 >			  ## RF_ble.c:1199:13
 1e123a2:    03 f7 0c 80       	r3 = h[r8 + 12] (u)			  ## RF_ble.c:1198:27
 1e123a6:    12 70             	r2 = 1
 1e123a8:    01 36             	if (r3 != 0) goto 2 <.GJTIE735_0_0_+0x462 : 1e123ac >
 1e123aa:    02 70             	r2 = 0			  ## RF_ble.c:1202:44
 1e123ac:    71 70             	r1 = 7			  ## RF_ble.c:1202:9
 1e123ae:    50 08             	r0 = r5			  ## RF_ble.c:1202:9
 1e123b0:    04 15             	call -1528 <__set_hw_state : 1e11dba >			  ## RF_ble.c:1202:9
 1e123b2:    00 f7 16 80       	r0 = h[r8 + 22] (u)			  ## RF_ble.c:1204:38
 1e123b6:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:740:19
 1e123ba:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## RF_ble.c:740:19
 1e123be:    4a 5c             	h[r6 + 8] = r2			  ## RF_ble.c:744:23
 1e123c0:    d0 fe 10 10       	r1 = r0 % r1 (u)			  ## RF_ble.c:741:17
 1e123c4:    01 fd 50 1a       	r1 = r1 | 20480			  ## RF_ble.c:747:25
 1e123c8:    59 5c             	h[r6 + 10] = r1			  ## RF_ble.c:747:23
 1e123ca:    10 f6 38 d0       	[r13 + 56] = r0			  ## RF_ble.c:750:15
 1e123ce:    00 f7 16 80       	r0 = h[r8 + 22] (u)			  ## RF_ble5.c:657:21
 1e123d2:    68 5a             	h[r5 + 12] = r0			  ## RF_ble5.c:657:19
 1e123d4:    60 70             	r0 = 6			  ## RF_ble5.c:657:19
 1e123d6:    10 f7 0a b0       	h[r11 + 10] = r0			  ## RF_ble5.c:657:19
 1e123da:    97 f3 df a4       	call 3099070 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e123de:    08 00             	csync			  ## RF_ble.c:304:5
 1e123e0:    06 70             	r6 = 0			  ## RF_ble.c:304:5
 1e123e2:    16 f6 20 a0       	[r10 + 32] = r6			  ## RF_ble.c:306:21
 1e123e6:    08 00             	csync			  ## RF_ble.c:307:5
 1e123e8:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e123ec:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e123ee:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e123f0:    cc 71             	r12 = 28			  ## RF_ble.c:147:17
 1e123f2:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:147:17
 1e123f6:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e123f8:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e123fc:    01 fb 05 20       	r1 = 8197 <btif_cfg+0x51 : 2005 >			  ## RF_ble.c:308:67
 1e12400:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e12402:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e12406:    97 f3 c7 a4       	call 3099022 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1240a:    07 4a             	r7 = [r5 + 0]			  ## RF_ble.c:493:37
 1e1240c:    97 f3 c6 a4       	call 3099020 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e12410:    08 00             	csync			  ## RF_ble.c:304:5
 1e12412:    16 f6 20 a0       	[r10 + 32] = r6			  ## RF_ble.c:306:21
 1e12416:    08 00             	csync			  ## RF_ble.c:307:5
 1e12418:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1241c:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1241e:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e12420:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:147:17
 1e12424:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e12426:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e1242a:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1242c:    01 fb 05 0c       	r1 = 3077 <BTCTLER_CL_CODE_TOTAL+0x237 : c05 >			  ## RF_ble.c:308:67
 1e12430:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e12432:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e12436:    97 f3 af a4       	call 3098974 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1243a:    16 f7 58 70       	h[r7 + 88] = r6			  ## RF_ble.c:497:22
 1e1243e:    00 f9 07 80       	r0 = b[r8 + 7] (u)			  ## RF_ble.c:1214:28
 1e12442:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## RF_ble.c:1214:48
 1e12446:    40 0e             	r0 = r0 * r1			  ## RF_ble.c:1214:48
 1e12448:    00 fc e2 04       	r0 = r0 + 1250			  ## RF_ble.c:1214:55
 1e1244c:    18 59             	h[r4 + 34] = r0			  ## RF_ble.c:722:25
 1e1244e:    02 d4             	r2 = r0 >> 16			  ## RF_ble.c:724:36
 1e12450:    2a 59             	h[r4 + 36] = r2			  ## RF_ble.c:724:25
 1e12452:    22 73             	r2 = 50			  ## RF_ble.c:725:25
 1e12454:    12 f7 02 d0       	h[r13 + 2] = r2			  ## RF_ble.c:725:25
 1e12458:    10 f6 3c d0       	[r13 + 60] = r0			  ## RF_ble.c:730:16
 1e1245c:    00 f7 0a 80       	r0 = h[r8 + 10] (u)			  ## RF_ble.c:730:16
 1e12460:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:1222:49
 1e12462:    12 70             	r2 = 1			  ## RF_ble.c:1222:9
 1e12464:    50 08             	r0 = r5			  ## RF_ble.c:1222:9
 1e12466:    fb 14             	call -1546 <__set_interval : 1e11e5e >			  ## RF_ble.c:1222:9
 1e12468:    81 fc 10 00       	r1 = r8 + 16			  ## RF_ble.c:1226:28
 1e1246c:    40 08             	r0 = r4			  ## RF_ble.c:1226:5
 1e1246e:    4a 14             	call -1900 <__set_channel_map : 1e11d04 >			  ## RF_ble.c:1226:5
 1e12470:    07 f9 15 80       	r7 = b[r8 + 21] (u)			  ## RF_ble.c:1228:47
 1e12474:    97 f3 92 a4       	call 3098916 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e12478:    08 00             	csync			  ## RF_ble.c:304:5
 1e1247a:    20 fd 1f 79       	r0 = r7 & 31			  ## RF_ble.c:1228:35
 1e1247e:    c5 fd 40 00       	r0 <= insert(r0, p:8, l:5)			  ## RF_ble.c:601:43
 1e12482:    90 b7             	r0 |= 32768			  ## RF_ble.c:601:43
 1e12484:    10 f6 20 a0       	[r10 + 32] = r0			  ## RF_ble.c:306:21
 1e12488:    08 00             	csync			  ## RF_ble.c:307:5
 1e1248a:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1248e:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e12490:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e12492:    e0 fe c0 00       	r0 = r0 / r12 (s)			  ## RF_ble.c:147:17
 1e12496:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e12498:    01 fb f0 07       	r1 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:308:50
 1e1249c:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1249e:    01 fb 05 18       	r1 = 6149 <UPDATE_CODE_TOTAL_SIZE+0x227 : 1805 >			  ## RF_ble.c:308:67
 1e124a2:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e124a4:    10 f6 1c a0       	[r10 + 28] = r0			  ## RF_ble.c:308:21
 1e124a8:    97 f3 76 a4       	call 3098860 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e124ac:    00 f6 70 d0       	r0 = [r13 + 112]			  ## RF_ble.c:1077:17
 1e124b0:    bf f3 d0 75       	call -70752 <hw_dma_free : 1e01054 >			  ## RF_ble.c:1077:5
 1e124b4:    00 f6 74 d0       	r0 = [r13 + 116]			  ## RF_ble.c:1078:17
 1e124b8:    bf f3 cc 75       	call -70760 <hw_dma_free : 1e01054 >			  ## RF_ble.c:1078:5
 1e124bc:    16 f6 70 d0       	[r13 + 112] = r6			  ## RF_ble.c:233:15
 1e124c0:    16 f6 74 d0       	[r13 + 116] = r6			  ## RF_ble.c:234:15
 1e124c4:    16 f9 00 b0       	b[r11 + 0] = r6			  ## RF_ble.c:1081:18
 1e124c8:    70 58             	r0 = h[r4 + 14] (u)			  ## RF_ble.c:1083:19
 1e124ca:    be 58             	h[r4 + 22] = r6			  ## RF_ble.c:1083:19
 1e124cc:    80 c0             	r0 = r0 << 2			  ## RF_ble.c:1083:9
 1e124ce:    20 fd 04 09       	r0 = r0 & 4			  ## RF_ble.c:1083:9
 1e124d2:    01 fd 01 09       	r1 = r0 | 1			  ## RF_ble.c:1083:9
 1e124d6:    d9 58             	h[r4 + 26] = r1			  ## RF_ble.c:1083:9
 1e124d8:    ce 58             	h[r4 + 24] = r6			  ## RF_ble.c:1083:9
 1e124da:    10 fd 05 09       	r0 = r0 ^ 5			  ## RF_ble.c:1083:9
 1e124de:    e8 58             	h[r4 + 28] = r0			  ## RF_ble.c:1083:9
 1e124e0:    34 1d             	goto -1432 <.GJTIE735_0_0_ : 1e11f4a >


ble_hw_alloc:
 1e124e2:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:3152:0
 1e124e4:    c0 ff a4 2c 00 00 	r0 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:3152:0
 1e124ea:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:3152:0
 1e124ec:    01 50             	r1 = h[r0 + 0] (u)			  ## RF_ble.c:3157:13
 1e124ee:    07 32             	if (r1 != 0) goto 14 <ble_hw_alloc+0x1C : 1e124fe >			  ## RF_ble.c:3157:13
 1e124f0:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:3158:35
 1e124f2:    01 70             	r1 = 0			  ## RF_ble.c:3159:13
 1e124f4:    c2 71             	r2 = 28			  ## RF_ble.c:3159:13
 1e124f6:    40 08             	r0 = r4			  ## RF_ble.c:3159:13
 1e124f8:    97 f3 fa a4       	call 3099124 <memset : 106ef0 >			  ## RF_ble.c:3159:13
 1e124fc:    03 38             	if (r4 != 0) goto 6 <ble_hw_alloc+0x22 : 1e12504 >			  ## RF_ble.c:3159:13
 1e124fe:    8f f3 ff 86       	call 2035198 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e12502:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e12504:    40 08             	r0 = r4			  ## RF_ble.c:3165:5
 1e12506:    bf f3 ae f7       	call -4260 <clear_all_anchor_cnt : 1e11466 >			  ## RF_ble.c:3165:5
 1e1250a:    40 08             	r0 = r4			  ## RF_ble.c:3167:5
 1e1250c:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:3167:5


hw_entity_alloc:
 1e1250e:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:3105:0
 1e12510:    c0 ff a4 2c 00 00 	r0 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:3105:0
 1e12516:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:3105:0
 1e12518:    54 40             	r4 = [r0 + 20]			  ## RF_ble.c:3105:0
 1e1251a:    00 f9 64 42       	r0 = b[r4 + 612] (u)			  ## RF_ble.c:3110:42
 1e1251e:    0a 30             	if (r0 != 0) goto 20 <hw_entity_alloc+0x26 : 1e12534 >
 1e12520:    01 70             	r1 = 0			  ## RF_ble.c:3112:13
 1e12522:    02 fb 68 02       	r2 = 616 <BTCTLER_CL_RAM_TOTAL+0x84 : 268 >			  ## RF_ble.c:3112:13
 1e12526:    40 08             	r0 = r4			  ## RF_ble.c:3112:13
 1e12528:    97 f3 e2 a4       	call 3099076 <memset : 106ef0 >			  ## RF_ble.c:3112:13
 1e1252c:    10 70             	r0 = 1			  ## RF_ble.c:3113:22
 1e1252e:    10 f9 64 42       	b[r4 + 612] = r0			  ## RF_ble.c:3113:22
 1e12532:    03 38             	if (r4 != 0) goto 6 <hw_entity_alloc+0x2C : 1e1253a >			  ## RF_ble.c:3113:22
 1e12534:    8f f3 e4 86       	call 2035144 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e12538:    04 70             	r4 = 0			  ## cpu.h:148:5
 1e1253a:    40 08             	r0 = r4			  ## RF_ble.c:3122:5
 1e1253c:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:3122:5


le_hw_standby:
 1e1253e:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3223:0
 1e12540:    02 70             	r2 = 0			  ## RF_ble.c:3225:24
 1e12542:    12 f9 52 11       	b[r1 + 338] = r2			  ## RF_ble.c:3225:24
 1e12546:    ff f3 63 f7       	goto -4410 <ble_hw_disable : 1e11410 >			  ## RF_ble.c:3226:5


le_hw_open:
 1e1254a:    78 01             	[--sp] = {rets, r8-r4}			  ## RF_ble.c:4017:0
 1e1254c:    fc 0b             	sp += -8			  ## RF_ble.c:4017:0
 1e1254e:    c9 17             	call -110 <ble_hw_alloc : 1e124e2 >			  ## RF_ble.c:3176:10
 1e12550:    04 08             	r4 = r0			  ## RF_ble.c:3176:10
 1e12552:    dd 17             	call -70 <hw_entity_alloc : 1e1250e >			  ## RF_ble.c:3177:37
 1e12554:    08 48             	[r4 + 0] = r0			  ## RF_ble.c:3177:17
 1e12556:    c8 ff a4 2c 00 00 	r8 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:3177:17
 1e1255c:    03 f6 00 80       	r3 = [r8 + 0]			  ## RF_ble.c:147:19
 1e12560:    41 46             	r1 = [r3 + 16]			  ## RF_ble.c:147:35
 1e12562:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e12564:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e12566:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e1256a:    45 04             	r5 = r1.b0 (u)			  ## RF_ble.c:3147:5
 1e1256c:    bf f3 bf f9       	call -3202 <PHY_TO_BLE : 1e118ee >			  ## RF_ble.c:3147:45
 1e12570:    90 b7             	r0 |= 32768			  ## RF_ble.c:3147:35
 1e12572:    50 f8 00 35       	h[r3+r5<<1] = r0			  ## RF_ble.c:3147:33
 1e12576:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:1635:34
 1e12578:    02 70             	r2 = 0			  ## RF_ble.c:1639:20
 1e1257a:    0a 50             	h[r0 + 0] = r2			  ## RF_ble.c:1639:20
 1e1257c:    1a 50             	h[r0 + 2] = r2			  ## RF_ble.c:1640:20
 1e1257e:    c1 ff 88 d3 00 00 	r1 = 54152 <_nv_pre_end+0x1888 : d388 >			  ## RF_ble.c:1641:20
 1e12584:    29 50             	h[r0 + 4] = r1			  ## RF_ble.c:1641:20
 1e12586:    01 fc 44 00       	r1 = r0 + 68			  ## RF_ble.c:1641:20
 1e1258a:    2a 52             	h[r1 + 4] = r2			  ## RF_ble.c:1642:20
 1e1258c:    02 fb e7 51       	r2 = 20967 <nvbss_begin+0x327 : 51e7 >			  ## RF_ble.c:1643:20
 1e12590:    3a 52             	h[r1 + 6] = r2			  ## RF_ble.c:1643:20
 1e12592:    22 fc ef 6c       	r2 = r2 + 27887			  ## RF_ble.c:1652:25
 1e12596:    5a 50             	h[r0 + 10] = r2			  ## RF_ble.c:1652:25
 1e12598:    22 fc b3 cf       	r2 = r2 + -12365			  ## RF_ble.c:1652:25
 1e1259c:    6a 50             	h[r0 + 12] = r2			  ## RF_ble.c:1652:25
 1e1259e:    02 fb 55 55       	r2 = 21845 <report_overlay_end+0x34D : 5555 >			  ## RF_ble.c:1658:22
 1e125a2:    0a 52             	h[r1 + 0] = r2			  ## RF_ble.c:1658:22
 1e125a4:    52 75             	r2 = 85			  ## RF_ble.c:1659:22
 1e125a6:    1a 52             	h[r1 + 2] = r2			  ## RF_ble.c:1659:22
 1e125a8:    82 72             	r2 = 40			  ## RF_ble.c:1661:21
 1e125aa:    4a 50             	h[r0 + 8] = r2			  ## RF_ble.c:1661:21
 1e125ac:    12 70             	r2 = 1			  ## RF_ble.c:1661:21
 1e125ae:    9a 50             	h[r0 + 18] = r2			  ## RF_ble.c:1662:20
 1e125b0:    aa 50             	h[r0 + 20] = r2			  ## RF_ble.c:1663:20
 1e125b2:    42 50             	r2 = h[r0 + 8] (u)			  ## RF_ble.c:1664:5
 1e125b4:    92 b4             	r2 |= 512			  ## RF_ble.c:1664:5
 1e125b6:    4a 50             	h[r0 + 8] = r2			  ## RF_ble.c:1664:5
 1e125b8:    f2 52             	r2 = h[r1 + 30] (u)			  ## RF_ble.c:1665:5
 1e125ba:    92 b0             	r2 |= 2			  ## RF_ble.c:1665:5
 1e125bc:    fa 52             	h[r1 + 30] = r2			  ## RF_ble.c:1665:5
 1e125be:    f2 52             	r2 = h[r1 + 30] (u)			  ## RF_ble.c:1666:5
 1e125c0:    12 b1             	r2 |= 4			  ## RF_ble.c:1666:5
 1e125c2:    fa 52             	h[r1 + 30] = r2			  ## RF_ble.c:1666:5
 1e125c4:    02 fc 64 00       	r2 = r0 + 100			  ## RF_ble.c:1666:5
 1e125c8:    23 64             	r3 = b[r2 + 2] (u)			  ## RF_ble.c:1667:5
 1e125ca:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:1667:5
 1e125cc:    2b 64             	b[r2 + 2] = r3			  ## RF_ble.c:1667:5
 1e125ce:    33 64             	r3 = b[r2 + 3] (u)			  ## RF_ble.c:1668:5
 1e125d0:    73 b0             	r3 &= 4294967294			  ## RF_ble.c:1668:5
 1e125d2:    3b 64             	b[r2 + 3] = r3			  ## RF_ble.c:1668:5
 1e125d4:    a6 70             	r6 = 10			  ## RF_ble.c:1668:5
 1e125d6:    03 fc cc 01       	r3 = r0 + 460
 1e125da:    3e 66             	b[r3 + 3] = r6			  ## analog_ble.c:225:21
 1e125dc:    c2 ff b8 09 00 00 	r2 = 2488 <system_data_end : 9b8 >			  ## analog_ble.c:225:21
 1e125e2:    27 f9 03 20       	r7 = b[r2 + 3] (s)			  ## analog_ble.c:248:12
 1e125e6:    c5 05             	r5 = r7.b0 (u)			  ## analog_ble.c:248:12
 1e125e8:    95 e0 02 80       	if (r5 > 9) goto 4 <le_hw_open+0xA6 : 1e125f0 >			  ## analog_ble.c:248:12
 1e125ec:    3d 66             	b[r3 + 3] = r5			  ## analog_ble.c:250:25
 1e125ee:    76 08             	r6 = r7			  ## analog_ble.c:250:25
 1e125f0:    05 54             	r5 = h[r2 + 0] (u)			  ## analog_ble.c:254:38
 1e125f2:    2d d3             	r5 = r5 >> 12			  ## analog_ble.c:254:38
 1e125f4:    56 f2 01 b0       	ifs (r6 < r5) goto 2 <le_hw_open+0xB0 : 1e125fa >			  ## analog_ble.c:254:38
 1e125f8:    56 08             	r6 = r5			  ## analog_ble.c:254:19
 1e125fa:    3e 66             	b[r3 + 3] = r6			  ## analog_ble.c:254:17
 1e125fc:    16 f6 20 01       	[r0 + 288] = r6			  ## analog_ble.c:261:27
 1e12600:    53 54             	r3 = h[r2 + 10] (u)			  ## RF_ble.c:1681:5
 1e12602:    63 fb 00 39       	r3 = 0 - r3			  ## RF_ble.c:1684:26
 1e12606:    1b c5             	r3 = r3 << 20			  ## RF_ble.c:1684:52
 1e12608:    c5 64             	r5 = b[r2 + 12] (u)			  ## RF_ble.c:1679:12
 1e1260a:    02 fb c0 5d       	r2 = 24000 <report_overlay_end+0xBB8 : 5dc0 >			  ## RF_ble.c:1684:65
 1e1260e:    e0 fe 20 33       	r3 = r3 / r2 (s)			  ## RF_ble.c:1684:65
 1e12612:    06 70             	r6 = 0			  ## RF_ble.c:1684:65
 1e12614:    02 70             	r2 = 0			  ## RF_ble.c:1684:65
 1e12616:    01 2a             	if (r5 == 0) goto 2 <le_hw_open+0xD0 : 1e1261a >			  ## RF_ble.c:1684:65
 1e12618:    32 08             	r2 = r3			  ## RF_ble.c:1684:65
 1e1261a:    12 f6 24 01       	[r0 + 292] = r2			  ## RF_ble.c:1684:21
 1e1261e:    02 fb 01 01       	r2 = 257 <DRIVER_RAM_TOTAL+0xF : 101 >			  ## RF_ble.c:1687:24
 1e12622:    ea 52             	h[r1 + 28] = r2			  ## RF_ble.c:1687:24
 1e12624:    12 70             	r2 = 1			  ## RF_ble.c:1688:24
 1e12626:    da 52             	h[r1 + 26] = r2			  ## RF_ble.c:1688:24
 1e12628:    7e 50             	h[r0 + 14] = r6			  ## RF_ble.c:1690:19
 1e1262a:    8e 50             	h[r0 + 16] = r6			  ## RF_ble.c:1691:19
 1e1262c:    be 50             	h[r0 + 22] = r6			  ## RF_ble.c:1693:21
 1e1262e:    da 50             	h[r0 + 26] = r2			  ## RF_ble.c:1694:21
 1e12630:    ce 50             	h[r0 + 24] = r6			  ## RF_ble.c:1695:21
 1e12632:    ea 50             	h[r0 + 28] = r2			  ## RF_ble.c:1696:21
 1e12634:    f2 7f             	r2 = 255			  ## RF_ble.c:1696:21
 1e12636:    ba 51             	h[r0 + 54] = r2			  ## RF_ble.c:1698:22
 1e12638:    c3 ff 95 82 00 00 	r3 = 33429 <BTCTLER_CODE_TOTAL+0x181 : 8295 >			  ## RF_ble.c:1699:20
 1e1263e:    cb 52             	h[r1 + 24] = r3			  ## RF_ble.c:1699:20
 1e12640:    ee 51             	h[r0 + 60] = r6			  ## RF_ble.c:1700:24
 1e12642:    4e 52             	h[r1 + 8] = r6			  ## RF_ble.c:1702:24
 1e12644:    5e 52             	h[r1 + 10] = r6			  ## RF_ble.c:1703:24
 1e12646:    6e 52             	h[r1 + 12] = r6			  ## RF_ble.c:1704:24
 1e12648:    d2 f5 04 00       	b[sp+4] = r2			  ## RF_ble.c:1706:5
 1e1264c:    f1 07             	r1 = -1			  ## RF_ble.c:1706:5
 1e1264e:    09 02             	[sp] = r1			  ## RF_ble.c:1706:5
 1e12650:    01 a0             	r1 = sp + 0			  ## RF_ble.c:1706:5
 1e12652:    bf f3 57 fb       	call -2386 <__set_channel_map : 1e11d04 >			  ## RF_ble.c:1707:5
 1e12656:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:3181:13
 1e12658:    0d 20             	if (r0 == 0) goto 26 <le_hw_open+0x12A : 1e12674 >			  ## RF_ble.c:3181:13
 1e1265a:    80 72             	r0 = 40			  ## RF_ble.c:3182:29
 1e1265c:    bf f3 a6 9a       	call -51892 <btctler_nv_memory_malloc : 1e05bac >			  ## RF_ble.c:3182:29
 1e12660:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:3182:13
 1e12662:    10 f6 e4 61       	[r6 + 484] = r0			  ## RF_ble.c:3182:27
 1e12666:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:3183:9
 1e1266a:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:3183:23
 1e1266e:    11 80             	r1 += 1			  ## RF_ble.c:3183:23
 1e12670:    11 f9 20 00       	b[r0 + 32] = r1			  ## RF_ble.c:3183:23
 1e12674:    60 fc 78 01       	r0 = r6 + 376
 1e12678:    01 91             	r1 = r0 + 16			  ## RF_ble.c:4029:20
 1e1267a:    49 40             	[r0 + 16] = r1			  ## list.h:188:16
 1e1267c:    59 40             	[r0 + 20] = r1			  ## list.h:189:16
 1e1267e:    01 fc 20 00       	r1 = r0 + 32			  ## RF_ble.c:4030:20
 1e12682:    89 40             	[r0 + 32] = r1			  ## list.h:188:16
 1e12684:    99 40             	[r0 + 36] = r1			  ## list.h:189:16
 1e12686:    81 91             	r1 = r0 + 24			  ## RF_ble.c:4031:20
 1e12688:    69 40             	[r0 + 24] = r1			  ## list.h:188:16
 1e1268a:    79 40             	[r0 + 28] = r1			  ## list.h:189:16
 1e1268c:    01 70             	r1 = 0			  ## list.h:189:16
 1e1268e:    39 40             	[r0 + 12] = r1			  ## RF_ble.c:216:15
 1e12690:    29 40             	[r0 + 8] = r1			  ## RF_ble.c:216:15
 1e12692:    19 40             	[r0 + 4] = r1			  ## RF_ble.c:216:15
 1e12694:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:216:15
 1e12696:    40 08             	r0 = r4			  ## RF_ble.c:4036:5
 1e12698:    52 17             	call -348 <le_hw_standby : 1e1253e >			  ## RF_ble.c:4036:5
 1e1269a:    40 08             	r0 = r4			  ## RF_ble.c:4039:1
 1e1269c:    04 0a             	sp += 8			  ## RF_ble.c:4039:1
 1e1269e:    58 01             	{pc, r8-r4} = [sp++]			  ## RF_ble.c:4039:1


le_hw_handler_register:
 1e126a0:    11 f6 d8 01       	[r0 + 472] = r1			  ## RF_ble.c:4505:0
 1e126a4:    12 f6 dc 01       	[r0 + 476] = r2			  ## RF_ble.c:4507:26
 1e126a8:    20 00             	rts			  ## RF_ble.c:4508:1


__set_adv_channel_index:
 1e126aa:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:551:0
 1e126ac:    04 08             	r4 = r0			  ## RF_ble.c:551:0
 1e126ae:    02 70             	r2 = 0			  ## RF_ble.c:551:0
 1e126b0:    00 fb 00 25       	r0 = 9472 <adc_queue+0x20 : 2500 >			  ## RF_ble.c:551:0
 1e126b4:    55 72             	r5 = 37			  ## RF_ble.c:551:0
 1e126b6:    16 70             	r6 = 1			  ## RF_ble.c:551:0
 1e126b8:    03 70             	r3 = 0			  ## RF_ble.c:551:0
 1e126ba:    f8 fd 20 76       	r7 = r6 << r2			  ## RF_ble.c:558:27
 1e126be:    17 f0 05 00       	if ((r7 & r1) == 0) goto 10 <__set_adv_channel_index+0x22 : 1e126cc >			  ## RF_ble.c:558:27
 1e126c2:    57 08             	r7 = r5
 1e126c4:    60 ff ff 39 02 00 	if ((r3 & 255) == 0) goto 4 <__set_adv_channel_index+0x24 : 1e126ce >
 1e126ca:    0a 18             	goto 20 <__set_adv_channel_index+0x36 : 1e126e0 >
 1e126cc:    37 08             	r7 = r3
 1e126ce:    15 80             	r5 += 1			  ## RF_ble.c:557:19
 1e126d0:    12 80             	r2 += 1			  ## RF_ble.c:557:25
 1e126d2:    00 fc 00 01       	r0 = r0 + 256			  ## RF_ble.c:557:19
 1e126d6:    73 08             	r3 = r7			  ## RF_ble.c:557:19
 1e126d8:    32 e0 ef 3f       	if (r2 < 3) goto -34 <__set_adv_channel_index+0x10 : 1e126ba >			  ## RF_ble.c:557:19
 1e126dc:    00 70             	r0 = 0
 1e126de:    04 18             	goto 8 <__set_adv_channel_index+0x3E : 1e126e8 >
 1e126e0:    1a c2             	r2 = r3 << 8			  ## RF_ble.c:564:17
 1e126e2:    a0 b0             	r0 = r0 - r2			  ## RF_ble.c:564:17
 1e126e4:    20 fd ff 0a       	r0 = r0 & 65280			  ## RF_ble.c:564:17
 1e126e8:    4a c1             	r2 = r1 << 5			  ## RF_ble.c:587:38
 1e126ea:    22 fd 80 29       	r2 = r2 & 128			  ## RF_ble.c:569:14
 1e126ee:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:586:38
 1e126f0:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:586:38
 1e126f4:    51 b4             	r1 |= r2			  ## RF_ble.c:585:62
 1e126f6:    31 b3             	r1 ^= 64			  ## RF_ble.c:585:62
 1e126f8:    51 b6             	r1 |= r3			  ## RF_ble.c:586:56
 1e126fa:    41 04             	r1 = r1.b0 (u)			  ## RF_ble.c:586:56
 1e126fc:    50 b2             	r0 |= r1			  ## RF_ble.c:586:56
 1e126fe:    05 fd 40 0a       	r5 = r0 | 16384			  ## RF_ble.c:586:56
 1e12702:    97 f3 4b a3       	call 3098262 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e12706:    08 00             	csync			  ## RF_ble.c:304:5
 1e12708:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e1270e:    1d 40             	[r0 + 4] = r5			  ## RF_ble.c:306:21
 1e12710:    08 00             	csync			  ## RF_ble.c:307:5
 1e12712:    c1 ff a4 2c 00 00 	r1 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e12718:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:147:19
 1e1271a:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:147:35
 1e1271c:    61 b8             	r1 = r4 - r1			  ## RF_ble.c:147:17
 1e1271e:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e12720:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e12724:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:308:50
 1e12726:    02 fb f0 07       	r2 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:308:50
 1e1272a:    51 b5             	r1 &= r2			  ## RF_ble.c:308:50
 1e1272c:    02 fb 05 18       	r2 = 6149 <UPDATE_CODE_TOTAL_SIZE+0x227 : 1805 >			  ## RF_ble.c:308:67
 1e12730:    51 b4             	r1 |= r2			  ## RF_ble.c:308:67
 1e12732:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:308:21
 1e12734:    17 01             	{rets, r7-r4} = [sp++]			  ## RF_ble.c:310:5
 1e12736:    d7 f3 2f a3       	goto 3098206 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


hw_alloc_tx:
 1e1273a:    74 01             	[--sp] = {rets, r4}			  ## RF_ble.c:199:0
 1e1273c:    81 91             	r1 = r0 + 24			  ## RF_ble.c:203:53
 1e1273e:    10 70             	r0 = 1			  ## RF_ble.c:203:27
 1e12740:    bf f3 ce 99       	call -52324 <hw_dma_alloc : 1e05ae0 >			  ## RF_ble.c:203:27
 1e12744:    04 08             	r4 = r0			  ## RF_ble.c:203:27
 1e12746:    04 28             	if (r4 == 0) goto 8 <hw_alloc_tx+0x16 : 1e12750 >			  ## RF_ble.c:203:27
 1e12748:    01 70             	r1 = 0			  ## RF_ble.c:206:9
 1e1274a:    42 71             	r2 = 20			  ## RF_ble.c:206:9
 1e1274c:    97 f3 d0 a3       	call 3098528 <memset : 106ef0 >			  ## RF_ble.c:206:9
 1e12750:    40 08             	r0 = r4			  ## RF_ble.c:208:5
 1e12752:    54 01             	{pc, r4} = [sp++]			  ## RF_ble.c:208:5


__adv_pdu:
 1e12754:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:3234:0
 1e12756:    36 08             	r6 = r3			  ## RF_ble.c:3234:0
 1e12758:    14 08             	r4 = r1			  ## RF_ble.c:3234:0
 1e1275a:    62 e0 48 80       	if (r2 > 6) goto 144 <.GJTIE770_0_0_+0x82 : 1e127ee >			  ## RF_ble.c:3234:0
 1e1275e:    05 fc 68 01       	r5 = r0 + 360			  ## RF_ble.c:3234:0
 1e12762:    a2 00             	tbb [r2]			  ## RF_ble.c:3234:0


.GJTIS770_0_0_:
 1e12764:    04     < 4 : 0x4 >
 1e12765:    22     < 34 : 0x22 >
 1e12766:    04     < 4 : 0x4 >
 1e12767:    45     < 69 : 0x45 >
 1e12768:    45     < 69 : 0x45 >
 1e12769:    45     < 69 : 0x45 >
 1e1276a:    04     < 4 : 0x4 >
 1e1276b:    00     < 0 : 0x0 >
 1e1276c:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:3243:9
 1e1276e:    21 fd 0f 29       	r1 = r2 & 15			  ## RF_ble.c:3244:9
 1e12772:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3243:9
 1e12776:    50 b2             	r0 |= r1			  ## RF_ble.c:3244:9
 1e12778:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3244:9
 1e1277a:    61 9c             	r1 = r6 + 6			  ## RF_ble.c:3245:9
 1e1277c:    29 69             	b[r4 + 18] = r1			  ## RF_ble.c:3245:9
 1e1277e:    81 f9 01 50       	r1 = b[r5 ++= 1] (u)			  ## RF_ble.c:3247:9
 1e12782:    c2 ff 8f ff 00 00 	r2 = 65423 <_IRQ_MEM_ADDR+0x8F : ff8f >			  ## RF_ble.c:3247:9
 1e12788:    50 b5             	r0 &= r2			  ## RF_ble.c:3247:9
 1e1278a:    57 02             	r7 = [sp+20]			  ## RF_ble.c:3247:9
 1e1278c:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3247:9
 1e1278e:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3247:9
 1e12792:    50 b2             	r0 |= r1			  ## RF_ble.c:3247:9
 1e12794:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3247:9
 1e12796:    40 99             	r0 = r4 + 20			  ## RF_ble.c:3248:9
 1e12798:    62 70             	r2 = 6			  ## RF_ble.c:3248:9
 1e1279a:    51 08             	r1 = r5			  ## RF_ble.c:3248:9
 1e1279c:    97 f3 a2 a3       	call 3098436 <memcpy : 106ee4 >			  ## RF_ble.c:3248:9
 1e127a0:    a0 99             	r0 = r4 + 26			  ## RF_ble.c:3250:25
 1e127a2:    71 08             	r1 = r7			  ## RF_ble.c:3250:9
 1e127a4:    62 08             	r2 = r6			  ## RF_ble.c:3250:9
 1e127a6:    21 18             	goto 66 <.GJTIE770_0_0_+0x7E : 1e127ea >			  ## RF_ble.c:3250:9
 1e127a8:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:3257:9
 1e127aa:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3257:9
 1e127ae:    10 b0             	r0 |= 1			  ## RF_ble.c:3257:9
 1e127b0:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3258:9
 1e127b2:    c1 70             	r1 = 12			  ## RF_ble.c:3259:9
 1e127b4:    29 69             	b[r4 + 18] = r1			  ## RF_ble.c:3259:9
 1e127b6:    01 6a             	r1 = b[r5 + 0] (u)			  ## RF_ble.c:3261:9
 1e127b8:    30 fd 7e 09       	r0 = r0 & 4294967169			  ## RF_ble.c:3261:9
 1e127bc:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3261:9
 1e127be:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3261:9
 1e127c2:    e0 fd 00 61       	r6 = r1 | r0			  ## RF_ble.c:3261:9
 1e127c6:    8e 58             	h[r4 + 16] = r6			  ## RF_ble.c:3261:9
 1e127c8:    40 99             	r0 = r4 + 20			  ## RF_ble.c:3262:9
 1e127ca:    11 9a             	r1 = r5 + 1			  ## RF_ble.c:3262:9
 1e127cc:    62 70             	r2 = 6			  ## RF_ble.c:3262:9
 1e127ce:    97 f3 89 a3       	call 3098386 <memcpy : 106ee4 >			  ## RF_ble.c:3262:9
 1e127d2:    70 6a             	r0 = b[r5 + 7] (u)			  ## RF_ble.c:3264:9
 1e127d4:    c1 ff 41 ff 00 00 	r1 = 65345 <_IRQ_MEM_ADDR+0x41 : ff41 >			  ## RF_ble.c:3264:9
 1e127da:    51 bd             	r1 &= r6			  ## RF_ble.c:3264:9
 1e127dc:    c0 c1             	r0 = r0 << 7			  ## RF_ble.c:3264:9
 1e127de:    00 04             	r0 = r0.b0 (u)			  ## RF_ble.c:3264:9
 1e127e0:    50 b2             	r0 |= r1			  ## RF_ble.c:3264:9
 1e127e2:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:3264:9
 1e127e4:    a0 99             	r0 = r4 + 26			  ## RF_ble.c:3265:25
 1e127e6:    81 9a             	r1 = r5 + 8			  ## RF_ble.c:3265:9
 1e127e8:    62 70             	r2 = 6			  ## RF_ble.c:3265:9
 1e127ea:    97 f3 7b a3       	call 3098358 <memcpy : 106ee4 >
 1e127ee:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:3268:1


ble_power_get:
 1e127f0:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:670:0
 1e127f2:    04 08             	r4 = r0			  ## le_low_power.c:670:0
 1e127f4:    00 71             	r0 = 16			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:716:13
 1e127f6:    bf f3 33 bf       	call -33178 <malloc : 1e0a660 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:716:13
 1e127fa:    0f 20             	if (r0 == 0) goto 30 <ble_power_get+0x2A : 1e1281a >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:717:9
 1e127fc:    c1 ff 60 13 e1 01 	r1 = 31527776 <ble_power_ops : 1e11360 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:722:16
 1e12802:    39 40             	[r0 + 12] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:722:16
 1e12804:    2c 40             	[r0 + 8] = r4			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/power/power_hw.c:723:17
 1e12806:    c1 ff c0 4e 00 00 	r1 = 20160 <nvbss_begin : 4ec0 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:154:28
 1e1280c:    12 42             	r2 = [r1 + 4]			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:154:28
 1e1280e:    18 42             	[r1 + 4] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:137:16
 1e12810:    09 40             	[r0 + 0] = r1			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:138:16
 1e12812:    1a 40             	[r0 + 4] = r2			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:139:16
 1e12814:    08 44             	[r2 + 0] = r0			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/system/generic/list.h:140:16
 1e12816:    58 48             	[r4 + 20] = r0			  ## le_low_power.c:672:20
 1e12818:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:675:1
 1e1281a:    8f f3 71 85       	call 2034402 <p33_soft_reset : 3300 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/include_lib/driver/cpu/bd19/asm/cpu.h:148:5
 1e1281e:    c5 f4 00 49       	[r4 + 20] = 0			  ## le_low_power.c:672:20
 1e12822:    14 01             	{rets, r4} = [sp++]			  ## cpu.h:148:5
 1e12824:    cf f3 6c 85       	goto 2034392 <p33_soft_reset : 3300 >			  ## cpu.h:148:5


check_event_pending:
 1e12828:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:4636:0
 1e1282a:    01 70             	r1 = 0			  ## RF_ble.c:4636:0
 1e1282c:    c2 ff 28 80 1c 00 	r2 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >			  ## RF_ble.c:4636:0
 1e12832:    10 70             	r0 = 1			  ## RF_ble.c:4636:0
 1e12834:    04 44             	r4 = [r2 + 0]			  ## RF_ble.c:4639:13
 1e12836:    25 44             	r5 = [r2 + 8]			  ## RF_ble.c:4639:29
 1e12838:    f8 fd 10 30       	r3 = r0 << r1			  ## RF_ble.c:4639:44
 1e1283c:    54 b7             	r4 &= r3			  ## RF_ble.c:4639:42
 1e1283e:    54 f1 09 00       	if ((r4 & r5) != 0) goto 18 <check_event_pending+0x2C : 1e12854 >			  ## RF_ble.c:4639:42
 1e12842:    94 44             	r4 = [r2 + 36]			  ## RF_ble.c:4642:13
 1e12844:    a5 44             	r5 = [r2 + 40]			  ## RF_ble.c:4642:29
 1e12846:    53 b9             	r3 &= r4			  ## RF_ble.c:4642:42
 1e12848:    53 f1 04 00       	if ((r3 & r5) != 0) goto 8 <check_event_pending+0x2C : 1e12854 >			  ## RF_ble.c:4642:42
 1e1284c:    11 80             	r1 += 1			  ## RF_ble.c:4638:39
 1e1284e:    71 e0 f1 9f       	if (r1 <= 7) goto -30 <check_event_pending+0xC : 1e12834 >			  ## RF_ble.c:4638:39
 1e12852:    00 70             	r0 = 0
 1e12854:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:4647:1


le_hw_suspend:
 1e12856:    34 00             	[--sp] = rets			  ## RF_ble.c:3982:0
 1e12858:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3983:13
 1e1285a:    02 f9 53 11       	r2 = b[r1 + 339] (u)			  ## RF_ble.c:3983:13
 1e1285e:    92 b0             	r2 |= 2			  ## RF_ble.c:3983:9
 1e12860:    32 e0 05 00       	if (r2 == 3) goto 10 <le_hw_suspend+0x18 : 1e1286e >			  ## RF_ble.c:3983:9
 1e12864:    12 70             	r2 = 1			  ## RF_ble.c:3994:28
 1e12866:    12 f9 53 11       	b[r1 + 339] = r2			  ## RF_ble.c:3994:28
 1e1286a:    bf f3 d1 f5       	call -5214 <ble_hw_disable : 1e11410 >			  ## RF_ble.c:3995:5
 1e1286e:    30 00             	pc = [sp++]			  ## RF_ble.c:3996:1


ble_slot_schedule:
 1e12870:    7f 01             	[--sp] = {rets, r15-r4}			  ## RF_ble.c:4672:0
 1e12872:    97 f3 93 a2       	call 3097894 <local_irq_disable : 106d9c >			  ## RF_ble.c:4673:5
 1e12876:    08 00             	csync			  ## RF_ble.c:4673:5
 1e12878:    c8 ff a8 2c 00 00 	r8 = 11432 <sche_lock : 2ca8 >			  ## RF_ble.c:4673:5
 1e1287e:    00 f6 00 80       	r0 = [r8 + 0]			  ## RF_ble.c:4675:9
 1e12882:    03 20             	if (r0 == 0) goto 6 <ble_slot_schedule+0x1A : 1e1288a >			  ## RF_ble.c:4675:9
 1e12884:    1f 01             	{rets, r15-r4} = [sp++]			  ## RF_ble.c:4676:9
 1e12886:    d7 f3 87 a2       	goto 3097870 <local_irq_enable : 106d98 >			  ## RF_ble.c:4676:9
 1e1288a:    19 70             	r9 = 1
 1e1288c:    19 f6 00 80       	[r8 + 0] = r9			  ## RF_ble.c:4680:15
 1e12890:    97 f3 82 a2       	call 3097860 <local_irq_enable : 106d98 >			  ## RF_ble.c:4682:5
 1e12894:    ce ff a4 2c 00 00 	r14 = 11428 <bb_hdl : 2ca4 >
 1e1289a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## RF_ble.c:4695:9
 1e1289e:    01 f9 20 00       	r1 = b[r0 + 32] (u)			  ## RF_ble.c:4695:17
 1e128a2:    21 e0 ac 30       	if (r1 < 2) goto 344 <.GJTIE774_0_0_+0x10A : 1e129fe >			  ## RF_ble.c:4695:17
 1e128a6:    f6 07             	r6 = -1
 1e128a8:    05 70             	r5 = 0
 1e128aa:    ca ff 1c 80 1c 00 	r10 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >
 1e128b0:    cb 71             	r11 = 28
 1e128b2:    07 70             	r7 = 0			  ## RF_ble.c:4703:13
 1e128b4:    0f 70             	r15 = 0			  ## RF_ble.c:4703:13
 1e128b6:    fc 07             	r12 = -1			  ## RF_ble.c:4703:13
 1e128b8:    04 18             	goto 8 <ble_slot_schedule+0x52 : 1e128c2 >			  ## RF_ble.c:4703:13
 1e128ba:    00 f6 00 e0       	r0 = [r14 + 0]
 1e128be:    c5 81             	r5 += 28			  ## RF_ble.c:4702:5
 1e128c0:    27 80             	r7 += 2			  ## RF_ble.c:4702:5
 1e128c2:    01 f8 00 07       	r1 = h[r0+r7] (u)			  ## RF_ble.c:4703:13
 1e128c6:    5b 22             	if (r1 == 0) goto 182 <.GJTIE774_0_0_+0x8A : 1e1297e >			  ## RF_ble.c:4703:13
 1e128c8:    0d f6 10 00       	r13 = [r0 + 16]			  ## RF_ble.c:4704:35
 1e128cc:    80 fb 50 4d       	r4 = r13 + r5			  ## RF_ble.c:4709:29
 1e128d0:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:4709:29
 1e128d2:    58 20             	if (r0 == 0) goto 176 <.GJTIE774_0_0_+0x90 : 1e12984 >			  ## RF_ble.c:4709:29
 1e128d4:    00 f9 52 01       	r0 = b[r0 + 338] (u)			  ## RF_ble.c:4712:23
 1e128d8:    f8 fd 00 19       	r1 = r9 << r0			  ## RF_ble.c:4712:23
 1e128dc:    e4 fd 00 2f       	r2 = r15.b0 (u)			  ## RF_ble.c:4712:20
 1e128e0:    f0 8f             	r0 += -1			  ## RF_ble.c:4713:13
 1e128e2:    e0 fd 20 f1       	r15 = r1 | r2			  ## RF_ble.c:4712:20
 1e128e6:    60 e0 4a 80       	if (r0 > 6) goto 148 <.GJTIE774_0_0_+0x8A : 1e1297e >			  ## RF_ble.c:4712:20
 1e128ea:    a0 00             	tbb [r0]


.GJTIS774_0_0_:
 1e128ec:    43     < 67 : 0x43 >
 1e128ed:    04     < 4 : 0x4 >
 1e128ee:    43     < 67 : 0x43 >
 1e128ef:    49     < 73 : 0x49 >
 1e128f0:    49     < 73 : 0x49 >
 1e128f1:    04     < 4 : 0x4 >
 1e128f2:    04     < 4 : 0x4 >
 1e128f3:    00     < 0 : 0x0 >
 1e128f4:    00 f6 1c a0       	r0 = [r10 + 28]			  ## RF_ble.c:4654:10
 1e128f8:    06 70             	r6 = 0			  ## RF_ble.c:4654:10
 1e128fa:    21 f3 40 00       	if ((r0 & 2) != 0) goto 128 <.GJTIE774_0_0_+0x8A : 1e1297e >			  ## RF_ble.c:4654:10
 1e128fe:    94 17             	call -216 <check_event_pending : 1e12828 >			  ## RF_ble.c:4654:39
 1e12900:    3e 30             	if (r0 != 0) goto 124 <.GJTIE774_0_0_+0x8A : 1e1297e >			  ## RF_ble.c:4654:39
 1e12902:    97 f3 4b a2       	call 3097750 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e12906:    08 00             	csync			  ## RF_ble.c:281:5
 1e12908:    00 f6 00 e0       	r0 = [r14 + 0]			  ## RF_ble.c:147:19
 1e1290c:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1290e:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e12910:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e12914:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e12916:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:286:50
 1e1291a:    90 b0             	r0 |= 2			  ## RF_ble.c:286:56
 1e1291c:    10 f6 00 a0       	[r10 + 0] = r0			  ## RF_ble.c:286:21
 1e12920:    08 00             	csync			  ## RF_ble.c:287:5
 1e12922:    06 f6 08 a0       	r6 = [r10 + 8]			  ## RF_ble.c:288:13
 1e12926:    97 f3 37 a2       	call 3097710 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e1292a:    97 f3 37 a2       	call 3097710 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1292e:    08 00             	csync			  ## RF_ble.c:281:5
 1e12930:    00 f6 00 e0       	r0 = [r14 + 0]			  ## RF_ble.c:147:19
 1e12934:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e12936:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e12938:    e0 fe b0 00       	r0 = r0 / r11 (s)			  ## RF_ble.c:147:17
 1e1293c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1293e:    01 fb f0 07       	r1 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:286:50
 1e12942:    50 b3             	r0 &= r1			  ## RF_ble.c:286:50
 1e12944:    01 fb 02 38       	r1 = 14338 <read_flash_id+0x1E : 3802 >			  ## RF_ble.c:286:56
 1e12948:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1294a:    10 f6 00 a0       	[r10 + 0] = r0			  ## RF_ble.c:286:21
 1e1294e:    08 00             	csync			  ## RF_ble.c:287:5
 1e12950:    00 f6 08 a0       	r0 = [r10 + 8]			  ## RF_ble.c:288:13
 1e12954:    a1 05             	r1 = r6.l (u)			  ## RF_ble.c:4658:40
 1e12956:    00 c4             	r0 = r0 << 16			  ## RF_ble.c:4659:51
 1e12958:    20 fd ff 0b       	r0 = r0 & 16711680			  ## RF_ble.c:4659:51
 1e1295c:    51 b0             	r1 |= r0			  ## RF_ble.c:4659:10
 1e1295e:    10 fc fd ff       	r0 = r1 + -3			  ## RF_ble.c:4666:44
 1e12962:    11 80             	r1 += 1			  ## RF_ble.c:4660:9
 1e12964:    06 70             	r6 = 0			  ## RF_ble.c:4660:9
 1e12966:    41 e0 01 30       	if (r1 < 4) goto 2 <.GJTIE774_0_0_+0x78 : 1e1296c >
 1e1296a:    06 08             	r6 = r0			  ## RF_ble.c:4666:12
 1e1296c:    97 f3 14 a2       	call 3097640 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e12970:    06 18             	goto 12 <.GJTIE774_0_0_+0x8A : 1e1297e >			  ## RF_ble.c:296:5
 1e12972:    40 08             	r0 = r4
 1e12974:    70 17             	call -288 <le_hw_suspend : 1e12856 >
 1e12976:    80 f6 00 d5       	r0 = [r13+r5]
 1e1297a:    06 f7 58 02       	r6 = h[r0 + 600] (u)
 1e1297e:    6c f2 01 30       	if (r12 < r6) goto 2 <.GJTIE774_0_0_+0x90 : 1e12984 >
 1e12982:    6c 08             	r12 = r6			  ## RF_ble.c:4730:21
 1e12984:    e7 e0 99 1f       	if (r7 != 14) goto -206 <ble_slot_schedule+0x4A : 1e128ba >
 1e12988:    20 fd 0a f9       	r0 = r15 & 10			  ## RF_ble.c:4739:5
 1e1298c:    c1 ff 3c 0f 00 00 	r1 = 3900 <ble_slot_schedule.credits : f3c >			  ## RF_ble.c:4739:5
 1e12992:    20 e0 08 00       	if (r0 == 2) goto 16 <.GJTIE774_0_0_+0xB2 : 1e129a6 >			  ## RF_ble.c:4739:5
 1e12996:    80 e0 08 00       	if (r0 == 8) goto 16 <.GJTIE774_0_0_+0xB6 : 1e129aa >
 1e1299a:    a0 e0 0a 10       	if (r0 != 10) goto 20 <.GJTIE774_0_0_+0xBE : 1e129b2 >
 1e1299e:    02 62             	r2 = b[r1 + 0] (u)			  ## RF_ble.c:4747:20
 1e129a0:    39 70             	r9 = 3			  ## RF_ble.c:4747:19
 1e129a2:    12 e0 03 00       	if (r2 == 1) goto 6 <.GJTIE774_0_0_+0xB8 : 1e129ac >			  ## RF_ble.c:4747:19
 1e129a6:    19 70             	r9 = 1
 1e129a8:    01 18             	goto 2 <.GJTIE774_0_0_+0xB8 : 1e129ac >
 1e129aa:    39 70             	r9 = 3
 1e129ac:    19 f9 00 10       	b[r1 + 0] = r9
 1e129b0:    02 18             	goto 4 <.GJTIE774_0_0_+0xC2 : 1e129b6 >
 1e129b2:    09 f9 00 10       	r9 = b[r1 + 0] (u)
 1e129b6:    01 f6 00 e0       	r1 = [r14 + 0]
 1e129ba:    02 70             	r2 = 0
 1e129bc:    13 08             	r3 = r1
 1e129be:    04 70             	r4 = 0
 1e129c0:    85 f7 02 30       	r5 = h[r3 ++= 2] (u)			  ## RF_ble.c:4753:13
 1e129c4:    13 2a             	if (r5 == 0) goto 38 <.GJTIE774_0_0_+0xF8 : 1e129ec >			  ## RF_ble.c:4753:13
 1e129c6:    45 42             	r5 = [r1 + 16]			  ## RF_ble.c:4754:35
 1e129c8:    87 f6 00 52       	r7 = [r5+r2]			  ## RF_ble.c:4755:29
 1e129cc:    0f 2e             	if (r7 == 0) goto 30 <.GJTIE774_0_0_+0xF8 : 1e129ec >			  ## RF_ble.c:4755:29
 1e129ce:    76 fc 58 02       	r6 = r7 + 600
 1e129d2:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:4765:30
 1e129d4:    0c f2 0a 30       	if (r12 < r0) goto 20 <.GJTIE774_0_0_+0xF8 : 1e129ec >			  ## RF_ble.c:4765:30
 1e129d8:    07 f9 52 71       	r7 = b[r7 + 338] (u)			  ## RF_ble.c:4766:35
 1e129dc:    17 e0 02 10       	if (r7 != 1) goto 4 <.GJTIE774_0_0_+0xF0 : 1e129e4 >			  ## RF_ble.c:4766:35
 1e129e0:    19 e0 09 00       	if (r9 == 1) goto 18 <.GJTIE774_0_0_+0x102 : 1e129f6 >
 1e129e4:    37 e0 02 10       	if (r7 != 3) goto 4 <.GJTIE774_0_0_+0xF8 : 1e129ec >
 1e129e8:    39 e0 05 00       	if (r9 == 3) goto 10 <.GJTIE774_0_0_+0x102 : 1e129f6 >
 1e129ec:    14 80             	r4 += 1			  ## RF_ble.c:4752:39
 1e129ee:    c2 81             	r2 += 28			  ## RF_ble.c:4752:19
 1e129f0:    84 e0 e6 3f       	if (r4 < 8) goto -52 <.GJTIE774_0_0_+0xCC : 1e129c0 >			  ## RF_ble.c:4752:19
 1e129f4:    04 18             	goto 8 <.GJTIE774_0_0_+0x10A : 1e129fe >			  ## RF_ble.c:4752:19
 1e129f6:    11 5c             	r1 = h[r6 + 2] (u)
 1e129f8:    80 ba             	r0 = r5 + r2
 1e129fa:    bf f3 eb f5       	call -5162 <le_hw_resume : 1e115d4 >
 1e129fe:    c0 f4 00 89       	[r8 + 0] = 0			  ## RF_ble.c:4782:15
 1e12a02:    5f 01             	{pc, r15-r4} = [sp++]			  ## RF_ble.c:4783:1


le_hw_advertising:
 1e12a04:    7a 01             	[--sp] = {rets, r10-r4}			  ## RF_ble.c:3388:0
 1e12a06:    fe 0b             	sp += -4			  ## RF_ble.c:3388:0
 1e12a08:    05 08             	r5 = r0			  ## RF_ble.c:3388:0
 1e12a0a:    0a f6 00 50       	r10 = [r5 + 0]			  ## RF_ble.c:3389:31
 1e12a0e:    a7 fc 10 01       	r7 = r10 + 272
 1e12a12:    b2 5f             	r2 = h[r7 + 54] (u)
 1e12a14:    16 08             	r6 = r1
 1e12a16:    30 fd 1f 2a       	r0 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e12a1a:    00 fd 1a 0a       	r0 = r0 | 6656			  ## RF_ble.c:882:23
 1e12a1e:    b8 5f             	h[r7 + 54] = r0			  ## RF_ble.c:882:23
 1e12a20:    a0 fc 44 00       	r0 = r10 + 68			  ## RF_ble.c:882:23
 1e12a24:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <le_hw_advertising+0x2A : 1e12a2e >			  ## RF_ble.c:882:23
 1e12a28:    a1 71             	r1 = 26			  ## RF_ble.c:886:28
 1e12a2a:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:886:28
 1e12a2c:    d9 50             	h[r0 + 26] = r1			  ## RF_ble.c:887:28
 1e12a2e:    01 fb 55 55       	r1 = 21845 <report_overlay_end+0x34D : 5555 >			  ## RF_ble.c:3410:22
 1e12a32:    09 50             	h[r0 + 0] = r1			  ## RF_ble.c:3410:22
 1e12a34:    51 75             	r1 = 85			  ## RF_ble.c:3411:22
 1e12a36:    19 50             	h[r0 + 2] = r1			  ## RF_ble.c:3411:22
 1e12a38:    20 73             	r0 = 50			  ## RF_ble.c:3411:22
 1e12a3a:    10 f7 22 a0       	h[r10 + 34] = r0			  ## RF_ble.c:722:25
 1e12a3e:    04 70             	r4 = 0			  ## RF_ble.c:722:25
 1e12a40:    14 f7 24 a0       	h[r10 + 36] = r4			  ## RF_ble.c:724:25
 1e12a44:    18 5e             	h[r7 + 2] = r0			  ## RF_ble.c:725:25
 1e12a46:    f8 4e             	[r7 + 60] = r0			  ## RF_ble.c:730:16
 1e12a48:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:3414:24
 1e12a4a:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:3414:38
 1e12a4e:    41 0e             	r1 = r0 * r1			  ## RF_ble.c:3414:38
 1e12a50:    12 70             	r2 = 1			  ## RF_ble.c:3414:5
 1e12a52:    50 08             	r0 = r5			  ## RF_ble.c:3414:5
 1e12a54:    bf f3 03 fa       	call -3066 <__set_interval : 1e11e5e >			  ## RF_ble.c:3414:5
 1e12a58:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:480:31
 1e12a5a:    21 70             	r1 = 2
 1e12a5c:    00 fc 52 01       	r0 = r0 + 338
 1e12a60:    09 60             	b[r0 + 0] = r1			  ## RF_ble.c:482:22
 1e12a62:    3c 50             	h[r0 + 6] = r4			  ## RF_ble.c:484:22
 1e12a64:    2c 50             	h[r0 + 4] = r4			  ## RF_ble.c:484:22
 1e12a66:    97 f3 99 a1       	call 3097394 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e12a6a:    08 00             	csync			  ## RF_ble.c:304:5
 1e12a6c:    c8 ff 1c 80 1c 00 	r8 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e12a72:    c1 f4 20 8a       	[r8 + 4] = 8192			  ## RF_ble.c:306:21
 1e12a76:    08 00             	csync			  ## RF_ble.c:307:5
 1e12a78:    c9 ff a4 2c 00 00 	r9 = 11428 <bb_hdl : 2ca4 >
 1e12a7e:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e12a82:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e12a84:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e12a86:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e12a88:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e12a8c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e12a8e:    01 fb f0 07       	r1 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:308:50
 1e12a92:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e12a94:    51 81             	r1 += 21			  ## RF_ble.c:308:67
 1e12a96:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e12a98:    10 f6 00 80       	[r8 + 0] = r0			  ## RF_ble.c:308:21
 1e12a9c:    97 f3 7c a1       	call 3097336 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e12aa0:    61 6c             	r1 = b[r6 + 6] (u)			  ## RF_ble.c:3417:44
 1e12aa2:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:1784:37
 1e12aa4:    31 e0 05 00       	if (r1 == 3) goto 10 <le_hw_advertising+0xAE : 1e12ab2 >			  ## RF_ble.c:1788:5
 1e12aa8:    21 e0 06 00       	if (r1 == 2) goto 12 <le_hw_advertising+0xB4 : 1e12ab8 >
 1e12aac:    11 e0 02 00       	if (r1 == 1) goto 4 <le_hw_advertising+0xB0 : 1e12ab4 >
 1e12ab0:    04 18             	goto 8 <le_hw_advertising+0xB6 : 1e12aba >
 1e12ab2:    04 71             	r4 = 16
 1e12ab4:    81 70             	r1 = 8
 1e12ab6:    02 18             	goto 4 <le_hw_advertising+0xB8 : 1e12abc >
 1e12ab8:    04 71             	r4 = 16
 1e12aba:    01 70             	r1 = 0
 1e12abc:    e2 51             	r2 = h[r0 + 60] (u)			  ## RF_ble.c:1811:35
 1e12abe:    22 fd f7 29       	r2 = r2 & 247			  ## RF_ble.c:1811:46
 1e12ac2:    51 b4             	r1 |= r2			  ## RF_ble.c:1811:54
 1e12ac4:    e9 51             	h[r0 + 60] = r1			  ## RF_ble.c:1811:24
 1e12ac6:    e1 51             	r1 = h[r0 + 60] (u)			  ## RF_ble.c:1814:35
 1e12ac8:    21 fd ef 19       	r1 = r1 & 239			  ## RF_ble.c:1814:46
 1e12acc:    51 b8             	r1 |= r4			  ## RF_ble.c:1814:54
 1e12ace:    e9 51             	h[r0 + 60] = r1			  ## RF_ble.c:1814:24
 1e12ad0:    10 5c             	r0 = h[r6 + 2] (u)			  ## RF_ble.c:3419:54
 1e12ad2:    41 6c             	r1 = b[r6 + 4] (u)			  ## RF_ble.c:3419:27
 1e12ad4:    02 fb 71 02       	r2 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:3419:67
 1e12ad8:    80 0e             	r0 = r0 * r2			  ## RF_ble.c:3419:67
 1e12ada:    89 c3             	r1 = r1 << 14			  ## RF_ble.c:3419:40
 1e12adc:    50 b2             	r0 |= r1			  ## RF_ble.c:3419:47
 1e12ade:    10 f7 04 a0       	h[r10 + 4] = r0			  ## RF_ble.c:3419:24
 1e12ae2:    70 6c             	r0 = b[r6 + 7] (u)			  ## RF_ble.c:3426:18
 1e12ae4:    20 e0 1a 00       	if (r0 == 2) goto 52 <le_hw_advertising+0x118 : 1e12b1c >			  ## RF_ble.c:3426:18
 1e12ae8:    00 5c             	r0 = h[r6 + 0] (u)			  ## RF_ble.c:3427:22
 1e12aea:    b0 e0 17 30       	if (r0 < 11) goto 46 <le_hw_advertising+0x118 : 1e12b1c >			  ## RF_ble.c:3427:22
 1e12aee:    97 f3 55 a1       	call 3097258 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e12af2:    08 00             	csync			  ## RF_ble.c:304:5
 1e12af4:    c1 f4 c0 8a       	[r8 + 4] = 49152			  ## RF_ble.c:306:21
 1e12af8:    08 00             	csync			  ## RF_ble.c:307:5
 1e12afa:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e12afe:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e12b00:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e12b02:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e12b04:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e12b08:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e12b0a:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e12b0e:    01 fb 05 20       	r1 = 8197 <btif_cfg+0x51 : 2005 >			  ## RF_ble.c:308:67
 1e12b12:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e12b14:    10 f6 00 80       	[r8 + 0] = r0			  ## RF_ble.c:308:21
 1e12b18:    97 f3 3e a1       	call 3097212 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e12b1c:    51 6c             	r1 = b[r6 + 5] (u)			  ## RF_ble.c:3432:5
 1e12b1e:    50 08             	r0 = r5			  ## RF_ble.c:3432:5
 1e12b20:    c4 15             	call -1144 <__set_adv_channel_index : 1e126aa >			  ## RF_ble.c:3432:5
 1e12b22:    f0 7f             	r0 = 255			  ## RF_ble.c:3434:18
 1e12b24:    bf f3 d5 f6       	call -4694 <hw_alloc_rx : 1e118d2 >			  ## RF_ble.c:3434:18
 1e12b28:    a8 4f             	[r7 + 104] = r0			  ## RF_ble.c:3434:16
 1e12b2a:    f0 7f             	r0 = 255			  ## RF_ble.c:3435:18
 1e12b2c:    bf f3 d1 f6       	call -4702 <hw_alloc_rx : 1e118d2 >			  ## RF_ble.c:3435:18
 1e12b30:    b8 4f             	[r7 + 108] = r0			  ## RF_ble.c:3435:16
 1e12b32:    e8 07             	r8 = -2			  ## RF_ble.c:3435:16
 1e12b34:    70 20             	if (r0 == 0) goto 224 <le_hw_advertising+0x212 : 1e12c16 >			  ## RF_ble.c:3435:16
 1e12b36:    a0 4f             	r0 = [r7 + 104]			  ## RF_ble.c:3436:10
 1e12b38:    6e 20             	if (r0 == 0) goto 220 <le_hw_advertising+0x212 : 1e12c16 >
 1e12b3a:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:221:34
 1e12b3c:    40 81             	r0 += 20
 1e12b3e:    bf f3 d6 f6       	call -4692 <PHY_TO_BLE : 1e118ee >			  ## RF_ble.c:224:29
 1e12b42:    f8 56             	h[r3 + 30] = r0			  ## RF_ble.c:224:27
 1e12b44:    03 4a             	r3 = [r5 + 0]			  ## RF_ble.c:221:34
 1e12b46:    b0 4f             	r0 = [r7 + 108]			  ## RF_ble.c:3445:19
 1e12b48:    40 81             	r0 += 20
 1e12b4a:    bf f3 d0 f6       	call -4704 <PHY_TO_BLE : 1e118ee >			  ## RF_ble.c:224:29
 1e12b4e:    08 57             	h[r3 + 32] = r0			  ## RF_ble.c:226:27
 1e12b50:    50 72             	r0 = 37			  ## RF_ble.c:3448:18
 1e12b52:    f3 15             	call -1050 <hw_alloc_tx : 1e1273a >			  ## RF_ble.c:3448:18
 1e12b54:    c8 4f             	[r7 + 112] = r0			  ## RF_ble.c:3448:16
 1e12b56:    50 72             	r0 = 37			  ## RF_ble.c:3449:18
 1e12b58:    f0 15             	call -1056 <hw_alloc_tx : 1e1273a >			  ## RF_ble.c:3449:18
 1e12b5a:    d8 4f             	[r7 + 116] = r0			  ## RF_ble.c:3449:16
 1e12b5c:    5c 20             	if (r0 == 0) goto 184 <le_hw_advertising+0x212 : 1e12c16 >			  ## RF_ble.c:3449:16
 1e12b5e:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3450:10
 1e12b60:    5a 22             	if (r1 == 0) goto 180 <le_hw_advertising+0x212 : 1e12c16 >			  ## RF_ble.c:3450:10
 1e12b62:    a4 fc 0c 02       	r4 = r10 + 524
 1e12b66:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3455:5
 1e12b68:    72 6c             	r2 = b[r6 + 7] (u)			  ## RF_ble.c:3455:5
 1e12b6a:    38 98             	r8 = r4 + 3			  ## RF_ble.c:3455:61
 1e12b6c:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3455:5
 1e12b70:    a0 08             	r0 = r10			  ## RF_ble.c:3455:5
 1e12b72:    f0 15             	call -1056 <__adv_pdu : 1e12754 >			  ## RF_ble.c:3455:5
 1e12b74:    70 6c             	r0 = b[r6 + 7] (u)			  ## RF_ble.c:3456:14
 1e12b76:    d6 4f             	r6 = [r7 + 116]			  ## RF_ble.c:3456:14
 1e12b78:    10 e0 08 10       	if (r0 != 1) goto 16 <le_hw_advertising+0x188 : 1e12b8c >			  ## RF_ble.c:3456:9
 1e12b7c:    23 68             	r3 = b[r4 + 2] (u)			  ## RF_ble.c:3457:9
 1e12b7e:    12 70             	r2 = 1			  ## RF_ble.c:3457:9
 1e12b80:    18 f5 00 00       	[sp] = r8			  ## RF_ble.c:3457:9
 1e12b84:    a0 08             	r0 = r10			  ## RF_ble.c:3457:9
 1e12b86:    61 08             	r1 = r6			  ## RF_ble.c:3457:9
 1e12b88:    e5 15             	call -1078 <__adv_pdu : 1e12754 >			  ## RF_ble.c:3457:9
 1e12b8a:    21 18             	goto 66 <le_hw_advertising+0x1CA : 1e12bce >			  ## RF_ble.c:3457:9
 1e12b8c:    80 5c             	r0 = h[r6 + 16] (u)			  ## RF_ble.c:3309:5
 1e12b8e:    08 f9 2e a2       	r8 = b[r10 + 558] (u)			  ## RF_ble.c:3459:46
 1e12b92:    30 fd 3f 09       	r0 = r0 & 4294967232			  ## RF_ble.c:3309:5
 1e12b96:    10 b1             	r0 |= 4			  ## RF_ble.c:3309:5
 1e12b98:    88 5c             	h[r6 + 16] = r0			  ## RF_ble.c:3310:5
 1e12b9a:    81 fc 06 00       	r1 = r8 + 6			  ## RF_ble.c:3311:5
 1e12b9e:    29 6d             	b[r6 + 18] = r1			  ## RF_ble.c:3311:5
 1e12ba0:    01 f9 68 a1       	r1 = b[r10 + 360] (u)			  ## RF_ble.c:3314:5
 1e12ba4:    c2 ff 84 ff 00 00 	r2 = 65412 <_IRQ_MEM_ADDR+0x84 : ff84 >			  ## RF_ble.c:3314:5
 1e12baa:    50 b5             	r0 &= r2			  ## RF_ble.c:3314:5
 1e12bac:    89 c1             	r1 = r1 << 6			  ## RF_ble.c:3314:5
 1e12bae:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:3314:5
 1e12bb2:    50 b2             	r0 |= r1			  ## RF_ble.c:3314:5
 1e12bb4:    88 5c             	h[r6 + 16] = r0			  ## RF_ble.c:3314:5
 1e12bb6:    40 9d             	r0 = r6 + 20			  ## RF_ble.c:3315:5
 1e12bb8:    71 fc 59 00       	r1 = r7 + 89			  ## RF_ble.c:3315:5
 1e12bbc:    62 70             	r2 = 6			  ## RF_ble.c:3315:5
 1e12bbe:    97 f3 91 a1       	call 3097378 <memcpy : 106ee4 >			  ## RF_ble.c:3315:5
 1e12bc2:    a0 9d             	r0 = r6 + 26			  ## RF_ble.c:3316:21
 1e12bc4:    41 fc 23 00       	r1 = r4 + 35			  ## RF_ble.c:3459:60
 1e12bc8:    82 08             	r2 = r8			  ## RF_ble.c:3316:5
 1e12bca:    97 f3 8b a1       	call 3097366 <memcpy : 106ee4 >			  ## RF_ble.c:3316:5
 1e12bce:    c1 4f             	r1 = [r7 + 112]			  ## RF_ble.c:3465:19
 1e12bd0:    02 70             	r2 = 0			  ## RF_ble.c:3465:5
 1e12bd2:    08 70             	r8 = 0			  ## RF_ble.c:3465:5
 1e12bd4:    50 08             	r0 = r5			  ## RF_ble.c:3465:5
 1e12bd6:    bf f3 99 f6       	call -4814 <ble_hw_tx : 1e1190c >			  ## RF_ble.c:3465:5
 1e12bda:    d1 4f             	r1 = [r7 + 116]			  ## RF_ble.c:3466:19
 1e12bdc:    12 70             	r2 = 1			  ## RF_ble.c:3466:5
 1e12bde:    50 08             	r0 = r5			  ## RF_ble.c:3466:5
 1e12be0:    bf f3 94 f6       	call -4824 <ble_hw_tx : 1e1190c >			  ## RF_ble.c:3466:5
 1e12be4:    18 f9 4e a2       	b[r10 + 590] = r8			  ## RF_ble.c:3468:21
 1e12be8:    00 f7 08 a0       	r0 = h[r10 + 8] (u)			  ## RF_ble.c:1293:21
 1e12bec:    70 b2             	r0 &= 4294967279			  ## RF_ble.c:1293:21
 1e12bee:    10 f7 08 a0       	h[r10 + 8] = r0			  ## RF_ble.c:1293:21
 1e12bf2:    50 08             	r0 = r5			  ## RF_ble.c:3483:5
 1e12bf4:    fd 15             	call -1030 <ble_power_get : 1e127f0 >			  ## RF_ble.c:3483:5
 1e12bf6:    11 70             	r1 = 1			  ## RF_ble.c:3485:5
 1e12bf8:    50 08             	r0 = r5			  ## RF_ble.c:3485:5
 1e12bfa:    bf f3 d8 f4       	call -5712 <ble_hw_enable : 1e115ae >			  ## RF_ble.c:3485:5
 1e12bfe:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:3487:9
 1e12c02:    00 f9 20 00       	r0 = b[r0 + 32] (u)			  ## RF_ble.c:3487:17
 1e12c06:    20 e0 01 30       	if (r0 < 2) goto 2 <le_hw_advertising+0x208 : 1e12c0c >			  ## RF_ble.c:3487:17
 1e12c0a:    32 16             	call -924 <ble_slot_schedule : 1e12870 >			  ## RF_ble.c:3488:9
 1e12c0c:    00 f7 06 a0       	r0 = h[r10 + 6] (u)			  ## RF_ble.c:3491:24
 1e12c10:    10 b1             	r0 |= 4			  ## RF_ble.c:3491:24
 1e12c12:    10 f7 06 a0       	h[r10 + 6] = r0			  ## RF_ble.c:3491:24
 1e12c16:    80 08             	r0 = r8			  ## RF_ble.c:3495:1
 1e12c18:    02 0a             	sp += 4			  ## RF_ble.c:3495:1
 1e12c1a:    5a 01             	{pc, r10-r4} = [sp++]			  ## RF_ble.c:3495:1


le_hw_send_packet:
 1e12c1c:    79 01             	[--sp] = {rets, r9-r4}			  ## RF_ble.c:4111:0
 1e12c1e:    04 08             	r4 = r0			  ## RF_ble.c:4111:0
 1e12c20:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:4112:34
 1e12c22:    00 f7 ea 61       	r0 = h[r6 + 490] (u)
 1e12c26:    77 02             	r7 = [sp+28]
 1e12c28:    35 08             	r5 = r3
 1e12c2a:    28 08             	r8 = r2
 1e12c2c:    19 08             	r9 = r1
 1e12c2e:    50 f2 02 a0       	ifs (r0 >= r5) goto 4 <le_hw_send_packet+0x1A : 1e12c36 >
 1e12c32:    8f f3 65 83       	call 2033354 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e12c36:    70 08             	r0 = r7			  ## RF_ble.c:4115:27
 1e12c38:    80 15             	call -1280 <hw_alloc_tx : 1e1273a >			  ## RF_ble.c:4115:27
 1e12c3a:    07 08             	r7 = r0			  ## RF_ble.c:4115:27
 1e12c3c:    03 3e             	if (r7 != 0) goto 6 <le_hw_send_packet+0x28 : 1e12c44 >
 1e12c3e:    8f f3 5f 83       	call 2033342 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e12c42:    07 70             	r7 = 0			  ## cpu.h:148:5
 1e12c44:    01 70             	r1 = 0			  ## RF_ble.c:4120:25
 1e12c46:    42 71             	r2 = 20			  ## RF_ble.c:4120:25
 1e12c48:    70 08             	r0 = r7			  ## RF_ble.c:4120:25
 1e12c4a:    97 f3 51 a1       	call 3097250 <memset : 106ef0 >			  ## RF_ble.c:4120:25
 1e12c4e:    f0 fd 20 09       	r0 = r9 << 4			  ## RF_ble.c:4123:5
 1e12c52:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:4123:5
 1e12c56:    88 5e             	h[r7 + 16] = r0			  ## RF_ble.c:4123:5
 1e12c58:    2d 6f             	b[r7 + 18] = r5			  ## RF_ble.c:4124:5
 1e12c5a:    0b ff 00 51 02 00 	ifs (r5 < 256) goto 4 <le_hw_send_packet+0x48 : 1e12c64 >			  ## RF_ble.c:4124:5
 1e12c60:    8f f3 4e 83       	call 2033308 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e12c64:    40 9f             	r0 = r7 + 20			  ## RF_ble.c:4130:5
 1e12c66:    81 08             	r1 = r8			  ## RF_ble.c:4130:5
 1e12c68:    52 08             	r2 = r5			  ## RF_ble.c:4130:5
 1e12c6a:    97 f3 3b a1       	call 3097206 <memcpy : 106ee4 >			  ## RF_ble.c:4130:5
 1e12c6e:    65 fc 46 01       	r5 = r6 + 326			  ## RF_ble.c:4130:5
 1e12c72:    50 fc 52 00       	r0 = r5 + 82			  ## RF_ble.c:4134:22
 1e12c76:    71 08             	r1 = r7			  ## RF_ble.c:4134:5
 1e12c78:    bf f3 49 97       	call -53614 <hw_dma_push : 1e05b0e >			  ## RF_ble.c:4134:5
 1e12c7c:    00 5a             	r0 = h[r5 + 0] (u)
 1e12c7e:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e12c82:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:882:23
 1e12c86:    09 5a             	h[r5 + 0] = r1			  ## RF_ble.c:882:23
 1e12c88:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <le_hw_send_packet+0x7A : 1e12c96 >			  ## RF_ble.c:882:23
 1e12c8c:    c0 71             	r0 = 28			  ## RF_ble.c:886:28
 1e12c8e:    10 f7 60 60       	h[r6 + 96] = r0			  ## RF_ble.c:886:28
 1e12c92:    10 f7 5e 60       	h[r6 + 94] = r0			  ## RF_ble.c:887:28
 1e12c96:    40 08             	r0 = r4			  ## RF_ble.c:4138:5
 1e12c98:    bf f3 fb f6       	call -4618 <__hw_tx_process : 1e11a92 >			  ## RF_ble.c:4138:5
 1e12c9c:    a0 5a             	r0 = h[r5 + 20] (u)			  ## RF_ble.c:410:17
 1e12c9e:    10 e0 02 80       	if (r0 > 1) goto 4 <le_hw_send_packet+0x8A : 1e12ca6 >			  ## RF_ble.c:410:17
 1e12ca2:    20 70             	r0 = 2
 1e12ca4:    a8 5a             	h[r5 + 20] = r0
 1e12ca6:    40 08             	r0 = r4			  ## RF_ble.c:4143:5
 1e12ca8:    19 01             	{rets, r9-r4} = [sp++]			  ## RF_ble.c:4143:5
 1e12caa:    ff f3 92 f7       	goto -4316 <ble_latency_manualhold : 1e11bd2 >			  ## RF_ble.c:4143:5


le_hw_upload_data:
 1e12cae:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:2335:0
 1e12cb0:    15 08             	r5 = r1			  ## RF_ble.c:2335:0
 1e12cb2:    06 08             	r6 = r0			  ## RF_ble.c:2335:0
 1e12cb4:    60 fc 88 01       	r0 = r6 + 392			  ## RF_ble.c:2340:26
 1e12cb8:    bf f3 36 97       	call -53652 <hw_dma_pop : 1e05b28 >			  ## RF_ble.c:2340:10
 1e12cbc:    04 08             	r4 = r0			  ## RF_ble.c:2340:10
 1e12cbe:    0e 28             	if (r4 == 0) goto 28 <le_hw_upload_data+0x2E : 1e12cdc >			  ## RF_ble.c:2340:10
 1e12cc0:    00 f6 d8 61       	r0 = [r6 + 472]			  ## RF_ble.c:2345:24
 1e12cc4:    41 08             	r1 = r4			  ## RF_ble.c:2345:9
 1e12cc6:    85 00             	call r5			  ## RF_ble.c:2345:9
 1e12cc8:    40 58             	r0 = h[r4 + 8] (u)			  ## RF_ble.c:2347:19
 1e12cca:    82 fd 20 00       	r0 = uextra(r0, p:4, l:2)			  ## RF_ble.c:2347:19
 1e12cce:    f0 8f             	r0 += -1			  ## RF_ble.c:2347:46
 1e12cd0:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2347:46
 1e12cd2:    20 e0 03 30       	if (r0 < 2) goto 6 <le_hw_upload_data+0x2E : 1e12cdc >			  ## RF_ble.c:2347:46
 1e12cd6:    40 08             	r0 = r4			  ## RF_ble.c:2348:13
 1e12cd8:    bf f3 bc 71       	call -72840 <hw_dma_free : 1e01054 >			  ## RF_ble.c:2348:13
 1e12cdc:    56 01             	{pc, r6-r4} = [sp++]			  ## RF_ble.c:2352:1


ble_pll_comp_reset:
 1e12cde:    c1 ff b8 09 00 00 	r1 = 2488 <system_data_end : 9b8 >			  ## RF_ble.c:1619:0
 1e12ce4:    51 52             	r1 = h[r1 + 10] (u)			  ## RF_ble.c:1625:24
 1e12ce6:    61 fb 00 19       	r1 = 0 - r1			  ## RF_ble.c:1625:23
 1e12cea:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:1620:53
 1e12cec:    09 c5             	r1 = r1 << 20			  ## RF_ble.c:1625:52
 1e12cee:    02 fb c0 5d       	r2 = 24000 <report_overlay_end+0xBB8 : 5dc0 >			  ## RF_ble.c:1625:65
 1e12cf2:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:1625:65
 1e12cf6:    11 f6 24 01       	[r0 + 292] = r1			  ## RF_ble.c:1627:21
 1e12cfa:    20 00             	rts			  ## RF_ble.c:1630:1


__get_ble_anchor_con:
 1e12cfc:    75 01             	[--sp] = {rets, r5, r4}			  ## RF_ble.c:274:0
 1e12cfe:    14 08             	r4 = r1			  ## RF_ble.c:274:0
 1e12d00:    05 08             	r5 = r0			  ## RF_ble.c:274:0
 1e12d02:    97 f3 4b a0       	call 3096726 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e12d06:    08 00             	csync			  ## RF_ble.c:281:5
 1e12d08:    c0 ff a4 2c 00 00 	r0 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e12d0e:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:147:19
 1e12d10:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e12d12:    20 ba             	r0 = r5 - r0			  ## RF_ble.c:147:17
 1e12d14:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e12d16:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e12d1a:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e12d1c:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:286:50
 1e12d20:    a1 c2             	r1 = r4 << 10			  ## RF_ble.c:286:30
 1e12d22:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e12d24:    90 b0             	r0 |= 2			  ## RF_ble.c:286:56
 1e12d26:    c1 ff 1c 80 1c 00 	r1 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:286:56
 1e12d2c:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:286:21
 1e12d2e:    08 00             	csync			  ## RF_ble.c:287:5
 1e12d30:    24 42             	r4 = [r1 + 8]			  ## RF_ble.c:288:13
 1e12d32:    97 f3 31 a0       	call 3096674 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e12d36:    40 08             	r0 = r4			  ## RF_ble.c:299:5
 1e12d38:    55 01             	{pc, r5, r4} = [sp++]			  ## RF_ble.c:299:5


__get_clkn:
 1e12d3a:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:49:0
 1e12d3c:    04 08             	r4 = r0			  ## le_low_power.c:49:0
 1e12d3e:    01 70             	r1 = 0			  ## le_low_power.c:50:13
 1e12d40:    dd 17             	call -70 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:50:13
 1e12d42:    25 04             	r5 = r0.l (u)			  ## le_low_power.c:50:41
 1e12d44:    e1 70             	r1 = 14			  ## le_low_power.c:50:54
 1e12d46:    40 08             	r0 = r4			  ## le_low_power.c:50:54
 1e12d48:    d9 17             	call -78 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:50:54
 1e12d4a:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:50:91
 1e12d4c:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:50:91
 1e12d50:    50 ba             	r0 |= r5			  ## le_low_power.c:50:51
 1e12d52:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:50:5


ble_event_irq_handler:
 1e12d54:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:3005:0
 1e12d56:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## RF_ble.c:3006:9
 1e12d5a:    fa 0b             	sp += -12			  ## RF_ble.c:3006:9
 1e12d5c:    c9 ff a4 2c 00 00 	r9 = 11428 <bb_hdl : 2ca4 >
 1e12d62:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:3012:15
 1e12d66:    44 40             	r4 = [r0 + 16]			  ## RF_ble.c:3012:31
 1e12d68:    cd ff 0c 80 1c 00 	r13 = 1867788 <uECC_vli_cmp_unsafe+0xC1010 : 1c800c >
 1e12d6e:    00 f6 1c d0       	r0 = [r13 + 28]			  ## RF_ble.c:3013:13
 1e12d72:    01 f6 24 d0       	r1 = [r13 + 36]			  ## RF_ble.c:3013:28
 1e12d76:    50 b3             	r0 &= r1			  ## RF_ble.c:3013:26
 1e12d78:    00 f3 82 02       	if ((r0 & 1) == 0) goto 1284 <ble_event_irq_handler+0x52C : 1e13280 >			  ## RF_ble.c:3013:26
 1e12d7c:    08 f4 01 d9       	[r13 + 32] |= 1			  ## RF_ble.c:3014:26
 1e12d80:    10 48             	r0 = [r4 + 4]			  ## RF_ble5.c:185:18
 1e12d82:    99 30             	if (r0 != 0) goto 306 <ble_event_irq_handler+0x162 : 1e12eb6 >			  ## RF_ble5.c:185:18
 1e12d84:    06 48             	r6 = [r4 + 0]			  ## RF_ble.c:2869:34
 1e12d86:    97 2c             	if (r6 == 0) goto 302 <ble_event_irq_handler+0x162 : 1e12eb6 >
 1e12d88:    65 fc d8 01       	r5 = r6 + 472
 1e12d8c:    e0 6b             	r0 = b[r5 + 30] (u)			  ## RF_ble.c:2881:13
 1e12d8e:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x40 : 1e12d94 >			  ## RF_ble.c:2881:13
 1e12d90:    f0 8f             	r0 += -1			  ## RF_ble.c:2882:24
 1e12d92:    e8 6b             	b[r5 + 30] = r0			  ## RF_ble.c:2882:24
 1e12d94:    67 fc 44 01       	r7 = r6 + 324
 1e12d98:    e0 6e             	r0 = b[r7 + 14] (u)			  ## RF_ble.c:2887:14
 1e12d9a:    68 fc 58 00       	r8 = r6 + 88			  ## RF_ble.c:2887:14
 1e12d9e:    70 e0 65 00       	if (r0 == 7) goto 202 <ble_event_irq_handler+0x118 : 1e12e6c >			  ## RF_ble.c:2887:14
 1e12da2:    60 e0 5b 00       	if (r0 == 6) goto 182 <ble_event_irq_handler+0x108 : 1e12e5c >
 1e12da6:    20 e0 86 10       	if (r0 != 2) goto 268 <ble_event_irq_handler+0x162 : 1e12eb6 >
 1e12daa:    0a f7 0e 60       	r10 = h[r6 + 14] (u)			  ## RF_ble.c:2894:21
 1e12dae:    6b fc 4c 02       	r11 = r6 + 588
 1e12db2:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3291:13
 1e12db6:    00 f3 1a 00       	if ((r0 & 1) == 0) goto 52 <ble_event_irq_handler+0x9A : 1e12dee >			  ## RF_ble.c:3291:13
 1e12dba:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:3293:31
 1e12dbc:    82 52             	r2 = h[r1 + 16] (u)			  ## RF_ble.c:3273:13
 1e12dbe:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3273:5
 1e12dc2:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0x94 : 1e12de8 >			  ## RF_ble.c:3273:5
 1e12dc6:    13 70             	r3 = 1
 1e12dc8:    f8 fd 20 23       	r2 = r3 << r2
 1e12dcc:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0x94 : 1e12de8 >
 1e12dd2:    02 f9 0e 62       	r2 = b[r6 + 526] (u)			  ## RF_ble.c:3293:60
 1e12dd6:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3277:9
 1e12dd8:    28 63             	b[r1 + 18] = r0			  ## RF_ble.c:3277:9
 1e12dda:    a0 93             	r0 = r1 + 26			  ## RF_ble.c:3279:25
 1e12ddc:    51 fc 37 00       	r1 = r5 + 55			  ## RF_ble.c:3293:42
 1e12de0:    97 f3 80 a0       	call 3096832 <memcpy : 106ee4 >			  ## RF_ble.c:3279:9
 1e12de4:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3279:9
 1e12de8:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:3295:24
 1e12dea:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3295:24
 1e12dee:    2a fd 01 a9       	r10 = r10 & 1			  ## RF_ble.c:2894:27
 1e12df2:    01 f3 1a 00       	if ((r0 & 2) == 0) goto 52 <ble_event_irq_handler+0xD6 : 1e12e2a >			  ## RF_ble.c:2894:27
 1e12df6:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:3300:31
 1e12df8:    82 52             	r2 = h[r1 + 16] (u)			  ## RF_ble.c:3273:13
 1e12dfa:    22 fd 0f 29       	r2 = r2 & 15			  ## RF_ble.c:3273:5
 1e12dfe:    62 e0 11 80       	if (r2 > 6) goto 34 <ble_event_irq_handler+0xD0 : 1e12e24 >			  ## RF_ble.c:3273:5
 1e12e02:    13 70             	r3 = 1
 1e12e04:    f8 fd 20 23       	r2 = r3 << r2
 1e12e08:    60 ff 45 29 0b 00 	if ((r2 & 69) == 0) goto 22 <ble_event_irq_handler+0xD0 : 1e12e24 >
 1e12e0e:    02 f9 2e 62       	r2 = b[r6 + 558] (u)			  ## RF_ble.c:3300:65
 1e12e12:    60 94             	r0 = r2 + 6			  ## RF_ble.c:3277:9
 1e12e14:    28 63             	b[r1 + 18] = r0			  ## RF_ble.c:3277:9
 1e12e16:    a0 93             	r0 = r1 + 26			  ## RF_ble.c:3279:25
 1e12e18:    51 fc 57 00       	r1 = r5 + 87			  ## RF_ble.c:3300:42
 1e12e1c:    97 f3 62 a0       	call 3096772 <memcpy : 106ee4 >			  ## RF_ble.c:3279:9
 1e12e20:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## RF_ble.c:3279:9
 1e12e24:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:3302:24
 1e12e26:    10 f9 02 b0       	b[r11 + 2] = r0			  ## RF_ble.c:3302:24
 1e12e2a:    f1 4e             	r1 = [r7 + 60]			  ## RF_ble.c:2902:27
 1e12e2c:    40 08             	r0 = r4			  ## RF_ble.c:2902:9
 1e12e2e:    a2 08             	r2 = r10			  ## RF_ble.c:2902:9
 1e12e30:    bf f3 6c f5       	call -5416 <ble_hw_tx : 1e1190c >			  ## RF_ble.c:2902:9
 1e12e34:    01 4f             	r1 = [r7 + 64]			  ## RF_ble.c:2903:27
 1e12e36:    12 fd 01 a9       	r2 = r10 ^ 1			  ## RF_ble.c:2903:38
 1e12e3a:    40 08             	r0 = r4			  ## RF_ble.c:2903:9
 1e12e3c:    bf f3 66 f5       	call -5428 <ble_hw_tx : 1e1190c >			  ## RF_ble.c:2903:9
 1e12e40:    10 5e             	r0 = h[r7 + 2] (u)
 1e12e42:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e12e46:    01 fd 1a 1a       	r1 = r1 | 6656			  ## RF_ble.c:882:23
 1e12e4a:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:882:23
 1e12e4c:    2d f3 33 00       	if ((r0 & 8192) != 0) goto 102 <ble_event_irq_handler+0x162 : 1e12eb6 >			  ## RF_ble.c:882:23
 1e12e50:    a0 71             	r0 = 26			  ## RF_ble.c:886:28
 1e12e52:    10 f7 08 80       	h[r8 + 8] = r0			  ## RF_ble.c:886:28
 1e12e56:    10 f7 06 80       	h[r8 + 6] = r0			  ## RF_ble.c:887:28
 1e12e5a:    2d 18             	goto 90 <ble_event_irq_handler+0x162 : 1e12eb6 >			  ## RF_ble.c:887:28
 1e12e5c:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2927:17
 1e12e5e:    06 20             	if (r0 == 0) goto 12 <ble_event_irq_handler+0x118 : 1e12e6c >			  ## RF_ble.c:2927:17
 1e12e60:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2927:41
 1e12e62:    04 26             	if (r3 == 0) goto 8 <ble_event_irq_handler+0x118 : 1e12e6c >			  ## RF_ble.c:2927:41
 1e12e64:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2928:50
 1e12e66:    a2 5d             	r2 = h[r6 + 52] (u)			  ## RF_ble.c:2928:76
 1e12e68:    11 70             	r1 = 1			  ## RF_ble.c:2928:13
 1e12e6a:    83 00             	call r3			  ## RF_ble.c:2928:13
 1e12e6c:    90 6f             	r0 = b[r7 + 25] (u)			  ## RF_ble.c:2933:21
 1e12e6e:    1a 20             	if (r0 == 0) goto 52 <ble_event_irq_handler+0x150 : 1e12ea4 >			  ## RF_ble.c:2933:21
 1e12e70:    00 f7 00 80       	r0 = h[r8 + 0] (u)			  ## RF_ble.c:2934:43
 1e12e74:    d1 5e             	r1 = h[r7 + 26] (u)			  ## RF_ble.c:2935:31
 1e12e76:    d0 b1             	r0 = ~r0			  ## RF_ble.c:2935:39
 1e12e78:    10 09             	r0 += r1			  ## RF_ble.c:2936:32
 1e12e7a:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:2936:32
 1e12e7c:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0x13BE : 7ffe >			  ## RF_ble.c:2936:32
 1e12e80:    10 f2 10 30       	if (r0 < r1) goto 32 <ble_event_irq_handler+0x150 : 1e12ea4 >			  ## RF_ble.c:2936:32
 1e12e84:    00 70             	r0 = 0
 1e12e86:    98 6f             	b[r7 + 25] = r0			  ## RF_ble.c:2938:39
 1e12e88:    d8 5e             	h[r7 + 26] = r0			  ## RF_ble.c:2939:33
 1e12e8a:    10 5e             	r0 = h[r7 + 2] (u)
 1e12e8c:    31 fd 1f 0a       	r1 = r0 & 4294959359			  ## RF_ble.c:882:23
 1e12e90:    01 fd 1c 1a       	r1 = r1 | 7168			  ## RF_ble.c:882:23
 1e12e94:    19 5e             	h[r7 + 2] = r1			  ## RF_ble.c:882:23
 1e12e96:    2d f3 05 00       	if ((r0 & 8192) != 0) goto 10 <ble_event_irq_handler+0x150 : 1e12ea4 >			  ## RF_ble.c:882:23
 1e12e9a:    c0 71             	r0 = 28			  ## RF_ble.c:886:28
 1e12e9c:    10 f7 08 80       	h[r8 + 8] = r0			  ## RF_ble.c:886:28
 1e12ea0:    10 f7 06 80       	h[r8 + 6] = r0			  ## RF_ble.c:887:28
 1e12ea4:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:2943:21
 1e12ea6:    07 20             	if (r0 == 0) goto 14 <ble_event_irq_handler+0x162 : 1e12eb6 >			  ## RF_ble.c:2943:21
 1e12ea8:    33 40             	r3 = [r0 + 12]			  ## RF_ble.c:2943:45
 1e12eaa:    05 26             	if (r3 == 0) goto 10 <ble_event_irq_handler+0x162 : 1e12eb6 >			  ## RF_ble.c:2943:45
 1e12eac:    00 4a             	r0 = [r5 + 0]			  ## RF_ble.c:2944:54
 1e12eae:    02 f7 00 80       	r2 = h[r8 + 0] (u)			  ## RF_ble.c:2944:78
 1e12eb2:    01 70             	r1 = 0			  ## RF_ble.c:2944:17
 1e12eb4:    83 00             	call r3			  ## RF_ble.c:2944:17
 1e12eb6:    dc 14             	call -1608 <ble_slot_schedule : 1e12870 >			  ## RF_ble.c:3029:13
 1e12eb8:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:937:34
 1e12eba:    00 e0 dd 01       	if (r0 == 0) goto 954 <ble_event_irq_handler+0x524 : 1e13278 >
 1e12ebe:    02 f9 5c 02       	r2 = b[r0 + 604] (u)			  ## RF_ble.c:944:23
 1e12ec2:    01 fc 44 01       	r1 = r0 + 324			  ## RF_ble.c:944:23
 1e12ec6:    e3 62             	r3 = b[r1 + 14] (u)			  ## RF_ble.c:943:20
 1e12ec8:    15 94             	r5 = r2 + 1			  ## RF_ble.c:944:23
 1e12eca:    15 f9 5c 02       	b[r0 + 604] = r5			  ## RF_ble.c:944:23
 1e12ece:    32 fd 01 39       	r2 = r3 & 4294967294			  ## RF_ble.c:948:32
 1e12ed2:    c0 85             	r0 += 92			  ## RF_ble.c:948:32
 1e12ed4:    62 e0 0f 10       	if (r2 != 6) goto 30 <ble_event_irq_handler+0x1A2 : 1e12ef6 >			  ## RF_ble.c:948:32
 1e12ed8:    12 52             	r2 = h[r1 + 2] (u)
 1e12eda:    85 fd 40 32       	r3 = uextra(r2, p:8, l:5)			  ## RF_ble.c:955:23
 1e12ede:    21 f3 1f 20       	if ((r2 & 2) != 0) goto 62 <ble_event_irq_handler+0x1CC : 1e12f20 >			  ## RF_ble.c:955:23
 1e12ee2:    35 fd fc 29       	r5 = r2 & 4294967043			  ## RF_ble.c:962:34
 1e12ee6:    42 80             	r2 += 4			  ## RF_ble.c:962:34
 1e12ee8:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:962:34
 1e12eec:    52 ba             	r2 |= r5			  ## RF_ble.c:962:34
 1e12eee:    1a 52             	h[r1 + 2] = r2			  ## RF_ble.c:962:34
 1e12ef0:    e3 e1 19 10       	if (r3 != 30) goto 50 <ble_event_irq_handler+0x1D2 : 1e12f26 >			  ## RF_ble.c:962:34
 1e12ef4:    56 18             	goto 172 <ble_event_irq_handler+0x24E : 1e12fa2 >			  ## RF_ble.c:962:34
 1e12ef6:    02 fd 02 39       	r2 = r3 | 2			  ## RF_ble.c:1043:33
 1e12efa:    32 e0 52 10       	if (r2 != 3) goto 164 <ble_event_irq_handler+0x24E : 1e12fa2 >			  ## RF_ble.c:1043:33
 1e12efe:    12 52             	r2 = h[r1 + 2] (u)
 1e12f00:    45 05             	r5 = r5.b0 (u)			  ## RF_ble.c:1044:32
 1e12f02:    66 70             	r6 = 6			  ## RF_ble.c:1044:32
 1e12f04:    d0 fe 60 65       	r6 = r5 % r6 (u)			  ## RF_ble.c:1044:32
 1e12f08:    35 fd 1f 2a       	r5 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e12f0c:    31 2c             	if (r6 == 0) goto 98 <ble_event_irq_handler+0x21C : 1e12f70 >			  ## RF_ble.c:1044:13
 1e12f0e:    33 e0 34 00       	if (r3 == 3) goto 104 <ble_event_irq_handler+0x226 : 1e12f7a >
 1e12f12:    03 fd 11 5a       	r3 = r5 | 4352			  ## RF_ble.c:882:23
 1e12f16:    1b 52             	h[r1 + 2] = r3			  ## RF_ble.c:882:23
 1e12f18:    2d f3 43 20       	if ((r2 & 8192) != 0) goto 134 <ble_event_irq_handler+0x24E : 1e12fa2 >			  ## RF_ble.c:882:23
 1e12f1c:    11 71             	r1 = 17			  ## RF_ble.c:886:28
 1e12f1e:    3f 18             	goto 126 <ble_event_irq_handler+0x24A : 1e12f9e >			  ## RF_ble.c:886:28
 1e12f20:    32 fd fc 29       	r2 = r2 & 4294967043			  ## RF_ble.c:959:35
 1e12f24:    1a 52             	h[r1 + 2] = r2			  ## RF_ble.c:959:35
 1e12f26:    25 63             	r5 = b[r1 + 18] (u)			  ## RF_ble.c:970:17
 1e12f28:    02 2a             	if (r5 == 0) goto 4 <ble_event_irq_handler+0x1DA : 1e12f2e >			  ## RF_ble.c:970:17
 1e12f2a:    35 63             	r5 = b[r1 + 19] (u)			  ## RF_ble.c:970:35
 1e12f2c:    2d 2a             	if (r5 == 0) goto 90 <ble_event_irq_handler+0x234 : 1e12f88 >			  ## RF_ble.c:970:35
 1e12f2e:    35 43             	r5 = [r1 + 76]			  ## list.h:124:18
 1e12f30:    16 fc 4c 00       	r6 = r1 + 76			  ## RF_ble.c:980:31
 1e12f34:    65 f2 2b 10       	if (r5 != r6) goto 86 <ble_event_irq_handler+0x23A : 1e12f8e >
 1e12f38:    61 ff f0 29 28 00 	if ((r2 & 240) != 0) goto 80 <ble_event_irq_handler+0x23A : 1e12f8e >
 1e12f3e:    55 43             	r5 = [r1 + 84]			  ## list.h:124:18
 1e12f40:    16 fc 54 00       	r6 = r1 + 84			  ## RF_ble.c:1007:31
 1e12f44:    65 f2 b1 01       	if (r5 == r6) goto 866 <ble_event_irq_handler+0x556 : 1e132aa >			  ## RF_ble.c:1007:13
 1e12f48:    33 fd 1f 2a       	r3 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e12f4c:    03 fd 1c 3a       	r3 = r3 | 7168			  ## RF_ble.c:882:23
 1e12f50:    1b 52             	h[r1 + 2] = r3			  ## RF_ble.c:882:23
 1e12f52:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x208 : 1e12f5c >			  ## RF_ble.c:882:23
 1e12f56:    c5 71             	r5 = 28			  ## RF_ble.c:886:28
 1e12f58:    2d 50             	h[r0 + 4] = r5			  ## RF_ble.c:886:28
 1e12f5a:    1d 50             	h[r0 + 2] = r5			  ## RF_ble.c:887:28
 1e12f5c:    c0 ff 03 fc 00 00 	r0 = 64515 <boot_arg_list+0x3 : fc03 >			  ## RF_ble.c:1009:34
 1e12f62:    50 b7             	r0 &= r3			  ## RF_ble.c:1009:34
 1e12f64:    42 80             	r2 += 4			  ## RF_ble.c:1009:34
 1e12f66:    22 fd fc 29       	r2 = r2 & 252			  ## RF_ble.c:1009:34
 1e12f6a:    50 b4             	r0 |= r2			  ## RF_ble.c:1009:34
 1e12f6c:    18 52             	h[r1 + 2] = r0			  ## RF_ble.c:1009:34
 1e12f6e:    19 18             	goto 50 <ble_event_irq_handler+0x24E : 1e12fa2 >			  ## RF_ble.c:1009:34
 1e12f70:    33 e0 03 10       	if (r3 != 3) goto 6 <ble_event_irq_handler+0x226 : 1e12f7a >
 1e12f74:    03 fd 1e 5a       	r3 = r5 | 7680			  ## RF_ble.c:882:23
 1e12f78:    0e 18             	goto 28 <ble_event_irq_handler+0x242 : 1e12f96 >			  ## RF_ble.c:882:23
 1e12f7a:    03 fd 1a 5a       	r3 = r5 | 6656
 1e12f7e:    1b 52             	h[r1 + 2] = r3
 1e12f80:    2d f3 0f 20       	if ((r2 & 8192) != 0) goto 30 <ble_event_irq_handler+0x24E : 1e12fa2 >
 1e12f84:    a1 71             	r1 = 26
 1e12f86:    0b 18             	goto 22 <ble_event_irq_handler+0x24A : 1e12f9e >
 1e12f88:    60 ff fc 29 0a 00 	if ((r2 & 252) == 0) goto 20 <ble_event_irq_handler+0x24E : 1e12fa2 >
 1e12f8e:    33 fd 1f 2a       	r3 = r2 & 4294959359
 1e12f92:    03 fd 1e 3a       	r3 = r3 | 7680
 1e12f96:    1b 52             	h[r1 + 2] = r3
 1e12f98:    2d f3 03 20       	if ((r2 & 8192) != 0) goto 6 <ble_event_irq_handler+0x24E : 1e12fa2 >
 1e12f9c:    e1 71             	r1 = 30
 1e12f9e:    29 50             	h[r0 + 4] = r1
 1e12fa0:    19 50             	h[r0 + 2] = r1
 1e12fa2:    00 48             	r0 = [r4 + 0]			  ## RF_ble.c:421:34
 1e12fa4:    00 e0 68 01       	if (r0 == 0) goto 720 <ble_event_irq_handler+0x524 : 1e13278 >
 1e12fa8:    01 fc 44 01       	r1 = r0 + 324
 1e12fac:    e2 62             	r2 = b[r1 + 14] (u)			  ## RF_ble.c:426:20
 1e12fae:    72 b0             	r2 &= 4294967294			  ## RF_ble.c:428:32
 1e12fb0:    62 e0 11 10       	if (r2 != 6) goto 34 <ble_event_irq_handler+0x282 : 1e12fd6 >			  ## RF_ble.c:428:32
 1e12fb4:    22 63             	r2 = b[r1 + 18] (u)			  ## RF_ble.c:429:17
 1e12fb6:    0f 24             	if (r2 == 0) goto 30 <ble_event_irq_handler+0x282 : 1e12fd6 >			  ## RF_ble.c:429:17
 1e12fb8:    f2 42             	r2 = [r1 + 60]			  ## RF_ble.c:433:14
 1e12fba:    02 34             	if (r2 != 0) goto 4 <ble_event_irq_handler+0x26C : 1e12fc0 >			  ## RF_ble.c:433:14
 1e12fbc:    02 43             	r2 = [r1 + 64]			  ## RF_ble.c:433:37
 1e12fbe:    d6 24             	if (r2 == 0) goto 428 <ble_event_irq_handler+0x418 : 1e1316c >			  ## RF_ble.c:433:37
 1e12fc0:    b2 52             	r2 = h[r1 + 22] (u)			  ## RF_ble.c:410:17
 1e12fc2:    63 93             	r3 = r1 + 22			  ## RF_ble.c:410:17
 1e12fc4:    02 34             	if (r2 != 0) goto 4 <ble_event_irq_handler+0x276 : 1e12fca >			  ## RF_ble.c:410:17
 1e12fc6:    12 70             	r2 = 1
 1e12fc8:    ba 52             	h[r1 + 22] = r2
 1e12fca:    20 fc ff ff       	r0 = r2 + -1			  ## RF_ble.c:446:25
 1e12fce:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:446:25
 1e12fd0:    40 08             	r0 = r4			  ## RF_ble.c:448:13
 1e12fd2:    bf f3 c6 f5       	call -5236 <__set_latency_disable : 1e11b62 >			  ## RF_ble.c:448:13
 1e12fd6:    07 48             	r7 = [r4 + 0]			  ## RF_ble.c:4876:31
 1e12fd8:    07 e0 4e 01       	if (r7 == 0) goto 668 <ble_event_irq_handler+0x524 : 1e13278 >
 1e12fdc:    75 fc 44 01       	r5 = r7 + 324
 1e12fe0:    10 6a             	r0 = b[r5 + 1] (u)			  ## RF_ble.c:4884:14
 1e12fe2:    b4 20             	if (r0 == 0) goto 360 <ble_event_irq_handler+0x3F8 : 1e1314c >			  ## RF_ble.c:4884:14
 1e12fe4:    e0 6a             	r0 = b[r5 + 14] (u)			  ## RF_ble.c:4892:21
 1e12fe6:    70 e0 43 11       	if (r0 != 7) goto 646 <ble_event_irq_handler+0x51C : 1e13270 >
 1e12fea:    20 6a             	r0 = b[r5 + 2] (u)			  ## RF_ble.c:4905:13
 1e12fec:    c1 ff 40 0f 00 00 	r1 = 3904 <ble_window_autozoom.widen : f40 >			  ## RF_ble.c:4905:13
 1e12ff2:    20 f3 b1 00       	if ((r0 & 1) != 0) goto 354 <ble_event_irq_handler+0x404 : 1e13158 >			  ## RF_ble.c:4905:13
 1e12ff6:    0b f6 00 10       	r11 = [r1 + 0]			  ## RF_ble.c:4915:31
 1e12ffa:    10 4a             	r0 = [r5 + 4]			  ## RF_ble.c:4915:23
 1e12ffc:    b0 09             	r0 += r11			  ## RF_ble.c:4915:29
 1e12ffe:    40 86             	r0 += 100			  ## RF_ble.c:4915:37
 1e13000:    08 ff cf 07 35 01 	if (r0 > 1999) goto 618 <ble_event_irq_handler+0x51C : 1e13270 >			  ## RF_ble.c:4915:37
 1e13006:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:4918:71
 1e13008:    18 02             	[sp+4] = r0			  ## RF_ble.c:4822:16
 1e1300a:    40 08             	r0 = r4			  ## RF_ble.c:4822:16
 1e1300c:    96 16             	call -724 <__get_clkn : 1e12d3a >			  ## RF_ble.c:4822:16
 1e1300e:    06 f6 00 d0       	r6 = [r13 + 0]			  ## RF_ble.c:4824:22
 1e13012:    0c f6 08 d0       	r12 = [r13 + 8]			  ## RF_ble.c:4824:49
 1e13016:    28 02             	[sp+8] = r0			  ## RF_ble.c:4822:16
 1e13018:    97 f3 c0 9e       	call 3095936 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e1301c:    08 00             	csync			  ## RF_ble.c:281:5
 1e1301e:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e13022:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e13024:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e13026:    c1 71             	r1 = 28			  ## RF_ble.c:147:17
 1e13028:    e0 fe 10 00       	r0 = r0 / r1 (s)			  ## RF_ble.c:147:17
 1e1302c:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e1302e:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:286:50
 1e13032:    50 b3             	r0 &= r1			  ## RF_ble.c:286:50
 1e13034:    01 fb 02 1c       	r1 = 7170 <btstack_stack+0x6 : 1c02 >			  ## RF_ble.c:286:56
 1e13038:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1303a:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:286:21
 1e1303e:    08 00             	csync			  ## RF_ble.c:287:5
 1e13040:    00 f6 18 d0       	r0 = [r13 + 24]			  ## RF_ble.c:288:13
 1e13044:    32 04             	r2 = r0.l (s)			  ## RF_ble.c:4828:9
 1e13046:    01 fd f8 2a       	r1 = r2 | 63488			  ## RF_ble.c:4829:21
 1e1304a:    0b f3 01 20       	if ((r2 & 2048) == 0) goto 2 <ble_event_irq_handler+0x2FC : 1e13050 >			  ## RF_ble.c:4829:21
 1e1304e:    10 08             	r0 = r1			  ## RF_ble.c:4828:9
 1e13050:    32 04             	r2 = r0.l (s)			  ## RF_ble.c:4832:21
 1e13052:    00 fb ff 03       	r0 = 1023 <BTCTLER_LE_RAM_TOTAL+0x21 : 3ff >			  ## RF_ble.c:4824:37
 1e13056:    50 bd             	r0 &= r6			  ## RF_ble.c:4824:37
 1e13058:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## RF_ble.c:4824:19
 1e1305c:    20 b2             	r0 = r1 - r0			  ## RF_ble.c:4824:19
 1e1305e:    e4 fd 00 1c       	r1 = r12.b0 (u)			  ## RF_ble.c:4824:64
 1e13062:    60 b0             	r0 = r0 - r1			  ## RF_ble.c:4824:46
 1e13064:    20 04             	r0 = r0.l (u)			  ## RF_ble.c:4832:11
 1e13066:    0a 02             	[sp] = r2			  ## RF_ble.c:4832:11
 1e13068:    0c b4             	r12 = r2 + r0			  ## RF_ble.c:4832:19
 1e1306a:    16 70             	r6 = 1			  ## RF_ble.c:4832:19
 1e1306c:    1e 70             	r14 = 1			  ## RF_ble.c:4832:34
 1e1306e:    0c ff 70 c2 01 00 	ifs (r12 > 624) goto 2 <ble_event_irq_handler+0x322 : 1e13076 >			  ## RF_ble.c:4832:34
 1e13074:    0e 70             	r14 = 0			  ## RF_ble.c:4832:34
 1e13076:    c8 fc 9c ff       	r8 = r12 + -100			  ## RF_ble.c:4832:69
 1e1307a:    1a 70             	r10 = 1			  ## RF_ble.c:4832:85
 1e1307c:    0b ff 71 82 01 00 	ifs (r8 < 625) goto 2 <ble_event_irq_handler+0x330 : 1e13084 >			  ## RF_ble.c:4832:85
 1e13082:    0a 70             	r10 = 0			  ## RF_ble.c:4832:85
 1e13084:    97 f3 88 9e       	call 3095824 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e13088:    0f fb 9c ff       	r15 = -100 <bank_code_load_addr+0x1E56F0 : 1ffff9c >			  ## RF_ble.c:296:5
 1e1308c:    ae f1 11 00       	if ((r14 & r10) != 0) goto 34 <ble_event_irq_handler+0x35E : 1e130b2 >			  ## RF_ble.c:296:5
 1e13090:    4c e6 0f 30       	if (r12 < 100) goto 30 <ble_event_irq_handler+0x35E : 1e130b2 >
 1e13094:    10 70             	r0 = 1
 1e13096:    0b ff 8f 8d 01 00 	ifs (r8 < -625) goto 2 <ble_event_irq_handler+0x34A : 1e1309e >
 1e1309c:    00 70             	r0 = 0
 1e1309e:    f2 fd f8 1c       	r1 = r12 >> 31			  ## RF_ble.c:4838:41
 1e130a2:    0f fb 0d 02       	r15 = 525 <BTCTLER_CL_RAM_TOTAL+0x29 : 20d >			  ## RF_ble.c:4841:5
 1e130a6:    01 f1 02 00       	if ((r1 & r0) != 0) goto 4 <ble_event_irq_handler+0x35A : 1e130ae >			  ## RF_ble.c:4841:5
 1e130aa:    0f fb 9c ff       	r15 = -100 <bank_code_load_addr+0x1E56F0 : 1ffff9c >			  ## RF_ble.c:4841:5
 1e130ae:    e2 fd 00 61       	r6 = r1 & r0			  ## RF_ble.c:4838:46
 1e130b2:    20 02             	r0 = [sp+8]			  ## RF_ble.c:4845:9
 1e130b4:    06 f2 d6 20       	if (r6 >= r0) goto 428 <ble_event_irq_handler+0x510 : 1e13264 >			  ## RF_ble.c:4845:9
 1e130b8:    f0 fd 08 0b       	r0 = r11 << 1			  ## RF_ble.c:4918:106
 1e130bc:    11 02             	r1 = [sp+4]			  ## RF_ble.c:4918:71
 1e130be:    10 09             	r0 += r1			  ## RF_ble.c:4918:71
 1e130c0:    08 fc c8 00       	r8 = r0 + 200			  ## RF_ble.c:4918:78
 1e130c4:    97 f3 6a 9e       	call 3095764 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e130c8:    08 00             	csync			  ## RF_ble.c:304:5
 1e130ca:    16 f6 14 d0       	[r13 + 20] = r6			  ## RF_ble.c:306:21
 1e130ce:    08 00             	csync			  ## RF_ble.c:307:5
 1e130d0:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e130d4:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e130d6:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e130d8:    ca 71             	r10 = 28			  ## RF_ble.c:147:17
 1e130da:    e0 fe a0 00       	r0 = r0 / r10 (s)			  ## RF_ble.c:147:17
 1e130de:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e130e0:    20 fd 7f 00       	r0 = r0 & 4080			  ## RF_ble.c:308:50
 1e130e4:    01 fb 05 40       	r1 = 16389 <check_flash_type+0x51 : 4005 >			  ## RF_ble.c:308:67
 1e130e8:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e130ea:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e130ee:    00 02             	r0 = [sp]			  ## RF_ble.c:308:21
 1e130f0:    f0 09             	r0 += r15			  ## RF_ble.c:308:21
 1e130f2:    30 04             	r0 = r0.l (s)			  ## RF_ble.c:4852:44
 1e130f4:    06 fd 80 0a       	r6 = r0 | 32768			  ## RF_ble.c:4852:42
 1e130f8:    97 f3 4e 9e       	call 3095708 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e130fc:    97 f3 4e 9e       	call 3095708 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e13100:    08 00             	csync			  ## RF_ble.c:304:5
 1e13102:    16 f6 14 d0       	[r13 + 20] = r6			  ## RF_ble.c:306:21
 1e13106:    08 00             	csync			  ## RF_ble.c:307:5
 1e13108:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e1310c:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1310e:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e13110:    e0 fe a0 00       	r0 = r0 / r10 (s)			  ## RF_ble.c:147:17
 1e13114:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e13116:    01 fb f0 03       	r1 = 1008 <BTCTLER_LE_RAM_TOTAL+0x12 : 3f0 >			  ## RF_ble.c:308:50
 1e1311a:    50 b3             	r0 &= r1			  ## RF_ble.c:308:50
 1e1311c:    01 fb 05 1c       	r1 = 7173 <btstack_stack+0x9 : 1c05 >			  ## RF_ble.c:308:67
 1e13120:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e13122:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e13126:    97 f3 37 9e       	call 3095662 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e1312a:    18 f7 22 70       	h[r7 + 34] = r8			  ## RF_ble.c:4854:26
 1e1312e:    f2 fd 80 08       	r0 = r8 >> 16			  ## RF_ble.c:4856:35
 1e13132:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4856:26
 1e13134:    c0 ff 40 0f 00 00 	r0 = 3904 <ble_window_autozoom.widen : f40 >			  ## RF_ble.c:4856:26
 1e1313a:    01 08             	r1 = r0			  ## RF_ble.c:4856:26
 1e1313c:    00 42             	r0 = [r1 + 0]			  ## RF_ble.c:4920:27
 1e1313e:    40 86             	r0 += 100			  ## RF_ble.c:4920:27
 1e13140:    08 42             	[r1 + 0] = r0			  ## RF_ble.c:4920:27
 1e13142:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4856:17
 1e13146:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4854:17
 1e1314a:    90 18             	goto 288 <ble_event_irq_handler+0x518 : 1e1326c >			  ## RF_ble.c:4854:17
 1e1314c:    00 f7 58 70       	r0 = h[r7 + 88] (u)			  ## RF_ble.c:4885:35
 1e13150:    49 21             	if (r0 == 0) goto -366 <ble_event_irq_handler+0x290 : 1e12fe4 >			  ## RF_ble.c:4885:35
 1e13152:    10 70             	r0 = 1			  ## RF_ble.c:4887:23
 1e13154:    18 6a             	b[r5 + 1] = r0			  ## RF_ble.c:4887:23
 1e13156:    90 18             	goto 288 <ble_event_irq_handler+0x524 : 1e13278 >			  ## RF_ble.c:4887:23
 1e13158:    00 42             	r0 = [r1 + 0]			  ## RF_ble.c:4907:17
 1e1315a:    40 e6 89 30       	if (r0 < 100) goto 274 <ble_event_irq_handler+0x51C : 1e13270 >			  ## RF_ble.c:4907:17
 1e1315e:    c0 f4 00 19       	[r1 + 0] = 0			  ## RF_ble.c:4908:23
 1e13162:    20 4a             	r0 = [r5 + 8]			  ## RF_ble.c:4910:42
 1e13164:    18 5f             	h[r7 + 34] = r0			  ## RF_ble.c:4865:26
 1e13166:    00 d4             	r0 = r0 >> 16			  ## RF_ble.c:4867:35
 1e13168:    28 5f             	h[r7 + 36] = r0			  ## RF_ble.c:4867:26
 1e1316a:    82 18             	goto 260 <ble_event_irq_handler+0x51C : 1e13270 >			  ## RF_ble.c:4867:26
 1e1316c:    13 52             	r3 = h[r1 + 2] (u)			  ## RF_ble.c:436:25
 1e1316e:    b2 52             	r2 = h[r1 + 22] (u)			  ## RF_ble.c:436:25
 1e13170:    23 fd 02 39       	r3 = r3 & 2			  ## RF_ble.c:436:21
 1e13174:    e0 fd 20 53       	r5 = r3 | r2			  ## RF_ble.c:436:20
 1e13178:    63 93             	r3 = r1 + 22
 1e1317a:    25 2b             	if (r5 == 0) goto -438 <ble_event_irq_handler+0x272 : 1e12fc6 >
 1e1317c:    26 35             	if (r2 != 0) goto -436 <ble_event_irq_handler+0x276 : 1e12fca >
 1e1317e:    02 70             	r2 = 0
 1e13180:    3a 63             	b[r1 + 19] = r2			  ## RF_ble.c:367:27
 1e13182:    12 52             	r2 = h[r1 + 2] (u)
 1e13184:    33 fd 1f 2a       	r3 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e13188:    03 fd 1e 3a       	r3 = r3 | 7680			  ## RF_ble.c:882:23
 1e1318c:    1b 52             	h[r1 + 2] = r3			  ## RF_ble.c:882:23
 1e1318e:    2d f3 05 20       	if ((r2 & 8192) != 0) goto 10 <ble_event_irq_handler+0x448 : 1e1319c >			  ## RF_ble.c:882:23
 1e13192:    e1 71             	r1 = 30			  ## RF_ble.c:886:28
 1e13194:    11 f7 60 00       	h[r0 + 96] = r1			  ## RF_ble.c:886:28
 1e13198:    11 f7 5e 00       	h[r0 + 94] = r1			  ## RF_ble.c:887:28
 1e1319c:    97 f3 fe 9d       	call 3095548 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e131a0:    08 00             	csync			  ## RF_ble.c:281:5
 1e131a2:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e131a6:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e131a8:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e131aa:    c5 71             	r5 = 28			  ## RF_ble.c:147:17
 1e131ac:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e131b0:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e131b2:    06 fb f0 07       	r6 = 2032 <report_data_size+0x10 : 7f0 >			  ## RF_ble.c:286:50
 1e131b6:    50 bd             	r0 &= r6			  ## RF_ble.c:286:50
 1e131b8:    21 9d             	r1 = r6 + 18			  ## RF_ble.c:286:56
 1e131ba:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e131bc:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:286:21
 1e131c0:    08 00             	csync			  ## RF_ble.c:287:5
 1e131c2:    00 f6 18 d0       	r0 = [r13 + 24]			  ## RF_ble.c:288:13
 1e131c6:    c1 ff ff f7 00 00 	r1 = 63487 <BD19_SDK_RAM_SIZE+0x7 : f7ff >			  ## RF_ble.c:381:33
 1e131cc:    50 b3             	r0 &= r1			  ## RF_ble.c:381:33
 1e131ce:    07 fd 08 0a       	r7 = r0 | 2048			  ## RF_ble.c:381:33
 1e131d2:    97 f3 e1 9d       	call 3095490 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e131d6:    97 f3 e1 9d       	call 3095490 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e131da:    08 00             	csync			  ## RF_ble.c:304:5
 1e131dc:    17 f6 14 d0       	[r13 + 20] = r7			  ## RF_ble.c:306:21
 1e131e0:    08 00             	csync			  ## RF_ble.c:307:5
 1e131e2:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e131e6:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e131e8:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e131ea:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e131ee:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e131f0:    50 bd             	r0 &= r6			  ## RF_ble.c:308:50
 1e131f2:    51 9d             	r1 = r6 + 21			  ## RF_ble.c:308:67
 1e131f4:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e131f6:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e131fa:    97 f3 cd 9d       	call 3095450 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e131fe:    97 f3 cd 9d       	call 3095450 <local_irq_disable : 106d9c >			  ## RF_ble.c:281:5
 1e13202:    08 00             	csync			  ## RF_ble.c:281:5
 1e13204:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e13208:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e1320a:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1320c:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e13210:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:286:50
 1e13212:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:286:50
 1e13216:    01 fb 02 24       	r1 = 9218 <pmu_voltage+0x46 : 2402 >			  ## RF_ble.c:286:56
 1e1321a:    50 b2             	r0 |= r1			  ## RF_ble.c:286:56
 1e1321c:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:286:21
 1e13220:    08 00             	csync			  ## RF_ble.c:287:5
 1e13222:    00 f6 18 d0       	r0 = [r13 + 24]			  ## RF_ble.c:288:13
 1e13226:    c1 ff bf ff 00 00 	r1 = 65471 <_IRQ_MEM_ADDR+0xBF : ffbf >			  ## RF_ble.c:388:33
 1e1322c:    50 b3             	r0 &= r1			  ## RF_ble.c:388:33
 1e1322e:    06 fd 40 09       	r6 = r0 | 64			  ## RF_ble.c:388:33
 1e13232:    97 f3 b1 9d       	call 3095394 <local_irq_enable : 106d98 >			  ## RF_ble.c:296:5
 1e13236:    97 f3 b1 9d       	call 3095394 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1323a:    08 00             	csync			  ## RF_ble.c:304:5
 1e1323c:    16 f6 14 d0       	[r13 + 20] = r6			  ## RF_ble.c:306:21
 1e13240:    08 00             	csync			  ## RF_ble.c:307:5
 1e13242:    00 f6 00 90       	r0 = [r9 + 0]			  ## RF_ble.c:147:19
 1e13246:    40 40             	r0 = [r0 + 16]			  ## RF_ble.c:147:35
 1e13248:    20 b8             	r0 = r4 - r0			  ## RF_ble.c:147:17
 1e1324a:    e0 fe 50 00       	r0 = r0 / r5 (s)			  ## RF_ble.c:147:17
 1e1324e:    00 c1             	r0 = r0 << 4			  ## RF_ble.c:308:50
 1e13250:    20 fd 3f 00       	r0 = r0 & 3056			  ## RF_ble.c:308:50
 1e13254:    01 fb 05 24       	r1 = 9221 <pmu_voltage+0x49 : 2405 >			  ## RF_ble.c:308:67
 1e13258:    50 b2             	r0 |= r1			  ## RF_ble.c:308:67
 1e1325a:    10 f6 10 d0       	[r13 + 16] = r0			  ## RF_ble.c:308:21
 1e1325e:    97 f3 9b 9d       	call 3095350 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5
 1e13262:    b9 1e             	goto -654 <ble_event_irq_handler+0x282 : 1e12fd6 >			  ## RF_ble.c:310:5
 1e13264:    70 fc 22 00       	r0 = r7 + 34			  ## RF_ble.c:4922:74
 1e13268:    71 fc 24 00       	r1 = r7 + 36			  ## RF_ble.c:4922:43
 1e1326c:    01 52             	r1 = h[r1 + 0] (u)			  ## RF_ble.c:4922:43
 1e1326e:    00 50             	r0 = h[r0 + 0] (u)			  ## RF_ble.c:4922:74
 1e13270:    10 5a             	r0 = h[r5 + 2] (u)			  ## RF_ble.c:4934:19
 1e13272:    30 fd 03 09       	r0 = r0 & 4294967292			  ## RF_ble.c:4935:26
 1e13276:    18 5a             	h[r5 + 2] = r0			  ## RF_ble.c:4935:26
 1e13278:    50 48             	r0 = [r4 + 20]			  ## le_low_power.c:688:13
 1e1327a:    02 20             	if (r0 == 0) goto 4 <ble_event_irq_handler+0x52C : 1e13280 >			  ## le_low_power.c:688:13
 1e1327c:    bf f3 ed 94       	call -54822 <low_power_request : 1e05c5a >			  ## le_low_power.c:689:9
 1e13280:    00 f6 44 d0       	r0 = [r13 + 68]			  ## RF_ble.c:3048:13
 1e13284:    01 f6 40 d0       	r1 = [r13 + 64]			  ## RF_ble.c:3048:28
 1e13288:    50 b3             	r0 &= r1			  ## RF_ble.c:3048:26
 1e1328a:    00 f3 02 00       	if ((r0 & 1) == 0) goto 4 <ble_event_irq_handler+0x53E : 1e13292 >			  ## RF_ble.c:3048:26
 1e1328e:    10 f4 01 da       	[r13 + 64] |= 256			  ## RF_ble.c:3049:26
 1e13292:    00 f6 2c d0       	r0 = [r13 + 44]			  ## RF_ble.c:3057:9
 1e13296:    10 04             	r0 = r0.b0 (s)			  ## RF_ble.c:3057:24
 1e13298:    f0 ef 02 c0       	ifs (r0 > -1) goto 4 <ble_event_irq_handler+0x54C : 1e132a0 >			  ## RF_ble.c:3057:24
 1e1329c:    0b f4 40 d9       	[r13 + 44] |= 64			  ## RF_ble.c:3058:25
 1e132a0:    06 0a             	sp += 12
 1e132a2:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## RF_ble.c:3067:1
 1e132a6:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:3067:1
 1e132a8:    22 00             	rti			  ## RF_ble.c:3067:1
 1e132aa:    35 fc ff ff       	r5 = r3 + -1			  ## RF_ble.c:1022:9
 1e132ae:    46 05             	r6 = r5.b0 (u)			  ## RF_ble.c:1022:9
 1e132b0:    b3 71             	r3 = 27			  ## RF_ble.c:1022:9
 1e132b2:    b6 e1 0b 80       	if (r6 > 27) goto 22 <ble_event_irq_handler+0x578 : 1e132cc >			  ## RF_ble.c:1022:9
 1e132b6:    33 71             	r3 = 19
 1e132b8:    96 e1 08 00       	if (r6 == 25) goto 16 <ble_event_irq_handler+0x578 : 1e132cc >
 1e132bc:    53 08             	r3 = r5
 1e132be:    36 e1 05 80       	if (r6 > 19) goto 10 <ble_event_irq_handler+0x578 : 1e132cc >
 1e132c2:    33 71             	r3 = 19			  ## RF_ble.c:1034:13
 1e132c4:    60 ff fc 29 01 00 	if ((r2 & 252) == 0) goto 2 <ble_event_irq_handler+0x578 : 1e132cc >			  ## RF_ble.c:1034:13
 1e132ca:    c3 71             	r3 = 28			  ## RF_ble.c:1034:13
 1e132cc:    25 fd 1f 39       	r5 = r3 & 31			  ## RF_ble.c:882:23
 1e132d0:    36 fd 1f 2a       	r6 = r2 & 4294959359			  ## RF_ble.c:882:23
 1e132d4:    c5 fd 40 65       	r6 <= insert(r5, p:8, l:5)			  ## RF_ble.c:882:23
 1e132d8:    1e 52             	h[r1 + 2] = r6			  ## RF_ble.c:882:23
 1e132da:    2d f3 62 2e       	if ((r2 & 8192) != 0) goto -828 <ble_event_irq_handler+0x24E : 1e12fa2 >			  ## RF_ble.c:882:23
 1e132de:    c1 04             	r1 = r3.b0 (u)			  ## RF_ble.c:886:30
 1e132e0:    5e 1e             	goto -836 <ble_event_irq_handler+0x24A : 1e12f9e >			  ## RF_ble.c:886:30


__ble_rx_buf_process_conn:
 1e132e2:    77 01             	[--sp] = {rets, r7-r4}			  ## RF_ble.c:2294:0
 1e132e4:    24 08             	r4 = r2			  ## RF_ble.c:2294:0
 1e132e6:    15 08             	r5 = r1			  ## RF_ble.c:2294:0
 1e132e8:    06 08             	r6 = r0			  ## RF_ble.c:2294:0
 1e132ea:    1a 28             	if (r4 == 0) goto 52 <__ble_rx_buf_process_conn+0x3E : 1e13320 >			  ## RF_ble.c:2294:0
 1e132ec:    a8 c0             	r0 = r5 << 2			  ## RF_ble.c:2308:9
 1e132ee:    07 bc             	r7 = r6 + r0			  ## RF_ble.c:2308:9
 1e132f0:    f0 7f             	r0 = 255			  ## RF_ble.c:2308:23
 1e132f2:    bf f3 ee f2       	call -6692 <hw_alloc_rx : 1e118d2 >			  ## RF_ble.c:2308:23
 1e132f6:    10 f6 78 71       	[r7 + 376] = r0			  ## RF_ble.c:2308:21
 1e132fa:    16 20             	if (r0 == 0) goto 44 <__ble_rx_buf_process_conn+0x46 : 1e13328 >			  ## RF_ble.c:2308:21
 1e132fc:    e1 9d             	r1 = r6 + 30			  ## RF_ble.c:2307:67
 1e132fe:    63 fc 20 00       	r3 = r6 + 32			  ## RF_ble.c:2307:42
 1e13302:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x24 : 1e13306 >			  ## RF_ble.c:2307:42
 1e13304:    13 08             	r3 = r1			  ## RF_ble.c:2307:18
 1e13306:    40 81             	r0 += 20			  ## RF_ble.c:2316:33
 1e13308:    bf f3 f1 f2       	call -6686 <PHY_TO_BLE : 1e118ee >			  ## RF_ble.c:2316:22
 1e1330c:    62 fc 66 00       	r2 = r6 + 102			  ## RF_ble.c:2321:60
 1e13310:    61 fc 67 00       	r1 = r6 + 103			  ## RF_ble.c:2321:38
 1e13314:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:2316:20
 1e13316:    01 3a             	if (r5 != 0) goto 2 <__ble_rx_buf_process_conn+0x38 : 1e1331a >			  ## RF_ble.c:2316:20
 1e13318:    21 08             	r1 = r2			  ## RF_ble.c:2321:21
 1e1331a:    00 62             	r0 = b[r1 + 0] (u)			  ## RF_ble.c:2322:9
 1e1331c:    70 b0             	r0 &= 4294967294			  ## RF_ble.c:2322:9
 1e1331e:    08 62             	b[r1 + 0] = r0			  ## RF_ble.c:2322:9
 1e13320:    10 70             	r0 = 1			  ## RF_ble.c:2304:9
 1e13322:    01 38             	if (r4 != 0) goto 2 <__ble_rx_buf_process_conn+0x44 : 1e13326 >			  ## RF_ble.c:2304:9
 1e13324:    00 70             	r0 = 0
 1e13326:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2328:1
 1e13328:    10 70             	r0 = 1
 1e1332a:    57 01             	{pc, r7-r4} = [sp++]			  ## RF_ble.c:2328:1


__hw_rx_buf_process:
 1e1332c:    7b 01             	[--sp] = {rets, r11-r4}			  ## RF_ble.c:2601:0
 1e1332e:    0a 08             	r10 = r0			  ## RF_ble.c:2601:0
 1e13330:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:2602:31
 1e13332:    04 fc 38 00       	r4 = r0 + 56			  ## RF_ble.c:2609:69
 1e13336:    03 fc 3a 00       	r3 = r0 + 58			  ## RF_ble.c:2609:40
 1e1333a:    18 08             	r8 = r1			  ## RF_ble.c:2609:40
 1e1333c:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x14 : 1e13340 >
 1e1333e:    43 08             	r3 = r4			  ## RF_ble.c:2609:14
 1e13340:    0b f7 00 30       	r11 = h[r3 + 0] (u)
 1e13344:    04 fc 26 00       	r4 = r0 + 38			  ## RF_ble.c:2607:69
 1e13348:    03 fc 28 00       	r3 = r0 + 40			  ## RF_ble.c:2607:40
 1e1334c:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x24 : 1e13350 >			  ## RF_ble.c:2607:40
 1e1334e:    43 08             	r3 = r4			  ## RF_ble.c:2607:14
 1e13350:    03 56             	r3 = h[r3 + 0] (u)
 1e13352:    06 fc 2a 00       	r6 = r0 + 42			  ## RF_ble.c:2608:69
 1e13356:    04 fc 2c 00       	r4 = r0 + 44			  ## RF_ble.c:2608:40
 1e1335a:    01 34             	if (r2 != 0) goto 2 <__hw_rx_buf_process+0x32 : 1e1335e >			  ## RF_ble.c:2608:40
 1e1335c:    64 08             	r4 = r6			  ## RF_ble.c:2608:14
 1e1335e:    02 58             	r2 = h[r4 + 0] (u)
 1e13360:    16 d2             	r6 = r2 >> 8			  ## RF_ble.c:2621:5
 1e13362:    14 fc f8 ff       	r4 = r1 + -8			  ## RF_ble.c:2621:5
 1e13366:    87 58             	r7 = h[r4 + 16] (u)			  ## RF_ble.c:2612:5
 1e13368:    2e 69             	b[r4 + 18] = r6			  ## RF_ble.c:2621:5
 1e1336a:    16 c1             	r6 = r2 << 4			  ## RF_ble.c:2622:5
 1e1336c:    26 fd 30 69       	r6 = r6 & 48			  ## RF_ble.c:2622:5
 1e13370:    92 c1             	r2 = r2 << 6			  ## RF_ble.c:2615:5
 1e13372:    25 fd 02 2a       	r5 = r2 & 512			  ## RF_ble.c:2623:5
 1e13376:    55 bc             	r5 |= r6			  ## RF_ble.c:2622:5
 1e13378:    26 fd 01 2a       	r6 = r2 & 256			  ## RF_ble.c:2624:5
 1e1337c:    55 bc             	r5 |= r6			  ## RF_ble.c:2623:5
 1e1337e:    26 fd 0f 39       	r6 = r3 & 15			  ## RF_ble.c:2612:5
 1e13382:    59 d0             	r1 = r3 >> 1			  ## RF_ble.c:2613:5
 1e13384:    21 fd 40 19       	r1 = r1 & 64			  ## RF_ble.c:2613:5
 1e13388:    51 bc             	r1 |= r6			  ## RF_ble.c:2612:5
 1e1338a:    5b c0             	r3 = r3 << 1			  ## RF_ble.c:2614:5
 1e1338c:    23 fd 80 39       	r3 = r3 & 128			  ## RF_ble.c:2614:5
 1e13390:    51 b6             	r1 |= r3			  ## RF_ble.c:2613:5
 1e13392:    22 fd 04 2a       	r2 = r2 & 1024			  ## RF_ble.c:2615:5
 1e13396:    51 b4             	r1 |= r2			  ## RF_ble.c:2614:5
 1e13398:    22 fd f8 7a       	r2 = r7 & 63488			  ## RF_ble.c:2622:5
 1e1339c:    51 b4             	r1 |= r2			  ## RF_ble.c:2622:5
 1e1339e:    51 ba             	r1 |= r5			  ## RF_ble.c:2624:5
 1e133a0:    89 58             	h[r4 + 16] = r1			  ## RF_ble.c:2624:5
 1e133a2:    f2 fd 40 1b       	r1 = r11 >> 8			  ## RF_ble.c:2629:20
 1e133a6:    22 fd 01 19       	r2 = r1 & 1			  ## RF_ble.c:2629:20
 1e133aa:    06 fc 2c 01       	r6 = r0 + 300			  ## RF_ble.c:2629:20
 1e133ae:    8a 6d             	b[r6 + 24] = r2			  ## RF_ble.c:2629:18
 1e133b0:    00 f3 03 10       	if ((r1 & 1) == 0) goto 6 <__hw_rx_buf_process+0x8E : 1e133ba >
 1e133b4:    d1 5c             	r1 = h[r6 + 26] (u)			  ## RF_ble.c:2632:30
 1e133b6:    91 b0             	r1 |= 2			  ## RF_ble.c:2632:30
 1e133b8:    d9 5c             	h[r6 + 26] = r1			  ## RF_ble.c:2632:30
 1e133ba:    01 f7 58 00       	r1 = h[r0 + 88] (u)			  ## RF_ble.c:2635:31
 1e133be:    b9 58             	h[r4 + 22] = r1			  ## RF_ble.c:2635:21
 1e133c0:    a1 51             	r1 = h[r0 + 52] (u)			  ## RF_ble.c:2636:31
 1e133c2:    39 69             	b[r4 + 19] = r1			  ## RF_ble.c:2636:21
 1e133c4:    01 4c             	r1 = [r6 + 0]			  ## analog_ble.c:168:40
 1e133c6:    0a d4             	r2 = r1 >> 16			  ## analog_ble.c:169:88
 1e133c8:    09 d2             	r1 = r1 >> 8			  ## analog_ble.c:169:54
 1e133ca:    01 fd c0 19       	r1 = r1 | 192			  ## analog_ble.c:169:34
 1e133ce:    11 fd 3f 19       	r1 = r1 ^ 63			  ## analog_ble.c:169:34
 1e133d2:    a1 b2             	r1 = r1 - r2			  ## analog_ble.c:169:68
 1e133d4:    49 69             	b[r4 + 20] = r1			  ## RF_ble.c:2637:21
 1e133d6:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2638:21
 1e133d8:    f1 b5             	r1 &= 4294965247			  ## RF_ble.c:2638:21
 1e133da:    89 58             	h[r4 + 16] = r1			  ## RF_ble.c:2638:21
 1e133dc:    02 fc 50 01       	r2 = r0 + 336			  ## RF_ble.c:2638:21
 1e133e0:    23 64             	r3 = b[r2 + 2] (u)			  ## RF_ble.c:2644:17
 1e133e2:    27 fd 0f b9       	r7 = r11 & 15			  ## RF_ble.c:2610:24
 1e133e6:    09 fc c4 01       	r9 = r0 + 452
 1e133ea:    13 e0 0b 10       	if (r3 != 1) goto 22 <__hw_rx_buf_process+0xD8 : 1e13404 >
 1e133ee:    01 f9 00 90       	r1 = b[r9 + 0] (u)			  ## RF_ble.c:2645:25
 1e133f2:    08 32             	if (r1 != 0) goto 16 <__hw_rx_buf_process+0xD8 : 1e13404 >			  ## RF_ble.c:2645:25
 1e133f4:    01 f7 58 02       	r1 = h[r0 + 600] (u)			  ## RF_ble.c:2646:17
 1e133f8:    21 e0 04 10       	if (r1 != 2) goto 8 <__hw_rx_buf_process+0xD8 : 1e13404 >			  ## RF_ble.c:2646:17
 1e133fc:    20 fb 64 14       	r1 = 1867776			  ## RF_ble.c:154:14
 1e13400:    00 f4 40 19       	[r1 + 0] |= 64			  ## RF_ble.c:154:14
 1e13404:    17 e0 1c 10       	if (r7 != 1) goto 56 <__hw_rx_buf_process+0x114 : 1e13440 >
 1e13408:    13 e0 33 00       	if (r3 == 1) goto 102 <__hw_rx_buf_process+0x146 : 1e13472 >			  ## RF_ble.c:2067:5
 1e1340c:    33 e0 39 00       	if (r3 == 3) goto 114 <__hw_rx_buf_process+0x156 : 1e13482 >
 1e13410:    23 e0 57 10       	if (r3 != 2) goto 174 <__hw_rx_buf_process+0x196 : 1e134c2 >
 1e13414:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:1968:17
 1e13416:    23 fd 0f 19       	r3 = r1 & 15			  ## RF_ble.c:1968:5
 1e1341a:    63 e0 52 80       	if (r3 > 6) goto 164 <__hw_rx_buf_process+0x196 : 1e134c2 >			  ## RF_ble.c:1968:5
 1e1341e:    15 70             	r5 = 1
 1e13420:    c5 0c             	r5 <<= r3
 1e13422:    61 ff 57 59 48 00 	if ((r5 & 87) != 0) goto 144 <__hw_rx_buf_process+0x18C : 1e134b8 >
 1e13428:    53 e0 4b 10       	if (r3 != 5) goto 150 <__hw_rx_buf_process+0x196 : 1e134c2 >
 1e1342c:    00 f9 e8 01       	r0 = b[r0 + 488] (u)			  ## RF_ble.c:1978:18
 1e13430:    48 30             	if (r0 != 0) goto 144 <__hw_rx_buf_process+0x196 : 1e134c2 >
 1e13432:    50 4d             	r0 = [r6 + 84]			  ## RF_ble.c:1979:17
 1e13434:    80 50             	r0 = h[r0 + 16] (u)			  ## RF_ble.c:1979:28
 1e13436:    20 fd 0f 09       	r0 = r0 & 15			  ## RF_ble.c:1979:28
 1e1343a:    10 e0 2d 00       	if (r0 == 1) goto 90 <__hw_rx_buf_process+0x16C : 1e13498 >			  ## RF_ble.c:1979:28
 1e1343e:    41 18             	goto 130 <__hw_rx_buf_process+0x196 : 1e134c2 >			  ## RF_ble.c:1979:28
 1e13440:    22 f3 0b b0       	if ((r11 & 4) != 0) goto 22 <__hw_rx_buf_process+0x12E : 1e1345a >
 1e13444:    03 f3 38 b0       	if ((r11 & 8) == 0) goto 112 <__hw_rx_buf_process+0x18C : 1e134b8 >
 1e13448:    00 70             	r0 = 0			  ## RF_ble.c:2663:13
 1e1344a:    28 69             	b[r4 + 18] = r0			  ## RF_ble.c:2663:13
 1e1344c:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:2663:13
 1e1344e:    30 fd 03 00       	r0 = r0 & 4294965199			  ## RF_ble.c:2663:13
 1e13452:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2663:13
 1e13456:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:2663:13
 1e13458:    68 18             	goto 208 <__hw_rx_buf_process+0x1FE : 1e1352a >			  ## RF_ble.c:2663:13
 1e1345a:    00 70             	r0 = 0			  ## RF_ble.c:2654:13
 1e1345c:    28 69             	b[r4 + 18] = r0			  ## RF_ble.c:2654:13
 1e1345e:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:2654:13
 1e13460:    30 fd 03 00       	r0 = r0 & 4294965199			  ## RF_ble.c:2654:13
 1e13464:    00 fd 01 00       	r0 = r0 | 2064			  ## RF_ble.c:2654:13
 1e13468:    88 58             	h[r4 + 16] = r0			  ## RF_ble.c:2654:13
 1e1346a:    d0 5c             	r0 = h[r6 + 26] (u)			  ## RF_ble.c:2655:34
 1e1346c:    f0 b0             	r0 &= 4294967293			  ## RF_ble.c:2655:34
 1e1346e:    d8 5c             	h[r6 + 26] = r0			  ## RF_ble.c:2655:34
 1e13470:    5c 18             	goto 184 <__hw_rx_buf_process+0x1FE : 1e1352a >			  ## RF_ble.c:2655:34
 1e13472:    80 58             	r0 = h[r4 + 16] (u)			  ## RF_ble.c:2000:17
 1e13474:    20 fd 0f 09       	r0 = r0 & 15			  ## RF_ble.c:2000:5
 1e13478:    30 e0 1e 00       	if (r0 == 3) goto 60 <__hw_rx_buf_process+0x18C : 1e134b8 >			  ## RF_ble.c:2000:5
 1e1347c:    50 e0 1c 00       	if (r0 == 5) goto 56 <__hw_rx_buf_process+0x18C : 1e134b8 >
 1e13480:    20 18             	goto 64 <__hw_rx_buf_process+0x196 : 1e134c2 >
 1e13482:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2018:17
 1e13484:    23 fd 0f 19       	r3 = r1 & 15			  ## RF_ble.c:2018:5
 1e13488:    63 e0 1b 80       	if (r3 > 6) goto 54 <__hw_rx_buf_process+0x196 : 1e134c2 >			  ## RF_ble.c:2018:5
 1e1348c:    15 70             	r5 = 1
 1e1348e:    f8 fd 30 35       	r3 = r5 << r3
 1e13492:    60 ff 55 39 0d 00 	if ((r3 & 85) == 0) goto 26 <__hw_rx_buf_process+0x186 : 1e134b2 >
 1e13498:    f0 65             	r0 = b[r2 + 31] (u)
 1e1349a:    81 fd 38 11       	r1 = uextra(r1, p:7, l:1)
 1e1349e:    10 f2 0b 10       	if (r0 != r1) goto 22 <__hw_rx_buf_process+0x18C : 1e134b8 >
 1e134a2:    60 fc 44 00       	r0 = r6 + 68
 1e134a6:    c1 99             	r1 = r4 + 28
 1e134a8:    62 70             	r2 = 6
 1e134aa:    97 f3 1f 9d       	call 3095102 <memcmp : 106eec >
 1e134ae:    04 30             	if (r0 != 0) goto 8 <__hw_rx_buf_process+0x18C : 1e134b8 >
 1e134b0:    08 18             	goto 16 <__hw_rx_buf_process+0x196 : 1e134c2 >
 1e134b2:    60 ff 28 39 02 00 	if ((r3 & 40) == 0) goto 4 <__hw_rx_buf_process+0x190 : 1e134bc >
 1e134b8:    80 08             	r0 = r8
 1e134ba:    a4 18             	goto 328 <__hw_rx_buf_process+0x2D8 : 1e13604 >
 1e134bc:    00 f9 e8 01       	r0 = b[r0 + 488] (u)			  ## RF_ble.c:2021:17
 1e134c0:    a4 20             	if (r0 == 0) goto 328 <__hw_rx_buf_process+0x2DE : 1e1360a >
 1e134c2:    00 f6 00 a0       	r0 = [r10 + 0]			  ## RF_ble.c:2242:31
 1e134c6:    05 fc 50 01       	r5 = r0 + 336
 1e134ca:    21 6a             	r1 = b[r5 + 2] (u)			  ## RF_ble.c:2243:18
 1e134cc:    21 e0 2d 10       	if (r1 != 2) goto 90 <__hw_rx_buf_process+0x1FE : 1e1352a >			  ## RF_ble.c:2243:18
 1e134d0:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2094:13
 1e134d2:    22 fd 0f 19       	r2 = r1 & 15			  ## RF_ble.c:2094:9
 1e134d6:    52 e0 08 00       	if (r2 == 5) goto 16 <__hw_rx_buf_process+0x1BE : 1e134ea >			  ## RF_ble.c:2094:9
 1e134da:    32 e0 24 10       	if (r2 != 3) goto 72 <__hw_rx_buf_process+0x1FA : 1e13526 >
 1e134de:    81 fd 38 11       	r1 = uextra(r1, p:7, l:1)			  ## RF_ble.c:2095:9
 1e134e2:    c2 99             	r2 = r4 + 28			  ## RF_ble.c:2095:41
 1e134e4:    bf f3 ee f3       	call -6180 <__set_peer_addr : 1e11cc4 >			  ## RF_ble.c:2095:9
 1e134e8:    20 18             	goto 64 <__hw_rx_buf_process+0x1FE : 1e1352a >			  ## RF_ble.c:2095:9
 1e134ea:    72 50             	r2 = h[r0 + 14] (u)			  ## RF_ble.c:2098:27
 1e134ec:    89 d0             	r1 = r1 >> 2			  ## RF_ble.c:2101:37
 1e134ee:    21 fd 10 19       	r1 = r1 & 16			  ## RF_ble.c:2101:37
 1e134f2:    b9 50             	h[r0 + 22] = r1			  ## RF_ble.c:2101:25
 1e134f4:    91 c0             	r1 = r2 << 2			  ## RF_ble.c:2102:42
 1e134f6:    21 fd 04 19       	r1 = r1 & 4			  ## RF_ble.c:2102:42
 1e134fa:    02 fd 01 19       	r2 = r1 | 1			  ## RF_ble.c:2102:48
 1e134fe:    da 50             	h[r0 + 26] = r2			  ## RF_ble.c:2102:25
 1e13500:    82 58             	r2 = h[r4 + 16] (u)			  ## RF_ble.c:2103:31
 1e13502:    92 d0             	r2 = r2 >> 2			  ## RF_ble.c:2103:37
 1e13504:    22 fd 10 29       	r2 = r2 & 16			  ## RF_ble.c:2103:37
 1e13508:    ca 50             	h[r0 + 24] = r2			  ## RF_ble.c:2103:25
 1e1350a:    11 fd 05 19       	r1 = r1 ^ 5			  ## RF_ble.c:2104:49
 1e1350e:    e9 50             	h[r0 + 28] = r1			  ## RF_ble.c:2104:25
 1e13510:    07 70             	r7 = 0			  ## RF_ble.c:2104:25
 1e13512:    0f 6a             	b[r5 + 0] = r7			  ## RF_ble.c:2106:22
 1e13514:    c0 4a             	r0 = [r5 + 48]			  ## RF_ble.c:2108:21
 1e13516:    bf f3 9d 6d       	call -74950 <hw_dma_free : 1e01054 >			  ## RF_ble.c:2108:9
 1e1351a:    d0 4a             	r0 = [r5 + 52]			  ## RF_ble.c:2109:21
 1e1351c:    bf f3 9a 6d       	call -74956 <hw_dma_free : 1e01054 >			  ## RF_ble.c:2109:9
 1e13520:    cf 4a             	[r5 + 48] = r7			  ## RF_ble.c:233:15
 1e13522:    df 4a             	[r5 + 52] = r7			  ## RF_ble.c:234:15
 1e13524:    02 18             	goto 4 <__hw_rx_buf_process+0x1FE : 1e1352a >			  ## RF_ble.c:234:15
 1e13526:    8f f3 eb 7e       	call 2031062 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1352a:    00 f6 18 90       	r0 = [r9 + 24]			  ## RF_ble.c:2692:14
 1e1352e:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x210 : 1e1353c >			  ## RF_ble.c:2692:14
 1e13530:    12 40             	r2 = [r0 + 4]			  ## RF_ble.c:2692:39
 1e13532:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x210 : 1e1353c >			  ## RF_ble.c:2692:39
 1e13534:    00 f6 14 90       	r0 = [r9 + 20]			  ## RF_ble.c:2693:49
 1e13538:    81 08             	r1 = r8			  ## RF_ble.c:2693:9
 1e1353a:    82 00             	call r2			  ## RF_ble.c:2693:9
 1e1353c:    81 58             	r1 = h[r4 + 16] (u)			  ## RF_ble.c:2696:9
 1e1353e:    20 69             	r0 = b[r4 + 18] (u)			  ## RF_ble.c:2696:9
 1e13540:    21 fd 30 19       	r1 = r1 & 48			  ## RF_ble.c:2696:9
 1e13544:    01 e1 03 10       	if (r1 != 16) goto 6 <__hw_rx_buf_process+0x222 : 1e1354e >			  ## RF_ble.c:2696:9
 1e13548:    02 30             	if (r0 != 0) goto 4 <__hw_rx_buf_process+0x222 : 1e1354e >
 1e1354a:    85 08             	r5 = r8
 1e1354c:    4a 18             	goto 148 <__hw_rx_buf_process+0x2B6 : 1e135e2 >
 1e1354e:    40 81             	r0 += 20			  ## RF_ble.c:189:46
 1e13550:    21 fd 03 09       	r1 = r0 & 3			  ## lbuf.c:125:14
 1e13554:    61 fb 04 19       	r1 = 4 - r1			  ## lbuf.c:126:19
 1e13558:    02 70             	r2 = 0			  ## lbuf.c:126:19
 1e1355a:    60 ff 03 09 01 00 	if ((r0 & 3) == 0) goto 2 <__hw_rx_buf_process+0x236 : 1e13562 >			  ## lbuf.c:126:19
 1e13560:    12 08             	r2 = r1			  ## lbuf.c:125:9
 1e13562:    21 58             	r1 = h[r4 + 4] (u)
 1e13564:    07 b4             	r7 = r2 + r0			  ## lbuf.c:125:9
 1e13566:    17 f2 03 30       	if (r7 < r1) goto 6 <__hw_rx_buf_process+0x244 : 1e13570 >
 1e1356a:    8f f3 c9 7e       	call 2030994 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1356e:    21 58             	r1 = h[r4 + 4] (u)
 1e13570:    10 fc f0 ff       	r0 = r1 + -16			  ## lbuf.c:131:28
 1e13574:    05 70             	r5 = 0			  ## lbuf.c:131:28
 1e13576:    07 f2 1d 80       	if (r7 > r0) goto 58 <__hw_rx_buf_process+0x288 : 1e135b4 >			  ## lbuf.c:131:28
 1e1357a:    97 f3 0f 9c       	call 3094558 <local_irq_disable : 106d9c >			  ## lbuf.c:140:5
 1e1357e:    20 58             	r0 = h[r4 + 4] (u)			  ## lbuf.c:143:48
 1e13580:    71 fc 20 00       	r1 = r7 + 32			  ## lbuf.c:143:29
 1e13584:    01 f2 13 20       	if (r1 >= r0) goto 38 <__hw_rx_buf_process+0x282 : 1e135ae >			  ## lbuf.c:143:29
 1e13588:    01 48             	r1 = [r4 + 0]			  ## lbuf.c:145:28
 1e1358a:    80 fb 70 28       	r2 = r8 + r7			  ## lbuf.c:144:44
 1e1358e:    29 44             	[r2 + 8] = r1			  ## lbuf.c:145:19
 1e13590:    c1 ff f0 ff 00 00 	r1 = 65520 <_IRQ_MEM_ADDR+0xF0 : fff0 >			  ## lbuf.c:146:31
 1e13596:    e1 b3             	r1 = r1 - r7			  ## lbuf.c:146:31
 1e13598:    10 09             	r0 += r1			  ## lbuf.c:146:48
 1e1359a:    68 54             	h[r2 + 12] = r0			  ## lbuf.c:146:18
 1e1359c:    00 70             	r0 = 0			  ## lbuf.c:147:18
 1e1359e:    f8 64             	b[r2 + 15] = r0			  ## lbuf.c:147:18
 1e135a0:    0a 44             	[r2 + 0] = r2			  ## list.h:188:16
 1e135a2:    1a 44             	[r2 + 4] = r2			  ## list.h:189:16
 1e135a4:    00 9f             	r0 = r7 + 16			  ## lbuf.c:143:14
 1e135a6:    28 58             	h[r4 + 4] = r0			  ## lbuf.c:149:20
 1e135a8:    00 95             	r0 = r2 + 16			  ## lbuf.c:157:32
 1e135aa:    bf f3 16 6d       	call -75220 <lbuf_free_btctrler : 1e00fda >			  ## lbuf.c:157:9
 1e135ae:    97 f3 f3 9b       	call 3094502 <local_irq_enable : 106d98 >			  ## lbuf.c:159:5
 1e135b2:    85 08             	r5 = r8			  ## lbuf.c:159:5
 1e135b4:    60 ff 03 59 02 00 	if ((r5 & 3) == 0) goto 4 <__hw_rx_buf_process+0x292 : 1e135be >
 1e135ba:    8f f3 a1 7e       	call 2030914 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e135be:    02 3a             	if (r5 != 0) goto 4 <__hw_rx_buf_process+0x298 : 1e135c4 >
 1e135c0:    8f f3 9e 7e       	call 2030908 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e135c4:    60 fc 5c 00       	r0 = r6 + 92			  ## RF_ble.c:2706:31
 1e135c8:    51 08             	r1 = r5			  ## RF_ble.c:2706:13
 1e135ca:    bf f3 a0 92       	call -56000 <hw_dma_push : 1e05b0e >			  ## RF_ble.c:2706:13
 1e135ce:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2710:17
 1e135d0:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2710:17
 1e135d4:    00 e3 05 00       	if (r0 == 48) goto 10 <__hw_rx_buf_process+0x2B6 : 1e135e2 >			  ## RF_ble.c:2710:17
 1e135d8:    70 5d             	r0 = h[r6 + 46] (u)			  ## RF_ble.c:410:17
 1e135da:    20 e0 02 80       	if (r0 > 2) goto 4 <__hw_rx_buf_process+0x2B6 : 1e135e2 >			  ## RF_ble.c:410:17
 1e135de:    30 70             	r0 = 3
 1e135e0:    78 5d             	h[r6 + 46] = r0
 1e135e2:    00 f6 18 90       	r0 = [r9 + 24]			  ## RF_ble.c:2717:14
 1e135e6:    06 20             	if (r0 == 0) goto 12 <__hw_rx_buf_process+0x2C8 : 1e135f4 >			  ## RF_ble.c:2717:14
 1e135e8:    02 40             	r2 = [r0 + 0]			  ## RF_ble.c:2717:39
 1e135ea:    04 24             	if (r2 == 0) goto 8 <__hw_rx_buf_process+0x2C8 : 1e135f4 >			  ## RF_ble.c:2717:39
 1e135ec:    00 f6 14 90       	r0 = [r9 + 20]			  ## RF_ble.c:2718:45
 1e135f0:    51 08             	r1 = r5			  ## RF_ble.c:2718:9
 1e135f2:    82 00             	call r2			  ## RF_ble.c:2718:9
 1e135f4:    40 5a             	r0 = h[r5 + 8] (u)			  ## RF_ble.c:2721:10
 1e135f6:    20 fd 30 09       	r0 = r0 & 48			  ## RF_ble.c:2721:10
 1e135fa:    00 e1 05 10       	if (r0 != 16) goto 10 <__hw_rx_buf_process+0x2DC : 1e13608 >			  ## RF_ble.c:2721:10
 1e135fe:    a0 6a             	r0 = b[r5 + 10] (u)			  ## RF_ble.c:2721:10
 1e13600:    03 30             	if (r0 != 0) goto 6 <__hw_rx_buf_process+0x2DC : 1e13608 >			  ## RF_ble.c:2721:10
 1e13602:    50 08             	r0 = r5			  ## RF_ble.c:2723:9
 1e13604:    bf f3 26 6d       	call -75188 <hw_dma_free : 1e01054 >
 1e13608:    5b 01             	{pc, r11-r4} = [sp++]			  ## RF_ble.c:2725:1
 1e1360a:    80 65             	r0 = b[r2 + 24] (u)			  ## RF_ble.c:2022:18
 1e1360c:    81 fd 30 11       	r1 = uextra(r1, p:6, l:1)			  ## RF_ble.c:2022:45
 1e13610:    10 f2 52 1f       	if (r0 != r1) goto -348 <__hw_rx_buf_process+0x18C : 1e134b8 >			  ## RF_ble.c:2022:45
 1e13614:    60 fc 3d 00       	r0 = r6 + 61			  ## RF_ble.c:2023:28
 1e13618:    41 fc 22 00       	r1 = r4 + 34			  ## RF_ble.c:2023:53
 1e1361c:    45 1f             	goto -374 <__hw_rx_buf_process+0x17C : 1e134a8 >			  ## RF_ble.c:2023:53


ble_rx_irq_handler:
 1e1361e:    e9 01             	[--sp] = {psr, rets, reti}			  ## RF_ble.c:3071:0
 1e13620:    78 f3 ff 07       	[--sp] = {r10-r0}			  ## RF_ble.c:3072:9
 1e13624:    fc 0b             	sp += -8			  ## RF_ble.c:3072:9
 1e13626:    c0 ff a4 2c 00 00 	r0 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:3079:15
 1e1362c:    00 40             	r0 = [r0 + 0]			  ## RF_ble.c:3079:15
 1e1362e:    0a f6 10 00       	r10 = [r0 + 16]			  ## RF_ble.c:3079:31
 1e13632:    c0 ff 28 80 1c 00 	r0 = 1867816 <uECC_vli_cmp_unsafe+0xC102C : 1c8028 >
 1e13638:    01 40             	r1 = [r0 + 0]			  ## RF_ble.c:3081:13
 1e1363a:    22 40             	r2 = [r0 + 8]			  ## RF_ble.c:3081:28
 1e1363c:    51 b5             	r1 &= r2			  ## RF_ble.c:3081:26
 1e1363e:    08 f3 75 10       	if ((r1 & 256) == 0) goto 234 <ble_rx_irq_handler+0x10E : 1e1372c >			  ## RF_ble.c:3081:26
 1e13642:    01 f4 01 0a       	[r0 + 4] |= 256			  ## RF_ble.c:3082:26
 1e13646:    00 f6 04 a0       	r0 = [r10 + 4]			  ## RF_ble5.c:185:18
 1e1364a:    70 30             	if (r0 != 0) goto 224 <ble_rx_irq_handler+0x10E : 1e1372c >			  ## RF_ble5.c:185:18
 1e1364c:    05 f6 00 a0       	r5 = [r10 + 0]			  ## RF_ble.c:2797:34
 1e13650:    58 fc 44 01       	r8 = r5 + 324
 1e13654:    00 f6 34 80       	r0 = [r8 + 52]			  ## RF_ble.c:2817:13
 1e13658:    08 02             	[sp] = r0			  ## RF_ble.c:2817:11
 1e1365a:    00 f6 38 80       	r0 = [r8 + 56]			  ## RF_ble.c:2818:13
 1e1365e:    18 02             	[sp+4] = r0			  ## RF_ble.c:2818:11
 1e13660:    00 f9 0e 80       	r0 = b[r8 + 14] (u)			  ## RF_ble.c:2821:20
 1e13664:    39 fd 01 09       	r9 = r0 & 4294967294			  ## RF_ble.c:2823:32
 1e13668:    69 e0 27 10       	if (r9 != 6) goto 78 <ble_rx_irq_handler+0x9C : 1e136ba >			  ## RF_ble.c:2823:32
 1e1366c:    50 fc 67 00       	r0 = r5 + 103
 1e13670:    51 fc 66 00       	r1 = r5 + 102
 1e13674:    82 5a             	r2 = h[r5 + 16] (u)			  ## RF_ble.c:2827:28
 1e13676:    03 08             	r3 = r0			  ## RF_ble.c:2828:19
 1e13678:    20 f3 01 20       	if ((r2 & 1) != 0) goto 2 <ble_rx_irq_handler+0x60 : 1e1367e >			  ## RF_ble.c:2828:19
 1e1367c:    13 08             	r3 = r1			  ## RF_ble.c:2828:19
 1e1367e:    03 66             	r3 = b[r3 + 0] (u)
 1e13680:    14 08             	r4 = r1			  ## RF_ble.c:2830:19
 1e13682:    20 f3 01 20       	if ((r2 & 1) != 0) goto 2 <ble_rx_irq_handler+0x6A : 1e13688 >			  ## RF_ble.c:2830:19
 1e13686:    04 08             	r4 = r0			  ## RF_ble.c:2830:19
 1e13688:    04 68             	r4 = b[r4 + 0] (u)
 1e1368a:    87 5a             	r7 = h[r5 + 16] (u)			  ## RF_ble.c:2832:32
 1e1368c:    26 fd 01 29       	r6 = r2 & 1			  ## RF_ble.c:2827:34
 1e13690:    22 fd 01 79       	r2 = r7 & 1			  ## RF_ble.c:2832:38
 1e13694:    62 f2 ee 1f       	if (r2 != r6) goto -36 <ble_rx_irq_handler+0x56 : 1e13674 >			  ## RF_ble.c:2832:38
 1e13698:    22 fd 01 39       	r2 = r3 & 1			  ## RF_ble.c:2829:17
 1e1369c:    50 08             	r0 = r5			  ## RF_ble.c:2835:15
 1e1369e:    61 08             	r1 = r6			  ## RF_ble.c:2835:15
 1e136a0:    20 16             	call -960 <__ble_rx_buf_process_conn : 1e132e2 >			  ## RF_ble.c:2835:15
 1e136a2:    01 f7 02 80       	r1 = h[r8 + 2] (u)			  ## RF_ble.c:2836:22
 1e136a6:    11 b0             	r1 |= 1			  ## RF_ble.c:2836:22
 1e136a8:    11 f7 02 80       	h[r8 + 2] = r1			  ## RF_ble.c:2836:22
 1e136ac:    11 70             	r1 = 1			  ## RF_ble.c:2836:22
 1e136ae:    10 e0 01 00       	if (r0 == 1) goto 2 <ble_rx_irq_handler+0x96 : 1e136b4 >			  ## RF_ble.c:2836:22
 1e136b2:    01 70             	r1 = 0			  ## RF_ble.c:2839:5
 1e136b4:    28 fd 01 49       	r8 = r4 & 1			  ## RF_ble.c:2831:17
 1e136b8:    1a 18             	goto 52 <ble_rx_irq_handler+0xD0 : 1e136ee >			  ## RF_ble.c:2831:17
 1e136ba:    84 5a             	r4 = h[r5 + 16] (u)			  ## RF_ble.c:2840:25
 1e136bc:    20 fd 01 49       	r0 = r4 & 1			  ## RF_ble.c:2840:31
 1e136c0:    16 fd 01 09       	r6 = r0 ^ 1			  ## RF_ble.c:2840:15
 1e136c4:    b0 c0             	r0 = r6 << 2			  ## RF_ble.c:2278:5
 1e136c6:    07 ba             	r7 = r5 + r0			  ## RF_ble.c:2278:5
 1e136c8:    f0 7f             	r0 = 255			  ## RF_ble.c:2278:19
 1e136ca:    bf f3 02 f1       	call -7676 <hw_alloc_rx : 1e118d2 >			  ## RF_ble.c:2278:19
 1e136ce:    e1 9b             	r1 = r5 + 30			  ## RF_ble.c:2277:63
 1e136d0:    53 fc 20 00       	r3 = r5 + 32			  ## RF_ble.c:2277:38
 1e136d4:    10 f6 78 71       	[r7 + 376] = r0			  ## RF_ble.c:2278:17
 1e136d8:    00 f3 01 40       	if ((r4 & 1) == 0) goto 2 <ble_rx_irq_handler+0xC0 : 1e136de >			  ## RF_ble.c:2278:17
 1e136dc:    13 08             	r3 = r1			  ## RF_ble.c:2277:14
 1e136de:    04 20             	if (r0 == 0) goto 8 <ble_rx_irq_handler+0xCA : 1e136e8 >
 1e136e0:    40 81             	r0 += 20			  ## RF_ble.c:2286:25
 1e136e2:    bf f3 04 f1       	call -7672 <PHY_TO_BLE : 1e118ee >			  ## RF_ble.c:2286:14
 1e136e6:    01 18             	goto 2 <ble_rx_irq_handler+0xCC : 1e136ea >			  ## RF_ble.c:2286:14
 1e136e8:    00 70             	r0 = 0
 1e136ea:    08 56             	h[r3 + 0] = r0			  ## RF_ble.c:2282:16
 1e136ec:    11 70             	r1 = 1
 1e136ee:    00 a0             	r0 = sp + 0
 1e136f0:    06 22             	if (r1 == 0) goto 12 <ble_rx_irq_handler+0xE0 : 1e136fe >
 1e136f2:    a1 f6 00 06       	r1 = [r0+r6<<2]			  ## RF_ble.c:2844:11
 1e136f6:    03 22             	if (r1 == 0) goto 6 <ble_rx_irq_handler+0xE0 : 1e136fe >
 1e136f8:    a0 08             	r0 = r10			  ## RF_ble.c:2846:9
 1e136fa:    62 08             	r2 = r6			  ## RF_ble.c:2846:9
 1e136fc:    17 16             	call -978 <__hw_rx_buf_process : 1e1332c >			  ## RF_ble.c:2846:9
 1e136fe:    69 e0 12 10       	if (r9 != 6) goto 36 <ble_rx_irq_handler+0x108 : 1e13726 >
 1e13702:    11 70             	r1 = 1			  ## RF_ble.c:2851:18
 1e13704:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0xEA : 1e13708 >			  ## RF_ble.c:2851:18
 1e13706:    01 70             	r1 = 0
 1e13708:    00 a0             	r0 = sp + 0
 1e1370a:    a7 f6 00 01       	r7 = [r0+r1<<2]			  ## RF_ble.c:2851:15
 1e1370e:    50 08             	r0 = r5			  ## RF_ble.c:2852:15
 1e13710:    82 08             	r2 = r8			  ## RF_ble.c:2852:15
 1e13712:    e7 15             	call -1074 <__ble_rx_buf_process_conn : 1e132e2 >			  ## RF_ble.c:2852:15
 1e13714:    08 2e             	if (r7 == 0) goto 16 <ble_rx_irq_handler+0x108 : 1e13726 >			  ## RF_ble.c:2852:15
 1e13716:    10 e0 06 10       	if (r0 != 1) goto 12 <ble_rx_irq_handler+0x108 : 1e13726 >
 1e1371a:    12 70             	r2 = 1			  ## RF_ble.c:2851:18
 1e1371c:    01 2c             	if (r6 == 0) goto 2 <ble_rx_irq_handler+0x102 : 1e13720 >			  ## RF_ble.c:2851:18
 1e1371e:    02 70             	r2 = 0
 1e13720:    a0 08             	r0 = r10			  ## RF_ble.c:2854:13
 1e13722:    71 08             	r1 = r7			  ## RF_ble.c:2854:13
 1e13724:    03 16             	call -1018 <__hw_rx_buf_process : 1e1332c >			  ## RF_ble.c:2854:13
 1e13726:    a0 08             	r0 = r10			  ## RF_ble.c:2859:5
 1e13728:    bf f3 b3 f1       	call -7322 <__hw_tx_process : 1e11a92 >			  ## RF_ble.c:2859:5
 1e1372c:    04 0a             	sp += 8
 1e1372e:    70 f3 ff 07       	{r10-r0} = [sp++]			  ## RF_ble.c:3097:1
 1e13732:    a9 01             	{psr, rets, reti} = [sp++]			  ## RF_ble.c:3097:1
 1e13734:    22 00             	rti			  ## RF_ble.c:3097:1


__get_latency_valid:
 1e13736:    34 00             	[--sp] = rets			  ## le_low_power.c:230:0
 1e13738:    02 08             	r2 = r0			  ## le_low_power.c:230:0
 1e1373a:    01 44             	r1 = [r2 + 0]			  ## le_low_power.c:231:31
 1e1373c:    03 f9 56 11       	r3 = b[r1 + 342] (u)			  ## le_low_power.c:233:14
 1e13740:    00 70             	r0 = 0			  ## le_low_power.c:233:14
 1e13742:    10 26             	if (r3 == 0) goto 32 <__get_latency_valid+0x2E : 1e13764 >			  ## le_low_power.c:233:14
 1e13744:    01 f9 57 11       	r1 = b[r1 + 343] (u)			  ## le_low_power.c:237:14
 1e13748:    11 e0 0c 00       	if (r1 == 1) goto 24 <__get_latency_valid+0x2E : 1e13764 >
 1e1374c:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e1374e:    20 08             	r0 = r2			  ## le_low_power.c:72:18
 1e13750:    bf f3 d4 fa       	call -2648 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:72:18
 1e13754:    01 08             	r1 = r0			  ## le_low_power.c:72:18
 1e13756:    c2 ff 80 ff 00 00 	r2 = 65408 <_IRQ_MEM_ADDR+0x80 : ff80 >			  ## le_low_power.c:241:31
 1e1375c:    10 70             	r0 = 1			  ## le_low_power.c:242:9
 1e1375e:    21 f1 01 00       	if ((r1 & r2) != 0) goto 2 <__get_latency_valid+0x2E : 1e13764 >			  ## le_low_power.c:242:9
 1e13762:    00 70             	r0 = 0			  ## le_low_power.c:242:9
 1e13764:    30 00             	pc = [sp++]			  ## le_low_power.c:246:1


__get_interval:
 1e13766:    75 01             	[--sp] = {rets, r5, r4}			  ## le_low_power.c:55:0
 1e13768:    04 08             	r4 = r0			  ## le_low_power.c:55:0
 1e1376a:    11 70             	r1 = 1			  ## le_low_power.c:56:13
 1e1376c:    bf f3 c6 fa       	call -2676 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:56:13
 1e13770:    01 fb ff 7f       	r1 = 32767 <nvbss_size+0x13BF : 7fff >			  ## le_low_power.c:56:41
 1e13774:    e2 fd 10 50       	r5 = r0 & r1			  ## le_low_power.c:56:41
 1e13778:    f1 70             	r1 = 15			  ## le_low_power.c:56:54
 1e1377a:    40 08             	r0 = r4			  ## le_low_power.c:56:54
 1e1377c:    bf f3 be fa       	call -2692 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:56:54
 1e13780:    00 c4             	r0 = r0 << 16			  ## le_low_power.c:56:91
 1e13782:    20 fd ff 0b       	r0 = r0 & 16711680			  ## le_low_power.c:56:91
 1e13786:    50 ba             	r0 |= r5			  ## le_low_power.c:56:51
 1e13788:    55 01             	{pc, r5, r4} = [sp++]			  ## le_low_power.c:56:5


__power_get_timeout.5596:
 1e1378a:    7c 01             	[--sp] = {rets, r12-r4}			  ## le_low_power.c:254:0
 1e1378c:    05 08             	r5 = r0			  ## le_low_power.c:254:0
 1e1378e:    0b f6 00 50       	r11 = [r5 + 0]			  ## le_low_power.c:257:31
 1e13792:    ca ff 38 80 1c 00 	r10 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e13798:    cc ff ff ff 00 00 	r12 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1379e:    08 70             	r8 = 0
 1e137a0:    00 f6 00 a0       	r0 = [r10 + 0]			  ## le_low_power.c:262:9
 1e137a4:    21 f3 59 00       	if ((r0 & 2) != 0) goto 178 <__power_get_timeout.5596+0xD0 : 1e1385a >			  ## le_low_power.c:262:9
 1e137a8:    bf f3 3e f8       	call -3972 <check_event_pending : 1e12828 >			  ## le_low_power.c:262:32
 1e137ac:    56 30             	if (r0 != 0) goto 172 <__power_get_timeout.5596+0xD0 : 1e1385a >			  ## le_low_power.c:262:32
 1e137ae:    00 f9 5d b1       	r0 = b[r11 + 349] (u)			  ## le_low_power.c:269:14
 1e137b2:    10 e0 0e 10       	if (r0 != 1) goto 28 <__power_get_timeout.5596+0x48 : 1e137d2 >			  ## le_low_power.c:269:14
 1e137b6:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e137b8:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e137ba:    bf f3 9f fa       	call -2754 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:63:12
 1e137be:    c0 09             	r0 += r12			  ## le_low_power.c:63:40
 1e137c0:    24 04             	r4 = r0.l (u)			  ## le_low_power.c:270:13
 1e137c2:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e137c4:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e137c6:    bf f3 99 fa       	call -2766 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:81:13
 1e137ca:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:270:44
 1e137cc:    f0 8f             	r0 += -1			  ## le_low_power.c:270:68
 1e137ce:    04 f2 44 00       	if (r4 == r0) goto 136 <__power_get_timeout.5596+0xD0 : 1e1385a >			  ## le_low_power.c:270:68
 1e137d2:    50 08             	r0 = r5			  ## le_low_power.c:275:16
 1e137d4:    bf f3 b1 fa       	call -2718 <__get_clkn : 1e12d3a >			  ## le_low_power.c:275:16
 1e137d8:    06 08             	r6 = r0			  ## le_low_power.c:275:16
 1e137da:    50 08             	r0 = r5			  ## le_low_power.c:279:9
 1e137dc:    ac 17             	call -168 <__get_latency_valid : 1e13736 >			  ## le_low_power.c:279:9
 1e137de:    67 08             	r7 = r6			  ## le_low_power.c:279:9
 1e137e0:    25 20             	if (r0 == 0) goto 74 <__power_get_timeout.5596+0xA2 : 1e1382c >			  ## le_low_power.c:279:9
 1e137e2:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e137e4:    50 08             	r0 = r5			  ## le_low_power.c:72:18
 1e137e6:    bf f3 89 fa       	call -2798 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:72:18
 1e137ea:    07 08             	r7 = r0			  ## le_low_power.c:72:18
 1e137ec:    50 08             	r0 = r5			  ## le_low_power.c:284:27
 1e137ee:    bb 17             	call -138 <__get_interval : 1e13766 >			  ## le_low_power.c:284:27
 1e137f0:    09 08             	r9 = r0			  ## le_low_power.c:284:27
 1e137f2:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e137f4:    50 08             	r0 = r5			  ## le_low_power.c:81:13
 1e137f6:    bf f3 81 fa       	call -2814 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:81:13
 1e137fa:    04 08             	r4 = r0			  ## le_low_power.c:81:13
 1e137fc:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e137fe:    50 08             	r0 = r5			  ## le_low_power.c:63:12
 1e13800:    bf f3 7c fa       	call -2824 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:63:12
 1e13804:    02 f9 5d b1       	r2 = b[r11 + 349] (u)			  ## le_low_power.c:292:18
 1e13808:    89 fd 38 17       	r1 = uextra(r7, p:7, l:9)			  ## le_low_power.c:289:32
 1e1380c:    67 08             	r7 = r6			  ## le_low_power.c:289:30
 1e1380e:    80 fe 90 71       	r7 += r1 * r9			  ## le_low_power.c:289:30
 1e13812:    0c 24             	if (r2 == 0) goto 24 <__power_get_timeout.5596+0xA2 : 1e1382c >
 1e13814:    c0 09             	r0 += r12			  ## le_low_power.c:63:40
 1e13816:    20 b8             	r0 = r4 - r0			  ## le_low_power.c:293:50
 1e13818:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:293:50
 1e1381a:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_get_timeout.5596+0xA2 : 1e1382c >			  ## le_low_power.c:293:50
 1e1381e:    11 80             	r1 += 1			  ## le_low_power.c:294:30
 1e13820:    01 f2 04 30       	if (r1 < r0) goto 8 <__power_get_timeout.5596+0xA2 : 1e1382c >			  ## le_low_power.c:294:30
 1e13824:    e0 8f             	r0 += -2			  ## le_low_power.c:297:68
 1e13826:    67 08             	r7 = r6			  ## le_low_power.c:297:42
 1e13828:    80 fe 90 70       	r7 += r0 * r9			  ## le_low_power.c:297:42
 1e1382c:    50 08             	r0 = r5			  ## le_low_power.c:304:20
 1e1382e:    bf f3 84 fa       	call -2808 <__get_clkn : 1e12d3a >			  ## le_low_power.c:304:20
 1e13832:    02 3c             	if (r6 != 0) goto 4 <__power_get_timeout.5596+0xAE : 1e13838 >
 1e13834:    60 f2 b4 8f       	if (r0 > r6) goto -152 <__power_get_timeout.5596+0x16 : 1e137a0 >
 1e13838:    50 e0 0f 30       	if (r0 < 5) goto 30 <__power_get_timeout.5596+0xD0 : 1e1385a >
 1e1383c:    00 f6 00 a0       	r0 = [r10 + 0]			  ## le_low_power.c:316:9
 1e13840:    21 f3 0b 00       	if ((r0 & 2) != 0) goto 22 <__power_get_timeout.5596+0xD0 : 1e1385a >
 1e13844:    bf f3 f0 f7       	call -4128 <check_event_pending : 1e12828 >			  ## le_low_power.c:316:32
 1e13848:    08 30             	if (r0 != 0) goto 16 <__power_get_timeout.5596+0xD0 : 1e1385a >			  ## le_low_power.c:316:32
 1e1384a:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## le_low_power.c:323:46
 1e1384e:    38 0e             	r0 = r7 * r0			  ## le_low_power.c:323:46
 1e13850:    00 fc 3c f6       	r0 = r0 + -2500			  ## le_low_power.c:323:46
 1e13854:    47 e0 01 30       	if (r7 < 4) goto 2 <__power_get_timeout.5596+0xD0 : 1e1385a >			  ## le_low_power.c:323:46
 1e13858:    08 08             	r8 = r0			  ## le_low_power.c:323:12
 1e1385a:    80 08             	r0 = r8			  ## le_low_power.c:324:1
 1e1385c:    5c 01             	{pc, r12-r4} = [sp++]			  ## le_low_power.c:324:1


__power_suspend_probe.5597:
 1e1385e:    34 00             	[--sp] = rets			  ## le_low_power.c:366:0
 1e13860:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:366:0
 1e13866:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:367:5
 1e13868:    71 b1             	r1 &= 4294967291			  ## le_low_power.c:367:5
 1e1386a:    09 40             	[r0 + 0] = r1			  ## le_low_power.c:367:5
 1e1386c:    00 f4 20 09       	[r0 + 0] |= 32			  ## le_low_power.c:368:5
 1e13870:    00 f4 01 09       	[r0 + 0] |= 1			  ## le_low_power.c:369:5
 1e13874:    01 40             	r1 = [r0 + 0]			  ## le_low_power.c:374:9
 1e13876:    08 f3 09 10       	if ((r1 & 256) == 0) goto 18 <__power_suspend_probe.5597+0x2E : 1e1388c >			  ## le_low_power.c:374:9
 1e1387a:    00 40             	r0 = [r0 + 0]
 1e1387c:    01 fb 00 fc       	r1 = -1024 <bank_code_load_addr+0x1E5354 : 1fffc00 >
 1e13880:    50 b3             	r0 &= r1
 1e13882:    20 ff 18 0a 02 00 	if (r0 == 6144) goto 4 <__power_suspend_probe.5597+0x2E : 1e1388c >
 1e13888:    8f f3 3a 7d       	call 2030196 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1388c:    30 00             	pc = [sp++]			  ## le_low_power.c:377:1


__power_suspend_post.5598:
 1e1388e:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_low_power.c:381:0
 1e13890:    04 08             	r4 = r0			  ## le_low_power.c:381:0
 1e13892:    0a f6 00 40       	r10 = [r4 + 0]			  ## le_low_power.c:384:31
 1e13896:    c0 ff 38 80 1c 00 	r0 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e1389c:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:387:12
 1e1389e:    03 f3 fd 2f       	if ((r2 & 8) == 0) goto -6 <__power_suspend_post.5598+0xE : 1e1389c >			  ## le_low_power.c:387:5
 1e138a2:    00 fc 34 7c       	r0 = r0 + 31796
 1e138a6:    02 40             	r2 = [r0 + 0]			  ## le_low_power.c:389:12
 1e138a8:    2b f3 fd 2f       	if ((r2 & 2048) != 0) goto -6 <__power_suspend_post.5598+0x18 : 1e138a6 >			  ## le_low_power.c:389:5
 1e138ac:    00 40             	r0 = [r0 + 0]			  ## le_low_power.c:391:24
 1e138ae:    02 fb ff 07       	r2 = 2047 <report_data_size+0x1F : 7ff >			  ## le_low_power.c:391:37
 1e138b2:    50 b5             	r0 &= r2			  ## le_low_power.c:391:37
 1e138b4:    c2 70             	r2 = 12			  ## le_low_power.c:391:46
 1e138b6:    c0 fe 20 00       	r0 = r0 / r2 (u)			  ## le_low_power.c:391:46
 1e138ba:    10 09             	r0 += r1			  ## le_low_power.c:391:21
 1e138bc:    01 fb 71 02       	r1 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## le_low_power.c:392:25
 1e138c0:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## le_low_power.c:392:25
 1e138c4:    19 90             	r9 = r0 + 1			  ## le_low_power.c:392:40
 1e138c6:    40 08             	r0 = r4			  ## le_low_power.c:396:16
 1e138c8:    bf f3 37 fa       	call -2962 <__get_clkn : 1e12d3a >			  ## le_low_power.c:396:16
 1e138cc:    05 08             	r5 = r0			  ## le_low_power.c:396:16
 1e138ce:    40 08             	r0 = r4			  ## le_low_power.c:400:9
 1e138d0:    32 17             	call -412 <__get_latency_valid : 1e13736 >			  ## le_low_power.c:400:9
 1e138d2:    27 20             	if (r0 == 0) goto 78 <__power_suspend_post.5598+0x94 : 1e13922 >			  ## le_low_power.c:400:9
 1e138d4:    91 70             	r1 = 9			  ## le_low_power.c:72:18
 1e138d6:    40 08             	r0 = r4			  ## le_low_power.c:72:18
 1e138d8:    bf f3 10 fa       	call -3040 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:72:18
 1e138dc:    06 08             	r6 = r0			  ## le_low_power.c:72:18
 1e138de:    40 08             	r0 = r4			  ## le_low_power.c:402:27
 1e138e0:    42 17             	call -380 <__get_interval : 1e13766 >			  ## le_low_power.c:402:27
 1e138e2:    08 08             	r8 = r0			  ## le_low_power.c:402:27
 1e138e4:    51 70             	r1 = 5			  ## le_low_power.c:81:13
 1e138e6:    40 08             	r0 = r4			  ## le_low_power.c:81:13
 1e138e8:    bf f3 08 fa       	call -3056 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:81:13
 1e138ec:    07 08             	r7 = r0			  ## le_low_power.c:81:13
 1e138ee:    31 70             	r1 = 3			  ## le_low_power.c:63:12
 1e138f0:    40 08             	r0 = r4			  ## le_low_power.c:63:12
 1e138f2:    bf f3 03 fa       	call -3066 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:63:12
 1e138f6:    03 f9 5d a1       	r3 = b[r10 + 349] (u)			  ## le_low_power.c:410:18
 1e138fa:    89 fd 38 26       	r2 = uextra(r6, p:7, l:9)			  ## le_low_power.c:407:32
 1e138fe:    51 08             	r1 = r5			  ## le_low_power.c:407:30
 1e13900:    80 fe 80 12       	r1 += r2 * r8			  ## le_low_power.c:407:30
 1e13904:    0f 26             	if (r3 == 0) goto 30 <__power_suspend_post.5598+0x96 : 1e13924 >
 1e13906:    c3 ff ff ff 00 00 	r3 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e1390c:    30 09             	r0 += r3			  ## le_low_power.c:63:40
 1e1390e:    20 be             	r0 = r7 - r0			  ## le_low_power.c:411:50
 1e13910:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:411:50
 1e13912:    20 e0 07 30       	if (r0 < 2) goto 14 <__power_suspend_post.5598+0x96 : 1e13924 >			  ## le_low_power.c:411:50
 1e13916:    12 80             	r2 += 1			  ## le_low_power.c:412:30
 1e13918:    02 f2 04 30       	if (r2 < r0) goto 8 <__power_suspend_post.5598+0x96 : 1e13924 >			  ## le_low_power.c:412:30
 1e1391c:    e0 8f             	r0 += -2			  ## le_low_power.c:415:68
 1e1391e:    80 fe 80 50       	r5 += r0 * r8			  ## le_low_power.c:415:42
 1e13922:    51 08             	r1 = r5
 1e13924:    91 f2 02 80       	if (r1 > r9) goto 4 <__power_suspend_post.5598+0x9E : 1e1392c >
 1e13928:    8f f3 ea 7c       	call 2030036 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1392c:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_low_power.c:428:1


__set_ble_anchor_con:
 1e1392e:    76 01             	[--sp] = {rets, r6-r4}			  ## RF_ble.c:303:0
 1e13930:    24 08             	r4 = r2			  ## RF_ble.c:303:0
 1e13932:    15 08             	r5 = r1			  ## RF_ble.c:303:0
 1e13934:    06 08             	r6 = r0			  ## RF_ble.c:303:0
 1e13936:    97 f3 31 9a       	call 3093602 <local_irq_disable : 106d9c >			  ## RF_ble.c:304:5
 1e1393a:    08 00             	csync			  ## RF_ble.c:304:5
 1e1393c:    c0 ff 1c 80 1c 00 	r0 = 1867804 <uECC_vli_cmp_unsafe+0xC1020 : 1c801c >			  ## RF_ble.c:304:5
 1e13942:    1c 40             	[r0 + 4] = r4			  ## RF_ble.c:306:21
 1e13944:    08 00             	csync			  ## RF_ble.c:307:5
 1e13946:    c1 ff a4 2c 00 00 	r1 = 11428 <bb_hdl : 2ca4 >			  ## RF_ble.c:147:19
 1e1394c:    01 42             	r1 = [r1 + 0]			  ## RF_ble.c:147:19
 1e1394e:    41 42             	r1 = [r1 + 16]			  ## RF_ble.c:147:35
 1e13950:    61 bc             	r1 = r6 - r1			  ## RF_ble.c:147:17
 1e13952:    c2 71             	r2 = 28			  ## RF_ble.c:147:17
 1e13954:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## RF_ble.c:147:17
 1e13958:    09 c1             	r1 = r1 << 4			  ## RF_ble.c:308:50
 1e1395a:    21 fd 7f 10       	r1 = r1 & 4080			  ## RF_ble.c:308:50
 1e1395e:    aa c2             	r2 = r5 << 10			  ## RF_ble.c:308:30
 1e13960:    51 b4             	r1 |= r2			  ## RF_ble.c:308:67
 1e13962:    01 fd 05 19       	r1 = r1 | 5			  ## RF_ble.c:308:67
 1e13966:    09 40             	[r0 + 0] = r1			  ## RF_ble.c:308:21
 1e13968:    16 01             	{rets, r6-r4} = [sp++]			  ## RF_ble.c:310:5
 1e1396a:    d7 f3 15 9a       	goto 3093546 <local_irq_enable : 106d98 >			  ## RF_ble.c:310:5


__power_resume.5599:
 1e1396e:    7a 01             	[--sp] = {rets, r10-r4}			  ## le_low_power.c:439:0
 1e13970:    04 08             	r4 = r0			  ## le_low_power.c:439:0
 1e13972:    07 48             	r7 = [r4 + 0]			  ## le_low_power.c:442:31
 1e13974:    10 08             	r0 = r1			  ## le_low_power.c:446:16
 1e13976:    bf f3 6e ea       	call -11044 <bt_get_fine_cnt : 1e10e56 >			  ## le_low_power.c:446:16
 1e1397a:    c1 ff 44 0f 00 00 	r1 = 3908 <ble_finetimecnt_poweroff_sfr : f44 >			  ## le_low_power.c:434:12
 1e13980:    01 42             	r1 = [r1 + 0]			  ## le_low_power.c:434:12
 1e13982:    09 b2             	r9 = r1 + r0			  ## le_low_power.c:448:14
 1e13984:    40 08             	r0 = r4			  ## le_low_power.c:450:16
 1e13986:    bf f3 d8 f9       	call -3152 <__get_clkn : 1e12d3a >			  ## le_low_power.c:450:16
 1e1398a:    05 08             	r5 = r0			  ## le_low_power.c:450:16
 1e1398c:    02 3a             	if (r5 != 0) goto 4 <__power_resume.5599+0x24 : 1e13992 >
 1e1398e:    8f f3 b7 7c       	call 2029934 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13992:    00 fb 71 02       	r0 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >
 1e13996:    c0 fe 00 69       	r6 = r9 / r0 (u)
 1e1399a:    40 08             	r0 = r4			  ## le_low_power.c:454:23
 1e1399c:    e4 16             	call -568 <__get_interval : 1e13766 >			  ## le_low_power.c:454:23
 1e1399e:    01 f9 52 71       	r1 = b[r7 + 338] (u)			  ## le_low_power.c:474:31
 1e139a2:    71 e0 02 10       	if (r1 != 7) goto 4 <__power_resume.5599+0x3C : 1e139aa >
 1e139a6:    d0 fe 00 66       	r6 = r6 % r0 (u)			  ## le_low_power.c:475:47
 1e139aa:    12 9c             	r2 = r6 + 1
 1e139ac:    25 f2 01 30       	if (r5 < r2) goto 2 <__power_resume.5599+0x44 : 1e139b2 >
 1e139b0:    00 70             	r0 = 0
 1e139b2:    27 b4             	r7 = r2 - r0			  ## le_low_power.c:479:9
 1e139b4:    c8 ff 38 80 1c 00 	r8 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >
 1e139ba:    17 f6 08 80       	[r8 + 8] = r7			  ## le_low_power.c:483:22
 1e139be:    38 dc             	r0 = r7 >>> 16			  ## le_low_power.c:484:34
 1e139c0:    10 f6 0c 80       	[r8 + 12] = r0			  ## le_low_power.c:484:22
 1e139c4:    06 fb 71 02       	r6 = 625 <BTCTLER_CL_RAM_TOTAL+0x8D : 271 >			  ## le_low_power.c:485:32
 1e139c8:    d0 fe 60 09       	r0 = r9 % r6 (u)			  ## le_low_power.c:485:32
 1e139cc:    71 b0             	r1 &= 4294967294			  ## le_low_power.c:487:39
 1e139ce:    10 f6 04 80       	[r8 + 4] = r0			  ## le_low_power.c:485:21
 1e139d2:    61 e0 7b 10       	if (r1 != 6) goto 246 <__power_resume.5599+0x15E : 1e13acc >			  ## le_low_power.c:485:21
 1e139d6:    40 08             	r0 = r4			  ## le_low_power.c:130:23
 1e139d8:    c6 16             	call -628 <__get_interval : 1e13766 >			  ## le_low_power.c:130:23
 1e139da:    01 f6 10 80       	r1 = [r8 + 16]			  ## le_low_power.c:131:55
 1e139de:    61 bc             	r1 = r6 - r1			  ## le_low_power.c:131:53
 1e139e0:    62 05             	r2 = r5.l (u)			  ## le_low_power.c:131:13
 1e139e2:    80 fe 60 12       	r1 += r2 * r6			  ## le_low_power.c:131:37
 1e139e6:    e2 bb             	r2 = r5 - r7			  ## le_low_power.c:133:25
 1e139e8:    a2 04             	r2 = r2.l (u)			  ## le_low_power.c:133:10
 1e139ea:    03 fc ff ff       	r3 = r0 + -1			  ## le_low_power.c:133:54
 1e139ee:    05 70             	r5 = 0			  ## le_low_power.c:133:54
 1e139f0:    32 f2 0a 10       	if (r2 != r3) goto 20 <__power_resume.5599+0x9A : 1e13a08 >
 1e139f4:    02 f6 10 80       	r2 = [r8 + 16]			  ## le_low_power.c:133:80
 1e139f8:    03 f6 04 80       	r3 = [r8 + 4]			  ## le_low_power.c:133:98
 1e139fc:    32 09             	r2 += r3			  ## le_low_power.c:133:96
 1e139fe:    15 70             	r5 = 1			  ## le_low_power.c:133:77
 1e13a00:    03 ff 71 22 01 00 	if (r2 < 625) goto 2 <__power_resume.5599+0x9A : 1e13a08 >
 1e13a06:    05 70             	r5 = 0			  ## le_low_power.c:133:77
 1e13a08:    19 f2 09 30       	if (r9 < r1) goto 18 <__power_resume.5599+0xB0 : 1e13a1e >
 1e13a0c:    90 fb 10 19       	r1 = r9 - r1			  ## le_low_power.c:144:25
 1e13a10:    62 08             	r2 = r6			  ## le_low_power.c:145:57
 1e13a12:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## le_low_power.c:145:57
 1e13a16:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## le_low_power.c:145:73
 1e13a1a:    50 09             	r0 += r5			  ## le_low_power.c:145:73
 1e13a1c:    15 90             	r5 = r0 + 1			  ## le_low_power.c:145:87
 1e13a1e:    40 08             	r0 = r4			  ## le_low_power.c:496:13
 1e13a20:    8a 16             	call -748 <__get_latency_valid : 1e13736 >			  ## le_low_power.c:496:13
 1e13a22:    18 20             	if (r0 == 0) goto 48 <__power_resume.5599+0xE6 : 1e13a54 >			  ## le_low_power.c:496:13
 1e13a24:    61 70             	r1 = 6			  ## le_low_power.c:157:18
 1e13a26:    40 08             	r0 = r4			  ## le_low_power.c:157:18
 1e13a28:    bf f3 68 f9       	call -3376 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:157:18
 1e13a2c:    85 fd 40 10       	r1 = uextra(r0, p:8, l:5)			  ## le_low_power.c:162:87
 1e13a30:    22 fd 3f 09       	r2 = r0 & 63			  ## le_low_power.c:162:40
 1e13a34:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:162:57
 1e13a36:    80 fe a0 21       	r2 += r1 * r10			  ## le_low_power.c:162:54
 1e13a3a:    51 72             	r1 = 37			  ## le_low_power.c:162:97
 1e13a3c:    d0 fe 10 12       	r1 = r2 % r1 (u)			  ## le_low_power.c:162:97
 1e13a40:    c2 ff c0 ff 00 00 	r2 = 65472 <_IRQ_MEM_ADDR+0xC0 : ffc0 >			  ## le_low_power.c:162:28
 1e13a46:    50 b5             	r0 &= r2			  ## le_low_power.c:162:28
 1e13a48:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:162:28
 1e13a4c:    61 70             	r1 = 6			  ## le_low_power.c:164:5
 1e13a4e:    40 08             	r0 = r4			  ## le_low_power.c:164:5
 1e13a50:    6e 17             	call -292 <__set_ble_anchor_con : 1e1392e >			  ## le_low_power.c:164:5
 1e13a52:    01 18             	goto 2 <__power_resume.5599+0xE8 : 1e13a56 >			  ## le_low_power.c:164:5
 1e13a54:    6a 05             	r10 = r5.l (u)			  ## le_low_power.c:178:33
 1e13a56:    09 f6 00 40       	r9 = [r4 + 0]			  ## le_low_power.c:171:31
 1e13a5a:    91 70             	r1 = 9			  ## le_low_power.c:177:18
 1e13a5c:    40 08             	r0 = r4			  ## le_low_power.c:177:18
 1e13a5e:    bf f3 4d f9       	call -3430 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:177:18
 1e13a62:    05 08             	r5 = r0			  ## le_low_power.c:177:18
 1e13a64:    89 fd 38 05       	r0 = uextra(r5, p:7, l:9)			  ## le_low_power.c:178:9
 1e13a68:    a0 f2 03 20       	if (r0 >= r10) goto 6 <__power_resume.5599+0x104 : 1e13a72 >			  ## le_low_power.c:178:9
 1e13a6c:    01 f7 58 91       	r1 = h[r9 + 344] (u)			  ## le_low_power.c:181:32
 1e13a70:    10 09             	r0 += r1			  ## le_low_power.c:181:45
 1e13a72:    90 fb a0 70       	r7 = r0 - r10
 1e13a76:    21 70             	r1 = 2			  ## le_low_power.c:185:18
 1e13a78:    40 08             	r0 = r4			  ## le_low_power.c:185:18
 1e13a7a:    bf f3 3f f9       	call -3458 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:185:18
 1e13a7e:    06 08             	r6 = r0			  ## le_low_power.c:185:18
 1e13a80:    00 fb ff 01       	r0 = 511 <BTCTLER_CL_RAM_TOTAL+0x1B : 1ff >			  ## le_low_power.c:187:31
 1e13a84:    50 bf             	r0 &= r7			  ## le_low_power.c:187:31
 1e13a86:    21 fd fe 6a       	r1 = r6 & 65024			  ## le_low_power.c:187:31
 1e13a8a:    e0 fd 00 21       	r2 = r1 | r0			  ## le_low_power.c:187:31
 1e13a8e:    21 70             	r1 = 2			  ## le_low_power.c:189:5
 1e13a90:    40 08             	r0 = r4			  ## le_low_power.c:189:5
 1e13a92:    4d 17             	call -358 <__set_ble_anchor_con : 1e1392e >			  ## le_low_power.c:189:5
 1e13a94:    f8 c1             	r0 = r7 << 7			  ## le_low_power.c:189:5
 1e13a96:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:197:33
 1e13a98:    21 fd 3f 59       	r1 = r5 & 63			  ## le_low_power.c:197:33
 1e13a9c:    50 b2             	r0 |= r1			  ## le_low_power.c:197:33
 1e13a9e:    02 fd 40 09       	r2 = r0 | 64			  ## le_low_power.c:197:33
 1e13aa2:    91 70             	r1 = 9			  ## le_low_power.c:197:5
 1e13aa4:    40 08             	r0 = r4			  ## le_low_power.c:197:5
 1e13aa6:    43 17             	call -378 <__set_ble_anchor_con : 1e1392e >			  ## le_low_power.c:197:5
 1e13aa8:    00 f7 58 91       	r0 = h[r9 + 344] (u)			  ## le_low_power.c:202:38
 1e13aac:    c9 fd 00 60       	r6 <= insert(r0, p:0, l:9)			  ## le_low_power.c:202:31
 1e13ab0:    a2 05             	r2 = r6.l (u)			  ## le_low_power.c:206:33
 1e13ab2:    21 70             	r1 = 2			  ## le_low_power.c:206:5
 1e13ab4:    40 08             	r0 = r4			  ## le_low_power.c:206:5
 1e13ab6:    3b 17             	call -394 <__set_ble_anchor_con : 1e1392e >			  ## le_low_power.c:206:5
 1e13ab8:    31 70             	r1 = 3			  ## le_low_power.c:221:24
 1e13aba:    40 08             	r0 = r4			  ## le_low_power.c:221:24
 1e13abc:    bf f3 1e f9       	call -3524 <__get_ble_anchor_con : 1e12cfc >			  ## le_low_power.c:221:24
 1e13ac0:    20 04             	r0 = r0.l (u)			  ## le_low_power.c:226:33
 1e13ac2:    80 fb a0 20       	r2 = r0 + r10			  ## le_low_power.c:226:50
 1e13ac6:    31 70             	r1 = 3			  ## le_low_power.c:226:5
 1e13ac8:    40 08             	r0 = r4			  ## le_low_power.c:226:5
 1e13aca:    31 17             	call -414 <__set_ble_anchor_con : 1e1392e >			  ## le_low_power.c:226:5
 1e13acc:    00 f4 04 89       	[r8 + 0] |= 4			  ## le_low_power.c:507:5
 1e13ad0:    5a 01             	{pc, r10-r4} = [sp++]			  ## le_low_power.c:508:1


__power_resume_post.5600:
 1e13ad2:    74 01             	[--sp] = {rets, r4}			  ## le_low_power.c:511:0
 1e13ad4:    c4 ff 38 80 1c 00 	r4 = 1867832 <uECC_vli_cmp_unsafe+0xC103C : 1c8038 >			  ## le_low_power.c:511:0
 1e13ada:    01 48             	r1 = [r4 + 0]			  ## le_low_power.c:519:12
 1e13adc:    23 f3 fd 1f       	if ((r1 & 8) != 0) goto -6 <__power_resume_post.5600+0x8 : 1e13ada >			  ## le_low_power.c:519:5
 1e13ae0:    bf f3 2b f9       	call -3498 <__get_clkn : 1e12d3a >			  ## le_low_power.c:521:16
 1e13ae4:    00 48             	r0 = [r4 + 0]			  ## le_low_power.c:524:9
 1e13ae6:    10 04             	r0 = r0.b0 (s)			  ## le_low_power.c:524:9
 1e13ae8:    f0 ef 04 c0       	ifs (r0 > -1) goto 8 <__power_resume_post.5600+0x22 : 1e13af4 >			  ## le_low_power.c:524:9
 1e13aec:    40 fc 38 7c       	r0 = r4 + 31800			  ## le_low_power.c:525:19
 1e13af0:    00 f4 02 09       	[r0 + 0] |= 2			  ## le_low_power.c:525:19
 1e13af4:    54 01             	{pc, r4} = [sp++]			  ## le_low_power.c:529:1
 1e13af6:    00 00             	nop


master_sca:
 1e13af8:    f4 01             	[--sp] = {psr, sr4, retx}
 1e13afa:    fa 00             	flushinv [r10]
 1e13afc:    96 00             	goto r6
 1e13afe:    64 00             	cli r4
 1e13b00:    4b 00             	testset b[r11]
 1e13b02:    32 00             	pc = [sp++]
 1e13b04:    1e 00             	sti
 1e13b06:    14 00             	lockset


conn_handler:
 1e13b08:    34 49             	r4 = [r4 + 76]
 1e13b0a:    e1 01             	[--sp] = {psr, reti}
 1e13b0c:    00 00             	nop
 1e13b0e:    00 00             	nop
 1e13b10:    f4 49             	r4 = [r4 + 124]
 1e13b12:    e1 01             	[--sp] = {psr, reti}
 1e13b14:    36 4a             	r6 = [r5 + 12]
 1e13b16:    e1 01             	[--sp] = {psr, reti}
 1e13b18:    00 00             	nop
 1e13b1a:    00 00             	nop
 1e13b1c:    da 4a             	[r5 + 52] = r2
 1e13b1e:    e1 01             	[--sp] = {psr, reti}


master_features_exchange_steps:
 1e13b20:    08 00             	csync
 1e13b22:    09 40             	[r0 + 0] = r1
 1e13b24:    ff 06             	r15 = -17


disconnect_steps:
 1e13b26:    02 00             	idle
 1e13b28:    00 80             	r0 += 0
 1e13b2a:    ff 0e             	r7 = r7 * r3


master_connection_update_steps:
 1e13b2c:    00 00             	nop
 1e13b2e:    00 80             	r0 += 0
 1e13b30:    ff 02             	[sp+60] = r7


version_ind_steps:
 1e13b32:    0c 00             	syscall
 1e13b34:    0c 40             	[r0 + 0] = r4
 1e13b36:    ff 08             	r15 = r15


adv_handler:
 1e13b38:    72 54             	r2 = h[r2 + 14] (u)
 1e13b3a:    e1 01             	[--sp] = {psr, reti}
 1e13b3c:    00 00             	nop
 1e13b3e:    00 00             	nop
 1e13b40:    00 00             	nop
 1e13b42:    00 00             	nop
 1e13b44:    00 00             	nop
 1e13b46:    00 00             	nop
 1e13b48:    00 00             	nop
 1e13b4a:    00 00             	nop
 1e13b4c:    00 00             	nop
 1e13b4e:    00 00             	nop


ll_adv_close:
 1e13b50:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:846:0
 1e13b52:    c5 ff 7c 0e 00 00 	r5 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:846:0
 1e13b58:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:852:9
 1e13b5a:    17 20             	if (r0 == 0) goto 46 <ll_adv_close+0x3A : 1e13b8a >			  ## ll_adv.c:852:9
 1e13b5c:    14 40             	r4 = [r0 + 4]			  ## ll_adv.c:858:44
 1e13b5e:    15 28             	if (r4 == 0) goto 42 <ll_adv_close+0x3A : 1e13b8a >
 1e13b60:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:868:19
 1e13b62:    02 20             	if (r0 == 0) goto 4 <ll_adv_close+0x18 : 1e13b68 >			  ## ll_adv.c:868:19
 1e13b64:    bf f3 42 ed       	call -9596 <le_hw_close : 1e115ec >			  ## ll_adv.c:869:9
 1e13b68:    50 48             	r0 = [r4 + 20]			  ## ll_adv.c:92:19
 1e13b6a:    04 20             	if (r0 == 0) goto 8 <ll_adv_close+0x24 : 1e13b74 >			  ## ll_adv.c:92:19
 1e13b6c:    bf f3 88 6a       	call -76528 <sys_timer_remove : 1e01080 >			  ## ll_adv.c:93:9
 1e13b70:    c5 f4 00 49       	[r4 + 20] = 0			  ## ll_adv.c:94:27
 1e13b74:    40 08             	r0 = r4			  ## ll_adv.c:874:5
 1e13b76:    bf f3 86 6a       	call -76532 <__bt_free : 1e01086 >			  ## ll_adv.c:874:5
 1e13b7a:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:876:5
 1e13b7c:    04 70             	r4 = 0			  ## ll_adv.c:876:5
 1e13b7e:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:876:22
 1e13b80:    0c 60             	b[r0 + 0] = r4			  ## ll_adv.c:878:20
 1e13b82:    03 20             	if (r0 == 0) goto 6 <ll_adv_close+0x3A : 1e13b8a >			  ## ll_adv.c:878:20
 1e13b84:    bf f3 7f 6a       	call -76546 <__bt_free : 1e01086 >			  ## ll_adv.c:70:9
 1e13b88:    0c 4a             	[r5 + 0] = r4			  ## ll_adv.c:71:16
 1e13b8a:    55 01             	{pc, r5, r4} = [sp++]


ll_response_timeout_stop:
 1e13b8c:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1457:0
 1e13b8e:    04 08             	r4 = r0			  ## link_layer.c:1457:0
 1e13b90:    00 f6 4c 41       	r0 = [r4 + 332]			  ## link_layer.c:1458:15
 1e13b94:    05 20             	if (r0 == 0) goto 10 <ll_response_timeout_stop+0x14 : 1e13ba0 >			  ## link_layer.c:1458:15
 1e13b96:    bf f3 73 6a       	call -76570 <sys_timer_remove : 1e01080 >			  ## link_layer.c:1459:9
 1e13b9a:    00 70             	r0 = 0			  ## link_layer.c:1460:32
 1e13b9c:    10 f6 4c 41       	[r4 + 332] = r0			  ## link_layer.c:1460:32
 1e13ba0:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1462:1


ll_supervision_timeout_stop:
 1e13ba2:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1274:0
 1e13ba4:    04 08             	r4 = r0			  ## link_layer.c:1274:0
 1e13ba6:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1275:15
 1e13baa:    05 20             	if (r0 == 0) goto 10 <ll_supervision_timeout_stop+0x14 : 1e13bb6 >			  ## link_layer.c:1275:15
 1e13bac:    bf f3 68 6a       	call -76592 <sys_timer_remove : 1e01080 >			  ## link_layer.c:1276:9
 1e13bb0:    00 70             	r0 = 0			  ## link_layer.c:1277:35
 1e13bb2:    10 f6 50 41       	[r4 + 336] = r0			  ## link_layer.c:1277:35
 1e13bb6:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1279:1


ll_close_conn_link:
 1e13bb8:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:941:0
 1e13bba:    04 08             	r4 = r0			  ## link_layer.c:941:0
 1e13bbc:    97 f3 ee 98       	call 3092956 <local_irq_disable : 106d9c >			  ## link_layer.c:243:5
 1e13bc0:    45 fc f8 00       	r5 = r4 + 248			  ## link_layer.c:243:5
 1e13bc4:    f0 4a             	r0 = [r5 + 60]			  ## link_layer.c:244:5
 1e13bc6:    56 fc 3c 00       	r6 = r5 + 60			  ## link_layer.c:244:5
 1e13bca:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x2E : 1e13be6 >			  ## link_layer.c:244:5
 1e13bce:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e13bd0:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e13bd2:    07 40             	r7 = [r0 + 0]
 1e13bd4:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e13bd6:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e13bd8:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e13bda:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e13bdc:    bf f3 53 6a       	call -76634 <__bt_free : 1e01086 >			  ## link_layer.c:246:9
 1e13be0:    70 08             	r0 = r7
 1e13be2:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x16 : 1e13bce >
 1e13be6:    97 f3 d7 98       	call 3092910 <local_irq_enable : 106d98 >			  ## link_layer.c:248:5
 1e13bea:    97 f3 d7 98       	call 3092910 <local_irq_disable : 106d9c >			  ## link_layer.c:202:5
 1e13bee:    10 4b             	r0 = [r5 + 68]			  ## link_layer.c:203:5
 1e13bf0:    56 fc 44 00       	r6 = r5 + 68			  ## link_layer.c:203:5
 1e13bf4:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x58 : 1e13c10 >			  ## link_layer.c:203:5
 1e13bf8:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e13bfa:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e13bfc:    07 40             	r7 = [r0 + 0]
 1e13bfe:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e13c00:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e13c02:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e13c04:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e13c06:    bf f3 3e 6a       	call -76676 <__bt_free : 1e01086 >			  ## link_layer.c:205:9
 1e13c0a:    70 08             	r0 = r7
 1e13c0c:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x40 : 1e13bf8 >
 1e13c10:    97 f3 c2 98       	call 3092868 <local_irq_enable : 106d98 >			  ## link_layer.c:207:5
 1e13c14:    97 f3 c2 98       	call 3092868 <local_irq_disable : 106d9c >			  ## link_layer.c:340:5
 1e13c18:    30 4b             	r0 = [r5 + 76]			  ## link_layer.c:341:5
 1e13c1a:    56 fc 4c 00       	r6 = r5 + 76			  ## link_layer.c:341:5
 1e13c1e:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0x82 : 1e13c3a >			  ## link_layer.c:341:5
 1e13c22:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e13c24:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e13c26:    07 40             	r7 = [r0 + 0]
 1e13c28:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e13c2a:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e13c2c:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e13c2e:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e13c30:    bf f3 29 6a       	call -76718 <__bt_free : 1e01086 >			  ## link_layer.c:343:9
 1e13c34:    70 08             	r0 = r7
 1e13c36:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x6A : 1e13c22 >
 1e13c3a:    97 f3 ad 98       	call 3092826 <local_irq_enable : 106d98 >			  ## link_layer.c:345:5
 1e13c3e:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:1184:5
 1e13c40:    c6 9a             	r6 = r5 + 12			  ## link_layer.c:1184:5
 1e13c42:    60 f2 0c 00       	if (r0 == r6) goto 24 <ll_close_conn_link+0xA6 : 1e13c5e >			  ## link_layer.c:1184:5
 1e13c46:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e13c48:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e13c4a:    07 40             	r7 = [r0 + 0]
 1e13c4c:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e13c4e:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e13c50:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e13c52:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e13c54:    bf f3 17 6a       	call -76754 <__bt_free : 1e01086 >			  ## link_layer.c:1186:9
 1e13c58:    70 08             	r0 = r7
 1e13c5a:    67 f2 f4 1f       	if (r7 != r6) goto -24 <ll_close_conn_link+0x8E : 1e13c46 >
 1e13c5e:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:964:15
 1e13c60:    02 20             	if (r0 == 0) goto 4 <ll_close_conn_link+0xAE : 1e13c66 >			  ## link_layer.c:964:15
 1e13c62:    bf f3 c3 ec       	call -9850 <le_hw_close : 1e115ec >			  ## link_layer.c:965:9
 1e13c66:    d0 48             	r0 = [r4 + 52]			  ## list.h:171:36
 1e13c68:    e1 48             	r1 = [r4 + 56]			  ## list.h:171:23
 1e13c6a:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e13c6c:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e13c6e:    40 fc 34 00       	r0 = r4 + 52			  ## link_layer.c:972:21
 1e13c72:    d8 48             	[r4 + 52] = r0			  ## list.h:172:17
 1e13c74:    e8 48             	[r4 + 56] = r0			  ## list.h:173:17
 1e13c76:    00 5a             	r0 = h[r5 + 0] (u)			  ## link_layer.c:974:28
 1e13c78:    c1 ff 20 2a 00 00 	r1 = 10784 <ll_hdl : 2a20 >			  ## link_layer.c:976:19
 1e13c7e:    02 53             	r2 = h[r1 + 32] (u)			  ## link_layer.c:829:20
 1e13c80:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:829:24
 1e13c84:    13 70             	r3 = 1			  ## link_layer.c:829:24
 1e13c86:    f8 fd 00 03       	r0 = r3 << r0			  ## link_layer.c:829:24
 1e13c8a:    e3 fd 00 02       	r0 = r2 & ~r0			  ## link_layer.c:829:20
 1e13c8e:    08 53             	h[r1 + 32] = r0			  ## link_layer.c:829:20
 1e13c90:    00 f9 22 10       	r0 = b[r1 + 34] (u)			  ## link_layer.c:976:19
 1e13c94:    f0 8f             	r0 += -1			  ## link_layer.c:976:19
 1e13c96:    10 f9 22 10       	b[r1 + 34] = r0			  ## link_layer.c:976:19
 1e13c9a:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:978:25
 1e13c9e:    01 70             	r1 = 0			  ## link_layer.c:978:5
 1e13ca0:    97 f3 be 98       	call 3092860 <os_mutex_del : 106e20 >			  ## link_layer.c:978:5
 1e13ca4:    40 08             	r0 = r4			  ## link_layer.c:980:5
 1e13ca6:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:980:5
 1e13ca8:    ff f3 ed 69       	goto -76838 <__bt_free : 1e01086 >			  ## link_layer.c:980:5


ll_delete_link:
 1e13cac:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:984:0
 1e13cae:    04 08             	r4 = r0			  ## link_layer.c:984:0
 1e13cb0:    05 f7 f8 40       	r5 = h[r4 + 248] (u)			  ## link_layer.c:987:15
 1e13cb4:    80 f3 81 08       	call 4354 <ll_get_update_handle : 1e14dba >			  ## link_layer.c:987:25
 1e13cb8:    05 f2 0c 10       	if (r5 != r0) goto 24 <ll_delete_link+0x28 : 1e13cd4 >			  ## link_layer.c:987:25
 1e13cbc:    c0 ff 78 0e 00 00 	r0 = 3704 <ll_update_handle : e78 >			  ## ll_slave.c:423:22
 1e13cc2:    01 70             	r1 = 0			  ## ll_slave.c:423:22
 1e13cc4:    09 50             	h[r0 + 0] = r1			  ## ll_slave.c:423:22
 1e13cc6:    11 f6 98 41       	[r4 + 408] = r1			  ## link_layer.c:989:32
 1e13cca:    01 f6 9c 41       	r1 = [r4 + 412]			  ## link_layer.c:990:19
 1e13cce:    02 22             	if (r1 == 0) goto 4 <ll_delete_link+0x28 : 1e13cd4 >			  ## link_layer.c:990:19
 1e13cd0:    00 70             	r0 = 0			  ## link_layer.c:991:13
 1e13cd2:    81 00             	call r1			  ## link_layer.c:991:13
 1e13cd4:    40 fc 40 00       	r0 = r4 + 64			  ## link_layer.c:994:26
 1e13cd8:    01 70             	r1 = 0			  ## link_layer.c:994:5
 1e13cda:    05 70             	r5 = 0			  ## link_layer.c:994:5
 1e13cdc:    97 f3 a2 98       	call 3092804 <os_mutex_pend : 106e24 >			  ## link_layer.c:994:5
 1e13ce0:    40 08             	r0 = r4			  ## link_layer.c:996:5
 1e13ce2:    54 17             	call -344 <ll_response_timeout_stop : 1e13b8c >			  ## link_layer.c:996:5
 1e13ce4:    40 08             	r0 = r4			  ## link_layer.c:998:5
 1e13ce6:    5d 17             	call -326 <ll_supervision_timeout_stop : 1e13ba2 >			  ## link_layer.c:998:5
 1e13ce8:    40 fc 98 00       	r0 = r4 + 152
 1e13cec:    4d 51             	h[r0 + 40] = r5			  ## link_layer.c:737:19
 1e13cee:    4d 60             	b[r0 + 4] = r5			  ## link_layer.c:739:5
 1e13cf0:    0d 40             	[r0 + 0] = r5			  ## link_layer.c:739:5
 1e13cf2:    40 08             	r0 = r4			  ## link_layer.c:1004:5
 1e13cf4:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:1004:5
 1e13cf6:    60 1f             	goto -320 <ll_close_conn_link : 1e13bb8 >			  ## link_layer.c:1004:5


ll_destroy:
 1e13cf8:    76 01             	[--sp] = {rets, r6-r4}			  ## link_layer.c:3399:0
 1e13cfa:    2a 17             	call -428 <ll_adv_close : 1e13b50 >			  ## link_layer.c:3410:5
 1e13cfc:    c4 ff 20 2a 00 00 	r4 = 10784 <ll_hdl : 2a20 >			  ## link_layer.c:3410:5
 1e13d02:    00 f9 22 40       	r0 = b[r4 + 34] (u)			  ## link_layer.c:3419:17
 1e13d06:    0b 20             	if (r0 == 0) goto 22 <ll_destroy+0x26 : 1e13d1e >			  ## link_layer.c:3419:17
 1e13d08:    90 48             	r0 = [r4 + 36]			  ## link_layer.c:3421:9
 1e13d0a:    45 fc 24 00       	r5 = r4 + 36			  ## link_layer.c:3421:9
 1e13d0e:    50 f2 06 00       	if (r0 == r5) goto 12 <ll_destroy+0x26 : 1e13d1e >			  ## link_layer.c:3421:9
 1e13d12:    46 f6 cc 0f       	r6 = [r0 ++= -52]
 1e13d16:    ca 17             	call -108 <ll_delete_link : 1e13cac >			  ## link_layer.c:3423:13
 1e13d18:    60 08             	r0 = r6			  ## link_layer.c:3423:13
 1e13d1a:    56 f2 fa 1f       	if (r6 != r5) goto -12 <ll_destroy+0x1A : 1e13d12 >			  ## link_layer.c:3423:13
 1e13d1e:    60 48             	r0 = [r4 + 24]			  ## link_layer.c:3428:24
 1e13d20:    03 20             	if (r0 == 0) goto 6 <ll_destroy+0x30 : 1e13d28 >			  ## link_layer.c:3428:24
 1e13d22:    80 98             	r0 = r4 + 8			  ## link_layer.c:3429:9
 1e13d24:    bf f3 b4 69       	call -76952 <thread_delete : 1e01090 >			  ## link_layer.c:3429:9
 1e13d28:    bf f3 c4 ec       	call -9848 <le_hw_destroy : 1e116b4 >			  ## link_layer.c:3433:5
 1e13d2c:    10 48             	r0 = [r4 + 4]			  ## link_layer.c:3436:17
 1e13d2e:    02 20             	if (r0 == 0) goto 4 <ll_destroy+0x3C : 1e13d34 >			  ## link_layer.c:3436:17
 1e13d30:    bf f3 c0 69       	call -76928 <lbuf_clear_btctrler : 1e010b4 >			  ## link_layer.c:3437:9
 1e13d34:    56 01             	{pc, r6-r4} = [sp++]			  ## link_layer.c:3446:1


ll_init:
 1e13d36:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:3328:0
 1e13d38:    c5 ff 20 2a 00 00 	r5 = 10784 <ll_hdl : 2a20 >			  ## link_layer.c:3328:0
 1e13d3e:    c0 ff 50 2a 00 00 	r0 = 10832 <pEvent_buf_static : 2a50 >			  ## link_layer.c:3350:28
 1e13d44:    08 4a             	[r5 + 0] = r0			  ## link_layer.c:3350:28
 1e13d46:    51 fc 24 00       	r1 = r5 + 36			  ## list.h:188:16
 1e13d4a:    99 4a             	[r5 + 36] = r1			  ## list.h:188:16
 1e13d4c:    a9 4a             	[r5 + 40] = r1			  ## list.h:189:16
 1e13d4e:    c4 ff aa 0e 00 00 	r4 = 3754 <le_param+0x22 : eaa >			  ## list.h:189:16
 1e13d54:    41 fc 76 00       	r1 = r4 + 118			  ## list.h:189:16
 1e13d58:    09 42             	[r1 + 0] = r1			  ## list.h:188:16
 1e13d5a:    19 42             	[r1 + 4] = r1			  ## list.h:189:16
 1e13d5c:    c2 92             	r2 = r1 + 12			  ## list.h:188:16
 1e13d5e:    3a 42             	[r1 + 12] = r2			  ## list.h:188:16
 1e13d60:    4a 42             	[r1 + 16] = r2			  ## list.h:189:16
 1e13d62:    c1 ff 80 0e 00 00 	r1 = 3712 <le_data_length.6 : e80 >			  ## list.h:189:16
 1e13d68:    12 70             	r2 = 1
 1e13d6a:    0a 62             	b[r1 + 0] = r2
 1e13d6c:    c1 ff 84 0e 00 00 	r1 = 3716 <le_data_length.7 : e84 >
 1e13d72:    0a 62             	b[r1 + 0] = r2
 1e13d74:    01 fb 00 02       	r1 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## link_layer.c:3370:24
 1e13d78:    bf f3 99 8d       	call -58574 <lbuf_init_btctrler : 1e058ae >			  ## link_layer.c:3370:24
 1e13d7c:    18 4a             	[r5 + 4] = r0			  ## link_layer.c:3370:22
 1e13d7e:    02 30             	if (r0 != 0) goto 4 <ll_init+0x4E : 1e13d84 >			  ## link_layer.c:3370:22
 1e13d80:    8f f3 be 7a       	call 2028924 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13d84:    bf f3 20 ed       	call -9664 <le_hw_init : 1e117c8 >			  ## link_layer.c:3373:9
 1e13d88:    80 9a             	r0 = r5 + 8			  ## link_layer.c:3375:9
 1e13d8a:    c1 ff 7d e0 e0 01 	r1 = 31514749 <update_target_end+0x19D : 1e0e07d >			  ## link_layer.c:3375:9
 1e13d90:    c2 ff 1c 4b e1 01 	r2 = 31542044 <ll_thread_process : 1e14b1c >			  ## link_layer.c:3375:9
 1e13d96:    c3 ff bc 0d 00 00 	r3 = 3516 <bt_task_thread : dbc >			  ## link_layer.c:3375:9
 1e13d9c:    bf f3 c3 8d       	call -58490 <thread_create : 1e05926 >			  ## link_layer.c:3375:9
 1e13da0:    00 70             	r0 = 0			  ## link_layer.c:3378:9
 1e13da2:    38 58             	h[r4 + 6] = r0			  ## link_layer.c:3378:9
 1e13da4:    28 58             	h[r4 + 4] = r0			  ## link_layer.c:3378:9
 1e13da6:    c1 ff d4 0d 00 00 	r1 = 3540 <hci_param : dd4 >			  ## link_layer.c:3378:9
 1e13dac:    82 52             	r2 = h[r1 + 16] (u)			  ## link_layer.c:3379:41
 1e13dae:    81 62             	r1 = b[r1 + 8] (u)			  ## link_layer.c:3380:41
 1e13db0:    18 58             	h[r4 + 2] = r0			  ## link_layer.c:3378:9
 1e13db2:    08 58             	h[r4 + 0] = r0			  ## link_layer.c:3378:9
 1e13db4:    9a 58             	h[r4 + 18] = r2			  ## link_layer.c:3379:29
 1e13db6:    09 69             	b[r4 + 16] = r1			  ## link_layer.c:3380:29
 1e13db8:    80 70             	r0 = 8			  ## link_layer.c:3380:29
 1e13dba:    e8 69             	b[r4 + 30] = r0			  ## link_layer.c:3316:37
 1e13dbc:    b0 71             	r0 = 27			  ## link_layer.c:3318:37
 1e13dbe:    08 59             	h[r4 + 32] = r0			  ## link_layer.c:3318:37
 1e13dc0:    55 01             	{pc, r5, r4} = [sp++]			  ## link_layer.c:3393:1


ll_link_for_handle:
 1e13dc2:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:800:0
 1e13dc4:    c3 ff 20 2a 00 00 	r3 = 10784 <ll_hdl : 2a20 >			  ## link_layer.c:800:0
 1e13dca:    02 f9 22 30       	r2 = b[r3 + 34] (u)			  ## link_layer.c:801:17
 1e13dce:    01 08             	r1 = r0			  ## link_layer.c:801:17
 1e13dd0:    00 70             	r0 = 0
 1e13dd2:    0e 24             	if (r2 == 0) goto 28 <ll_link_for_handle+0x2E : 1e13df0 >
 1e13dd4:    92 46             	r2 = [r3 + 36]
 1e13dd6:    43 82             	r3 += 36
 1e13dd8:    32 f2 0a 00       	if (r2 == r3) goto 20 <ll_link_for_handle+0x2E : 1e13df0 >
 1e13ddc:    04 f7 c4 20       	r4 = h[r2 + 196] (u)			  ## link_layer.c:810:13
 1e13de0:    14 f2 04 00       	if (r4 == r1) goto 8 <ll_link_for_handle+0x2A : 1e13dec >			  ## link_layer.c:810:13
 1e13de4:    02 44             	r2 = [r2 + 0]
 1e13de6:    32 f2 f9 1f       	if (r2 != r3) goto -14 <ll_link_for_handle+0x1A : 1e13ddc >
 1e13dea:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:816:1
 1e13dec:    20 fc cc ff       	r0 = r2 + -52
 1e13df0:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:816:1


ll_send_control_data:
 1e13df2:    63 01             	[--sp] = {r3}			  ## link_layer.c:1013:0
 1e13df4:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:1013:0
 1e13df6:    fa 0b             	sp += -12			  ## link_layer.c:1013:0
 1e13df8:    25 08             	r5 = r2			  ## link_layer.c:1013:0
 1e13dfa:    16 08             	r6 = r1			  ## link_layer.c:1013:0
 1e13dfc:    04 08             	r4 = r0			  ## link_layer.c:1013:0
 1e13dfe:    01 a2             	r1 = sp + 32			  ## link_layer.c:1013:0
 1e13e00:    29 02             	[sp+8] = r1			  ## link_layer.c:1017:5
 1e13e02:    50 08             	r0 = r5			  ## link_layer.c:1018:5
 1e13e04:    bf f3 bc 8d       	call -58504 <__vsprintf_len : 1e05980 >			  ## link_layer.c:1018:5
 1e13e08:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data+0x1E : 1e13e10 >
 1e13e0c:    8f f3 78 7a       	call 2028784 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13e10:    47 fc c8 00       	r7 = r4 + 200
 1e13e14:    0e 6e             	b[r7 + 0] = r6			  ## link_layer.c:1020:23
 1e13e16:    08 2a             	if (r5 == 0) goto 16 <ll_send_control_data+0x36 : 1e13e28 >			  ## link_layer.c:1020:23
 1e13e18:    02 a2             	r2 = sp + 32
 1e13e1a:    2a 02             	[sp+8] = r2			  ## link_layer.c:1023:9
 1e13e1c:    10 9e             	r0 = r7 + 1			  ## link_layer.c:1024:42
 1e13e1e:    51 08             	r1 = r5			  ## link_layer.c:1024:16
 1e13e20:    bf f3 57 85       	call -62802 <__vsprintf : 1e048d2 >			  ## link_layer.c:1024:16
 1e13e24:    11 90             	r1 = r0 + 1			  ## link_layer.c:1024:13
 1e13e26:    01 18             	goto 2 <ll_send_control_data+0x38 : 1e13e2a >
 1e13e28:    11 70             	r1 = 1
 1e13e2a:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1030:39
 1e13e2c:    19 02             	[sp+4] = r1			  ## link_layer.c:1030:5
 1e13e2e:    01 70             	r1 = 0			  ## link_layer.c:1030:5
 1e13e30:    02 70             	r2 = 0			  ## link_layer.c:1030:5
 1e13e32:    33 70             	r3 = 3			  ## link_layer.c:1030:5
 1e13e34:    0f 02             	[sp] = r7			  ## link_layer.c:1030:5
 1e13e36:    bf f3 da ee       	call -8780 <le_hw_send_packet_high : 1e11bee >			  ## link_layer.c:1030:5
 1e13e3a:    06 0a             	sp += 12			  ## link_layer.c:1030:5
 1e13e3c:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:1031:1
 1e13e3e:    02 0a             	sp += 4			  ## link_layer.c:1031:1
 1e13e40:    20 00             	rts			  ## link_layer.c:1031:1


ll_send_control_data_callback:
 1e13e42:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:1035:0
 1e13e44:    fa 0b             	sp += -12			  ## link_layer.c:1035:0
 1e13e46:    14 08             	r4 = r1			  ## link_layer.c:1035:0
 1e13e48:    05 08             	r5 = r0			  ## link_layer.c:1035:0
 1e13e4a:    01 a2             	r1 = sp + 32			  ## link_layer.c:1035:0
 1e13e4c:    29 02             	[sp+8] = r1			  ## link_layer.c:1039:5
 1e13e4e:    c6 ff b4 e0 e0 01 	r6 = 31514804 <update_target_end+0x1D4 : 1e0e0b4 >			  ## link_layer.c:1039:5
 1e13e54:    60 08             	r0 = r6			  ## link_layer.c:1040:5
 1e13e56:    bf f3 93 8d       	call -58586 <__vsprintf_len : 1e05980 >			  ## link_layer.c:1040:5
 1e13e5a:    00 e3 02 30       	if (r0 < 48) goto 4 <ll_send_control_data_callback+0x20 : 1e13e62 >
 1e13e5e:    8f f3 4f 7a       	call 2028702 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13e62:    80 71             	r0 = 24			  ## link_layer.c:1042:23
 1e13e64:    57 fc c8 00       	r7 = r5 + 200			  ## link_layer.c:1042:23
 1e13e68:    08 6e             	b[r7 + 0] = r0			  ## link_layer.c:1042:23
 1e13e6a:    02 a2             	r2 = sp + 32			  ## link_layer.c:1042:23
 1e13e6c:    2a 02             	[sp+8] = r2			  ## link_layer.c:1045:9
 1e13e6e:    10 9e             	r0 = r7 + 1			  ## link_layer.c:1046:42
 1e13e70:    61 08             	r1 = r6			  ## link_layer.c:1046:16
 1e13e72:    bf f3 2e 85       	call -62884 <__vsprintf : 1e048d2 >			  ## link_layer.c:1046:16
 1e13e76:    01 4a             	r1 = [r5 + 0]			  ## link_layer.c:1052:39
 1e13e78:    10 80             	r0 += 1			  ## link_layer.c:1046:13
 1e13e7a:    18 02             	[sp+4] = r0			  ## link_layer.c:1052:5
 1e13e7c:    02 70             	r2 = 0			  ## link_layer.c:1052:5
 1e13e7e:    33 70             	r3 = 3			  ## link_layer.c:1052:5
 1e13e80:    0f 02             	[sp] = r7			  ## link_layer.c:1052:5
 1e13e82:    10 08             	r0 = r1			  ## link_layer.c:1052:5
 1e13e84:    41 08             	r1 = r4			  ## link_layer.c:1052:5
 1e13e86:    bf f3 b2 ee       	call -8860 <le_hw_send_packet_high : 1e11bee >			  ## link_layer.c:1052:5
 1e13e8a:    06 0a             	sp += 12			  ## link_layer.c:1052:5
 1e13e8c:    57 01             	{pc, r7-r4} = [sp++]			  ## link_layer.c:1053:1


__hci_emit_le_meta_event:
 1e13e8e:    62 01             	[--sp] = {r3, r2}			  ## link_layer.c:387:0
 1e13e90:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:387:0
 1e13e92:    fe 0b             	sp += -4			  ## link_layer.c:387:0
 1e13e94:    14 08             	r4 = r1			  ## link_layer.c:387:0
 1e13e96:    05 08             	r5 = r0			  ## link_layer.c:387:0
 1e13e98:    f5 ee 17 80       	if (r5 > 239) goto 46 <__hci_emit_le_meta_event+0x3C : 1e13eca >			  ## link_layer.c:387:0
 1e13e9c:    c0 ff d4 0d 00 00 	r0 = 3540 <hci_param : dd4 >			  ## link_layer.c:374:9
 1e13ea2:    70 60             	r0 = b[r0 + 7] (u)			  ## link_layer.c:374:9
 1e13ea4:    05 f3 3a 00       	if ((r0 & 32) == 0) goto 116 <__hci_emit_le_meta_event+0x8E : 1e13f1c >			  ## link_layer.c:374:9
 1e13ea8:    50 fc ff ff       	r0 = r5 + -1			  ## link_layer.c:375:23
 1e13eac:    81 70             	r1 = 8			  ## link_layer.c:376:47
 1e13eae:    e0 fe 10 10       	r1 = r0 / r1 (s)			  ## link_layer.c:376:47
 1e13eb2:    c2 ff 88 0e 00 00 	r2 = 3720 <le_param : e88 >			  ## link_layer.c:376:13
 1e13eb8:    01 fa 00 12       	r1 = b[r1+r2] (u)			  ## link_layer.c:376:13
 1e13ebc:    20 fd 07 09       	r0 = r0 & 7			  ## link_layer.c:376:54
 1e13ec0:    12 70             	r2 = 1			  ## link_layer.c:376:54
 1e13ec2:    f8 fd 00 02       	r0 = r2 << r0			  ## link_layer.c:376:54
 1e13ec6:    01 f0 29 00       	if ((r1 & r0) == 0) goto 82 <__hci_emit_le_meta_event+0x8E : 1e13f1c >			  ## link_layer.c:376:54
 1e13eca:    c1 a1             	r1 = sp + 28
 1e13ecc:    09 02             	[sp] = r1			  ## link_layer.c:395:5
 1e13ece:    40 08             	r0 = r4			  ## link_layer.c:360:12
 1e13ed0:    bf f3 56 8d       	call -58708 <__vsprintf_len : 1e05980 >			  ## link_layer.c:360:12
 1e13ed4:    c8 ff 20 2a 00 00 	r8 = 10784 <ll_hdl : 2a20 >
 1e13eda:    02 f6 04 80       	r2 = [r8 + 4]			  ## link_layer.c:361:41
 1e13ede:    07 08             	r7 = r0			  ## link_layer.c:360:12
 1e13ee0:    31 9e             	r1 = r7 + 3			  ## link_layer.c:361:62
 1e13ee2:    20 08             	r0 = r2			  ## link_layer.c:361:13
 1e13ee4:    bf f3 c6 8d       	call -58484 <lbuf_alloc_btctrler : 1e05a74 >			  ## link_layer.c:361:13
 1e13ee8:    06 08             	r6 = r0			  ## link_layer.c:361:13
 1e13eea:    03 2c             	if (r6 == 0) goto 6 <__hci_emit_le_meta_event+0x64 : 1e13ef2 >			  ## link_layer.c:362:9
 1e13eec:    10 9e             	r0 = r7 + 1			  ## link_layer.c:360:9
 1e13eee:    18 6c             	b[r6 + 1] = r0			  ## link_layer.c:366:16
 1e13ef0:    05 18             	goto 10 <__hci_emit_le_meta_event+0x6E : 1e13efc >			  ## link_layer.c:366:16
 1e13ef2:    8f f3 05 7a       	call 2028554 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13ef6:    8f f3 03 7a       	call 2028550 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13efa:    06 70             	r6 = 0			  ## cpu.h:148:5
 1e13efc:    e0 73             	r0 = 62			  ## link_layer.c:400:18
 1e13efe:    08 6c             	b[r6 + 0] = r0			  ## link_layer.c:400:18
 1e13f00:    2d 6c             	b[r6 + 2] = r5			  ## link_layer.c:401:20
 1e13f02:    c2 a1             	r2 = sp + 28			  ## link_layer.c:401:20
 1e13f04:    0a 02             	[sp] = r2			  ## link_layer.c:403:5
 1e13f06:    30 9c             	r0 = r6 + 3			  ## link_layer.c:404:28
 1e13f08:    41 08             	r1 = r4			  ## link_layer.c:404:5
 1e13f0a:    bf f3 e2 84       	call -63036 <__vsprintf : 1e048d2 >			  ## link_layer.c:404:5
 1e13f0e:    60 08             	r0 = r6			  ## link_layer.c:411:5
 1e13f10:    bf f3 23 8e       	call -58298 <lbuf_push_btctrler : 1e05b5a >			  ## link_layer.c:411:5
 1e13f14:    80 fc 08 00       	r0 = r8 + 8			  ## link_layer.c:414:5
 1e13f18:    bf f3 34 8e       	call -58264 <thread_resume : 1e05b84 >			  ## link_layer.c:414:5
 1e13f1c:    02 0a             	sp += 4
 1e13f1e:    18 01             	{rets, r8-r4} = [sp++]
 1e13f20:    04 0a             	sp += 8
 1e13f22:    20 00             	rts


le_connection_update_complete_event:
 1e13f24:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_events.c:40:0
 1e13f26:    fa 0b             	sp += -12			  ## ll_events.c:40:0
 1e13f28:    14 08             	r4 = r1			  ## ll_events.c:40:0
 1e13f2a:    05 08             	r5 = r0			  ## ll_events.c:40:0
 1e13f2c:    32 e0 0a 80       	if (r2 > 3) goto 20 <.GJTIE739_0_0_+0xA : 1e13f44 >			  ## ll_events.c:41:5
 1e13f30:    20 08             	r0 = r2			  ## ll_events.c:41:5
 1e13f32:    02 70             	r2 = 0			  ## ll_events.c:41:5
 1e13f34:    a0 00             	tbb [r0]


.GJTIS739_0_0_:
 1e13f36:    10     < 16 : 0x10 >
 1e13f37:    02     < 2 : 0x2 >
 1e13f38:    0a     < 10 : 0xA >
 1e13f39:    0f     < 15 : 0xF >
 1e13f3a:    02 38             	if (r4 != 0) goto 4 <.GJTIE739_0_0_+0x6 : 1e13f40 >
 1e13f3c:    8f f3 e0 79       	call 2028480 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13f40:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_events.c:50:18
 1e13f42:    09 18             	goto 18 <.GJTIE739_0_0_+0x1C : 1e13f56 >
 1e13f44:    8f f3 dc 79       	call 2028472 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13f48:    06 18             	goto 12 <.GJTIE739_0_0_+0x1C : 1e13f56 >			  ## cpu.h:148:5
 1e13f4a:    02 38             	if (r4 != 0) goto 4 <.GJTIE739_0_0_+0x16 : 1e13f50 >
 1e13f4c:    8f f3 d8 79       	call 2028464 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13f50:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_events.c:54:18
 1e13f52:    01 18             	goto 2 <.GJTIE739_0_0_+0x1C : 1e13f56 >
 1e13f54:    a2 71             	r2 = 26
 1e13f56:    03 f7 f8 50       	r3 = h[r5 + 248] (u)			  ## ll_events.c:65:30
 1e13f5a:    f4 5a             	r4 = h[r5 + 30] (u)			  ## ll_events.c:66:30
 1e13f5c:    00 5b             	r0 = h[r5 + 32] (u)			  ## ll_events.c:67:30
 1e13f5e:    11 5b             	r1 = h[r5 + 34] (u)			  ## ll_events.c:68:30
 1e13f60:    29 02             	[sp+8] = r1			  ## ll_events.c:62:5
 1e13f62:    18 02             	[sp+4] = r0			  ## ll_events.c:62:5
 1e13f64:    c1 ff 88 e0 e0 01 	r1 = 31514760 <update_target_end+0x1A8 : 1e0e088 >			  ## ll_events.c:62:5
 1e13f6a:    30 70             	r0 = 3			  ## ll_events.c:62:5
 1e13f6c:    0c 02             	[sp] = r4			  ## ll_events.c:62:5
 1e13f6e:    8f 17             	call -226 <__hci_emit_le_meta_event : 1e13e8e >			  ## ll_events.c:62:5
 1e13f70:    06 0a             	sp += 12
 1e13f72:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_events.c:75:1


__event_oneshot_add:
 1e13f74:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:136:0
 1e13f76:    24 08             	r4 = r2			  ## link_layer.c:136:0
 1e13f78:    17 08             	r7 = r1			  ## link_layer.c:136:0
 1e13f7a:    05 08             	r5 = r0			  ## link_layer.c:136:0
 1e13f7c:    00 71             	r0 = 16			  ## link_layer.c:137:25
 1e13f7e:    bf f3 26 8e       	call -58292 <__bt_malloc : 1e05bce >			  ## link_layer.c:137:25
 1e13f82:    06 08             	r6 = r0			  ## link_layer.c:137:25
 1e13f84:    0c 2c             	if (r6 == 0) goto 24 <__event_oneshot_add+0x2A : 1e13f9e >			  ## link_layer.c:137:25
 1e13f86:    97 f3 09 97       	call 3091986 <local_irq_disable : 106d9c >			  ## link_layer.c:141:5
 1e13f8a:    2f 4c             	[r6 + 8] = r7			  ## link_layer.c:143:17
 1e13f8c:    3c 4c             	[r6 + 12] = r4			  ## link_layer.c:144:20
 1e13f8e:    50 fc 3c 01       	r0 = r5 + 316			  ## link_layer.c:144:20
 1e13f92:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e13f94:    1e 40             	[r0 + 4] = r6			  ## list.h:137:16
 1e13f96:    08 4c             	[r6 + 0] = r0			  ## list.h:138:16
 1e13f98:    19 4c             	[r6 + 4] = r1			  ## list.h:139:16
 1e13f9a:    0e 42             	[r1 + 0] = r6			  ## list.h:140:16
 1e13f9c:    04 18             	goto 8 <__event_oneshot_add+0x32 : 1e13fa6 >			  ## list.h:140:16
 1e13f9e:    8f f3 af 79       	call 2028382 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13fa2:    97 f3 fb 96       	call 3091958 <local_irq_disable : 106d9c >			  ## link_layer.c:141:5
 1e13fa6:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:147:5
 1e13fa8:    d7 f3 f6 96       	goto 3091948 <local_irq_enable : 106d98 >			  ## link_layer.c:147:5


__event_oneshot_post_add:
 1e13fac:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:255:0
 1e13fae:    24 08             	r4 = r2			  ## link_layer.c:255:0
 1e13fb0:    17 08             	r7 = r1			  ## link_layer.c:255:0
 1e13fb2:    05 08             	r5 = r0			  ## link_layer.c:255:0
 1e13fb4:    00 71             	r0 = 16			  ## link_layer.c:256:25
 1e13fb6:    bf f3 0a 8e       	call -58348 <__bt_malloc : 1e05bce >			  ## link_layer.c:256:25
 1e13fba:    06 08             	r6 = r0			  ## link_layer.c:256:25
 1e13fbc:    0c 2c             	if (r6 == 0) goto 24 <__event_oneshot_post_add+0x2A : 1e13fd6 >			  ## link_layer.c:256:25
 1e13fbe:    97 f3 ed 96       	call 3091930 <local_irq_disable : 106d9c >			  ## link_layer.c:260:5
 1e13fc2:    2f 4c             	[r6 + 8] = r7			  ## link_layer.c:262:17
 1e13fc4:    3c 4c             	[r6 + 12] = r4			  ## link_layer.c:263:20
 1e13fc6:    50 fc 44 01       	r0 = r5 + 324			  ## link_layer.c:263:20
 1e13fca:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e13fcc:    1e 40             	[r0 + 4] = r6			  ## list.h:137:16
 1e13fce:    08 4c             	[r6 + 0] = r0			  ## list.h:138:16
 1e13fd0:    19 4c             	[r6 + 4] = r1			  ## list.h:139:16
 1e13fd2:    0e 42             	[r1 + 0] = r6			  ## list.h:140:16
 1e13fd4:    04 18             	goto 8 <__event_oneshot_post_add+0x32 : 1e13fde >			  ## list.h:140:16
 1e13fd6:    8f f3 93 79       	call 2028326 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13fda:    97 f3 df 96       	call 3091902 <local_irq_disable : 106d9c >			  ## link_layer.c:260:5
 1e13fde:    17 01             	{rets, r7-r4} = [sp++]			  ## link_layer.c:266:5
 1e13fe0:    d7 f3 da 96       	goto 3091892 <local_irq_enable : 106d98 >			  ## link_layer.c:266:5


le_read_remote_used_features_complete_event:
 1e13fe4:    74 01             	[--sp] = {rets, r4}			  ## ll_events.c:78:0
 1e13fe6:    fe 0b             	sp += -4			  ## ll_events.c:78:0
 1e13fe8:    14 08             	r4 = r1			  ## ll_events.c:78:0
 1e13fea:    03 08             	r3 = r0			  ## ll_events.c:78:0
 1e13fec:    04 24             	if (r2 == 0) goto 8 <le_read_remote_used_features_complete_event+0x12 : 1e13ff6 >			  ## ll_events.c:78:0
 1e13fee:    32 e0 04 10       	if (r2 != 3) goto 8 <le_read_remote_used_features_complete_event+0x16 : 1e13ffa >			  ## ll_events.c:78:0
 1e13ff2:    a2 71             	r2 = 26			  ## ll_events.c:78:0
 1e13ff4:    04 18             	goto 8 <le_read_remote_used_features_complete_event+0x1A : 1e13ffe >			  ## ll_events.c:78:0
 1e13ff6:    02 70             	r2 = 0			  ## ll_events.c:78:0
 1e13ff8:    02 18             	goto 4 <le_read_remote_used_features_complete_event+0x1A : 1e13ffe >			  ## ll_events.c:78:0
 1e13ffa:    8f f3 81 79       	call 2028290 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e13ffe:    03 f7 f8 30       	r3 = h[r3 + 248] (u)
 1e14002:    c1 ff 8e e0 e0 01 	r1 = 31514766 <update_target_end+0x1AE : 1e0e08e >
 1e14008:    02 28             	if (r4 == 0) goto 4 <le_read_remote_used_features_complete_event+0x2A : 1e1400e >
 1e1400a:    54 81             	r4 += 21			  ## ll_events.c:99:43
 1e1400c:    01 18             	goto 2 <le_read_remote_used_features_complete_event+0x2C : 1e14010 >
 1e1400e:    04 70             	r4 = 0			  ## ll_events.c:93:9
 1e14010:    40 70             	r0 = 4
 1e14012:    0c 02             	[sp] = r4
 1e14014:    3c 17             	call -392 <__hci_emit_le_meta_event : 1e13e8e >
 1e14016:    02 0a             	sp += 4
 1e14018:    54 01             	{pc, r4} = [sp++]			  ## ll_events.c:104:1


ll_disconnect_process:
 1e1401a:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1248:0
 1e1401c:    fe 0b             	sp += -4			  ## link_layer.c:1248:0
 1e1401e:    02 f9 3c 00       	r2 = b[r0 + 60] (u)			  ## link_layer.c:1251:9
 1e14022:    14 08             	r4 = r1			  ## link_layer.c:1251:9
 1e14024:    82 e0 13 00       	if (r2 == 8) goto 38 <ll_disconnect_process+0x34 : 1e1404e >
 1e14028:    05 f9 f8 00       	r5 = b[r0 + 248] (u)			  ## link_layer.c:1249:24
 1e1402c:    81 70             	r1 = 8			  ## link_layer.c:1249:24
 1e1402e:    11 f9 3c 00       	b[r0 + 60] = r1			  ## link_layer.c:1256:17
 1e14032:    c0 ff 28 2a 00 00 	r0 = 10792 <ll_hdl+0x8 : 2a28 >			  ## link_layer.c:1259:5
 1e14038:    bf f3 a4 8d       	call -58552 <thread_resume : 1e05b84 >			  ## link_layer.c:1259:5
 1e1403c:    c1 ff 9e e0 e0 01 	r1 = 31514782 <update_target_end+0x1BE : 1e0e09e >			  ## ll_events.c:382:5
 1e14042:    50 70             	r0 = 5			  ## ll_events.c:382:5
 1e14044:    02 70             	r2 = 0			  ## ll_events.c:382:5
 1e14046:    0c 02             	[sp] = r4			  ## ll_events.c:382:5
 1e14048:    53 08             	r3 = r5			  ## ll_events.c:382:5
 1e1404a:    bf f3 9e e8       	call -11972 <hci_send_event : 1e1118a >			  ## ll_events.c:382:5
 1e1404e:    02 0a             	sp += 4
 1e14050:    55 01             	{pc, r5, r4} = [sp++]			  ## link_layer.c:1263:1


ll_control_procedure_finish:
 1e14052:    7a 01             	[--sp] = {rets, r10-r4}			  ## link_layer.c:523:0
 1e14054:    fa 0b             	sp += -12			  ## link_layer.c:523:0
 1e14056:    05 08             	r5 = r0			  ## link_layer.c:523:0
 1e14058:    5a fc c0 00       	r10 = r5 + 192			  ## link_layer.c:523:0
 1e1405c:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## link_layer.c:524:39
 1e14060:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:527:25
 1e14062:    50 09             	r0 += r5			  ## link_layer.c:527:25
 1e14064:    04 fc 98 00       	r4 = r0 + 152			  ## link_layer.c:527:25
 1e14068:    43 68             	r3 = b[r4 + 4] (u)			  ## link_layer.c:527:25
 1e1406a:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:527:25
 1e1406c:    46 f8 00 03       	r6 = h[r0+r3<<1] (u)			  ## link_layer.c:527:25
 1e14070:    87 05             	r7 = r6.b0 (u)			  ## link_layer.c:529:10
 1e14072:    28 08             	r8 = r2			  ## link_layer.c:529:10
 1e14074:    19 08             	r9 = r1
 1e14076:    00 ff ff 70 13 00 	if (r7 == 255) goto 38 <ll_control_procedure_finish+0x50 : 1e140a2 >
 1e1407c:    11 96             	r1 = r3 + 1			  ## link_layer.c:512:33
 1e1407e:    42 04             	r2 = r1.b0 (u)
 1e14080:    46 f8 00 02       	r6 = h[r0+r2<<1] (u)
 1e14084:    82 05             	r2 = r6.b0 (u)			  ## link_layer.c:513:32
 1e14086:    11 80             	r1 += 1			  ## link_layer.c:513:13
 1e14088:    01 ff ff 20 f8 ff 	if (r2 != 255) goto -16 <ll_control_procedure_finish+0x2C : 1e1407e >			  ## link_layer.c:513:13
 1e1408e:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:532:33
 1e14090:    11 71             	r1 = 17			  ## link_layer.c:532:9
 1e14092:    02 70             	r2 = 0			  ## link_layer.c:532:9
 1e14094:    bf f3 25 ef       	call -8630 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:532:9
 1e14098:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:533:33
 1e1409a:    21 71             	r1 = 18			  ## link_layer.c:533:9
 1e1409c:    02 70             	r2 = 0			  ## link_layer.c:533:9
 1e1409e:    bf f3 20 ef       	call -8640 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:533:9
 1e140a2:    30 d2             	r0 = r6 >> 8
 1e140a4:    e0 e0 6b 80       	if (r0 > 14) goto 214 <.GJTIE747_0_0_+0xC4 : 1e1417e >
 1e140a8:    a0 00             	tbb [r0]


.GJTIS747_0_0_:
 1e140aa:    08     < 8 : 0x8 >
 1e140ab:    08     < 8 : 0x8 >
 1e140ac:    1e     < 30 : 0x1E >
 1e140ad:    6a     < 106 : 0x6A >
 1e140ae:    6a     < 106 : 0x6A >
 1e140af:    34     < 52 : 0x34 >
 1e140b0:    0d     < 13 : 0xD >
 1e140b1:    0d     < 13 : 0xD >
 1e140b2:    12     < 18 : 0x12 >
 1e140b3:    74     < 116 : 0x74 >
 1e140b4:    74     < 116 : 0x74 >
 1e140b5:    74     < 116 : 0x74 >
 1e140b6:    74     < 116 : 0x74 >
 1e140b7:    6a     < 106 : 0x6A >
 1e140b8:    18     < 24 : 0x18 >
 1e140b9:    00     < 0 : 0x0 >
 1e140ba:    50 08             	r0 = r5
 1e140bc:    91 08             	r1 = r9
 1e140be:    82 08             	r2 = r8
 1e140c0:    31 17             	call -414 <le_connection_update_complete_event : 1e13f24 >
 1e140c2:    5d 18             	goto 186 <.GJTIE747_0_0_+0xC4 : 1e1417e >
 1e140c4:    50 08             	r0 = r5
 1e140c6:    91 08             	r1 = r9
 1e140c8:    82 08             	r2 = r8
 1e140ca:    8c 17             	call -232 <le_read_remote_used_features_complete_event : 1e13fe4 >
 1e140cc:    58 18             	goto 176 <.GJTIE747_0_0_+0xC4 : 1e1417e >
 1e140ce:    08 e0 30 00       	if (r8 == 0) goto 96 <.GJTIE747_0_0_+0x78 : 1e14132 >
 1e140d2:    48 e0 30 10       	if (r8 != 4) goto 96 <.GJTIE747_0_0_+0x7C : 1e14136 >
 1e140d6:    28 72             	r8 = 34
 1e140d8:    30 18             	goto 96 <.GJTIE747_0_0_+0x80 : 1e1413a >
 1e140da:    08 e0 48 00       	if (r8 == 0) goto 144 <.GJTIE747_0_0_+0xB4 : 1e1416e >
 1e140de:    48 e0 48 10       	if (r8 != 4) goto 144 <.GJTIE747_0_0_+0xB8 : 1e14172 >
 1e140e2:    28 72             	r8 = 34
 1e140e4:    48 18             	goto 144 <.GJTIE747_0_0_+0xBC : 1e14176 >
 1e140e6:    06 f7 3a a0       	r6 = h[r10 + 58] (u)			  ## link_layer.c:1669:50
 1e140ea:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1669:29
 1e140ec:    41 70             	r1 = 4			  ## link_layer.c:1669:5
 1e140ee:    03 70             	r3 = 0			  ## link_layer.c:1669:5
 1e140f0:    62 08             	r2 = r6			  ## link_layer.c:1669:5
 1e140f2:    bf f3 f6 ee       	call -8724 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:1669:5
 1e140f6:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:1673:60
 1e140fa:    c1 ff a0 48 e1 01 	r1 = 31541408 <__connection_upadte : 1e148a0 >			  ## link_layer.c:1673:5
 1e14100:    50 08             	r0 = r5			  ## link_layer.c:1673:5
 1e14102:    38 17             	call -400 <__event_oneshot_add : 1e13f74 >			  ## link_layer.c:1673:5
 1e14104:    c1 ff de 48 e1 01 	r1 = 31541470 <__master_ll_send_conn_update_done : 1e148de >			  ## link_layer.c:1675:5
 1e1410a:    50 08             	r0 = r5			  ## link_layer.c:1675:5
 1e1410c:    62 08             	r2 = r6			  ## link_layer.c:1675:5
 1e1410e:    4e 17             	call -356 <__event_oneshot_post_add : 1e13fac >			  ## link_layer.c:1675:5
 1e14110:    36 18             	goto 108 <.GJTIE747_0_0_+0xC4 : 1e1417e >			  ## link_layer.c:1675:5
 1e14112:    06 f7 3a a0       	r6 = h[r10 + 58] (u)			  ## link_layer.c:2008:50
 1e14116:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:2008:29
 1e14118:    41 70             	r1 = 4			  ## link_layer.c:2008:5
 1e1411a:    13 70             	r3 = 1			  ## link_layer.c:2008:5
 1e1411c:    62 08             	r2 = r6			  ## link_layer.c:2008:5
 1e1411e:    bf f3 e0 ee       	call -8768 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:2008:5
 1e14122:    62 fc ff ff       	r2 = r6 + -1			  ## link_layer.c:2010:61
 1e14126:    c1 ff e6 48 e1 01 	r1 = 31541478 <__channel_map_upadte : 1e148e6 >			  ## link_layer.c:2010:5
 1e1412c:    50 08             	r0 = r5			  ## link_layer.c:2010:5
 1e1412e:    22 17             	call -444 <__event_oneshot_add : 1e13f74 >			  ## link_layer.c:2010:5
 1e14130:    26 18             	goto 76 <.GJTIE747_0_0_+0xC4 : 1e1417e >			  ## link_layer.c:2010:5
 1e14132:    08 70             	r8 = 0
 1e14134:    02 18             	goto 4 <.GJTIE747_0_0_+0x80 : 1e1413a >
 1e14136:    8f f3 e3 78       	call 2027974 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1413a:    03 f7 38 a0       	r3 = h[r10 + 56] (u)			  ## ll_events.c:431:5
 1e1413e:    06 f9 15 90       	r6 = b[r9 + 21] (u)			  ## ll_events.c:431:5
 1e14142:    92 fc 15 00       	r2 = r9 + 21			  ## ll_events.c:430:17
 1e14146:    11 70             	r1 = 1			  ## ll_events.c:431:5
 1e14148:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e1414a:    bf f3 ff 8c       	call -58882 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_events.c:431:5
 1e1414e:    05 08             	r5 = r0			  ## ll_events.c:431:5
 1e14150:    31 70             	r1 = 3			  ## ll_events.c:431:5
 1e14152:    20 08             	r0 = r2			  ## ll_events.c:431:5
 1e14154:    bf f3 fa 8c       	call -58892 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_events.c:431:5
 1e14158:    28 02             	[sp+8] = r0			  ## ll_events.c:431:5
 1e1415a:    1d 02             	[sp+4] = r5			  ## ll_events.c:431:5
 1e1415c:    c1 ff a6 e0 e0 01 	r1 = 31514790 <update_target_end+0x1C6 : 1e0e0a6 >			  ## ll_events.c:431:5
 1e14162:    c0 70             	r0 = 12			  ## ll_events.c:431:5
 1e14164:    0e 02             	[sp] = r6			  ## ll_events.c:431:5
 1e14166:    82 08             	r2 = r8			  ## ll_events.c:431:5
 1e14168:    bf f3 0f e8       	call -12258 <hci_send_event : 1e1118a >			  ## ll_events.c:431:5
 1e1416c:    08 18             	goto 16 <.GJTIE747_0_0_+0xC4 : 1e1417e >
 1e1416e:    68 71             	r8 = 22
 1e14170:    02 18             	goto 4 <.GJTIE747_0_0_+0xBC : 1e14176 >
 1e14172:    8f f3 c5 78       	call 2027914 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e14176:    e4 fd 00 18       	r1 = r8.b0 (u)			  ## ll_events.c:301:5
 1e1417a:    50 08             	r0 = r5			  ## ll_events.c:301:5
 1e1417c:    4e 17             	call -356 <ll_disconnect_process : 1e1401a >			  ## ll_events.c:301:5
 1e1417e:    00 70             	r0 = 0
 1e14180:    08 48             	[r4 + 0] = r0			  ## link_layer.c:606:18
 1e14182:    02 f9 00 a0       	r2 = b[r10 + 0] (u)			  ## link_layer.c:608:28
 1e14186:    11 94             	r1 = r2 + 1			  ## link_layer.c:608:91
 1e14188:    42 e0 01 00       	if (r2 == 4) goto 2 <.GJTIE747_0_0_+0xD4 : 1e1418e >			  ## link_layer.c:608:91
 1e1418c:    10 08             	r0 = r1			  ## link_layer.c:608:21
 1e1418e:    10 f9 00 a0       	b[r10 + 0] = r0			  ## link_layer.c:608:19
 1e14192:    06 0a             	sp += 12
 1e14194:    5a 01             	{pc, r10-r4} = [sp++]			  ## link_layer.c:611:1


ll_control_step_verify:
 1e14196:    78 01             	[--sp] = {rets, r8-r4}			  ## link_layer.c:616:0
 1e14198:    14 08             	r4 = r1			  ## link_layer.c:616:0
 1e1419a:    01 f9 c0 40       	r1 = b[r4 + 192] (u)			  ## link_layer.c:617:39
 1e1419e:    c9 c0             	r1 = r1 << 3			  ## link_layer.c:622:12
 1e141a0:    43 b8             	r3 = r4 + r1			  ## link_layer.c:622:12
 1e141a2:    01 f6 98 30       	r1 = [r3 + 152]			  ## link_layer.c:622:12
 1e141a6:    28 08             	r8 = r2			  ## link_layer.c:622:12
 1e141a8:    06 08             	r6 = r0
 1e141aa:    40 22             	if (r1 == 0) goto 128 <ll_control_step_verify+0x96 : 1e1422c >
 1e141ac:    00 fb 07 40       	r0 = 16391 <check_flash_type+0x53 : 4007 >			  ## link_layer.c:628:9
 1e141b0:    06 f2 06 00       	if (r6 == r0) goto 12 <ll_control_step_verify+0x2A : 1e141c0 >			  ## link_layer.c:628:9
 1e141b4:    60 80             	r0 += 6
 1e141b6:    06 f2 1e 00       	if (r6 == r0) goto 60 <ll_control_step_verify+0x60 : 1e141f6 >
 1e141ba:    40 80             	r0 += 4
 1e141bc:    06 f2 1f 10       	if (r6 != r0) goto 62 <ll_control_step_verify+0x68 : 1e141fe >
 1e141c0:    30 fc 9c 00       	r0 = r3 + 156
 1e141c4:    02 60             	r2 = b[r0 + 0] (u)			  ## link_layer.c:638:19
 1e141c6:    f2 8f             	r2 += -1			  ## link_layer.c:638:19
 1e141c8:    03 f9 15 80       	r3 = b[r8 + 21] (u)			  ## link_layer.c:641:13
 1e141cc:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:638:19
 1e141ce:    87 04             	r7 = r2.b0 (u)			  ## link_layer.c:639:23
 1e141d0:    47 f8 00 17       	r7 = h[r1+r7<<1] (u)			  ## link_layer.c:639:23
 1e141d4:    c5 05             	r5 = r7.b0 (u)			  ## link_layer.c:641:23
 1e141d6:    53 f2 18 10       	if (r3 != r5) goto 48 <ll_control_step_verify+0x74 : 1e1420a >			  ## link_layer.c:641:23
 1e141da:    40 08             	r0 = r4			  ## link_layer.c:642:13
 1e141dc:    d7 14             	call -1618 <ll_response_timeout_stop : 1e13b8c >			  ## link_layer.c:642:13
 1e141de:    01 fb 07 40       	r1 = 16391 <check_flash_type+0x53 : 4007 >			  ## link_layer.c:484:9
 1e141e2:    30 70             	r0 = 3			  ## link_layer.c:484:9
 1e141e4:    16 f2 01 00       	if (r6 == r1) goto 2 <ll_control_step_verify+0x54 : 1e141ea >			  ## link_layer.c:484:9
 1e141e8:    10 70             	r0 = 1			  ## link_layer.c:484:9
 1e141ea:    a1 80             	r1 += 10			  ## link_layer.c:484:9
 1e141ec:    22 70             	r2 = 2			  ## link_layer.c:484:9
 1e141ee:    16 f2 1a 00       	if (r6 == r1) goto 52 <ll_control_step_verify+0x90 : 1e14226 >			  ## link_layer.c:484:9
 1e141f2:    02 08             	r2 = r0			  ## link_layer.c:484:9
 1e141f4:    18 18             	goto 48 <ll_control_step_verify+0x90 : 1e14226 >			  ## link_layer.c:484:9
 1e141f6:    40 08             	r0 = r4			  ## link_layer.c:629:9
 1e141f8:    c9 14             	call -1646 <ll_response_timeout_stop : 1e13b8c >			  ## link_layer.c:629:9
 1e141fa:    12 70             	r2 = 1			  ## link_layer.c:630:9
 1e141fc:    14 18             	goto 40 <ll_control_step_verify+0x90 : 1e14226 >			  ## link_layer.c:630:9
 1e141fe:    02 f9 9c 30       	r2 = b[r3 + 156] (u)
 1e14202:    47 f8 00 12       	r7 = h[r1+r2<<1] (u)
 1e14206:    30 fc 9c 00       	r0 = r3 + 156
 1e1420a:    67 f2 0f 10       	if (r7 != r6) goto 30 <ll_control_step_verify+0x96 : 1e1422c >
 1e1420e:    12 80             	r2 += 1			  ## link_layer.c:652:19
 1e14210:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:652:19
 1e14212:    80 04             	r0 = r2.b0 (u)			  ## link_layer.c:656:13
 1e14214:    40 c0             	r0 = r0 << 1			  ## link_layer.c:656:13
 1e14216:    00 fa 00 10       	r0 = b[r1+r0] (u)			  ## link_layer.c:656:13
 1e1421a:    01 ff ff 00 06 00 	if (r0 != 255) goto 12 <ll_control_step_verify+0x96 : 1e1422c >			  ## link_layer.c:656:13
 1e14220:    40 08             	r0 = r4			  ## link_layer.c:658:13
 1e14222:    b4 14             	call -1688 <ll_response_timeout_stop : 1e13b8c >			  ## link_layer.c:658:13
 1e14224:    02 70             	r2 = 0			  ## link_layer.c:659:13
 1e14226:    40 08             	r0 = r4
 1e14228:    81 08             	r1 = r8
 1e1422a:    13 17             	call -474 <ll_control_procedure_finish : 1e14052 >
 1e1422c:    58 01             	{pc, r8-r4} = [sp++]			  ## link_layer.c:666:1


ll_send_control_data_state_machine:
 1e1422e:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:684:0
 1e14230:    fa 0b             	sp += -12			  ## link_layer.c:684:0
 1e14232:    04 08             	r4 = r0			  ## link_layer.c:684:0
 1e14234:    00 f9 c0 40       	r0 = b[r4 + 192] (u)			  ## link_layer.c:685:39
 1e14238:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:689:12
 1e1423a:    02 b8             	r2 = r4 + r0			  ## link_layer.c:689:12
 1e1423c:    00 f6 98 20       	r0 = [r2 + 152]			  ## link_layer.c:689:12
 1e14240:    15 08             	r5 = r1			  ## link_layer.c:689:12
 1e14242:    7f 20             	if (r0 == 0) goto 254 <ll_send_control_data_state_machine+0x114 : 1e14342 >
 1e14244:    01 f9 9c 20       	r1 = b[r2 + 156] (u)			  ## link_layer.c:693:15
 1e14248:    40 f8 00 01       	r0 = h[r0+r1<<1] (u)			  ## link_layer.c:693:15
 1e1424c:    81 d3             	r1 = r0 >> 14			  ## link_layer.c:696:9
 1e1424e:    79 32             	if (r1 != 0) goto 242 <ll_send_control_data_state_machine+0x114 : 1e14342 >			  ## link_layer.c:696:9
 1e14250:    06 04             	r6 = r0.b0 (u)			  ## link_layer.c:2872:13
 1e14252:    c7 ff d4 0d 00 00 	r7 = 3540 <hci_param : dd4 >			  ## link_layer.c:2872:13
 1e14258:    c8 ff 88 0e 00 00 	r8 = 3720 <le_param : e88 >			  ## link_layer.c:2872:13
 1e1425e:    b6 e0 12 d0       	ifs (r6 <= 11) goto 36 <ll_send_control_data_state_machine+0x58 : 1e14286 >			  ## link_layer.c:2872:13
 1e14262:    c6 e0 23 00       	if (r6 == 12) goto 70 <ll_send_control_data_state_machine+0x7E : 1e142ac >
 1e14266:    86 e1 32 00       	if (r6 == 24) goto 100 <ll_send_control_data_state_machine+0xA0 : 1e142ce >
 1e1426a:    86 e4 66 10       	if (r6 != 72) goto 204 <ll_send_control_data_state_machine+0x10C : 1e1433a >
 1e1426e:    10 70             	r0 = 1			  ## link_layer.c:2861:12
 1e14270:    17 70             	r7 = 1			  ## link_layer.c:2861:12
 1e14272:    a7 15             	call -1202 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2861:12
 1e14274:    62 20             	if (r0 == 0) goto 196 <ll_send_control_data_state_machine+0x10C : 1e1433a >
 1e14276:    01 70             	r1 = 0			  ## link_layer.c:2866:5
 1e14278:    19 02             	[sp+4] = r1			  ## link_layer.c:2866:5
 1e1427a:    c2 ff b0 e0 e0 01 	r2 = 31514800 <update_target_end+0x1D0 : 1e0e0b0 >			  ## link_layer.c:2866:5
 1e14280:    81 74             	r1 = 72			  ## link_layer.c:2866:5
 1e14282:    f3 70             	r3 = 15			  ## link_layer.c:2866:5
 1e14284:    22 18             	goto 68 <ll_send_control_data_state_machine+0x9C : 1e142ca >			  ## link_layer.c:2866:5
 1e14286:    26 e0 29 00       	if (r6 == 2) goto 82 <ll_send_control_data_state_machine+0xAE : 1e142dc >
 1e1428a:    86 e0 56 10       	if (r6 != 8) goto 172 <ll_send_control_data_state_machine+0x10C : 1e1433a >
 1e1428e:    00 f7 5c 80       	r0 = h[r8 + 92] (u)			  ## link_layer.c:2093:47
 1e14292:    97 15             	call -1234 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2093:28
 1e14294:    52 20             	if (r0 == 0) goto 164 <ll_send_control_data_state_machine+0x10C : 1e1433a >
 1e14296:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:2102:9
 1e1429a:    c2 ff b9 e0 e0 01 	r2 = 31514809 <update_target_end+0x1D9 : 1e0e0b9 >			  ## link_layer.c:2102:9
 1e142a0:    83 fc 22 00       	r3 = r8 + 34			  ## link_layer.c:2106:9
 1e142a4:    11 e0 47 10       	if (r1 != 1) goto 142 <ll_send_control_data_state_machine+0x108 : 1e14336 >			  ## link_layer.c:2106:9
 1e142a8:    e1 70             	r1 = 14			  ## link_layer.c:2103:9
 1e142aa:    46 18             	goto 140 <ll_send_control_data_state_machine+0x10A : 1e14338 >			  ## link_layer.c:2103:9
 1e142ac:    00 f7 9c 70       	r0 = h[r7 + 156] (u)			  ## link_layer.c:2171:47
 1e142b0:    88 15             	call -1264 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2171:28
 1e142b2:    43 20             	if (r0 == 0) goto 134 <ll_send_control_data_state_machine+0x10C : 1e1433a >
 1e142b4:    03 f9 32 80       	r3 = b[r8 + 50] (u)			  ## link_layer.c:2182:26
 1e142b8:    07 f7 34 80       	r7 = h[r8 + 52] (u)			  ## link_layer.c:2183:26
 1e142bc:    01 f7 36 80       	r1 = h[r8 + 54] (u)			  ## link_layer.c:2184:26
 1e142c0:    19 02             	[sp+4] = r1			  ## link_layer.c:2180:5
 1e142c2:    c2 ff a8 e0 e0 01 	r2 = 31514792 <update_target_end+0x1C8 : 1e0e0a8 >			  ## link_layer.c:2180:5
 1e142c8:    c1 70             	r1 = 12			  ## link_layer.c:2180:5
 1e142ca:    0f 02             	[sp] = r7
 1e142cc:    35 18             	goto 106 <ll_send_control_data_state_machine+0x10A : 1e14338 >
 1e142ce:    00 59             	r0 = h[r4 + 32] (u)			  ## ll_multiple_phys.c:249:34
 1e142d0:    01 f7 90 40       	r1 = h[r4 + 144] (u)			  ## ll_multiple_phys.c:249:34
 1e142d4:    0e 20             	if (r0 == 0) goto 28 <ll_send_control_data_state_machine+0xC4 : 1e142f2 >			  ## ll_multiple_phys.c:249:19
 1e142d6:    07 fe 06 09       	r7 = r0 * 6			  ## ll_multiple_phys.c:249:65
 1e142da:    11 18             	goto 34 <ll_send_control_data_state_machine+0xD0 : 1e142fe >			  ## ll_multiple_phys.c:249:65
 1e142dc:    00 f7 9e 70       	r0 = h[r7 + 158] (u)			  ## link_layer.c:2529:47
 1e142e0:    70 15             	call -1312 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2529:28
 1e142e2:    2b 20             	if (r0 == 0) goto 86 <ll_send_control_data_state_machine+0x10C : 1e1433a >
 1e142e4:    03 f9 a0 70       	r3 = b[r7 + 160] (u)			  ## link_layer.c:2538:55
 1e142e8:    c2 ff b2 e0 e0 01 	r2 = 31514802 <update_target_end+0x1D2 : 1e0e0b2 >			  ## link_layer.c:2538:5
 1e142ee:    21 70             	r1 = 2			  ## link_layer.c:2538:5
 1e142f0:    23 18             	goto 70 <ll_send_control_data_state_machine+0x10A : 1e14338 >			  ## link_layer.c:2538:5
 1e142f2:    c0 ff 00 3b 1e 00 	r0 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## ll_multiple_phys.c:249:129
 1e142f8:    00 40             	r0 = [r0 + 0]			  ## ll_multiple_phys.c:249:129
 1e142fa:    27 fd 03 09       	r7 = r0 & 3			  ## ll_multiple_phys.c:249:134
 1e142fe:    09 f9 87 41       	r9 = b[r4 + 391] (u)
 1e14302:    02 f9 86 41       	r2 = b[r4 + 390] (u)			  ## ll_multiple_phys.c:121:31
 1e14306:    e0 fd 90 02       	r0 = r2 | r9			  ## ll_multiple_phys.c:121:43
 1e1430a:    71 09             	r1 += r7			  ## ll_multiple_phys.c:121:43
 1e1430c:    68 92             	r8 = r1 + 6			  ## ll_multiple_phys.c:121:43
 1e1430e:    01 70             	r1 = 0			  ## ll_multiple_phys.c:121:43
 1e14310:    07 70             	r7 = 0			  ## ll_multiple_phys.c:257:9
 1e14312:    01 20             	if (r0 == 0) goto 2 <ll_send_control_data_state_machine+0xE8 : 1e14316 >			  ## ll_multiple_phys.c:257:9
 1e14314:    87 08             	r7 = r8			  ## ll_multiple_phys.c:257:9
 1e14316:    e3 05             	r3 = r7.l (u)			  ## ll_multiple_phys.c:271:35
 1e14318:    17 f7 fa 40       	h[r4 + 250] = r7			  ## ll_multiple_phys.c:265:19
 1e1431c:    2b 02             	[sp+8] = r3			  ## ll_multiple_phys.c:267:5
 1e1431e:    07 70             	r7 = 0			  ## ll_multiple_phys.c:270:35
 1e14320:    01 20             	if (r0 == 0) goto 2 <ll_send_control_data_state_machine+0xF6 : 1e14324 >			  ## ll_multiple_phys.c:270:35
 1e14322:    97 08             	r7 = r9			  ## ll_multiple_phys.c:270:35
 1e14324:    1f 02             	[sp+4] = r7			  ## ll_multiple_phys.c:267:5
 1e14326:    0a 02             	[sp] = r2			  ## ll_multiple_phys.c:267:5
 1e14328:    03 20             	if (r0 == 0) goto 6 <ll_send_control_data_state_machine+0x102 : 1e14330 >			  ## ll_multiple_phys.c:267:5
 1e1432a:    c1 ff b0 4d e1 01 	r1 = 31542704 <__master_ll_send_phy_update_ind_callback : 1e14db0 >			  ## ll_multiple_phys.c:257:9
 1e14330:    40 08             	r0 = r4			  ## ll_multiple_phys.c:267:5
 1e14332:    87 15             	call -1266 <ll_send_control_data_callback : 1e13e42 >			  ## ll_multiple_phys.c:267:5
 1e14334:    02 18             	goto 4 <ll_send_control_data_state_machine+0x10C : 1e1433a >
 1e14336:    81 70             	r1 = 8			  ## link_layer.c:2106:9
 1e14338:    5c 15             	call -1352 <ll_send_control_data : 1e13df2 >
 1e1433a:    60 08             	r0 = r6			  ## link_layer.c:709:5
 1e1433c:    41 08             	r1 = r4			  ## link_layer.c:709:5
 1e1433e:    52 08             	r2 = r5			  ## link_layer.c:709:5
 1e14340:    2a 17             	call -428 <ll_control_step_verify : 1e14196 >			  ## link_layer.c:709:5
 1e14342:    06 0a             	sp += 12
 1e14344:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:710:1


ll_control_data_step_start:
 1e14346:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:714:0
 1e14348:    02 fc c1 00       	r2 = r0 + 193			  ## link_layer.c:714:0
 1e1434c:    03 64             	r3 = b[r2 + 0] (u)			  ## link_layer.c:715:39
 1e1434e:    db c0             	r3 = r3 << 3			  ## link_layer.c:717:8
 1e14350:    03 09             	r3 += r0			  ## link_layer.c:717:8
 1e14352:    11 f6 98 30       	[r3 + 152] = r1			  ## link_layer.c:717:18
 1e14356:    01 70             	r1 = 0			  ## link_layer.c:717:18
 1e14358:    11 f9 9c 30       	b[r3 + 156] = r1			  ## link_layer.c:718:16
 1e1435c:    04 64             	r4 = b[r2 + 0] (u)			  ## link_layer.c:720:28
 1e1435e:    13 98             	r3 = r4 + 1			  ## link_layer.c:720:91
 1e14360:    44 e0 01 00       	if (r4 == 4) goto 2 <ll_control_data_step_start+0x20 : 1e14366 >			  ## link_layer.c:720:91
 1e14364:    31 08             	r1 = r3			  ## link_layer.c:720:21
 1e14366:    09 64             	b[r2 + 0] = r1			  ## link_layer.c:720:19
 1e14368:    01 70             	r1 = 0			  ## link_layer.c:731:5
 1e1436a:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:731:5
 1e1436c:    60 1f             	goto -320 <ll_send_control_data_state_machine : 1e1422e >			  ## link_layer.c:731:5


ll_response_timeout_start:
 1e1436e:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:1466:0
 1e14370:    04 08             	r4 = r0			  ## link_layer.c:1466:0
 1e14372:    45 fc 4c 01       	r5 = r4 + 332			  ## link_layer.c:1466:0
 1e14376:    00 4a             	r0 = [r5 + 0]			  ## link_layer.c:1468:15
 1e14378:    02 20             	if (r0 == 0) goto 4 <ll_response_timeout_start+0x10 : 1e1437e >			  ## link_layer.c:1468:15
 1e1437a:    40 08             	r0 = r4			  ## link_layer.c:1470:9
 1e1437c:    07 14             	call -2034 <ll_response_timeout_stop : 1e13b8c >			  ## link_layer.c:1470:9
 1e1437e:    c0 ff 40 9c 00 00 	r0 = 40000 <BTCTLER_CODE_TOTAL+0x1B2C : 9c40 >			  ## link_layer.c:1472:30
 1e14384:    c1 ff fe 4a e1 01 	r1 = 31542014 <ll_response_timeout_handler : 1e14afe >			  ## link_layer.c:1472:30
 1e1438a:    bf f3 28 8c       	call -59312 <sys_timer_register : 1e05bde >			  ## link_layer.c:1472:30
 1e1438e:    08 4a             	[r5 + 0] = r0			  ## link_layer.c:1472:28
 1e14390:    03 30             	if (r0 != 0) goto 6 <ll_response_timeout_start+0x2A : 1e14398 >			  ## link_layer.c:1472:28
 1e14392:    8f f3 b5 77       	call 2027370 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e14396:    00 4a             	r0 = [r5 + 0]			  ## cpu.h:148:5
 1e14398:    41 08             	r1 = r4			  ## link_layer.c:1476:5
 1e1439a:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:1476:5
 1e1439c:    ff f3 23 8c       	goto -59322 <sys_timer_set_context : 1e05be6 >			  ## link_layer.c:1476:5


ll_push_control_data:
 1e143a0:    77 01             	[--sp] = {rets, r7-r4}			  ## link_layer.c:2762:0
 1e143a2:    32 fd fc 0a       	r2 = r0 & 4294902783			  ## link_layer.c:2766:16
 1e143a6:    23 fd fc 0a       	r3 = r0 & 64512			  ## link_layer.c:2765:24
 1e143aa:    14 08             	r4 = r1			  ## link_layer.c:2765:24
 1e143ac:    21 08             	r1 = r2			  ## link_layer.c:2765:9
 1e143ae:    20 ff 20 3a 01 00 	if (r3 == 8192) goto 2 <ll_push_control_data+0x16 : 1e143b6 >			  ## link_layer.c:2765:9
 1e143b4:    01 08             	r1 = r0			  ## link_layer.c:2765:9
 1e143b6:    20 fd fc 1a       	r0 = r1 & 64512			  ## link_layer.c:2769:24
 1e143ba:    20 ff f8 0a 01 00 	if (r0 == 63488) goto 2 <ll_push_control_data+0x22 : 1e143c2 >
 1e143c0:    12 08             	r2 = r1			  ## link_layer.c:2769:9
 1e143c2:    15 70             	r5 = 1
 1e143c4:    0d ff 83 20 1f 00 	ifs (r2 <= 131) goto 62 <ll_push_control_data+0x68 : 1e14408 >
 1e143ca:    00 ff 84 20 31 00 	if (r2 == 132) goto 98 <ll_push_control_data+0x92 : 1e14432 >
 1e143d0:    c7 ff d4 0d 00 00 	r7 = 3540 <hci_param : dd4 >
 1e143d6:    00 ff 06 24 34 00 	if (r2 == 1030) goto 104 <ll_push_control_data+0xA4 : 1e14444 >
 1e143dc:    01 ff 1d 24 66 00 	if (r2 != 1053) goto 204 <ll_push_control_data+0x10E : 1e144ae >
 1e143e2:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2198:47
 1e143e4:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2198:47
 1e143e6:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2198:47
 1e143ea:    eb 14             	call -1578 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2198:28
 1e143ec:    05 08             	r5 = r0			  ## link_layer.c:2198:28
 1e143ee:    58 2a             	if (r5 == 0) goto 176 <ll_push_control_data+0x100 : 1e144a0 >
 1e143f0:    be 17             	call -132 <ll_response_timeout_start : 1e1436e >			  ## link_layer.c:2207:5
 1e143f2:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2209:5
 1e143f4:    01 68             	r1 = b[r4 + 0] (u)			  ## link_layer.c:2209:5
 1e143f6:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## link_layer.c:2209:5
 1e143fa:    11 f7 9c 70       	h[r7 + 156] = r1			  ## link_layer.c:2209:5
 1e143fe:    c1 ff 32 3b e1 01 	r1 = 31537970 <version_ind_steps : 1e13b32 >			  ## link_layer.c:2211:5
 1e14404:    50 08             	r0 = r5			  ## link_layer.c:2211:5
 1e14406:    51 18             	goto 162 <ll_push_control_data+0x10A : 1e144aa >			  ## link_layer.c:2211:5
 1e14408:    62 e1 37 00       	if (r2 == 22) goto 110 <ll_push_control_data+0xDA : 1e1447a >
 1e1440c:    01 ff 83 20 4e 00 	if (r2 != 131) goto 156 <ll_push_control_data+0x10E : 1e144ae >
 1e14412:    02 38             	if (r4 != 0) goto 4 <ll_push_control_data+0x78 : 1e14418 >
 1e14414:    8f f3 74 77       	call 2027240 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e14418:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2724:31
 1e1441a:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2724:31
 1e1441c:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2724:31
 1e14420:    d0 14             	call -1632 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2724:12
 1e14422:    3e 20             	if (r0 == 0) goto 124 <ll_push_control_data+0x100 : 1e144a0 >
 1e14424:    23 68             	r3 = b[r4 + 2] (u)			  ## link_layer.c:2731:61
 1e14426:    c2 ff b2 e0 e0 01 	r2 = 31514802 <update_target_end+0x1D2 : 1e0e0b2 >			  ## link_layer.c:2731:5
 1e1442c:    41 74             	r1 = 68			  ## link_layer.c:2731:5
 1e1442e:    e1 14             	call -1598 <ll_send_control_data : 1e13df2 >			  ## link_layer.c:2731:5
 1e14430:    3d 18             	goto 122 <ll_push_control_data+0x10C : 1e144ac >
 1e14432:    00 58             	r0 = h[r4 + 0] (u)			  ## link_layer.c:2750:31
 1e14434:    c6 14             	call -1652 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2750:12
 1e14436:    34 20             	if (r0 == 0) goto 104 <ll_push_control_data+0x100 : 1e144a0 >
 1e14438:    12 58             	r2 = h[r4 + 2] (u)			  ## link_layer.c:2755:55
 1e1443a:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:2755:29
 1e1443c:    71 71             	r1 = 23			  ## link_layer.c:2755:5
 1e1443e:    bf f3 50 ed       	call -9568 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:2755:5
 1e14442:    34 18             	goto 104 <ll_push_control_data+0x10C : 1e144ac >			  ## link_layer.c:2755:5
 1e14444:    11 68             	r1 = b[r4 + 1] (u)			  ## link_layer.c:2557:47
 1e14446:    00 68             	r0 = b[r4 + 0] (u)			  ## link_layer.c:2557:47
 1e14448:    c8 fd 40 01       	r0 <= insert(r1, p:8, l:8)			  ## link_layer.c:2557:47
 1e1444c:    ba 14             	call -1676 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2557:28
 1e1444e:    06 08             	r6 = r0			  ## link_layer.c:2557:28
 1e14450:    27 2c             	if (r6 == 0) goto 78 <ll_push_control_data+0x100 : 1e144a0 >
 1e14452:    00 f9 3c 60       	r0 = b[r6 + 60] (u)			  ## link_layer.c:2566:9
 1e14456:    70 b0             	r0 &= 4294967294			  ## link_layer.c:2566:9
 1e14458:    05 70             	r5 = 0			  ## link_layer.c:2566:9
 1e1445a:    60 e0 28 10       	if (r0 != 6) goto 80 <ll_push_control_data+0x10E : 1e144ae >			  ## link_layer.c:2566:9
 1e1445e:    60 08             	r0 = r6			  ## link_layer.c:2567:9
 1e14460:    86 17             	call -244 <ll_response_timeout_start : 1e1436e >			  ## link_layer.c:2567:9
 1e14462:    70 fc 9e 00       	r0 = r7 + 158			  ## link_layer.c:2569:9
 1e14466:    32 70             	r2 = 3			  ## link_layer.c:2569:9
 1e14468:    41 08             	r1 = r4			  ## link_layer.c:2569:9
 1e1446a:    97 f3 3b 95       	call 3091062 <memcpy : 106ee4 >			  ## link_layer.c:2569:9
 1e1446e:    c1 ff 26 3b e1 01 	r1 = 31537958 <disconnect_steps : 1e13b26 >			  ## link_layer.c:2571:9
 1e14474:    60 08             	r0 = r6			  ## link_layer.c:2571:9
 1e14476:    67 17             	call -306 <ll_control_data_step_start : 1e14346 >			  ## link_layer.c:2571:9
 1e14478:    1a 18             	goto 52 <ll_push_control_data+0x10E : 1e144ae >			  ## link_layer.c:2571:9
 1e1447a:    10 68             	r0 = b[r4 + 1] (u)			  ## link_layer.c:2134:54
 1e1447c:    04 68             	r4 = b[r4 + 0] (u)			  ## link_layer.c:2134:54
 1e1447e:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## link_layer.c:2134:54
 1e14482:    40 08             	r0 = r4			  ## link_layer.c:2134:28
 1e14484:    9e 14             	call -1732 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:2134:28
 1e14486:    0c 20             	if (r0 == 0) goto 24 <ll_push_control_data+0x100 : 1e144a0 >
 1e14488:    c1 ff 88 0e 00 00 	r1 = 3720 <le_param : e88 >			  ## link_layer.c:2143:5
 1e1448e:    14 f7 5c 10       	h[r1 + 92] = r4			  ## link_layer.c:2143:5
 1e14492:    01 f9 3d 00       	r1 = b[r0 + 61] (u)			  ## link_layer.c:2145:9
 1e14496:    11 e0 05 10       	if (r1 != 1) goto 10 <ll_push_control_data+0x104 : 1e144a4 >			  ## link_layer.c:2145:9
 1e1449a:    8f f3 31 77       	call 2027106 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1449e:    06 18             	goto 12 <ll_push_control_data+0x10C : 1e144ac >
 1e144a0:    25 70             	r5 = 2
 1e144a2:    05 18             	goto 10 <ll_push_control_data+0x10E : 1e144ae >
 1e144a4:    c1 ff 20 3b e1 01 	r1 = 31537952 <master_features_exchange_steps : 1e13b20 >			  ## link_layer.c:2152:9
 1e144aa:    4d 17             	call -358 <ll_control_data_step_start : 1e14346 >
 1e144ac:    05 70             	r5 = 0
 1e144ae:    50 08             	r0 = r5			  ## link_layer.c:2846:1
 1e144b0:    57 01             	{pc, r7-r4} = [sp++]			  ## link_layer.c:2846:1


ll_adv_init:
 1e144b2:    74 01             	[--sp] = {rets, r4}			  ## ll_adv.c:53:0
 1e144b4:    c4 ff 7c 0e 00 00 	r4 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:53:0
 1e144ba:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:54:9
 1e144bc:    07 30             	if (r0 != 0) goto 14 <ll_adv_init+0x1A : 1e144cc >			  ## ll_adv.c:54:9
 1e144be:    80 72             	r0 = 40			  ## ll_adv.c:61:14
 1e144c0:    bf f3 85 8b       	call -59638 <__bt_malloc : 1e05bce >			  ## ll_adv.c:61:14
 1e144c4:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:61:12
 1e144c6:    02 30             	if (r0 != 0) goto 4 <ll_adv_init+0x1A : 1e144cc >			  ## ll_adv.c:61:12
 1e144c8:    8f f3 1a 77       	call 2027060 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e144cc:    54 01             	{pc, r4} = [sp++]			  ## ll_adv.c:64:1


ll_adv_set_params:
 1e144ce:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:592:0
 1e144d0:    c5 ff 7c 0e 00 00 	r5 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:592:0
 1e144d6:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:597:9
 1e144d8:    04 08             	r4 = r0			  ## ll_adv.c:597:9
 1e144da:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_params+0x12 : 1e144e0 >			  ## ll_adv.c:597:9
 1e144dc:    ea 17             	call -44 <ll_adv_init : 1e144b2 >			  ## ll_adv.c:598:9
 1e144de:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:598:9
 1e144e0:    00 62             	r0 = b[r1 + 0] (u)			  ## ll_adv.c:604:17
 1e144e2:    07 30             	if (r0 != 0) goto 14 <ll_adv_set_params+0x24 : 1e144f2 >			  ## ll_adv.c:604:17
 1e144e4:    c0 ff 54 2c 00 00 	r0 = 11348 <adv_param : 2c54 >			  ## ll_adv.c:609:5
 1e144ea:    f2 70             	r2 = 15			  ## ll_adv.c:609:5
 1e144ec:    41 08             	r1 = r4			  ## ll_adv.c:609:5
 1e144ee:    97 f3 f9 94       	call 3090930 <memcpy : 106ee4 >			  ## ll_adv.c:609:5
 1e144f2:    55 01             	{pc, r5, r4} = [sp++]


ll_adv_set_adv_data:
 1e144f4:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:617:0
 1e144f6:    c5 ff 7c 0e 00 00 	r5 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:617:0
 1e144fc:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:622:9
 1e144fe:    04 08             	r4 = r0			  ## ll_adv.c:622:9
 1e14500:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_adv_data+0x12 : 1e14506 >			  ## ll_adv.c:622:9
 1e14502:    d7 17             	call -82 <ll_adv_init : 1e144b2 >			  ## ll_adv.c:623:9
 1e14504:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:623:9
 1e14506:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:626:44
 1e14508:    c5 ff 63 2c 00 00 	r5 = 11363 <adv_data.5061 : 2c63 >
 1e1450e:    01 70             	r1 = 0			  ## ll_adv.c:628:5
 1e14510:    02 72             	r2 = 32			  ## ll_adv.c:628:5
 1e14512:    50 08             	r0 = r5			  ## ll_adv.c:628:5
 1e14514:    97 f3 ec 94       	call 3090904 <memset : 106ef0 >			  ## ll_adv.c:628:5
 1e14518:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:629:23
 1e1451a:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:629:21
 1e1451e:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:630:44
 1e14520:    11 98             	r1 = r4 + 1			  ## ll_adv.c:630:35
 1e14522:    50 08             	r0 = r5			  ## ll_adv.c:630:5
 1e14524:    97 f3 de 94       	call 3090876 <memcpy : 106ee4 >			  ## ll_adv.c:630:5
 1e14528:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_adv_data+0x42 : 1e14536 >			  ## ll_adv.c:630:5
 1e1452a:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:636:31
 1e1452c:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_adv_data+0x42 : 1e14536 >			  ## ll_adv.c:636:31
 1e1452e:    51 71             	r1 = 21			  ## ll_adv.c:637:9
 1e14530:    42 08             	r2 = r4			  ## ll_adv.c:637:9
 1e14532:    bf f3 d6 ec       	call -9812 <le_hw_ioctrl : 1e11ee2 >			  ## ll_adv.c:637:9
 1e14536:    56 01             	{pc, r6-r4} = [sp++]


ll_adv_set_scan_rsp_data:
 1e14538:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:643:0
 1e1453a:    c5 ff 7c 0e 00 00 	r5 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:643:0
 1e14540:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:648:9
 1e14542:    04 08             	r4 = r0			  ## ll_adv.c:648:9
 1e14544:    02 32             	if (r1 != 0) goto 4 <ll_adv_set_scan_rsp_data+0x12 : 1e1454a >			  ## ll_adv.c:648:9
 1e14546:    b5 17             	call -150 <ll_adv_init : 1e144b2 >			  ## ll_adv.c:649:9
 1e14548:    01 4a             	r1 = [r5 + 0]			  ## ll_adv.c:649:9
 1e1454a:    16 42             	r6 = [r1 + 4]			  ## ll_adv.c:652:44
 1e1454c:    c5 ff 83 2c 00 00 	r5 = 11395 <scan_resp_data : 2c83 >
 1e14552:    01 70             	r1 = 0			  ## ll_adv.c:654:5
 1e14554:    02 72             	r2 = 32			  ## ll_adv.c:654:5
 1e14556:    50 08             	r0 = r5			  ## ll_adv.c:654:5
 1e14558:    97 f3 ca 94       	call 3090836 <memset : 106ef0 >			  ## ll_adv.c:654:5
 1e1455c:    00 68             	r0 = b[r4 + 0] (u)			  ## ll_adv.c:655:29
 1e1455e:    90 f9 01 50       	b[r5 ++= 1] = r0			  ## ll_adv.c:655:27
 1e14562:    02 68             	r2 = b[r4 + 0] (u)			  ## ll_adv.c:656:50
 1e14564:    11 98             	r1 = r4 + 1			  ## ll_adv.c:656:41
 1e14566:    50 08             	r0 = r5			  ## ll_adv.c:656:5
 1e14568:    97 f3 bc 94       	call 3090808 <memcpy : 106ee4 >			  ## ll_adv.c:656:5
 1e1456c:    06 2c             	if (r6 == 0) goto 12 <ll_adv_set_scan_rsp_data+0x42 : 1e1457a >			  ## ll_adv.c:656:5
 1e1456e:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:662:31
 1e14570:    04 20             	if (r0 == 0) goto 8 <ll_adv_set_scan_rsp_data+0x42 : 1e1457a >			  ## ll_adv.c:662:31
 1e14572:    61 71             	r1 = 22			  ## ll_adv.c:663:9
 1e14574:    42 08             	r2 = r4			  ## ll_adv.c:663:9
 1e14576:    bf f3 b4 ec       	call -9880 <le_hw_ioctrl : 1e11ee2 >			  ## ll_adv.c:663:9
 1e1457a:    56 01             	{pc, r6-r4} = [sp++]


__set_ll_adv_peer_addr:
 1e1457c:    77 01             	[--sp] = {rets, r7-r4}			  ## ll_adv.c:231:0
 1e1457e:    c1 ff 7c 0e 00 00 	r1 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:231:0
 1e14584:    06 42             	r6 = [r1 + 0]			  ## ll_adv.c:231:0
 1e14586:    04 08             	r4 = r0			  ## ll_adv.c:231:0
 1e14588:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x12 : 1e1458e >			  ## ll_adv.c:231:0
 1e1458a:    8f f3 b9 76       	call 2026866 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1458e:    c7 ff 54 2c 00 00 	r7 = 11348 <adv_param : 2c54 >
 1e14594:    40 6e             	r0 = b[r7 + 4] (u)			  ## ll_adv.c:234:20
 1e14596:    40 e0 02 00       	if (r0 == 4) goto 4 <__set_ll_adv_peer_addr+0x22 : 1e1459e >			  ## ll_adv.c:234:20
 1e1459a:    10 e0 1e 10       	if (r0 != 1) goto 60 <__set_ll_adv_peer_addr+0x5E : 1e145da >
 1e1459e:    60 6e             	r0 = b[r7 + 6] (u)			  ## ll_adv.c:236:46
 1e145a0:    b8 68             	b[r4 + 11] = r0			  ## ll_adv.c:236:34
 1e145a2:    c5 98             	r5 = r4 + 12			  ## ll_adv.c:238:9
 1e145a4:    71 9e             	r1 = r7 + 7			  ## ll_adv.c:238:9
 1e145a6:    62 70             	r2 = 6			  ## ll_adv.c:238:9
 1e145a8:    50 08             	r0 = r5			  ## ll_adv.c:238:9
 1e145aa:    97 f3 9b 94       	call 3090742 <memcpy : 106ee4 >			  ## ll_adv.c:238:9
 1e145ae:    02 3c             	if (r6 != 0) goto 4 <__set_ll_adv_peer_addr+0x38 : 1e145b4 >			  ## ll_adv.c:238:9
 1e145b0:    8f f3 a6 76       	call 2026828 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e145b4:    52 6e             	r2 = b[r7 + 5] (u)			  ## ll_adv.c:195:23
 1e145b6:    30 fd 01 29       	r0 = r2 & 4294967294			  ## ll_adv.c:195:5
 1e145ba:    20 e0 02 10       	if (r0 != 2) goto 4 <__set_ll_adv_peer_addr+0x46 : 1e145c2 >			  ## ll_adv.c:195:5
 1e145be:    ba 68             	b[r4 + 11] = r2			  ## ll_adv.c:205:34
 1e145c0:    01 18             	goto 2 <__set_ll_adv_peer_addr+0x48 : 1e145c4 >			  ## ll_adv.c:205:34
 1e145c2:    b2 68             	r2 = b[r4 + 11] (u)
 1e145c4:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:209:33
 1e145c6:    31 70             	r1 = 3			  ## ll_adv.c:209:5
 1e145c8:    53 08             	r3 = r5			  ## ll_adv.c:209:5
 1e145ca:    bf f3 8a ec       	call -9964 <le_hw_ioctrl : 1e11ee2 >			  ## ll_adv.c:209:5
 1e145ce:    b2 68             	r2 = b[r4 + 11] (u)			  ## ll_adv.c:215:23
 1e145d0:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:214:33
 1e145d2:    91 70             	r1 = 9			  ## ll_adv.c:214:5
 1e145d4:    53 08             	r3 = r5			  ## ll_adv.c:214:5
 1e145d6:    bf f3 84 ec       	call -9976 <le_hw_ioctrl : 1e11ee2 >			  ## ll_adv.c:214:5
 1e145da:    57 01             	{pc, r7-r4} = [sp++]			  ## ll_adv.c:243:1


__set_ll_local_addr_common:
 1e145dc:    34 00             	[--sp] = rets			  ## link_layer.c:3463:0
 1e145de:    12 08             	r2 = r1			  ## link_layer.c:3463:0
 1e145e0:    0a 60             	b[r0 + 0] = r2			  ## link_layer.c:3464:21
 1e145e2:    32 e0 0d 80       	if (r2 > 3) goto 26 <.GJTIE766_0_0_+0xE : 1e14600 >			  ## link_layer.c:3464:21
 1e145e6:    c1 ff 90 0e 00 00 	r1 = 3728 <le_param+0x8 : e90 >
 1e145ec:    a2 00             	tbb [r2]


.GJTIS766_0_0_:
 1e145ee:    02     < 2 : 0x2 >
 1e145ef:    04     < 4 : 0x4 >
 1e145f0:    02     < 2 : 0x2 >
 1e145f1:    04     < 4 : 0x4 >
 1e145f2:    10 80             	r0 += 1			  ## link_layer.c:3469:9
 1e145f4:    02 18             	goto 4 <.GJTIE766_0_0_+0x8 : 1e145fa >
 1e145f6:    10 80             	r0 += 1			  ## link_layer.c:3475:9
 1e145f8:    61 80             	r1 += 6			  ## link_layer.c:3475:9
 1e145fa:    62 70             	r2 = 6
 1e145fc:    97 f3 72 94       	call 3090660 <memcpy : 106ee4 >
 1e14600:    30 00             	pc = [sp++]			  ## link_layer.c:3480:1


__set_ll_local_addr:
 1e14602:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:3483:0
 1e14604:    14 08             	r4 = r1			  ## link_layer.c:3483:0
 1e14606:    05 08             	r5 = r0			  ## link_layer.c:3483:0
 1e14608:    40 08             	r0 = r4			  ## link_layer.c:3484:5
 1e1460a:    21 08             	r1 = r2			  ## link_layer.c:3484:5
 1e1460c:    e7 17             	call -50 <__set_ll_local_addr_common : 1e145dc >			  ## link_layer.c:3484:5
 1e1460e:    82 f9 01 40       	r2 = b[r4 ++= 1] (u)			  ## link_layer.c:3488:23
 1e14612:    21 70             	r1 = 2			  ## link_layer.c:3486:5
 1e14614:    50 08             	r0 = r5			  ## link_layer.c:3486:5
 1e14616:    43 08             	r3 = r4			  ## link_layer.c:3486:5
 1e14618:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:3486:5
 1e1461a:    ff f3 62 ec       	goto -10044 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:3486:5


__set_ll_adv_state:
 1e1461e:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:345:0
 1e14620:    fc 0b             	sp += -8			  ## ll_adv.c:345:0
 1e14622:    c8 ff 54 2c 00 00 	r8 = 11348 <adv_param : 2c54 >			  ## ll_adv.c:345:0
 1e14628:    01 f9 0d 80       	r1 = b[r8 + 13] (u)			  ## ll_adv.c:351:33
 1e1462c:    04 08             	r4 = r0			  ## ll_adv.c:351:33
 1e1462e:    d1 f5 05 00       	b[sp+5] = r1			  ## ll_adv.c:351:21
 1e14632:    00 70             	r0 = 0			  ## ll_adv.c:351:21
 1e14634:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:352:29
 1e14638:    12 70             	r2 = 1			  ## ll_adv.c:352:29
 1e1463a:    06 70             	r6 = 0			  ## ll_adv.c:354:24
 1e1463c:    03 70             	r3 = 0			  ## ll_adv.c:354:24
 1e1463e:    f8 fd 30 52       	r5 = r2 << r3			  ## ll_adv.c:353:31
 1e14642:    17 9c             	r7 = r6 + 1			  ## ll_adv.c:354:24
 1e14644:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x2C : 1e1464a >			  ## ll_adv.c:354:24
 1e14648:    76 08             	r6 = r7			  ## ll_adv.c:353:13
 1e1464a:    51 f0 01 00       	if ((r1 & r5) == 0) goto 2 <__set_ll_adv_state+0x32 : 1e14650 >
 1e1464e:    70 08             	r0 = r7			  ## ll_adv.c:353:13
 1e14650:    13 80             	r3 += 1			  ## ll_adv.c:352:42
 1e14652:    33 e0 f4 1f       	if (r3 != 3) goto -24 <__set_ll_adv_state+0x20 : 1e1463e >			  ## ll_adv.c:352:42
 1e14656:    03 f9 03 80       	r3 = b[r8 + 3] (u)			  ## ll_adv.c:365:21
 1e1465a:    01 f9 02 80       	r1 = b[r8 + 2] (u)			  ## ll_adv.c:365:21
 1e1465e:    02 f9 01 80       	r2 = b[r8 + 1] (u)			  ## ll_adv.c:366:21
 1e14662:    07 f9 0e 80       	r7 = b[r8 + 14] (u)			  ## ll_adv.c:368:35
 1e14666:    05 f9 04 80       	r5 = b[r8 + 4] (u)			  ## ll_adv.c:370:23
 1e1466a:    06 f9 00 80       	r6 = b[r8 + 0] (u)			  ## ll_adv.c:366:21
 1e1466e:    d0 f5 04 00       	b[sp+4] = r0			  ## ll_adv.c:354:24
 1e14672:    d7 f5 06 00       	b[sp+6] = r7			  ## ll_adv.c:368:23
 1e14676:    45 e0 4c 80       	if (r5 > 4) goto 152 <.GJTIE776_0_0_+0x8C : 1e14712 >			  ## ll_adv.c:368:23
 1e1467a:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## ll_adv.c:365:21
 1e1467e:    a5 00             	tbb [r5]			  ## ll_adv.c:365:21


.GJTIS776_0_0_:
 1e14680:    03     < 3 : 0x3 >
 1e14681:    0c     < 12 : 0xC >
 1e14682:    28     < 40 : 0x28 >
 1e14683:    31     < 49 : 0x31 >
 1e14684:    3a     < 58 : 0x3A >
 1e14685:    00     < 0 : 0x0 >
 1e14686:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:372:28
 1e1468a:    20 70             	r0 = 2			  ## ll_adv.c:372:28
 1e1468c:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:373:28
 1e14690:    00 70             	r0 = 0			  ## ll_adv.c:374:28
 1e14692:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:374:28
 1e14696:    3d 18             	goto 122 <.GJTIE776_0_0_+0x8C : 1e14712 >			  ## ll_adv.c:374:28
 1e14698:    60 70             	r0 = 6
 1e1469a:    90 f5 00 00       	h[sp] = r0			  ## ll_adv.c:377:28
 1e1469e:    20 70             	r0 = 2			  ## ll_adv.c:377:28
 1e146a0:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:378:28
 1e146a4:    10 70             	r0 = 1			  ## ll_adv.c:379:28
 1e146a6:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:379:28
 1e146aa:    00 70             	r0 = 0			  ## ll_adv.c:379:28
 1e146ac:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:382:28
 1e146b0:    c1 ff b6 53 e1 01 	r1 = 31544246 <ll_adv_timeout_handler : 1e153b6 >			  ## ll_adv.c:119:25
 1e146b6:    00 fb 00 05       	r0 = 1280 <BTCTLER_CONTROLLER_DATA_SIZE+0x42 : 500 >			  ## ll_adv.c:119:25
 1e146ba:    bf f3 90 8a       	call -60128 <sys_timer_register : 1e05bde >			  ## ll_adv.c:119:25
 1e146be:    58 48             	[r4 + 20] = r0			  ## ll_adv.c:119:23
 1e146c0:    03 30             	if (r0 != 0) goto 6 <.GJTIE776_0_0_+0x42 : 1e146c8 >			  ## ll_adv.c:119:23
 1e146c2:    8f f3 1d 76       	call 2026554 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e146c6:    50 48             	r0 = [r4 + 20]			  ## cpu.h:148:5
 1e146c8:    41 08             	r1 = r4			  ## ll_adv.c:123:5
 1e146ca:    bf f3 8c 8a       	call -60136 <sys_timer_set_context : 1e05be6 >			  ## ll_adv.c:123:5
 1e146ce:    1f 18             	goto 62 <.GJTIE776_0_0_+0x88 : 1e1470e >			  ## ll_adv.c:123:5
 1e146d0:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:393:28
 1e146d4:    20 70             	r0 = 2			  ## ll_adv.c:393:28
 1e146d6:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:394:28
 1e146da:    60 70             	r0 = 6			  ## ll_adv.c:395:28
 1e146dc:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:395:28
 1e146e0:    18 18             	goto 48 <.GJTIE776_0_0_+0x8C : 1e14712 >			  ## ll_adv.c:395:28
 1e146e2:    91 f5 00 00       	h[sp] = r1			  ## ll_adv.c:400:28
 1e146e6:    10 70             	r0 = 1			  ## ll_adv.c:401:28
 1e146e8:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:401:28
 1e146ec:    20 70             	r0 = 2			  ## ll_adv.c:401:28
 1e146ee:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:402:28
 1e146f2:    0f 18             	goto 30 <.GJTIE776_0_0_+0x8C : 1e14712 >			  ## ll_adv.c:402:28
 1e146f4:    c8 fd 40 62       	r6 <= insert(r2, p:8, l:8)			  ## ll_adv.c:366:21
 1e146f8:    96 f5 00 00       	h[sp] = r6			  ## ll_adv.c:405:28
 1e146fc:    30 70             	r0 = 3			  ## ll_adv.c:406:28
 1e146fe:    90 f5 02 00       	h[sp+2] = r0			  ## ll_adv.c:406:28
 1e14702:    10 70             	r0 = 1			  ## ll_adv.c:407:28
 1e14704:    d0 f5 07 00       	b[sp+7] = r0			  ## ll_adv.c:407:28
 1e14708:    00 70             	r0 = 0			  ## ll_adv.c:410:28
 1e1470a:    d0 f5 06 00       	b[sp+6] = r0			  ## ll_adv.c:410:28
 1e1470e:    40 08             	r0 = r4
 1e14710:    35 17             	call -406 <__set_ll_adv_peer_addr : 1e1457c >
 1e14712:    c0 ff 7c 0e 00 00 	r0 = 3708 <adv_hdl : e7c >
 1e14718:    00 40             	r0 = [r0 + 0]
 1e1471a:    02 30             	if (r0 != 0) goto 4 <.GJTIE776_0_0_+0x9A : 1e14720 >
 1e1471c:    8f f3 f0 75       	call 2026464 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e14720:    02 f9 05 80       	r2 = b[r8 + 5] (u)			  ## ll_adv.c:223:5
 1e14724:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:223:35
 1e14726:    41 98             	r1 = r4 + 4			  ## ll_adv.c:224:36
 1e14728:    6c 17             	call -296 <__set_ll_local_addr : 1e14602 >			  ## ll_adv.c:223:5
 1e1472a:    c2 ff 63 2c 00 00 	r2 = 11363 <adv_data.5061 : 2c63 >			  ## ll_adv.c:223:5
 1e14730:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:431:18
 1e14732:    04 20             	if (r0 == 0) goto 8 <.GJTIE776_0_0_+0xB6 : 1e1473c >			  ## ll_adv.c:431:18
 1e14734:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:436:37
 1e14736:    51 71             	r1 = 21			  ## ll_adv.c:436:9
 1e14738:    bf f3 d3 eb       	call -10330 <le_hw_ioctrl : 1e11ee2 >			  ## ll_adv.c:436:9
 1e1473c:    c2 ff 83 2c 00 00 	r2 = 11395 <scan_resp_data : 2c83 >
 1e14742:    00 64             	r0 = b[r2 + 0] (u)			  ## ll_adv.c:440:24
 1e14744:    04 20             	if (r0 == 0) goto 8 <.GJTIE776_0_0_+0xC8 : 1e1474e >			  ## ll_adv.c:440:24
 1e14746:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:445:37
 1e14748:    61 71             	r1 = 22			  ## ll_adv.c:445:9
 1e1474a:    bf f3 ca eb       	call -10348 <le_hw_ioctrl : 1e11ee2 >			  ## ll_adv.c:445:9
 1e1474e:    00 48             	r0 = [r4 + 0]			  ## ll_adv.c:450:51
 1e14750:    01 a0             	r1 = sp + 0			  ## ll_adv.c:450:51
 1e14752:    bf f3 57 f1       	call -7506 <le_hw_advertising : 1e12a04 >			  ## ll_adv.c:450:18
 1e14756:    01 08             	r1 = r0			  ## ll_adv.c:450:18
 1e14758:    30 70             	r0 = 3			  ## ll_adv.c:455:12
 1e1475a:    01 32             	if (r1 != 0) goto 2 <.GJTIE776_0_0_+0xD8 : 1e1475e >			  ## ll_adv.c:455:12
 1e1475c:    00 70             	r0 = 0
 1e1475e:    04 0a             	sp += 8
 1e14760:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:455:5


ll_adv_open:
 1e14762:    75 01             	[--sp] = {rets, r5, r4}			  ## ll_adv.c:787:0
 1e14764:    c5 ff 7c 0e 00 00 	r5 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:787:0
 1e1476a:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:793:9
 1e1476c:    02 30             	if (r0 != 0) goto 4 <ll_adv_open+0x10 : 1e14772 >			  ## ll_adv.c:793:9
 1e1476e:    a1 16             	call -702 <ll_adv_init : 1e144b2 >			  ## ll_adv.c:794:9
 1e14770:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:794:9
 1e14772:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:799:44
 1e14774:    01 20             	if (r0 == 0) goto 2 <ll_adv_open+0x16 : 1e14778 >
 1e14776:    55 01             	{pc, r5, r4} = [sp++]
 1e14778:    80 71             	r0 = 24			  ## ll_adv.c:806:16
 1e1477a:    bf f3 28 8a       	call -60336 <__bt_malloc : 1e05bce >			  ## ll_adv.c:806:16
 1e1477e:    04 08             	r4 = r0			  ## ll_adv.c:806:16
 1e14780:    fa 29             	if (r4 == 0) goto -12 <ll_adv_open+0x14 : 1e14776 >			  ## ll_adv.c:806:16
 1e14782:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:813:5
 1e14784:    1c 40             	[r0 + 4] = r4			  ## ll_adv.c:813:22
 1e14786:    bf f3 e0 ee       	call -8768 <le_hw_open : 1e1254a >			  ## ll_adv.c:815:20
 1e1478a:    08 48             	[r4 + 0] = r0			  ## ll_adv.c:815:18
 1e1478c:    f4 21             	if (r0 == 0) goto -24 <ll_adv_open+0x14 : 1e14776 >			  ## ll_adv.c:815:18
 1e1478e:    00 40             	r0 = [r0 + 0]
 1e14790:    c2 ff 38 3b e1 01 	r2 = 31537976 <adv_handler : 1e13b38 >			  ## ll_adv.c:823:5
 1e14796:    41 08             	r1 = r4			  ## ll_adv.c:823:5
 1e14798:    bf f3 82 ef       	call -8444 <le_hw_handler_register : 1e126a0 >			  ## ll_adv.c:823:5
 1e1479c:    40 08             	r0 = r4			  ## ll_adv.c:829:18
 1e1479e:    3f 17             	call -386 <__set_ll_adv_state : 1e1461e >			  ## ll_adv.c:829:18
 1e147a0:    ea 31             	if (r0 != 0) goto -44 <ll_adv_open+0x14 : 1e14776 >
 1e147a2:    00 4a             	r0 = [r5 + 0]			  ## ll_adv.c:840:5
 1e147a4:    11 70             	r1 = 1			  ## ll_adv.c:840:20
 1e147a6:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:840:20
 1e147a8:    55 01             	{pc, r5, r4} = [sp++]			  ## ll_adv.c:840:20


ll_send_acl_packet:
 1e147aa:    7c 01             	[--sp] = {rets, r12-r4}			  ## link_layer.c:1085:0
 1e147ac:    fe 0b             	sp += -4			  ## link_layer.c:1085:0
 1e147ae:    25 08             	r5 = r2			  ## link_layer.c:1085:0
 1e147b0:    14 08             	r4 = r1			  ## link_layer.c:1085:0
 1e147b2:    bf f3 06 fb       	call -2548 <ll_link_for_handle : 1e13dc2 >			  ## link_layer.c:1088:12
 1e147b6:    09 08             	r9 = r0			  ## link_layer.c:1088:12
 1e147b8:    55 20             	if (r0 == 0) goto 170 <ll_send_acl_packet+0xBA : 1e14864 >
 1e147ba:    08 fc 40 00       	r8 = r0 + 64			  ## link_layer.c:1096:26
 1e147be:    01 70             	r1 = 0			  ## link_layer.c:1096:5
 1e147c0:    06 70             	r6 = 0			  ## link_layer.c:1096:5
 1e147c2:    80 08             	r0 = r8			  ## link_layer.c:1096:5
 1e147c4:    97 f3 2e 93       	call 3090012 <os_mutex_pend : 106e24 >			  ## link_layer.c:1096:5
 1e147c8:    0a f9 01 40       	r10 = b[r4 + 1] (u)			  ## link_layer.c:1100:15
 1e147cc:    c0 70             	r0 = 12			  ## link_layer.c:1117:19
 1e147ce:    bf f3 fe 89       	call -60420 <__bt_malloc : 1e05bce >			  ## link_layer.c:1117:19
 1e147d2:    0c 08             	r12 = r0			  ## link_layer.c:1117:19
 1e147d4:    02 30             	if (r0 != 0) goto 4 <ll_send_acl_packet+0x30 : 1e147da >			  ## link_layer.c:1117:19
 1e147d6:    8f f3 93 75       	call 2026278 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e147da:    16 f9 08 c0       	b[r12 + 8] = r6			  ## link_layer.c:1119:38
 1e147de:    96 fc 74 01       	r6 = r9 + 372			  ## link_layer.c:1119:38
 1e147e2:    07 5c             	r7 = h[r6 + 0] (u)			  ## link_layer.c:1121:47
 1e147e4:    80 5c             	r0 = h[r6 + 16] (u)			  ## link_layer.c:1122:48
 1e147e6:    9b fc 04 01       	r11 = r9 + 260			  ## link_layer.c:1122:48
 1e147ea:    07 f2 04 10       	if (r7 != r0) goto 8 <ll_send_acl_packet+0x4C : 1e147f6 >			  ## link_layer.c:1122:48
 1e147ee:    08 18             	goto 16 <ll_send_acl_packet+0x56 : 1e14800 >			  ## link_layer.c:1122:48
 1e147f0:    10 70             	r0 = 1			  ## link_layer.c:1125:13
 1e147f2:    97 f3 e1 92       	call 3089858 <os_time_dly : 106db8 >			  ## link_layer.c:1125:13
 1e147f6:    00 f6 00 b0       	r0 = [r11 + 0]
 1e147fa:    b0 f2 f9 1f       	if (r0 != r11) goto -14 <ll_send_acl_packet+0x46 : 1e147f0 >
 1e147fe:    8f 5c             	h[r6 + 16] = r7			  ## link_layer.c:1127:48
 1e14800:    44 80             	r4 += 4			  ## link_layer.c:1110:36
 1e14802:    05 18             	goto 10 <ll_send_acl_packet+0x64 : 1e1480e >
 1e14804:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1138:42
 1e14808:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1139:59
 1e1480a:    21 70             	r1 = 2			  ## link_layer.c:1138:13
 1e1480c:    0d 18             	goto 26 <ll_send_acl_packet+0x7E : 1e14828 >			  ## link_layer.c:1138:13
 1e1480e:    71 08             	r1 = r7			  ## link_layer.c:1132:30
 1e14810:    75 f2 01 c0       	ifs (r5 > r7) goto 2 <ll_send_acl_packet+0x6C : 1e14816 >			  ## link_layer.c:1132:30
 1e14814:    51 08             	r1 = r5			  ## link_layer.c:1132:30
 1e14816:    24 f3 03 a0       	if ((r10 & 16) != 0) goto 6 <ll_send_acl_packet+0x76 : 1e14820 >
 1e1481a:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1136:52
 1e1481e:    f2 21             	if (r0 == 0) goto -28 <ll_send_acl_packet+0x5A : 1e14804 >			  ## link_layer.c:1136:52
 1e14820:    00 f6 00 90       	r0 = [r9 + 0]			  ## link_layer.c:1142:42
 1e14824:    46 04             	r6 = r1.b0 (u)			  ## link_layer.c:1143:59
 1e14826:    11 70             	r1 = 1			  ## link_layer.c:1142:13
 1e14828:    0f 02             	[sp] = r7
 1e1482a:    42 08             	r2 = r4
 1e1482c:    63 08             	r3 = r6
 1e1482e:    bf f3 f5 f1       	call -7190 <le_hw_send_packet : 1e12c1c >
 1e14832:    00 f9 08 c0       	r0 = b[r12 + 8] (u)			  ## link_layer.c:1148:41
 1e14836:    10 80             	r0 += 1			  ## link_layer.c:1148:41
 1e14838:    10 f9 08 c0       	b[r12 + 8] = r0			  ## link_layer.c:1148:41
 1e1483c:    a5 bb             	r5 = r5 - r6			  ## link_layer.c:1147:38
 1e1483e:    64 09             	r4 += r6			  ## link_layer.c:1146:31
 1e14840:    e6 3b             	if (r5 != 0) goto -52 <ll_send_acl_packet+0x64 : 1e1480e >
 1e14842:    97 f3 ab 92       	call 3089750 <local_irq_disable : 106d9c >			  ## link_layer.c:1153:5
 1e14846:    00 f6 04 b0       	r0 = [r11 + 4]			  ## list.h:154:28
 1e1484a:    1c f6 04 b0       	[r11 + 4] = r12			  ## list.h:137:16
 1e1484e:    1b f6 00 c0       	[r12 + 0] = r11			  ## list.h:138:16
 1e14852:    10 f6 04 c0       	[r12 + 4] = r0			  ## list.h:139:16
 1e14856:    1c f6 00 00       	[r0 + 0] = r12			  ## list.h:140:16
 1e1485a:    97 f3 9d 92       	call 3089722 <local_irq_enable : 106d98 >			  ## link_layer.c:1155:5
 1e1485e:    80 08             	r0 = r8			  ## link_layer.c:1158:5
 1e14860:    97 f3 e2 92       	call 3089860 <os_mutex_post : 106e28 >			  ## link_layer.c:1158:5
 1e14864:    02 0a             	sp += 4
 1e14866:    5c 01             	{pc, r12-r4} = [sp++]			  ## link_layer.c:1159:1


__rx_oneshot_add:
 1e14868:    75 01             	[--sp] = {rets, r5, r4}			  ## link_layer.c:212:0
 1e1486a:    04 08             	r4 = r0			  ## link_layer.c:212:0
 1e1486c:    c0 70             	r0 = 12			  ## link_layer.c:213:25
 1e1486e:    bf f3 ae 89       	call -60580 <__bt_malloc : 1e05bce >			  ## link_layer.c:213:25
 1e14872:    05 08             	r5 = r0			  ## link_layer.c:213:25
 1e14874:    0e 2a             	if (r5 == 0) goto 28 <__rx_oneshot_add+0x2A : 1e14892 >			  ## link_layer.c:213:25
 1e14876:    97 f3 91 92       	call 3089698 <local_irq_disable : 106d9c >			  ## link_layer.c:217:5
 1e1487a:    c0 ff 0a 49 e1 01 	r0 = 31541514 <__set_conn_winsize : 1e1490a >			  ## link_layer.c:219:17
 1e14880:    28 4a             	[r5 + 8] = r0			  ## link_layer.c:219:17
 1e14882:    40 fc 34 01       	r0 = r4 + 308			  ## link_layer.c:219:17
 1e14886:    11 40             	r1 = [r0 + 4]			  ## list.h:154:28
 1e14888:    1d 40             	[r0 + 4] = r5			  ## list.h:137:16
 1e1488a:    08 4a             	[r5 + 0] = r0			  ## list.h:138:16
 1e1488c:    19 4a             	[r5 + 4] = r1			  ## list.h:139:16
 1e1488e:    0d 42             	[r1 + 0] = r5			  ## list.h:140:16
 1e14890:    04 18             	goto 8 <__rx_oneshot_add+0x32 : 1e1489a >			  ## list.h:140:16
 1e14892:    8f f3 35 75       	call 2026090 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e14896:    97 f3 81 92       	call 3089666 <local_irq_disable : 106d9c >			  ## link_layer.c:217:5
 1e1489a:    15 01             	{rets, r5, r4} = [sp++]			  ## link_layer.c:222:5
 1e1489c:    d7 f3 7c 92       	goto 3089656 <local_irq_enable : 106d98 >			  ## link_layer.c:222:5


__connection_upadte:
 1e148a0:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1644:0
 1e148a2:    04 08             	r4 = r0			  ## link_layer.c:1644:0
 1e148a4:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1645:29
 1e148a6:    42 99             	r2 = r4 + 20			  ## link_layer.c:1645:57
 1e148a8:    71 70             	r1 = 7			  ## link_layer.c:1645:5
 1e148aa:    bf f3 1a eb       	call -10700 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:1645:5
 1e148ae:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1621:29
 1e148b0:    21 71             	r1 = 18			  ## link_layer.c:1621:5
 1e148b2:    02 70             	r2 = 0			  ## link_layer.c:1621:5
 1e148b4:    bf f3 15 eb       	call -10710 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:1621:5
 1e148b8:    00 f6 c4 40       	r0 = [r4 + 196]			  ## link_layer.c:469:15
 1e148bc:    00 f3 03 00       	if ((r0 & 1) == 0) goto 6 <__connection_upadte+0x26 : 1e148c6 >			  ## link_layer.c:469:15
 1e148c0:    70 b0             	r0 &= 4294967294			  ## link_layer.c:472:33
 1e148c2:    10 f6 c4 40       	[r4 + 196] = r0			  ## link_layer.c:472:33
 1e148c6:    40 08             	r0 = r4			  ## link_layer.c:1649:5
 1e148c8:    cf 17             	call -98 <__rx_oneshot_add : 1e14868 >			  ## link_layer.c:1649:5
 1e148ca:    00 f6 50 41       	r0 = [r4 + 336]			  ## link_layer.c:1328:15
 1e148ce:    06 20             	if (r0 == 0) goto 12 <__connection_upadte+0x3C : 1e148dc >
 1e148d0:    11 59             	r1 = h[r4 + 34] (u)			  ## link_layer.c:1654:47
 1e148d2:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:53:5
 1e148d4:    01 fe 0a 19       	r1 = r1 * 10			  ## link_layer.c:1654:69
 1e148d8:    bf f3 ab b9       	call -36010 <sys_timer_modify : 1e0bc32 >			  ## sys_timer.c:53:5
 1e148dc:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1658:1


__master_ll_send_conn_update_done:
 1e148de:    01 70             	r1 = 0			  ## link_layer.c:1661:0
 1e148e0:    02 70             	r2 = 0			  ## link_layer.c:1662:5
 1e148e2:    ff f3 1f fb       	goto -2498 <le_connection_update_complete_event : 1e13f24 >			  ## link_layer.c:1662:5


__channel_map_upadte:
 1e148e6:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1993:0
 1e148e8:    04 08             	r4 = r0			  ## link_layer.c:1993:0
 1e148ea:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1994:29
 1e148ec:    42 fc 24 00       	r2 = r4 + 36			  ## link_layer.c:1994:50
 1e148f0:    81 70             	r1 = 8			  ## link_layer.c:1994:5
 1e148f2:    bf f3 f6 ea       	call -10772 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:1994:5
 1e148f6:    00 f9 3d 40       	r0 = b[r4 + 61] (u)			  ## link_layer.c:1996:9
 1e148fa:    10 e0 05 00       	if (r0 == 1) goto 10 <__channel_map_upadte+0x22 : 1e14908 >			  ## link_layer.c:1996:9
 1e148fe:    00 48             	r0 = [r4 + 0]			  ## link_layer.c:1983:29
 1e14900:    21 71             	r1 = 18			  ## link_layer.c:1983:5
 1e14902:    02 70             	r2 = 0			  ## link_layer.c:1983:5
 1e14904:    bf f3 ed ea       	call -10790 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:1983:5
 1e14908:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:2001:1


__set_conn_winsize:
 1e1490a:    01 08             	r1 = r0			  ## link_layer.c:1336:0
 1e1490c:    02 f9 3d 10       	r2 = b[r1 + 61] (u)			  ## link_layer.c:1337:9
 1e14910:    00 42             	r0 = [r1 + 0]			  ## link_layer.c:1337:9
 1e14912:    12 e0 07 10       	if (r2 != 1) goto 14 <__set_conn_winsize+0x1A : 1e14924 >			  ## link_layer.c:1337:9
 1e14916:    51 53             	r1 = h[r1 + 42] (u)			  ## link_layer.c:1338:58
 1e14918:    49 c0             	r1 = r1 << 1			  ## link_layer.c:1338:81
 1e1491a:    13 fc 32 00       	r3 = r1 + 50			  ## link_layer.c:1338:85
 1e1491e:    51 70             	r1 = 5			  ## link_layer.c:1338:9
 1e14920:    22 73             	r2 = 50			  ## link_layer.c:1338:9
 1e14922:    03 18             	goto 6 <__set_conn_winsize+0x20 : 1e1492a >			  ## link_layer.c:1338:9
 1e14924:    51 70             	r1 = 5			  ## link_layer.c:1340:9
 1e14926:    e2 71             	r2 = 30			  ## link_layer.c:1340:9
 1e14928:    03 70             	r3 = 0			  ## link_layer.c:1340:9
 1e1492a:    ff f3 da ea       	goto -10828 <le_hw_ioctrl : 1e11ee2 >


ll_conn_fast_supervision_timer_handler:
 1e1492e:    e1 73             	r1 = 62			  ## link_layer.c:1268:0
 1e14930:    ff f3 73 fb       	goto -2330 <ll_disconnect_process : 1e1401a >			  ## link_layer.c:1269:5


conn_rx_probe_handler:
 1e14934:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:3087:0
 1e14936:    05 08             	r5 = r0			  ## link_layer.c:3087:0
 1e14938:    00 f9 3c 50       	r0 = b[r5 + 60] (u)			  ## link_layer.c:3090:15
 1e1493c:    18 08             	r8 = r1			  ## link_layer.c:3090:15
 1e1493e:    57 fc 34 01       	r7 = r5 + 308
 1e14942:    60 e0 24 10       	if (r0 != 6) goto 72 <conn_rx_probe_handler+0x5A : 1e1498e >
 1e14946:    70 70             	r0 = 7			  ## link_layer.c:3094:21
 1e14948:    10 f9 3c 50       	b[r5 + 60] = r0			  ## link_layer.c:3094:21
 1e1494c:    97 f3 26 92       	call 3089484 <local_irq_disable : 106d9c >			  ## link_layer.c:324:5
 1e14950:    44 4e             	r4 = [r7 + 16]			  ## link_layer.c:325:5
 1e14952:    06 9f             	r6 = r7 + 16			  ## link_layer.c:325:5
 1e14954:    64 f2 17 00       	if (r4 == r6) goto 46 <conn_rx_probe_handler+0x52 : 1e14986 >			  ## link_layer.c:325:5
 1e14958:    c9 ff 2e 49 e1 01 	r9 = 31541550 <ll_conn_fast_supervision_timer_handler : 1e1492e >
 1e1495e:    41 08             	r1 = r4
 1e14960:    40 08             	r0 = r4
 1e14962:    22 40             	r2 = [r0 + 8]			  ## link_layer.c:326:25
 1e14964:    04 40             	r4 = [r0 + 0]			  ## link_layer.c:326:25
 1e14966:    92 f2 0b 10       	if (r2 != r9) goto 22 <conn_rx_probe_handler+0x4C : 1e14980 >
 1e1496a:    32 40             	r2 = [r0 + 12]			  ## link_layer.c:326:46
 1e1496c:    62 e0 08 10       	if (r2 != 6) goto 16 <conn_rx_probe_handler+0x4C : 1e14980 >			  ## link_layer.c:326:46
 1e14970:    02 42             	r2 = [r1 + 0]			  ## list.h:171:36
 1e14972:    13 42             	r3 = [r1 + 4]			  ## list.h:171:23
 1e14974:    1b 44             	[r2 + 4] = r3			  ## list.h:159:16
 1e14976:    0a 46             	[r3 + 0] = r2			  ## list.h:160:16
 1e14978:    09 42             	[r1 + 0] = r1			  ## list.h:172:17
 1e1497a:    19 42             	[r1 + 4] = r1			  ## list.h:173:17
 1e1497c:    bf f3 83 63       	call -80122 <__bt_free : 1e01086 >			  ## link_layer.c:328:13
 1e14980:    41 08             	r1 = r4
 1e14982:    64 f2 ed 1f       	if (r4 != r6) goto -38 <conn_rx_probe_handler+0x2C : 1e14960 >
 1e14986:    97 f3 07 92       	call 3089422 <local_irq_enable : 106d98 >			  ## link_layer.c:331:5
 1e1498a:    50 08             	r0 = r5			  ## link_layer.c:3099:13
 1e1498c:    6d 17             	call -294 <__rx_oneshot_add : 1e14868 >			  ## link_layer.c:3099:13
 1e1498e:    70 4e             	r0 = [r7 + 28]			  ## link_layer.c:1321:15
 1e14990:    03 20             	if (r0 == 0) goto 6 <conn_rx_probe_handler+0x64 : 1e14998 >
 1e14992:    20 04             	r0 = r0.l (u)			  ## sys_timer.c:48:5
 1e14994:    bf f3 77 b9       	call -36114 <sys_timer_re_run : 1e0bc86 >			  ## sys_timer.c:48:5
 1e14998:    97 f3 00 92       	call 3089408 <local_irq_disable : 106d9c >			  ## link_layer.c:230:5
 1e1499c:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:231:5
 1e1499e:    76 f2 10 00       	if (r6 == r7) goto 32 <conn_rx_probe_handler+0x8E : 1e149c2 >
 1e149a2:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e149a4:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e149a6:    04 4c             	r4 = [r6 + 0]
 1e149a8:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e149aa:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e149ac:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e149ae:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e149b0:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:233:12
 1e149b2:    50 08             	r0 = r5			  ## link_layer.c:233:9
 1e149b4:    81 00             	call r1			  ## link_layer.c:233:9
 1e149b6:    60 08             	r0 = r6			  ## link_layer.c:234:9
 1e149b8:    bf f3 65 63       	call -80182 <__bt_free : 1e01086 >			  ## link_layer.c:234:9
 1e149bc:    46 08             	r6 = r4
 1e149be:    74 f2 f0 1f       	if (r4 != r7) goto -32 <conn_rx_probe_handler+0x6E : 1e149a2 >
 1e149c2:    97 f3 e9 91       	call 3089362 <local_irq_enable : 106d98 >			  ## link_layer.c:236:5
 1e149c6:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:3107:9
 1e149ca:    2b f3 06 00       	if ((r0 & 2048) != 0) goto 12 <conn_rx_probe_handler+0xA6 : 1e149da >			  ## link_layer.c:3107:9
 1e149ce:    00 f9 0c 80       	r0 = b[r8 + 12] (u)			  ## link_layer.c:3108:26
 1e149d2:    10 f9 88 51       	b[r5 + 392] = r0			  ## link_layer.c:3108:20
 1e149d6:    00 f7 08 80       	r0 = h[r8 + 8] (u)			  ## link_layer.c:3108:20
 1e149da:    20 fd 30 09       	r0 = r0 & 48			  ## link_layer.c:3113:9
 1e149de:    00 e1 03 10       	if (r0 != 16) goto 6 <conn_rx_probe_handler+0xB4 : 1e149e8 >			  ## link_layer.c:3113:9
 1e149e2:    00 f9 0a 80       	r0 = b[r8 + 10] (u)			  ## link_layer.c:3113:9
 1e149e6:    05 20             	if (r0 == 0) goto 10 <conn_rx_probe_handler+0xBE : 1e149f2 >			  ## link_layer.c:3113:9
 1e149e8:    c0 ff 28 2a 00 00 	r0 = 10792 <ll_hdl+0x8 : 2a28 >			  ## link_layer.c:3118:9
 1e149ee:    bf f3 c9 88       	call -61038 <thread_resume : 1e05b84 >			  ## link_layer.c:3118:9
 1e149f2:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3120:1


conn_tx_probe_handler:
 1e149f4:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:3123:0
 1e149f6:    81 52             	r1 = h[r1 + 16] (u)			  ## link_layer.c:3126:17
 1e149f8:    82 fd 20 11       	r1 = uextra(r1, p:4, l:2)
 1e149fc:    12 fc ff ff       	r2 = r1 + -1			  ## link_layer.c:3126:5
 1e14a00:    04 fc fc 00       	r4 = r0 + 252			  ## link_layer.c:3126:5
 1e14a04:    22 e0 07 20       	if (r2 >= 2) goto 14 <conn_tx_probe_handler+0x22 : 1e14a16 >			  ## link_layer.c:3126:5
 1e14a08:    97 f3 c8 91       	call 3089296 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e14a0c:    08 00             	csync			  ## atomic.h:16:5
 1e14a0e:    00 48             	r0 = [r4 + 0]			  ## atomic.h:18:14
 1e14a10:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e14a12:    08 48             	[r4 + 0] = r0			  ## atomic.h:19:16
 1e14a14:    08 18             	goto 16 <conn_tx_probe_handler+0x32 : 1e14a26 >			  ## atomic.h:19:16
 1e14a16:    31 e0 08 10       	if (r1 != 3) goto 16 <conn_tx_probe_handler+0x36 : 1e14a2a >
 1e14a1a:    97 f3 bf 91       	call 3089278 <local_irq_disable : 106d9c >			  ## atomic.h:16:5
 1e14a1e:    08 00             	csync			  ## atomic.h:16:5
 1e14a20:    10 48             	r0 = [r4 + 4]			  ## atomic.h:18:14
 1e14a22:    10 80             	r0 += 1			  ## atomic.h:19:22
 1e14a24:    18 48             	[r4 + 4] = r0			  ## atomic.h:19:16
 1e14a26:    97 f3 b7 91       	call 3089262 <local_irq_enable : 106d98 >
 1e14a2a:    c0 ff 28 2a 00 00 	r0 = 10792 <ll_hdl+0x8 : 2a28 >			  ## link_layer.c:3141:5
 1e14a30:    14 01             	{rets, r4} = [sp++]			  ## link_layer.c:3141:5
 1e14a32:    ff f3 a7 88       	goto -61106 <thread_resume : 1e05b84 >			  ## link_layer.c:3141:5


conn_evt_probe_handler:
 1e14a36:    79 01             	[--sp] = {rets, r9-r4}			  ## link_layer.c:3164:0
 1e14a38:    24 08             	r4 = r2			  ## link_layer.c:3164:0
 1e14a3a:    09 08             	r9 = r0			  ## link_layer.c:3164:0
 1e14a3c:    36 32             	if (r1 != 0) goto 108 <conn_evt_probe_handler+0x74 : 1e14aaa >			  ## link_layer.c:3164:0
 1e14a3e:    02 30             	if (r0 != 0) goto 4 <conn_evt_probe_handler+0xE : 1e14a44 >			  ## link_layer.c:3164:0
 1e14a40:    8f f3 5e 74       	call 2025660 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e14a44:    97 f3 aa 91       	call 3089236 <local_irq_disable : 106d9c >			  ## link_layer.c:160:5
 1e14a48:    14 f7 90 90       	h[r9 + 144] = r4			  ## link_layer.c:161:21
 1e14a4c:    97 fc 3c 01       	r7 = r9 + 316			  ## link_layer.c:161:21
 1e14a50:    06 4e             	r6 = [r7 + 0]			  ## link_layer.c:163:5
 1e14a52:    76 f2 18 00       	if (r6 == r7) goto 48 <conn_evt_probe_handler+0x50 : 1e14a86 >
 1e14a56:    08 fb fd 7f       	r8 = 32765 <nvbss_size+0x13BD : 7ffd >
 1e14a5a:    30 4c             	r0 = [r6 + 12]			  ## link_layer.c:164:15
 1e14a5c:    20 b1             	r0 = r0 - r4			  ## link_layer.c:164:26
 1e14a5e:    05 4c             	r5 = [r6 + 0]			  ## link_layer.c:164:26
 1e14a60:    20 04             	r0 = r0.l (u)			  ## link_layer.c:167:14
 1e14a62:    f0 8f             	r0 += -1			  ## link_layer.c:167:28
 1e14a64:    80 f2 0c 90       	if (r0 <= r8) goto 24 <conn_evt_probe_handler+0x4A : 1e14a80 >			  ## link_layer.c:167:28
 1e14a68:    00 4c             	r0 = [r6 + 0]			  ## list.h:171:36
 1e14a6a:    11 4c             	r1 = [r6 + 4]			  ## list.h:171:23
 1e14a6c:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e14a6e:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e14a70:    0e 4c             	[r6 + 0] = r6			  ## list.h:172:17
 1e14a72:    1e 4c             	[r6 + 4] = r6			  ## list.h:173:17
 1e14a74:    21 4c             	r1 = [r6 + 8]			  ## link_layer.c:169:16
 1e14a76:    90 08             	r0 = r9			  ## link_layer.c:169:13
 1e14a78:    81 00             	call r1			  ## link_layer.c:169:13
 1e14a7a:    60 08             	r0 = r6			  ## link_layer.c:170:13
 1e14a7c:    bf f3 03 63       	call -80378 <__bt_free : 1e01086 >			  ## link_layer.c:170:13
 1e14a80:    56 08             	r6 = r5
 1e14a82:    75 f2 ea 1f       	if (r5 != r7) goto -44 <conn_evt_probe_handler+0x24 : 1e14a5a >
 1e14a86:    97 f3 87 91       	call 3089166 <local_irq_enable : 106d98 >			  ## link_layer.c:173:5
 1e14a8a:    00 f9 8c 91       	r0 = b[r9 + 396] (u)			  ## link_layer.c:3150:15
 1e14a8e:    c6 ff 28 2a 00 00 	r6 = 10792 <ll_hdl+0x8 : 2a28 >			  ## link_layer.c:3150:15
 1e14a94:    60 ff 0f 09 09 00 	if ((r0 & 15) == 0) goto 18 <conn_evt_probe_handler+0x76 : 1e14aac >			  ## link_layer.c:3150:9
 1e14a9a:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:3150:15
 1e14a9e:    10 b2             	r0 |= 16			  ## link_layer.c:3151:35
 1e14aa0:    10 f9 8c 91       	b[r9 + 396] = r0			  ## link_layer.c:3151:35
 1e14aa4:    60 08             	r0 = r6
 1e14aa6:    bf f3 6d 88       	call -61222 <thread_resume : 1e05b84 >
 1e14aaa:    59 01             	{pc, r9-r4} = [sp++]			  ## link_layer.c:3172:1
 1e14aac:    97 f3 76 91       	call 3089132 <local_irq_disable : 106d9c >			  ## link_layer.c:280:5
 1e14ab0:    20 4e             	r0 = [r7 + 8]			  ## link_layer.c:280:5
 1e14ab2:    81 9e             	r1 = r7 + 8			  ## link_layer.c:281:5
 1e14ab4:    10 f2 0b 00       	if (r0 == r1) goto 22 <conn_evt_probe_handler+0x98 : 1e14ace >			  ## link_layer.c:281:5
 1e14ab8:    02 fb fd 7f       	r2 = 32765 <nvbss_size+0x13BD : 7ffd >
 1e14abc:    33 40             	r3 = [r0 + 12]			  ## link_layer.c:282:15
 1e14abe:    23 b7             	r3 = r3 - r4			  ## link_layer.c:282:26
 1e14ac0:    e3 04             	r3 = r3.l (u)			  ## link_layer.c:283:14
 1e14ac2:    f3 8f             	r3 += -1			  ## link_layer.c:283:28
 1e14ac4:    23 f2 06 80       	if (r3 > r2) goto 12 <conn_evt_probe_handler+0x9E : 1e14ad4 >			  ## link_layer.c:283:28
 1e14ac8:    00 40             	r0 = [r0 + 0]
 1e14aca:    10 f2 f7 1f       	if (r0 != r1) goto -18 <conn_evt_probe_handler+0x86 : 1e14abc >
 1e14ace:    19 01             	{rets, r9-r4} = [sp++]			  ## link_layer.c:288:5
 1e14ad0:    d7 f3 62 91       	goto 3089092 <local_irq_enable : 106d98 >			  ## link_layer.c:288:5
 1e14ad4:    97 f3 60 91       	call 3089088 <local_irq_enable : 106d98 >			  ## link_layer.c:288:5
 1e14ad8:    e5 1f             	goto -54 <conn_evt_probe_handler+0x6E : 1e14aa4 >			  ## link_layer.c:288:5


conn_echo_req_handler:
 1e14ada:    20 00             	rts			  ## link_layer.c:3175:0


ll_conn_supervision_timer_handler:
 1e14adc:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1283:0
 1e14ade:    04 08             	r4 = r0			  ## link_layer.c:1283:0
 1e14ae0:    0d 28             	if (r4 == 0) goto 26 <ll_conn_supervision_timer_handler+0x20 : 1e14afc >			  ## link_layer.c:1283:0
 1e14ae2:    bf f3 5e f8       	call -3908 <ll_supervision_timeout_stop : 1e13ba2 >			  ## link_layer.c:1295:5
 1e14ae6:    00 f9 3c 40       	r0 = b[r4 + 60] (u)			  ## link_layer.c:1301:14
 1e14aea:    10 b0             	r0 |= 1			  ## link_layer.c:1301:14
 1e14aec:    00 04             	r0 = r0.b0 (u)			  ## link_layer.c:1301:14
 1e14aee:    81 70             	r1 = 8			  ## link_layer.c:1301:14
 1e14af0:    70 e0 01 00       	if (r0 == 7) goto 2 <ll_conn_supervision_timer_handler+0x1A : 1e14af6 >			  ## link_layer.c:1301:14
 1e14af4:    e1 73             	r1 = 62
 1e14af6:    40 08             	r0 = r4			  ## link_layer.c:1304:5
 1e14af8:    bf f3 8f fa       	call -2786 <ll_disconnect_process : 1e1401a >			  ## link_layer.c:1304:5
 1e14afc:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1306:1


ll_response_timeout_handler:
 1e14afe:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1437:0
 1e14b00:    04 08             	r4 = r0			  ## link_layer.c:1437:0
 1e14b02:    0b 28             	if (r4 == 0) goto 22 <ll_response_timeout_handler+0x1C : 1e14b1a >			  ## link_layer.c:1437:0
 1e14b04:    bf f3 42 f8       	call -3964 <ll_response_timeout_stop : 1e13b8c >			  ## link_layer.c:1447:5
 1e14b08:    01 70             	r1 = 0			  ## link_layer.c:1450:5
 1e14b0a:    42 70             	r2 = 4			  ## link_layer.c:1450:5
 1e14b0c:    40 08             	r0 = r4			  ## link_layer.c:1450:5
 1e14b0e:    bf f3 a0 fa       	call -2752 <ll_control_procedure_finish : 1e14052 >			  ## link_layer.c:1450:5
 1e14b12:    21 72             	r1 = 34			  ## link_layer.c:1452:5
 1e14b14:    40 08             	r0 = r4			  ## link_layer.c:1452:5
 1e14b16:    bf f3 80 fa       	call -2816 <ll_disconnect_process : 1e1401a >			  ## link_layer.c:1452:5
 1e14b1a:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1454:1


ll_thread_process:
 1e14b1c:    7f 01             	[--sp] = {rets, r15-r4}			  ## link_layer.c:3211:0
 1e14b1e:    f6 0b             	sp += -20			  ## link_layer.c:3211:0
 1e14b20:    c6 ff 20 2a 00 00 	r6 = 10784 <ll_hdl : 2a20 >			  ## link_layer.c:3211:0
 1e14b26:    15 4c             	r5 = [r6 + 4]			  ## link_layer.c:431:39
 1e14b28:    18 02             	[sp+4] = r0
 1e14b2a:    97 f3 37 91       	call 3089006 <local_irq_disable : 106d9c >			  ## lbuf.c:236:5
 1e14b2e:    04 4a             	r4 = [r5 + 0]
 1e14b30:    54 f2 05 00       	if (r4 == r5) goto 10 <ll_thread_process+0x22 : 1e14b3e >
 1e14b34:    e0 68             	r0 = b[r4 + 14] (u)			  ## lbuf.c:242:16
 1e14b36:    06 20             	if (r0 == 0) goto 12 <ll_thread_process+0x28 : 1e14b44 >			  ## lbuf.c:242:13
 1e14b38:    04 48             	r4 = [r4 + 0]
 1e14b3a:    54 f2 fb 1f       	if (r4 != r5) goto -10 <ll_thread_process+0x18 : 1e14b34 >
 1e14b3e:    97 f3 2b 91       	call 3088982 <local_irq_enable : 106d98 >			  ## lbuf.c:249:5
 1e14b42:    12 18             	goto 36 <ll_thread_process+0x4C : 1e14b68 >			  ## lbuf.c:249:5
 1e14b44:    10 70             	r0 = 1			  ## lbuf.c:243:22
 1e14b46:    e8 68             	b[r4 + 14] = r0			  ## lbuf.c:243:22
 1e14b48:    97 f3 26 91       	call 3088972 <local_irq_enable : 106d98 >			  ## lbuf.c:244:13
 1e14b4c:    c0 ff 68 29 00 00 	r0 = 10600 <h4_transport : 2968 >			  ## link_layer.c:435:9
 1e14b52:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:435:9
 1e14b54:    63 40             	r3 = [r0 + 24]			  ## link_layer.c:435:24
 1e14b56:    10 69             	r0 = b[r4 + 17] (u)			  ## link_layer.c:435:84
 1e14b58:    04 81             	r4 += 16			  ## lbuf.c:245:22
 1e14b5a:    22 90             	r2 = r0 + 2			  ## link_layer.c:435:82
 1e14b5c:    40 70             	r0 = 4			  ## link_layer.c:435:9
 1e14b5e:    41 08             	r1 = r4			  ## link_layer.c:435:9
 1e14b60:    83 00             	call r3			  ## link_layer.c:435:9
 1e14b62:    40 08             	r0 = r4			  ## link_layer.c:436:9
 1e14b64:    bf f3 39 62       	call -80782 <lbuf_free_btctrler : 1e00fda >			  ## link_layer.c:436:9
 1e14b68:    c0 ff 7c 0e 00 00 	r0 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:560:9
 1e14b6e:    01 40             	r1 = [r0 + 0]			  ## ll_adv.c:560:9
 1e14b70:    10 70             	r0 = 1			  ## ll_adv.c:560:9
 1e14b72:    10 22             	if (r1 == 0) goto 32 <ll_thread_process+0x78 : 1e14b94 >			  ## ll_adv.c:560:9
 1e14b74:    11 42             	r1 = [r1 + 4]			  ## ll_adv.c:564:44
 1e14b76:    0e 22             	if (r1 == 0) goto 28 <ll_thread_process+0x78 : 1e14b94 >
 1e14b78:    04 42             	r4 = [r1 + 0]			  ## ll_adv.c:570:19
 1e14b7a:    0c 28             	if (r4 == 0) goto 24 <ll_thread_process+0x78 : 1e14b94 >
 1e14b7c:    00 48             	r0 = [r4 + 0]
 1e14b7e:    c1 ff 90 52 e1 01 	r1 = 31543952 <__adv_rx_post_handler : 1e15290 >			  ## ll_adv.c:576:5
 1e14b84:    bf f3 93 f0       	call -7898 <le_hw_upload_data : 1e12cae >			  ## ll_adv.c:576:5
 1e14b88:    02 a1             	r2 = sp + 16			  ## ll_adv.c:576:5
 1e14b8a:    31 71             	r1 = 19			  ## ll_adv.c:580:5
 1e14b8c:    40 08             	r0 = r4			  ## ll_adv.c:580:5
 1e14b8e:    bf f3 a8 e9       	call -11440 <le_hw_ioctrl : 1e11ee2 >			  ## ll_adv.c:580:5
 1e14b92:    40 02             	r0 = [sp+16]			  ## ll_adv.c:582:12
 1e14b94:    0b f6 24 60       	r11 = [r6 + 36]			  ## link_layer.c:3235:5
 1e14b98:    6f fc 24 00       	r15 = r6 + 36			  ## link_layer.c:3235:5
 1e14b9c:    20 fd 01 09       	r0 = r0 & 1			  ## link_layer.c:3232:11
 1e14ba0:    fb f2 f4 00       	if (r11 == r15) goto 488 <ll_thread_process+0x270 : 1e14d8c >
 1e14ba4:    09 fb fd 7f       	r9 = 32765 <nvbss_size+0x13BD : 7ffd >
 1e14ba8:    28 02             	[sp+8] = r0
 1e14baa:    b8 08             	r8 = r11
 1e14bac:    8e fc cc ff       	r14 = r8 + -52
 1e14bb0:    0b f6 34 e0       	r11 = [r14 + 52]
 1e14bb4:    08 00             	csync			  ## link_layer.c:3044:12
 1e14bb6:    8a fc 5c 00       	r10 = r8 + 92			  ## link_layer.c:3044:12
 1e14bba:    00 f6 6c a0       	r0 = [r10 + 108]			  ## link_layer.c:3044:12
 1e14bbe:    8d fc c4 00       	r13 = r8 + 196
 1e14bc2:    38 20             	if (r0 == 0) goto 112 <ll_thread_process+0x118 : 1e14c34 >
 1e14bc4:    ac fc 74 00       	r12 = r10 + 116
 1e14bc8:    05 70             	r5 = 0
 1e14bca:    00 f6 74 a0       	r0 = [r10 + 116]			  ## list.h:124:18
 1e14bce:    c0 f2 4b 00       	if (r0 == r12) goto 150 <ll_thread_process+0x14C : 1e14c68 >			  ## list.h:124:18
 1e14bd2:    97 f3 e3 90       	call 3088838 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e14bd6:    08 00             	csync			  ## atomic.h:32:5
 1e14bd8:    00 f6 6c a0       	r0 = [r10 + 108]			  ## atomic.h:34:14
 1e14bdc:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e14bde:    10 f6 6c a0       	[r10 + 108] = r0			  ## atomic.h:35:16
 1e14be2:    97 f3 d9 90       	call 3088818 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e14be6:    00 f6 74 a0       	r0 = [r10 + 116]			  ## link_layer.c:1166:5
 1e14bea:    01 70             	r1 = 0			  ## link_layer.c:1166:5
 1e14bec:    c0 f2 0f 00       	if (r0 == r12) goto 30 <ll_thread_process+0xF2 : 1e14c0e >			  ## link_layer.c:1166:5
 1e14bf0:    82 60             	r2 = b[r0 + 8] (u)			  ## link_layer.c:1169:32
 1e14bf2:    f2 8f             	r2 += -1			  ## link_layer.c:1169:32
 1e14bf4:    8a 60             	b[r0 + 8] = r2			  ## link_layer.c:1169:32
 1e14bf6:    61 ff ff 29 09 00 	if ((r2 & 255) != 0) goto 18 <ll_thread_process+0xF2 : 1e14c0e >			  ## link_layer.c:1169:32
 1e14bfc:    01 40             	r1 = [r0 + 0]			  ## list.h:171:36
 1e14bfe:    12 40             	r2 = [r0 + 4]			  ## list.h:171:23
 1e14c00:    1a 42             	[r1 + 4] = r2			  ## list.h:159:16
 1e14c02:    09 44             	[r2 + 0] = r1			  ## list.h:160:16
 1e14c04:    08 40             	[r0 + 0] = r0			  ## list.h:172:17
 1e14c06:    18 40             	[r0 + 4] = r0			  ## list.h:173:17
 1e14c08:    bf f3 3d 62       	call -80774 <__bt_free : 1e01086 >			  ## link_layer.c:1172:13
 1e14c0c:    11 70             	r1 = 1
 1e14c0e:    08 00             	csync			  ## link_layer.c:3044:12
 1e14c10:    00 f6 6c a0       	r0 = [r10 + 108]			  ## link_layer.c:3044:12
 1e14c14:    15 09             	r5 += r1			  ## link_layer.c:3051:22
 1e14c16:    d9 31             	if (r0 != 0) goto -78 <ll_thread_process+0xAE : 1e14bca >			  ## link_layer.c:3051:22
 1e14c18:    60 ff ff 59 0b 00 	if ((r5 & 255) == 0) goto 22 <ll_thread_process+0x118 : 1e14c34 >
 1e14c1e:    03 f7 00 d0       	r3 = h[r13 + 0] (u)			  ## ll_events.c:408:5
 1e14c22:    41 05             	r1 = r5.b0 (u)			  ## ll_events.c:408:5
 1e14c24:    30 71             	r0 = 19			  ## ll_events.c:408:5
 1e14c26:    12 70             	r2 = 1			  ## ll_events.c:408:5
 1e14c28:    09 02             	[sp] = r1			  ## ll_events.c:408:5
 1e14c2a:    c1 ff a2 e0 e0 01 	r1 = 31514786 <update_target_end+0x1C2 : 1e0e0a2 >			  ## ll_events.c:408:5
 1e14c30:    bf f3 ab e2       	call -15018 <hci_send_event : 1e1118a >			  ## ll_events.c:408:5
 1e14c34:    08 00             	csync			  ## link_layer.c:3057:12
 1e14c36:    15 18             	goto 42 <ll_thread_process+0x146 : 1e14c62 >			  ## link_layer.c:3057:12
 1e14c38:    97 f3 b0 90       	call 3088736 <local_irq_disable : 106d9c >			  ## atomic.h:32:5
 1e14c3c:    08 00             	csync			  ## atomic.h:32:5
 1e14c3e:    00 f6 70 a0       	r0 = [r10 + 112]			  ## atomic.h:34:14
 1e14c42:    f0 8f             	r0 += -1			  ## atomic.h:35:22
 1e14c44:    10 f6 70 a0       	[r10 + 112] = r0			  ## atomic.h:35:16
 1e14c48:    97 f3 a6 90       	call 3088716 <local_irq_enable : 106d98 >			  ## atomic.h:37:5
 1e14c4c:    20 fb 80 0a       	r0 = 32768			  ## link_layer.c:3030:5
 1e14c50:    02 70             	r2 = 0			  ## link_layer.c:3030:5
 1e14c52:    e1 08             	r1 = r14			  ## link_layer.c:3030:5
 1e14c54:    bf f3 9f fa       	call -2754 <ll_control_step_verify : 1e14196 >			  ## link_layer.c:3030:5
 1e14c58:    01 70             	r1 = 0			  ## link_layer.c:3033:5
 1e14c5a:    e0 08             	r0 = r14			  ## link_layer.c:3033:5
 1e14c5c:    bf f3 e7 fa       	call -2610 <ll_send_control_data_state_machine : 1e1422e >			  ## link_layer.c:3033:5
 1e14c60:    08 00             	csync			  ## link_layer.c:3057:12
 1e14c62:    00 f6 70 a0       	r0 = [r10 + 112]
 1e14c66:    e8 31             	if (r0 != 0) goto -48 <ll_thread_process+0x11C : 1e14c38 >
 1e14c68:    00 f6 00 e0       	r0 = [r14 + 0]
 1e14c6c:    01 f9 09 80       	r1 = b[r8 + 9] (u)			  ## link_layer.c:3008:9
 1e14c70:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:3008:9
 1e14c72:    11 e0 04 10       	if (r1 != 1) goto 8 <ll_thread_process+0x162 : 1e14c7e >			  ## link_layer.c:3008:9
 1e14c76:    c1 ff 5e 4e e1 01 	r1 = 31542878 <__conn_slave_rx_post_handler : 1e14e5e >			  ## ll_slave.c:781:5
 1e14c7c:    03 18             	goto 6 <ll_thread_process+0x168 : 1e14c84 >			  ## ll_slave.c:781:5
 1e14c7e:    c1 ff 8a 55 e1 01 	r1 = 31544714 <__conn_master_rx_post_handler : 1e1558a >			  ## ll_master.c:588:5
 1e14c84:    bf f3 13 f0       	call -8154 <le_hw_upload_data : 1e12cae >
 1e14c88:    06 f7 00 a0       	r6 = h[r10 + 0] (u)			  ## link_layer.c:3020:36
 1e14c8c:    97 f3 86 90       	call 3088652 <local_irq_disable : 106d9c >			  ## link_layer.c:302:5
 1e14c90:    05 f6 4c d0       	r5 = [r13 + 76]			  ## link_layer.c:303:5
 1e14c94:    d7 fc 4c 00       	r7 = r13 + 76			  ## link_layer.c:303:5
 1e14c98:    75 f2 16 00       	if (r5 == r7) goto 44 <ll_thread_process+0x1AC : 1e14cc8 >			  ## link_layer.c:303:5
 1e14c9c:    30 4a             	r0 = [r5 + 12]			  ## link_layer.c:304:15
 1e14c9e:    a0 b1             	r0 = r0 - r6			  ## link_layer.c:304:26
 1e14ca0:    04 4a             	r4 = [r5 + 0]			  ## link_layer.c:304:26
 1e14ca2:    20 04             	r0 = r0.l (u)			  ## link_layer.c:305:14
 1e14ca4:    f0 8f             	r0 += -1			  ## link_layer.c:305:28
 1e14ca6:    90 f2 0c 90       	if (r0 <= r9) goto 24 <ll_thread_process+0x1A6 : 1e14cc2 >			  ## link_layer.c:305:28
 1e14caa:    00 4a             	r0 = [r5 + 0]			  ## list.h:171:36
 1e14cac:    11 4a             	r1 = [r5 + 4]			  ## list.h:171:23
 1e14cae:    19 40             	[r0 + 4] = r1			  ## list.h:159:16
 1e14cb0:    08 42             	[r1 + 0] = r0			  ## list.h:160:16
 1e14cb2:    0d 4a             	[r5 + 0] = r5			  ## list.h:172:17
 1e14cb4:    1d 4a             	[r5 + 4] = r5			  ## list.h:173:17
 1e14cb6:    21 4a             	r1 = [r5 + 8]			  ## link_layer.c:307:16
 1e14cb8:    e0 08             	r0 = r14			  ## link_layer.c:307:13
 1e14cba:    81 00             	call r1			  ## link_layer.c:307:13
 1e14cbc:    50 08             	r0 = r5			  ## link_layer.c:308:13
 1e14cbe:    bf f3 e2 61       	call -80956 <__bt_free : 1e01086 >			  ## link_layer.c:308:13
 1e14cc2:    45 08             	r5 = r4
 1e14cc4:    74 f2 ea 1f       	if (r4 != r7) goto -44 <ll_thread_process+0x180 : 1e14c9c >
 1e14cc8:    97 f3 66 90       	call 3088588 <local_irq_enable : 106d98 >			  ## link_layer.c:311:5
 1e14ccc:    00 f9 08 80       	r0 = b[r8 + 8] (u)			  ## link_layer.c:3247:19
 1e14cd0:    80 e0 0f 10       	if (r0 != 8) goto 30 <ll_thread_process+0x1D6 : 1e14cf2 >			  ## link_layer.c:3247:13
 1e14cd4:    e0 08             	r0 = r14			  ## link_layer.c:3249:13
 1e14cd6:    bf f3 e9 f7       	call -4142 <ll_delete_link : 1e13cac >			  ## link_layer.c:3249:13
 1e14cda:    e0 7f             	r0 = 254			  ## link_layer.c:3250:13
 1e14cdc:    02 70             	r2 = 0			  ## link_layer.c:3250:13
 1e14cde:    03 70             	r3 = 0			  ## link_layer.c:3250:13
 1e14ce0:    c1 ff b1 e0 e0 01 	r1 = 31514801 <update_target_end+0x1D1 : 1e0e0b1 >			  ## link_layer.c:3250:13
 1e14ce6:    bf f3 50 e2       	call -15200 <hci_send_event : 1e1118a >			  ## link_layer.c:3250:13
 1e14cea:    b8 08             	r8 = r11			  ## link_layer.c:3250:13
 1e14cec:    f8 f2 5e 1f       	if (r8 != r15) goto -324 <ll_thread_process+0x90 : 1e14bac >			  ## link_layer.c:3250:13
 1e14cf0:    4c 18             	goto 152 <ll_thread_process+0x26E : 1e14d8a >			  ## link_layer.c:3250:13
 1e14cf2:    85 fc 58 01       	r5 = r8 + 344
 1e14cf6:    10 6a             	r0 = b[r5 + 1] (u)			  ## link_layer.c:3193:15
 1e14cf8:    10 e0 28 10       	if (r0 != 1) goto 80 <ll_thread_process+0x230 : 1e14d4c >			  ## link_layer.c:3193:15
 1e14cfc:    00 f6 34 a0       	r0 = [r10 + 52]			  ## link_layer.c:457:15
 1e14d00:    20 f3 24 00       	if ((r0 & 1) != 0) goto 72 <ll_thread_process+0x230 : 1e14d4c >			  ## link_layer.c:457:15
 1e14d04:    10 b0             	r0 |= 1			  ## link_layer.c:462:29
 1e14d06:    10 f6 34 a0       	[r10 + 52] = r0			  ## link_layer.c:462:29
 1e14d0a:    00 f7 00 d0       	r0 = h[r13 + 0] (u)			  ## link_layer.c:3196:66
 1e14d0e:    c1 ff d1 0e 00 00 	r1 = 3793 <le_param+0x49 : ed1 >			  ## link_layer.c:3196:66
 1e14d14:    08 62             	b[r1 + 0] = r0			  ## link_layer.c:3196:58
 1e14d16:    00 d2             	r0 = r0 >> 8			  ## link_layer.c:3196:58
 1e14d18:    18 62             	b[r1 + 1] = r0			  ## link_layer.c:3196:58
 1e14d1a:    00 f7 1e e0       	r0 = h[r14 + 30] (u)			  ## link_layer.c:3197:74
 1e14d1e:    28 62             	b[r1 + 2] = r0			  ## link_layer.c:3197:58
 1e14d20:    02 d2             	r2 = r0 >> 8			  ## link_layer.c:3197:58
 1e14d22:    3a 62             	b[r1 + 3] = r2			  ## link_layer.c:3197:58
 1e14d24:    5a 62             	b[r1 + 5] = r2			  ## link_layer.c:3198:58
 1e14d26:    48 62             	b[r1 + 4] = r0			  ## link_layer.c:3198:58
 1e14d28:    00 f7 20 e0       	r0 = h[r14 + 32] (u)			  ## link_layer.c:3199:69
 1e14d2c:    68 62             	b[r1 + 6] = r0			  ## link_layer.c:3199:53
 1e14d2e:    00 d2             	r0 = r0 >> 8			  ## link_layer.c:3199:53
 1e14d30:    78 62             	b[r1 + 7] = r0			  ## link_layer.c:3199:53
 1e14d32:    00 f7 22 e0       	r0 = h[r14 + 34] (u)			  ## link_layer.c:3200:76
 1e14d36:    88 62             	b[r1 + 8] = r0			  ## link_layer.c:3200:60
 1e14d38:    00 d2             	r0 = r0 >> 8			  ## link_layer.c:3200:60
 1e14d3a:    98 62             	b[r1 + 9] = r0			  ## link_layer.c:3200:60
 1e14d3c:    20 70             	r0 = 2			  ## link_layer.c:3201:33
 1e14d3e:    18 6a             	b[r5 + 1] = r0			  ## link_layer.c:3201:33
 1e14d40:    e0 08             	r0 = r14			  ## link_layer.c:3202:13
 1e14d42:    c1 ff 2c 3b e1 01 	r1 = 31537964 <master_connection_update_steps : 1e13b2c >			  ## link_layer.c:3202:13
 1e14d48:    bf f3 fd fa       	call -2566 <ll_control_data_step_start : 1e14346 >			  ## link_layer.c:3202:13
 1e14d4c:    00 f6 00 e0       	r0 = [r14 + 0]			  ## link_layer.c:3262:33
 1e14d50:    c2 a0             	r2 = sp + 12			  ## link_layer.c:3262:33
 1e14d52:    31 71             	r1 = 19			  ## link_layer.c:3262:9
 1e14d54:    bf f3 c5 e8       	call -11894 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:3262:9
 1e14d58:    00 6a             	r0 = b[r5 + 0] (u)			  ## link_layer.c:3267:19
 1e14d5a:    34 02             	r4 = [sp+12]			  ## link_layer.c:3265:18
 1e14d5c:    00 e1 10 30       	if (r0 < 16) goto 32 <ll_thread_process+0x264 : 1e14d80 >
 1e14d60:    20 fd 0f 09       	r0 = r0 & 15			  ## link_layer.c:3267:19
 1e14d64:    0d 20             	if (r0 == 0) goto 26 <ll_thread_process+0x264 : 1e14d80 >			  ## link_layer.c:3267:19
 1e14d66:    08 6a             	b[r5 + 0] = r0			  ## link_layer.c:3268:39
 1e14d68:    03 f7 00 d0       	r3 = h[r13 + 0] (u)			  ## ll_events.c:693:34
 1e14d6c:    01 f7 00 a0       	r1 = h[r10 + 0] (u)			  ## ll_events.c:694:34
 1e14d70:    00 7f             	r0 = 240			  ## ll_events.c:690:9
 1e14d72:    02 70             	r2 = 0			  ## ll_events.c:690:9
 1e14d74:    09 02             	[sp] = r1			  ## ll_events.c:690:9
 1e14d76:    c1 ff ac e0 e0 01 	r1 = 31514796 <update_target_end+0x1CC : 1e0e0ac >			  ## ll_events.c:690:9
 1e14d7c:    bf f3 87 f8       	call -3826 <__hci_emit_le_meta_event : 1e13e8e >			  ## ll_events.c:690:9
 1e14d80:    20 02             	r0 = [sp+8]
 1e14d82:    50 b9             	r0 &= r4			  ## link_layer.c:3265:15
 1e14d84:    fb f2 10 1f       	if (r11 != r15) goto -480 <ll_thread_process+0x8C : 1e14ba8 >
 1e14d88:    01 18             	goto 2 <ll_thread_process+0x270 : 1e14d8c >
 1e14d8a:    20 02             	r0 = [sp+8]
 1e14d8c:    0f 20             	if (r0 == 0) goto 30 <ll_thread_process+0x290 : 1e14dac >
 1e14d8e:    c0 ff 20 2a 00 00 	r0 = 10784 <ll_hdl : 2a20 >			  ## link_layer.c:3292:47
 1e14d94:    14 40             	r4 = [r0 + 4]			  ## link_layer.c:3292:47
 1e14d96:    97 f3 01 90       	call 3088386 <local_irq_disable : 106d9c >			  ## lbuf.c:169:5
 1e14d9a:    05 48             	r5 = [r4 + 0]			  ## list.h:124:18
 1e14d9c:    97 f3 fc 8f       	call 3088376 <local_irq_enable : 106d98 >			  ## lbuf.c:171:9
 1e14da0:    45 f2 04 10       	if (r5 != r4) goto 8 <ll_thread_process+0x290 : 1e14dac >			  ## lbuf.c:171:9
 1e14da4:    01 70             	r1 = 0			  ## link_layer.c:3294:9
 1e14da6:    10 02             	r0 = [sp+4]			  ## link_layer.c:3294:9
 1e14da8:    bf f3 46 87       	call -61812 <thread_suspend : 1e05c38 >			  ## link_layer.c:3294:9
 1e14dac:    0a 0a             	sp += 20
 1e14dae:    5f 01             	{pc, r15-r4} = [sp++]			  ## link_layer.c:3296:1


__master_ll_send_phy_update_ind_callback:
 1e14db0:    00 40             	r0 = [r0 + 0]			  ## ll_multiple_phys.c:240:0
 1e14db2:    21 71             	r1 = 18			  ## ll_multiple_phys.c:243:5
 1e14db4:    12 70             	r2 = 1			  ## ll_multiple_phys.c:243:5
 1e14db6:    ff f3 94 e8       	goto -11992 <le_hw_ioctrl : 1e11ee2 >			  ## ll_multiple_phys.c:243:5


ll_get_update_handle:
 1e14dba:    c0 ff 78 0e 00 00 	r0 = 3704 <ll_update_handle : e78 >			  ## ll_slave.c:417:0
 1e14dc0:    00 50             	r0 = h[r0 + 0] (u)			  ## ll_slave.c:418:12
 1e14dc2:    20 00             	rts			  ## ll_slave.c:418:5


conn_rx_acl_u_post_handler:
 1e14dc4:    74 01             	[--sp] = {rets, r4}			  ## link_layer.c:1404:0
 1e14dc6:    a2 62             	r2 = b[r1 + 10] (u)			  ## link_layer.c:1405:13
 1e14dc8:    1e 24             	if (r2 == 0) goto 60 <conn_rx_acl_u_post_handler+0x42 : 1e14e06 >			  ## link_layer.c:1405:13
 1e14dca:    03 f9 f8 00       	r3 = b[r0 + 248] (u)			  ## link_layer.c:1409:25
 1e14dce:    0b 63             	b[r1 + 16] = r3			  ## link_layer.c:1409:17
 1e14dd0:    43 52             	r3 = h[r1 + 8] (u)			  ## link_layer.c:1412:13
 1e14dd2:    82 fd 20 43       	r4 = uextra(r3, p:4, l:2)			  ## link_layer.c:1412:9
 1e14dd6:    03 93             	r3 = r1 + 16			  ## link_layer.c:1409:5
 1e14dd8:    24 e0 04 00       	if (r4 == 2) goto 8 <conn_rx_acl_u_post_handler+0x20 : 1e14de4 >			  ## link_layer.c:1409:5
 1e14ddc:    14 e0 07 10       	if (r4 != 1) goto 14 <conn_rx_acl_u_post_handler+0x2A : 1e14dee >
 1e14de0:    04 71             	r4 = 16
 1e14de2:    01 18             	goto 2 <conn_rx_acl_u_post_handler+0x22 : 1e14de6 >
 1e14de4:    04 72             	r4 = 32
 1e14de6:    00 f9 f9 00       	r0 = b[r0 + 249] (u)
 1e14dea:    50 b8             	r0 |= r4
 1e14dec:    18 63             	b[r1 + 17] = r0
 1e14dee:    2a 63             	b[r1 + 18] = r2			  ## link_layer.c:1418:17
 1e14df0:    00 70             	r0 = 0			  ## link_layer.c:1419:17
 1e14df2:    38 63             	b[r1 + 19] = r0			  ## link_layer.c:1419:17
 1e14df4:    c0 ff 68 29 00 00 	r0 = 10600 <h4_transport : 2968 >			  ## link_layer.c:1423:5
 1e14dfa:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:1423:5
 1e14dfc:    64 40             	r4 = [r0 + 24]			  ## link_layer.c:1423:20
 1e14dfe:    42 80             	r2 += 4			  ## link_layer.c:1423:71
 1e14e00:    20 70             	r0 = 2			  ## link_layer.c:1423:5
 1e14e02:    31 08             	r1 = r3			  ## link_layer.c:1423:5
 1e14e04:    84 00             	call r4			  ## link_layer.c:1423:5
 1e14e06:    54 01             	{pc, r4} = [sp++]			  ## link_layer.c:1428:1


__instant_link_lost:
 1e14e08:    12 70             	r2 = 1			  ## link_layer.c:1350:0
 1e14e0a:    13 70             	r3 = 1			  ## link_layer.c:1357:35
 1e14e0c:    10 f2 01 00       	if (r0 == r1) goto 2 <__instant_link_lost+0xA : 1e14e12 >			  ## link_layer.c:1357:35
 1e14e10:    03 70             	r3 = 0			  ## link_layer.c:1357:35
 1e14e12:    60 b0             	r0 = r0 - r1			  ## link_layer.c:1355:19
 1e14e14:    20 04             	r0 = r0.l (u)			  ## link_layer.c:1355:19
 1e14e16:    01 fb fe 7f       	r1 = 32766 <nvbss_size+0x13BE : 7ffe >			  ## link_layer.c:1357:14
 1e14e1a:    10 f2 01 80       	if (r0 > r1) goto 2 <__instant_link_lost+0x18 : 1e14e20 >
 1e14e1e:    02 70             	r2 = 0			  ## link_layer.c:1357:14
 1e14e20:    e0 fd 20 03       	r0 = r3 | r2			  ## link_layer.c:1357:23
 1e14e24:    20 00             	rts			  ## link_layer.c:1362:1


ll_slave_cal_widening:
 1e14e26:    51 61             	r1 = b[r0 + 21] (u)			  ## link_layer.c:3788:0
 1e14e28:    09 d1             	r1 = r1 >> 4			  ## link_layer.c:3795:26
 1e14e2a:    21 fd 0e 19       	r1 = r1 & 14			  ## link_layer.c:3795:44
 1e14e2e:    c2 ff f8 3a e1 01 	r2 = 31537912 <master_sca : 1e13af8 >			  ## link_layer.c:3795:26
 1e14e34:    01 f8 00 12       	r1 = h[r1+r2] (u)			  ## link_layer.c:3795:26
 1e14e38:    52 50             	r2 = h[r0 + 10] (u)			  ## link_layer.c:3795:58
 1e14e3a:    63 50             	r3 = h[r0 + 12] (u)			  ## link_layer.c:3795:77
 1e14e3c:    11 fc f4 01       	r1 = r1 + 500			  ## link_layer.c:3795:49
 1e14e40:    51 0e             	r1 = r2 * r1			  ## link_layer.c:3795:56
 1e14e42:    12 96             	r2 = r3 + 1			  ## link_layer.c:3795:92
 1e14e44:    89 0e             	r1 = r1 * r2			  ## link_layer.c:3795:74
 1e14e46:    02 fb e2 04       	r2 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## link_layer.c:3795:56
 1e14e4a:    89 0e             	r1 = r1 * r2			  ## link_layer.c:3795:97
 1e14e4c:    c2 ff 40 42 0f 00 	r2 = 1000000 <text_size+0xDC060 : f4240 >			  ## link_layer.c:3795:114
 1e14e52:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## link_layer.c:3795:114
 1e14e56:    49 c0             	r1 = r1 << 1			  ## link_layer.c:3797:21
 1e14e58:    21 80             	r1 += 2			  ## link_layer.c:3797:21
 1e14e5a:    b9 50             	h[r0 + 22] = r1			  ## link_layer.c:3797:21
 1e14e5c:    20 00             	rts			  ## link_layer.c:3798:1


__conn_slave_rx_post_handler:
 1e14e5e:    7a 01             	[--sp] = {rets, r10-r4}			  ## ll_slave.c:751:0
 1e14e60:    fc 0b             	sp += -8			  ## ll_slave.c:751:0
 1e14e62:    05 08             	r5 = r0			  ## ll_slave.c:751:0
 1e14e64:    03 f6 98 51       	r3 = [r5 + 408]			  ## ll_slave.c:755:15
 1e14e68:    14 08             	r4 = r1			  ## ll_slave.c:755:15
 1e14e6a:    0e 26             	if (r3 == 0) goto 28 <__conn_slave_rx_post_handler+0x2A : 1e14e88 >
 1e14e6c:    a2 68             	r2 = b[r4 + 10] (u)			  ## ll_slave.c:756:48
 1e14e6e:    41 99             	r1 = r4 + 20			  ## ll_slave.c:756:38
 1e14e70:    83 00             	call r3			  ## ll_slave.c:756:9
 1e14e72:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_slave.c:757:18
 1e14e74:    82 fd 20 10       	r1 = uextra(r0, p:4, l:2)			  ## ll_slave.c:757:18
 1e14e78:    f1 8f             	r1 += -1			  ## ll_slave.c:757:45
 1e14e7a:    61 04             	r1 = r1.l (u)			  ## ll_slave.c:757:45
 1e14e7c:    11 e0 05 80       	if (r1 > 1) goto 10 <__conn_slave_rx_post_handler+0x2C : 1e14e8a >			  ## ll_slave.c:757:45
 1e14e80:    40 08             	r0 = r4			  ## ll_slave.c:758:13
 1e14e82:    bf f3 e7 60       	call -81458 <hw_dma_free : 1e01054 >			  ## ll_slave.c:758:13
 1e14e86:    cb 19             	goto 918 <.GJTIE826_0_0_+0x2D2 : 1e1521e >			  ## ll_slave.c:758:13
 1e14e88:    40 58             	r0 = h[r4 + 8] (u)
 1e14e8a:    00 d1             	r0 = r0 >> 4			  ## ll_slave.c:763:17
 1e14e8c:    60 ff 03 09 c6 01 	if ((r0 & 3) == 0) goto 908 <.GJTIE826_0_0_+0x2D2 : 1e1521e >			  ## ll_slave.c:763:17
 1e14e92:    20 fd 03 09       	r0 = r0 & 3			  ## ll_slave.c:763:5
 1e14e96:    30 e0 04 00       	if (r0 == 3) goto 8 <__conn_slave_rx_post_handler+0x44 : 1e14ea2 >			  ## ll_slave.c:763:5
 1e14e9a:    50 08             	r0 = r5			  ## ll_slave.c:769:9
 1e14e9c:    41 08             	r1 = r4			  ## ll_slave.c:769:9
 1e14e9e:    92 17             	call -220 <conn_rx_acl_u_post_handler : 1e14dc4 >			  ## ll_slave.c:769:9
 1e14ea0:    be 19             	goto 892 <.GJTIE826_0_0_+0x2D2 : 1e1521e >			  ## ll_slave.c:769:9
 1e14ea2:    43 69             	r3 = b[r4 + 20] (u)			  ## ll_slave.c:547:17
 1e14ea4:    c2 ff b2 e0 e0 01 	r2 = 31514802 <update_target_end+0x1D2 : 1e0e0b2 >			  ## ll_slave.c:547:17
 1e14eaa:    53 e4 57 80       	if (r3 > 69) goto 174 <.GJTIE826_0_0_+0x10 : 1e14f5c >			  ## ll_slave.c:547:17
 1e14eae:    57 99             	r7 = r4 + 21			  ## ll_slave.c:548:23
 1e14eb0:    58 c0             	r0 = r3 << 1
 1e14eb2:    c6 ff 88 0e 00 00 	r6 = 3720 <le_param : e88 >
 1e14eb8:    c8 ff b0 e0 e0 01 	r8 = 31514800 <update_target_end+0x1D0 : 1e0e0b0 >
 1e14ebe:    b0 00             	tbh [r0]


.GJTIL826_0_0_:
 1e14ec0:    76 00     < 118 : 0x76 >
 1e14ec2:    84 00     < 132 : 0x84 >
 1e14ec4:    96 00     < 150 : 0x96 >
 1e14ec6:    9f 00     < 159 : 0x9F >
 1e14ec8:    4b 00     < 75 : 0x4B >
 1e14eca:    4b 00     < 75 : 0x4B >
 1e14ecc:    46 00     < 70 : 0x46 >
 1e14ece:    a5 01     < 421 : 0x1A5 >
 1e14ed0:    a2 00     < 162 : 0xA2 >
 1e14ed2:    c8 00     < 200 : 0xC8 >
 1e14ed4:    46 00     < 70 : 0x46 >
 1e14ed6:    46 00     < 70 : 0x46 >
 1e14ed8:    e8 00     < 232 : 0xE8 >
 1e14eda:    4b 00     < 75 : 0x4B >
 1e14edc:    4b 00     < 75 : 0x4B >
 1e14ede:    46 00     < 70 : 0x46 >
 1e14ee0:    4b 00     < 75 : 0x4B >
 1e14ee2:    a5 01     < 421 : 0x1A5 >
 1e14ee4:    46 00     < 70 : 0x46 >
 1e14ee6:    a5 01     < 421 : 0x1A5 >
 1e14ee8:    46 00     < 70 : 0x46 >
 1e14eea:    46 00     < 70 : 0x46 >
 1e14eec:    46 00     < 70 : 0x46 >
 1e14eee:    46 00     < 70 : 0x46 >
 1e14ef0:    a5 01     < 421 : 0x1A5 >
 1e14ef2:    46 00     < 70 : 0x46 >
 1e14ef4:    46 00     < 70 : 0x46 >
 1e14ef6:    46 00     < 70 : 0x46 >
 1e14ef8:    46 00     < 70 : 0x46 >
 1e14efa:    46 00     < 70 : 0x46 >
 1e14efc:    46 00     < 70 : 0x46 >
 1e14efe:    a5 01     < 421 : 0x1A5 >
 1e14f00:    46 00     < 70 : 0x46 >
 1e14f02:    a5 01     < 421 : 0x1A5 >
 1e14f04:    46 00     < 70 : 0x46 >
 1e14f06:    46 00     < 70 : 0x46 >
 1e14f08:    46 00     < 70 : 0x46 >
 1e14f0a:    46 00     < 70 : 0x46 >
 1e14f0c:    46 00     < 70 : 0x46 >
 1e14f0e:    46 00     < 70 : 0x46 >
 1e14f10:    46 00     < 70 : 0x46 >
 1e14f12:    46 00     < 70 : 0x46 >
 1e14f14:    46 00     < 70 : 0x46 >
 1e14f16:    46 00     < 70 : 0x46 >
 1e14f18:    46 00     < 70 : 0x46 >
 1e14f1a:    46 00     < 70 : 0x46 >
 1e14f1c:    46 00     < 70 : 0x46 >
 1e14f1e:    46 00     < 70 : 0x46 >
 1e14f20:    46 00     < 70 : 0x46 >
 1e14f22:    46 00     < 70 : 0x46 >
 1e14f24:    46 00     < 70 : 0x46 >
 1e14f26:    46 00     < 70 : 0x46 >
 1e14f28:    46 00     < 70 : 0x46 >
 1e14f2a:    46 00     < 70 : 0x46 >
 1e14f2c:    46 00     < 70 : 0x46 >
 1e14f2e:    46 00     < 70 : 0x46 >
 1e14f30:    46 00     < 70 : 0x46 >
 1e14f32:    46 00     < 70 : 0x46 >
 1e14f34:    46 00     < 70 : 0x46 >
 1e14f36:    46 00     < 70 : 0x46 >
 1e14f38:    46 00     < 70 : 0x46 >
 1e14f3a:    46 00     < 70 : 0x46 >
 1e14f3c:    46 00     < 70 : 0x46 >
 1e14f3e:    46 00     < 70 : 0x46 >
 1e14f40:    06 01     < 262 : 0x106 >
 1e14f42:    46 00     < 70 : 0x46 >
 1e14f44:    46 00     < 70 : 0x46 >
 1e14f46:    46 00     < 70 : 0x46 >
 1e14f48:    46 00     < 70 : 0x46 >
 1e14f4a:    20 01     < 288 : 0x120 >
 1e14f4c:    71 70             	r1 = 7
 1e14f4e:    50 08             	r0 = r5
 1e14f50:    bf f3 4f f7       	call -4450 <ll_send_control_data : 1e13df2 >
 1e14f54:    5a 19             	goto 692 <.GJTIE826_0_0_+0x2BE : 1e1520a >
 1e14f56:    8f f3 d3 71       	call 2024358 <p33_soft_reset : 3300 >
 1e14f5a:    57 19             	goto 686 <.GJTIE826_0_0_+0x2BE : 1e1520a >
 1e14f5c:    93 e4 f6 1f       	if (r3 != 73) goto -20 <.GJTIE826_0_0_ : 1e14f4c >
 1e14f60:    bf f3 42 df       	call -16764 <get_bt_osc_offset_flag : 1e10de8 >			  ## ll_slave.c:523:9
 1e14f64:    00 e0 51 11       	if (r0 != 0) goto 674 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## ll_slave.c:523:9
 1e14f68:    80 69             	r0 = b[r4 + 24] (u)			  ## ll_slave.c:522:24
 1e14f6a:    71 69             	r1 = b[r4 + 23] (u)			  ## ll_slave.c:522:46
 1e14f6c:    62 69             	r2 = b[r4 + 22] (u)			  ## ll_slave.c:522:68
 1e14f6e:    53 69             	r3 = b[r4 + 21] (u)			  ## ll_slave.c:522:88
 1e14f70:    00 c6             	r0 = r0 << 24			  ## ll_slave.c:522:36
 1e14f72:    c8 fd 80 01       	r0 <= insert(r1, p:16, l:8)			  ## ll_slave.c:522:43
 1e14f76:    c8 fd 40 02       	r0 <= insert(r2, p:8, l:8)			  ## ll_slave.c:522:65
 1e14f7a:    50 b6             	r0 |= r3			  ## ll_slave.c:522:86
 1e14f7c:    bf f3 40 df       	call -16768 <bt_osc_offset_set : 1e10e00 >			  ## ll_slave.c:529:5
 1e14f80:    90 69             	r0 = b[r4 + 25] (u)			  ## ll_slave.c:531:9
 1e14f82:    0b 20             	if (r0 == 0) goto 22 <.GJTIE826_0_0_+0x4E : 1e14f9a >			  ## ll_slave.c:531:9
 1e14f84:    bf f3 45 df       	call -16758 <bt_osc_offset_save : 1e10e12 >			  ## ll_slave.c:533:9
 1e14f88:    bf f3 5f df       	call -16706 <bt_fre_offset_get : 1e10e4a >			  ## ll_slave.c:534:63
 1e14f8c:    02 08             	r2 = r0			  ## ll_slave.c:534:63
 1e14f8e:    c1 ff b6 e0 e0 01 	r1 = 31514806 <update_target_end+0x1D6 : 1e0e0b6 >			  ## ll_slave.c:534:9
 1e14f94:    60 7f             	r0 = 246			  ## ll_slave.c:534:9
 1e14f96:    bf f3 f8 e0       	call -15888 <hci_send_event : 1e1118a >			  ## ll_slave.c:534:9
 1e14f9a:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:538:30
 1e14f9c:    bf f3 9f ee       	call -8898 <ble_pll_comp_reset : 1e12cde >			  ## ll_slave.c:538:5
 1e14fa0:    01 75             	r1 = 80			  ## ll_slave.c:539:5
 1e14fa2:    02 70             	r2 = 0			  ## ll_slave.c:539:5
 1e14fa4:    50 08             	r0 = r5			  ## ll_slave.c:539:5
 1e14fa6:    bf f3 24 f7       	call -4536 <ll_send_control_data : 1e13df2 >			  ## ll_slave.c:539:5
 1e14faa:    2f 19             	goto 606 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## ll_slave.c:539:5
 1e14fac:    91 70             	r1 = 9			  ## ll_slave.c:51:19
 1e14fae:    70 08             	r0 = r7			  ## ll_slave.c:51:19
 1e14fb0:    bf f3 cc 85       	call -62568 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:51:19
 1e14fb4:    71 58             	r1 = h[r4 + 14] (u)			  ## ll_slave.c:54:9
 1e14fb6:    06 08             	r6 = r0			  ## ll_slave.c:51:19
 1e14fb8:    27 17             	call -434 <__instant_link_lost : 1e14e08 >			  ## ll_slave.c:54:9
 1e14fba:    10 e0 b8 10       	if (r0 != 1) goto 368 <.GJTIE826_0_0_+0x1E2 : 1e1512e >			  ## ll_slave.c:54:9
 1e14fbe:    81 72             	r1 = 40			  ## ll_slave.c:56:9
 1e14fc0:    50 08             	r0 = r5			  ## ll_slave.c:56:9
 1e14fc2:    bf f3 2a f8       	call -4012 <ll_disconnect_process : 1e1401a >			  ## ll_slave.c:56:9
 1e14fc6:    21 19             	goto 578 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## ll_slave.c:56:9
 1e14fc8:    50 fc 24 00       	r0 = r5 + 36			  ## ll_slave.c:114:5
 1e14fcc:    52 70             	r2 = 5			  ## ll_slave.c:114:5
 1e14fce:    71 08             	r1 = r7			  ## ll_slave.c:114:5
 1e14fd0:    97 f3 88 8f       	call 3088144 <memcpy : 106ee4 >			  ## ll_slave.c:114:5
 1e14fd4:    51 70             	r1 = 5			  ## ll_slave.c:116:19
 1e14fd6:    70 08             	r0 = r7			  ## ll_slave.c:116:19
 1e14fd8:    bf f3 b8 85       	call -62608 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:116:19
 1e14fdc:    71 58             	r1 = h[r4 + 14] (u)			  ## ll_slave.c:118:9
 1e14fde:    06 08             	r6 = r0			  ## ll_slave.c:116:19
 1e14fe0:    13 17             	call -474 <__instant_link_lost : 1e14e08 >			  ## ll_slave.c:118:9
 1e14fe2:    10 e0 04 11       	if (r0 != 1) goto 520 <.GJTIE826_0_0_+0x2A2 : 1e151ee >			  ## ll_slave.c:118:9
 1e14fe6:    50 08             	r0 = r5			  ## ll_slave.c:122:9
 1e14fe8:    7e 14             	call -1796 <__channel_map_upadte : 1e148e6 >			  ## ll_slave.c:122:9
 1e14fea:    0f 19             	goto 542 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## ll_slave.c:122:9
 1e14fec:    02 f7 90 50       	r2 = h[r5 + 144] (u)			  ## ll_slave.c:143:66
 1e14ff0:    50 69             	r0 = b[r4 + 21] (u)			  ## ll_slave.c:142:20
 1e14ff2:    10 f9 89 51       	b[r5 + 393] = r0			  ## ll_slave.c:142:18
 1e14ff6:    c1 ff 2a 52 e1 01 	r1 = 31543850 <__slave_receive_terminte_ind_done : 1e1522a >			  ## ll_slave.c:143:5
 1e14ffc:    03 19             	goto 518 <.GJTIE826_0_0_+0x2B8 : 1e15204 >			  ## ll_slave.c:143:5
 1e14ffe:    d1 70             	r1 = 13			  ## ll_slave.c:240:5
 1e15000:    a3 71             	r3 = 26			  ## ll_slave.c:240:5
 1e15002:    a5 1f             	goto -182 <.GJTIE826_0_0_+0x2 : 1e14f4e >			  ## ll_slave.c:240:5
 1e15004:    0a f9 02 70       	r10 = b[r7 + 2] (u)			  ## ll_slave.c:170:5
 1e15008:    61 6e             	r1 = b[r7 + 6] (u)			  ## ll_slave.c:170:5
 1e1500a:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_slave.c:170:5
 1e1500c:    08 f9 01 70       	r8 = b[r7 + 1] (u)			  ## ll_slave.c:170:5
 1e15010:    73 6e             	r3 = b[r7 + 7] (u)			  ## ll_slave.c:170:5
 1e15012:    09 f9 05 70       	r9 = b[r7 + 5] (u)			  ## ll_slave.c:170:5
 1e15016:    40 6e             	r0 = b[r7 + 4] (u)			  ## ll_slave.c:170:5
 1e15018:    37 6e             	r7 = b[r7 + 3] (u)			  ## ll_slave.c:170:5
 1e1501a:    cb 6d             	b[r6 + 28] = r3			  ## ll_slave.c:170:5
 1e1501c:    19 f9 1a 60       	b[r6 + 26] = r9			  ## ll_slave.c:170:5
 1e15020:    98 6d             	b[r6 + 25] = r0			  ## ll_slave.c:170:5
 1e15022:    8f 6d             	b[r6 + 24] = r7			  ## ll_slave.c:170:5
 1e15024:    18 f9 16 60       	b[r6 + 22] = r8			  ## ll_slave.c:170:5
 1e15028:    5a 6d             	b[r6 + 21] = r2			  ## ll_slave.c:170:5
 1e1502a:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## ll_slave.c:170:5
 1e1502e:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:170:5
 1e15032:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:170:5
 1e15034:    b8 6d             	b[r6 + 27] = r0			  ## ll_slave.c:170:5
 1e15036:    c8 fd 40 a7       	r10 <= insert(r7, p:8, l:8)			  ## ll_slave.c:170:5
 1e1503a:    d0 fd 80 2a       	r2 <= insert(r10, p:16, l:16)			  ## ll_slave.c:170:5
 1e1503e:    10 d4             	r0 = r2 >> 16			  ## ll_slave.c:170:5
 1e15040:    78 6d             	b[r6 + 23] = r0			  ## ll_slave.c:170:5
 1e15042:    63 fc 22 00       	r3 = r6 + 34			  ## ll_slave.c:175:5
 1e15046:    c2 ff b9 e0 e0 01 	r2 = 31514809 <update_target_end+0x1D9 : 1e0e0b9 >			  ## ll_slave.c:175:5
 1e1504c:    91 70             	r1 = 9			  ## ll_slave.c:175:5
 1e1504e:    7f 1f             	goto -258 <.GJTIE826_0_0_+0x2 : 1e14f4e >			  ## ll_slave.c:175:5
 1e15050:    0a f9 02 70       	r10 = b[r7 + 2] (u)			  ## ll_slave.c:180:5
 1e15054:    61 6e             	r1 = b[r7 + 6] (u)			  ## ll_slave.c:180:5
 1e15056:    52 69             	r2 = b[r4 + 21] (u)			  ## ll_slave.c:180:5
 1e15058:    08 f9 01 70       	r8 = b[r7 + 1] (u)			  ## ll_slave.c:180:5
 1e1505c:    73 6e             	r3 = b[r7 + 7] (u)			  ## ll_slave.c:180:5
 1e1505e:    09 f9 05 70       	r9 = b[r7 + 5] (u)			  ## ll_slave.c:180:5
 1e15062:    40 6e             	r0 = b[r7 + 4] (u)			  ## ll_slave.c:180:5
 1e15064:    37 6e             	r7 = b[r7 + 3] (u)			  ## ll_slave.c:180:5
 1e15066:    cb 6d             	b[r6 + 28] = r3			  ## ll_slave.c:180:5
 1e15068:    19 f9 1a 60       	b[r6 + 26] = r9			  ## ll_slave.c:180:5
 1e1506c:    98 6d             	b[r6 + 25] = r0			  ## ll_slave.c:180:5
 1e1506e:    8f 6d             	b[r6 + 24] = r7			  ## ll_slave.c:180:5
 1e15070:    18 f9 16 60       	b[r6 + 22] = r8			  ## ll_slave.c:180:5
 1e15074:    5a 6d             	b[r6 + 21] = r2			  ## ll_slave.c:180:5
 1e15076:    c8 fd 40 13       	r1 <= insert(r3, p:8, l:8)			  ## ll_slave.c:180:5
 1e1507a:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## ll_slave.c:180:5
 1e1507e:    00 d4             	r0 = r0 >> 16			  ## ll_slave.c:180:5
 1e15080:    b8 6d             	b[r6 + 27] = r0			  ## ll_slave.c:180:5
 1e15082:    c8 fd 40 a7       	r10 <= insert(r7, p:8, l:8)			  ## ll_slave.c:180:5
 1e15086:    d0 fd 80 2a       	r2 <= insert(r10, p:16, l:16)			  ## ll_slave.c:180:5
 1e1508a:    10 d4             	r0 = r2 >> 16			  ## ll_slave.c:180:5
 1e1508c:    78 6d             	b[r6 + 23] = r0			  ## ll_slave.c:180:5
 1e1508e:    bd 18             	goto 378 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## ll_slave.c:180:5
 1e15090:    50 69             	r0 = b[r4 + 21] (u)			  ## ll_slave.c:308:30
 1e15092:    d8 6d             	b[r6 + 29] = r0			  ## ll_slave.c:308:28
 1e15094:    11 70             	r1 = 1			  ## ll_slave.c:309:30
 1e15096:    70 08             	r0 = r7			  ## ll_slave.c:309:30
 1e15098:    bf f3 58 85       	call -62800 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:309:30
 1e1509c:    f8 5c             	h[r6 + 30] = r0			  ## ll_slave.c:309:28
 1e1509e:    31 70             	r1 = 3			  ## ll_slave.c:310:33
 1e150a0:    70 08             	r0 = r7			  ## ll_slave.c:310:33
 1e150a2:    bf f3 53 85       	call -62810 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:310:33
 1e150a6:    08 5d             	h[r6 + 32] = r0			  ## ll_slave.c:310:31
 1e150a8:    00 f9 c0 50       	r0 = b[r5 + 192] (u)			  ## link_layer.c:677:39
 1e150ac:    c0 c0             	r0 = r0 << 3			  ## link_layer.c:679:12
 1e150ae:    50 09             	r0 += r5			  ## link_layer.c:679:12
 1e150b0:    00 f6 98 00       	r0 = [r0 + 152]			  ## link_layer.c:679:12
 1e150b4:    aa 30             	if (r0 != 0) goto 340 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## link_layer.c:679:12
 1e150b6:    03 f9 32 60       	r3 = b[r6 + 50] (u)			  ## ll_slave.c:314:37
 1e150ba:    a0 5d             	r0 = h[r6 + 52] (u)			  ## ll_slave.c:314:54
 1e150bc:    b1 5d             	r1 = h[r6 + 54] (u)			  ## ll_slave.c:314:71
 1e150be:    19 02             	[sp+4] = r1			  ## ll_slave.c:313:9
 1e150c0:    c2 ff a8 e0 e0 01 	r2 = 31514792 <update_target_end+0x1C8 : 1e0e0a8 >			  ## ll_slave.c:313:9
 1e150c6:    c1 70             	r1 = 12			  ## ll_slave.c:313:9
 1e150c8:    08 02             	[sp] = r0			  ## ll_slave.c:313:9
 1e150ca:    41 1f             	goto -382 <.GJTIE826_0_0_+0x2 : 1e14f4e >			  ## ll_slave.c:313:9
 1e150cc:    bf f3 8c de       	call -17128 <get_bt_osc_offset_flag : 1e10de8 >			  ## ll_slave.c:500:9
 1e150d0:    07 08             	r7 = r0			  ## ll_slave.c:500:9
 1e150d2:    bf f3 fa cf       	call -24588 <bt_fre_offset_value_init : 1e0f0ca >			  ## ll_slave.c:505:5
 1e150d6:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:506:30
 1e150d8:    bf f3 01 ee       	call -9214 <ble_pll_comp_reset : 1e12cde >			  ## ll_slave.c:506:5
 1e150dc:    c1 ff b1 e0 e0 01 	r1 = 31514801 <update_target_end+0x1D1 : 1e0e0b1 >			  ## ll_slave.c:508:5
 1e150e2:    e0 7f             	r0 = 254			  ## ll_slave.c:508:5
 1e150e4:    22 70             	r2 = 2			  ## ll_slave.c:508:5
 1e150e6:    13 70             	r3 = 1			  ## ll_slave.c:508:5
 1e150e8:    bf f3 4f e0       	call -16226 <hci_send_event : 1e1118a >			  ## ll_slave.c:508:5
 1e150ec:    f0 70             	r0 = 15			  ## ll_slave.c:510:5
 1e150ee:    18 02             	[sp+4] = r0			  ## ll_slave.c:510:5
 1e150f0:    03 70             	r3 = 0			  ## ll_slave.c:510:5
 1e150f2:    01 2e             	if (r7 == 0) goto 2 <.GJTIE826_0_0_+0x1AA : 1e150f6 >
 1e150f4:    f3 7f             	r3 = 255
 1e150f6:    11 74             	r1 = 65			  ## ll_slave.c:510:5
 1e150f8:    0b 02             	[sp] = r3			  ## ll_slave.c:510:5
 1e150fa:    50 08             	r0 = r5			  ## ll_slave.c:510:5
 1e150fc:    82 08             	r2 = r8			  ## ll_slave.c:510:5
 1e150fe:    28 1f             	goto -432 <.GJTIE826_0_0_+0x4 : 1e14f50 >			  ## ll_slave.c:510:5
 1e15100:    00 f7 f8 50       	r0 = h[r5 + 248] (u)			  ## ll_slave.c:482:32
 1e15104:    c1 ff 78 0e 00 00 	r1 = 3704 <ll_update_handle : e78 >			  ## ll_slave.c:423:22
 1e1510a:    08 52             	h[r1 + 0] = r0			  ## ll_slave.c:423:22
 1e1510c:    00 70             	r0 = 0			  ## ll_slave.c:423:22
 1e1510e:    18 02             	[sp+4] = r0			  ## ll_slave.c:483:5
 1e15110:    10 70             	r0 = 1			  ## ll_slave.c:483:5
 1e15112:    81 74             	r1 = 72			  ## ll_slave.c:483:5
 1e15114:    f3 70             	r3 = 15			  ## ll_slave.c:483:5
 1e15116:    08 02             	[sp] = r0			  ## ll_slave.c:483:5
 1e15118:    50 08             	r0 = r5			  ## ll_slave.c:483:5
 1e1511a:    82 08             	r2 = r8			  ## ll_slave.c:483:5
 1e1511c:    bf f3 69 f6       	call -4910 <ll_send_control_data : 1e13df2 >			  ## ll_slave.c:483:5
 1e15120:    c0 ff 0b 00 40 00 	r0 = 4194315 <uECC_vli_cmp_unsafe+0x2F900F : 40000b >			  ## ll_slave.c:484:5
 1e15126:    01 70             	r1 = 0			  ## ll_slave.c:484:5
 1e15128:    bf f3 38 df       	call -16784 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## ll_slave.c:484:5
 1e1512c:    6e 18             	goto 220 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## ll_slave.c:484:5
 1e1512e:    50 69             	r0 = b[r4 + 21] (u)			  ## ll_slave.c:63:29
 1e15130:    09 f7 1e 50       	r9 = h[r5 + 30] (u)			  ## ll_slave.c:76:69
 1e15134:    b8 6b             	b[r5 + 27] = r0			  ## ll_slave.c:63:27
 1e15136:    11 70             	r1 = 1			  ## ll_slave.c:64:29
 1e15138:    70 08             	r0 = r7			  ## ll_slave.c:64:29
 1e1513a:    bf f3 07 85       	call -62962 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:64:29
 1e1513e:    08 08             	r8 = r0			  ## ll_slave.c:64:29
 1e15140:    e8 5a             	h[r5 + 28] = r0			  ## ll_slave.c:64:27
 1e15142:    31 70             	r1 = 3			  ## ll_slave.c:65:29
 1e15144:    70 08             	r0 = r7			  ## ll_slave.c:65:29
 1e15146:    bf f3 01 85       	call -62974 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:65:29
 1e1514a:    f8 5a             	h[r5 + 30] = r0			  ## ll_slave.c:65:27
 1e1514c:    51 70             	r1 = 5			  ## ll_slave.c:66:29
 1e1514e:    70 08             	r0 = r7			  ## ll_slave.c:66:29
 1e15150:    bf f3 fc 84       	call -62984 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:66:29
 1e15154:    08 5b             	h[r5 + 32] = r0			  ## ll_slave.c:66:27
 1e15156:    71 70             	r1 = 7			  ## ll_slave.c:67:29
 1e15158:    70 08             	r0 = r7			  ## ll_slave.c:67:29
 1e1515a:    bf f3 f7 84       	call -62994 <btctler_little_endian_read_16 : 1e05b4c >			  ## ll_slave.c:67:29
 1e1515e:    18 5b             	h[r5 + 34] = r0			  ## ll_slave.c:67:27
 1e15160:    0a f7 2a 50       	r10 = h[r5 + 42] (u)			  ## ll_slave.c:75:36
 1e15164:    07 f9 29 50       	r7 = b[r5 + 41] (u)			  ## ll_slave.c:76:54
 1e15168:    40 9b             	r0 = r5 + 20			  ## ll_slave.c:60:48
 1e1516a:    5d 16             	call -838 <ll_slave_cal_widening : 1e14e26 >			  ## ll_slave.c:79:5
 1e1516c:    38 d1             	r0 = r7 >> 4			  ## ll_slave.c:76:31
 1e1516e:    20 fd 0e 09       	r0 = r0 & 14			  ## ll_slave.c:76:54
 1e15172:    c1 ff f8 3a e1 01 	r1 = 31537912 <master_sca : 1e13af8 >			  ## ll_slave.c:76:31
 1e15178:    00 f8 00 01       	r0 = h[r0+r1] (u)			  ## ll_slave.c:76:31
 1e1517c:    01 fb e2 04       	r1 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## ll_slave.c:76:66
 1e15180:    c2 ff 68 89 09 00 	r2 = 625000 <text_size+0x80788 : 98968 >			  ## ll_slave.c:76:66
 1e15186:    80 fe 10 20       	r2 += r0 * r1			  ## ll_slave.c:76:66
 1e1518a:    80 fb 90 08       	r0 = r8 + r9			  ## ll_slave.c:76:82
 1e1518e:    10 0e             	r0 = r2 * r0			  ## ll_slave.c:76:107
 1e15190:    52 5b             	r2 = h[r5 + 42] (u)			  ## ll_slave.c:82:66
 1e15192:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xDC060 : f4240 >			  ## ll_slave.c:76:124
 1e15198:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## ll_slave.c:76:124
 1e1519c:    41 c0             	r1 = r0 << 1			  ## ll_slave.c:77:22
 1e1519e:    20 92             	r0 = r1 + 2			  ## ll_slave.c:77:22
 1e151a0:    03 ff dd 25 03 00 	if (r2 < 1501) goto 6 <.GJTIE826_0_0_+0x260 : 1e151ac >			  ## ll_slave.c:77:22
 1e151a6:    02 fb dc 05       	r2 = 1500 <BTCTLER_CONTROLLER_DATA_SIZE+0x11E : 5dc >			  ## ll_slave.c:83:30
 1e151aa:    5a 5b             	h[r5 + 42] = r2			  ## ll_slave.c:83:30
 1e151ac:    02 70             	r2 = 0
 1e151ae:    0a f2 07 90       	if (r10 <= r0) goto 14 <.GJTIE826_0_0_+0x274 : 1e151c0 >
 1e151b2:    c2 ff fe ff 00 00 	r2 = 65534 <_IRQ_MEM_ADDR+0xFE : fffe >
 1e151b8:    a2 09             	r2 += r10
 1e151ba:    61 b4             	r1 = r2 - r1			  ## ll_slave.c:87:52
 1e151bc:    40 c0             	r0 = r0 << 1			  ## ll_slave.c:88:42
 1e151be:    02 b2             	r2 = r1 + r0			  ## ll_slave.c:88:37
 1e151c0:    6a 5b             	h[r5 + 44] = r2			  ## ll_slave.c:90:37
 1e151c2:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:92:29
 1e151c4:    41 70             	r1 = 4			  ## ll_slave.c:92:5
 1e151c6:    03 70             	r3 = 0			  ## ll_slave.c:92:5
 1e151c8:    62 08             	r2 = r6			  ## ll_slave.c:92:5
 1e151ca:    bf f3 8a e6       	call -13036 <le_hw_ioctrl : 1e11ee2 >			  ## ll_slave.c:92:5
 1e151ce:    62 fc ff ff       	r2 = r6 + -1			  ## ll_slave.c:94:60
 1e151d2:    c1 ff a0 48 e1 01 	r1 = 31541408 <__connection_upadte : 1e148a0 >			  ## ll_slave.c:94:5
 1e151d8:    50 08             	r0 = r5			  ## ll_slave.c:94:5
 1e151da:    bf f3 cb f6       	call -4714 <__event_oneshot_add : 1e13f74 >			  ## ll_slave.c:94:5
 1e151de:    c1 ff 22 52 e1 01 	r1 = 31543842 <__slave_ll_receive_conn_update_req_done : 1e15222 >			  ## ll_slave.c:96:5
 1e151e4:    50 08             	r0 = r5			  ## ll_slave.c:96:5
 1e151e6:    62 08             	r2 = r6			  ## ll_slave.c:96:5
 1e151e8:    bf f3 e0 f6       	call -4672 <__event_oneshot_post_add : 1e13fac >			  ## ll_slave.c:96:5
 1e151ec:    0e 18             	goto 28 <.GJTIE826_0_0_+0x2BE : 1e1520a >			  ## ll_slave.c:96:5
 1e151ee:    00 4a             	r0 = [r5 + 0]			  ## ll_slave.c:128:29
 1e151f0:    41 70             	r1 = 4			  ## ll_slave.c:128:5
 1e151f2:    13 70             	r3 = 1			  ## ll_slave.c:128:5
 1e151f4:    62 08             	r2 = r6			  ## ll_slave.c:128:5
 1e151f6:    bf f3 74 e6       	call -13080 <le_hw_ioctrl : 1e11ee2 >			  ## ll_slave.c:128:5
 1e151fa:    62 fc ff ff       	r2 = r6 + -1			  ## ll_slave.c:130:61
 1e151fe:    c1 ff e6 48 e1 01 	r1 = 31541478 <__channel_map_upadte : 1e148e6 >			  ## ll_slave.c:130:5
 1e15204:    50 08             	r0 = r5
 1e15206:    bf f3 b5 f6       	call -4758 <__event_oneshot_add : 1e13f74 >
 1e1520a:    40 69             	r0 = b[r4 + 20] (u)			  ## ll_slave.c:739:29
 1e1520c:    10 b7             	r0 |= 16384			  ## ll_slave.c:739:41
 1e1520e:    51 08             	r1 = r5			  ## ll_slave.c:739:5
 1e15210:    42 08             	r2 = r4			  ## ll_slave.c:739:5
 1e15212:    bf f3 c0 f7       	call -4224 <ll_control_step_verify : 1e14196 >			  ## ll_slave.c:739:5
 1e15216:    50 08             	r0 = r5			  ## ll_slave.c:742:5
 1e15218:    41 08             	r1 = r4			  ## ll_slave.c:742:5
 1e1521a:    bf f3 08 f8       	call -4080 <ll_send_control_data_state_machine : 1e1422e >			  ## ll_slave.c:742:5
 1e1521e:    04 0a             	sp += 8
 1e15220:    5a 01             	{pc, r10-r4} = [sp++]			  ## ll_slave.c:777:1


__slave_ll_receive_conn_update_req_done:
 1e15222:    01 70             	r1 = 0			  ## ll_slave.c:41:0
 1e15224:    02 70             	r2 = 0			  ## ll_slave.c:42:5
 1e15226:    ff f3 7d f6       	goto -4870 <le_connection_update_complete_event : 1e13f24 >			  ## ll_slave.c:42:5


__slave_receive_terminte_ind_done:
 1e1522a:    01 f9 89 01       	r1 = b[r0 + 393] (u)			  ## ll_slave.c:134:0
 1e1522e:    ff f3 f4 f6       	goto -4632 <ll_disconnect_process : 1e1401a >			  ## ll_slave.c:135:5


le_connection_complete_event:
 1e15232:    79 01             	[--sp] = {rets, r9-r4}			  ## ll_events.c:166:0
 1e15234:    e0 0b             	sp += -64			  ## ll_events.c:166:0
 1e15236:    18 08             	r8 = r1			  ## ll_events.c:166:0
 1e15238:    c1 ff 94 e0 e0 01 	r1 = 31514772 <update_target_end+0x1B4 : 1e0e094 >			  ## ll_events.c:166:0
 1e1523e:    15 20             	if (r0 == 0) goto 42 <le_connection_complete_event+0x38 : 1e1526a >			  ## ll_events.c:167:9
 1e15240:    03 f7 f8 00       	r3 = h[r0 + 248] (u)			  ## ll_events.c:172:34
 1e15244:    09 f9 3d 00       	r9 = b[r0 + 61] (u)			  ## ll_events.c:173:34
 1e15248:    b5 60             	r5 = b[r0 + 11] (u)			  ## ll_events.c:174:34
 1e1524a:    f6 50             	r6 = h[r0 + 30] (u)			  ## ll_events.c:176:34
 1e1524c:    07 51             	r7 = h[r0 + 32] (u)			  ## ll_events.c:177:34
 1e1524e:    12 51             	r2 = h[r0 + 34] (u)			  ## ll_events.c:178:34
 1e15250:    04 f9 3e 00       	r4 = b[r0 + 62] (u)			  ## ll_events.c:179:34
 1e15254:    6c 02             	[sp+24] = r4			  ## ll_events.c:169:9
 1e15256:    5a 02             	[sp+20] = r2			  ## ll_events.c:169:9
 1e15258:    4f 02             	[sp+16] = r7			  ## ll_events.c:169:9
 1e1525a:    3e 02             	[sp+12] = r6			  ## ll_events.c:169:9
 1e1525c:    c0 80             	r0 += 12			  ## ll_events.c:175:34
 1e1525e:    28 02             	[sp+8] = r0			  ## ll_events.c:169:9
 1e15260:    1d 02             	[sp+4] = r5			  ## ll_events.c:169:9
 1e15262:    10 70             	r0 = 1			  ## ll_events.c:169:9
 1e15264:    19 f5 00 00       	[sp] = r9			  ## ll_events.c:169:9
 1e15268:    0e 18             	goto 28 <le_connection_complete_event+0x54 : 1e15286 >			  ## ll_events.c:169:9
 1e1526a:    02 70             	r2 = 0
 1e1526c:    92 f5 20 00       	h[sp+32] = r2			  ## ll_events.c:182:9
 1e15270:    7a 02             	[sp+28] = r2			  ## ll_events.c:182:9
 1e15272:    6a 02             	[sp+24] = r2			  ## ll_events.c:183:9
 1e15274:    5a 02             	[sp+20] = r2			  ## ll_events.c:183:9
 1e15276:    4a 02             	[sp+16] = r2			  ## ll_events.c:183:9
 1e15278:    3a 02             	[sp+12] = r2			  ## ll_events.c:183:9
 1e1527a:    c0 a1             	r0 = sp + 28			  ## ll_events.c:183:9
 1e1527c:    28 02             	[sp+8] = r0			  ## ll_events.c:183:9
 1e1527e:    1a 02             	[sp+4] = r2			  ## ll_events.c:183:9
 1e15280:    10 70             	r0 = 1			  ## ll_events.c:183:9
 1e15282:    03 70             	r3 = 0			  ## ll_events.c:183:9
 1e15284:    0a 02             	[sp] = r2			  ## ll_events.c:183:9
 1e15286:    82 08             	r2 = r8
 1e15288:    bf f3 01 f6       	call -5118 <__hci_emit_le_meta_event : 1e13e8e >
 1e1528c:    20 0a             	sp += 64
 1e1528e:    59 01             	{pc, r9-r4} = [sp++]			  ## ll_events.c:197:1


__adv_rx_post_handler:
 1e15290:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_adv.c:539:0
 1e15292:    14 08             	r4 = r1			  ## ll_adv.c:539:0
 1e15294:    41 58             	r1 = h[r4 + 8] (u)			  ## ll_adv.c:540:17
 1e15296:    21 fd 0f 19       	r1 = r1 & 15			  ## ll_adv.c:540:5
 1e1529a:    05 08             	r5 = r0			  ## ll_adv.c:540:5
 1e1529c:    51 e0 8a 10       	if (r1 != 5) goto 276 <__adv_rx_post_handler+0x124 : 1e153b4 >
 1e152a0:    c0 ff 7c 0e 00 00 	r0 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:522:36
 1e152a6:    00 40             	r0 = [r0 + 0]			  ## ll_adv.c:522:36
 1e152a8:    10 40             	r0 = [r0 + 4]			  ## ll_adv.c:522:44
 1e152aa:    06 70             	r6 = 0
 1e152ac:    0e 40             	[r0 + 0] = r6			  ## ll_adv.c:525:18
 1e152ae:    bf f3 4f f4       	call -5986 <ll_adv_close : 1e13b50 >			  ## ll_adv.c:527:5
 1e152b2:    50 fc 40 00       	r0 = r5 + 64			  ## link_layer.c:923:45
 1e152b6:    97 f3 b1 8d       	call 3087202 <os_mutex_create : 106e1c >			  ## link_layer.c:923:22
 1e152ba:    c7 ff 20 2a 00 00 	r7 = 10784 <ll_hdl : 2a20 >			  ## link_layer.c:923:22
 1e152c0:    00 5f             	r0 = h[r7 + 32] (u)
 1e152c2:    11 70             	r1 = 1
 1e152c4:    f8 fd 60 21       	r2 = r1 << r6			  ## link_layer.c:845:31
 1e152c8:    20 f0 06 00       	if ((r0 & r2) == 0) goto 12 <__adv_rx_post_handler+0x48 : 1e152d8 >			  ## link_layer.c:845:31
 1e152cc:    16 80             	r6 += 1			  ## link_layer.c:844:26
 1e152ce:    06 e1 f9 3f       	if (r6 < 16) goto -14 <__adv_rx_post_handler+0x34 : 1e152c4 >			  ## link_layer.c:844:26
 1e152d2:    8f f3 15 70       	call 2023466 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e152d6:    02 18             	goto 4 <__adv_rx_post_handler+0x4C : 1e152dc >			  ## cpu.h:148:5
 1e152d8:    50 b4             	r0 |= r2			  ## link_layer.c:846:28
 1e152da:    08 5f             	h[r7 + 32] = r0			  ## link_layer.c:846:28
 1e152dc:    00 fd 50 69       	r0 = r6 | 80			  ## link_layer.c:852:15
 1e152e0:    58 fc f8 00       	r8 = r5 + 248			  ## link_layer.c:852:15
 1e152e4:    10 f7 00 80       	h[r8 + 0] = r0			  ## link_layer.c:927:18
 1e152e8:    c0 ff 80 0e 00 00 	r0 = 3712 <le_data_length.6 : e80 >			  ## link_layer.c:927:18
 1e152ee:    01 60             	r1 = b[r0 + 0] (u)			  ## link_layer.c:927:18
 1e152f0:    b0 7f             	r0 = 251			  ## link_layer.c:927:18
 1e152f2:    b2 7f             	r2 = 251			  ## link_layer.c:927:18
 1e152f4:    01 32             	if (r1 != 0) goto 2 <__adv_rx_post_handler+0x68 : 1e152f8 >			  ## link_layer.c:927:18
 1e152f6:    02 70             	r2 = 0
 1e152f8:    56 fc 6c 01       	r6 = r5 + 364
 1e152fc:    0a 5c             	h[r6 + 0] = r2			  ## ll_data_extension.c:146:35
 1e152fe:    18 5c             	h[r6 + 2] = r0			  ## ll_data_extension.c:148:35
 1e15300:    c0 ff 84 0e 00 00 	r0 = 3716 <le_data_length.7 : e84 >			  ## ll_data_extension.c:148:35
 1e15306:    03 60             	r3 = b[r0 + 0] (u)			  ## ll_data_extension.c:148:35
 1e15308:    00 fb 48 08       	r0 = 2120 <trans_gatt_control_block+0x8 : 848 >			  ## ll_data_extension.c:148:35
 1e1530c:    01 08             	r1 = r0			  ## ll_data_extension.c:148:35
 1e1530e:    01 36             	if (r3 != 0) goto 2 <__adv_rx_post_handler+0x82 : 1e15312 >			  ## ll_data_extension.c:148:35
 1e15310:    01 70             	r1 = 0
 1e15312:    69 5c             	h[r6 + 12] = r1			  ## ll_data_extension.c:150:33
 1e15314:    78 5c             	h[r6 + 14] = r0			  ## ll_data_extension.c:152:33
 1e15316:    b0 71             	r0 = 27			  ## ll_data_extension.c:155:41
 1e15318:    28 5c             	h[r6 + 4] = r0			  ## ll_data_extension.c:155:41
 1e1531a:    38 5c             	h[r6 + 6] = r0			  ## ll_data_extension.c:156:41
 1e1531c:    00 fb 48 01       	r0 = 328 <DRIVER_RAM_TOTAL+0x56 : 148 >			  ## ll_data_extension.c:159:39
 1e15320:    88 5c             	h[r6 + 16] = r0			  ## ll_data_extension.c:159:39
 1e15322:    98 5c             	h[r6 + 18] = r0			  ## ll_data_extension.c:160:39
 1e15324:    b2 e1 01 30       	if (r2 < 27) goto 2 <__adv_rx_post_handler+0x9A : 1e1532a >			  ## ll_data_extension.c:160:39
 1e15328:    b2 71             	r2 = 27			  ## ll_data_extension.c:72:46
 1e1532a:    4a 5c             	h[r6 + 8] = r2			  ## ll_data_extension.c:72:44
 1e1532c:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:73:29
 1e1532e:    f1 70             	r1 = 15			  ## ll_data_extension.c:73:5
 1e15330:    bf f3 d7 e5       	call -13394 <le_hw_ioctrl : 1e11ee2 >			  ## ll_data_extension.c:73:5
 1e15334:    20 5c             	r0 = h[r6 + 4] (u)			  ## ll_data_extension.c:75:46
 1e15336:    12 5c             	r2 = h[r6 + 2] (u)			  ## ll_data_extension.c:75:46
 1e15338:    02 f2 01 30       	if (r2 < r0) goto 2 <__adv_rx_post_handler+0xAE : 1e1533e >			  ## ll_data_extension.c:75:46
 1e1533c:    02 08             	r2 = r0			  ## ll_data_extension.c:75:46
 1e1533e:    5a 5c             	h[r6 + 10] = r2			  ## ll_data_extension.c:75:44
 1e15340:    00 4a             	r0 = [r5 + 0]			  ## ll_data_extension.c:76:29
 1e15342:    01 71             	r1 = 16			  ## ll_data_extension.c:76:5
 1e15344:    bf f3 cd e5       	call -13414 <le_hw_ioctrl : 1e11ee2 >			  ## ll_data_extension.c:76:5
 1e15348:    91 5c             	r1 = h[r6 + 18] (u)			  ## ll_data_extension.c:78:44
 1e1534a:    60 5c             	r0 = h[r6 + 12] (u)			  ## ll_data_extension.c:78:44
 1e1534c:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xC2 : 1e15352 >			  ## ll_data_extension.c:78:44
 1e15350:    10 08             	r0 = r1			  ## ll_data_extension.c:78:44
 1e15352:    a8 5c             	h[r6 + 20] = r0			  ## ll_data_extension.c:78:42
 1e15354:    81 5c             	r1 = h[r6 + 16] (u)			  ## ll_data_extension.c:80:44
 1e15356:    70 5c             	r0 = h[r6 + 14] (u)			  ## ll_data_extension.c:80:44
 1e15358:    10 f2 01 30       	if (r0 < r1) goto 2 <__adv_rx_post_handler+0xCE : 1e1535e >			  ## ll_data_extension.c:80:44
 1e1535c:    10 08             	r0 = r1			  ## ll_data_extension.c:80:44
 1e1535e:    b8 5c             	h[r6 + 22] = r0			  ## ll_data_extension.c:80:42
 1e15360:    00 f9 22 70       	r0 = b[r7 + 34] (u)			  ## link_layer.c:931:19
 1e15364:    10 80             	r0 += 1			  ## link_layer.c:931:19
 1e15366:    10 f9 22 70       	b[r7 + 34] = r0			  ## link_layer.c:931:19
 1e1536a:    a0 4e             	r0 = [r7 + 40]			  ## list.h:154:28
 1e1536c:    51 fc 34 00       	r1 = r5 + 52			  ## link_layer.c:935:26
 1e15370:    a9 4e             	[r7 + 40] = r1			  ## list.h:137:16
 1e15372:    72 fc 24 00       	r2 = r7 + 36			  ## list.h:154:28
 1e15376:    da 4a             	[r5 + 52] = r2			  ## list.h:138:16
 1e15378:    e8 4a             	[r5 + 56] = r0			  ## list.h:139:16
 1e1537a:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e1537c:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_slave.c:711:17
 1e1537e:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_slave.c:711:5
 1e15382:    30 e0 15 00       	if (r0 == 3) goto 42 <__adv_rx_post_handler+0x120 : 1e153b0 >			  ## ll_slave.c:711:5
 1e15386:    10 5b             	r0 = h[r5 + 34] (u)			  ## ll_slave.c:723:40
 1e15388:    00 fe 0a 09       	r0 = r0 * 10			  ## ll_slave.c:723:62
 1e1538c:    c1 ff dc 4a e1 01 	r1 = 31541980 <ll_conn_supervision_timer_handler : 1e14adc >			  ## link_layer.c:1312:33
 1e15392:    bf f3 24 84       	call -63416 <sys_timer_register : 1e05bde >			  ## link_layer.c:1312:33
 1e15396:    10 f6 58 80       	[r8 + 88] = r0			  ## link_layer.c:1312:31
 1e1539a:    04 30             	if (r0 != 0) goto 8 <__adv_rx_post_handler+0x114 : 1e153a4 >			  ## link_layer.c:1312:31
 1e1539c:    8f f3 b0 6f       	call 2023264 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e153a0:    00 f6 58 80       	r0 = [r8 + 88]			  ## cpu.h:148:5
 1e153a4:    51 08             	r1 = r5			  ## link_layer.c:1316:5
 1e153a6:    bf f3 1e 84       	call -63428 <sys_timer_set_context : 1e05be6 >			  ## link_layer.c:1316:5
 1e153aa:    01 70             	r1 = 0			  ## ll_events.c:208:9
 1e153ac:    50 08             	r0 = r5			  ## ll_events.c:208:9
 1e153ae:    41 17             	call -382 <le_connection_complete_event : 1e15232 >			  ## ll_events.c:208:9
 1e153b0:    c0 68             	r0 = b[r4 + 12] (u)			  ## ll_adv.c:534:22
 1e153b2:    c8 6d             	b[r6 + 28] = r0			  ## ll_adv.c:534:16
 1e153b4:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_adv.c:552:1


ll_adv_timeout_handler:
 1e153b6:    34 00             	[--sp] = rets			  ## ll_adv.c:99:0
 1e153b8:    05 20             	if (r0 == 0) goto 10 <ll_adv_timeout_handler+0xE : 1e153c4 >			  ## ll_adv.c:99:0
 1e153ba:    bf f3 c9 f3       	call -6254 <ll_adv_close : 1e13b50 >			  ## ll_adv.c:109:5
 1e153be:    00 70             	r0 = 0			  ## ll_adv.c:111:5
 1e153c0:    c1 73             	r1 = 60			  ## ll_adv.c:111:5
 1e153c2:    37 17             	call -402 <le_connection_complete_event : 1e15232 >			  ## ll_adv.c:111:5
 1e153c4:    30 00             	pc = [sp++]			  ## ll_adv.c:114:1


ll_white_list_match:
 1e153c6:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_white_list.c:66:0
 1e153c8:    c2 ff 88 0e 00 00 	r2 = 3720 <le_param : e88 >			  ## ll_white_list.c:66:0
 1e153ce:    07 f6 98 20       	r7 = [r2 + 152]			  ## ll_white_list.c:66:0
 1e153d2:    15 08             	r5 = r1			  ## ll_white_list.c:66:0
 1e153d4:    06 08             	r6 = r0			  ## ll_white_list.c:66:0
 1e153d6:    24 fc 98 00       	r4 = r2 + 152			  ## ll_white_list.c:66:0
 1e153da:    08 70             	r8 = 0			  ## ll_white_list.c:66:0
 1e153dc:    47 f2 11 00       	if (r7 == r4) goto 34 <ll_white_list_match+0x3C : 1e15402 >			  ## ll_white_list.c:66:0
 1e153e0:    71 fc f9 ff       	r1 = r7 + -7			  ## ll_white_list.c:76:48
 1e153e4:    62 70             	r2 = 6			  ## ll_white_list.c:76:15
 1e153e6:    50 08             	r0 = r5			  ## ll_white_list.c:76:15
 1e153e8:    97 f3 80 8d       	call 3087104 <memcmp : 106eec >			  ## ll_white_list.c:76:15
 1e153ec:    05 30             	if (r0 != 0) goto 10 <ll_white_list_match+0x32 : 1e153f8 >			  ## ll_white_list.c:76:15
 1e153ee:    70 fc f8 ff       	r0 = r7 + -8
 1e153f2:    01 60             	r1 = b[r0 + 0] (u)			  ## ll_white_list.c:77:37
 1e153f4:    61 f2 04 00       	if (r1 == r6) goto 8 <ll_white_list_match+0x3A : 1e15400 >			  ## ll_white_list.c:77:37
 1e153f8:    07 4e             	r7 = [r7 + 0]
 1e153fa:    47 f2 f1 1f       	if (r7 != r4) goto -30 <ll_white_list_match+0x1A : 1e153e0 >
 1e153fe:    01 18             	goto 2 <ll_white_list_match+0x3C : 1e15402 >
 1e15400:    08 08             	r8 = r0
 1e15402:    80 08             	r0 = r8			  ## ll_white_list.c:85:1
 1e15404:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_white_list.c:85:1


le_ll_adv_addr_process:
 1e15406:    76 01             	[--sp] = {rets, r6-r4}			  ## ll_adv.c:333:0
 1e15408:    04 08             	r4 = r0			  ## ll_adv.c:333:0
 1e1540a:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:333:0
 1e1540c:    20 fd 0f 09       	r0 = r0 & 15			  ## ll_adv.c:333:0
 1e15410:    30 e0 04 00       	if (r0 == 3) goto 8 <le_ll_adv_addr_process+0x16 : 1e1541c >			  ## ll_adv.c:333:0
 1e15414:    50 e0 02 00       	if (r0 == 5) goto 4 <le_ll_adv_addr_process+0x16 : 1e1541c >			  ## ll_adv.c:333:0
 1e15418:    8f f3 72 6f       	call 2023140 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1541c:    c0 ff 54 2c 00 00 	r0 = 11348 <adv_param : 2c54 >			  ## ll_adv.c:252:19
 1e15422:    e6 60             	r6 = b[r0 + 14] (u)			  ## ll_adv.c:252:19
 1e15424:    c5 ff 50 2c 00 00 	r5 = 11344 <ll_error_code : 2c50 >			  ## ll_adv.c:252:19
 1e1542a:    00 70             	r0 = 0			  ## ll_adv.c:252:19
 1e1542c:    08 6a             	b[r5 + 0] = r0			  ## ll_adv.c:252:19
 1e1542e:    00 f3 0c 60       	if ((r6 & 1) == 0) goto 24 <le_ll_adv_addr_process+0x44 : 1e1544a >			  ## ll_adv.c:252:19
 1e15432:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:253:17
 1e15434:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:253:17
 1e15438:    31 e0 07 10       	if (r1 != 3) goto 14 <le_ll_adv_addr_process+0x44 : 1e1544a >			  ## ll_adv.c:253:17
 1e1543c:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:267:32
 1e15440:    41 99             	r1 = r4 + 20			  ## ll_adv.c:268:63
 1e15442:    c1 17             	call -126 <ll_white_list_match : 1e153c6 >			  ## ll_adv.c:267:32
 1e15444:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x44 : 1e1544a >
 1e15446:    10 70             	r0 = 1
 1e15448:    08 6a             	b[r5 + 0] = r0
 1e1544a:    01 f3 0c 60       	if ((r6 & 2) == 0) goto 24 <le_ll_adv_addr_process+0x60 : 1e15466 >
 1e1544e:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:279:17
 1e15450:    21 fd 0f 09       	r1 = r0 & 15			  ## ll_adv.c:279:17
 1e15454:    51 e0 07 10       	if (r1 != 5) goto 14 <le_ll_adv_addr_process+0x60 : 1e15466 >			  ## ll_adv.c:279:17
 1e15458:    81 fd 38 00       	r0 = uextra(r0, p:7, l:1)			  ## ll_adv.c:293:32
 1e1545c:    41 99             	r1 = r4 + 20			  ## ll_adv.c:294:63
 1e1545e:    b3 17             	call -154 <ll_white_list_match : 1e153c6 >			  ## ll_adv.c:293:32
 1e15460:    02 30             	if (r0 != 0) goto 4 <le_ll_adv_addr_process+0x60 : 1e15466 >
 1e15462:    10 70             	r0 = 1
 1e15464:    08 6a             	b[r5 + 0] = r0
 1e15466:    56 01             	{pc, r6-r4} = [sp++]			  ## ll_adv.c:342:1


ll_thread_resume:
 1e15468:    c0 ff 28 2a 00 00 	r0 = 10792 <ll_hdl+0x8 : 2a28 >			  ## link_layer.c:3080:0
 1e1546e:    ff f3 89 83       	goto -63726 <thread_resume : 1e05b84 >			  ## link_layer.c:3081:5


adv_rx_probe_handler:
 1e15472:    7a 01             	[--sp] = {rets, r10-r4}			  ## ll_adv.c:496:0
 1e15474:    14 08             	r4 = r1			  ## ll_adv.c:496:0
 1e15476:    47 58             	r7 = h[r4 + 8] (u)			  ## ll_adv.c:501:17
 1e15478:    0a 08             	r10 = r0			  ## ll_adv.c:501:17
 1e1547a:    20 fd 0f 79       	r0 = r7 & 15			  ## ll_adv.c:501:5
 1e1547e:    c8 ff 50 2c 00 00 	r8 = 11344 <ll_error_code : 2c50 >			  ## ll_adv.c:501:5
 1e15484:    50 e0 08 00       	if (r0 == 5) goto 16 <adv_rx_probe_handler+0x26 : 1e15498 >			  ## ll_adv.c:501:5
 1e15488:    30 e0 76 10       	if (r0 != 3) goto 236 <adv_rx_probe_handler+0x106 : 1e15578 >
 1e1548c:    40 08             	r0 = r4			  ## ll_adv.c:461:5
 1e1548e:    bb 17             	call -138 <le_ll_adv_addr_process : 1e15406 >			  ## ll_adv.c:461:5
 1e15490:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## ll_adv.c:461:5
 1e15494:    6a 20             	if (r0 == 0) goto 212 <adv_rx_probe_handler+0xF8 : 1e1556a >			  ## ll_adv.c:461:5
 1e15496:    70 18             	goto 224 <adv_rx_probe_handler+0x106 : 1e15578 >			  ## ll_adv.c:461:5
 1e15498:    05 f6 00 a0       	r5 = [r10 + 0]			  ## ll_adv.c:478:45
 1e1549c:    00 fb a0 01       	r0 = 416 <DRIVER_RAM_TOTAL+0xAE : 1a0 >			  ## link_layer.c:876:12
 1e154a0:    bf f3 95 83       	call -63702 <__bt_malloc : 1e05bce >			  ## link_layer.c:876:12
 1e154a4:    06 08             	r6 = r0			  ## link_layer.c:876:12
 1e154a6:    0d 4c             	[r6 + 0] = r5			  ## link_layer.c:883:14
 1e154a8:    a1 fc 04 00       	r1 = r10 + 4			  ## ll_adv.c:478:60
 1e154ac:    40 9c             	r0 = r6 + 4			  ## link_layer.c:884:19
 1e154ae:    72 70             	r2 = 7			  ## link_layer.c:884:5
 1e154b0:    97 f3 18 8d       	call 3086896 <memcpy : 106ee4 >			  ## link_layer.c:884:5
 1e154b4:    81 fd 38 07       	r0 = uextra(r7, p:7, l:1)			  ## ll_adv.c:478:82
 1e154b8:    b8 6c             	b[r6 + 11] = r0			  ## link_layer.c:886:26
 1e154ba:    41 99             	r1 = r4 + 20			  ## ll_adv.c:478:89
 1e154bc:    c0 9c             	r0 = r6 + 12			  ## link_layer.c:887:23
 1e154be:    62 70             	r2 = 6			  ## link_layer.c:887:5
 1e154c0:    69 70             	r9 = 6			  ## link_layer.c:887:5
 1e154c2:    97 f3 0f 8d       	call 3086878 <memcpy : 106ee4 >			  ## link_layer.c:887:5
 1e154c6:    10 70             	r0 = 1			  ## link_layer.c:887:5
 1e154c8:    10 f9 3d 60       	b[r6 + 61] = r0			  ## link_layer.c:889:20
 1e154cc:    41 fc 20 00       	r1 = r4 + 32			  ## ll_adv.c:478:108
 1e154d0:    47 9d             	r7 = r6 + 20			  ## ll_adv.c:478:108
 1e154d2:    62 71             	r2 = 22			  ## link_layer.c:3818:5
 1e154d4:    70 08             	r0 = r7			  ## link_layer.c:3818:5
 1e154d6:    97 f3 05 8d       	call 3086858 <memcpy : 106ee4 >			  ## link_layer.c:3818:5
 1e154da:    70 08             	r0 = r7			  ## link_layer.c:3822:5
 1e154dc:    a4 14             	call -1720 <ll_slave_cal_widening : 1e14e26 >			  ## link_layer.c:3822:5
 1e154de:    00 4c             	r0 = [r6 + 0]			  ## link_layer.c:3822:5
 1e154e0:    61 70             	r1 = 6			  ## link_layer.c:899:5
 1e154e2:    72 08             	r2 = r7			  ## link_layer.c:899:5
 1e154e4:    bf f3 fd e4       	call -13830 <le_hw_ioctrl : 1e11ee2 >			  ## link_layer.c:899:5
 1e154e8:    60 fc 04 01       	r0 = r6 + 260			  ## link_layer.c:899:5
 1e154ec:    01 fc 30 00       	r1 = r0 + 48			  ## link_layer.c:904:27
 1e154f0:    c9 40             	[r0 + 48] = r1			  ## list.h:188:16
 1e154f2:    d9 40             	[r0 + 52] = r1			  ## list.h:189:16
 1e154f4:    01 fc 38 00       	r1 = r0 + 56			  ## link_layer.c:905:27
 1e154f8:    e9 40             	[r0 + 56] = r1			  ## list.h:188:16
 1e154fa:    f9 40             	[r0 + 60] = r1			  ## list.h:189:16
 1e154fc:    08 40             	[r0 + 0] = r0			  ## list.h:188:16
 1e154fe:    18 40             	[r0 + 4] = r0			  ## list.h:189:16
 1e15500:    01 fc 40 00       	r1 = r0 + 64			  ## link_layer.c:907:27
 1e15504:    09 41             	[r0 + 64] = r1			  ## list.h:188:16
 1e15506:    19 41             	[r0 + 68] = r1			  ## list.h:189:16
 1e15508:    19 f9 3c 60       	b[r6 + 60] = r9			  ## link_layer.c:909:20
 1e1550c:    00 4c             	r0 = [r6 + 0]			  ## link_layer.c:911:39
 1e1550e:    00 40             	r0 = [r0 + 0]			  ## link_layer.c:911:39
 1e15510:    c2 ff 08 3b e1 01 	r2 = 31537928 <conn_handler : 1e13b08 >			  ## link_layer.c:911:5
 1e15516:    61 08             	r1 = r6			  ## link_layer.c:911:5
 1e15518:    bf f3 c2 e8       	call -11900 <le_hw_handler_register : 1e126a0 >			  ## link_layer.c:911:5
 1e1551c:    c1 ff 2e 49 e1 01 	r1 = 31541550 <ll_conn_fast_supervision_timer_handler : 1e1492e >			  ## link_layer.c:916:5
 1e15522:    62 70             	r2 = 6			  ## link_layer.c:916:5
 1e15524:    60 08             	r0 = r6			  ## link_layer.c:916:5
 1e15526:    bf f3 41 f5       	call -5502 <__event_oneshot_post_add : 1e13fac >			  ## link_layer.c:916:5
 1e1552a:    40 08             	r0 = r4			  ## ll_adv.c:482:5
 1e1552c:    6c 17             	call -296 <le_ll_adv_addr_process : 1e15406 >			  ## ll_adv.c:482:5
 1e1552e:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## ll_adv.c:482:5
 1e15532:    1b 20             	if (r0 == 0) goto 54 <adv_rx_probe_handler+0xF8 : 1e1556a >			  ## ll_adv.c:482:5
 1e15534:    60 08             	r0 = r6			  ## ll_adv.c:486:9
 1e15536:    bf f3 3f f3       	call -6530 <ll_close_conn_link : 1e13bb8 >			  ## ll_adv.c:486:9
 1e1553a:    c6 ff 7c 0e 00 00 	r6 = 3708 <adv_hdl : e7c >			  ## ll_adv.c:486:9
 1e15540:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:674:36
 1e15542:    15 40             	r5 = [r0 + 4]			  ## ll_adv.c:674:44
 1e15544:    bf f3 01 e8       	call -12286 <le_hw_open : 1e1254a >			  ## ll_adv.c:676:20
 1e15548:    08 4a             	[r5 + 0] = r0			  ## ll_adv.c:676:18
 1e1554a:    16 20             	if (r0 == 0) goto 44 <adv_rx_probe_handler+0x106 : 1e15578 >			  ## ll_adv.c:676:18
 1e1554c:    00 40             	r0 = [r0 + 0]
 1e1554e:    c2 ff 38 3b e1 01 	r2 = 31537976 <adv_handler : 1e13b38 >			  ## ll_adv.c:683:5
 1e15554:    51 08             	r1 = r5			  ## ll_adv.c:683:5
 1e15556:    bf f3 a3 e8       	call -11962 <le_hw_handler_register : 1e126a0 >			  ## ll_adv.c:683:5
 1e1555a:    50 08             	r0 = r5			  ## ll_adv.c:689:18
 1e1555c:    bf f3 5f f8       	call -3906 <__set_ll_adv_state : 1e1461e >			  ## ll_adv.c:689:18
 1e15560:    0b 30             	if (r0 != 0) goto 22 <adv_rx_probe_handler+0x106 : 1e15578 >
 1e15562:    00 4c             	r0 = [r6 + 0]			  ## ll_adv.c:696:5
 1e15564:    11 70             	r1 = 1			  ## ll_adv.c:696:20
 1e15566:    09 60             	b[r0 + 0] = r1			  ## ll_adv.c:696:20
 1e15568:    07 18             	goto 14 <adv_rx_probe_handler+0x106 : 1e15578 >			  ## ll_adv.c:696:20
 1e1556a:    00 f6 00 a0       	r0 = [r10 + 0]
 1e1556e:    e1 70             	r1 = 14
 1e15570:    03 70             	r3 = 0
 1e15572:    42 08             	r2 = r4
 1e15574:    bf f3 b5 e4       	call -13974 <le_hw_ioctrl : 1e11ee2 >
 1e15578:    40 58             	r0 = h[r4 + 8] (u)			  ## ll_adv.c:513:9
 1e1557a:    20 fd 30 09       	r0 = r0 & 48			  ## ll_adv.c:513:9
 1e1557e:    00 e1 02 10       	if (r0 != 16) goto 4 <adv_rx_probe_handler+0x114 : 1e15586 >			  ## ll_adv.c:513:9
 1e15582:    a0 68             	r0 = b[r4 + 10] (u)			  ## ll_adv.c:513:9
 1e15584:    01 20             	if (r0 == 0) goto 2 <adv_rx_probe_handler+0x116 : 1e15588 >			  ## ll_adv.c:513:9
 1e15586:    70 17             	call -288 <ll_thread_resume : 1e15468 >			  ## ll_adv.c:516:9
 1e15588:    5a 01             	{pc, r10-r4} = [sp++]			  ## ll_adv.c:518:1


__conn_master_rx_post_handler:
 1e1558a:    34 00             	[--sp] = rets			  ## ll_master.c:567:0
 1e1558c:    42 52             	r2 = h[r1 + 8] (u)			  ## ll_master.c:570:17
 1e1558e:    92 c6             	r2 = r2 << 26			  ## ll_master.c:570:5
 1e15590:    22 fd c0 2c       	r2 = r2 & 3221225472			  ## ll_master.c:570:17
 1e15594:    42 fb c0 2c       	r2 = r2 + 3221225472			  ## ll_master.c:570:5
 1e15598:    92 df             	r2 = r2 >>> 30			  ## ll_master.c:570:5
 1e1559a:    02 e0 01 b0       	ifs (r2 < 0) goto 2 <__conn_master_rx_post_handler+0x16 : 1e155a0 >			  ## ll_master.c:570:5
 1e1559e:    12 14             	call -2012 <conn_rx_acl_u_post_handler : 1e14dc4 >			  ## ll_master.c:576:9
 1e155a0:    30 00             	pc = [sp++]			  ## ll_master.c:584:1


ll_update_send_data_handle:
 1e155a2:    78 01             	[--sp] = {rets, r8-r4}			  ## ll_slave.c:427:0
 1e155a4:    fa 0b             	sp += -12			  ## ll_slave.c:427:0
 1e155a6:    c4 ff 78 0e 00 00 	r4 = 3704 <ll_update_handle : e78 >			  ## ll_slave.c:418:12
 1e155ac:    04 58             	r4 = h[r4 + 0] (u)			  ## ll_slave.c:418:12
 1e155ae:    37 08             	r7 = r3
 1e155b0:    26 08             	r6 = r2
 1e155b2:    15 08             	r5 = r1
 1e155b4:    08 08             	r8 = r0
 1e155b6:    40 08             	r0 = r4			  ## ll_slave.c:431:28
 1e155b8:    bf f3 03 f4       	call -6138 <ll_link_for_handle : 1e13dc2 >			  ## ll_slave.c:431:28
 1e155bc:    0c 20             	if (r0 == 0) goto 24 <ll_update_send_data_handle+0x34 : 1e155d6 >
 1e155be:    2f 02             	[sp+8] = r7			  ## ll_slave.c:412:5
 1e155c0:    1e 02             	[sp+4] = r6			  ## ll_slave.c:412:5
 1e155c2:    c2 ff 59 e0 e0 01 	r2 = 31514713 <update_target_end+0x179 : 1e0e059 >			  ## ll_slave.c:412:5
 1e155c8:    61 74             	r1 = 70			  ## ll_slave.c:412:5
 1e155ca:    0d 02             	[sp] = r5			  ## ll_slave.c:412:5
 1e155cc:    83 08             	r3 = r8			  ## ll_slave.c:412:5
 1e155ce:    bf f3 10 f4       	call -6112 <ll_send_control_data : 1e13df2 >			  ## ll_slave.c:412:5
 1e155d2:    00 70             	r0 = 0
 1e155d4:    01 18             	goto 2 <ll_update_send_data_handle+0x36 : 1e155d8 >
 1e155d6:    f0 07             	r0 = -1
 1e155d8:    06 0a             	sp += 12
 1e155da:    58 01             	{pc, r8-r4} = [sp++]			  ## ll_slave.c:439:1


unregister_ll_update_handle:
 1e155dc:    34 00             	[--sp] = rets			  ## ll_slave.c:451:0
 1e155de:    c0 ff 78 0e 00 00 	r0 = 3704 <ll_update_handle : e78 >			  ## ll_slave.c:452:47
 1e155e4:    00 50             	r0 = h[r0 + 0] (u)			  ## ll_slave.c:452:47
 1e155e6:    bf f3 ec f3       	call -6184 <ll_link_for_handle : 1e13dc2 >			  ## ll_slave.c:452:28
 1e155ea:    05 20             	if (r0 == 0) goto 10 <unregister_ll_update_handle+0x1A : 1e155f6 >
 1e155ec:    01 70             	r1 = 0
 1e155ee:    11 f6 98 01       	[r0 + 408] = r1			  ## ll_slave.c:454:32
 1e155f2:    11 f6 9c 01       	[r0 + 412] = r1			  ## ll_slave.c:455:32
 1e155f6:    30 00             	pc = [sp++]			  ## ll_slave.c:457:1


register_ll_update_handle:
 1e155f8:    74 01             	[--sp] = {rets, r4}			  ## ll_slave.c:460:0
 1e155fa:    c1 ff 78 0e 00 00 	r1 = 3704 <ll_update_handle : e78 >			  ## ll_slave.c:461:47
 1e15600:    01 52             	r1 = h[r1 + 0] (u)			  ## ll_slave.c:461:47
 1e15602:    04 08             	r4 = r0			  ## ll_slave.c:461:47
 1e15604:    10 08             	r0 = r1			  ## ll_slave.c:461:28
 1e15606:    bf f3 dc f3       	call -6216 <ll_link_for_handle : 1e13dc2 >			  ## ll_slave.c:461:28
 1e1560a:    07 20             	if (r0 == 0) goto 14 <register_ll_update_handle+0x22 : 1e1561a >
 1e1560c:    c1 ff 3a 7a e1 01 	r1 = 31554106 <ble_updata_handle : 1e17a3a >			  ## ll_slave.c:463:32
 1e15612:    11 f6 98 01       	[r0 + 408] = r1			  ## ll_slave.c:463:32
 1e15616:    14 f6 9c 01       	[r0 + 412] = r4			  ## ll_slave.c:464:32
 1e1561a:    54 01             	{pc, r4} = [sp++]			  ## ll_slave.c:466:1


create_param_default:
 1e1561c:    0b 00             	ssync
 1e1561e:    0b 00             	ssync
 1e15620:    00 00             	nop
 1e15622:    00 00             	nop
 1e15624:    00 00             	nop
 1e15626:    00 00             	nop
 1e15628:    00 06             	r0 = -32
 1e1562a:    00 20             	if (r0 == 0) goto 0 <create_param_default+0x10 : 1e1562c >
 1e1562c:    00 00             	nop
 1e1562e:    00 80             	r0 += 0
 1e15630:    01 01             	{r3-r1} = [sp++]
 1e15632:    00 01             	{r3-r0} = [sp++]
 1e15634:    00 00             	nop


le_controller_set_mac:
 1e15636:    01 08             	r1 = r0			  ## hci_ll_cmds.c:602:0
 1e15638:    c0 ff 90 0e 00 00 	r0 = 3728 <le_param+0x8 : e90 >			  ## hci_ll_cmds.c:606:5
 1e1563e:    62 70             	r2 = 6			  ## hci_ll_cmds.c:606:5
 1e15640:    d7 f3 50 8c       	goto 3086496 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:606:5


le_controller_get_mac:
 1e15644:    c1 ff 90 0e 00 00 	r1 = 3728 <le_param+0x8 : e90 >			  ## hci_ll_cmds.c:611:0
 1e1564a:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e1564c:    d7 f3 4a 8c       	goto 3086484 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5


ll_hci_destory:
 1e15650:    ff f3 52 f3       	goto -6492 <ll_destroy : 1e13cf8 >			  ## hci_ll.c:64:0


ll_hci_set_event_mask:
 1e15654:    c0 ff 88 0e 00 00 	r0 = 3720 <le_param : e88 >			  ## hci_ll.c:78:0
 1e1565a:    c1 ff 07 f8 bf 3d 	r1 = 1035991047 <uECC_vli_cmp_unsafe+0x1AF880B : 1bff807 >			  ## hci_ll.c:79:5
 1e15660:    19 40             	[r0 + 4] = r1			  ## hci_ll.c:79:5
 1e15662:    c1 ff ff ff fb ff 	r1 = 4294705151 <bank_code_load_addr+0x1A5753 : 1fbffff >			  ## hci_ll.c:79:5
 1e15668:    09 40             	[r0 + 0] = r1			  ## hci_ll.c:79:5
 1e1566a:    20 00             	rts			  ## hci_ll.c:80:1


ll_hci_get_acl_data_len:
 1e1566c:    c0 ff 88 0e 00 00 	r0 = 3720 <le_param : e88 >			  ## hci_ll.c:152:0
 1e15672:    00 f7 42 00       	r0 = h[r0 + 66] (u)			  ## hci_ll.c:153:5
 1e15676:    20 00             	rts			  ## hci_ll.c:153:5


ll_hci_get_acl_total_num:
 1e15678:    c0 ff 88 0e 00 00 	r0 = 3720 <le_param : e88 >			  ## hci_ll.c:157:0
 1e1567e:    00 f9 40 00       	r0 = b[r0 + 64] (u)			  ## hci_ll.c:158:21
 1e15682:    20 00             	rts			  ## hci_ll.c:158:5


hci_ll_get_device_address:
 1e15684:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:753:0
 1e15686:    c2 ff 34 0f 00 00 	r2 = 3892 <config_hci_ll_param.0 : f34 >			  ## hci_ll.c:756:29
 1e1568c:    02 64             	r2 = b[r2 + 0] (u)			  ## hci_ll.c:756:29
 1e1568e:    04 08             	r4 = r0			  ## hci_ll.c:756:29
 1e15690:    20 fd 01 29       	r0 = r2 & 1
 1e15694:    90 b0             	r0 |= 2			  ## hci_ll.c:756:51
 1e15696:    c3 ff 90 0e 00 00 	r3 = 3728 <le_param+0x8 : e90 >			  ## hci_ll.c:756:51
 1e1569c:    20 e0 07 10       	if (r0 != 2) goto 14 <hci_ll_get_device_address+0x2A : 1e156ae >			  ## hci_ll.c:756:51
 1e156a0:    62 70             	r2 = 6			  ## hci_ll_cmds.c:612:5
 1e156a2:    10 08             	r0 = r1			  ## hci_ll_cmds.c:612:5
 1e156a4:    31 08             	r1 = r3			  ## hci_ll_cmds.c:612:5
 1e156a6:    97 f3 1d 8c       	call 3086394 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:612:5
 1e156aa:    00 70             	r0 = 0			  ## hci_ll_cmds.c:612:5
 1e156ac:    07 18             	goto 14 <hci_ll_get_device_address+0x38 : 1e156bc >			  ## hci_ll_cmds.c:612:5
 1e156ae:    63 80             	r3 += 6			  ## hci_ll_cmds.c:627:5
 1e156b0:    62 70             	r2 = 6			  ## hci_ll_cmds.c:627:5
 1e156b2:    10 08             	r0 = r1			  ## hci_ll_cmds.c:627:5
 1e156b4:    31 08             	r1 = r3			  ## hci_ll_cmds.c:627:5
 1e156b6:    97 f3 15 8c       	call 3086378 <memcpy : 106ee4 >			  ## hci_ll_cmds.c:627:5
 1e156ba:    10 70             	r0 = 1			  ## hci_ll_cmds.c:627:5
 1e156bc:    08 68             	b[r4 + 0] = r0			  ## hci_ll.c:758:20
 1e156be:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:763:1


ll_hci_connection_update:
 1e156c0:    76 01             	[--sp] = {rets, r6-r4}			  ## hci_ll.c:327:0
 1e156c2:    f4 0b             	sp += -24			  ## hci_ll.c:327:0
 1e156c4:    14 08             	r4 = r1			  ## hci_ll.c:327:0
 1e156c6:    05 08             	r5 = r0			  ## hci_ll.c:327:0
 1e156c8:    c0 02             	r0 = [sp+48]			  ## hci_ll.c:327:0
 1e156ca:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:327:0
 1e156cc:    a6 02             	r6 = [sp+40]			  ## hci_ll.c:327:0
 1e156ce:    58 02             	[sp+20] = r0			  ## hci_ll.c:329:5
 1e156d0:    49 02             	[sp+16] = r1			  ## hci_ll.c:329:5
 1e156d2:    3e 02             	[sp+12] = r6			  ## hci_ll.c:329:5
 1e156d4:    2b 02             	[sp+8] = r3			  ## hci_ll.c:329:5
 1e156d6:    1a 02             	[sp+4] = r2			  ## hci_ll.c:329:5
 1e156d8:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:329:5
 1e156de:    81 70             	r1 = 8			  ## hci_ll.c:329:5
 1e156e0:    02 fb 13 20       	r2 = 8211 <link+0x7 : 2013 >			  ## hci_ll.c:329:5
 1e156e4:    0c 02             	[sp] = r4			  ## hci_ll.c:329:5
 1e156e6:    53 08             	r3 = r5			  ## hci_ll.c:329:5
 1e156e8:    bf f3 58 dc       	call -18256 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:329:5
 1e156ec:    0c 0a             	sp += 24			  ## hci_ll.c:329:5
 1e156ee:    56 01             	{pc, r6-r4} = [sp++]			  ## hci_ll.c:329:5


ll_hci_private_free_dma_rx:
 1e156f0:    00 8f             	r0 += -16			  ## hci_ll.c:738:0
 1e156f2:    ff f3 af 5c       	goto -83618 <hw_dma_free : 1e01054 >			  ## hci_ll.c:741:5


ll_hci_adv_enable:
 1e156f6:    03 08             	r3 = r0			  ## hci_ll.c:188:0
 1e156f8:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:189:5
 1e156fe:    21 70             	r1 = 2			  ## hci_ll.c:189:5
 1e15700:    02 fb 0a 20       	r2 = 8202 <prev_half_msec+0x2 : 200a >			  ## hci_ll.c:189:5
 1e15704:    ff f3 4a dc       	goto -18284 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:189:5


ll_hci_adv_set_params:
 1e15708:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:85:0
 1e1570a:    fa 0b             	sp += -12			  ## hci_ll.c:85:0
 1e1570c:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:85:0
 1e1570e:    25 08             	r5 = r2			  ## hci_ll.c:85:0
 1e15710:    0b 08             	r11 = r0			  ## hci_ll.c:85:0
 1e15712:    50 6c             	r0 = b[r6 + 5] (u)			  ## hci_ll.c:93:5
 1e15714:    09 f5 38 00       	r9 = [sp+56]			  ## hci_ll.c:93:5
 1e15718:    c7 ff 34 0f 00 00 	r7 = 3892 <config_hci_ll_param.0 : f34 >			  ## hci_ll.c:96:63
 1e1571e:    0c f9 00 70       	r12 = b[r7 + 0] (u)			  ## hci_ll.c:96:63
 1e15722:    08 f9 00 60       	r8 = b[r6 + 0] (u)			  ## hci_ll.c:103:5
 1e15726:    0a f9 02 60       	r10 = b[r6 + 2] (u)			  ## hci_ll.c:93:5
 1e1572a:    12 6c             	r2 = b[r6 + 1] (u)			  ## hci_ll.c:93:5
 1e1572c:    44 6c             	r4 = b[r6 + 4] (u)			  ## hci_ll.c:93:5
 1e1572e:    36 6c             	r6 = b[r6 + 3] (u)			  ## hci_ll.c:93:5
 1e15730:    c8 fd 40 09       	r0 <= insert(r9, p:8, l:8)			  ## hci_ll.c:95:41
 1e15734:    82 fd 10 7c       	r7 = uextra(r12, p:2, l:2)			  ## hci_ll.c:96:63
 1e15738:    c2 fd 80 07       	r0 <= insert(r7, p:16, l:2)			  ## hci_ll.c:96:41
 1e1573c:    28 02             	[sp+8] = r0			  ## hci_ll.c:105:5
 1e1573e:    c8 fd 40 64       	r6 <= insert(r4, p:8, l:8)			  ## hci_ll.c:93:5
 1e15742:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:93:5
 1e15746:    d0 fd 80 26       	r2 <= insert(r6, p:16, l:16)			  ## hci_ll.c:93:5
 1e1574a:    1a 02             	[sp+4] = r2			  ## hci_ll.c:105:5
 1e1574c:    c8 fd 80 53       	r5 <= insert(r3, p:16, l:8)			  ## hci_ll.c:103:5
 1e15750:    c8 fd c0 58       	r5 <= insert(r8, p:24, l:8)			  ## hci_ll.c:103:5
 1e15754:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:103:5
 1e15758:    c2 fd 40 50       	r5 <= insert(r0, p:8, l:2)			  ## hci_ll.c:103:5
 1e1575c:    d0 fd 80 b1       	r11 <= insert(r1, p:16, l:16)			  ## hci_ll.c:103:5
 1e15760:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:105:5
 1e15766:    61 70             	r1 = 6			  ## hci_ll.c:105:5
 1e15768:    02 fb 06 20       	r2 = 8198 <btif_cfg+0x52 : 2006 >			  ## hci_ll.c:105:5
 1e1576c:    0d 02             	[sp] = r5			  ## hci_ll.c:105:5
 1e1576e:    b3 08             	r3 = r11			  ## hci_ll.c:105:5
 1e15770:    bf f3 14 dc       	call -18392 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:105:5
 1e15774:    06 0a             	sp += 12			  ## hci_ll.c:105:5
 1e15776:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:107:1


ll_hci_adv_set_data:
 1e15778:    77 01             	[--sp] = {rets, r7-r4}			  ## hci_ll.c:116:0
 1e1577a:    e2 0b             	sp += -60			  ## hci_ll.c:116:0
 1e1577c:    14 08             	r4 = r1			  ## hci_ll.c:116:0
 1e1577e:    05 08             	r5 = r0			  ## hci_ll.c:116:0
 1e15780:    c6 a1             	r6 = sp + 28			  ## hci_ll.c:116:0
 1e15782:    01 70             	r1 = 0			  ## hci_ll.c:117:21
 1e15784:    02 72             	r2 = 32			  ## hci_ll.c:117:21
 1e15786:    60 08             	r0 = r6			  ## hci_ll.c:117:21
 1e15788:    97 f3 b2 8b       	call 3086180 <memset : 106ef0 >			  ## hci_ll.c:117:21
 1e1578c:    d5 f5 1c 00       	b[sp+28] = r5			  ## hci_ll.c:118:18
 1e15790:    00 fd 01 69       	r0 = r6 | 1			  ## hci_ll.c:121:5
 1e15794:    41 08             	r1 = r4			  ## hci_ll.c:121:5
 1e15796:    52 08             	r2 = r5			  ## hci_ll.c:121:5
 1e15798:    97 f3 a4 8b       	call 3086152 <memcpy : 106ee4 >			  ## hci_ll.c:121:5
 1e1579c:    73 02             	r3 = [sp+28]			  ## hci_ll.c:123:5
 1e1579e:    84 02             	r4 = [sp+32]			  ## hci_ll.c:123:5
 1e157a0:    90 02             	r0 = [sp+36]			  ## hci_ll.c:123:5
 1e157a2:    a1 02             	r1 = [sp+40]			  ## hci_ll.c:123:5
 1e157a4:    b2 02             	r2 = [sp+44]			  ## hci_ll.c:123:5
 1e157a6:    c5 02             	r5 = [sp+48]			  ## hci_ll.c:123:5
 1e157a8:    d6 02             	r6 = [sp+52]			  ## hci_ll.c:123:5
 1e157aa:    e7 02             	r7 = [sp+56]			  ## hci_ll.c:123:5
 1e157ac:    6f 02             	[sp+24] = r7			  ## hci_ll.c:123:5
 1e157ae:    5e 02             	[sp+20] = r6			  ## hci_ll.c:123:5
 1e157b0:    4d 02             	[sp+16] = r5			  ## hci_ll.c:123:5
 1e157b2:    3a 02             	[sp+12] = r2			  ## hci_ll.c:123:5
 1e157b4:    29 02             	[sp+8] = r1			  ## hci_ll.c:123:5
 1e157b6:    18 02             	[sp+4] = r0			  ## hci_ll.c:123:5
 1e157b8:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:123:5
 1e157be:    a1 70             	r1 = 10			  ## hci_ll.c:123:5
 1e157c0:    02 fb 08 20       	r2 = 8200 <prev_half_msec : 2008 >			  ## hci_ll.c:123:5
 1e157c4:    0c 02             	[sp] = r4			  ## hci_ll.c:123:5
 1e157c6:    bf f3 e9 db       	call -18478 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:123:5
 1e157ca:    1e 0a             	sp += 60			  ## hci_ll.c:123:5
 1e157cc:    57 01             	{pc, r7-r4} = [sp++]			  ## hci_ll.c:125:1


ll_hci_adv_scan_response_set_data:
 1e157ce:    7f 01             	[--sp] = {rets, r15-r4}			  ## hci_ll.c:129:0
 1e157d0:    c0 0b             	sp += -128			  ## hci_ll.c:129:0
 1e157d2:    02 08             	r2 = r0			  ## hci_ll.c:129:0
 1e157d4:    7a 03             	[sp+92] = r2			  ## hci_ll.c:133:5
 1e157d6:    00 a6             	r0 = sp + 96			  ## hci_ll.c:133:5
 1e157d8:    97 f3 84 8b       	call 3086088 <memcpy : 106ee4 >			  ## hci_ll.c:133:5
 1e157dc:    c0 f5 7e 00       	r0 = b[sp+126] (u)			  ## hci_ll.c:139:5
 1e157e0:    d8 02             	[sp+52] = r0			  ## hci_ll.c:139:5
 1e157e2:    cb f5 7d 00       	r11 = b[sp+125] (u)			  ## hci_ll.c:139:5
 1e157e6:    c0 f5 7c 00       	r0 = b[sp+124] (u)			  ## hci_ll.c:139:5
 1e157ea:    c8 02             	[sp+48] = r0			  ## hci_ll.c:139:5
 1e157ec:    c3 f5 7b 00       	r3 = b[sp+123] (u)			  ## hci_ll.c:139:5
 1e157f0:    c0 f5 62 00       	r0 = b[sp+98] (u)			  ## hci_ll.c:139:5
 1e157f4:    68 03             	[sp+88] = r0			  ## hci_ll.c:139:5
 1e157f6:    80 f5 60 00       	r0 = h[sp+96] (u)			  ## hci_ll.c:139:5
 1e157fa:    58 03             	[sp+84] = r0			  ## hci_ll.c:139:5
 1e157fc:    c0 f5 64 00       	r0 = b[sp+100] (u)			  ## hci_ll.c:139:5
 1e15800:    48 03             	[sp+80] = r0			  ## hci_ll.c:139:5
 1e15802:    cd f5 63 00       	r13 = b[sp+99] (u)			  ## hci_ll.c:139:5
 1e15806:    c0 f5 66 00       	r0 = b[sp+102] (u)			  ## hci_ll.c:139:5
 1e1580a:    38 03             	[sp+76] = r0			  ## hci_ll.c:139:5
 1e1580c:    c0 f5 65 00       	r0 = b[sp+101] (u)			  ## hci_ll.c:139:5
 1e15810:    28 03             	[sp+72] = r0			  ## hci_ll.c:139:5
 1e15812:    c0 f5 68 00       	r0 = b[sp+104] (u)			  ## hci_ll.c:139:5
 1e15816:    18 03             	[sp+68] = r0			  ## hci_ll.c:139:5
 1e15818:    c8 f5 67 00       	r8 = b[sp+103] (u)			  ## hci_ll.c:139:5
 1e1581c:    c0 f5 6a 00       	r0 = b[sp+106] (u)			  ## hci_ll.c:139:5
 1e15820:    08 03             	[sp+64] = r0			  ## hci_ll.c:139:5
 1e15822:    c0 f5 69 00       	r0 = b[sp+105] (u)			  ## hci_ll.c:139:5
 1e15826:    b8 02             	[sp+44] = r0			  ## hci_ll.c:139:5
 1e15828:    c0 f5 6c 00       	r0 = b[sp+108] (u)			  ## hci_ll.c:139:5
 1e1582c:    f8 02             	[sp+60] = r0			  ## hci_ll.c:139:5
 1e1582e:    c6 f5 6b 00       	r6 = b[sp+107] (u)			  ## hci_ll.c:139:5
 1e15832:    c0 f5 6e 00       	r0 = b[sp+110] (u)			  ## hci_ll.c:139:5
 1e15836:    e8 02             	[sp+56] = r0			  ## hci_ll.c:139:5
 1e15838:    cc f5 6d 00       	r12 = b[sp+109] (u)			  ## hci_ll.c:139:5
 1e1583c:    c0 f5 70 00       	r0 = b[sp+112] (u)			  ## hci_ll.c:139:5
 1e15840:    a8 02             	[sp+40] = r0			  ## hci_ll.c:139:5
 1e15842:    c4 f5 6f 00       	r4 = b[sp+111] (u)			  ## hci_ll.c:139:5
 1e15846:    c0 f5 72 00       	r0 = b[sp+114] (u)			  ## hci_ll.c:139:5
 1e1584a:    98 02             	[sp+36] = r0			  ## hci_ll.c:139:5
 1e1584c:    c9 f5 71 00       	r9 = b[sp+113] (u)			  ## hci_ll.c:139:5
 1e15850:    c0 f5 74 00       	r0 = b[sp+116] (u)			  ## hci_ll.c:139:5
 1e15854:    88 02             	[sp+32] = r0			  ## hci_ll.c:139:5
 1e15856:    c1 f5 73 00       	r1 = b[sp+115] (u)			  ## hci_ll.c:139:5
 1e1585a:    c0 f5 76 00       	r0 = b[sp+118] (u)			  ## hci_ll.c:139:5
 1e1585e:    78 02             	[sp+28] = r0			  ## hci_ll.c:139:5
 1e15860:    c5 f5 75 00       	r5 = b[sp+117] (u)			  ## hci_ll.c:139:5
 1e15864:    ce f5 78 00       	r14 = b[sp+120] (u)			  ## hci_ll.c:139:5
 1e15868:    c0 f5 77 00       	r0 = b[sp+119] (u)			  ## hci_ll.c:139:5
 1e1586c:    ca f5 7a 00       	r10 = b[sp+122] (u)			  ## hci_ll.c:139:5
 1e15870:    c2 f5 79 00       	r2 = b[sp+121] (u)			  ## hci_ll.c:139:5
 1e15874:    0f f5 34 00       	r15 = [sp+52]			  ## hci_ll.c:139:5
 1e15878:    c8 fd 40 bf       	r11 <= insert(r15, p:8, l:8)			  ## hci_ll.c:139:5
 1e1587c:    c7 02             	r7 = [sp+48]			  ## hci_ll.c:139:5
 1e1587e:    c8 fd 40 37       	r3 <= insert(r7, p:8, l:8)			  ## hci_ll.c:139:5
 1e15882:    d0 fd 80 3b       	r3 <= insert(r11, p:16, l:16)			  ## hci_ll.c:139:5
 1e15886:    6b 02             	[sp+24] = r3			  ## hci_ll.c:141:5
 1e15888:    c8 fd 40 2a       	r2 <= insert(r10, p:8, l:8)			  ## hci_ll.c:139:5
 1e1588c:    c8 fd 40 0e       	r0 <= insert(r14, p:8, l:8)			  ## hci_ll.c:139:5
 1e15890:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## hci_ll.c:139:5
 1e15894:    58 02             	[sp+20] = r0			  ## hci_ll.c:141:5
 1e15896:    70 02             	r0 = [sp+28]			  ## hci_ll.c:139:5
 1e15898:    c8 fd 40 50       	r5 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e1589c:    80 02             	r0 = [sp+32]			  ## hci_ll.c:139:5
 1e1589e:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158a2:    d0 fd 80 15       	r1 <= insert(r5, p:16, l:16)			  ## hci_ll.c:139:5
 1e158a6:    49 02             	[sp+16] = r1			  ## hci_ll.c:141:5
 1e158a8:    90 02             	r0 = [sp+36]			  ## hci_ll.c:139:5
 1e158aa:    c8 fd 40 90       	r9 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158ae:    a0 02             	r0 = [sp+40]			  ## hci_ll.c:139:5
 1e158b0:    c8 fd 40 40       	r4 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158b4:    d0 fd 80 49       	r4 <= insert(r9, p:16, l:16)			  ## hci_ll.c:139:5
 1e158b8:    3c 02             	[sp+12] = r4			  ## hci_ll.c:141:5
 1e158ba:    e0 02             	r0 = [sp+56]			  ## hci_ll.c:139:5
 1e158bc:    c8 fd 40 c0       	r12 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158c0:    f0 02             	r0 = [sp+60]			  ## hci_ll.c:139:5
 1e158c2:    c8 fd 40 60       	r6 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158c6:    d0 fd 80 6c       	r6 <= insert(r12, p:16, l:16)			  ## hci_ll.c:139:5
 1e158ca:    2e 02             	[sp+8] = r6			  ## hci_ll.c:141:5
 1e158cc:    00 03             	r0 = [sp+64]			  ## hci_ll.c:139:5
 1e158ce:    b1 02             	r1 = [sp+44]			  ## hci_ll.c:139:5
 1e158d0:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158d4:    10 03             	r0 = [sp+68]			  ## hci_ll.c:139:5
 1e158d6:    c8 fd 40 80       	r8 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158da:    d0 fd 80 81       	r8 <= insert(r1, p:16, l:16)			  ## hci_ll.c:139:5
 1e158de:    18 f5 04 00       	[sp+4] = r8			  ## hci_ll.c:141:5
 1e158e2:    21 03             	r1 = [sp+72]			  ## hci_ll.c:141:5
 1e158e4:    30 03             	r0 = [sp+76]			  ## hci_ll.c:139:5
 1e158e6:    c8 fd 40 10       	r1 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158ea:    40 03             	r0 = [sp+80]			  ## hci_ll.c:139:5
 1e158ec:    c8 fd 40 d0       	r13 <= insert(r0, p:8, l:8)			  ## hci_ll.c:139:5
 1e158f0:    d0 fd 80 d1       	r13 <= insert(r1, p:16, l:16)			  ## hci_ll.c:139:5
 1e158f4:    50 03             	r0 = [sp+84]
 1e158f6:    61 03             	r1 = [sp+88]			  ## hci_ll.c:139:5
 1e158f8:    d0 fd 80 01       	r0 <= insert(r1, p:16, l:16)			  ## hci_ll.c:139:5
 1e158fc:    73 03             	r3 = [sp+92]			  ## hci_ll.c:139:5
 1e158fe:    d8 fd 40 30       	r3 <= insert(r0, p:8, l:24)			  ## hci_ll.c:141:5
 1e15902:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:141:5
 1e15908:    a1 70             	r1 = 10			  ## hci_ll.c:141:5
 1e1590a:    02 fb 09 20       	r2 = 8201 <prev_half_msec+0x1 : 2009 >			  ## hci_ll.c:141:5
 1e1590e:    1d f5 00 00       	[sp] = r13			  ## hci_ll.c:141:5
 1e15912:    bf f3 43 db       	call -18810 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:141:5
 1e15916:    40 0a             	sp += 128			  ## hci_ll.c:141:5
 1e15918:    5f 01             	{pc, r15-r4} = [sp++]			  ## hci_ll.c:143:1


ll_hci_scan_enable:
 1e1591a:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:194:0
 1e1591c:    fe 0b             	sp += -4			  ## hci_ll.c:194:0
 1e1591e:    13 08             	r3 = r1			  ## hci_ll.c:194:0
 1e15920:    04 08             	r4 = r0			  ## hci_ll.c:194:0
 1e15922:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:195:5
 1e15928:    31 70             	r1 = 3			  ## hci_ll.c:195:5
 1e1592a:    02 fb 0c 20       	r2 = 8204 <link : 200c >			  ## hci_ll.c:195:5
 1e1592e:    0b 02             	[sp] = r3			  ## hci_ll.c:195:5
 1e15930:    43 08             	r3 = r4			  ## hci_ll.c:195:5
 1e15932:    bf f3 33 db       	call -18842 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:195:5
 1e15936:    02 0a             	sp += 4			  ## hci_ll.c:195:5
 1e15938:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:195:5


ll_hci_disconnect:
 1e1593a:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:337:0
 1e1593c:    fe 0b             	sp += -4			  ## hci_ll.c:337:0
 1e1593e:    13 08             	r3 = r1			  ## hci_ll.c:337:0
 1e15940:    04 08             	r4 = r0			  ## hci_ll.c:337:0
 1e15942:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:338:5
 1e15948:    31 70             	r1 = 3			  ## hci_ll.c:338:5
 1e1594a:    02 fb 06 04       	r2 = 1030 <BTCTLER_LE_RAM_TOTAL+0x28 : 406 >			  ## hci_ll.c:338:5
 1e1594e:    0b 02             	[sp] = r3			  ## hci_ll.c:338:5
 1e15950:    43 08             	r3 = r4			  ## hci_ll.c:338:5
 1e15952:    bf f3 23 db       	call -18874 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:338:5
 1e15956:    02 0a             	sp += 4			  ## hci_ll.c:338:5
 1e15958:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:338:5


ll_hci_create_conn:
 1e1595a:    7c 01             	[--sp] = {rets, r12-r4}			  ## hci_ll.c:215:0
 1e1595c:    fc 0b             	sp += -8			  ## hci_ll.c:215:0
 1e1595e:    14 08             	r4 = r1			  ## hci_ll.c:215:0
 1e15960:    05 08             	r5 = r0			  ## hci_ll.c:215:0
 1e15962:    c1 ff 21 56 e1 01 	r1 = 31544865 <create_param_default+0x5 : 1e15621 >			  ## hci_ll.c:218:5
 1e15968:    06 a0             	r6 = sp + 0			  ## hci_ll.c:218:5
 1e1596a:    72 70             	r2 = 7			  ## hci_ll.c:218:5
 1e1596c:    60 08             	r0 = r6			  ## hci_ll.c:218:5
 1e1596e:    97 f3 b9 8a       	call 3085682 <memcpy : 106ee4 >			  ## hci_ll.c:218:5
 1e15972:    09 f9 05 50       	r9 = b[r5 + 5] (u)			  ## hci_ll.c:228:5
 1e15976:    08 f9 04 50       	r8 = b[r5 + 4] (u)			  ## hci_ll.c:228:5
 1e1597a:    0a f9 01 50       	r10 = b[r5 + 1] (u)			  ## hci_ll.c:228:5
 1e1597e:    07 6a             	r7 = b[r5 + 0] (u)			  ## hci_ll.c:228:5
 1e15980:    0b f9 03 50       	r11 = b[r5 + 3] (u)			  ## hci_ll.c:228:5
 1e15984:    25 6a             	r5 = b[r5 + 2] (u)			  ## hci_ll.c:228:5
 1e15986:    c0 ff 34 0f 00 00 	r0 = 3892 <config_hci_ll_param.0 : f34 >			  ## hci_ll.c:226:64
 1e1598c:    0c f9 00 00       	r12 = b[r0 + 0] (u)			  ## hci_ll.c:226:64
 1e15990:    72 70             	r2 = 7			  ## hci_ll.c:229:5
 1e15992:    60 08             	r0 = r6			  ## hci_ll.c:229:5
 1e15994:    41 08             	r1 = r4			  ## hci_ll.c:229:5
 1e15996:    97 f3 a5 8a       	call 3085642 <memcpy : 106ee4 >			  ## hci_ll.c:229:5
 1e1599a:    c4 ff a0 29 00 00 	r4 = 10656 <hci_cmd_tmp_buff : 29a0 >			  ## hci_ll.c:229:5
 1e159a0:    b0 70             	r0 = 11			  ## hci_ll.c:232:5
 1e159a2:    08 58             	h[r4 + 0] = r0			  ## hci_ll.c:232:5
 1e159a4:    18 58             	h[r4 + 2] = r0			  ## hci_ll.c:232:5
 1e159a6:    f2 fd 30 0c       	r0 = r12 >> 6			  ## hci_ll.c:226:64
 1e159aa:    48 68             	b[r4 + 4] = r0			  ## hci_ll.c:232:5
 1e159ac:    50 98             	r0 = r4 + 5			  ## hci_ll.c:232:5
 1e159ae:    72 70             	r2 = 7			  ## hci_ll.c:232:5
 1e159b0:    61 08             	r1 = r6			  ## hci_ll.c:232:5
 1e159b2:    97 f3 97 8a       	call 3085614 <memcpy : 106ee4 >			  ## hci_ll.c:232:5
 1e159b6:    20 fd 03 c9       	r0 = r12 & 3			  ## hci_ll.c:227:57
 1e159ba:    c8 68             	b[r4 + 12] = r0			  ## hci_ll.c:232:5
 1e159bc:    c8 fd 40 5b       	r5 <= insert(r11, p:8, l:8)			  ## hci_ll.c:228:5
 1e159c0:    c8 fd 40 7a       	r7 <= insert(r10, p:8, l:8)			  ## hci_ll.c:228:5
 1e159c4:    d0 fd 80 75       	r7 <= insert(r5, p:16, l:16)			  ## hci_ll.c:228:5
 1e159c8:    38 d4             	r0 = r7 >> 16			  ## hci_ll.c:228:5
 1e159ca:    d8 fd 40 89       	r8 <= insert(r9, p:8, l:24)			  ## hci_ll.c:228:5
 1e159ce:    d0 fd 80 08       	r0 <= insert(r8, p:16, l:16)			  ## hci_ll.c:228:5
 1e159d2:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:232:5
 1e159d4:    49 69             	b[r4 + 20] = r1			  ## hci_ll.c:232:5
 1e159d6:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:232:5
 1e159d8:    39 69             	b[r4 + 19] = r1			  ## hci_ll.c:232:5
 1e159da:    01 d2             	r1 = r0 >> 8			  ## hci_ll.c:232:5
 1e159dc:    29 69             	b[r4 + 18] = r1			  ## hci_ll.c:232:5
 1e159de:    18 69             	b[r4 + 17] = r0			  ## hci_ll.c:232:5
 1e159e0:    60 70             	r0 = 6			  ## hci_ll.c:232:5
 1e159e2:    d0 fd 80 07       	r0 <= insert(r7, p:16, l:16)			  ## hci_ll.c:228:5
 1e159e6:    01 d6             	r1 = r0 >> 24			  ## hci_ll.c:232:5
 1e159e8:    09 69             	b[r4 + 16] = r1			  ## hci_ll.c:232:5
 1e159ea:    01 d4             	r1 = r0 >> 16			  ## hci_ll.c:232:5
 1e159ec:    f9 68             	b[r4 + 15] = r1			  ## hci_ll.c:232:5
 1e159ee:    01 70             	r1 = 0			  ## hci_ll.c:232:5
 1e159f0:    e9 68             	b[r4 + 14] = r1			  ## hci_ll.c:232:5
 1e159f2:    d8 68             	b[r4 + 13] = r0			  ## hci_ll.c:232:5
 1e159f4:    89 69             	b[r4 + 24] = r1			  ## hci_ll.c:232:5
 1e159f6:    10 70             	r0 = 1			  ## hci_ll.c:232:5
 1e159f8:    78 69             	b[r4 + 23] = r0			  ## hci_ll.c:232:5
 1e159fa:    69 69             	b[r4 + 22] = r1			  ## hci_ll.c:232:5
 1e159fc:    58 69             	b[r4 + 21] = r0			  ## hci_ll.c:232:5
 1e159fe:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:233:5
 1e15a04:    21 70             	r1 = 2			  ## hci_ll.c:233:5
 1e15a06:    02 fb 0d 20       	r2 = 8205 <link+0x1 : 200d >			  ## hci_ll.c:233:5
 1e15a0a:    43 08             	r3 = r4			  ## hci_ll.c:233:5
 1e15a0c:    bf f3 c6 da       	call -19060 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:233:5
 1e15a10:    04 0a             	sp += 8			  ## hci_ll.c:233:5
 1e15a12:    5c 01             	{pc, r12-r4} = [sp++]			  ## hci_ll.c:233:5


ll_hci_create_conn_ext:
 1e15a14:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:241:0
 1e15a16:    01 08             	r1 = r0			  ## hci_ll.c:241:0
 1e15a18:    c4 ff a0 29 00 00 	r4 = 10656 <hci_cmd_tmp_buff : 29a0 >			  ## hci_ll.c:244:5
 1e15a1e:    92 71             	r2 = 25			  ## hci_ll.c:244:5
 1e15a20:    40 08             	r0 = r4			  ## hci_ll.c:244:5
 1e15a22:    97 f3 5f 8a       	call 3085502 <memcpy : 106ee4 >			  ## hci_ll.c:244:5
 1e15a26:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:245:5
 1e15a2c:    21 70             	r1 = 2			  ## hci_ll.c:245:5
 1e15a2e:    02 fb 0d 20       	r2 = 8205 <link+0x1 : 200d >			  ## hci_ll.c:245:5
 1e15a32:    43 08             	r3 = r4			  ## hci_ll.c:245:5
 1e15a34:    14 01             	{rets, r4} = [sp++]			  ## hci_ll.c:245:5
 1e15a36:    ff f3 b1 da       	goto -19102 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:245:5


ll_hci_create_conn_cancel:
 1e15a3a:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:254:0
 1e15a40:    11 70             	r1 = 1			  ## hci_ll.c:255:5
 1e15a42:    02 fb 0e 20       	r2 = 8206 <link+0x2 : 200e >			  ## hci_ll.c:255:5
 1e15a46:    ff f3 a9 da       	goto -19118 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:255:5


ll_hci_vendor_send_key_num:
 1e15a4a:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:260:0
 1e15a4c:    fe 0b             	sp += -4			  ## hci_ll.c:260:0
 1e15a4e:    14 08             	r4 = r1			  ## hci_ll.c:260:0
 1e15a50:    03 08             	r3 = r0			  ## hci_ll.c:260:0
 1e15a52:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:261:5
 1e15a58:    c2 ff 83 f8 00 00 	r2 = 63619 <BD19_SDK_RAM_SIZE+0x8B : f883 >			  ## hci_ll.c:261:5
 1e15a5e:    31 70             	r1 = 3			  ## hci_ll.c:261:5
 1e15a60:    0c 02             	[sp] = r4			  ## hci_ll.c:261:5
 1e15a62:    bf f3 9b da       	call -19146 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:261:5
 1e15a66:    02 0a             	sp += 4			  ## hci_ll.c:261:5
 1e15a68:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:261:5


ll_vendor_latency_hold_cnt:
 1e15a6a:    74 01             	[--sp] = {rets, r4}			  ## hci_ll.c:266:0
 1e15a6c:    fe 0b             	sp += -4			  ## hci_ll.c:266:0
 1e15a6e:    14 08             	r4 = r1			  ## hci_ll.c:266:0
 1e15a70:    03 08             	r3 = r0			  ## hci_ll.c:266:0
 1e15a72:    c0 ff 06 00 40 00 	r0 = 4194310 <uECC_vli_cmp_unsafe+0x2F900A : 400006 >			  ## hci_ll.c:267:5
 1e15a78:    c2 ff 84 f8 00 00 	r2 = 63620 <BD19_SDK_RAM_SIZE+0x8C : f884 >			  ## hci_ll.c:267:5
 1e15a7e:    31 70             	r1 = 3			  ## hci_ll.c:267:5
 1e15a80:    0c 02             	[sp] = r4			  ## hci_ll.c:267:5
 1e15a82:    bf f3 8b da       	call -19178 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## hci_ll.c:267:5
 1e15a86:    02 0a             	sp += 4			  ## hci_ll.c:267:5
 1e15a88:    54 01             	{pc, r4} = [sp++]			  ## hci_ll.c:267:5


ll_hci_cmd_handler:
 1e15a8a:    75 01             	[--sp] = {rets, r5, r4}			  ## hci_ll.c:498:0
 1e15a8c:    cc 0b             	sp += -104			  ## hci_ll.c:498:0
 1e15a8e:    04 50             	r4 = h[r0 + 0] (u)			  ## hci_ll.c:499:18
 1e15a90:    c5 ff b4 e0 e0 01 	r5 = 31514804 <update_target_end+0x1D4 : 1e0e0b4 >
 1e15a96:    01 ff 06 44 11 00 	if (r4 != 1030) goto 34 <ll_hci_cmd_handler+0x34 : 1e15abe >			  ## hci_ll.c:503:9
 1e15a9c:    11 40             	r1 = [r0 + 4]			  ## hci_ll.c:509:42
 1e15a9e:    91 f5 64 00       	h[sp+100] = r1			  ## hci_ll.c:509:40
 1e15aa2:    20 40             	r0 = [r0 + 8]			  ## hci_ll.c:510:31
 1e15aa4:    d0 f5 66 00       	b[sp+102] = r0			  ## hci_ll.c:510:29
 1e15aa8:    41 a6             	r1 = sp + 100			  ## hci_ll.c:510:29
 1e15aaa:    40 08             	r0 = r4			  ## hci_ll.c:511:26
 1e15aac:    bf f3 78 f4       	call -5904 <ll_push_control_data : 1e143a0 >			  ## hci_ll.c:511:26
 1e15ab0:    02 08             	r2 = r0			  ## hci_ll.c:511:26
 1e15ab2:    01 fb 06 04       	r1 = 1030 <BTCTLER_LE_RAM_TOTAL+0x28 : 406 >			  ## hci_ll.c:512:17
 1e15ab6:    f0 70             	r0 = 15			  ## hci_ll.c:512:17
 1e15ab8:    13 70             	r3 = 1			  ## hci_ll.c:512:17
 1e15aba:    09 02             	[sp] = r1			  ## hci_ll.c:512:17
 1e15abc:    6b 18             	goto 214 <.GJTIE779_0_0_+0xBE : 1e15b94 >			  ## hci_ll.c:512:17
 1e15abe:    31 fd fc 4a       	r1 = r4 & 4294902783
 1e15ac2:    41 e2 12 c0       	ifs (r1 > 36) goto 36 <.GJTIE779_0_0_+0x14 : 1e15aea >			  ## hci_ll.c:518:5
 1e15ac6:    12 fc fa ff       	r2 = r1 + -6
 1e15aca:    42 e0 26 80       	if (r2 > 4) goto 76 <.GJTIE779_0_0_+0x44 : 1e15b1a >
 1e15ace:    a2 00             	tbb [r2]


.GJTIS779_0_0_:
 1e15ad0:    03     < 3 : 0x3 >
 1e15ad1:    65     < 101 : 0x65 >
 1e15ad2:    3b     < 59 : 0x3B >
 1e15ad3:    45     < 69 : 0x45 >
 1e15ad4:    4f     < 79 : 0x4F >
 1e15ad5:    00     < 0 : 0x0 >
 1e15ad6:    41 90             	r1 = r0 + 4			  ## hci_ll.c:537:36
 1e15ad8:    54 a5             	r4 = sp + 85			  ## hci_ll.c:537:36
 1e15ada:    f2 70             	r2 = 15			  ## hci_ll.c:537:13
 1e15adc:    40 08             	r0 = r4			  ## hci_ll.c:537:13
 1e15ade:    97 f3 01 8a       	call 3085314 <memcpy : 106ee4 >			  ## hci_ll.c:537:13
 1e15ae2:    40 08             	r0 = r4			  ## hci_ll.c:538:13
 1e15ae4:    bf f3 f3 f4       	call -5658 <ll_adv_set_params : 1e144ce >			  ## hci_ll.c:538:13
 1e15ae8:    58 18             	goto 176 <.GJTIE779_0_0_+0xC4 : 1e15b9a >			  ## hci_ll.c:538:13
 1e15aea:    0c ff 82 10 07 00 	ifs (r1 > 130) goto 14 <.GJTIE779_0_0_+0x28 : 1e15afe >
 1e15af0:    51 e2 02 00       	if (r1 == 37) goto 4 <.GJTIE779_0_0_+0x22 : 1e15af8 >
 1e15af4:    61 e2 51 10       	if (r1 != 38) goto 162 <.GJTIE779_0_0_+0xC4 : 1e15b9a >
 1e15af8:    f0 70             	r0 = 15
 1e15afa:    02 70             	r2 = 0
 1e15afc:    49 18             	goto 146 <.GJTIE779_0_0_+0xBA : 1e15b90 >
 1e15afe:    00 ff 83 10 3a 00 	if (r1 == 131) goto 116 <.GJTIE779_0_0_+0xA2 : 1e15b78 >
 1e15b04:    01 ff 84 10 48 00 	if (r1 != 132) goto 144 <.GJTIE779_0_0_+0xC4 : 1e15b9a >
 1e15b0a:    11 40             	r1 = [r0 + 4]			  ## hci_ll.c:686:27
 1e15b0c:    91 f5 04 00       	h[sp+4] = r1			  ## hci_ll.c:686:25
 1e15b10:    20 40             	r0 = [r0 + 8]			  ## hci_ll.c:687:27
 1e15b12:    90 f5 06 00       	h[sp+6] = r0			  ## hci_ll.c:687:25
 1e15b16:    41 a0             	r1 = sp + 4			  ## hci_ll.c:687:25
 1e15b18:    36 18             	goto 108 <.GJTIE779_0_0_+0xB0 : 1e15b86 >			  ## hci_ll.c:687:25
 1e15b1a:    81 e1 3e 10       	if (r1 != 24) goto 124 <.GJTIE779_0_0_+0xC4 : 1e15b9a >
 1e15b1e:    00 70             	r0 = 0
 1e15b20:    c1 ff 00 3b 1e 00 	r1 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >
 1e15b26:    02 42             	r2 = [r1 + 0]			  ## misc_hw.c:86:28
 1e15b28:    d3 a0             	r3 = sp + 13			  ## misc_hw.c:86:28
 1e15b2a:    12 fa 00 30       	b[r3+r0] = r2			  ## misc_hw.c:86:17
 1e15b2e:    10 80             	r0 += 1			  ## misc_hw.c:85:36
 1e15b30:    80 e0 f9 1f       	if (r0 != 8) goto -14 <.GJTIE779_0_0_+0x50 : 1e15b26 >
 1e15b34:    c1 ff b8 e0 e0 01 	r1 = 31514808 <update_target_end+0x1D8 : 1e0e0b8 >			  ## hci_ll.c:603:13
 1e15b3a:    d3 a0             	r3 = sp + 13			  ## hci_ll.c:603:13
 1e15b3c:    02 70             	r2 = 0			  ## hci_ll.c:603:13
 1e15b3e:    40 08             	r0 = r4			  ## hci_ll.c:603:13
 1e15b40:    bf f3 4a db       	call -18796 <hci_send_event_cmd_complete : 1e111d8 >			  ## hci_ll.c:603:13
 1e15b44:    2a 18             	goto 84 <.GJTIE779_0_0_+0xC4 : 1e15b9a >			  ## hci_ll.c:603:13
 1e15b46:    41 90             	r1 = r0 + 4			  ## hci_ll.c:545:35
 1e15b48:    54 a3             	r4 = sp + 53			  ## hci_ll.c:545:35
 1e15b4a:    02 72             	r2 = 32			  ## hci_ll.c:545:13
 1e15b4c:    40 08             	r0 = r4			  ## hci_ll.c:545:13
 1e15b4e:    97 f3 c9 89       	call 3085202 <memcpy : 106ee4 >			  ## hci_ll.c:545:13
 1e15b52:    40 08             	r0 = r4			  ## hci_ll.c:546:13
 1e15b54:    bf f3 ce f4       	call -5732 <ll_adv_set_adv_data : 1e144f4 >			  ## hci_ll.c:546:13
 1e15b58:    20 18             	goto 64 <.GJTIE779_0_0_+0xC4 : 1e15b9a >			  ## hci_ll.c:546:13
 1e15b5a:    41 90             	r1 = r0 + 4			  ## hci_ll.c:553:41
 1e15b5c:    54 a1             	r4 = sp + 21			  ## hci_ll.c:553:41
 1e15b5e:    02 72             	r2 = 32			  ## hci_ll.c:553:13
 1e15b60:    40 08             	r0 = r4			  ## hci_ll.c:553:13
 1e15b62:    97 f3 bf 89       	call 3085182 <memcpy : 106ee4 >			  ## hci_ll.c:553:13
 1e15b66:    40 08             	r0 = r4			  ## hci_ll.c:554:13
 1e15b68:    bf f3 e6 f4       	call -5684 <ll_adv_set_scan_rsp_data : 1e14538 >			  ## hci_ll.c:554:13
 1e15b6c:    16 18             	goto 44 <.GJTIE779_0_0_+0xC4 : 1e15b9a >			  ## hci_ll.c:554:13
 1e15b6e:    10 40             	r0 = [r0 + 4]			  ## hci_ll.c:559:13
 1e15b70:    16 20             	if (r0 == 0) goto 44 <.GJTIE779_0_0_+0xC8 : 1e15b9e >			  ## hci_ll.c:559:13
 1e15b72:    bf f3 f6 f5       	call -5140 <ll_adv_open : 1e14762 >			  ## hci_ll.c:560:22
 1e15b76:    11 18             	goto 34 <.GJTIE779_0_0_+0xC4 : 1e15b9a >			  ## hci_ll.c:560:22
 1e15b78:    11 40             	r1 = [r0 + 4]			  ## hci_ll.c:676:38
 1e15b7a:    91 f5 08 00       	h[sp+8] = r1			  ## hci_ll.c:676:36
 1e15b7e:    20 40             	r0 = [r0 + 8]			  ## hci_ll.c:677:28
 1e15b80:    d0 f5 0a 00       	b[sp+10] = r0			  ## hci_ll.c:677:26
 1e15b84:    81 a0             	r1 = sp + 8			  ## hci_ll.c:677:26
 1e15b86:    40 08             	r0 = r4
 1e15b88:    bf f3 0a f4       	call -6124 <ll_push_control_data : 1e143a0 >
 1e15b8c:    02 08             	r2 = r0
 1e15b8e:    f0 70             	r0 = 15
 1e15b90:    13 70             	r3 = 1
 1e15b92:    0c 02             	[sp] = r4
 1e15b94:    51 08             	r1 = r5
 1e15b96:    bf f3 f8 da       	call -18960 <hci_send_event : 1e1118a >
 1e15b9a:    34 0a             	sp += 104
 1e15b9c:    55 01             	{pc, r5, r4} = [sp++]			  ## hci_ll.c:721:1
 1e15b9e:    bf f3 d7 ef       	call -8274 <ll_adv_close : 1e13b50 >			  ## hci_ll.c:562:22
 1e15ba2:    fb 1f             	goto -10 <.GJTIE779_0_0_+0xC4 : 1e15b9a >			  ## hci_ll.c:562:22


ll_push_acl_data:
 1e15ba4:    74 01             	[--sp] = {rets, r4}			  ## hci_ll_cmds.c:541:0
 1e15ba6:    02 08             	r2 = r0			  ## hci_ll_cmds.c:541:0
 1e15ba8:    01 70             	r1 = 0			  ## hci_ll_cmds.c:546:14
 1e15baa:    bf f3 cf 7f       	call -65634 <btctler_little_endian_read_16 : 1e05b4c >			  ## hci_ll_cmds.c:546:14
 1e15bae:    03 08             	r3 = r0			  ## hci_ll_cmds.c:546:14
 1e15bb0:    21 70             	r1 = 2			  ## hci_ll_cmds.c:547:12
 1e15bb2:    20 08             	r0 = r2			  ## hci_ll_cmds.c:547:12
 1e15bb4:    bf f3 ca 7f       	call -65644 <btctler_little_endian_read_16 : 1e05b4c >			  ## hci_ll_cmds.c:547:12
 1e15bb8:    04 08             	r4 = r0			  ## hci_ll_cmds.c:547:12
 1e15bba:    30 fd f0 3a       	r0 = r3 & 4294905855			  ## hci_ll_cmds.c:546:14
 1e15bbe:    21 08             	r1 = r2			  ## hci_ll_cmds.c:552:5
 1e15bc0:    42 08             	r2 = r4			  ## hci_ll_cmds.c:552:5
 1e15bc2:    14 01             	{rets, r4} = [sp++]			  ## hci_ll_cmds.c:552:5
 1e15bc4:    ff f3 f1 f5       	goto -5150 <ll_send_acl_packet : 1e147aa >			  ## hci_ll_cmds.c:552:5


__bt_updata_save_connection_info:
 1e15bc8:    74 01             	[--sp] = {rets, r4}			  ## lmp_escape3.c:862:0
 1e15bca:    f6 0b             	sp += -20			  ## lmp_escape3.c:862:0
 1e15bcc:    c0 ff 4c 0f 00 00 	r0 = 3916 <update_conn : f4c >			  ## lmp_escape3.c:864:35
 1e15bd2:    04 40             	r4 = [r0 + 0]			  ## lmp_escape3.c:864:35
 1e15bd4:    0e 28             	if (r4 == 0) goto 28 <__bt_updata_save_connection_info+0x2A : 1e15bf2 >
 1e15bd6:    97 f3 e1 88       	call 3084738 <local_irq_disable : 106d9c >			  ## lmp_escape3.c:870:5
 1e15bda:    30 70             	r0 = 3			  ## lmp_escape3.c:873:33
 1e15bdc:    d0 f5 02 00       	b[sp+2] = r0			  ## lmp_escape3.c:873:33
 1e15be0:    00 f6 dc 40       	r0 = [r4 + 220]			  ## lmp_escape3.c:874:38
 1e15be4:    01 a0             	r1 = sp + 0			  ## lmp_escape3.c:874:38
 1e15be6:    80 f3 9f 01       	call 830 <__bt_updata_save_link_info : 1e15f28 >			  ## lmp_escape3.c:874:5
 1e15bea:    97 f3 d5 88       	call 3084714 <local_irq_enable : 106d98 >			  ## lmp_escape3.c:877:5
 1e15bee:    00 70             	r0 = 0			  ## lmp_escape3.c:877:5
 1e15bf0:    01 18             	goto 2 <__bt_updata_save_connection_info+0x2C : 1e15bf4 >			  ## lmp_escape3.c:877:5
 1e15bf2:    f0 07             	r0 = -1
 1e15bf4:    0a 0a             	sp += 20
 1e15bf6:    54 01             	{pc, r4} = [sp++]			  ## lmp_escape3.c:881:1


lmp_get_conn_num:
 1e15bf8:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:4109:0
 1e15bfa:    97 f3 cf 88       	call 3084702 <local_irq_disable : 106d9c >			  ## lmp.c:4113:5
 1e15bfe:    c0 ff 58 2d 00 00 	r0 = 11608 <lmp_acl_link : 2d58 >			  ## lmp.c:4113:5
 1e15c04:    04 70             	r4 = 0
 1e15c06:    01 08             	r1 = r0
 1e15c08:    11 fc d4 00       	r1 = r1 + 212
 1e15c0c:    02 52             	r2 = h[r1 + 0] (u)			  ## lmp.c:4115:26
 1e15c0e:    05 24             	if (r2 == 0) goto 10 <lmp_get_conn_num+0x22 : 1e15c1a >			  ## lmp.c:4115:26
 1e15c10:    23 42             	r3 = [r1 + 8]			  ## lmp.c:4116:23
 1e15c12:    12 70             	r2 = 1			  ## lmp.c:4116:17
 1e15c14:    01 36             	if (r3 != 0) goto 2 <lmp_get_conn_num+0x20 : 1e15c18 >			  ## lmp.c:4116:17
 1e15c16:    02 70             	r2 = 0
 1e15c18:    24 09             	r4 += r2			  ## lmp.c:4116:17
 1e15c1a:    41 84             	r1 += 68			  ## lmp.c:4114:5
 1e15c1c:    02 fc 18 01       	r2 = r0 + 280
 1e15c20:    21 f2 f2 3f       	if (r1 < r2) goto -28 <lmp_get_conn_num+0x10 : 1e15c08 >
 1e15c24:    97 f3 b8 88       	call 3084656 <local_irq_enable : 106d98 >			  ## lmp.c:4121:5
 1e15c28:    00 05             	r0 = r4.b0 (u)			  ## lmp.c:4122:5
 1e15c2a:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:4122:5


get_random_number:
 1e15c2c:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp.c:378:0
 1e15c2e:    fe 0b             	sp += -4			  ## lmp.c:378:0
 1e15c30:    14 08             	r4 = r1			  ## lmp.c:378:0
 1e15c32:    05 08             	r5 = r0			  ## lmp.c:378:0
 1e15c34:    19 28             	if (r4 == 0) goto 50 <get_random_number+0x3C : 1e15c68 >			  ## lmp.c:378:0
 1e15c36:    c8 ff 00 3b 1e 00 	r8 = 1981184 <uECC_vli_cmp_unsafe+0xDCB04 : 1e3b00 >			  ## lmp.c:378:0
 1e15c3c:    00 f6 00 80       	r0 = [r8 + 0]			  ## lmp.c:385:27
 1e15c40:    01 05             	r1 = r4.b0 (u)			  ## lmp.c:387:13
 1e15c42:    08 02             	[sp] = r0			  ## lmp.c:385:16
 1e15c44:    47 08             	r7 = r4			  ## lmp.c:387:13
 1e15c46:    41 e0 01 30       	if (r1 < 4) goto 2 <get_random_number+0x20 : 1e15c4c >			  ## lmp.c:387:13
 1e15c4a:    47 70             	r7 = 4			  ## lmp.c:387:13
 1e15c4c:    c6 05             	r6 = r7.b0 (u)			  ## lmp.c:390:40
 1e15c4e:    01 a0             	r1 = sp + 0			  ## lmp.c:390:40
 1e15c50:    50 08             	r0 = r5			  ## lmp.c:390:9
 1e15c52:    62 08             	r2 = r6			  ## lmp.c:390:9
 1e15c54:    97 f3 46 89       	call 3084940 <memcpy : 106ee4 >			  ## lmp.c:390:9
 1e15c58:    a0 70             	r0 = 10			  ## lmp.c:393:9
 1e15c5a:    8f f3 7b 77       	call 2027254 <delay : 4b54 >			  ## lmp.c:393:9
 1e15c5e:    e4 b9             	r4 = r4 - r7			  ## lmp.c:392:17
 1e15c60:    65 09             	r5 += r6			  ## lmp.c:391:17
 1e15c62:    61 ff ff 49 ea ff 	if ((r4 & 255) != 0) goto -44 <get_random_number+0x10 : 1e15c3c >
 1e15c68:    02 0a             	sp += 4
 1e15c6a:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp.c:395:1


lmp_private_remote_addr_for_handler:
 1e15c6c:    74 01             	[--sp] = {rets, r4}			  ## lmp.c:673:0
 1e15c6e:    c2 ff 0d 2e 00 00 	r2 = 11789 <lmp_acl_link+0xB5 : 2e0d >			  ## lmp.c:673:0
 1e15c74:    21 08             	r1 = r2			  ## lmp.c:673:0
 1e15c76:    03 f7 1f 10       	r3 = h[r1 + 31] (u)			  ## lmp.c:617:13
 1e15c7a:    02 26             	if (r3 == 0) goto 4 <lmp_private_remote_addr_for_handler+0x14 : 1e15c80 >			  ## lmp.c:617:13
 1e15c7c:    03 f2 1a 00       	if (r3 == r0) goto 52 <lmp_private_remote_addr_for_handler+0x48 : 1e15cb4 >
 1e15c80:    14 fc 63 00       	r4 = r1 + 99			  ## lmp.c:616:5
 1e15c84:    11 fc 18 01       	r1 = r1 + 280			  ## lmp.c:616:5
 1e15c88:    23 fc 63 00       	r3 = r2 + 99			  ## lmp.c:616:5
 1e15c8c:    34 f2 f3 3f       	if (r4 < r3) goto -26 <lmp_private_remote_addr_for_handler+0xA : 1e15c76 >			  ## lmp.c:616:5
 1e15c90:    01 f7 1f 20       	r1 = h[r2 + 31] (u)			  ## lmp.c:680:30
 1e15c94:    06 22             	if (r1 == 0) goto 12 <lmp_private_remote_addr_for_handler+0x36 : 1e15ca2 >			  ## lmp.c:680:30
 1e15c96:    01 f6 2f 20       	r1 = [r2 + 47]			  ## lmp.c:681:27
 1e15c9a:    03 22             	if (r1 == 0) goto 6 <lmp_private_remote_addr_for_handler+0x36 : 1e15ca2 >			  ## lmp.c:681:27
 1e15c9c:    01 62             	r1 = b[r1 + 0] (u)			  ## lmp.c:681:40
 1e15c9e:    01 f2 08 00       	if (r1 == r0) goto 16 <lmp_private_remote_addr_for_handler+0x46 : 1e15cb2 >			  ## lmp.c:681:40
 1e15ca2:    21 fc 63 00       	r1 = r2 + 99			  ## lmp.c:679:9
 1e15ca6:    22 fc 18 01       	r2 = r2 + 280			  ## lmp.c:679:9
 1e15caa:    31 f2 f1 3f       	if (r1 < r3) goto -30 <lmp_private_remote_addr_for_handler+0x24 : 1e15c90 >			  ## lmp.c:679:9
 1e15cae:    01 70             	r1 = 0
 1e15cb0:    01 18             	goto 2 <lmp_private_remote_addr_for_handler+0x48 : 1e15cb4 >
 1e15cb2:    21 08             	r1 = r2
 1e15cb4:    10 08             	r0 = r1			  ## lmp.c:688:1
 1e15cb6:    54 01             	{pc, r4} = [sp++]			  ## lmp.c:688:1


lmp_hci_set_connection_encryption:
 1e15cb8:    ff f3 ec d9       	goto -19496 <lmp_hci_cmd_to_conn_for_handle : 1e11094 >			  ## lmp_hci.c:210:0


lmp_conn_for_handle:
 1e15cbc:    c2 ff 58 2d 00 00 	r2 = 11608 <lmp_acl_link : 2d58 >			  ## lmp.c:613:0
 1e15cc2:    01 08             	r1 = r0			  ## lmp.c:613:0
 1e15cc4:    20 08             	r0 = r2			  ## lmp.c:613:0
 1e15cc6:    03 f7 d4 00       	r3 = h[r0 + 212] (u)			  ## lmp.c:617:13
 1e15cca:    02 26             	if (r3 == 0) goto 4 <lmp_conn_for_handle+0x14 : 1e15cd0 >			  ## lmp.c:617:13
 1e15ccc:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_handle+0x22 : 1e15cde >
 1e15cd0:    00 fc 18 01       	r0 = r0 + 280			  ## lmp.c:616:5
 1e15cd4:    23 fc 18 01       	r3 = r2 + 280
 1e15cd8:    30 f2 f5 3f       	if (r0 < r3) goto -22 <lmp_conn_for_handle+0xA : 1e15cc6 >
 1e15cdc:    00 70             	r0 = 0
 1e15cde:    20 00             	rts			  ## lmp.c:622:1


lmp_sniff_and_afh_offset_ali:
 1e15ce0:    74 01             	[--sp] = {rets, r4}			  ## lmp_sniff.c:1416:0
 1e15ce2:    8f f3 57 77       	call 2027182 <lmp_conn_for_link : 4b94 >			  ## lmp_sniff.c:1417:35
 1e15ce6:    c2 ff 58 2d 00 00 	r2 = 11608 <lmp_acl_link : 2d58 >			  ## lmp_sniff.c:1417:35
 1e15cec:    01 08             	r1 = r0			  ## lmp_sniff.c:1417:35
 1e15cee:    23 08             	r3 = r2
 1e15cf0:    00 70             	r0 = 0
 1e15cf2:    04 f6 e4 30       	r4 = [r3 + 228]			  ## lmp_esco.c:1264:19
 1e15cf6:    10 38             	if (r4 != 0) goto 32 <lmp_sniff_and_afh_offset_ali+0x38 : 1e15d18 >			  ## lmp_esco.c:1264:19
 1e15cf8:    33 fc 18 01       	r3 = r3 + 280			  ## lmp_esco.c:1263:5
 1e15cfc:    24 fc 18 01       	r4 = r2 + 280			  ## lmp_esco.c:1263:5
 1e15d00:    43 f2 f7 3f       	if (r3 < r4) goto -18 <lmp_sniff_and_afh_offset_ali+0x12 : 1e15cf2 >			  ## lmp_esco.c:1263:5
 1e15d04:    09 22             	if (r1 == 0) goto 18 <lmp_sniff_and_afh_offset_ali+0x38 : 1e15d18 >
 1e15d06:    02 f9 ab 10       	r2 = b[r1 + 171] (u)			  ## lmp_sniff.c:1421:35
 1e15d0a:    22 e0 05 10       	if (r2 != 2) goto 10 <lmp_sniff_and_afh_offset_ali+0x38 : 1e15d18 >			  ## lmp_sniff.c:1421:35
 1e15d0e:    01 f6 e0 10       	r1 = [r1 + 224]			  ## lmp_sniff.c:1393:37
 1e15d12:    02 22             	if (r1 == 0) goto 4 <lmp_sniff_and_afh_offset_ali+0x38 : 1e15d18 >
 1e15d14:    80 52             	r0 = h[r1 + 16] (u)			  ## lmp_sniff.c:1400:22
 1e15d16:    40 c0             	r0 = r0 << 1			  ## lmp_sniff.c:1400:37
 1e15d18:    54 01             	{pc, r4} = [sp++]			  ## lmp_sniff.c:1427:5


lmp_hci_disconnect:
 1e15d1a:    7a 01             	[--sp] = {rets, r10-r4}			  ## lmp_hci.c:282:0
 1e15d1c:    fc 0b             	sp += -8			  ## lmp_hci.c:282:0
 1e15d1e:    04 08             	r4 = r0			  ## lmp_hci.c:282:0
 1e15d20:    cd 17             	call -102 <lmp_conn_for_handle : 1e15cbc >			  ## lmp_hci.c:283:35
 1e15d22:    03 20             	if (r0 == 0) goto 6 <lmp_hci_disconnect+0x10 : 1e15d2a >			  ## lmp_hci.c:285:9
 1e15d24:    bf f3 b6 d9       	call -19604 <lmp_hci_cmd_to_conn_for_handle : 1e11094 >			  ## lmp_hci.c:287:16
 1e15d28:    32 18             	goto 100 <lmp_hci_disconnect+0x74 : 1e15d8e >
 1e15d2a:    31 28             	if (r4 == 0) goto 98 <lmp_hci_disconnect+0x74 : 1e15d8e >
 1e15d2c:    c6 ff 58 2d 00 00 	r6 = 11608 <lmp_acl_link : 2d58 >
 1e15d32:    6a 71             	r10 = 22
 1e15d34:    c8 ff 62 e0 e0 01 	r8 = 31514722 <update_target_end+0x182 : 1e0e062 >
 1e15d3a:    c9 ff 5e e0 e0 01 	r9 = 31514718 <update_target_end+0x17E : 1e0e05e >
 1e15d40:    67 08             	r7 = r6
 1e15d42:    00 f6 e4 70       	r0 = [r7 + 228]			  ## lmp_esco.c:292:19
 1e15d46:    1d 20             	if (r0 == 0) goto 58 <lmp_hci_disconnect+0x68 : 1e15d82 >
 1e15d48:    01 60             	r1 = b[r0 + 0] (u)			  ## lmp_esco.c:293:17
 1e15d4a:    41 f2 1a 10       	if (r1 != r4) goto 52 <lmp_hci_disconnect+0x68 : 1e15d82 >			  ## lmp_esco.c:293:17
 1e15d4e:    21 60             	r1 = b[r0 + 2] (u)			  ## lmp_esco.c:294:56
 1e15d50:    85 60             	r5 = b[r0 + 8] (u)			  ## lmp_esco.c:294:56
 1e15d52:    21 e0 0b 10       	if (r1 != 2) goto 22 <lmp_hci_disconnect+0x52 : 1e15d6c >			  ## lmp_esco.c:294:21
 1e15d56:    1a f5 04 00       	[sp+4] = r10			  ## lmp_esco.c:295:21
 1e15d5a:    e2 7f             	r2 = 254			  ## lmp_esco.c:295:21
 1e15d5c:    d3 70             	r3 = 13			  ## lmp_esco.c:295:21
 1e15d5e:    0d 02             	[sp] = r5			  ## lmp_esco.c:295:21
 1e15d60:    70 08             	r0 = r7			  ## lmp_esco.c:295:21
 1e15d62:    81 08             	r1 = r8			  ## lmp_esco.c:295:21
 1e15d64:    bf f3 22 77       	call -70076 <lmp_request : 1e04bac >			  ## lmp_esco.c:295:21
 1e15d68:    50 75             	r0 = 85			  ## lmp_esco.c:295:21
 1e15d6a:    09 18             	goto 18 <lmp_hci_disconnect+0x64 : 1e15d7e >			  ## lmp_esco.c:295:21
 1e15d6c:    82 75             	r2 = 88			  ## lmp_esco.c:299:21
 1e15d6e:    1a f5 00 00       	[sp] = r10			  ## lmp_esco.c:299:21
 1e15d72:    70 08             	r0 = r7			  ## lmp_esco.c:299:21
 1e15d74:    91 08             	r1 = r9			  ## lmp_esco.c:299:21
 1e15d76:    53 08             	r3 = r5			  ## lmp_esco.c:299:21
 1e15d78:    bf f3 18 77       	call -70096 <lmp_request : 1e04bac >			  ## lmp_esco.c:299:21
 1e15d7c:    30 75             	r0 = 83			  ## lmp_esco.c:299:21
 1e15d7e:    10 f9 89 70       	b[r7 + 137] = r0
 1e15d82:    77 fc 18 01       	r7 = r7 + 280			  ## lmp_esco.c:291:5
 1e15d86:    60 fc 18 01       	r0 = r6 + 280
 1e15d8a:    07 f2 da 3f       	if (r7 < r0) goto -76 <lmp_hci_disconnect+0x28 : 1e15d42 >
 1e15d8e:    04 0a             	sp += 8
 1e15d90:    5a 01             	{pc, r10-r4} = [sp++]


lmp_hci_io_capability_request_reply:
 1e15d92:    ff f3 ca d9       	goto -19564 <lmp_hci_cmd_to_conn_for_addr : 1e1112a >			  ## lmp_hci.c:216:0


lmp_private_handler_for_remote_addr:
 1e15d96:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:691:0
 1e15d98:    16 08             	r6 = r1			  ## lmp.c:691:0
 1e15d9a:    05 08             	r5 = r0			  ## lmp.c:691:0
 1e15d9c:    8f f3 0b 77       	call 2027030 <lmp_conn_for_address : 4bb6 >			  ## lmp.c:693:12
 1e15da0:    04 70             	r4 = 0
 1e15da2:    14 20             	if (r0 == 0) goto 40 <lmp_private_handler_for_remote_addr+0x36 : 1e15dcc >
 1e15da4:    00 fc b0 00       	r0 = r0 + 176
 1e15da8:    16 e0 07 10       	if (r6 != 1) goto 14 <lmp_private_handler_for_remote_addr+0x24 : 1e15dba >			  ## lmp.c:698:9
 1e15dac:    01 40             	r1 = [r0 + 0]			  ## lmp.c:699:26
 1e15dae:    21 fd 09 19       	r1 = r1 & 9			  ## lmp.c:699:60
 1e15db2:    81 e0 0b 00       	if (r1 == 8) goto 22 <lmp_private_handler_for_remote_addr+0x36 : 1e15dcc >			  ## lmp.c:699:60
 1e15db6:    24 51             	r4 = h[r0 + 36] (u)			  ## lmp.c:702:29
 1e15db8:    09 18             	goto 18 <lmp_private_handler_for_remote_addr+0x36 : 1e15dcc >			  ## lmp.c:702:29
 1e15dba:    d6 40             	r6 = [r0 + 52]			  ## lmp.c:705:15
 1e15dbc:    07 2c             	if (r6 == 0) goto 14 <lmp_private_handler_for_remote_addr+0x36 : 1e15dcc >
 1e15dbe:    50 80             	r0 += 5			  ## lmp.c:705:36
 1e15dc0:    62 70             	r2 = 6			  ## lmp.c:705:29
 1e15dc2:    51 08             	r1 = r5			  ## lmp.c:705:29
 1e15dc4:    97 f3 92 88       	call 3084580 <memcmp : 106eec >			  ## lmp.c:705:29
 1e15dc8:    01 30             	if (r0 != 0) goto 2 <lmp_private_handler_for_remote_addr+0x36 : 1e15dcc >			  ## lmp.c:705:29
 1e15dca:    04 6c             	r4 = b[r6 + 0] (u)			  ## lmp.c:706:33
 1e15dcc:    40 08             	r0 = r4			  ## lmp.c:710:1
 1e15dce:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:710:1


lmp_hci_accept_connection_request:
 1e15dd0:    ff f3 ab d9       	goto -19626 <lmp_hci_cmd_to_conn_for_addr : 1e1112a >			  ## lmp_hci.c:328:0


lmp_hci_accept_sco_connection_request:
 1e15dd4:    ff f3 a9 d9       	goto -19630 <lmp_hci_cmd_to_conn_for_addr : 1e1112a >			  ## lmp_hci.c:335:0


lmp_hci_reject_connection_request:
 1e15dd8:    ff f3 a7 d9       	goto -19634 <lmp_hci_cmd_to_conn_for_addr : 1e1112a >			  ## lmp_hci.c:346:0


lmp_hci_link_key_request_reply:
 1e15ddc:    ff f3 a5 d9       	goto -19638 <lmp_hci_cmd_to_conn_for_addr : 1e1112a >			  ## lmp_hci.c:413:0


lmp_hci_link_key_request_negative_reply:
 1e15de0:    ff f3 a3 d9       	goto -19642 <lmp_hci_cmd_to_conn_for_addr : 1e1112a >			  ## lmp_hci.c:421:0


lmp_hci_pin_code_request_reply:
 1e15de4:    ff f3 a1 d9       	goto -19646 <lmp_hci_cmd_to_conn_for_addr : 1e1112a >			  ## lmp_hci.c:252:0


lmp_hci_create_connection:
 1e15de8:    78 01             	[--sp] = {rets, r8-r4}			  ## lmp_hci.c:465:0
 1e15dea:    f6 0b             	sp += -20			  ## lmp_hci.c:465:0
 1e15dec:    08 f9 01 00       	r8 = b[r0 + 1] (u)			  ## lmp_hci.c:468:5
 1e15df0:    03 60             	r3 = b[r0 + 0] (u)			  ## lmp_hci.c:468:5
 1e15df2:    35 60             	r5 = b[r0 + 3] (u)			  ## lmp_hci.c:468:5
 1e15df4:    26 60             	r6 = b[r0 + 2] (u)			  ## lmp_hci.c:468:5
 1e15df6:    57 60             	r7 = b[r0 + 5] (u)			  ## lmp_hci.c:468:5
 1e15df8:    44 60             	r4 = b[r0 + 4] (u)			  ## lmp_hci.c:468:5
 1e15dfa:    4a 02             	[sp+16] = r2			  ## lmp_hci.c:469:5
 1e15dfc:    00 70             	r0 = 0			  ## lmp_hci.c:469:5
 1e15dfe:    38 02             	[sp+12] = r0			  ## lmp_hci.c:469:5
 1e15e00:    28 02             	[sp+8] = r0			  ## lmp_hci.c:469:5
 1e15e02:    19 02             	[sp+4] = r1			  ## lmp_hci.c:469:5
 1e15e04:    c8 fd 40 47       	r4 <= insert(r7, p:8, l:8)			  ## lmp_hci.c:468:5
 1e15e08:    c8 fd 40 65       	r6 <= insert(r5, p:8, l:8)			  ## lmp_hci.c:468:5
 1e15e0c:    c8 fd 40 38       	r3 <= insert(r8, p:8, l:8)			  ## lmp_hci.c:468:5
 1e15e10:    d0 fd 80 36       	r3 <= insert(r6, p:16, l:16)			  ## lmp_hci.c:468:5
 1e15e14:    c0 ff 02 00 40 00 	r0 = 4194306 <uECC_vli_cmp_unsafe+0x2F9006 : 400002 >			  ## lmp_hci.c:469:5
 1e15e1a:    71 70             	r1 = 7			  ## lmp_hci.c:469:5
 1e15e1c:    02 fb 05 04       	r2 = 1029 <BTCTLER_LE_RAM_TOTAL+0x27 : 405 >			  ## lmp_hci.c:469:5
 1e15e20:    0c 02             	[sp] = r4			  ## lmp_hci.c:469:5
 1e15e22:    bf f3 bb d8       	call -20106 <btctrler_hci_cmd_to_task : 1e10f9c >			  ## lmp_hci.c:469:5
 1e15e26:    0a 0a             	sp += 20
 1e15e28:    58 01             	{pc, r8-r4} = [sp++]			  ## lmp_hci.c:470:1


lmp_hci_host_num_of_completed_packets:
 1e15e2a:    ff f3 33 d9       	goto -19866 <lmp_hci_cmd_to_conn_for_handle : 1e11094 >			  ## lmp_hci.c:168:0


lmp_private_set_a2dp_channel:
 1e15e2e:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_a2dp.c:39:0
 1e15e30:    14 08             	r4 = r1			  ## lmp_a2dp.c:39:0
 1e15e32:    05 08             	r5 = r0			  ## lmp_a2dp.c:39:0
 1e15e34:    97 f3 b2 87       	call 3084132 <local_irq_disable : 106d9c >			  ## lmp_a2dp.c:41:5
 1e15e38:    50 08             	r0 = r5			  ## lmp_a2dp.c:42:12
 1e15e3a:    8f f3 bc 76       	call 2026872 <lmp_conn_for_address : 4bb6 >			  ## lmp_a2dp.c:42:12
 1e15e3e:    01 20             	if (r0 == 0) goto 2 <lmp_private_set_a2dp_channel+0x14 : 1e15e42 >
 1e15e40:    9c 50             	h[r0 + 18] = r4			  ## lmp_a2dp.c:44:27
 1e15e42:    15 01             	{rets, r5, r4} = [sp++]			  ## lmp_a2dp.c:46:5
 1e15e44:    d7 f3 a8 87       	goto 3084112 <local_irq_enable : 106d98 >			  ## lmp_a2dp.c:46:5


tws_lmp_clear_a2dp_packet:
 1e15e48:    20 00             	rts			  ## lmp_a2dp.c:710:0


bt_updata_clr_flag:
 1e15e4a:    c0 ff 50 0f 00 00 	r0 = 3920 <bt_res_updata_flag : f50 >			  ## lmp_escape3.c:58:0
 1e15e50:    01 40             	r1 = [r0 + 0]			  ## lmp_escape3.c:60:28
 1e15e52:    f1 b0             	r1 &= 4294967293			  ## lmp_escape3.c:60:28
 1e15e54:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:60:28
 1e15e56:    20 00             	rts			  ## lmp_escape3.c:62:1


bt_updata_control:
 1e15e58:    74 01             	[--sp] = {rets, r4}			  ## lmp_escape3.c:595:0
 1e15e5a:    f8 0b             	sp += -16			  ## lmp_escape3.c:595:0
 1e15e5c:    c4 ff 4c 0f 00 00 	r4 = 3916 <update_conn : f4c >			  ## lmp_escape3.c:597:35
 1e15e62:    04 48             	r4 = [r4 + 0]			  ## lmp_escape3.c:597:35
 1e15e64:    0c 28             	if (r4 == 0) goto 24 <bt_updata_control+0x26 : 1e15e7e >
 1e15e66:    3b 02             	[sp+12] = r3			  ## lmp_escape3.c:604:5
 1e15e68:    2a 02             	[sp+8] = r2			  ## lmp_escape3.c:604:5
 1e15e6a:    19 02             	[sp+4] = r1			  ## lmp_escape3.c:604:5
 1e15e6c:    c1 ff 57 e0 e0 01 	r1 = 31514711 <update_target_end+0x177 : 1e0e057 >			  ## lmp_escape3.c:604:5
 1e15e72:    c2 7f             	r2 = 252			  ## lmp_escape3.c:604:5
 1e15e74:    63 76             	r3 = 102			  ## lmp_escape3.c:604:5
 1e15e76:    08 02             	[sp] = r0			  ## lmp_escape3.c:604:5
 1e15e78:    40 08             	r0 = r4			  ## lmp_escape3.c:604:5
 1e15e7a:    bf f3 97 76       	call -70354 <lmp_request : 1e04bac >			  ## lmp_escape3.c:604:5
 1e15e7e:    08 0a             	sp += 16
 1e15e80:    54 01             	{pc, r4} = [sp++]			  ## lmp_escape3.c:605:1


bt_updata_get_flag:
 1e15e82:    c0 ff 50 0f 00 00 	r0 = 3920 <bt_res_updata_flag : f50 >			  ## lmp_escape3.c:65:0
 1e15e88:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:67:16
 1e15e8a:    20 00             	rts			  ## lmp_escape3.c:70:1


reg_revic_buf_addr:
 1e15e8c:    c0 ff 54 0f 00 00 	r0 = 3924 <uboot_revic_handle : f54 >			  ## lmp_escape3.c:86:0
 1e15e92:    c1 ff 06 79 e1 01 	r1 = 31553798 <bt_updata_handle : 1e17906 >			  ## lmp_escape3.c:87:24
 1e15e98:    09 40             	[r0 + 0] = r1			  ## lmp_escape3.c:87:24
 1e15e9a:    20 00             	rts			  ## lmp_escape3.c:88:1


lmp_update_init:
 1e15e9c:    c0 ff 4c 0f 00 00 	r0 = 3916 <update_conn : f4c >			  ## lmp_escape3.c:622:0
 1e15ea2:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:624:39
 1e15ea4:    05 20             	if (r0 == 0) goto 10 <lmp_update_init+0x14 : 1e15eb0 >
 1e15ea6:    c0 ff 58 0f 00 00 	r0 = 3928 <g_lmp_update_start_flag : f58 >
 1e15eac:    11 70             	r1 = 1
 1e15eae:    09 60             	b[r0 + 0] = r1
 1e15eb0:    20 00             	rts


lmp_update_exit:
 1e15eb2:    c0 ff 4c 0f 00 00 	r0 = 3916 <update_conn : f4c >			  ## lmp_escape3.c:635:0
 1e15eb8:    00 40             	r0 = [r0 + 0]			  ## lmp_escape3.c:637:39
 1e15eba:    05 20             	if (r0 == 0) goto 10 <lmp_update_exit+0x14 : 1e15ec6 >
 1e15ebc:    c0 ff 58 0f 00 00 	r0 = 3928 <g_lmp_update_start_flag : f58 >
 1e15ec2:    01 70             	r1 = 0
 1e15ec4:    09 60             	b[r0 + 0] = r1
 1e15ec6:    20 00             	rts


packet_1M_table:
 1e15ec8:    11 00             	lockclr
 1e15eca:    11 00             	lockclr
 1e15ecc:    03 00             	idle
 1e15ece:    01 00             	nop
 1e15ed0:    1b 00             	cli
 1e15ed2:    1b 00             	cli
 1e15ed4:    04 00             	bkpt
 1e15ed6:    01 00             	nop
 1e15ed8:    79 00             	sti r9
 1e15eda:    79 00             	sti r9
 1e15edc:    0a 00             	ssync
 1e15ede:    03 00             	idle
 1e15ee0:    b7 00             	tbh [r7]
 1e15ee2:    b7 00             	tbh [r7]
 1e15ee4:    0b 00             	ssync
 1e15ee6:    03 00             	idle
 1e15ee8:    e0 00             	flush [r0]
 1e15eea:    e0 00             	flush [r0]
 1e15eec:    0e 00              <unkown instruction>
 1e15eee:    05 00             	bkpt
 1e15ef0:    53 01             	{pc, r3} = [sp++]
 1e15ef2:    53 01             	{pc, r3} = [sp++]
 1e15ef4:    0f 00              <unkown instruction>
 1e15ef6:    05 00             	bkpt


packet_1M_table_tws:
 1e15ef8:    1b 00             	cli
 1e15efa:    1b 00             	cli
 1e15efc:    04 00             	bkpt
 1e15efe:    01 00             	nop
 1e15f00:    b7 00             	tbh [r7]
 1e15f02:    b7 00             	tbh [r7]
 1e15f04:    0b 00             	ssync
 1e15f06:    03 00             	idle
 1e15f08:    53 01             	{pc, r3} = [sp++]
 1e15f0a:    53 01             	{pc, r3} = [sp++]
 1e15f0c:    0f 00              <unkown instruction>
 1e15f0e:    05 00             	bkpt


packet_2M_table:
 1e15f10:    6c 00             	cli r12
 1e15f12:    36 00             	[--sp] = rets
 1e15f14:    04 00             	bkpt
 1e15f16:    01 00             	nop
 1e15f18:    a5 01             	{psr, retx, reti} = [sp++]
 1e15f1a:    6f 01             	[--sp] = {r15-r4}
 1e15f1c:    0a 00             	ssync
 1e15f1e:    03 00             	idle
 1e15f20:    a7 02             	r7 = [sp+40]
 1e15f22:    a7 02             	r7 = [sp+40]
 1e15f24:    0e 00              <unkown instruction>
 1e15f26:    05 00             	bkpt


__bt_updata_save_link_info:
 1e15f28:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:5640:0
 1e15f2a:    c0 85             	r0 += 92			  ## bredr_link.c:5640:0
 1e15f2c:    02 60             	r2 = b[r0 + 0] (u)			  ## bredr_link.c:5654:40
 1e15f2e:    83 62             	r3 = b[r1 + 8] (u)			  ## bredr_link.c:5654:21
 1e15f30:    52 d0             	r2 = r2 >> 1			  ## bredr_link.c:5654:21
 1e15f32:    c1 fd 08 32       	r3 <= insert(r2, p:1, l:1)			  ## bredr_link.c:5654:21
 1e15f36:    8b 62             	b[r1 + 8] = r3			  ## bredr_link.c:5654:21
 1e15f38:    02 60             	r2 = b[r0 + 0] (u)			  ## bredr_link.c:5655:40
 1e15f3a:    5b d0             	r3 = r3 >> 1			  ## bredr_link.c:5655:21
 1e15f3c:    df fd 08 23       	r2 <= insert(r3, p:1, l:31)			  ## bredr_link.c:5655:21
 1e15f40:    8a 62             	b[r1 + 8] = r2			  ## bredr_link.c:5655:21
 1e15f42:    03 60             	r3 = b[r0 + 0] (u)			  ## bredr_link.c:5656:40
 1e15f44:    9b d0             	r3 = r3 >> 2			  ## bredr_link.c:5656:21
 1e15f46:    c1 fd 10 23       	r2 <= insert(r3, p:2, l:1)			  ## bredr_link.c:5656:21
 1e15f4a:    8a 62             	b[r1 + 8] = r2			  ## bredr_link.c:5656:21
 1e15f4c:    03 60             	r3 = b[r0 + 0] (u)			  ## bredr_link.c:5657:41
 1e15f4e:    22 fd 87 29       	r2 = r2 & 135			  ## bredr_link.c:5657:22
 1e15f52:    23 fd 78 39       	r3 = r3 & 120			  ## bredr_link.c:5657:41
 1e15f56:    52 b6             	r2 |= r3			  ## bredr_link.c:5657:22
 1e15f58:    8a 62             	b[r1 + 8] = r2			  ## bredr_link.c:5657:22
 1e15f5a:    12 60             	r2 = b[r0 + 1] (u)			  ## bredr_link.c:5658:46
 1e15f5c:    9a 62             	b[r1 + 9] = r2			  ## bredr_link.c:5658:27
 1e15f5e:    22 60             	r2 = b[r0 + 2] (u)			  ## bredr_link.c:5659:46
 1e15f60:    aa 62             	b[r1 + 10] = r2			  ## bredr_link.c:5659:27
 1e15f62:    22 50             	r2 = h[r0 + 4] (u)			  ## bredr_link.c:5660:42
 1e15f64:    6a 52             	h[r1 + 12] = r2			  ## bredr_link.c:5660:23
 1e15f66:    52 40             	r2 = [r0 + 20]			  ## bredr_link.c:5661:37
 1e15f68:    4a 42             	[r1 + 16] = r2			  ## bredr_link.c:5661:31
 1e15f6a:    d0 41             	r0 = [r0 + 116]			  ## bredr_link.c:5669:42
 1e15f6c:    c4 ff e0 27 00 00 	r4 = 10208 <btctler_bss_start : 27e0 >
 1e15f72:    05 70             	r5 = 0
 1e15f74:    42 08             	r2 = r4
 1e15f76:    03 70             	r3 = 0
 1e15f78:    46 f6 04 20       	r6 = [r2 ++= 4]			  ## bredr_frame.c:2847:22
 1e15f7c:    06 f2 05 00       	if (r6 == r0) goto 10 <__bt_updata_save_link_info+0x62 : 1e15f8a >			  ## bredr_frame.c:2847:22
 1e15f80:    13 80             	r3 += 1			  ## bredr_frame.c:2846:39
 1e15f82:    15 80             	r5 += 1			  ## bredr_frame.c:2846:19
 1e15f84:    83 e0 f8 bf       	ifs (r3 < 8) goto -16 <__bt_updata_save_link_info+0x50 : 1e15f78 >			  ## bredr_frame.c:2846:19
 1e15f88:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:5670:1
 1e15f8a:    40 fc 40 00       	r0 = r4 + 64			  ## bredr_frame.c:2848:13
 1e15f8e:    42 71             	r2 = 20			  ## bredr_frame.c:2848:13
 1e15f90:    97 f3 a8 87       	call 3084112 <memcpy : 106ee4 >			  ## bredr_frame.c:2848:13
 1e15f94:    15 f9 41 40       	b[r4 + 65] = r5			  ## bredr_frame.c:2849:51
 1e15f98:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:5670:1


bredr_bd_close_frame:
 1e15f9a:    20 fb 1c 0b       	r0 = 1835008			  ## bredr_frame.c:2284:0
 1e15f9e:    11 40             	r1 = [r0 + 4]			  ## bredr_frame.c:2285:21
 1e15fa0:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:2285:21
 1e15fa2:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2285:21
 1e15fa4:    00 f4 84 09       	[r0 + 0] |= 132			  ## bredr_frame.c:2286:15
 1e15fa8:    01 40             	r1 = [r0 + 0]			  ## bredr_frame.c:2290:12
 1e15faa:    28 f3 fd 1f       	if ((r1 & 256) != 0) goto -6 <bredr_bd_close_frame+0xE : 1e15fa8 >			  ## bredr_frame.c:2290:5
 1e15fae:    20 00             	rts			  ## bredr_frame.c:2292:1


bredr_bd_frame_disable:
 1e15fb0:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2311:0
 1e15fb2:    04 08             	r4 = r0			  ## bredr_frame.c:2311:0
 1e15fb4:    97 f3 f2 86       	call 3083748 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2312:5
 1e15fb8:    c0 ff 04 00 1c 00 	r0 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2314:15
 1e15fbe:    00 40             	r0 = [r0 + 0]			  ## bredr_frame.c:2314:15
 1e15fc0:    01 f9 34 42       	r1 = b[r4 + 564] (u)			  ## bredr_frame.c:2316:15
 1e15fc4:    84 fd 60 00       	r0 = uextra(r0, p:12, l:4)			  ## bredr_frame.c:2314:38
 1e15fc8:    10 f2 01 10       	if (r0 != r1) goto 2 <bredr_bd_frame_disable+0x1E : 1e15fce >
 1e15fcc:    e6 17             	call -52 <bredr_bd_close_frame : 1e15f9a >			  ## bredr_frame.c:2317:9
 1e15fce:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2320:5
 1e15fd0:    d7 f3 e2 86       	goto 3083716 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2320:5


bredr_bd_frame_enable:
 1e15fd4:    74 01             	[--sp] = {rets, r4}			  ## bredr_frame.c:2301:0
 1e15fd6:    04 08             	r4 = r0			  ## bredr_frame.c:2301:0
 1e15fd8:    97 f3 e0 86       	call 3083712 <local_irq_disable : 106d9c >			  ## bredr_frame.c:2302:5
 1e15fdc:    00 f9 34 42       	r0 = b[r4 + 564] (u)			  ## bredr_frame.c:2303:24
 1e15fe0:    01 f7 36 42       	r1 = h[r4 + 566] (u)			  ## bredr_frame.c:2303:44
 1e15fe4:    00 c3             	r0 = r0 << 12			  ## bredr_frame.c:2303:34
 1e15fe6:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:2303:58
 1e15fe8:    50 b2             	r0 |= r1			  ## bredr_frame.c:2303:41
 1e15fea:    c1 ff 04 00 1c 00 	r1 = 1835012 <uECC_vli_cmp_unsafe+0xB9008 : 1c0004 >			  ## bredr_frame.c:2303:41
 1e15ff0:    08 42             	[r1 + 0] = r0			  ## bredr_frame.c:2303:21
 1e15ff2:    00 f4 01 19       	[r1 + 0] |= 1			  ## bredr_frame.c:2296:21
 1e15ff6:    14 01             	{rets, r4} = [sp++]			  ## bredr_frame.c:2305:5
 1e15ff8:    d7 f3 ce 86       	goto 3083676 <local_irq_enable : 106d98 >			  ## bredr_frame.c:2305:5


bredr_link_check_used:
 1e15ffc:    c0 ff 60 0f 00 00 	r0 = 3936 <g_page_scan : f60 >			  ## bredr_link.c:245:0
 1e16002:    00 40             	r0 = [r0 + 0]			  ## bredr_link.c:247:14
 1e16004:    c1 ff 64 0f 00 00 	r1 = 3940 <inquiry_scan : f64 >			  ## bredr_link.c:246:25
 1e1600a:    01 42             	r1 = [r1 + 0]			  ## bredr_link.c:246:25
 1e1600c:    c2 ff 5c 0f 00 00 	r2 = 3932 <g_page : f5c >			  ## bredr_link.c:247:32
 1e16012:    02 44             	r2 = [r2 + 0]			  ## bredr_link.c:247:32
 1e16014:    50 b2             	r0 |= r1			  ## bredr_link.c:247:32
 1e16016:    e0 fd 20 10       	r1 = r0 | r2			  ## bredr_link.c:247:32
 1e1601a:    10 70             	r0 = 1			  ## bredr_link.c:246:20
 1e1601c:    01 32             	if (r1 != 0) goto 2 <bredr_link_check_used+0x24 : 1e16020 >			  ## bredr_link.c:246:20
 1e1601e:    00 70             	r0 = 0
 1e16020:    20 00             	rts			  ## bredr_link.c:251:1


lp_winsize_init:
 1e16022:    c0 ff bc 08 00 00 	r0 = 2236 <lp_winsize : 8bc >			  ## bredr_link.c:3620:0
 1e16028:    c1 ff ac 2c 00 00 	r1 = 11436 <bredr_link_v : 2cac >			  ## bredr_link.c:3621:19
 1e1602e:    28 42             	[r1 + 8] = r0			  ## bredr_link.c:3621:19
 1e16030:    20 00             	rts			  ## bredr_link.c:3622:1


__write_reg_packet_type:
 1e16032:    49 c0             	r1 = r1 << 1			  ## bredr_frame.c:83:0
 1e16034:    10 09             	r0 += r1			  ## bredr_frame.c:86:13
 1e16036:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:86:13
 1e16038:    c2 ff b0 80 00 00 	r2 = 32944 <nvbss_size+0x1470 : 80b0 >			  ## bredr_frame.c:87:11
 1e1603e:    51 b5             	r1 &= r2			  ## bredr_frame.c:87:11
 1e16040:    11 b7             	r1 |= 16384			  ## bredr_frame.c:89:5
 1e16042:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:89:5
 1e16044:    20 00             	rts			  ## bredr_frame.c:90:1


bredr_frame_get_empty_txbuf_index:
 1e16046:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_frame.c:1086:0
 1e16048:    14 08             	r4 = r1			  ## bredr_frame.c:1086:0
 1e1604a:    05 08             	r5 = r0			  ## bredr_frame.c:1086:0
 1e1604c:    97 f3 a6 86       	call 3083596 <local_irq_disable : 106d9c >			  ## bredr_frame.c:1093:5
 1e16050:    00 f9 34 52       	r0 = b[r5 + 564] (u)			  ## bredr_frame.c:1093:5
 1e16054:    00 c1             	r0 = r0 << 4			  ## bredr_frame.c:1093:5
 1e16056:    20 fb 1c 1b       	r1 = 1835008			  ## bredr_frame.c:1093:5
 1e1605a:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1096:19
 1e1605c:    32 fd 70 29       	r2 = r2 & 4294967183			  ## bredr_frame.c:1096:19
 1e16060:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1096:19
 1e16062:    02 42             	r2 = [r1 + 0]			  ## bredr_frame.c:1097:19
 1e16064:    52 b0             	r2 |= r0			  ## bredr_frame.c:1097:19
 1e16066:    0a 42             	[r1 + 0] = r2			  ## bredr_frame.c:1097:19
 1e16068:    00 f4 08 19       	[r1 + 0] |= 8			  ## bredr_frame.c:1098:19
 1e1606c:    72 5a             	r2 = h[r5 + 14] (u)			  ## bredr_frame.c:1100:29
 1e1606e:    06 f7 54 50       	r6 = h[r5 + 84] (u)			  ## bredr_frame.c:1101:29
 1e16072:    07 f7 56 50       	r7 = h[r5 + 86] (u)			  ## bredr_frame.c:1102:29
 1e16076:    93 5a             	r3 = h[r5 + 18] (u)			  ## bredr_frame.c:1103:29
 1e16078:    a3 5a             	r3 = h[r5 + 20] (u)			  ## bredr_frame.c:1104:29
 1e1607a:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:1105:16
 1e1607c:    03 f3 ed 3f       	if ((r3 & 8) == 0) goto -38 <bredr_frame_get_empty_txbuf_index+0x14 : 1e1605a >			  ## bredr_frame.c:1105:5
 1e16080:    25 fd 01 29       	r5 = r2 & 1			  ## bredr_frame.c:1100:35
 1e16084:    97 f3 88 86       	call 3083536 <local_irq_enable : 106d98 >			  ## bredr_frame.c:1107:5
 1e16088:    00 70             	r0 = 0
 1e1608a:    01 70             	r1 = 0
 1e1608c:    06 2a             	if (r5 == 0) goto 12 <bredr_frame_get_empty_txbuf_index+0x54 : 1e1609a >			  ## bredr_frame.c:1112:13
 1e1608e:    02 70             	r2 = 0
 1e16090:    00 f3 08 70       	if ((r7 & 1) == 0) goto 16 <bredr_frame_get_empty_txbuf_index+0x5E : 1e160a4 >
 1e16094:    15 fa 00 41       	b[r4+r1] = r5			  ## bredr_frame.c:1114:33
 1e16098:    05 18             	goto 10 <bredr_frame_get_empty_txbuf_index+0x5E : 1e160a4 >			  ## bredr_frame.c:1114:33
 1e1609a:    12 70             	r2 = 1
 1e1609c:    00 f3 02 60       	if ((r6 & 1) == 0) goto 4 <bredr_frame_get_empty_txbuf_index+0x5E : 1e160a4 >
 1e160a0:    10 fa 00 41       	b[r4+r1] = r0			  ## bredr_frame.c:1120:33
 1e160a4:    11 80             	r1 += 1			  ## bredr_frame.c:1111:29
 1e160a6:    25 08             	r5 = r2
 1e160a8:    21 e0 f0 1f       	if (r1 != 2) goto -32 <bredr_frame_get_empty_txbuf_index+0x46 : 1e1608c >
 1e160ac:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_frame.c:1126:1


link_conn_set_ptt:
 1e160ae:    b1 50             	r1 = h[r0 + 22] (u)			  ## bredr_link.c:3471:0
 1e160b0:    91 b1             	r1 |= 8			  ## bredr_frame.h:134:24
 1e160b2:    b9 50             	h[r0 + 22] = r1			  ## bredr_frame.h:134:24
 1e160b4:    20 00             	rts			  ## bredr_link.c:3473:1


link_conn_set_encrypt:
 1e160b6:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_link.c:3573:0
 1e160b8:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:307:22
 1e160bc:    9b 50             	h[r0 + 18] = r3			  ## bredr_frame.c:307:22
 1e160be:    a3 50             	r3 = h[r0 + 20] (u)			  ## bredr_frame.c:308:22
 1e160c0:    33 fd 60 39       	r3 = r3 & 4294967199			  ## bredr_frame.c:308:22
 1e160c4:    ab 50             	h[r0 + 20] = r3			  ## bredr_frame.c:308:22
 1e160c6:    93 50             	r3 = h[r0 + 18] (u)			  ## bredr_frame.c:309:22
 1e160c8:    89 c1             	r1 = r1 << 6			  ## bredr_frame.c:309:33
 1e160ca:    52 c1             	r2 = r2 << 5			  ## bredr_frame.c:309:49
 1e160cc:    51 b4             	r1 |= r2			  ## bredr_frame.c:309:39
 1e160ce:    e0 fd 10 23       	r2 = r3 | r1			  ## bredr_frame.c:309:22
 1e160d2:    9a 50             	h[r0 + 18] = r2			  ## bredr_frame.c:309:22
 1e160d4:    a2 50             	r2 = h[r0 + 20] (u)			  ## bredr_frame.c:310:22
 1e160d6:    51 b4             	r1 |= r2			  ## bredr_frame.c:310:22
 1e160d8:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:310:22
 1e160da:    20 00             	rts			  ## bredr_link.c:3575:1


slot_timer_disable:
 1e160dc:    34 00             	[--sp] = rets			  ## bredr_slot_timer.c:214:0
 1e160de:    02 08             	r2 = r0			  ## bredr_slot_timer.c:214:0
 1e160e0:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:216:5
 1e160e4:    02 e1 02 30       	if (r2 < 16) goto 4 <slot_timer_disable+0x10 : 1e160ec >
 1e160e8:    8f f3 0a 69       	call 2019860 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e160ec:    c0 ff ac 00 1c 00 	r0 = 1835180 <uECC_vli_cmp_unsafe+0xB90B0 : 1c00ac >
 1e160f2:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:219:22
 1e160f4:    13 70             	r3 = 1			  ## bredr_slot_timer.c:219:26
 1e160f6:    f8 fd 20 23       	r2 = r3 << r2			  ## bredr_slot_timer.c:219:26
 1e160fa:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:219:22
 1e160fe:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:219:22
 1e16100:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:220:23
 1e16102:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:220:23
 1e16104:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:220:23
 1e16106:    30 00             	pc = [sp++]			  ## bredr_slot_timer.c:221:1


slot_timer_put:
 1e16108:    74 01             	[--sp] = {rets, r4}			  ## bredr_slot_timer.c:198:0
 1e1610a:    04 08             	r4 = r0			  ## bredr_slot_timer.c:198:0
 1e1610c:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:200:5
 1e16110:    04 e1 02 30       	if (r4 < 16) goto 4 <slot_timer_put+0x10 : 1e16118 >
 1e16114:    8f f3 f4 68       	call 2019816 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e16118:    97 f3 40 86       	call 3083392 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:203:5
 1e1611c:    40 08             	r0 = r4			  ## bredr_slot_timer.c:205:5
 1e1611e:    de 17             	call -68 <slot_timer_disable : 1e160dc >			  ## bredr_slot_timer.c:205:5
 1e16120:    c0 ff ac 2c 00 00 	r0 = 11436 <bredr_link_v : 2cac >			  ## bredr_slot_timer.c:207:23
 1e16126:    01 f7 a0 00       	r1 = h[r0 + 160] (u)			  ## bredr_slot_timer.c:206:24
 1e1612a:    12 70             	r2 = 1			  ## bredr_slot_timer.c:206:28
 1e1612c:    02 0d             	r2 <<= r4			  ## bredr_slot_timer.c:206:28
 1e1612e:    e3 fd 20 11       	r1 = r1 & ~r2			  ## bredr_slot_timer.c:206:24
 1e16132:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:206:24
 1e16136:    e1 c0             	r1 = r4 << 3			  ## bredr_slot_timer.c:207:23
 1e16138:    10 09             	r0 += r1			  ## bredr_slot_timer.c:207:23
 1e1613a:    c9 f4 00 09       	[r0 + 36] = 0			  ## bredr_slot_timer.c:207:28
 1e1613e:    14 01             	{rets, r4} = [sp++]			  ## bredr_slot_timer.c:209:5
 1e16140:    d7 f3 2a 86       	goto 3083348 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:209:5


bredr_link_enable_afh:
 1e16144:    7b 01             	[--sp] = {rets, r11-r4}			  ## bredr_link.c:4424:0
 1e16146:    fa 0b             	sp += -12			  ## bredr_link.c:4424:0
 1e16148:    04 08             	r4 = r0			  ## bredr_link.c:4424:0
 1e1614a:    97 f3 27 86       	call 3083342 <local_irq_disable : 106d9c >			  ## bredr_link.c:4427:5
 1e1614e:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4428:13
 1e16150:    00 ff ff 00 03 00 	if (r0 == 255) goto 6 <bredr_link_enable_afh+0x18 : 1e1615c >			  ## bredr_link.c:4428:13
 1e16156:    d8 17             	call -80 <slot_timer_put : 1e16108 >			  ## bredr_link.c:4429:9
 1e16158:    f0 7f             	r0 = 255			  ## bredr_link.c:4430:23
 1e1615a:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4430:23
 1e1615c:    97 f3 1c 86       	call 3083320 <local_irq_enable : 106d98 >			  ## bredr_link.c:4432:5
 1e16160:    00 70             	r0 = 0			  ## bredr_link.c:4432:5
 1e16162:    10 f9 2a 40       	b[r4 + 42] = r0			  ## bredr_link.c:4434:28
 1e16166:    08 f6 d0 40       	r8 = [r4 + 208]			  ## bredr_link.c:4435:22
 1e1616a:    90 f5 08 00       	h[sp+8] = r0			  ## bredr_frame.c:2461:5
 1e1616e:    18 02             	[sp+4] = r0			  ## bredr_frame.c:2461:5
 1e16170:    08 02             	[sp] = r0			  ## bredr_frame.c:2461:5
 1e16172:    49 fc 20 00       	r9 = r4 + 32			  ## bredr_link.c:4435:36
 1e16176:    2a 70             	r10 = 2
 1e16178:    1b 70             	r11 = 1
 1e1617a:    03 fa 00 90       	r3 = b[r9+r0] (u)			  ## bredr_frame.c:2465:16
 1e1617e:    41 d8             	r1 = r0 >>> 1			  ## bredr_frame.c:2466:18
 1e16180:    02 a0             	r2 = sp + 0
 1e16182:    44 b4             	r4 = r2 + r1
 1e16184:    52 98             	r2 = r4 + 5
 1e16186:    05 70             	r5 = 0
 1e16188:    f0 fe a0 65       	r6 = r5 % r10 (s)			  ## bredr_frame.c:2469:53
 1e1618c:    69 d8             	r1 = r5 >>> 1			  ## bredr_frame.c:2469:42
 1e1618e:    61 09             	r1 += r6			  ## bredr_frame.c:2469:48
 1e16190:    f8 fd 50 7b       	r7 = r11 << r5			  ## bredr_frame.c:2469:27
 1e16194:    57 b7             	r7 &= r3			  ## bredr_frame.c:2469:25
 1e16196:    fa fd 10 17       	r1 = r7 >> r1			  ## bredr_frame.c:2469:35
 1e1619a:    0f c1             	r7 = r1 << 4			  ## bredr_frame.c:2471:29
 1e1619c:    00 f3 01 00       	if ((r0 & 1) == 0) goto 2 <bredr_link_enable_afh+0x5E : 1e161a2 >
 1e161a0:    71 08             	r1 = r7			  ## bredr_frame.c:2470:17
 1e161a2:    27 08             	r7 = r2			  ## bredr_frame.c:2473:17
 1e161a4:    01 3c             	if (r6 != 0) goto 2 <bredr_link_enable_afh+0x64 : 1e161a8 >			  ## bredr_frame.c:2473:17
 1e161a6:    47 08             	r7 = r4			  ## bredr_frame.c:2473:17
 1e161a8:    06 6e             	r6 = b[r7 + 0] (u)
 1e161aa:    51 bc             	r1 |= r6
 1e161ac:    15 80             	r5 += 1			  ## bredr_frame.c:2468:29
 1e161ae:    09 6e             	b[r7 + 0] = r1
 1e161b0:    85 e0 ea 1f       	if (r5 != 8) goto -44 <bredr_link_enable_afh+0x44 : 1e16188 >
 1e161b4:    10 80             	r0 += 1			  ## bredr_frame.c:2464:26
 1e161b6:    a0 e0 e0 1f       	if (r0 != 10) goto -64 <bredr_link_enable_afh+0x36 : 1e1617a >
 1e161ba:    84 fc 4c 01       	r4 = r8 + 332			  ## bredr_frame.c:2526:30
 1e161be:    01 70             	r1 = 0			  ## bredr_frame.c:2481:5
 1e161c0:    02 75             	r2 = 80			  ## bredr_frame.c:2481:5
 1e161c2:    07 70             	r7 = 0			  ## bredr_frame.c:2481:5
 1e161c4:    40 08             	r0 = r4			  ## bredr_frame.c:2481:5
 1e161c6:    97 f3 93 86       	call 3083558 <memset : 106ef0 >			  ## bredr_frame.c:2481:5
 1e161ca:    10 70             	r0 = 1
 1e161cc:    01 70             	r1 = 0
 1e161ce:    72 08             	r2 = r7
 1e161d0:    03 70             	r3 = 0
 1e161d2:    05 a0             	r5 = sp + 0
 1e161d4:    05 fa 00 51       	r5 = b[r5+r1] (u)			  ## bredr_frame.c:2488:17
 1e161d8:    f8 fd 30 60       	r6 = r0 << r3			  ## bredr_frame.c:2488:24
 1e161dc:    65 f0 02 00       	if ((r5 & r6) == 0) goto 4 <bredr_link_enable_afh+0xA0 : 1e161e4 >			  ## bredr_frame.c:2488:24
 1e161e0:    92 f9 01 40       	b[r4 ++= 1] = r2			  ## bredr_frame.c:2489:30
 1e161e4:    13 80             	r3 += 1			  ## bredr_frame.c:2487:29
 1e161e6:    22 80             	r2 += 2			  ## bredr_frame.c:2491:23
 1e161e8:    83 e0 f3 1f       	if (r3 != 8) goto -26 <bredr_link_enable_afh+0x8E : 1e161d2 >			  ## bredr_frame.c:2491:23
 1e161ec:    02 9f             	r2 = r7 + 16			  ## bredr_frame.c:2487:9
 1e161ee:    17 70             	r7 = 1			  ## bredr_frame.c:2487:9
 1e161f0:    41 e0 01 00       	if (r1 == 4) goto 2 <bredr_link_enable_afh+0xB2 : 1e161f6 >
 1e161f4:    27 08             	r7 = r2			  ## bredr_frame.c:2493:13
 1e161f6:    11 80             	r1 += 1			  ## bredr_frame.c:2486:35
 1e161f8:    a1 e0 e9 1f       	if (r1 != 10) goto -46 <bredr_link_enable_afh+0x8A : 1e161ce >
 1e161fc:    00 70             	r0 = 0
 1e161fe:    01 70             	r1 = 0
 1e16200:    02 fa 00 91       	r2 = b[r9+r1] (u)
 1e16204:    03 70             	r3 = 0
 1e16206:    14 70             	r4 = 1
 1e16208:    f8 fd 30 54       	r5 = r4 << r3			  ## bredr_frame.c:2531:34
 1e1620c:    52 f1 01 00       	if ((r2 & r5) != 0) goto 2 <bredr_link_enable_afh+0xCE : 1e16212 >			  ## bredr_frame.c:2531:34
 1e16210:    04 70             	r4 = 0			  ## bredr_frame.c:2531:17
 1e16212:    13 80             	r3 += 1			  ## bredr_frame.c:2530:29
 1e16214:    40 09             	r0 += r4			  ## bredr_frame.c:2531:17
 1e16216:    83 e0 f6 1f       	if (r3 != 8) goto -20 <bredr_link_enable_afh+0xC2 : 1e16206 >
 1e1621a:    11 80             	r1 += 1			  ## bredr_frame.c:2529:35
 1e1621c:    a1 e0 f0 1f       	if (r1 != 10) goto -32 <bredr_link_enable_afh+0xBC : 1e16200 >
 1e16220:    90 b3             	r0 |= 128
 1e16222:    10 f7 34 80       	h[r8 + 52] = r0			  ## bredr_frame.c:2538:23
 1e16226:    c0 f5 01 00       	r0 = b[sp+1] (u)			  ## bredr_frame.c:2539:35
 1e1622a:    c1 f5 00 00       	r1 = b[sp] (u)			  ## bredr_frame.c:2539:25
 1e1622e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2539:32
 1e16232:    11 f7 36 80       	h[r8 + 54] = r1			  ## bredr_frame.c:2539:23
 1e16236:    c0 f5 03 00       	r0 = b[sp+3] (u)			  ## bredr_frame.c:2540:35
 1e1623a:    c1 f5 02 00       	r1 = b[sp+2] (u)			  ## bredr_frame.c:2540:25
 1e1623e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2540:32
 1e16242:    11 f7 38 80       	h[r8 + 56] = r1			  ## bredr_frame.c:2540:23
 1e16246:    c0 f5 05 00       	r0 = b[sp+5] (u)			  ## bredr_frame.c:2541:35
 1e1624a:    c1 f5 04 00       	r1 = b[sp+4] (u)			  ## bredr_frame.c:2541:25
 1e1624e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2541:32
 1e16252:    11 f7 3a 80       	h[r8 + 58] = r1			  ## bredr_frame.c:2541:23
 1e16256:    c0 f5 07 00       	r0 = b[sp+7] (u)			  ## bredr_frame.c:2542:35
 1e1625a:    c1 f5 06 00       	r1 = b[sp+6] (u)			  ## bredr_frame.c:2542:25
 1e1625e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2542:32
 1e16262:    11 f7 3c 80       	h[r8 + 60] = r1			  ## bredr_frame.c:2542:23
 1e16266:    c0 f5 09 00       	r0 = b[sp+9] (u)			  ## bredr_frame.c:2543:35
 1e1626a:    c1 f5 08 00       	r1 = b[sp+8] (u)			  ## bredr_frame.c:2543:25
 1e1626e:    d8 fd 40 10       	r1 <= insert(r0, p:8, l:24)			  ## bredr_frame.c:2543:32
 1e16272:    11 f7 3e 80       	h[r8 + 62] = r1			  ## bredr_frame.c:2543:23
 1e16276:    06 0a             	sp += 12			  ## bredr_frame.c:2543:23
 1e16278:    5b 01             	{pc, r11-r4} = [sp++]			  ## bredr_link.c:4452:1


READ_SLOT_CLK:
 1e1627a:    c1 ff b4 00 1c 00 	r1 = 1835188 <uECC_vli_cmp_unsafe+0xB90B8 : 1c00b4 >			  ## bredr_frame.c:127:0
 1e16280:    00 42             	r0 = [r1 + 0]			  ## bredr_frame.c:131:25
 1e16282:    12 42             	r2 = [r1 + 4]			  ## bredr_frame.c:132:25
 1e16284:    03 42             	r3 = [r1 + 0]			  ## bredr_frame.c:134:31
 1e16286:    30 f2 fb 1f       	if (r0 != r3) goto -10 <READ_SLOT_CLK+0x6 : 1e16280 >			  ## bredr_frame.c:134:5
 1e1628a:    11 c4             	r1 = r2 << 16			  ## bredr_frame.c:135:44
 1e1628c:    50 b2             	r0 |= r1			  ## bredr_frame.c:135:27
 1e1628e:    40 d0             	r0 = r0 >> 1			  ## bredr_frame.c:135:52
 1e16290:    20 00             	rts			  ## bredr_frame.c:135:5


bredr_get_link_slot_clk:
 1e16292:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_link.c:4392:0
 1e16294:    24 08             	r4 = r2			  ## bredr_link.c:4392:0
 1e16296:    15 08             	r5 = r1			  ## bredr_link.c:4392:0
 1e16298:    06 08             	r6 = r0			  ## bredr_link.c:4392:0
 1e1629a:    ef 17             	call -34 <READ_SLOT_CLK : 1e1627a >			  ## bredr_link.c:4396:17
 1e1629c:    01 f6 d0 60       	r1 = [r6 + 208]			  ## bredr_link.c:4397:61
 1e162a0:    01 f6 3c 12       	r1 = [r1 + 572]			  ## bredr_frame.c:190:19
 1e162a4:    49 d8             	r1 = r1 >>> 1			  ## bredr_link.c:4397:68
 1e162a6:    02 b2             	r2 = r1 + r0			  ## bredr_link.c:4397:33
 1e162a8:    f2 ef 09 d0       	ifs (r2 <= -1) goto 18 <bredr_get_link_slot_clk+0x2C : 1e162be >
 1e162ac:    41 fb f8 2c       	r1 = r2 + 4160749568			  ## bredr_link.c:4402:33
 1e162b0:    c3 ff ff ff ff 07 	r3 = 134217727 <bank_code_load_addr+0x1E5753 : 1ffffff >			  ## bredr_link.c:4401:27
 1e162b6:    32 f2 04 c0       	ifs (r2 > r3) goto 8 <bredr_get_link_slot_clk+0x30 : 1e162c2 >			  ## bredr_link.c:4401:27
 1e162ba:    21 08             	r1 = r2			  ## bredr_link.c:4401:16
 1e162bc:    02 18             	goto 4 <bredr_get_link_slot_clk+0x30 : 1e162c2 >
 1e162be:    41 fb 08 2c       	r1 = r2 + 134217728			  ## bredr_link.c:4400:32
 1e162c2:    01 2a             	if (r5 == 0) goto 2 <bredr_get_link_slot_clk+0x34 : 1e162c6 >
 1e162c4:    09 4a             	[r5 + 0] = r1			  ## bredr_link.c:4408:15
 1e162c6:    01 28             	if (r4 == 0) goto 2 <bredr_get_link_slot_clk+0x38 : 1e162ca >
 1e162c8:    08 48             	[r4 + 0] = r0			  ## bredr_link.c:4412:15
 1e162ca:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_link.c:4414:1


slot_timer_get:
 1e162cc:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_slot_timer.c:128:0
 1e162ce:    97 f3 65 85       	call 3082954 <local_irq_disable : 106d9c >			  ## bredr_slot_timer.c:129:5
 1e162d2:    c0 ff ac 2c 00 00 	r0 = 11436 <bredr_link_v : 2cac >			  ## bredr_slot_timer.c:129:5
 1e162d8:    01 f7 a0 00       	r1 = h[r0 + 160] (u)
 1e162dc:    04 70             	r4 = 0
 1e162de:    12 70             	r2 = 1
 1e162e0:    03 70             	r3 = 0
 1e162e2:    f8 fd 30 52       	r5 = r2 << r3			  ## bredr_slot_timer.c:132:36
 1e162e6:    51 f0 0a 00       	if ((r1 & r5) == 0) goto 20 <slot_timer_get+0x32 : 1e162fe >			  ## bredr_slot_timer.c:132:13
 1e162ea:    13 80             	r3 += 1			  ## bredr_slot_timer.c:131:30
 1e162ec:    14 80             	r4 += 1			  ## bredr_slot_timer.c:131:23
 1e162ee:    03 e1 f8 bf       	ifs (r3 < 16) goto -16 <slot_timer_get+0x16 : 1e162e2 >			  ## bredr_slot_timer.c:131:23
 1e162f2:    97 f3 51 85       	call 3082914 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:139:5
 1e162f6:    8f f3 03 68       	call 2019334 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e162fa:    f4 7f             	r4 = 255			  ## cpu.h:148:5
 1e162fc:    05 18             	goto 10 <slot_timer_get+0x3C : 1e16308 >			  ## cpu.h:148:5
 1e162fe:    51 ba             	r1 |= r5			  ## bredr_slot_timer.c:133:32
 1e16300:    11 f7 a0 00       	h[r0 + 160] = r1			  ## bredr_slot_timer.c:133:32
 1e16304:    97 f3 48 85       	call 3082896 <local_irq_enable : 106d98 >			  ## bredr_slot_timer.c:134:13
 1e16308:    00 05             	r0 = r4.b0 (u)			  ## bredr_slot_timer.c:148:1
 1e1630a:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_slot_timer.c:148:1


slot_timer_set_finecnt:
 1e1630c:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:161:0
 1e1630e:    14 08             	r4 = r1			  ## bredr_slot_timer.c:161:0
 1e16310:    05 08             	r5 = r0			  ## bredr_slot_timer.c:161:0
 1e16312:    05 e1 02 30       	if (r5 < 16) goto 4 <slot_timer_set_finecnt+0xE : 1e1631a >			  ## bredr_slot_timer.c:161:0
 1e16316:    8f f3 f3 67       	call 2019302 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e1631a:    40 02             	r0 = [sp+16]
 1e1631c:    e9 c0             	r1 = r5 << 3			  ## bredr_slot_timer.c:163:23
 1e1631e:    c6 ff ac 2c 00 00 	r6 = 11436 <bredr_link_v : 2cac >			  ## bredr_slot_timer.c:164:23
 1e16324:    16 09             	r6 += r1			  ## bredr_slot_timer.c:163:23
 1e16326:    8a 4c             	[r6 + 32] = r2			  ## bredr_slot_timer.c:163:28
 1e16328:    41 fb f8 3c       	r1 = r3 + 4160749568			  ## bredr_slot_timer.c:64:14
 1e1632c:    c2 ff ff ff ff 07 	r2 = 134217727 <bank_code_load_addr+0x1E5753 : 1ffffff >			  ## bredr_slot_timer.c:63:14
 1e16332:    9c 4c             	[r6 + 36] = r4			  ## bredr_slot_timer.c:164:28
 1e16334:    23 f2 01 c0       	ifs (r3 > r2) goto 2 <slot_timer_set_finecnt+0x2E : 1e1633a >			  ## bredr_slot_timer.c:164:28
 1e16338:    31 08             	r1 = r3			  ## bredr_slot_timer.c:63:9
 1e1633a:    22 70             	r2 = 2
 1e1633c:    e0 fe 20 11       	r1 = r1 / r2 (s)			  ## bredr_slot_timer.c:66:34
 1e16340:    c2 ff 68 00 1c 00 	r2 = 1835112 <uECC_vli_cmp_unsafe+0xB906C : 1c0068 >			  ## bredr_slot_timer.c:66:5
 1e16346:    b1 f6 00 25       	[r2+r5<<2] = r1			  ## bredr_slot_timer.c:66:27
 1e1634a:    20 04             	r0 = r0.l (u)			  ## bredr_slot_timer.c:67:29
 1e1634c:    21 fc c0 ff       	r1 = r2 + -64			  ## bredr_slot_timer.c:67:5
 1e16350:    b0 f6 00 15       	[r1+r5<<2] = r0			  ## bredr_slot_timer.c:67:27
 1e16354:    10 fc 84 00       	r0 = r1 + 132			  ## bredr_slot_timer.c:67:27
 1e16358:    11 40             	r1 = [r0 + 4]			  ## bredr_slot_timer.c:69:23
 1e1635a:    12 70             	r2 = 1			  ## bredr_slot_timer.c:69:26
 1e1635c:    42 0d             	r2 <<= r5			  ## bredr_slot_timer.c:69:26
 1e1635e:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:69:23
 1e16360:    19 40             	[r0 + 4] = r1			  ## bredr_slot_timer.c:69:23
 1e16362:    01 40             	r1 = [r0 + 0]			  ## bredr_slot_timer.c:70:22
 1e16364:    51 b4             	r1 |= r2			  ## bredr_slot_timer.c:70:22
 1e16366:    09 40             	[r0 + 0] = r1			  ## bredr_slot_timer.c:70:22
 1e16368:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:166:1


slot_timer_set_ext:
 1e1636a:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_slot_timer.c:169:0
 1e1636c:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:169:0
 1e1636e:    c4 ff bc 00 1c 00 	r4 = 1835196 <uECC_vli_cmp_unsafe+0xB90C0 : 1c00bc >			  ## bredr_slot_timer.c:170:19
 1e16374:    05 48             	r5 = [r4 + 0]			  ## bredr_slot_timer.c:170:19
 1e16376:    54 02             	r4 = [sp+20]
 1e16378:    00 f3 06 30       	if ((r3 & 1) == 0) goto 12 <slot_timer_set_ext+0x1E : 1e16388 >
 1e1637c:    55 fc 71 02       	r5 = r5 + 625			  ## bredr_slot_timer.c:172:28
 1e16380:    06 fb e2 04       	r6 = 1250 <BTCTLER_CONTROLLER_DATA_SIZE+0x24 : 4e2 >			  ## bredr_slot_timer.c:172:35
 1e16384:    f0 fe 60 55       	r5 = r5 % r6 (s)			  ## bredr_slot_timer.c:172:35
 1e16388:    06 fb ff 07       	r6 = 2047 <report_data_size+0x1F : 7ff >			  ## bredr_slot_timer.c:174:5
 1e1638c:    55 bd             	r5 &= r6			  ## bredr_slot_timer.c:174:5
 1e1638e:    43 09             	r3 += r4			  ## bredr_slot_timer.c:174:55
 1e16390:    0d 02             	[sp] = r5			  ## bredr_slot_timer.c:174:5
 1e16392:    bc 17             	call -136 <slot_timer_set_finecnt : 1e1630c >			  ## bredr_slot_timer.c:174:5
 1e16394:    02 0a             	sp += 4
 1e16396:    56 01             	{pc, r6-r4} = [sp++]			  ## bredr_slot_timer.c:175:1


slot_timer_set:
 1e16398:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_slot_timer.c:178:0
 1e1639a:    fe 0b             	sp += -4			  ## bredr_slot_timer.c:178:0
 1e1639c:    34 08             	r4 = r3			  ## bredr_slot_timer.c:178:0
 1e1639e:    25 08             	r5 = r2			  ## bredr_slot_timer.c:178:0
 1e163a0:    16 08             	r6 = r1			  ## bredr_slot_timer.c:178:0
 1e163a2:    07 08             	r7 = r0			  ## bredr_slot_timer.c:178:0
 1e163a4:    28 fb 00 03       	r0 = rets			  ## bredr_slot_timer.c:180:5
 1e163a8:    07 e1 02 30       	if (r7 < 16) goto 4 <slot_timer_set+0x18 : 1e163b0 >
 1e163ac:    8f f3 a8 67       	call 2019152 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e163b0:    64 17             	call -312 <READ_SLOT_CLK : 1e1627a >			  ## bredr_slot_timer.c:183:48
 1e163b2:    08 02             	[sp] = r0			  ## bredr_slot_timer.c:183:5
 1e163b4:    70 08             	r0 = r7			  ## bredr_slot_timer.c:183:5
 1e163b6:    61 08             	r1 = r6			  ## bredr_slot_timer.c:183:5
 1e163b8:    52 08             	r2 = r5			  ## bredr_slot_timer.c:183:5
 1e163ba:    43 08             	r3 = r4			  ## bredr_slot_timer.c:183:5
 1e163bc:    d6 17             	call -84 <slot_timer_set_ext : 1e1636a >			  ## bredr_slot_timer.c:183:5
 1e163be:    02 0a             	sp += 4			  ## bredr_slot_timer.c:183:5
 1e163c0:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_slot_timer.c:184:1


bredr_link_set_afh:
 1e163c2:    77 01             	[--sp] = {rets, r7-r4}			  ## bredr_link.c:4503:0
 1e163c4:    fe 0b             	sp += -4			  ## bredr_link.c:4503:0
 1e163c6:    36 08             	r6 = r3			  ## bredr_link.c:4503:0
 1e163c8:    15 08             	r5 = r1			  ## bredr_link.c:4503:0
 1e163ca:    04 08             	r4 = r0			  ## bredr_link.c:4503:0
 1e163cc:    34 24             	if (r2 == 0) goto 104 <bredr_link_set_afh+0x74 : 1e16436 >			  ## bredr_link.c:4503:0
 1e163ce:    47 fc 28 00       	r7 = r4 + 40			  ## bredr_link.c:4503:0
 1e163d2:    20 6e             	r0 = b[r7 + 2] (u)			  ## bredr_link.c:4513:13
 1e163d4:    05 20             	if (r0 == 0) goto 10 <bredr_link_set_afh+0x1E : 1e163e0 >			  ## bredr_link.c:4513:13
 1e163d6:    d0 4f             	r0 = [r7 + 116]			  ## bredr_link.c:4515:17
 1e163d8:    50 f2 4d 00       	if (r0 == r5) goto 154 <bredr_link_set_afh+0xB4 : 1e16476 >			  ## bredr_link.c:4515:17
 1e163dc:    40 08             	r0 = r4			  ## bredr_link.c:4518:9
 1e163de:    b2 16             	call -668 <bredr_link_enable_afh : 1e16144 >			  ## bredr_link.c:4518:9
 1e163e0:    10 70             	r0 = 1			  ## bredr_link.c:4521:28
 1e163e2:    28 6e             	b[r7 + 2] = r0			  ## bredr_link.c:4521:28
 1e163e4:    40 fc 20 00       	r0 = r4 + 32			  ## bredr_link.c:4523:5
 1e163e8:    a2 70             	r2 = 10			  ## bredr_link.c:4523:5
 1e163ea:    61 08             	r1 = r6			  ## bredr_link.c:4523:5
 1e163ec:    97 f3 7a 85       	call 3082996 <memcpy : 106ee4 >			  ## bredr_link.c:4523:5
 1e163f0:    40 08             	r0 = r4			  ## bredr_link.c:4525:17
 1e163f2:    bf f3 75 fc       	call -1814 <lmp_sniff_and_afh_offset_ali : 1e15ce0 >			  ## bredr_link.c:4525:17
 1e163f6:    06 08             	r6 = r0			  ## bredr_link.c:4525:17
 1e163f8:    01 a0             	r1 = sp + 0
 1e163fa:    02 70             	r2 = 0			  ## bredr_link.c:4419:5
 1e163fc:    40 08             	r0 = r4			  ## bredr_link.c:4419:5
 1e163fe:    49 17             	call -366 <bredr_get_link_slot_clk : 1e16292 >			  ## bredr_link.c:4419:5
 1e16400:    40 bd             	r0 = r6 + r5			  ## bredr_link.c:4525:14
 1e16402:    01 02             	r1 = [sp]			  ## bredr_link.c:4420:12
 1e16404:    c2 ff fe ff ff 07 	r2 = 134217726 <bank_code_load_addr+0x1E5752 : 1fffffe >			  ## bredr_link.c:4532:26
 1e1640a:    02 09             	r2 += r0			  ## bredr_link.c:4532:26
 1e1640c:    30 fd f8 2c       	r0 = r2 & 134217727			  ## bredr_link.c:4532:31
 1e16410:    10 f2 16 20       	if (r0 >= r1) goto 44 <bredr_link_set_afh+0x7E : 1e16440 >
 1e16414:    20 b2             	r0 = r1 - r0			  ## bredr_link.c:4537:30
 1e16416:    c3 ff fe ff ff 0f 	r3 = 268435454 <bank_code_load_addr+0x1E5752 : 1fffffe >			  ## bredr_link.c:4537:42
 1e1641c:    e2 fd 30 50       	r5 = r0 & r3			  ## bredr_link.c:4537:42
 1e16420:    c6 ff 01 b0 1e 04 	r6 = 69120001 <uECC_vli_cmp_unsafe+0xE4005 : 1eb001 >			  ## bredr_link.c:4538:13
 1e16426:    20 70             	r0 = 2			  ## bredr_link.c:4538:13
 1e16428:    65 f2 0f 30       	if (r5 < r6) goto 30 <bredr_link_set_afh+0x88 : 1e1644a >			  ## bredr_link.c:4538:13
 1e1642c:    00 fd 08 2c       	r0 = r2 | 134217728			  ## bredr_link.c:4539:33
 1e16430:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4539:46
 1e16432:    50 b7             	r0 &= r3			  ## bredr_link.c:4539:58
 1e16434:    0a 18             	goto 20 <bredr_link_set_afh+0x88 : 1e1644a >
 1e16436:    00 f6 d0 40       	r0 = [r4 + 208]			  ## bredr_link.c:4506:57
 1e1643a:    01 70             	r1 = 0			  ## bredr_frame.c:2501:19
 1e1643c:    a9 51             	h[r0 + 52] = r1			  ## bredr_frame.c:2501:19
 1e1643e:    1b 18             	goto 54 <bredr_link_set_afh+0xB4 : 1e16476 >			  ## bredr_frame.c:2501:19
 1e16440:    60 b0             	r0 = r0 - r1			  ## bredr_link.c:4535:28
 1e16442:    c1 ff fe ff ff 0f 	r1 = 268435454 <bank_code_load_addr+0x1E5752 : 1fffffe >			  ## bredr_link.c:4535:42
 1e16448:    50 b3             	r0 &= r1			  ## bredr_link.c:4535:42
 1e1644a:    25 70             	r5 = 2			  ## bredr_link.c:4544:9
 1e1644c:    20 e0 01 80       	if (r0 > 2) goto 2 <bredr_link_set_afh+0x90 : 1e16452 >			  ## bredr_link.c:4544:9
 1e16450:    20 70             	r0 = 2			  ## bredr_link.c:4544:9
 1e16452:    c1 ff 00 b0 1e 04 	r1 = 69120000 <uECC_vli_cmp_unsafe+0xE4004 : 1eb000 >			  ## bredr_link.c:4548:16
 1e16458:    10 f2 01 80       	if (r0 > r1) goto 2 <bredr_link_set_afh+0x9C : 1e1645e >
 1e1645c:    05 08             	r5 = r0			  ## bredr_link.c:4548:9
 1e1645e:    90 68             	r0 = b[r4 + 9] (u)			  ## bredr_link.c:4551:13
 1e16460:    01 ff ff 00 02 00 	if (r0 != 255) goto 4 <bredr_link_set_afh+0xA8 : 1e1646a >			  ## bredr_link.c:4551:13
 1e16466:    32 17             	call -412 <slot_timer_get : 1e162cc >			  ## bredr_link.c:4552:25
 1e16468:    98 68             	b[r4 + 9] = r0			  ## bredr_link.c:4552:23
 1e1646a:    c1 ff 44 61 e1 01 	r1 = 31547716 <bredr_link_enable_afh : 1e16144 >			  ## bredr_link.c:4554:5
 1e16470:    42 08             	r2 = r4			  ## bredr_link.c:4554:5
 1e16472:    53 08             	r3 = r5			  ## bredr_link.c:4554:5
 1e16474:    91 17             	call -222 <slot_timer_set : 1e16398 >			  ## bredr_link.c:4554:5
 1e16476:    02 0a             	sp += 4
 1e16478:    57 01             	{pc, r7-r4} = [sp++]			  ## bredr_link.c:4565:1


__write_reg_txinfo:
 1e1647a:    75 01             	[--sp] = {rets, r5, r4}			  ## bredr_frame.c:112:0
 1e1647c:    44 02             	r4 = [sp+16]			  ## bredr_frame.c:112:0
 1e1647e:    35 02             	r5 = [sp+12]			  ## bredr_frame.c:112:0
 1e16480:    0e 22             	if (r1 == 0) goto 28 <__write_reg_txinfo+0x24 : 1e1649e >			  ## bredr_frame.c:112:0
 1e16482:    2a 51             	h[r0 + 36] = r2			  ## bredr_frame.c:119:25
 1e16484:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:120:37
 1e16486:    39 51             	h[r0 + 38] = r1			  ## bredr_frame.c:120:25
 1e16488:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:121:32
 1e1648a:    51 ba             	r1 |= r5			  ## bredr_frame.c:121:38
 1e1648c:    11 b1             	r1 |= 4			  ## bredr_frame.c:121:27
 1e1648e:    f9 50             	h[r0 + 30] = r1			  ## bredr_frame.c:121:25
 1e16490:    a1 50             	r1 = h[r0 + 20] (u)			  ## bredr_frame.c:122:47
 1e16492:    31 fd 1f 19       	r1 = r1 & 4294967264			  ## bredr_frame.c:122:57
 1e16496:    51 b8             	r1 |= r4			  ## bredr_frame.c:122:37
 1e16498:    11 b2             	r1 |= 16			  ## bredr_frame.c:122:68
 1e1649a:    a9 50             	h[r0 + 20] = r1			  ## bredr_frame.c:122:26
 1e1649c:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1
 1e1649e:    0a 51             	h[r0 + 32] = r2			  ## bredr_frame.c:114:25
 1e164a0:    11 d4             	r1 = r2 >> 16			  ## bredr_frame.c:115:37
 1e164a2:    19 51             	h[r0 + 34] = r1			  ## bredr_frame.c:115:25
 1e164a4:    d9 c0             	r1 = r3 << 3			  ## bredr_frame.c:116:32
 1e164a6:    51 ba             	r1 |= r5			  ## bredr_frame.c:116:38
 1e164a8:    11 b1             	r1 |= 4			  ## bredr_frame.c:116:27
 1e164aa:    e9 50             	h[r0 + 28] = r1			  ## bredr_frame.c:116:25
 1e164ac:    91 50             	r1 = h[r0 + 18] (u)			  ## bredr_frame.c:117:36
 1e164ae:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## bredr_frame.c:117:46
 1e164b2:    51 b8             	r1 |= r4			  ## bredr_frame.c:117:57
 1e164b4:    99 50             	h[r0 + 18] = r1			  ## bredr_frame.c:117:26
 1e164b6:    55 01             	{pc, r5, r4} = [sp++]			  ## bredr_frame.c:124:1


__clean_reg_txempty:
 1e164b8:    40 85             	r0 += 84			  ## bredr_frame.c:345:0
 1e164ba:    04 22             	if (r1 == 0) goto 8 <__clean_reg_txempty+0xC : 1e164c4 >			  ## bredr_frame.c:345:0
 1e164bc:    11 50             	r1 = h[r0 + 2] (u)			  ## bredr_frame.c:349:27
 1e164be:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:349:27
 1e164c0:    19 50             	h[r0 + 2] = r1			  ## bredr_frame.c:349:27
 1e164c2:    20 00             	rts			  ## bredr_frame.c:351:1
 1e164c4:    01 50             	r1 = h[r0 + 0] (u)			  ## bredr_frame.c:347:27
 1e164c6:    71 b0             	r1 &= 4294967294			  ## bredr_frame.c:347:27
 1e164c8:    09 50             	h[r0 + 0] = r1			  ## bredr_frame.c:347:27
 1e164ca:    20 00             	rts			  ## bredr_frame.c:351:1


link_conn_tx_bulk_avaiable:
 1e164cc:    7a 01             	[--sp] = {rets, r10-r4}			  ## bredr_link.c:2566:0
 1e164ce:    15 08             	r5 = r1			  ## bredr_link.c:2566:0
 1e164d0:    04 08             	r4 = r0			  ## bredr_link.c:2566:0
 1e164d2:    97 f3 63 84       	call 3082438 <local_irq_disable : 106d9c >			  ## bredr_link.c:2569:5
 1e164d6:    c0 ff ac 2c 00 00 	r0 = 11436 <bredr_link_v : 2cac >			  ## bredr_link.c:2569:5
 1e164dc:    01 40             	r1 = [r0 + 0]			  ## bredr_link.c:2569:5
 1e164de:    01 f2 27 00       	if (r1 == r0) goto 78 <link_conn_tx_bulk_avaiable+0x64 : 1e16530 >
 1e164e2:    41 f2 04 00       	if (r1 == r4) goto 8 <link_conn_tx_bulk_avaiable+0x22 : 1e164ee >
 1e164e6:    01 42             	r1 = [r1 + 0]
 1e164e8:    01 f2 fb 1f       	if (r1 != r0) goto -10 <link_conn_tx_bulk_avaiable+0x16 : 1e164e2 >
 1e164ec:    21 18             	goto 66 <link_conn_tx_bulk_avaiable+0x64 : 1e16530 >
 1e164ee:    47 fc d0 00       	r7 = r4 + 208
 1e164f2:    09 f6 00 70       	r9 = [r7 + 0]			  ## bredr_link.c:2575:19
 1e164f6:    09 e0 1b 00       	if (r9 == 0) goto 54 <link_conn_tx_bulk_avaiable+0x64 : 1e16530 >
 1e164fa:    c8 ff 48 0f 00 00 	r8 = 3912 <g_dut_hdl : f48 >
 1e16500:    43 2a             	if (r5 == 0) goto 134 <link_conn_tx_bulk_avaiable+0xBC : 1e16588 >
 1e16502:    60 6a             	r0 = b[r5 + 6] (u)			  ## bredr_link.c:2577:25
 1e16504:    30 e0 1b 10       	if (r0 != 3) goto 54 <link_conn_tx_bulk_avaiable+0x72 : 1e1653e >			  ## bredr_link.c:2577:21
 1e16508:    00 f6 00 80       	r0 = [r8 + 0]			  ## bredr_dut.c:550:10
 1e1650c:    36 20             	if (r0 == 0) goto 108 <link_conn_tx_bulk_avaiable+0xAE : 1e1657a >			  ## bredr_dut.c:550:10
 1e1650e:    40 69             	r0 = b[r4 + 20] (u)			  ## bredr_dut.c:554:13
 1e16510:    34 30             	if (r0 != 0) goto 104 <link_conn_tx_bulk_avaiable+0xAE : 1e1657a >			  ## bredr_dut.c:554:13
 1e16512:    97 f3 43 84       	call 3082374 <local_irq_disable : 106d9c >			  ## bredr_dut.c:559:5
 1e16516:    90 4e             	r0 = [r7 + 36]			  ## bredr_dut.c:531:9
 1e16518:    17 20             	if (r0 == 0) goto 46 <link_conn_tx_bulk_avaiable+0x7C : 1e16548 >			  ## bredr_dut.c:531:9
 1e1651a:    bf f3 1b 73       	call -72138 <bredr_tx_bulk_free : 1e04b54 >			  ## bredr_dut.c:532:9
 1e1651e:    a0 4e             	r0 = [r7 + 40]			  ## bredr_dut.c:533:13
 1e16520:    91 4e             	r1 = [r7 + 36]			  ## bredr_dut.c:533:31
 1e16522:    10 f2 02 10       	if (r0 != r1) goto 4 <link_conn_tx_bulk_avaiable+0x5E : 1e1652a >			  ## bredr_dut.c:533:31
 1e16526:    00 70             	r0 = 0
 1e16528:    a8 4e             	[r7 + 40] = r0			  ## bredr_dut.c:534:28
 1e1652a:    c9 f4 00 79       	[r7 + 36] = 0			  ## bredr_dut.c:536:24
 1e1652e:    0d 18             	goto 26 <link_conn_tx_bulk_avaiable+0x7E : 1e1654a >			  ## bredr_dut.c:536:24
 1e16530:    03 2a             	if (r5 == 0) goto 6 <link_conn_tx_bulk_avaiable+0x6C : 1e16538 >
 1e16532:    50 08             	r0 = r5			  ## bredr_link.c:2602:9
 1e16534:    bf f3 0e 73       	call -72164 <bredr_tx_bulk_free : 1e04b54 >			  ## bredr_link.c:2602:9
 1e16538:    1a 01             	{rets, r10-r4} = [sp++]			  ## bredr_link.c:2606:5
 1e1653a:    d7 f3 2d 84       	goto 3082330 <local_irq_enable : 106d98 >			  ## bredr_link.c:2606:5
 1e1653e:    60 4e             	r0 = [r7 + 24]			  ## list.h:154:28
 1e16540:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2590:40
 1e16542:    69 4e             	[r7 + 24] = r1			  ## list.h:137:16
 1e16544:    42 9f             	r2 = r7 + 20			  ## bredr_link.c:2590:52
 1e16546:    1d 18             	goto 58 <link_conn_tx_bulk_avaiable+0xB6 : 1e16582 >
 1e16548:    a0 4e             	r0 = [r7 + 40]
 1e1654a:    02 20             	if (r0 == 0) goto 4 <link_conn_tx_bulk_avaiable+0x84 : 1e16550 >
 1e1654c:    bf f3 02 73       	call -72188 <bredr_tx_bulk_free : 1e04b54 >			  ## bredr_dut.c:539:9
 1e16550:    ca f4 00 79       	[r7 + 40] = 0			  ## bredr_dut.c:541:20
 1e16554:    50 4e             	r0 = [r7 + 20]			  ## bredr_dut.c:543:5
 1e16556:    4a 9f             	r10 = r7 + 20			  ## bredr_dut.c:543:5
 1e16558:    a0 f2 07 00       	if (r0 == r10) goto 14 <link_conn_tx_bulk_avaiable+0x9E : 1e1656a >			  ## bredr_dut.c:543:5
 1e1655c:    46 f6 f0 0f       	r6 = [r0 ++= -16]
 1e16560:    bf f3 f8 72       	call -72208 <bredr_tx_bulk_free : 1e04b54 >			  ## bredr_dut.c:544:9
 1e16564:    60 08             	r0 = r6
 1e16566:    a6 f2 f9 1f       	if (r6 != r10) goto -14 <link_conn_tx_bulk_avaiable+0x90 : 1e1655c >
 1e1656a:    01 70             	r1 = 0			  ## bredr_dut.c:562:5
 1e1656c:    90 08             	r0 = r9			  ## bredr_dut.c:562:5
 1e1656e:    61 15             	call -1342 <__write_reg_packet_type : 1e16032 >			  ## bredr_dut.c:562:5
 1e16570:    11 70             	r1 = 1			  ## bredr_dut.c:563:5
 1e16572:    90 08             	r0 = r9			  ## bredr_dut.c:563:5
 1e16574:    5e 15             	call -1348 <__write_reg_packet_type : 1e16032 >			  ## bredr_dut.c:563:5
 1e16576:    97 f3 0f 84       	call 3082270 <local_irq_enable : 106d98 >			  ## bredr_dut.c:564:5
 1e1657a:    40 4e             	r0 = [r7 + 16]			  ## list.h:154:28
 1e1657c:    01 9b             	r1 = r5 + 16			  ## bredr_link.c:2583:40
 1e1657e:    49 4e             	[r7 + 16] = r1			  ## list.h:137:16
 1e16580:    c2 9e             	r2 = r7 + 12			  ## bredr_link.c:2583:52
 1e16582:    4a 4a             	[r5 + 16] = r2			  ## list.h:138:16
 1e16584:    58 4a             	[r5 + 20] = r0			  ## list.h:139:16
 1e16586:    09 40             	[r0 + 0] = r1			  ## list.h:140:16
 1e16588:    00 f6 00 80       	r0 = [r8 + 0]			  ## bredr_link.c:2593:18
 1e1658c:    d5 31             	if (r0 != 0) goto -86 <link_conn_tx_bulk_avaiable+0x6C : 1e16538 >			  ## bredr_link.c:2593:18
 1e1658e:    40 08             	r0 = r4			  ## bredr_link.c:2594:17
 1e16590:    8f f3 38 73       	call 2025072 <connection_tx_handler : 4c04 >			  ## bredr_link.c:2594:17
 1e16594:    d1 1f             	goto -94 <link_conn_tx_bulk_avaiable+0x6C : 1e16538 >			  ## bredr_link.c:2594:17
 1e16596:    00 00             	nop


sys_event_recode:
 1e16598:    00 70             	r0 = 0			  ## tws_event.c:67:0
 1e1659a:    20 00             	rts			  ## tws_event.c:117:1


update_code_start:
 1e1659c:    76 01             	[--sp] = {rets, r6-r4}			  ## bredr_frame.c:2967:0
 1e1659e:    c5 ff e0 27 00 00 	r5 = 10208 <btctler_bss_start : 27e0 >			  ## bredr_frame.c:2973:37
 1e165a4:    06 f9 41 50       	r6 = b[r5 + 65] (u)			  ## bredr_frame.c:2974:37
 1e165a8:    a0 f6 00 56       	r0 = [r5+r6<<2]			  ## bredr_frame.c:2974:37
 1e165ac:    bf f3 00 fd       	call -1536 <bredr_bd_frame_disable : 1e15fb0 >			  ## bredr_frame.c:2976:5
 1e165b0:    c4 ff 60 eb 00 00 	r4 = 60256 <UPDATA_BREDR_BASE_BEG : eb60 >			  ## bredr_frame.c:2980:5
 1e165b6:    01 70             	r1 = 0			  ## bredr_frame.c:2978:5
 1e165b8:    02 fb 84 03       	r2 = 900 <NVRAM_DATA_SIZE+0x40 : 384 >			  ## bredr_frame.c:2978:5
 1e165bc:    40 08             	r0 = r4			  ## bredr_frame.c:2978:5
 1e165be:    97 f3 97 84       	call 3082542 <memset : 106ef0 >			  ## bredr_frame.c:2978:5
 1e165c2:    40 fc 20 00       	r0 = r4 + 32			  ## bredr_frame.c:2979:5
 1e165c6:    51 fc 40 00       	r1 = r5 + 64			  ## bredr_frame.c:2973:37
 1e165ca:    42 71             	r2 = 20			  ## bredr_frame.c:2979:5
 1e165cc:    97 f3 8a 84       	call 3082516 <memcpy : 106ee4 >			  ## bredr_frame.c:2979:5
 1e165d0:    a1 f6 00 56       	r1 = [r5+r6<<2]			  ## bredr_frame.c:2980:42
 1e165d4:    45 fc 38 00       	r5 = r4 + 56			  ## bredr_frame.c:2980:5
 1e165d8:    02 fb 48 02       	r2 = 584 <BTCTLER_CL_RAM_TOTAL+0x64 : 248 >			  ## bredr_frame.c:2980:5
 1e165dc:    50 08             	r0 = r5			  ## bredr_frame.c:2980:5
 1e165de:    97 f3 81 84       	call 3082498 <memcpy : 106ee4 >			  ## bredr_frame.c:2980:5
 1e165e2:    b5 f6 00 46       	[r4+r6<<2] = r5			  ## bredr_frame.c:2981:35
 1e165e6:    c0 ff 44 fc 1c 00 	r0 = 1899588 <uECC_vli_cmp_unsafe+0xC8C48 : 1cfc44 >			  ## bredr_frame.c:2983:21
 1e165ec:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2983:21
 1e165ee:    c0 ff c0 00 1c 00 	r0 = 1835200 <uECC_vli_cmp_unsafe+0xB90C4 : 1c00c0 >			  ## bredr_frame.c:2983:21
 1e165f4:    0c 40             	[r0 + 0] = r4			  ## bredr_frame.c:2984:22
 1e165f6:    21 d4             	r1 = r4 >> 16			  ## bredr_frame.c:2985:22
 1e165f8:    19 40             	[r0 + 4] = r1			  ## bredr_frame.c:2985:22
 1e165fa:    50 08             	r0 = r5			  ## bredr_frame.c:2990:5
 1e165fc:    bf f3 ea fc       	call -1580 <bredr_bd_frame_enable : 1e15fd4 >			  ## bredr_frame.c:2990:5
 1e16600:    c0 ff 04 41 1e 00 	r0 = 1982724 <uECC_vli_cmp_unsafe+0xDD108 : 1e4104 >			  ## bredr_frame.c:2992:24
 1e16606:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_frame.c:2992:24
 1e1660c:    09 40             	[r0 + 0] = r1			  ## bredr_frame.c:2992:24
 1e1660e:    10 70             	r0 = 1			  ## bredr_frame.c:3005:5
 1e16610:    16 01             	{rets, r6-r4} = [sp++]			  ## bredr_frame.c:3005:5
 1e16612:    ff f3 dd 4d       	goto -91206 <__BT_UPDATA_JUMP : 1e001d0 >			  ## bredr_frame.c:3005:5
 1e16616:    00 00             	nop


lmp_ch_update_op:
 1e16618:    ec 78             	r12 = 142
 1e1661a:    e1 01             	[--sp] = {psr, reti}
 1e1661c:    ce 77             	r14 = 124
 1e1661e:    e1 01             	[--sp] = {psr, reti}
 1e16620:    6c 77             	r12 = 118
 1e16622:    e1 01             	[--sp] = {psr, reti}
 1e16624:    4a 77             	r10 = 116
 1e16626:    e1 01             	[--sp] = {psr, reti}
 1e16628:    78 78             	r8 = 135
 1e1662a:    e1 01             	[--sp] = {psr, reti}
 1e1662c:    1a 78             	r10 = 129
 1e1662e:    e1 01             	[--sp] = {psr, reti}
 1e16630:    24 79             	r4 = 146
 1e16632:    e1 01             	[--sp] = {psr, reti}


ble_ll_ch_update_op:
 1e16634:    94 7a             	r4 = 169
 1e16636:    e1 01             	[--sp] = {psr, reti}
 1e16638:    b8 79             	r8 = 155
 1e1663a:    e1 01             	[--sp] = {psr, reti}
 1e1663c:    4a 79             	r10 = 148
 1e1663e:    e1 01             	[--sp] = {psr, reti}
 1e16640:    28 79             	r8 = 146
 1e16642:    e1 01             	[--sp] = {psr, reti}
 1e16644:    f6 79             	r6 = 159
 1e16646:    e1 01             	[--sp] = {psr, reti}
 1e16648:    dc 79             	r12 = 157
 1e1664a:    e1 01             	[--sp] = {psr, reti}
 1e1664c:    84 7a             	r4 = 168
 1e1664e:    e1 01             	[--sp] = {psr, reti}


update_loader_match_tab:
 1e16650:    05 5a             	r5 = h[r5 + 0] (u)
 1e16652:    65 64             	r5 = b[r2 + 6] (u)
 1e16654:    72 5f             	r2 = h[r7 + 46] (u)
 1e16656:    6f 74             	r15 = 70
 1e16658:    61 32             	if (r1 != 0) goto 194 <update_part_tab_init+0x10 : 1e1671c >
 1e1665a:    2e 62             	b[r1 + 2] = r6
 1e1665c:    69 6e             	b[r7 + 6] = r1
 1e1665e:    00 00             	nop
 1e16660:    00 00             	nop
 1e16662:    01 5a             	r1 = h[r5 + 0] (u)
 1e16664:    73 64             	r3 = b[r2 + 7] (u)
 1e16666:    5f 75             	r15 = 85
 1e16668:    70 64             	r0 = b[r2 + 7] (u)
 1e1666a:    61 74             	r1 = 70
 1e1666c:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init+0x2C : 1e16738 >
 1e1666e:    2e 62             	b[r1 + 2] = r6
 1e16670:    69 6e             	b[r7 + 6] = r1
 1e16672:    00 00             	nop
 1e16674:    02 5a             	r2 = h[r5 + 0] (u)
 1e16676:    73 64             	r3 = b[r2 + 7] (u)
 1e16678:    5f 75             	r15 = 85
 1e1667a:    70 64             	r0 = b[r2 + 7] (u)
 1e1667c:    61 74             	r1 = 70
 1e1667e:    65 32             	if (r1 != 0) goto 202 <update_part_tab_init+0x3E : 1e1674a >
 1e16680:    2e 62             	b[r1 + 2] = r6
 1e16682:    69 6e             	b[r7 + 6] = r1
 1e16684:    00 00             	nop
 1e16686:    06 5a             	r6 = h[r5 + 0] (u)
 1e16688:    62 6c             	r2 = b[r6 + 6] (u)
 1e1668a:    65 5f             	r5 = h[r7 + 44] (u)
 1e1668c:    61 70             	r1 = 6
 1e1668e:    70 5f             	r0 = h[r7 + 46] (u)
 1e16690:    6f 74             	r15 = 70
 1e16692:    61 2e             	if (r7 == 0) goto 194 <JL_BT_CFG_FILE_NAME+0x2 : 1e16756 >
 1e16694:    62 69             	r2 = b[r4 + 22] (u)
 1e16696:    6e 00             	cli r14
 1e16698:    07 5a             	r7 = h[r5 + 0] (u)
 1e1669a:    73 70             	r3 = 7
 1e1669c:    70 5f             	r0 = h[r7 + 46] (u)
 1e1669e:    61 70             	r1 = 6
 1e166a0:    70 5f             	r0 = h[r7 + 46] (u)
 1e166a2:    6f 74             	r15 = 70
 1e166a4:    61 2e             	if (r7 == 0) goto 194 <JL_FLASH_BIN_FILE_NAME+0x7 : 1e16768 >
 1e166a6:    62 69             	r2 = b[r4 + 22] (u)
 1e166a8:    6e 00             	cli r14
 1e166aa:    00 5a             	r0 = h[r5 + 0] (u)
 1e166ac:    75 73             	r5 = 55
 1e166ae:    62 5f             	r2 = h[r7 + 44] (u)
 1e166b0:    75 70             	r5 = 7
 1e166b2:    64 61             	r4 = b[r0 + 22] (u)
 1e166b4:    74 65             	r4 = b[r2 + 23] (u)
 1e166b6:    32 2e             	if (r7 == 0) goto 100 <update_part_tab_init+0x10 : 1e1671c >
 1e166b8:    62 69             	r2 = b[r4 + 22] (u)
 1e166ba:    6e 00             	cli r14
 1e166bc:    09 5a             	h[r5 + 0] = r1
 1e166be:    62 6c             	r2 = b[r6 + 6] (u)
 1e166c0:    65 5f             	r5 = h[r7 + 44] (u)
 1e166c2:    6f 74             	r15 = 70
 1e166c4:    61 2e             	if (r7 == 0) goto 194 <update_stop+0x12 : 1e16788 >
 1e166c6:    62 69             	r2 = b[r4 + 22] (u)
 1e166c8:    6e 00             	cli r14
 1e166ca:    00 00             	nop
 1e166cc:    00 00             	nop
 1e166ce:    04 5a             	r4 = h[r5 + 0] (u)
 1e166d0:    75 61             	r5 = b[r0 + 23] (u)
 1e166d2:    72 74             	r2 = 71
 1e166d4:    5f 75             	r15 = 85
 1e166d6:    73 65             	r3 = b[r2 + 23] (u)
 1e166d8:    72 2e             	if (r7 == 0) goto 228 <decode_data_by_user_key+0x2E : 1e167be >
 1e166da:    62 69             	r2 = b[r4 + 22] (u)
 1e166dc:    6e 00             	cli r14
 1e166de:    00 00             	nop
 1e166e0:    0b 5a             	h[r5 + 0] = r3
 1e166e2:    6e 6f             	b[r7 + 22] = r6
 1e166e4:    72 5f             	r2 = h[r7 + 46] (u)
 1e166e6:    6f 74             	r15 = 70
 1e166e8:    61 2e             	if (r7 == 0) goto 194 <decode_data_by_user_key+0x1C : 1e167ac >
 1e166ea:    62 69             	r2 = b[r4 + 22] (u)
 1e166ec:    6e 00             	cli r14
 1e166ee:    00 00             	nop
 1e166f0:    00 00             	nop


JL_RESERVED_VM_FILE_NAME:
 1e166f2:    56 4d             	r6 = [r6 + 84]
 1e166f4:    00 61             	r0 = b[r0 + 16] (u)


JL_APP_CODE0_FILE_NAME:
 1e166f5:    61 70             	r1 = 6
 1e166f7:    70 5f             	r0 = h[r7 + 46] (u)
 1e166f9:    64 69             	r4 = b[r4 + 22] (u)
 1e166fb:    72 5f             	r2 = h[r7 + 46] (u)
 1e166fd:    68 65             	b[r2 + 22] = r0
 1e166ff:    61 64             	r1 = b[r2 + 6] (u)
 1e16701:    00 6f             	r0 = b[r7 + 16] (u)


JL_OTA_LOADER_FILE_NAME:
 1e16702:    6f 74             	r15 = 70
 1e16704:    61 2e             	if (r7 == 0) goto 194 <update_decode+0x2 : 1e167c8 >
 1e16706:    62 69             	r2 = b[r4 + 22] (u)
 1e16708:    6e 00             	cli r14
 1e1670a:    00 00             	nop


update_part_tab_init:
 1e1670c:    54 67             	r4 = b[r3 + 21] (u)
 1e1670e:    e1 01             	[--sp] = {psr, reti}
 1e16710:    01 00             	nop
 1e16712:    00 00             	nop
 1e16714:    00 00             	nop
 1e16716:    00 00             	nop
 1e16718:    00 00             	nop
 1e1671a:    00 00             	nop
 1e1671c:    14 7b             	r4 = 177
 1e1671e:    e1 01             	[--sp] = {psr, reti}
 1e16720:    0c 00             	syscall
 1e16722:    00 00             	nop
 1e16724:    61 67             	r1 = b[r3 + 22] (u)
 1e16726:    e1 01             	[--sp] = {psr, reti}
 1e16728:    ff ff ff ff 00 00 	pc = 65535
 1e1672e:    00 00             	nop
 1e16730:    00 00             	nop
 1e16732:    00 00             	nop
 1e16734:    00 00             	nop
 1e16736:    00 00             	nop
 1e16738:    00 00             	nop
 1e1673a:    00 00             	nop
 1e1673c:    6b 67             	b[r3 + 22] = r3
 1e1673e:    e1 01             	[--sp] = {psr, reti}
 1e16740:    ff ff ff ff 00 00 	pc = 65535
 1e16746:    00 00             	nop
 1e16748:    00 00             	nop
 1e1674a:    00 00             	nop
 1e1674c:    00 00             	nop
 1e1674e:    00 00             	nop
 1e16750:    00 00             	nop
 1e16752:    00 00             	nop


JL_BT_CFG_FILE_NAME:
 1e16754:    63 66             	r3 = b[r3 + 6] (u)
 1e16756:    67 5f             	r7 = h[r7 + 44] (u)
 1e16758:    74 6f             	r4 = b[r7 + 23] (u)
 1e1675a:    6f 6c             	b[r6 + 6] = r7
 1e1675c:    2e 62             	b[r1 + 2] = r6
 1e1675e:    69 6e             	b[r7 + 6] = r1
 1e16760:    00 66             	r0 = b[r3 + 0] (u)


JL_FLASH_BIN_FILE_NAME:
 1e16761:    66 6c             	r6 = b[r6 + 6] (u)
 1e16763:    61 73             	r1 = 54
 1e16765:    68 2e             	if (r7 == 0) goto 208 <update_decode+0x71 : 1e16837 >
 1e16767:    62 69             	r2 = b[r4 + 22] (u)
 1e16769:    6e 00             	cli r14


JL_FLASH2_BIN_FILE_NAME:
 1e1676b:    66 6c             	r6 = b[r6 + 6] (u)
 1e1676d:    61 73             	r1 = 54
 1e1676f:    68 32             	if (r1 != 0) goto 208 <update_decode+0x7B : 1e16841 >
 1e16771:    2e 62             	b[r1 + 2] = r6
 1e16773:    69 6e             	b[r7 + 6] = r1
 1e16775:    00 75             	r0 = 80


update_stop:
 1e16776:    75 01             	[--sp] = {rets, r5, r4}			  ## download_loop.c:482:0
 1e16778:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >			  ## download_loop.c:482:0
 1e1677e:    01 f6 f0 50       	r1 = [r5 + 240]			  ## download_loop.c:485:17
 1e16782:    04 08             	r4 = r0			  ## download_loop.c:485:17
 1e16784:    04 22             	if (r1 == 0) goto 8 <update_stop+0x18 : 1e1678e >			  ## download_loop.c:485:17
 1e16786:    41 42             	r1 = [r1 + 16]			  ## download_loop.c:491:22
 1e16788:    01 22             	if (r1 == 0) goto 2 <update_stop+0x16 : 1e1678c >			  ## download_loop.c:491:22
 1e1678a:    81 00             	call r1			  ## download_loop.c:492:9
 1e1678c:    0c 6b             	b[r5 + 16] = r4			  ## download_loop.c:495:23
 1e1678e:    55 01             	{pc, r5, r4} = [sp++]


decode_data_by_user_key:
 1e16790:    79 01             	[--sp] = {rets, r9-r4}			  ## encrypt_api.c:97:0
 1e16792:    34 08             	r4 = r3			  ## encrypt_api.c:97:0
 1e16794:    15 08             	r5 = r1			  ## encrypt_api.c:97:0
 1e16796:    08 08             	r8 = r0			  ## encrypt_api.c:97:0
 1e16798:    15 24             	if (r2 == 0) goto 42 <decode_data_by_user_key+0x34 : 1e167c4 >			  ## encrypt_api.c:97:0
 1e1679a:    09 f5 1c 00       	r9 = [sp+28]			  ## encrypt_api.c:97:0
 1e1679e:    a6 04             	r6 = r2.l (u)			  ## encrypt_api.c:102:18
 1e167a0:    97 08             	r7 = r9			  ## encrypt_api.c:102:17
 1e167a2:    76 f2 01 80       	if (r6 > r7) goto 2 <decode_data_by_user_key+0x18 : 1e167a8 >			  ## encrypt_api.c:102:17
 1e167a6:    67 08             	r7 = r6			  ## encrypt_api.c:102:17
 1e167a8:    a0 d0             	r0 = r4 >> 2			  ## encrypt_api.c:103:30
 1e167aa:    e1 fd 80 00       	r0 = r0 ^ r8			  ## encrypt_api.c:103:35
 1e167ae:    20 04             	r0 = r0.l (u)			  ## encrypt_api.c:105:9
 1e167b0:    03 70             	r3 = 0			  ## encrypt_api.c:105:9
 1e167b2:    51 08             	r1 = r5			  ## encrypt_api.c:105:9
 1e167b4:    72 08             	r2 = r7			  ## encrypt_api.c:105:9
 1e167b6:    bf f3 dc 50       	call -89672 <doe : 1e00972 >			  ## encrypt_api.c:105:9
 1e167ba:    74 09             	r4 += r7			  ## encrypt_api.c:110:18
 1e167bc:    e2 bd             	r2 = r6 - r7			  ## encrypt_api.c:111:14
 1e167be:    a0 04             	r0 = r2.l (u)			  ## encrypt_api.c:101:5
 1e167c0:    75 09             	r5 += r7			  ## encrypt_api.c:109:14
 1e167c2:    ed 31             	if (r0 != 0) goto -38 <decode_data_by_user_key+0xE : 1e1679e >			  ## encrypt_api.c:109:14
 1e167c4:    59 01             	{pc, r9-r4} = [sp++]


update_decode:
 1e167c6:    7c 01             	[--sp] = {rets, r12-r4}			  ## download_loop.c:1887:0
 1e167c8:    f0 0b             	sp += -32			  ## download_loop.c:1887:0
 1e167ca:    3b 08             	r11 = r3			  ## download_loop.c:1887:0
 1e167cc:    15 08             	r5 = r1			  ## download_loop.c:1887:0
 1e167ce:    0c 08             	r12 = r0			  ## download_loop.c:1887:0
 1e167d0:    07 70             	r7 = 0			  ## download_loop.c:1887:0
 1e167d2:    60 ff 1f 29 24 00 	if ((r2 & 31) == 0) goto 72 <update_decode+0x5A : 1e16820 >			  ## download_loop.c:1887:0
 1e167d8:    29 fd 1f 29       	r9 = r2 & 31			  ## download_loop.c:1893:36
 1e167dc:    90 fb 90 12       	r1 = r2 - r9			  ## download_loop.c:1893:28
 1e167e0:    0a a0             	r10 = sp + 0
 1e167e2:    a0 08             	r0 = r10			  ## download_loop.c:1897:9
 1e167e4:    92 08             	r2 = r9			  ## download_loop.c:1897:9
 1e167e6:    bf f3 c2 50       	call -89724 <norflash_origin_read : 1e0096e >			  ## download_loop.c:1897:9
 1e167ea:    80 fb 90 8a       	r8 = r10 + r9			  ## download_loop.c:1900:24
 1e167ee:    60 fb 00 99       	r0 = 0 - r9			  ## download_loop.c:1899:68
 1e167f2:    67 fb 20 99       	r7 = 32 - r9			  ## download_loop.c:1898:37
 1e167f6:    07 e2 01 30       	if (r7 < 32) goto 2 <update_decode+0x36 : 1e167fc >
 1e167fa:    07 08             	r7 = r0			  ## download_loop.c:1899:22
 1e167fc:    80 08             	r0 = r8			  ## download_loop.c:1900:9
 1e167fe:    51 08             	r1 = r5			  ## download_loop.c:1900:9
 1e16800:    72 08             	r2 = r7			  ## download_loop.c:1900:9
 1e16802:    97 f3 6f 83       	call 3081950 <memcpy : 106ee4 >			  ## download_loop.c:1900:9
 1e16806:    90 fb 90 3b       	r3 = r11 - r9			  ## download_loop.c:1901:55
 1e1680a:    80 fb 90 27       	r2 = r7 + r9			  ## download_loop.c:1901:38
 1e1680e:    c0 08             	r0 = r12			  ## download_loop.c:1901:9
 1e16810:    a1 08             	r1 = r10			  ## download_loop.c:1901:9
 1e16812:    bf f3 ae 50       	call -89764 <doe : 1e00972 >			  ## download_loop.c:1901:9
 1e16816:    50 08             	r0 = r5			  ## download_loop.c:1902:9
 1e16818:    81 08             	r1 = r8			  ## download_loop.c:1902:9
 1e1681a:    72 08             	r2 = r7			  ## download_loop.c:1902:9
 1e1681c:    97 f3 62 83       	call 3081924 <memcpy : 106ee4 >			  ## download_loop.c:1902:9
 1e16820:    64 fb 20 79       	r4 = 32 - r7			  ## download_loop.c:1906:22
 1e16824:    0e 28             	if (r4 == 0) goto 28 <update_decode+0x7C : 1e16842 >
 1e16826:    c1 bb             	r1 = r5 + r7			  ## download_loop.c:1913:26
 1e16828:    46 08             	r6 = r4			  ## download_loop.c:1912:16
 1e1682a:    04 e2 01 30       	if (r4 < 32) goto 2 <update_decode+0x6A : 1e16830 >			  ## download_loop.c:1912:16
 1e1682e:    06 72             	r6 = 32			  ## download_loop.c:1912:16
 1e16830:    80 fb b0 37       	r3 = r7 + r11			  ## download_loop.c:1913:51
 1e16834:    c0 08             	r0 = r12			  ## download_loop.c:1913:9
 1e16836:    62 08             	r2 = r6			  ## download_loop.c:1913:9
 1e16838:    bf f3 9b 50       	call -89802 <doe : 1e00972 >			  ## download_loop.c:1913:9
 1e1683c:    a4 b9             	r4 = r4 - r6			  ## download_loop.c:1915:20
 1e1683e:    67 09             	r7 += r6			  ## download_loop.c:1914:16
 1e16840:    f2 39             	if (r4 != 0) goto -28 <update_decode+0x60 : 1e16826 >
 1e16842:    10 0a             	sp += 32
 1e16844:    5c 01             	{pc, r12-r4} = [sp++]			  ## download_loop.c:1919:1


update_notify_content_size:
 1e16846:    34 00             	[--sp] = rets			  ## download_loop.c:502:0
 1e16848:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## download_loop.c:506:9
 1e1684e:    02 f6 f0 20       	r2 = [r2 + 240]			  ## download_loop.c:506:9
 1e16852:    03 24             	if (r2 == 0) goto 6 <update_notify_content_size+0x14 : 1e1685a >			  ## download_loop.c:506:9
 1e16854:    52 44             	r2 = [r2 + 20]			  ## download_loop.c:506:37
 1e16856:    01 24             	if (r2 == 0) goto 2 <update_notify_content_size+0x14 : 1e1685a >			  ## download_loop.c:506:37
 1e16858:    82 00             	call r2			  ## download_loop.c:507:9
 1e1685a:    30 00             	pc = [sp++]


update_resource_release:
 1e1685c:    74 01             	[--sp] = {rets, r4}			  ## download_loop.c:1699:0
 1e1685e:    c4 ff 70 2e 00 00 	r4 = 11888 <update_bss_start : 2e70 >			  ## download_loop.c:1699:0
 1e16864:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1702:9
 1e16866:    08 20             	if (r0 == 0) goto 16 <update_resource_release+0x1C : 1e16878 >			  ## download_loop.c:1702:9
 1e16868:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1703:21
 1e1686a:    04 22             	if (r1 == 0) goto 8 <update_resource_release+0x18 : 1e16874 >			  ## download_loop.c:1703:21
 1e1686c:    10 08             	r0 = r1			  ## download_loop.c:1704:13
 1e1686e:    bf f3 0a 9f       	call -49644 <free : 1e0a686 >			  ## download_loop.c:1704:13
 1e16872:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1704:13
 1e16874:    bf f3 07 9f       	call -49650 <free : 1e0a686 >			  ## download_loop.c:1706:9
 1e16878:    54 01             	{pc, r4} = [sp++]


active_update_task:
 1e1687a:    7f 01             	[--sp] = {rets, r15-r4}			  ## update_main.c:106:0
 1e1687c:    02 0b             	sp += -508			  ## update_main.c:106:0
 1e1687e:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >			  ## update_main.c:106:0
 1e16884:    01 f6 ec 90       	r1 = [r9 + 236]			  ## update_main.c:109:5
 1e16888:    0f 08             	r15 = r0			  ## update_main.c:109:5
 1e1688a:    10 70             	r0 = 1			  ## update_main.c:109:22
 1e1688c:    10 f9 64 10       	b[r1 + 100] = r0			  ## update_main.c:109:22
 1e16890:    00 70             	r0 = 0			  ## update_main.c:109:22
 1e16892:    a8 02             	[sp+40] = r0			  ## update_main.c:113:23
 1e16894:    98 02             	[sp+36] = r0			  ## update_main.c:113:23
 1e16896:    03 f6 60 f0       	r3 = [r15 + 96]			  ## update_main.c:115:15
 1e1689a:    fc fc 50 00       	r12 = r15 + 80			  ## update_main.c:112:39
 1e1689e:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x2E : 1e168a8 >			  ## update_main.c:112:39
 1e168a0:    11 70             	r1 = 1			  ## update_main.c:116:9
 1e168a2:    02 70             	r2 = 0			  ## update_main.c:116:9
 1e168a4:    c0 08             	r0 = r12			  ## update_main.c:116:9
 1e168a6:    83 00             	call r3			  ## update_main.c:116:9
 1e168a8:    00 f6 58 f0       	r0 = [r15 + 88]			  ## update_main.c:60:15
 1e168ac:    0b 20             	if (r0 == 0) goto 22 <active_update_task+0x4A : 1e168c4 >			  ## update_main.c:60:15
 1e168ae:    10 f6 f0 90       	[r9 + 240] = r0			  ## download_loop.c:2785:17
 1e168b2:    02 40             	r2 = [r0 + 0]			  ## update_main.c:62:29
 1e168b4:    07 24             	if (r2 == 0) goto 14 <active_update_task+0x4A : 1e168c4 >			  ## update_main.c:62:29
 1e168b6:    c0 ff a6 7a e1 01 	r0 = 31554214 <update_thread_resume : 1e17aa6 >			  ## update_main.c:63:13
 1e168bc:    c1 ff b4 7a e1 01 	r1 = 31554228 <update_thread_sleep : 1e17ab4 >			  ## update_main.c:63:13
 1e168c2:    82 00             	call r2			  ## update_main.c:63:13
 1e168c4:    0d f6 50 f0       	r13 = [r15 + 80]			  ## update_main.c:126:19
 1e168c8:    00 fb 07 5a       	r0 = 23047 <report_overlay_end+0x7FF : 5a07 >			  ## update_main.c:126:24
 1e168cc:    0d f2 04 10       	if (r13 != r0) goto 8 <active_update_task+0x5E : 1e168d8 >			  ## update_main.c:126:24
 1e168d0:    0d fb 06 5a       	r13 = 23046 <report_overlay_end+0x7FE : 5a06 >
 1e168d4:    1d f6 50 f0       	[r15 + 80] = r13			  ## update_main.c:127:24
 1e168d8:    00 70             	r0 = 0
 1e168da:    10 f9 10 90       	b[r9 + 16] = r0			  ## download_loop.c:1666:23
 1e168de:    00 fb 44 02       	r0 = 580 <BTCTLER_CL_RAM_TOTAL+0x60 : 244 >			  ## download_loop.c:1668:31
 1e168e2:    bf f3 bd 9e       	call -49798 <malloc : 1e0a660 >			  ## download_loop.c:1668:31
 1e168e6:    05 08             	r5 = r0			  ## download_loop.c:1668:31
 1e168e8:    ce ff 70 2e 00 00 	r14 = 11888 <update_bss_start : 2e70 >			  ## download_loop.c:1668:31
 1e168ee:    15 f6 00 e0       	[r14 + 0] = r5			  ## download_loop.c:1668:12
 1e168f2:    4a 2a             	if (r5 == 0) goto 148 <active_update_task+0x10E : 1e16988 >			  ## download_loop.c:1668:12
 1e168f4:    01 70             	r1 = 0			  ## download_loop.c:1676:5
 1e168f6:    02 fb 44 02       	r2 = 580 <BTCTLER_CL_RAM_TOTAL+0x60 : 244 >			  ## download_loop.c:1676:5
 1e168fa:    04 70             	r4 = 0			  ## download_loop.c:1676:5
 1e168fc:    97 f3 f8 82       	call 3081712 <memset : 106ef0 >			  ## download_loop.c:1676:5
 1e16900:    50 fc f8 01       	r0 = r5 + 504			  ## download_loop.c:1677:5
 1e16904:    c1 ff 0c 67 e1 01 	r1 = 31549196 <update_part_tab_init : 1e1670c >			  ## download_loop.c:1677:5
 1e1690a:    82 74             	r2 = 72			  ## download_loop.c:1677:5
 1e1690c:    97 f3 ea 82       	call 3081684 <memcpy : 106ee4 >			  ## download_loop.c:1677:5
 1e16910:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >			  ## download_loop.c:1677:5
 1e16914:    28 5a             	h[r5 + 4] = r0			  ## download_loop.c:1679:28
 1e16916:    bf f3 a3 9e       	call -49850 <malloc : 1e0a660 >			  ## download_loop.c:1680:32
 1e1691a:    08 4a             	[r5 + 0] = r0			  ## download_loop.c:1680:24
 1e1691c:    35 20             	if (r0 == 0) goto 106 <active_update_task+0x10E : 1e16988 >			  ## download_loop.c:1680:24
 1e1691e:    10 70             	r0 = 1
 1e16920:    02 fb 09 5a       	r2 = 23049 <report_overlay_end+0x801 : 5a09 >			  ## download_loop.c:1688:49
 1e16924:    11 70             	r1 = 1			  ## download_loop.c:1688:49
 1e16926:    2d f2 01 00       	if (r13 == r2) goto 2 <active_update_task+0xB2 : 1e1692c >			  ## download_loop.c:1688:49
 1e1692a:    01 70             	r1 = 0			  ## download_loop.c:1688:49
 1e1692c:    c2 8f             	r2 += -4			  ## download_loop.c:1688:20
 1e1692e:    2d f2 01 00       	if (r13 == r2) goto 2 <active_update_task+0xBA : 1e16934 >			  ## download_loop.c:1688:20
 1e16932:    00 70             	r0 = 0			  ## download_loop.c:1688:20
 1e16934:    50 b2             	r0 |= r1			  ## download_loop.c:1688:29
 1e16936:    10 f9 41 52       	b[r5 + 577] = r0			  ## download_loop.c:1688:29
 1e1693a:    14 f6 f4 90       	[r9 + 244] = r4			  ## flash_fs_api.c:69:20
 1e1693e:    c0 a7             	r0 = sp + 124			  ## flash_fs_api.c:69:20
 1e16940:    0a fd 02 09       	r10 = r0 | 2
 1e16944:    c6 ff fc e6 e0 01 	r6 = 31516412 <boot_addr_tab : 1e0e6fc >
 1e1694a:    0b 72             	r11 = 32
 1e1694c:    c8 ff ff ff 00 00 	r8 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e16952:    47 f6 04 60       	r7 = [r6 ++= 4]			  ## flash_fs_api.c:71:42
 1e16956:    c5 a7             	r5 = sp + 124			  ## flash_fs_api.c:71:42
 1e16958:    02 72             	r2 = 32			  ## flash_fs_api.c:71:9
 1e1695a:    50 08             	r0 = r5			  ## flash_fs_api.c:71:9
 1e1695c:    71 08             	r1 = r7			  ## flash_fs_api.c:71:9
 1e1695e:    bf f3 06 50       	call -90100 <norflash_origin_read : 1e0096e >			  ## flash_fs_api.c:71:9
 1e16962:    02 72             	r2 = 32			  ## flash_fs_api.c:72:9
 1e16964:    03 70             	r3 = 0			  ## flash_fs_api.c:72:9
 1e16966:    1b f5 00 00       	[sp] = r11			  ## flash_fs_api.c:72:9
 1e1696a:    80 08             	r0 = r8			  ## flash_fs_api.c:72:9
 1e1696c:    51 08             	r1 = r5			  ## flash_fs_api.c:72:9
 1e1696e:    10 17             	call -480 <decode_data_by_user_key : 1e16790 >			  ## flash_fs_api.c:72:9
 1e16970:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e16972:    a0 08             	r0 = r10			  ## flash_fs_api.c:44:20
 1e16974:    bf f3 22 50       	call -90044 <CRC16 : 1e009bc >			  ## flash_fs_api.c:44:20
 1e16978:    81 f5 7c 00       	r1 = h[sp+124] (u)			  ## flash_fs_api.c:45:15
 1e1697c:    01 f2 18 00       	if (r1 == r0) goto 48 <active_update_task+0x136 : 1e169b0 >			  ## flash_fs_api.c:45:15
 1e16980:    14 80             	r4 += 1			  ## flash_fs_api.c:70:72
 1e16982:    24 e0 e6 9f       	if (r4 <= 2) goto -52 <active_update_task+0xD8 : 1e16952 >			  ## flash_fs_api.c:70:72
 1e16986:    16 18             	goto 44 <active_update_task+0x13A : 1e169b4 >			  ## flash_fs_api.c:70:72
 1e16988:    20 79             	r0 = 146			  ## download_loop.c:2007:9
 1e1698a:    f5 16             	call -534 <update_stop : 1e16776 >
 1e1698c:    fa 07             	r10 = -1
 1e1698e:    66 17             	call -308 <update_resource_release : 1e1685c >			  ## download_loop.c:2186:5
 1e16990:    1a e0 45 12       	if (r10 != 1) goto 1162 <active_update_task+0x5A4 : 1e16e1e >			  ## download_loop.c:2186:5
 1e16994:    c4 ff 60 fb 00 00 	r4 = 64352 <report_heap_end : fb60 >			  ## update_main.c:144:27
 1e1699a:    00 fb 02 5a       	r0 = 23042 <report_overlay_end+0x7FA : 5a02 >			  ## update_main.c:143:28
 1e1699e:    68 58             	h[r4 + 12] = r0			  ## update_main.c:143:28
 1e169a0:    a0 98             	r0 = r4 + 10			  ## update_main.c:144:27
 1e169a2:    e1 74             	r1 = 78			  ## update_main.c:144:27
 1e169a4:    bf f3 0a 50       	call -90092 <CRC16 : 1e009bc >			  ## update_main.c:144:27
 1e169a8:    48 58             	h[r4 + 8] = r0			  ## update_main.c:144:25
 1e169aa:    10 70             	r0 = 1			  ## update_main.c:145:26
 1e169ac:    98 02             	[sp+36] = r0			  ## update_main.c:145:26
 1e169ae:    44 1a             	goto 1160 <active_update_task+0x5BE : 1e16e38 >			  ## update_main.c:145:26
 1e169b0:    17 f6 f4 90       	[r9 + 244] = r7			  ## flash_fs_api.c:74:28
 1e169b4:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:465:17
 1e169b8:    fa 07             	r10 = -1			  ## download_loop.c:465:17
 1e169ba:    e9 21             	if (r0 == 0) goto -46 <active_update_task+0x114 : 1e1698e >			  ## download_loop.c:465:17
 1e169bc:    10 40             	r0 = [r0 + 4]			  ## download_loop.c:471:23
 1e169be:    80 00             	call r0			  ## download_loop.c:471:10
 1e169c0:    e6 21             	if (r0 == 0) goto -52 <active_update_task+0x114 : 1e1698e >
 1e169c2:    1d f5 14 00       	[sp+20] = r13
 1e169c6:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:755:13
 1e169ca:    01 f6 00 e0       	r1 = [r14 + 0]			  ## download_loop.c:2021:24
 1e169ce:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:755:26
 1e169d0:    0d f6 00 10       	r13 = [r1 + 0]			  ## download_loop.c:2021:32
 1e169d4:    00 70             	r0 = 0			  ## download_loop.c:755:13
 1e169d6:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:755:13
 1e169da:    d1 08             	r1 = r13			  ## download_loop.c:755:13
 1e169dc:    83 00             	call r3			  ## download_loop.c:755:13
 1e169de:    80 f2 1a 02       	if (r0 == r8) goto 1076 <active_update_task+0x59C : 1e16e16 >			  ## download_loop.c:755:13
 1e169e2:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:761:13
 1e169e6:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:761:26
 1e169e8:    d1 fc 00 02       	r1 = r13 + 512			  ## download_loop.c:761:46
 1e169ec:    00 70             	r0 = 0			  ## download_loop.c:761:13
 1e169ee:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:761:13
 1e169f2:    83 00             	call r3			  ## download_loop.c:761:13
 1e169f4:    80 f2 0f 02       	if (r0 == r8) goto 1054 <active_update_task+0x59C : 1e16e16 >
 1e169f8:    00 74             	r0 = 64			  ## download_loop.c:775:5
 1e169fa:    08 02             	[sp] = r0			  ## download_loop.c:775:5
 1e169fc:    80 08             	r0 = r8			  ## download_loop.c:775:5
 1e169fe:    02 74             	r2 = 64			  ## download_loop.c:775:5
 1e16a00:    03 70             	r3 = 0			  ## download_loop.c:775:5
 1e16a02:    07 70             	r7 = 0			  ## download_loop.c:775:5
 1e16a04:    d1 08             	r1 = r13			  ## download_loop.c:775:5
 1e16a06:    c4 16             	call -632 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:775:5
 1e16a08:    d0 fc 02 00       	r0 = r13 + 2			  ## download_loop.c:781:43
 1e16a0c:    e1 73             	r1 = 62			  ## download_loop.c:339:12
 1e16a0e:    bf f3 d5 4f       	call -90198 <CRC16 : 1e009bc >			  ## download_loop.c:339:12
 1e16a12:    01 f7 00 d0       	r1 = h[r13 + 0] (u)			  ## download_loop.c:782:24
 1e16a16:    01 f2 fe 11       	if (r1 != r0) goto 1020 <active_update_task+0x59C : 1e16e16 >			  ## download_loop.c:782:24
 1e16a1a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:802:28
 1e16a1e:    08 f7 08 d0       	r8 = h[r13 + 8] (u)			  ## download_loop.c:793:64
 1e16a22:    68 02             	[sp+24] = r0			  ## download_loop.c:793:64
 1e16a24:    24 50             	r4 = h[r0 + 4] (u)			  ## download_loop.c:802:36
 1e16a26:    03 fe 50 89       	r3 = r8 * 80			  ## download_loop.c:793:77
 1e16a2a:    30 fc 40 00       	r0 = r3 + 64			  ## download_loop.c:793:47
 1e16a2e:    25 04             	r5 = r0.l (u)			  ## download_loop.c:793:47
 1e16a30:    81 08             	r1 = r8			  ## download_loop.c:823:36
 1e16a32:    d2 08             	r2 = r13			  ## download_loop.c:823:36
 1e16a34:    1c f5 0c 00       	[sp+12] = r12			  ## download_loop.c:823:36
 1e16a38:    45 f2 36 90       	if (r5 <= r4) goto 108 <active_update_task+0x22E : 1e16aa8 >			  ## download_loop.c:823:36
 1e16a3c:    31 fc 40 02       	r1 = r3 + 576			  ## download_loop.c:805:85
 1e16a40:    02 fb 00 fe       	r2 = -512 <bank_code_load_addr+0x1E5554 : 1fffe00 >			  ## download_loop.c:805:85
 1e16a44:    51 b5             	r1 &= r2			  ## download_loop.c:805:85
 1e16a46:    02 fb f0 01       	r2 = 496 <BTCTLER_CL_RAM_TOTAL+0xC : 1f0 >			  ## download_loop.c:804:34
 1e16a4a:    20 f0 01 00       	if ((r0 & r2) == 0) goto 2 <active_update_task+0x1D6 : 1e16a50 >			  ## download_loop.c:804:34
 1e16a4e:    10 08             	r0 = r1			  ## download_loop.c:804:17
 1e16a50:    26 04             	r6 = r0.l (u)			  ## download_loop.c:807:34
 1e16a52:    60 08             	r0 = r6			  ## download_loop.c:807:27
 1e16a54:    bf f3 09 9e       	call -50158 <zalloc : 1e0a66a >			  ## download_loop.c:807:27
 1e16a58:    07 08             	r7 = r0			  ## download_loop.c:807:27
 1e16a5a:    07 e0 dc 01       	if (r7 == 0) goto 952 <active_update_task+0x59C : 1e16e16 >			  ## download_loop.c:807:27
 1e16a5e:    00 f6 00 e0       	r0 = [r14 + 0]
 1e16a62:    68 02             	[sp+24] = r0
 1e16a64:    24 50             	r4 = h[r0 + 4] (u)
 1e16a66:    64 f2 17 20       	if (r4 >= r6) goto 46 <active_update_task+0x21E : 1e16a98 >
 1e16a6a:    0b 70             	r11 = 0
 1e16a6c:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:814:30
 1e16a70:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:814:43
 1e16a72:    20 05             	r0 = r4.l (u)			  ## download_loop.c:813:42
 1e16a74:    01 be             	r1 = r7 + r0			  ## download_loop.c:814:76
 1e16a76:    00 70             	r0 = 0			  ## download_loop.c:814:30
 1e16a78:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:814:30
 1e16a7c:    83 00             	call r3			  ## download_loop.c:814:30
 1e16a7e:    41 fb 01 ab       	r1 = r10 + 65536			  ## download_loop.c:814:30
 1e16a82:    10 f2 c2 01       	if (r0 == r1) goto 900 <active_update_task+0x590 : 1e16e0a >			  ## download_loop.c:814:30
 1e16a86:    44 fc 00 02       	r4 = r4 + 512			  ## download_loop.c:813:66
 1e16a8a:    20 05             	r0 = r4.l (u)			  ## download_loop.c:813:44
 1e16a8c:    60 f2 ee 3f       	if (r0 < r6) goto -36 <active_update_task+0x1F2 : 1e16a6c >			  ## download_loop.c:813:44
 1e16a90:    00 f6 00 e0       	r0 = [r14 + 0]
 1e16a94:    68 02             	[sp+24] = r0
 1e16a96:    24 50             	r4 = h[r0 + 4] (u)
 1e16a98:    70 08             	r0 = r7			  ## download_loop.c:819:9
 1e16a9a:    d1 08             	r1 = r13			  ## download_loop.c:819:9
 1e16a9c:    42 08             	r2 = r4			  ## download_loop.c:819:9
 1e16a9e:    97 f3 21 82       	call 3081282 <memcpy : 106ee4 >			  ## download_loop.c:819:9
 1e16aa2:    01 f7 08 d0       	r1 = h[r13 + 8] (u)			  ## download_loop.c:819:9
 1e16aa6:    72 08             	r2 = r7			  ## download_loop.c:819:9
 1e16aa8:    4f 02             	[sp+16] = r7
 1e16aaa:    19 22             	if (r1 == 0) goto 50 <active_update_task+0x264 : 1e16ade >
 1e16aac:    26 fc 40 00       	r6 = r2 + 64
 1e16ab0:    05 70             	r5 = 0
 1e16ab2:    07 75             	r7 = 80
 1e16ab4:    44 fb 01 ab       	r4 = r10 + 65536
 1e16ab8:    60 05             	r0 = r5.l (u)			  ## download_loop.c:823:17
 1e16aba:    61 08             	r1 = r6			  ## download_loop.c:825:33
 1e16abc:    80 fe 70 10       	r1 += r0 * r7			  ## download_loop.c:825:33
 1e16ac0:    02 75             	r2 = 80			  ## download_loop.c:824:9
 1e16ac2:    03 70             	r3 = 0			  ## download_loop.c:824:9
 1e16ac4:    0f 02             	[sp] = r7			  ## download_loop.c:824:9
 1e16ac6:    40 08             	r0 = r4			  ## download_loop.c:824:9
 1e16ac8:    63 16             	call -826 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:824:9
 1e16aca:    00 f7 08 d0       	r0 = h[r13 + 8] (u)			  ## download_loop.c:823:36
 1e16ace:    15 80             	r5 += 1			  ## download_loop.c:823:51
 1e16ad0:    61 05             	r1 = r5.l (u)			  ## download_loop.c:823:51
 1e16ad2:    01 f2 f1 3f       	if (r1 < r0) goto -30 <active_update_task+0x23E : 1e16ab8 >			  ## download_loop.c:823:5
 1e16ad6:    00 f6 00 e0       	r0 = [r14 + 0]
 1e16ada:    68 02             	[sp+24] = r0
 1e16adc:    47 02             	r7 = [sp+16]
 1e16ade:    0b 70             	r11 = 0
 1e16ae0:    60 02             	r0 = [sp+24]
 1e16ae2:    0a fc 40 02       	r10 = r0 + 576
 1e16ae6:    1b f9 00 a0       	b[r10 + 0] = r11			  ## download_loop.c:543:35
 1e16aea:    1b f5 a8 00       	[sp+168] = r11			  ## download_loop.c:544:29
 1e16aee:    1b f5 a4 00       	[sp+164] = r11			  ## download_loop.c:544:29
 1e16af2:    1b f5 a0 00       	[sp+160] = r11			  ## download_loop.c:544:29
 1e16af6:    1b f5 9c 00       	[sp+156] = r11			  ## download_loop.c:544:29
 1e16afa:    c0 ff 94 2e 00 00 	r0 = 11924 <fw_flash_bin_head : 2e94 >
 1e16b00:    01 70             	r1 = 0			  ## download_loop.c:549:5
 1e16b02:    02 fb e0 01       	r2 = 480 <BTCTLER_CL_BSS_SIZE+0x1C : 1e0 >			  ## download_loop.c:549:5
 1e16b06:    97 f3 f3 81       	call 3081190 <memset : 106ef0 >			  ## download_loop.c:549:5
 1e16b0a:    1b f9 11 90       	b[r9 + 17] = r11			  ## download_loop.c:550:22
 1e16b0e:    60 ff ff 89 9f 00 	if ((r8 & 255) == 0) goto 318 <active_update_task+0x3D8 : 1e16c52 >
 1e16b14:    e4 fd 00 08       	r0 = r8.b0 (u)			  ## download_loop.c:861:69
 1e16b18:    88 02             	[sp+32] = r0			  ## download_loop.c:856:9
 1e16b1a:    01 2e             	if (r7 == 0) goto 2 <active_update_task+0x2A4 : 1e16b1e >			  ## download_loop.c:856:9
 1e16b1c:    7d 08             	r13 = r7			  ## download_loop.c:856:9
 1e16b1e:    d7 fc 40 00       	r7 = r13 + 64			  ## download_loop.c:861:55
 1e16b22:    60 02             	r0 = [sp+24]			  ## download_loop.c:552:5
 1e16b24:    00 fc 04 02       	r0 = r0 + 516			  ## download_loop.c:552:5
 1e16b28:    78 02             	[sp+28] = r0			  ## download_loop.c:552:5
 1e16b2a:    0d 70             	r13 = 0			  ## download_loop.c:552:5
 1e16b2c:    08 70             	r8 = 0			  ## download_loop.c:552:5
 1e16b2e:    0f 18             	goto 30 <active_update_task+0x2D4 : 1e16b4e >			  ## download_loop.c:552:5
 1e16b30:    e4 fd 00 1d       	r1 = r13.b0 (u)			  ## download_loop.c:592:36
 1e16b34:    51 e0 69 80       	if (r1 > 5) goto 210 <active_update_task+0x390 : 1e16c0a >			  ## download_loop.c:592:36
 1e16b38:    c0 ff 94 2e 00 00 	r0 = 11924 <fw_flash_bin_head : 2e94 >			  ## download_loop.c:593:17
 1e16b3e:    02 75             	r2 = 80			  ## download_loop.c:593:17
 1e16b40:    80 fe 20 01       	r0 += r1 * r2			  ## download_loop.c:593:17
 1e16b44:    71 08             	r1 = r7			  ## download_loop.c:593:17
 1e16b46:    97 f3 cd 81       	call 3081114 <memcpy : 106ee4 >			  ## download_loop.c:593:17
 1e16b4a:    1d 80             	r13 += 1			  ## download_loop.c:594:35
 1e16b4c:    5e 18             	goto 188 <active_update_task+0x390 : 1e16c0a >			  ## download_loop.c:594:35
 1e16b4e:    36 4e             	r6 = [r7 + 12]			  ## download_loop.c:554:127
 1e16b50:    74 fc 40 00       	r4 = r7 + 64			  ## download_loop.c:554:64
 1e16b54:    05 70             	r5 = 0
 1e16b56:    25 2c             	if (r6 == 0) goto 74 <active_update_task+0x328 : 1e16ba2 >
 1e16b58:    ac 08             	r12 = r10
 1e16b5a:    da 08             	r10 = r13
 1e16b5c:    0e f6 08 70       	r14 = [r7 + 8]			  ## download_loop.c:554:102
 1e16b60:    0d 70             	r13 = 0
 1e16b62:    70 02             	r0 = [sp+28]
 1e16b64:    09 fc f4 ff       	r9 = r0 + -12
 1e16b68:    05 f6 00 90       	r5 = [r9 + 0]			  ## download_loop.c:352:60
 1e16b6c:    50 08             	r0 = r5			  ## download_loop.c:352:71
 1e16b6e:    97 f3 c5 81       	call 3081098 <strlen : 106efc >			  ## download_loop.c:352:71
 1e16b72:    02 08             	r2 = r0			  ## download_loop.c:352:71
 1e16b74:    40 08             	r0 = r4			  ## download_loop.c:352:18
 1e16b76:    51 08             	r1 = r5			  ## download_loop.c:352:18
 1e16b78:    97 f3 b8 81       	call 3081072 <memcmp : 106eec >			  ## download_loop.c:352:18
 1e16b7c:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x312 : 1e16b8c >			  ## download_loop.c:352:18
 1e16b7e:    1d 80             	r13 += 1			  ## download_loop.c:351:92
 1e16b80:    90 fc 24 00       	r0 = r9 + 36			  ## download_loop.c:351:19
 1e16b84:    2d e0 ee 9f       	if (r13 <= 2) goto -36 <active_update_task+0x2EA : 1e16b64 >			  ## download_loop.c:351:19
 1e16b88:    05 70             	r5 = 0
 1e16b8a:    06 18             	goto 12 <active_update_task+0x31E : 1e16b98 >
 1e16b8c:    05 f6 04 90       	r5 = [r9 + 4]			  ## download_loop.c:353:47
 1e16b90:    1e f6 08 90       	[r9 + 8] = r14			  ## download_loop.c:354:51
 1e16b94:    16 f6 0c 90       	[r9 + 12] = r6			  ## download_loop.c:355:44
 1e16b98:    ce ff 70 2e 00 00 	r14 = 11888 <update_bss_start : 2e70 >
 1e16b9e:    ad 08             	r13 = r10
 1e16ba0:    ca 08             	r10 = r12
 1e16ba2:    52 70             	r2 = 5			  ## download_loop.c:529:14
 1e16ba4:    40 08             	r0 = r4			  ## download_loop.c:529:14
 1e16ba6:    c1 ff f1 e6 e0 01 	r1 = 31516401 <ufw_flash_file_match_api.match_file_prefix : 1e0e6f1 >			  ## download_loop.c:529:14
 1e16bac:    97 f3 9e 81       	call 3081020 <memcmp : 106eec >			  ## download_loop.c:529:14
 1e16bb0:    17 30             	if (r0 != 0) goto 46 <active_update_task+0x366 : 1e16be0 >			  ## download_loop.c:529:14
 1e16bb2:    40 08             	r0 = r4			  ## download_loop.c:523:19
 1e16bb4:    97 f3 a2 81       	call 3081028 <strlen : 106efc >			  ## download_loop.c:523:19
 1e16bb8:    00 fc fc 00       	r0 = r0 + 252			  ## download_loop.c:526:32
 1e16bbc:    00 04             	r0 = r0.b0 (u)			  ## download_loop.c:530:48
 1e16bbe:    70 09             	r0 += r7			  ## download_loop.c:530:46
 1e16bc0:    00 84             	r0 += 64			  ## download_loop.c:530:46
 1e16bc2:    31 60             	r1 = b[r0 + 3] (u)			  ## download_loop.c:530:18
 1e16bc4:    22 60             	r2 = b[r0 + 2] (u)			  ## download_loop.c:530:18
 1e16bc6:    13 60             	r3 = b[r0 + 1] (u)			  ## download_loop.c:530:18
 1e16bc8:    00 60             	r0 = b[r0 + 0] (u)			  ## download_loop.c:530:18
 1e16bca:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## download_loop.c:530:18
 1e16bce:    c8 fd 40 03       	r0 <= insert(r3, p:8, l:8)			  ## download_loop.c:530:18
 1e16bd2:    d0 fd 80 02       	r0 <= insert(r2, p:16, l:16)			  ## download_loop.c:530:18
 1e16bd6:    c1 ff 2e 62 69 6e 	r1 = 1852400174 <uECC_vli_cmp_unsafe+0x58F232 : 69622e >			  ## download_loop.c:529:9
 1e16bdc:    10 f2 a8 0f       	if (r0 == r1) goto -176 <active_update_task+0x2B6 : 1e16b30 >			  ## download_loop.c:529:9
 1e16be0:    82 70             	r2 = 8			  ## download_loop.c:599:25
 1e16be2:    40 08             	r0 = r4			  ## download_loop.c:599:25
 1e16be4:    c1 ff 02 67 e1 01 	r1 = 31549186 <JL_OTA_LOADER_FILE_NAME : 1e16702 >			  ## download_loop.c:599:25
 1e16bea:    97 f3 7f 81       	call 3080958 <memcmp : 106eec >			  ## download_loop.c:599:25
 1e16bee:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x384 : 1e16bfe >			  ## download_loop.c:599:25
 1e16bf0:    00 f9 00 a0       	r0 = b[r10 + 0] (u)			  ## download_loop.c:604:30
 1e16bf4:    0a 30             	if (r0 != 0) goto 20 <active_update_task+0x390 : 1e16c0a >			  ## download_loop.c:604:30
 1e16bf6:    00 70             	r0 = 0			  ## download_loop.c:605:47
 1e16bf8:    10 f9 00 a0       	b[r10 + 0] = r0			  ## download_loop.c:605:47
 1e16bfc:    06 18             	goto 12 <active_update_task+0x390 : 1e16c0a >			  ## download_loop.c:605:47
 1e16bfe:    60 02             	r0 = [sp+24]			  ## download_loop.c:601:13
 1e16c00:    80 81             	r0 += 24			  ## download_loop.c:601:13
 1e16c02:    02 75             	r2 = 80			  ## download_loop.c:601:13
 1e16c04:    71 08             	r1 = r7			  ## download_loop.c:601:13
 1e16c06:    97 f3 6d 81       	call 3080922 <memcpy : 106ee4 >			  ## download_loop.c:601:13
 1e16c0a:    5b ba             	r11 |= r5			  ## download_loop.c:554:26
 1e16c0c:    18 80             	r8 += 1			  ## download_loop.c:552:32
 1e16c0e:    e6 fd 00 08       	r0 = r8.l (u)			  ## download_loop.c:552:32
 1e16c12:    07 85             	r7 += 80			  ## download_loop.c:614:23
 1e16c14:    81 02             	r1 = [sp+32]			  ## download_loop.c:552:5
 1e16c16:    10 f2 9a 1f       	if (r0 != r1) goto -204 <active_update_task+0x2D4 : 1e16b4e >			  ## download_loop.c:552:5
 1e16c1a:    00 f9 00 a0       	r0 = b[r10 + 0] (u)
 1e16c1e:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >
 1e16c24:    1d f9 11 90       	b[r9 + 17] = r13			  ## download_loop.c:617:22
 1e16c28:    18 20             	if (r0 == 0) goto 48 <active_update_task+0x3E0 : 1e16c5a >			  ## download_loop.c:617:22
 1e16c2a:    05 06             	r5 = -32
 1e16c2c:    00 4a             	r0 = [r5 + 0]			  ## download_loop.c:621:64
 1e16c2e:    c1 ff c1 e0 e0 01 	r1 = 31514817 <update_target_end+0x1E1 : 1e0e0c1 >			  ## download_loop.c:401:14
 1e16c34:    72 70             	r2 = 7			  ## download_loop.c:401:14
 1e16c36:    97 f3 59 81       	call 3080882 <memcmp : 106eec >			  ## download_loop.c:401:14
 1e16c3a:    0c f5 0c 00       	r12 = [sp+12]
 1e16c3e:    fa 07             	r10 = -1
 1e16c40:    47 02             	r7 = [sp+16]
 1e16c42:    10 20             	if (r0 == 0) goto 32 <active_update_task+0x3EA : 1e16c64 >
 1e16c44:    12 4a             	r2 = [r5 + 4]			  ## download_loop.c:424:51
 1e16c46:    3b 24             	if (r2 == 0) goto 118 <active_update_task+0x444 : 1e16cbe >			  ## download_loop.c:424:51
 1e16c48:    01 f6 f0 90       	r1 = [r9 + 240]			  ## download_loop.c:622:38
 1e16c4c:    c0 a9             	r0 = sp + 156			  ## download_loop.c:622:38
 1e16c4e:    82 00             	call r2			  ## download_loop.c:425:15
 1e16c50:    36 18             	goto 108 <active_update_task+0x444 : 1e16cbe >			  ## download_loop.c:425:15
 1e16c52:    1b f9 11 90       	b[r9 + 17] = r11			  ## download_loop.c:617:22
 1e16c56:    fa 07             	r10 = -1			  ## download_loop.c:617:22
 1e16c58:    32 18             	goto 100 <active_update_task+0x444 : 1e16cbe >			  ## download_loop.c:617:22
 1e16c5a:    0c f5 0c 00       	r12 = [sp+12]
 1e16c5e:    fa 07             	r10 = -1
 1e16c60:    47 02             	r7 = [sp+16]
 1e16c62:    2d 18             	goto 90 <active_update_task+0x444 : 1e16cbe >
 1e16c64:    00 fb 00 02       	r0 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:368:20
 1e16c68:    bf f3 fa 9c       	call -50700 <malloc : 1e0a660 >			  ## download_loop.c:368:20
 1e16c6c:    04 08             	r4 = r0			  ## download_loop.c:368:20
 1e16c6e:    ea 29             	if (r4 == 0) goto -44 <active_update_task+0x3CA : 1e16c44 >
 1e16c70:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:371:13
 1e16c74:    10 20             	if (r0 == 0) goto 32 <active_update_task+0x41C : 1e16c96 >			  ## download_loop.c:371:13
 1e16c76:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:371:41
 1e16c78:    0e 26             	if (r3 == 0) goto 28 <active_update_task+0x41C : 1e16c96 >			  ## download_loop.c:371:41
 1e16c7a:    20 40             	r0 = [r0 + 8]			  ## download_loop.c:371:64
 1e16c7c:    0c 20             	if (r0 == 0) goto 24 <active_update_task+0x41C : 1e16c96 >			  ## download_loop.c:371:64
 1e16c7e:    00 70             	r0 = 0			  ## download_loop.c:372:13
 1e16c80:    01 70             	r1 = 0			  ## download_loop.c:372:13
 1e16c82:    02 70             	r2 = 0			  ## download_loop.c:372:13
 1e16c84:    83 00             	call r3			  ## download_loop.c:372:13
 1e16c86:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:373:13
 1e16c8a:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:373:26
 1e16c8c:    00 70             	r0 = 0			  ## download_loop.c:373:13
 1e16c8e:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:373:13
 1e16c92:    41 08             	r1 = r4			  ## download_loop.c:373:13
 1e16c94:    83 00             	call r3			  ## download_loop.c:373:13
 1e16c96:    40 fc 22 00       	r0 = r4 + 34			  ## download_loop.c:379:45
 1e16c9a:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e16c9c:    bf f3 8e 4e       	call -90852 <CRC16 : 1e009bc >			  ## download_loop.c:339:12
 1e16ca0:    90 48             	r0 = [r4 + 36]			  ## download_loop.c:385:43
 1e16ca2:    10 f5 9c 00       	[sp+156] = r0			  ## download_loop.c:385:20
 1e16ca6:    a0 48             	r0 = [r4 + 40]			  ## download_loop.c:386:29
 1e16ca8:    10 f5 a0 00       	[sp+160] = r0			  ## download_loop.c:386:19
 1e16cac:    10 59             	r0 = h[r4 + 34] (u)			  ## download_loop.c:387:29
 1e16cae:    90 f5 a4 00       	h[sp+164] = r0			  ## download_loop.c:387:19
 1e16cb2:    f0 48             	r0 = [r4 + 60]			  ## download_loop.c:388:34
 1e16cb4:    10 f5 a8 00       	[sp+168] = r0			  ## download_loop.c:388:24
 1e16cb8:    40 08             	r0 = r4			  ## download_loop.c:392:9
 1e16cba:    bf f3 e4 9c       	call -50744 <free : 1e0a686 >			  ## download_loop.c:392:9
 1e16cbe:    05 f6 00 e0       	r5 = [r14 + 0]			  ## download_loop.c:864:38
 1e16cc2:    02 f6 f4 90       	r2 = [r9 + 244]			  ## flash_fs_api.c:89:12
 1e16cc6:    c4 aa             	r4 = sp + 172			  ## flash_fs_api.c:89:12
 1e16cc8:    01 72             	r1 = 32			  ## flash_fs_api.c:571:5
 1e16cca:    40 08             	r0 = r4			  ## flash_fs_api.c:571:5
 1e16ccc:    bf f3 92 4e       	call -90844 <norflash_read : 1e009f4 >			  ## flash_fs_api.c:571:5
 1e16cd0:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:44:42
 1e16cd4:    e1 71             	r1 = 30			  ## flash_fs_api.c:44:20
 1e16cd6:    bf f3 71 4e       	call -90910 <CRC16 : 1e009bc >			  ## flash_fs_api.c:44:20
 1e16cda:    81 f5 ac 00       	r1 = h[sp+172] (u)			  ## flash_fs_api.c:45:15
 1e16cde:    01 f2 08 10       	if (r1 != r0) goto 16 <active_update_task+0x478 : 1e16cf2 >
 1e16ce2:    c0 f5 b9 00       	r0 = b[sp+185] (u)			  ## flash_fs_api.c:579:42
 1e16ce6:    68 6a             	b[r5 + 6] = r0			  ## flash_fs_api.c:579:29
 1e16ce8:    c1 f5 b8 00       	r1 = b[sp+184] (u)			  ## flash_fs_api.c:582:40
 1e16cec:    79 6a             	b[r5 + 7] = r1			  ## flash_fs_api.c:582:27
 1e16cee:    10 f9 12 90       	b[r9 + 18] = r0			  ## flash_fs_api.c:585:26
 1e16cf2:    04 f6 00 e0       	r4 = [r14 + 0]			  ## download_loop.c:865:40
 1e16cf6:    00 f6 f4 90       	r0 = [r9 + 244]			  ## flash_fs_api.c:89:12
 1e16cfa:    02 fc 60 00       	r2 = r0 + 96			  ## flash_fs_api.c:596:77
 1e16cfe:    c0 ac             	r0 = sp + 204
 1e16d00:    01 72             	r1 = 32			  ## flash_fs_api.c:601:5
 1e16d02:    bf f3 77 4e       	call -90898 <norflash_read : 1e009f4 >			  ## flash_fs_api.c:601:5
 1e16d06:    00 f5 d0 00       	r0 = [sp+208]			  ## flash_fs_api.c:606:42
 1e16d0a:    28 48             	[r4 + 8] = r0			  ## flash_fs_api.c:606:25
 1e16d0c:    04 70             	r4 = 0			  ## flash_fs_api.c:606:25
 1e16d0e:    fb ef 7d 10       	if (r11 != -1) goto 250 <active_update_task+0x592 : 1e16e0c >			  ## flash_fs_api.c:606:25
 1e16d12:    00 f9 11 90       	r0 = b[r9 + 17] (u)			  ## download_loop.c:647:28
 1e16d16:    b4 70             	r4 = 11
 1e16d18:    fb 07             	r11 = -1
 1e16d1a:    88 02             	[sp+32] = r0
 1e16d1c:    77 20             	if (r0 == 0) goto 238 <active_update_task+0x592 : 1e16e0c >
 1e16d1e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:869:57
 1e16d22:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:655:35
 1e16d24:    02 f6 f4 90       	r2 = [r9 + 244]			  ## flash_fs_api.c:89:12
 1e16d28:    73 60             	r3 = b[r0 + 7] (u)			  ## download_loop.c:869:95
 1e16d2a:    7b 02             	[sp+28] = r3			  ## download_loop.c:869:65
 1e16d2c:    60 60             	r0 = b[r0 + 6] (u)			  ## download_loop.c:869:65
 1e16d2e:    28 02             	[sp+8] = r0			  ## download_loop.c:655:46
 1e16d30:    14 fc 00 02       	r4 = r1 + 512			  ## download_loop.c:655:46
 1e16d34:    10 d3             	r0 = r2 >> 12			  ## download_loop.c:651:54
 1e16d36:    18 02             	[sp+4] = r0			  ## download_loop.c:651:54
 1e16d38:    0d 70             	r13 = 0			  ## download_loop.c:651:54
 1e16d3a:    08 72             	r8 = 32			  ## download_loop.c:651:54
 1e16d3c:    6c 02             	[sp+24] = r4			  ## download_loop.c:651:54
 1e16d3e:    46 fb 01 ab       	r6 = r10 + 65536			  ## download_loop.c:651:54
 1e16d42:    c5 ff f5 66 e1 01 	r5 = 31549173 <JL_APP_CODE0_FILE_NAME : 1e166f5 >			  ## download_loop.c:651:54
 1e16d48:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:664:9
 1e16d4c:    c1 ff 94 2e 00 00 	r1 = 11924 <fw_flash_bin_head : 2e94 >			  ## download_loop.c:664:9
 1e16d52:    02 75             	r2 = 80			  ## download_loop.c:664:9
 1e16d54:    80 fe 20 1d       	r1 += r13 * r2			  ## download_loop.c:664:9
 1e16d58:    22 42             	r2 = [r1 + 8]			  ## download_loop.c:664:67
 1e16d5a:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:664:22
 1e16d5c:    00 70             	r0 = 0			  ## download_loop.c:664:9
 1e16d5e:    01 70             	r1 = 0			  ## download_loop.c:664:9
 1e16d60:    83 00             	call r3			  ## download_loop.c:664:9
 1e16d62:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:665:17
 1e16d66:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:665:30
 1e16d68:    00 70             	r0 = 0			  ## download_loop.c:665:17
 1e16d6a:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:665:17
 1e16d6e:    41 08             	r1 = r4			  ## download_loop.c:665:17
 1e16d70:    83 00             	call r3			  ## download_loop.c:665:17
 1e16d72:    61 08             	r1 = r6			  ## download_loop.c:665:17
 1e16d74:    10 f2 43 00       	if (r0 == r1) goto 134 <active_update_task+0x584 : 1e16dfe >			  ## download_loop.c:665:17
 1e16d78:    0a 70             	r10 = 0
 1e16d7a:    47 08             	r7 = r4
 1e16d7c:    0c 70             	r12 = 0
 1e16d7e:    03 18             	goto 6 <active_update_task+0x50C : 1e16d86 >
 1e16d80:    7a 08             	r10 = r7
 1e16d82:    07 82             	r7 += 32			  ## download_loop.c:676:9
 1e16d84:    1c 70             	r12 = 1			  ## download_loop.c:676:9
 1e16d86:    02 72             	r2 = 32			  ## download_loop.c:677:13
 1e16d88:    03 70             	r3 = 0			  ## download_loop.c:677:13
 1e16d8a:    18 f5 00 00       	[sp] = r8			  ## download_loop.c:677:13
 1e16d8e:    60 08             	r0 = r6			  ## download_loop.c:677:13
 1e16d90:    71 08             	r1 = r7			  ## download_loop.c:677:13
 1e16d92:    fe 14             	call -1540 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:677:13
 1e16d94:    60 ff ff c9 f3 ff 	if ((r12 & 255) == 0) goto -26 <active_update_task+0x506 : 1e16d80 >			  ## download_loop.c:677:13
 1e16d9a:    04 9f             	r4 = r7 + 16			  ## download_loop.c:680:29
 1e16d9c:    d2 70             	r2 = 13			  ## download_loop.c:680:29
 1e16d9e:    40 08             	r0 = r4			  ## download_loop.c:680:29
 1e16da0:    51 08             	r1 = r5			  ## download_loop.c:680:29
 1e16da2:    97 f3 a3 80       	call 3080518 <memcmp : 106eec >			  ## download_loop.c:680:29
 1e16da6:    07 20             	if (r0 == 0) goto 14 <active_update_task+0x53C : 1e16db6 >			  ## download_loop.c:680:29
 1e16da8:    1c 80             	r12 += 1			  ## download_loop.c:676:63
 1e16daa:    e4 fd 00 0c       	r0 = r12.b0 (u)			  ## download_loop.c:676:63
 1e16dae:    07 99             	r7 = r4 + 16			  ## download_loop.c:676:9
 1e16db0:    00 e1 e9 3f       	if (r0 < 16) goto -46 <active_update_task+0x50C : 1e16d86 >			  ## download_loop.c:676:9
 1e16db4:    07 70             	r7 = 0
 1e16db6:    a0 08             	r0 = r10			  ## download_loop.c:687:18
 1e16db8:    bf f3 47 4e       	call -90994 <jl_file_head_valid_check : 1e00a4a >			  ## download_loop.c:687:18
 1e16dbc:    22 30             	if (r0 != 0) goto 68 <active_update_task+0x588 : 1e16e02 >			  ## download_loop.c:687:18
 1e16dbe:    70 08             	r0 = r7			  ## download_loop.c:693:18
 1e16dc0:    bf f3 43 4e       	call -91002 <jl_file_head_valid_check : 1e00a4a >			  ## download_loop.c:693:18
 1e16dc4:    0c f5 0c 00       	r12 = [sp+12]			  ## download_loop.c:693:18
 1e16dc8:    1e 30             	if (r0 != 0) goto 60 <active_update_task+0x58C : 1e16e06 >			  ## download_loop.c:693:18
 1e16dca:    00 f9 0c a0       	r0 = b[r10 + 12] (u)			  ## download_loop.c:699:56
 1e16dce:    71 02             	r1 = [sp+28]			  ## download_loop.c:699:13
 1e16dd0:    10 f2 0f 10       	if (r0 != r1) goto 30 <active_update_task+0x578 : 1e16df2 >			  ## download_loop.c:699:13
 1e16dd4:    00 f9 0d a0       	r0 = b[r10 + 13] (u)			  ## download_loop.c:704:57
 1e16dd8:    21 02             	r1 = [sp+8]			  ## download_loop.c:704:13
 1e16dda:    10 f2 0a 10       	if (r0 != r1) goto 20 <active_update_task+0x578 : 1e16df2 >			  ## download_loop.c:704:13
 1e16dde:    10 5e             	r0 = h[r7 + 2] (u)			  ## download_loop.c:709:42
 1e16de0:    01 d2             	r1 = r0 >> 8			  ## download_loop.c:709:70
 1e16de2:    00 c1             	r0 = r0 << 4			  ## download_loop.c:709:134
 1e16de4:    10 09             	r0 += r1			  ## download_loop.c:709:89
 1e16de6:    10 81             	r0 += 17			  ## download_loop.c:709:89
 1e16de8:    11 02             	r1 = [sp+4]			  ## download_loop.c:710:34
 1e16dea:    d0 b2             	r0 ^= r1			  ## download_loop.c:710:34
 1e16dec:    60 ff ff 09 21 03 	if ((r0 & 255) == 0) goto 1602 <active_update_task+0xBBA : 1e17434 >			  ## download_loop.c:710:34
 1e16df2:    1d 80             	r13 += 1			  ## download_loop.c:662:31
 1e16df4:    47 02             	r7 = [sp+16]			  ## download_loop.c:662:31
 1e16df6:    80 02             	r0 = [sp+32]			  ## download_loop.c:662:31
 1e16df8:    64 02             	r4 = [sp+24]			  ## download_loop.c:662:31
 1e16dfa:    0d f2 a5 3f       	if (r13 < r0) goto -182 <active_update_task+0x4CE : 1e16d48 >			  ## download_loop.c:662:31
 1e16dfe:    fa 07             	r10 = -1
 1e16e00:    04 18             	goto 8 <active_update_task+0x590 : 1e16e0a >
 1e16e02:    0c f5 0c 00       	r12 = [sp+12]
 1e16e06:    fa 07             	r10 = -1
 1e16e08:    47 02             	r7 = [sp+16]
 1e16e0a:    b4 70             	r4 = 11
 1e16e0c:    03 2e             	if (r7 == 0) goto 6 <active_update_task+0x59A : 1e16e14 >
 1e16e0e:    70 08             	r0 = r7			  ## download_loop.c:877:9
 1e16e10:    bf f3 39 9c       	call -51086 <free : 1e0a686 >			  ## download_loop.c:877:9
 1e16e14:    27 28             	if (r4 == 0) goto 78 <active_update_task+0x5EA : 1e16e64 >
 1e16e16:    60 78             	r0 = 134			  ## download_loop.c:2022:9
 1e16e18:    ae 14             	call -1700 <update_stop : 1e16776 >			  ## download_loop.c:2022:9
 1e16e1a:    20 15             	call -1472 <update_resource_release : 1e1685c >			  ## download_loop.c:2186:5
 1e16e1c:    fa 07             	r10 = -1			  ## download_loop.c:2186:5
 1e16e1e:    00 f9 10 90       	r0 = b[r9 + 16] (u)			  ## download_loop.c:516:12
 1e16e22:    1a f5 24 00       	[sp+36] = r10			  ## update_main.c:152:18
 1e16e26:    d0 f5 28 00       	b[sp+40] = r0			  ## update_main.c:153:23
 1e16e2a:    00 f6 58 f0       	r0 = [r15 + 88]			  ## update_main.c:70:15
 1e16e2e:    04 20             	if (r0 == 0) goto 8 <active_update_task+0x5BE : 1e16e38 >			  ## update_main.c:70:15
 1e16e30:    61 40             	r1 = [r0 + 24]			  ## update_main.c:70:43
 1e16e32:    02 22             	if (r1 == 0) goto 4 <active_update_task+0x5BE : 1e16e38 >			  ## update_main.c:70:43
 1e16e34:    c0 08             	r0 = r12			  ## update_main.c:71:9
 1e16e36:    81 00             	call r1			  ## update_main.c:71:9
 1e16e38:    03 f6 60 f0       	r3 = [r15 + 96]			  ## update_main.c:161:15
 1e16e3c:    04 26             	if (r3 == 0) goto 8 <active_update_task+0x5CC : 1e16e46 >			  ## update_main.c:161:15
 1e16e3e:    42 a2             	r2 = sp + 36
 1e16e40:    31 70             	r1 = 3			  ## update_main.c:162:9
 1e16e42:    c0 08             	r0 = r12			  ## update_main.c:162:9
 1e16e44:    83 00             	call r3			  ## update_main.c:162:9
 1e16e46:    01 f6 ec 90       	r1 = [r9 + 236]			  ## update_main.c:165:5
 1e16e4a:    00 70             	r0 = 0			  ## update_main.c:165:22
 1e16e4c:    c1 85             	r1 += 92			  ## update_main.c:165:22
 1e16e4e:    88 62             	b[r1 + 8] = r0			  ## update_main.c:165:22
 1e16e50:    02 62             	r2 = b[r1 + 0] (u)			  ## update_main.c:86:22
 1e16e52:    06 24             	if (r2 == 0) goto 12 <active_update_task+0x5E6 : 1e16e60 >			  ## update_main.c:86:22
 1e16e54:    08 62             	b[r1 + 0] = r0			  ## update_main.c:87:30
 1e16e56:    c0 ff 05 df e0 01 	r0 = 31514373 <update_target_end+0x25 : 1e0df05 >			  ## update_main.c:88:9
 1e16e5c:    bf f3 cd a3       	call -47206 <task_kill : 1e0b5fa >			  ## update_main.c:88:9
 1e16e60:    fe 0a             	sp += 508
 1e16e62:    5f 01             	{pc, r15-r4} = [sp++]			  ## update_main.c:172:1
 1e16e64:    fb ef 5b 00       	if (r11 == -1) goto 182 <active_update_task+0x6A4 : 1e16f1e >			  ## download_loop.c:2028:9
 1e16e68:    04 70             	r4 = 0
 1e16e6a:    15 70             	r5 = 1
 1e16e6c:    06 70             	r6 = 0
 1e16e6e:    f8 fd 60 05       	r0 = r5 << r6			  ## download_loop.c:1612:32
 1e16e72:    b0 f0 0a 00       	if ((r0 & r11) == 0) goto 20 <active_update_task+0x610 : 1e16e8a >			  ## download_loop.c:1612:32
 1e16e76:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1613:17
 1e16e7a:    40 09             	r0 += r4			  ## download_loop.c:1613:44
 1e16e7c:    01 f6 08 02       	r1 = [r0 + 520]			  ## download_loop.c:1613:44
 1e16e80:    04 22             	if (r1 == 0) goto 8 <active_update_task+0x610 : 1e16e8a >			  ## download_loop.c:1613:44
 1e16e82:    00 fc f8 01       	r0 = r0 + 504			  ## download_loop.c:1614:26
 1e16e86:    81 00             	call r1			  ## download_loop.c:1614:26
 1e16e88:    8b 30             	if (r0 != 0) goto 278 <active_update_task+0x726 : 1e16fa0 >			  ## download_loop.c:1614:26
 1e16e8a:    16 80             	r6 += 1			  ## download_loop.c:1611:26
 1e16e8c:    84 81             	r4 += 24			  ## download_loop.c:1611:19
 1e16e8e:    06 e2 ee 3f       	if (r6 < 32) goto -36 <active_update_task+0x5F4 : 1e16e6e >			  ## download_loop.c:1611:19
 1e16e92:    0d 70             	r13 = 0
 1e16e94:    0b 70             	r11 = 0
 1e16e96:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2084:41
 1e16e9a:    01 f6 f0 90       	r1 = [r9 + 240]			  ## download_loop.c:2084:5
 1e16e9e:    82 40             	r2 = [r0 + 32]			  ## download_loop.c:2084:70
 1e16ea0:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:2084:18
 1e16ea2:    00 70             	r0 = 0			  ## download_loop.c:2084:5
 1e16ea4:    01 70             	r1 = 0			  ## download_loop.c:2084:5
 1e16ea6:    05 70             	r5 = 0			  ## download_loop.c:2084:5
 1e16ea8:    83 00             	call r3			  ## download_loop.c:2084:5
 1e16eaa:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2085:39
 1e16eae:    02 f6 f0 90       	r2 = [r9 + 240]			  ## download_loop.c:2085:13
 1e16eb2:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:2085:47
 1e16eb4:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:2085:26
 1e16eb6:    00 70             	r0 = 0			  ## download_loop.c:2085:13
 1e16eb8:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:2085:13
 1e16ebc:    83 00             	call r3			  ## download_loop.c:2085:13
 1e16ebe:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2087:37
 1e16ec2:    08 f6 00 00       	r8 = [r0 + 0]			  ## download_loop.c:2087:45
 1e16ec6:    c7 ff 52 66 e1 01 	r7 = 31549010 <update_loader_match_tab+0x2 : 1e16652 >
 1e16ecc:    50 02             	r0 = [sp+20]
 1e16ece:    20 04             	r0 = r0.l (u)
 1e16ed0:    01 f7 fe 7f       	r1 = h[r7 + -2] (u)			  ## download_loop.c:917:48
 1e16ed4:    01 f2 05 00       	if (r1 == r0) goto 10 <active_update_task+0x668 : 1e16ee2 >			  ## download_loop.c:917:48
 1e16ed8:    15 80             	r5 += 1			  ## download_loop.c:916:31
 1e16eda:    27 81             	r7 += 18			  ## download_loop.c:916:19
 1e16edc:    85 e0 f8 9f       	if (r5 <= 8) goto -16 <active_update_task+0x656 : 1e16ed0 >			  ## download_loop.c:916:19
 1e16ee0:    07 70             	r7 = 0
 1e16ee2:    05 70             	r5 = 0
 1e16ee4:    c9 ff 74 2e 00 00 	r9 = 11892 <curr_loader_file_head : 2e74 >
 1e16eea:    04 f7 00 80       	r4 = h[r8 + 0] (u)			  ## download_loop.c:939:33
 1e16eee:    86 fc 02 00       	r6 = r8 + 2			  ## download_loop.c:339:12
 1e16ef2:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e16ef4:    60 08             	r0 = r6			  ## download_loop.c:339:12
 1e16ef6:    bf f3 61 4d       	call -91454 <CRC16 : 1e009bc >			  ## download_loop.c:339:12
 1e16efa:    04 f2 64 10       	if (r4 != r0) goto 200 <active_update_task+0x74C : 1e16fc6 >			  ## download_loop.c:339:12
 1e16efe:    e0 6c             	r0 = b[r6 + 14] (u)			  ## download_loop.c:939:126
 1e16f00:    62 20             	if (r0 == 0) goto 196 <active_update_task+0x74C : 1e16fc6 >			  ## download_loop.c:939:126
 1e16f02:    0c f9 0a 60       	r12 = b[r6 + 10] (u)			  ## download_loop.c:946:53
 1e16f06:    e6 80             	r6 += 14			  ## download_loop.c:949:18
 1e16f08:    02 71             	r2 = 16			  ## download_loop.c:949:18
 1e16f0a:    60 08             	r0 = r6			  ## download_loop.c:949:18
 1e16f0c:    71 08             	r1 = r7			  ## download_loop.c:949:18
 1e16f0e:    97 f3 ed 7f       	call 3080154 <memcmp : 106eec >			  ## download_loop.c:949:18
 1e16f12:    51 20             	if (r0 == 0) goto 162 <active_update_task+0x73C : 1e16fb6 >			  ## download_loop.c:949:18
 1e16f14:    15 80             	r5 += 1			  ## download_loop.c:938:41
 1e16f16:    08 9d             	r8 = r6 + 16			  ## download_loop.c:938:5
 1e16f18:    95 e0 e7 3f       	if (r5 < 9) goto -50 <active_update_task+0x670 : 1e16eea >			  ## download_loop.c:938:5
 1e16f1c:    51 18             	goto 162 <active_update_task+0x746 : 1e16fc0 >			  ## download_loop.c:938:5
 1e16f1e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2031:45
 1e16f22:    01 f6 f0 90       	r1 = [r9 + 240]			  ## download_loop.c:2031:9
 1e16f26:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:2031:72
 1e16f2a:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:2031:22
 1e16f2c:    00 70             	r0 = 0			  ## download_loop.c:2031:9
 1e16f2e:    01 70             	r1 = 0			  ## download_loop.c:2031:9
 1e16f30:    04 70             	r4 = 0			  ## download_loop.c:2031:9
 1e16f32:    83 00             	call r3			  ## download_loop.c:2031:9
 1e16f34:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2032:43
 1e16f38:    02 f6 f0 90       	r2 = [r9 + 240]			  ## download_loop.c:2032:17
 1e16f3c:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:2032:51
 1e16f3e:    23 44             	r3 = [r2 + 8]			  ## download_loop.c:2032:30
 1e16f40:    00 70             	r0 = 0			  ## download_loop.c:2032:17
 1e16f42:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:2032:17
 1e16f46:    83 00             	call r3			  ## download_loop.c:2032:17
 1e16f48:    41 fb 01 ab       	r1 = r10 + 65536			  ## download_loop.c:2032:17
 1e16f4c:    10 f2 1f 0d       	if (r0 == r1) goto -1474 <active_update_task+0x114 : 1e1698e >			  ## download_loop.c:2032:17
 1e16f50:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2040:42
 1e16f54:    07 40             	r7 = [r0 + 0]			  ## download_loop.c:2040:50
 1e16f56:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## download_loop.c:2040:50
 1e16f5c:    08 f7 1c 00       	r8 = h[r0 + 28] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e16f60:    e0 fb 0c 01       	r0 = sp + 268			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e16f64:    06 91             	r6 = r0 + 16
 1e16f66:    0b 72             	r11 = 32
 1e16f68:    1a 08             	r10 = r1
 1e16f6a:    01 bf             	r1 = r7 + r4			  ## download_loop.c:1498:9
 1e16f6c:    e5 fb 0c 01       	r5 = sp + 268			  ## download_loop.c:1498:9
 1e16f70:    02 72             	r2 = 32			  ## download_loop.c:1498:9
 1e16f72:    50 08             	r0 = r5			  ## download_loop.c:1498:9
 1e16f74:    97 f3 b6 7f       	call 3080044 <memcpy : 106ee4 >			  ## download_loop.c:1498:9
 1e16f78:    02 72             	r2 = 32			  ## download_loop.c:1499:9
 1e16f7a:    03 70             	r3 = 0			  ## download_loop.c:1499:9
 1e16f7c:    1b f5 00 00       	[sp] = r11			  ## download_loop.c:1499:9
 1e16f80:    a0 08             	r0 = r10			  ## download_loop.c:1499:9
 1e16f82:    51 08             	r1 = r5			  ## download_loop.c:1499:9
 1e16f84:    05 14             	call -2038 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:1499:9
 1e16f86:    d2 70             	r2 = 13			  ## download_loop.c:1500:18
 1e16f88:    60 08             	r0 = r6			  ## download_loop.c:1500:18
 1e16f8a:    c1 ff f5 66 e1 01 	r1 = 31549173 <JL_APP_CODE0_FILE_NAME : 1e166f5 >			  ## download_loop.c:1500:18
 1e16f90:    97 f3 ac 7f       	call 3080024 <memcmp : 106eec >			  ## download_loop.c:1500:18
 1e16f94:    7a 20             	if (r0 == 0) goto 244 <active_update_task+0x810 : 1e1708a >			  ## download_loop.c:1500:18
 1e16f96:    04 82             	r4 += 32			  ## download_loop.c:1497:48
 1e16f98:    09 ff ff 41 e6 ff 	if (r4 <= 511) goto -52 <active_update_task+0x6F0 : 1e16f6a >
 1e16f9e:    cd 18             	goto 410 <active_update_task+0x8C0 : 1e1713a >
 1e16fa0:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1617:32
 1e16fa4:    40 09             	r0 += r4			  ## download_loop.c:1617:59
 1e16fa6:    00 f9 0c 02       	r0 = b[r0 + 524] (u)			  ## download_loop.c:1617:59
 1e16faa:    0d 70             	r13 = 0			  ## download_loop.c:1617:59
 1e16fac:    0b 70             	r11 = 0			  ## download_loop.c:1617:59
 1e16fae:    c0 e0 72 1f       	if (r0 != 12) goto -284 <active_update_task+0x61C : 1e16e96 >			  ## download_loop.c:1617:59
 1e16fb2:    10 70             	r0 = 1			  ## download_loop.c:2065:13
 1e16fb4:    b3 1a             	goto 1382 <active_update_task+0xCA2 : 1e1751c >			  ## download_loop.c:2065:13
 1e16fb6:    02 72             	r2 = 32			  ## download_loop.c:951:13
 1e16fb8:    90 08             	r0 = r9			  ## download_loop.c:951:13
 1e16fba:    81 08             	r1 = r8			  ## download_loop.c:951:13
 1e16fbc:    97 f3 92 7f       	call 3079972 <memcpy : 106ee4 >			  ## download_loop.c:951:13
 1e16fc0:    40 05             	r0 = r5.b0 (u)
 1e16fc2:    90 e0 09 10       	if (r0 != 9) goto 18 <active_update_task+0x75E : 1e16fd8 >
 1e16fc6:    60 78             	r0 = 134			  ## download_loop.c:2089:9
 1e16fc8:    bf f3 d5 fb       	call -2134 <update_stop : 1e16776 >
 1e16fcc:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >
 1e16fd2:    0c f5 0c 00       	r12 = [sp+12]
 1e16fd6:    db 1c             	goto -1610 <active_update_task+0x114 : 1e1698e >
 1e16fd8:    08 f6 08 90       	r8 = [r9 + 8]			  ## download_loop.c:2102:82
 1e16fdc:    00 70             	r0 = 0
 1e16fde:    10 f5 98 01       	[sp+408] = r0			  ## flash_fs_api.c:372:20
 1e16fe2:    10 f5 94 01       	[sp+404] = r0			  ## flash_fs_api.c:372:20
 1e16fe6:    10 f5 90 01       	[sp+400] = r0			  ## flash_fs_api.c:372:20
 1e16fea:    10 f5 8c 01       	[sp+396] = r0			  ## flash_fs_api.c:372:20
 1e16fee:    c0 ff 02 56 04 40 	r0 = 1074025986 <text_size+0x2D422 : 45602 >			  ## flash_fs_api.c:373:5
 1e16ff4:    e1 fb 8c 01       	r1 = sp + 396			  ## flash_fs_api.c:373:5
 1e16ff8:    bf f3 36 4d       	call -91540 <norflash_ioctl : 1e00a68 >			  ## flash_fs_api.c:373:5
 1e16ffc:    04 f5 98 01       	r4 = [sp+408]			  ## flash_fs_api.c:380:62
 1e17000:    07 f5 90 01       	r7 = [sp+400]			  ## flash_fs_api.c:380:49
 1e17004:    e1 fb ec 01       	r1 = sp + 492
 1e17008:    70 76             	r0 = 103			  ## flash_fs_api.c:272:5
 1e1700a:    bf f3 2d 4d       	call -91558 <norflash_ioctl : 1e00a68 >			  ## flash_fs_api.c:272:5
 1e1700e:    06 f5 ec 01       	r6 = [sp+492]			  ## flash_fs_api.c:274:12
 1e17012:    ca b9             	r10 = r4 + r7			  ## flash_fs_api.c:304:47
 1e17014:    80 fb b0 ed       	r14 = r13 + r11			  ## flash_fs_api.c:306:45
 1e17018:    d0 08             	r0 = r13			  ## flash_fs_api.c:292:29
 1e1701a:    bf f3 bc 4d       	call -91272 <__jl_fs_sector_align : 1e00b96 >			  ## flash_fs_api.c:292:29
 1e1701e:    b0 09             	r0 += r11			  ## flash_fs_api.c:292:29
 1e17020:    c9 ff ff ff 01 00 	r9 = 131071 <text_size+0x7E1F : 1ffff >			  ## flash_fs_api.c:292:29
 1e17026:    90 09             	r0 += r9			  ## flash_fs_api.c:292:29
 1e17028:    cb ff 00 00 fe ff 	r11 = 4294836224 <bank_code_load_addr+0x1C5754 : 1fe0000 >			  ## flash_fs_api.c:292:29
 1e1702e:    e2 fd b0 50       	r5 = r0 & r11			  ## flash_fs_api.c:292:29
 1e17032:    70 08             	r0 = r7			  ## flash_fs_api.c:293:31
 1e17034:    bf f3 af 4d       	call -91298 <__jl_fs_sector_align : 1e00b96 >			  ## flash_fs_api.c:293:31
 1e17038:    40 09             	r0 += r4			  ## flash_fs_api.c:293:31
 1e1703a:    90 09             	r0 += r9			  ## flash_fs_api.c:293:31
 1e1703c:    e2 fd b0 40       	r4 = r0 & r11			  ## flash_fs_api.c:293:31
 1e17040:    45 f2 01 30       	if (r5 < r4) goto 2 <active_update_task+0x7CC : 1e17046 >
 1e17044:    ea 08             	r10 = r14			  ## flash_fs_api.c:302:9
 1e17046:    80 fc 20 01       	r0 = r8 + 288			  ## flash_fs_api.c:294:33
 1e1704a:    bf f3 a4 4d       	call -91320 <__jl_fs_sector_align : 1e00b96 >			  ## flash_fs_api.c:294:33
 1e1704e:    0b 08             	r11 = r0			  ## flash_fs_api.c:294:33
 1e17050:    90 fb 00 1a       	r1 = r10 - r0
 1e17054:    d0 08             	r0 = r13			  ## flash_fs_api.c:299:31
 1e17056:    c9 ff ff ff 00 00 	r9 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## flash_fs_api.c:299:31
 1e1705c:    07 f2 01 30       	if (r7 < r0) goto 2 <active_update_task+0x7E8 : 1e17062 >			  ## flash_fs_api.c:299:31
 1e17060:    70 08             	r0 = r7			  ## flash_fs_api.c:299:31
 1e17062:    62 fb 02 bb       	r2 = 131072 - r11			  ## flash_fs_api.c:312:53
 1e17066:    52 09             	r2 += r5			  ## flash_fs_api.c:312:71
 1e17068:    fa 07             	r10 = -1
 1e1706a:    ce ff 70 2e 00 00 	r14 = 11888 <update_bss_start : 2e70 >
 1e17070:    01 f2 01 30       	if (r1 < r0) goto 2 <active_update_task+0x7FC : 1e17076 >
 1e17074:    12 08             	r2 = r1			  ## flash_fs_api.c:310:9
 1e17076:    65 f2 01 30       	if (r5 < r6) goto 2 <active_update_task+0x802 : 1e1707c >
 1e1707a:    12 08             	r2 = r1			  ## flash_fs_api.c:310:9
 1e1707c:    64 f2 01 30       	if (r4 < r6) goto 2 <active_update_task+0x808 : 1e17082 >
 1e17080:    12 08             	r2 = r1			  ## flash_fs_api.c:310:9
 1e17082:    65 f2 5c 90       	if (r5 <= r6) goto 184 <active_update_task+0x8C4 : 1e1713e >			  ## flash_fs_api.c:321:9
 1e17086:    10 78             	r0 = 129			  ## download_loop.c:2111:13
 1e17088:    9f 1f             	goto -194 <active_update_task+0x74E : 1e16fc8 >			  ## download_loop.c:2111:13
 1e1708a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1514:28
 1e1708e:    01 f6 f0 90       	r1 = [r9 + 240]			  ## download_loop.c:1515:5
 1e17092:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1515:101
 1e17096:    03 f5 10 01       	r3 = [sp+272]			  ## download_loop.c:1501:13
 1e1709a:    04 40             	r4 = [r0 + 0]			  ## download_loop.c:1514:36
 1e1709c:    35 42             	r5 = [r1 + 12]			  ## download_loop.c:1515:18
 1e1709e:    32 09             	r2 += r3			  ## download_loop.c:1515:72
 1e170a0:    00 70             	r0 = 0			  ## download_loop.c:1515:5
 1e170a2:    01 70             	r1 = 0			  ## download_loop.c:1515:5
 1e170a4:    06 70             	r6 = 0			  ## download_loop.c:1515:5
 1e170a6:    85 00             	call r5			  ## download_loop.c:1515:5
 1e170a8:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:1516:5
 1e170ac:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1516:18
 1e170ae:    4d fc 00 02       	r13 = r4 + 512			  ## download_loop.c:1514:47
 1e170b2:    00 70             	r0 = 0			  ## download_loop.c:1516:5
 1e170b4:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1516:5
 1e170b8:    d1 08             	r1 = r13			  ## download_loop.c:1516:5
 1e170ba:    83 00             	call r3			  ## download_loop.c:1516:5
 1e170bc:    c5 ae             	r5 = sp + 236			  ## download_loop.c:1516:5
 1e170be:    02 72             	r2 = 32			  ## download_loop.c:1518:5
 1e170c0:    0a 72             	r10 = 32			  ## download_loop.c:1518:5
 1e170c2:    50 08             	r0 = r5			  ## download_loop.c:1518:5
 1e170c4:    d1 08             	r1 = r13			  ## download_loop.c:1518:5
 1e170c6:    97 f3 0d 7f       	call 3079706 <memcpy : 106ee4 >			  ## download_loop.c:1518:5
 1e170ca:    02 72             	r2 = 32			  ## download_loop.c:1519:5
 1e170cc:    03 70             	r3 = 0			  ## download_loop.c:1519:5
 1e170ce:    1a f5 00 00       	[sp] = r10			  ## download_loop.c:1519:5
 1e170d2:    80 08             	r0 = r8			  ## download_loop.c:1519:5
 1e170d4:    51 08             	r1 = r5			  ## download_loop.c:1519:5
 1e170d6:    bf f3 5b fb       	call -2378 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:1519:5
 1e170da:    00 fd 02 59       	r0 = r5 | 2			  ## download_loop.c:1521:58
 1e170de:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e170e0:    bf f3 6c 4c       	call -91944 <CRC16 : 1e009bc >			  ## download_loop.c:339:12
 1e170e4:    81 f5 ec 00       	r1 = h[sp+236] (u)			  ## download_loop.c:1522:31
 1e170e8:    01 f2 27 10       	if (r1 != r0) goto 78 <active_update_task+0x8C0 : 1e1713a >
 1e170ec:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e170f2:    e4 50             	r4 = h[r0 + 28] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e170f4:    e0 fb 2c 01       	r0 = sp + 300			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e170f8:    07 91             	r7 = r0 + 16
 1e170fa:    cb ff f2 66 e1 01 	r11 = 31549170 <JL_RESERVED_VM_FILE_NAME : 1e166f2 >
 1e17100:    80 fb 60 1d       	r1 = r13 + r6			  ## download_loop.c:1463:9
 1e17104:    e5 fb 2c 01       	r5 = sp + 300			  ## download_loop.c:1463:9
 1e17108:    02 72             	r2 = 32			  ## download_loop.c:1463:9
 1e1710a:    50 08             	r0 = r5			  ## download_loop.c:1463:9
 1e1710c:    97 f3 ea 7e       	call 3079636 <memcpy : 106ee4 >			  ## download_loop.c:1463:9
 1e17110:    02 72             	r2 = 32			  ## download_loop.c:1464:9
 1e17112:    1a f5 00 00       	[sp] = r10			  ## download_loop.c:1464:9
 1e17116:    40 08             	r0 = r4			  ## download_loop.c:1464:9
 1e17118:    51 08             	r1 = r5			  ## download_loop.c:1464:9
 1e1711a:    63 08             	r3 = r6			  ## download_loop.c:1464:9
 1e1711c:    bf f3 38 fb       	call -2448 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:1464:9
 1e17120:    32 70             	r2 = 3			  ## download_loop.c:1466:18
 1e17122:    70 08             	r0 = r7			  ## download_loop.c:1466:18
 1e17124:    b1 08             	r1 = r11			  ## download_loop.c:1466:18
 1e17126:    97 f3 e1 7e       	call 3079618 <memcmp : 106eec >			  ## download_loop.c:1466:18
 1e1712a:    00 e0 93 01       	if (r0 == 0) goto 806 <active_update_task+0xBDA : 1e17454 >			  ## download_loop.c:1466:13
 1e1712e:    06 82             	r6 += 32			  ## download_loop.c:1462:48
 1e17130:    03 ff 00 62 e5 ff 	if (r6 < 512) goto -54 <active_update_task+0x886 : 1e17100 >
 1e17136:    60 78             	r0 = 134			  ## download_loop.c:2050:13
 1e17138:    28 1c             	goto -1968 <active_update_task+0x110 : 1e1698a >			  ## download_loop.c:2050:13
 1e1713a:    10 70             	r0 = 1			  ## download_loop.c:2042:13
 1e1713c:    26 1c             	goto -1972 <active_update_task+0x110 : 1e1698a >			  ## download_loop.c:2042:13
 1e1713e:    02 f2 0b 20       	if (r2 >= r0) goto 22 <active_update_task+0x8DE : 1e17158 >			  ## flash_fs_api.c:327:13
 1e17142:    72 f2 43 3f       	if (r2 < r7) goto -378 <active_update_task+0x752 : 1e16fcc >
 1e17146:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >
 1e1714c:    0c f5 0c 00       	r12 = [sp+12]
 1e17150:    d2 f2 1d 3c       	if (r2 < r13) goto -1990 <active_update_task+0x114 : 1e1698e >
 1e17154:    20 78             	r0 = 130			  ## download_loop.c:2108:13
 1e17156:    e2 19             	goto 964 <active_update_task+0xCA2 : 1e1751c >			  ## download_loop.c:2108:13
 1e17158:    06 f5 90 01       	r6 = [sp+400]			  ## flash_fs_api.c:435:25
 1e1715c:    60 08             	r0 = r6			  ## flash_fs_api.c:437:21
 1e1715e:    24 08             	r4 = r2			  ## flash_fs_api.c:437:21
 1e17160:    bf f3 d7 4d       	call -91218 <flash_erase_by_first_unit : 1e00d12 >			  ## flash_fs_api.c:437:21
 1e17164:    60 09             	r0 += r6			  ## flash_fs_api.c:446:44
 1e17166:    46 08             	r6 = r4			  ## flash_fs_api.c:447:22
 1e17168:    8c 02             	[sp+32] = r4
 1e1716a:    04 f2 01 80       	if (r4 > r0) goto 2 <active_update_task+0x8F6 : 1e17170 >
 1e1716e:    06 08             	r6 = r0			  ## flash_fs_api.c:447:22
 1e17170:    60 08             	r0 = r6			  ## flash_fs_api.c:449:21
 1e17172:    bf f3 ce 4d       	call -91236 <flash_erase_by_first_unit : 1e00d12 >			  ## flash_fs_api.c:449:21
 1e17176:    81 02             	r1 = [sp+32]			  ## flash_fs_api.c:451:56
 1e17178:    80 fb b0 51       	r5 = r1 + r11			  ## flash_fs_api.c:451:56
 1e1717c:    57 fc 00 f0       	r7 = r5 + -4096			  ## flash_fs_api.c:451:74
 1e17180:    0a 08             	r10 = r0			  ## flash_fs_api.c:449:21
 1e17182:    01 fb 00 10       	r1 = 4096 <sys_clock_limit+0x74 : 1000 >			  ## flash_fs_api.c:451:9
 1e17186:    70 08             	r0 = r7			  ## flash_fs_api.c:451:9
 1e17188:    bf f3 3c 4d       	call -91528 <flash_erase_by_blcok_n_sector : 1e00c04 >			  ## flash_fs_api.c:451:9
 1e1718c:    80 fb a0 06       	r0 = r6 + r10			  ## flash_fs_api.c:450:42
 1e17190:    51 08             	r1 = r5			  ## flash_fs_api.c:453:27
 1e17192:    56 02             	r6 = [sp+20]			  ## flash_fs_api.c:453:27
 1e17194:    70 f2 01 80       	if (r0 > r7) goto 2 <active_update_task+0x920 : 1e1719a >
 1e17198:    01 08             	r1 = r0			  ## flash_fs_api.c:453:27
 1e1719a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2233:5
 1e1719e:    39 40             	[r0 + 12] = r1			  ## download_loop.c:2233:29
 1e171a0:    b1 fc 00 f0       	r1 = r11 + -4096			  ## flash_fs_api.c:452:81
 1e171a4:    87 02             	r7 = [sp+32]
 1e171a6:    4f 40             	[r0 + 16] = r7			  ## download_loop.c:2234:31
 1e171a8:    28 ff 10 ba 01 00 	if (r11 > 4096) goto 2 <active_update_task+0x936 : 1e171b0 >			  ## download_loop.c:2234:31
 1e171ae:    01 70             	r1 = 0			  ## flash_fs_api.c:452:25
 1e171b0:    59 40             	[r0 + 20] = r1			  ## download_loop.c:2235:30
 1e171b2:    99 f5 6e 01       	h[sp+366] = r9			  ## flash_fs_api.c:466:21
 1e171b6:    17 f5 70 01       	[sp+368] = r7			  ## flash_fs_api.c:467:21
 1e171ba:    80 fc 20 00       	r0 = r8 + 32			  ## flash_fs_api.c:468:33
 1e171be:    10 f5 74 01       	[sp+372] = r0			  ## flash_fs_api.c:468:20
 1e171c2:    dc f5 78 01       	b[sp+376] = r12			  ## flash_fs_api.c:469:22
 1e171c6:    f0 7f             	r0 = 255			  ## flash_fs_api.c:469:22
 1e171c8:    d0 f5 79 01       	b[sp+377] = r0			  ## flash_fs_api.c:470:16
 1e171cc:    99 f5 7a 01       	h[sp+378] = r9			  ## flash_fs_api.c:471:19
 1e171d0:    e4 fb 6c 01       	r4 = sp + 364			  ## flash_fs_api.c:471:19
 1e171d4:    00 99             	r0 = r4 + 16			  ## flash_fs_api.c:473:5
 1e171d6:    c1 ff c9 e0 e0 01 	r1 = 31514825 <update_target_end+0x1E9 : 1e0e0c9 >			  ## flash_fs_api.c:473:5
 1e171dc:    02 71             	r2 = 16			  ## flash_fs_api.c:473:5
 1e171de:    97 f3 81 7e       	call 3079426 <memcpy : 106ee4 >			  ## flash_fs_api.c:473:5
 1e171e2:    00 fd 02 49       	r0 = r4 | 2			  ## flash_fs_api.c:466:10
 1e171e6:    e1 71             	r1 = 30			  ## flash_fs_api.c:474:19
 1e171e8:    bf f3 e8 4b       	call -92208 <CRC16 : 1e009bc >			  ## flash_fs_api.c:474:19
 1e171ec:    90 f5 6c 01       	h[sp+364] = r0			  ## flash_fs_api.c:474:17
 1e171f0:    02 72             	r2 = 32			  ## flash_fs_api.c:476:10
 1e171f2:    40 08             	r0 = r4			  ## flash_fs_api.c:476:10
 1e171f4:    71 08             	r1 = r7			  ## flash_fs_api.c:476:10
 1e171f6:    bf f3 d6 4d       	call -91220 <sfc_write : 1e00da6 >			  ## flash_fs_api.c:476:10
 1e171fa:    01 70             	r1 = 0			  ## flash_fs_api.c:480:5
 1e171fc:    02 72             	r2 = 32			  ## flash_fs_api.c:480:5
 1e171fe:    40 08             	r0 = r4			  ## flash_fs_api.c:480:5
 1e17200:    97 f3 76 7e       	call 3079404 <memset : 106ef0 >			  ## flash_fs_api.c:480:5
 1e17204:    02 72             	r2 = 32			  ## flash_fs_api.c:481:5
 1e17206:    40 08             	r0 = r4			  ## flash_fs_api.c:481:5
 1e17208:    71 08             	r1 = r7			  ## flash_fs_api.c:481:5
 1e1720a:    bf f3 d3 4d       	call -91226 <sfc_read : 1e00db4 >			  ## flash_fs_api.c:481:5
 1e1720e:    e4 fb 9c 01       	r4 = sp + 412			  ## flash_fs_api.c:481:5
 1e17212:    f1 7f             	r1 = 255			  ## flash_fs_api.c:494:5
 1e17214:    02 75             	r2 = 80			  ## flash_fs_api.c:494:5
 1e17216:    40 08             	r0 = r4			  ## flash_fs_api.c:494:5
 1e17218:    97 f3 6a 7e       	call 3079380 <memset : 106ef0 >			  ## flash_fs_api.c:494:5
 1e1721c:    17 f5 e4 01       	[sp+484] = r7			  ## flash_fs_api.c:495:30
 1e17220:    96 f5 9e 01       	h[sp+414] = r6			  ## flash_fs_api.c:496:31
 1e17224:    5b fc 00 ff       	r11 = r5 + -256			  ## flash_fs_api.c:489:61
 1e17228:    01 75             	r1 = 80			  ## flash_fs_api.c:498:32
 1e1722a:    40 08             	r0 = r4			  ## flash_fs_api.c:498:32
 1e1722c:    b2 08             	r2 = r11			  ## flash_fs_api.c:498:32
 1e1722e:    bf f3 83 4d       	call -91386 <norflash_write : 1e00d38 >			  ## flash_fs_api.c:498:32
 1e17232:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2120:35
 1e17236:    84 40             	r4 = [r0 + 32]			  ## download_loop.c:2120:64
 1e17238:    21 70             	r1 = 2			  ## download_loop.c:2120:64
 1e1723a:    d1 f5 38 00       	b[sp+56] = r1			  ## download_loop.c:2122:19
 1e1723e:    00 f9 40 02       	r0 = b[r0 + 576] (u)			  ## download_loop.c:2125:17
 1e17242:    c5 ff 74 2e 00 00 	r5 = 11892 <curr_loader_file_head : 2e74 >			  ## download_loop.c:2125:17
 1e17248:    17 4a             	r7 = [r5 + 4]			  ## download_loop.c:2120:96
 1e1724a:    0e 20             	if (r0 == 0) goto 28 <active_update_task+0x9EE : 1e17268 >			  ## download_loop.c:2120:96
 1e1724c:    00 fb 09 5a       	r0 = 23049 <report_overlay_end+0x801 : 5a09 >			  ## download_loop.c:2126:33
 1e17250:    06 f2 03 00       	if (r6 == r0) goto 6 <active_update_task+0x9E0 : 1e1725a >			  ## download_loop.c:2126:33
 1e17254:    c0 8f             	r0 += -4
 1e17256:    06 f2 07 10       	if (r6 != r0) goto 14 <active_update_task+0x9EE : 1e17268 >
 1e1725a:    20 70             	r0 = 2			  ## download_loop.c:2128:35
 1e1725c:    d0 f5 38 00       	b[sp+56] = r0			  ## download_loop.c:2128:35
 1e17260:    80 a3             	r0 = sp + 56
 1e17262:    01 70             	r1 = 0			  ## download_loop.c:2129:13
 1e17264:    bf f3 ef fa       	call -2594 <update_notify_content_size : 1e16846 >			  ## download_loop.c:2129:13
 1e17268:    21 4a             	r1 = [r5 + 8]			  ## download_loop.c:2141:60
 1e1726a:    00 70             	r0 = 0			  ## download_loop.c:2141:5
 1e1726c:    bf f3 eb fa       	call -2602 <update_notify_content_size : 1e16846 >			  ## download_loop.c:2141:5
 1e17270:    25 4a             	r5 = [r5 + 8]			  ## download_loop.c:2146:50
 1e17272:    00 fb 00 02       	r0 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1267:20
 1e17276:    bf f3 f3 99       	call -52250 <malloc : 1e0a660 >			  ## download_loop.c:1267:20
 1e1727a:    0d 08             	r13 = r0			  ## download_loop.c:1267:20
 1e1727c:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >
 1e17282:    0c f5 0c 00       	r12 = [sp+12]
 1e17286:    00 e0 c8 0d       	if (r0 == 0) goto -1136 <active_update_task+0x5A0 : 1e16e1a >
 1e1728a:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:1208:5
 1e1728e:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1208:18
 1e17290:    02 bf             	r2 = r7 + r4			  ## download_loop.c:2120:72
 1e17292:    80 02             	r0 = [sp+32]			  ## flash_fs_api.c:485:41
 1e17294:    09 fc 20 00       	r9 = r0 + 32			  ## flash_fs_api.c:485:41
 1e17298:    00 70             	r0 = 0			  ## download_loop.c:1208:5
 1e1729a:    01 70             	r1 = 0			  ## download_loop.c:1208:5
 1e1729c:    0a 70             	r10 = 0			  ## download_loop.c:1208:5
 1e1729e:    83 00             	call r3			  ## download_loop.c:1208:5
 1e172a0:    45 2a             	if (r5 == 0) goto 138 <active_update_task+0xAB2 : 1e1732c >
 1e172a2:    0c fb 00 f0       	r12 = -4096 <bank_code_load_addr+0x1E4754 : 1fff000 >
 1e172a6:    97 08             	r7 = r9
 1e172a8:    54 08             	r4 = r5			  ## download_loop.c:1211:17
 1e172aa:    03 ff 00 52 02 00 	if (r5 < 512) goto 4 <active_update_task+0xA3A : 1e172b4 >			  ## download_loop.c:1211:17
 1e172b0:    04 fb 00 02       	r4 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1211:17
 1e172b4:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## download_loop.c:1213:15
 1e172ba:    00 f6 f0 00       	r0 = [r0 + 240]			  ## download_loop.c:1213:15
 1e172be:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1213:28
 1e172c0:    22 05             	r2 = r4.l (u)			  ## download_loop.c:1213:15
 1e172c2:    00 70             	r0 = 0			  ## download_loop.c:1213:15
 1e172c4:    d1 08             	r1 = r13			  ## download_loop.c:1213:15
 1e172c6:    83 00             	call r3			  ## download_loop.c:1213:15
 1e172c8:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## download_loop.c:1214:13
 1e172ce:    10 f2 29 01       	if (r0 == r1) goto 594 <active_update_task+0xCAA : 1e17524 >			  ## download_loop.c:1214:13
 1e172d2:    01 f6 00 e0       	r1 = [r14 + 0]			  ## download_loop.c:1073:9
 1e172d6:    30 42             	r0 = [r1 + 12]			  ## download_loop.c:1073:17
 1e172d8:    1f 20             	if (r0 == 0) goto 62 <active_update_task+0xA9E : 1e17318 >			  ## download_loop.c:1073:17
 1e172da:    c2 b9             	r2 = r4 + r7			  ## download_loop.c:1075:42
 1e172dc:    20 f2 1c 20       	if (r0 >= r2) goto 56 <active_update_task+0xA9E : 1e17318 >
 1e172e0:    42 42             	r2 = [r1 + 16]			  ## download_loop.c:1074:41
 1e172e2:    51 42             	r1 = [r1 + 20]			  ## download_loop.c:1074:69
 1e172e4:    12 09             	r2 += r1			  ## download_loop.c:1074:59
 1e172e6:    01 fc ff 0f       	r1 = r0 + 4095			  ## download_loop.c:1077:32
 1e172ea:    e2 fd c0 81       	r8 = r1 & r12			  ## download_loop.c:1077:32
 1e172ee:    43 fc ff 0f       	r3 = r4 + 4095			  ## download_loop.c:1081:29
 1e172f2:    23 fd 10 3a       	r3 = r3 & 4096			  ## download_loop.c:1081:29
 1e172f6:    21 b6             	r1 = r3 - r0			  ## download_loop.c:1077:75
 1e172f8:    81 09             	r1 += r8			  ## download_loop.c:1087:31
 1e172fa:    28 b4             	r8 = r2 - r0			  ## download_loop.c:1084:51
 1e172fc:    03 09             	r3 += r0			  ## download_loop.c:1083:41
 1e172fe:    23 f2 01 80       	if (r3 > r2) goto 2 <active_update_task+0xA8A : 1e17304 >			  ## download_loop.c:1083:41
 1e17302:    18 08             	r8 = r1			  ## download_loop.c:1083:17
 1e17304:    08 e0 08 00       	if (r8 == 0) goto 16 <active_update_task+0xA9E : 1e17318 >
 1e17308:    81 08             	r1 = r8			  ## download_loop.c:1092:17
 1e1730a:    bf f3 7b 4c       	call -91914 <flash_erase_by_blcok_n_sector : 1e00c04 >			  ## download_loop.c:1092:17
 1e1730e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1093:17
 1e17312:    31 40             	r1 = [r0 + 12]			  ## download_loop.c:1093:41
 1e17314:    81 09             	r1 += r8			  ## download_loop.c:1093:41
 1e17316:    39 40             	[r0 + 12] = r1			  ## download_loop.c:1093:41
 1e17318:    d0 08             	r0 = r13			  ## download_loop.c:1236:19
 1e1731a:    71 08             	r1 = r7			  ## download_loop.c:1236:19
 1e1731c:    42 08             	r2 = r4			  ## download_loop.c:1236:19
 1e1731e:    bf f3 42 4d       	call -91516 <sfc_write : 1e00da6 >			  ## download_loop.c:1236:19
 1e17322:    04 f2 ff 10       	if (r4 != r0) goto 510 <active_update_task+0xCAA : 1e17524 >			  ## download_loop.c:1236:19
 1e17326:    25 bb             	r5 = r5 - r4			  ## download_loop.c:1245:20
 1e17328:    47 09             	r7 += r4			  ## download_loop.c:1244:20
 1e1732a:    be 3b             	if (r5 != 0) goto -132 <active_update_task+0xA2E : 1e172a8 >
 1e1732c:    be 08             	r14 = r11
 1e1732e:    d0 08             	r0 = r13			  ## download_loop.c:1294:9
 1e17330:    bf f3 a9 99       	call -52398 <free : 1e0a686 >			  ## download_loop.c:1294:9
 1e17334:    c0 ff 74 2e 00 00 	r0 = 11892 <curr_loader_file_head : 2e74 >			  ## download_loop.c:1294:9
 1e1733a:    08 f7 02 00       	r8 = h[r0 + 2] (u)			  ## download_loop.c:2159:102
 1e1733e:    25 40             	r5 = [r0 + 8]			  ## download_loop.c:2159:75
 1e17340:    00 fb 00 02       	r0 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1003:20
 1e17344:    bf f3 8c 99       	call -52456 <malloc : 1e0a660 >			  ## download_loop.c:1003:20
 1e17348:    0c 08             	r12 = r0			  ## download_loop.c:1003:20
 1e1734a:    51 20             	if (r0 == 0) goto 162 <active_update_task+0xB74 : 1e173ee >
 1e1734c:    4d 2a             	if (r5 == 0) goto 154 <active_update_task+0xB6E : 1e173e8 >
 1e1734e:    0d 70             	r13 = 0
 1e17350:    c4 ff 00 35 1e 00 	r4 = 1979648 <uECC_vli_cmp_unsafe+0xDC504 : 1e3500 >
 1e17356:    cb ff 70 2e 00 00 	r11 = 11888 <update_bss_start : 2e70 >
 1e1735c:    1b 18             	goto 54 <active_update_task+0xB1A : 1e17394 >
 1e1735e:    00 f6 00 b0       	r0 = [r11 + 0]			  ## download_loop.c:988:9
 1e17362:    40 20             	if (r0 == 0) goto 128 <active_update_task+0xB6A : 1e173e4 >			  ## download_loop.c:988:9
 1e17364:    00 f9 41 02       	r0 = b[r0 + 577] (u)			  ## download_loop.c:988:27
 1e17368:    3d 20             	if (r0 == 0) goto 122 <active_update_task+0xB6A : 1e173e4 >			  ## download_loop.c:988:27
 1e1736a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >
 1e17370:    06 08             	r6 = r0
 1e17372:    00 f6 f0 60       	r0 = [r6 + 240]			  ## download_loop.c:990:9
 1e17376:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:990:22
 1e17378:    f2 fd 80 2d       	r2 = r13 >> 16			  ## download_loop.c:1028:61
 1e1737c:    00 70             	r0 = 0			  ## download_loop.c:990:9
 1e1737e:    01 70             	r1 = 0			  ## download_loop.c:990:9
 1e17380:    83 00             	call r3			  ## download_loop.c:990:9
 1e17382:    00 f6 f0 60       	r0 = [r6 + 240]			  ## download_loop.c:991:16
 1e17386:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:991:29
 1e17388:    e1 fb f2 01       	r1 = sp + 498			  ## download_loop.c:991:29
 1e1738c:    00 70             	r0 = 0			  ## download_loop.c:991:16
 1e1738e:    a2 70             	r2 = 10			  ## download_loop.c:991:16
 1e17390:    83 00             	call r3			  ## download_loop.c:991:16
 1e17392:    28 18             	goto 80 <active_update_task+0xB6A : 1e173e4 >			  ## download_loop.c:991:16
 1e17394:    bf f3 1b 4c       	call -92106 <clr_wdt : 1e00bce >			  ## download_loop.c:1012:9
 1e17398:    57 08             	r7 = r5			  ## download_loop.c:1013:17
 1e1739a:    03 ff 00 52 02 00 	if (r5 < 512) goto 4 <active_update_task+0xB2A : 1e173a4 >			  ## download_loop.c:1013:17
 1e173a0:    07 fb 00 02       	r7 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1013:17
 1e173a4:    c0 08             	r0 = r12			  ## download_loop.c:1018:13
 1e173a6:    91 08             	r1 = r9			  ## download_loop.c:1018:13
 1e173a8:    72 08             	r2 = r7			  ## download_loop.c:1018:13
 1e173aa:    bf f3 03 4d       	call -91642 <sfc_read : 1e00db4 >			  ## download_loop.c:1018:13
 1e173ae:    97 f3 f5 7c       	call 3078634 <local_irq_disable : 106d9c >			  ## download_loop.c:971:5
 1e173b2:    08 00             	csync			  ## download_loop.c:971:5
 1e173b4:    e6 fd 00 0a       	r0 = r10.l (u)			  ## download_loop.c:972:19
 1e173b8:    e1 05             	r1 = r7.l (u)			  ## download_loop.c:973:5
 1e173ba:    18 48             	[r4 + 4] = r0			  ## download_loop.c:972:17
 1e173bc:    09 22             	if (r1 == 0) goto 18 <active_update_task+0xB56 : 1e173d0 >			  ## download_loop.c:972:17
 1e173be:    60 fb 00 79       	r0 = 0 - r7			  ## download_loop.c:973:15
 1e173c2:    c1 08             	r1 = r12			  ## download_loop.c:973:15
 1e173c4:    82 f9 01 10       	r2 = b[r1 ++= 1] (u)			  ## download_loop.c:974:24
 1e173c8:    10 80             	r0 += 1			  ## download_loop.c:973:5
 1e173ca:    23 04             	r3 = r0.l (u)			  ## download_loop.c:973:5
 1e173cc:    0a 48             	[r4 + 0] = r2			  ## download_loop.c:974:22
 1e173ce:    fa 37             	if (r3 != 0) goto -12 <active_update_task+0xB4A : 1e173c4 >
 1e173d0:    08 00             	csync			  ## download_loop.c:976:5
 1e173d2:    0a f6 04 40       	r10 = [r4 + 4]			  ## download_loop.c:978:19
 1e173d6:    e5 bb             	r5 = r5 - r7			  ## download_loop.c:1024:13
 1e173d8:    7d 09             	r13 += r7			  ## download_loop.c:1025:17
 1e173da:    e6 fd 00 6d       	r6 = r13.l (u)			  ## download_loop.c:1027:13
 1e173de:    97 f3 db 7c       	call 3078582 <local_irq_enable : 106d98 >			  ## download_loop.c:979:5
 1e173e2:    bd 2d             	if (r6 == 0) goto -134 <active_update_task+0xAE4 : 1e1735e >			  ## download_loop.c:979:5
 1e173e4:    79 09             	r9 += r7			  ## download_loop.c:1023:14
 1e173e6:    d6 3b             	if (r5 != 0) goto -84 <active_update_task+0xB1A : 1e17394 >
 1e173e8:    c0 08             	r0 = r12			  ## download_loop.c:1034:9
 1e173ea:    bf f3 4c 99       	call -52584 <free : 1e0a686 >			  ## download_loop.c:1034:9
 1e173ee:    e6 fd 00 0a       	r0 = r10.l (u)			  ## download_loop.c:1047:18
 1e173f2:    80 f2 a0 10       	if (r0 != r8) goto 320 <active_update_task+0xCBC : 1e17536 >			  ## download_loop.c:1047:18
 1e173f6:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## update_main.c:79:9
 1e173fc:    00 f6 ec 00       	r0 = [r0 + 236]			  ## update_main.c:79:9
 1e17400:    81 02             	r1 = [sp+32]			  ## download_loop.c:2169:32
 1e17402:    b9 02             	[sp+44] = r1			  ## download_loop.c:2169:32
 1e17404:    1e f5 30 00       	[sp+48] = r14			  ## download_loop.c:2169:32
 1e17408:    c1 ff c6 7a e1 01 	r1 = 31554246 <loader_info_record_write : 1e17ac6 >			  ## download_loop.c:2169:32
 1e1740e:    d9 02             	[sp+52] = r1			  ## download_loop.c:2169:32
 1e17410:    06 20             	if (r0 == 0) goto 12 <active_update_task+0xBA4 : 1e1741e >
 1e17412:    83 41             	r3 = [r0 + 96]			  ## update_main.c:79:27
 1e17414:    04 26             	if (r3 == 0) goto 8 <active_update_task+0xBA4 : 1e1741e >			  ## update_main.c:79:27
 1e17416:    00 85             	r0 += 80			  ## update_main.c:80:43
 1e17418:    c2 a2             	r2 = sp + 44			  ## update_main.c:80:43
 1e1741a:    21 70             	r1 = 2			  ## update_main.c:80:9
 1e1741c:    83 00             	call r3			  ## update_main.c:80:9
 1e1741e:    50 02             	r0 = [sp+20]			  ## download_loop.c:2180:38
 1e17420:    10 b0             	r0 |= 1			  ## download_loop.c:2180:38
 1e17422:    01 fb 07 5a       	r1 = 23047 <report_overlay_end+0x7FF : 5a07 >			  ## download_loop.c:2180:38
 1e17426:    10 f2 03 10       	if (r0 != r1) goto 6 <active_update_task+0xBB6 : 1e17430 >			  ## download_loop.c:2180:38
 1e1742a:    00 70             	r0 = 0			  ## download_loop.c:2181:13
 1e1742c:    bf f3 a3 f9       	call -3258 <update_stop : 1e16776 >			  ## download_loop.c:2181:13
 1e17430:    0a 70             	r10 = 0
 1e17432:    cc 1d             	goto -1128 <active_update_task+0x752 : 1e16fcc >
 1e17434:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:733:23
 1e17438:    02 75             	r2 = 80			  ## download_loop.c:733:9
 1e1743a:    c1 ff 94 2e 00 00 	r1 = 11924 <fw_flash_bin_head : 2e94 >			  ## download_loop.c:733:9
 1e17440:    80 fe 20 1d       	r1 += r13 * r2			  ## download_loop.c:733:9
 1e17444:    00 fc a8 01       	r0 = r0 + 424			  ## download_loop.c:733:9
 1e17448:    97 f3 4c 7d       	call 3078808 <memcpy : 106ee4 >			  ## download_loop.c:733:9
 1e1744c:    04 70             	r4 = 0			  ## download_loop.c:733:9
 1e1744e:    fa 07             	r10 = -1			  ## download_loop.c:733:9
 1e17450:    47 02             	r7 = [sp+16]			  ## download_loop.c:733:9
 1e17452:    dc 1c             	goto -1608 <active_update_task+0x592 : 1e16e0c >			  ## download_loop.c:733:9
 1e17454:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:1390:63
 1e17458:    01 40             	r1 = [r0 + 0]			  ## download_loop.c:1390:71
 1e1745a:    02 f6 b0 01       	r2 = [r0 + 432]			  ## download_loop.c:1396:34
 1e1745e:    14 fc 00 02       	r4 = r1 + 512			  ## download_loop.c:1396:34
 1e17462:    fa 07             	r10 = -1			  ## download_loop.c:1396:34
 1e17464:    5a 24             	if (r2 == 0) goto 180 <active_update_task+0xCA0 : 1e1751a >			  ## download_loop.c:1396:34
 1e17466:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1396:71
 1e1746a:    57 20             	if (r0 == 0) goto 174 <active_update_task+0xCA0 : 1e1751a >			  ## download_loop.c:1396:71
 1e1746c:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:1401:5
 1e17470:    0b f5 34 01       	r11 = [sp+308]			  ## download_loop.c:1469:31
 1e17474:    0d f5 30 01       	r13 = [sp+304]			  ## download_loop.c:1468:35
 1e17478:    05 f6 f4 90       	r5 = [r9 + 244]			  ## flash_fs_api.c:89:12
 1e1747c:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1401:18
 1e1747e:    00 70             	r0 = 0			  ## download_loop.c:1401:5
 1e17480:    01 70             	r1 = 0			  ## download_loop.c:1401:5
 1e17482:    07 70             	r7 = 0			  ## download_loop.c:1401:5
 1e17484:    83 00             	call r3			  ## download_loop.c:1401:5
 1e17486:    00 f6 f0 90       	r0 = [r9 + 240]			  ## download_loop.c:1402:5
 1e1748a:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1402:18
 1e1748c:    00 70             	r0 = 0			  ## download_loop.c:1402:5
 1e1748e:    02 72             	r2 = 32			  ## download_loop.c:1402:5
 1e17490:    08 72             	r8 = 32			  ## download_loop.c:1402:5
 1e17492:    41 08             	r1 = r4			  ## download_loop.c:1402:5
 1e17494:    83 00             	call r3			  ## download_loop.c:1402:5
 1e17496:    e6 fb 4c 01       	r6 = sp + 332			  ## download_loop.c:1402:5
 1e1749a:    01 72             	r1 = 32			  ## download_loop.c:1405:5
 1e1749c:    60 08             	r0 = r6			  ## download_loop.c:1405:5
 1e1749e:    52 08             	r2 = r5			  ## download_loop.c:1405:5
 1e174a0:    bf f3 a8 4a       	call -92848 <norflash_read : 1e009f4 >			  ## download_loop.c:1405:5
 1e174a4:    40 fb 01 ab       	r0 = r10 + 65536			  ## download_loop.c:1406:5
 1e174a8:    02 72             	r2 = 32			  ## download_loop.c:1406:5
 1e174aa:    03 70             	r3 = 0			  ## download_loop.c:1406:5
 1e174ac:    18 f5 00 00       	[sp] = r8			  ## download_loop.c:1406:5
 1e174b0:    61 08             	r1 = r6			  ## download_loop.c:1406:5
 1e174b2:    bf f3 6d f9       	call -3366 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:1406:5
 1e174b6:    40 98             	r0 = r4 + 4			  ## download_loop.c:1408:54
 1e174b8:    41 70             	r1 = 4
 1e174ba:    02 fa 00 07       	r2 = b[r0+r7] (u)			  ## download_loop.c:1360:13
 1e174be:    01 ff ff 20 07 00 	if (r2 != 255) goto 14 <active_update_task+0xC58 : 1e174d2 >			  ## download_loop.c:1360:13
 1e174c4:    17 80             	r7 += 1			  ## download_loop.c:1359:27
 1e174c6:    f1 8f             	r1 += -1			  ## download_loop.c:1359:19
 1e174c8:    47 e0 f7 3f       	if (r7 < 4) goto -18 <active_update_task+0xC40 : 1e174ba >			  ## download_loop.c:1359:19
 1e174cc:    60 ff ff 19 0e 00 	if ((r1 & 255) == 0) goto 28 <active_update_task+0xC74 : 1e174ee >
 1e174d2:    31 60             	r1 = b[r0 + 3] (u)			  ## download_loop.c:1415:13
 1e174d4:    22 60             	r2 = b[r0 + 2] (u)			  ## download_loop.c:1415:13
 1e174d6:    10 60             	r0 = b[r0 + 1] (u)			  ## download_loop.c:1415:13
 1e174d8:    43 68             	r3 = b[r4 + 4] (u)			  ## download_loop.c:1415:13
 1e174da:    05 f5 50 01       	r5 = [sp+336]			  ## download_loop.c:1415:13
 1e174de:    c8 fd 40 21       	r2 <= insert(r1, p:8, l:8)			  ## download_loop.c:1415:13
 1e174e2:    c8 fd 40 30       	r3 <= insert(r0, p:8, l:8)			  ## download_loop.c:1415:13
 1e174e6:    d0 fd 80 32       	r3 <= insert(r2, p:16, l:16)			  ## download_loop.c:1415:13
 1e174ea:    35 f2 16 10       	if (r5 != r3) goto 44 <active_update_task+0xCA0 : 1e1751a >			  ## download_loop.c:1415:13
 1e174ee:    01 99             	r1 = r4 + 16			  ## download_loop.c:1423:54
 1e174f0:    02 70             	r2 = 0
 1e174f2:    00 71             	r0 = 16
 1e174f4:    03 fa 00 12       	r3 = b[r1+r2] (u)			  ## download_loop.c:1360:13
 1e174f8:    01 ff ff 30 07 00 	if (r3 != 255) goto 14 <active_update_task+0xC92 : 1e1750c >			  ## download_loop.c:1360:13
 1e174fe:    12 80             	r2 += 1			  ## download_loop.c:1359:27
 1e17500:    f0 8f             	r0 += -1			  ## download_loop.c:1359:19
 1e17502:    02 e1 f7 3f       	if (r2 < 16) goto -18 <active_update_task+0xC7A : 1e174f4 >			  ## download_loop.c:1359:19
 1e17506:    60 ff ff 09 1f 00 	if ((r0 & 255) == 0) goto 62 <active_update_task+0xCD0 : 1e1754a >
 1e1750c:    e0 fb 4c 01       	r0 = sp + 332
 1e17510:    00 81             	r0 += 16			  ## download_loop.c:1426:9
 1e17512:    02 71             	r2 = 16			  ## download_loop.c:1429:13
 1e17514:    97 f3 ea 7c       	call 3078612 <memcmp : 106eec >			  ## download_loop.c:1429:13
 1e17518:    18 20             	if (r0 == 0) goto 48 <active_update_task+0xCD0 : 1e1754a >
 1e1751a:    a0 78             	r0 = 138			  ## download_loop.c:2058:13
 1e1751c:    bf f3 2b f9       	call -3498 <update_stop : 1e16776 >
 1e17520:    ff f3 35 fa       	goto -2966 <active_update_task+0x114 : 1e1698e >
 1e17524:    d0 08             	r0 = r13			  ## download_loop.c:1294:9
 1e17526:    bf f3 ae 98       	call -52900 <free : 1e0a686 >			  ## download_loop.c:1294:9
 1e1752a:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >			  ## download_loop.c:1294:9
 1e17530:    0c f5 0c 00       	r12 = [sp+12]			  ## download_loop.c:1294:9
 1e17534:    72 1c             	goto -1820 <active_update_task+0x5A0 : 1e16e1a >			  ## download_loop.c:1294:9
 1e17536:    30 78             	r0 = 131			  ## download_loop.c:2161:9
 1e17538:    bf f3 1d f9       	call -3526 <update_stop : 1e16776 >			  ## download_loop.c:2161:9
 1e1753c:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >			  ## download_loop.c:2161:9
 1e17542:    0c f5 0c 00       	r12 = [sp+12]			  ## download_loop.c:2161:9
 1e17546:    ff f3 21 fa       	goto -3006 <active_update_task+0x112 : 1e1698c >			  ## download_loop.c:2161:9
 1e1754a:    00 f6 00 e0       	r0 = [r14 + 0]			  ## download_loop.c:2073:54
 1e1754e:    01 f9 40 02       	r1 = b[r0 + 576] (u)			  ## download_loop.c:2073:62
 1e17552:    08 22             	if (r1 == 0) goto 16 <active_update_task+0xCEA : 1e17564 >			  ## download_loop.c:2073:62
 1e17554:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >
 1e1755a:    fa 07             	r10 = -1
 1e1755c:    ce ff 70 2e 00 00 	r14 = 11888 <update_bss_start : 2e70 >
 1e17562:    99 1c             	goto -1742 <active_update_task+0x61C : 1e16e96 >
 1e17564:    91 08             	r1 = r9
 1e17566:    14 fc f0 00       	r4 = r1 + 240
 1e1756a:    01 48             	r1 = [r4 + 0]			  ## download_loop.c:1930:5
 1e1756c:    08 f6 00 00       	r8 = [r0 + 0]			  ## download_loop.c:2074:55
 1e17570:    0c f6 04 40       	r12 = [r4 + 4]			  ## flash_fs_api.c:89:12
 1e17574:    09 f6 b0 01       	r9 = [r0 + 432]			  ## download_loop.c:1926:63
 1e17578:    33 42             	r3 = [r1 + 12]			  ## download_loop.c:1930:18
 1e1757a:    00 70             	r0 = 0			  ## download_loop.c:1930:5
 1e1757c:    01 70             	r1 = 0			  ## download_loop.c:1930:5
 1e1757e:    92 08             	r2 = r9			  ## download_loop.c:1930:5
 1e17580:    83 00             	call r3			  ## download_loop.c:1930:5
 1e17582:    00 48             	r0 = [r4 + 0]			  ## download_loop.c:1931:13
 1e17584:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1931:26
 1e17586:    00 70             	r0 = 0			  ## download_loop.c:1931:13
 1e17588:    02 fb 00 02       	r2 = 512 <BTCTLER_CL_RAM_TOTAL+0x1C : 200 >			  ## download_loop.c:1931:13
 1e1758c:    81 08             	r1 = r8			  ## download_loop.c:1931:13
 1e1758e:    83 00             	call r3			  ## download_loop.c:1931:13
 1e17590:    0e 08             	r14 = r0			  ## download_loop.c:1931:13
 1e17592:    40 fb 01 ab       	r0 = r10 + 65536			  ## download_loop.c:1931:13
 1e17596:    0e f2 dd 0f       	if (r14 == r0) goto -70 <active_update_task+0xCDA : 1e17554 >			  ## download_loop.c:1931:13
 1e1759a:    c5 a3             	r5 = sp + 60
 1e1759c:    01 70             	r1 = 0			  ## download_loop.c:1938:8
 1e1759e:    02 72             	r2 = 32			  ## download_loop.c:1938:8
 1e175a0:    0a 70             	r10 = 0			  ## download_loop.c:1938:8
 1e175a2:    50 08             	r0 = r5			  ## download_loop.c:1938:8
 1e175a4:    97 f3 a4 7c       	call 3078472 <memset : 106ef0 >			  ## download_loop.c:1938:8
 1e175a8:    c6 a5             	r6 = sp + 92			  ## download_loop.c:1938:8
 1e175aa:    02 72             	r2 = 32			  ## download_loop.c:1939:5
 1e175ac:    60 08             	r0 = r6			  ## download_loop.c:1939:5
 1e175ae:    81 08             	r1 = r8			  ## download_loop.c:1939:5
 1e175b0:    97 f3 98 7c       	call 3078448 <memcpy : 106ee4 >			  ## download_loop.c:1939:5
 1e175b4:    02 72             	r2 = 32			  ## download_loop.c:1940:5
 1e175b6:    50 08             	r0 = r5			  ## download_loop.c:1940:5
 1e175b8:    c1 08             	r1 = r12			  ## download_loop.c:1940:5
 1e175ba:    bf f3 d8 49       	call -93264 <norflash_origin_read : 1e0096e >			  ## download_loop.c:1940:5
 1e175be:    02 72             	r2 = 32			  ## download_loop.c:1941:14
 1e175c0:    60 08             	r0 = r6			  ## download_loop.c:1941:14
 1e175c2:    51 08             	r1 = r5			  ## download_loop.c:1941:14
 1e175c4:    97 f3 92 7c       	call 3078436 <memcmp : 106eec >			  ## download_loop.c:1941:14
 1e175c8:    c5 31             	if (r0 != 0) goto -118 <active_update_task+0xCDA : 1e17554 >			  ## download_loop.c:1941:14
 1e175ca:    1e e2 33 30       	if (r14 < 33) goto 102 <active_update_task+0xDBA : 1e17634 >
 1e175ce:    c0 a3             	r0 = sp + 60
 1e175d0:    00 81             	r0 += 16
 1e175d2:    88 02             	[sp+32] = r0
 1e175d4:    04 72             	r4 = 32
 1e175d6:    80 fb 40 18       	r1 = r8 + r4			  ## download_loop.c:1949:33
 1e175da:    c7 a5             	r7 = sp + 92			  ## download_loop.c:1949:33
 1e175dc:    02 72             	r2 = 32			  ## download_loop.c:1949:9
 1e175de:    70 08             	r0 = r7			  ## download_loop.c:1949:9
 1e175e0:    97 f3 80 7c       	call 3078400 <memcpy : 106ee4 >			  ## download_loop.c:1949:9
 1e175e4:    80 fb c0 54       	r5 = r4 + r12			  ## download_loop.c:1950:69
 1e175e8:    c6 a3             	r6 = sp + 60			  ## download_loop.c:1950:69
 1e175ea:    02 72             	r2 = 32			  ## download_loop.c:1950:9
 1e175ec:    60 08             	r0 = r6			  ## download_loop.c:1950:9
 1e175ee:    51 08             	r1 = r5			  ## download_loop.c:1950:9
 1e175f0:    bf f3 bd 49       	call -93318 <norflash_origin_read : 1e0096e >			  ## download_loop.c:1950:9
 1e175f4:    02 72             	r2 = 32			  ## download_loop.c:1951:18
 1e175f6:    70 08             	r0 = r7			  ## download_loop.c:1951:18
 1e175f8:    61 08             	r1 = r6			  ## download_loop.c:1951:18
 1e175fa:    97 f3 77 7c       	call 3078382 <memcmp : 106eec >			  ## download_loop.c:1951:18
 1e175fe:    aa 31             	if (r0 != 0) goto -172 <active_update_task+0xCDA : 1e17554 >			  ## download_loop.c:1951:18
 1e17600:    c1 a3             	r1 = sp + 60
 1e17602:    03 70             	r3 = 0			  ## download_loop.c:1955:9
 1e17604:    c0 ff ff ff 00 00 	r0 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## download_loop.c:1955:9
 1e1760a:    52 08             	r2 = r5			  ## download_loop.c:1955:9
 1e1760c:    bf f3 db f8       	call -3658 <update_decode : 1e167c6 >			  ## download_loop.c:1955:9
 1e17610:    d2 70             	r2 = 13			  ## download_loop.c:1957:18
 1e17612:    80 02             	r0 = [sp+32]			  ## download_loop.c:1957:18
 1e17614:    c1 ff f5 66 e1 01 	r1 = 31549173 <JL_APP_CODE0_FILE_NAME : 1e166f5 >			  ## download_loop.c:1957:18
 1e1761a:    97 f3 67 7c       	call 3078350 <memcmp : 106eec >			  ## download_loop.c:1957:18
 1e1761e:    02 30             	if (r0 != 0) goto 4 <active_update_task+0xDAA : 1e17624 >			  ## download_loop.c:1957:18
 1e17620:    0a f5 40 00       	r10 = [sp+64]			  ## download_loop.c:1958:52
 1e17624:    80 f5 4a 00       	r0 = h[sp+74] (u)			  ## download_loop.c:1960:24
 1e17628:    05 30             	if (r0 != 0) goto 10 <active_update_task+0xDBA : 1e17634 >			  ## download_loop.c:1960:24
 1e1762a:    40 fc 20 00       	r0 = r4 + 32			  ## download_loop.c:1948:62
 1e1762e:    24 04             	r4 = r0.l (u)			  ## download_loop.c:1948:39
 1e17630:    e4 f2 d1 3f       	if (r4 < r14) goto -94 <active_update_task+0xD5C : 1e175d6 >			  ## download_loop.c:1948:39
 1e17634:    c0 ff 70 2e 00 00 	r0 = 11888 <update_bss_start : 2e70 >			  ## download_loop.c:1970:35
 1e1763a:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1970:35
 1e1763c:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1970:62
 1e17640:    a0 f2 05 10       	if (r0 != r10) goto 10 <active_update_task+0xDD4 : 1e1764e >			  ## download_loop.c:1970:62
 1e17644:    70 79             	r0 = 151			  ## download_loop.c:2076:13
 1e17646:    bf f3 96 f8       	call -3796 <update_stop : 1e16776 >			  ## download_loop.c:2076:13
 1e1764a:    1a 70             	r10 = 1			  ## download_loop.c:2076:13
 1e1764c:    bf 1c             	goto -1666 <active_update_task+0x752 : 1e16fcc >			  ## download_loop.c:2076:13
 1e1764e:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e17654:    08 f7 1c 00       	r8 = h[r0 + 28] (u)			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e17658:    ac 09             	r12 += r10			  ## download_loop.c:1978:69
 1e1765a:    80 fb 90 6a       	r6 = r10 + r9			  ## download_loop.c:1978:69
 1e1765e:    07 70             	r7 = 0			  ## download_loop.c:1978:69
 1e17660:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >
 1e17666:    04 08             	r4 = r0
 1e17668:    00 f6 f0 40       	r0 = [r4 + 240]			  ## download_loop.c:1971:9
 1e1766c:    33 40             	r3 = [r0 + 12]			  ## download_loop.c:1971:22
 1e1766e:    c2 bd             	r2 = r6 + r7			  ## download_loop.c:1971:98
 1e17670:    00 70             	r0 = 0			  ## download_loop.c:1971:9
 1e17672:    01 70             	r1 = 0			  ## download_loop.c:1971:9
 1e17674:    83 00             	call r3			  ## download_loop.c:1971:9
 1e17676:    00 f6 f0 40       	r0 = [r4 + 240]			  ## download_loop.c:1972:17
 1e1767a:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1972:30
 1e1767c:    c1 a5             	r1 = sp + 92			  ## download_loop.c:1972:30
 1e1767e:    00 70             	r0 = 0			  ## download_loop.c:1972:17
 1e17680:    02 72             	r2 = 32			  ## download_loop.c:1972:17
 1e17682:    83 00             	call r3			  ## download_loop.c:1972:17
 1e17684:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## download_loop.c:1972:17
 1e1768a:    10 f2 63 0f       	if (r0 == r1) goto -314 <active_update_task+0xCDA : 1e17554 >			  ## download_loop.c:1972:17
 1e1768e:    80 fb c0 47       	r4 = r7 + r12			  ## download_loop.c:1978:97
 1e17692:    c5 a3             	r5 = sp + 60			  ## download_loop.c:1978:97
 1e17694:    02 72             	r2 = 32			  ## download_loop.c:1978:9
 1e17696:    50 08             	r0 = r5			  ## download_loop.c:1978:9
 1e17698:    41 08             	r1 = r4			  ## download_loop.c:1978:9
 1e1769a:    bf f3 68 49       	call -93488 <norflash_origin_read : 1e0096e >			  ## download_loop.c:1978:9
 1e1769e:    c0 a5             	r0 = sp + 92			  ## download_loop.c:1978:9
 1e176a0:    02 72             	r2 = 32			  ## download_loop.c:1979:18
 1e176a2:    51 08             	r1 = r5			  ## download_loop.c:1979:18
 1e176a4:    97 f3 22 7c       	call 3078212 <memcmp : 106eec >			  ## download_loop.c:1979:18
 1e176a8:    55 31             	if (r0 != 0) goto -342 <active_update_task+0xCDA : 1e17554 >			  ## download_loop.c:1979:18
 1e176aa:    c1 a3             	r1 = sp + 60
 1e176ac:    80 08             	r0 = r8			  ## download_loop.c:1983:9
 1e176ae:    42 08             	r2 = r4			  ## download_loop.c:1983:9
 1e176b0:    73 08             	r3 = r7			  ## download_loop.c:1983:9
 1e176b2:    bf f3 88 f8       	call -3824 <update_decode : 1e167c6 >			  ## download_loop.c:1983:9
 1e176b6:    80 f5 4a 00       	r0 = h[sp+74] (u)			  ## download_loop.c:1985:24
 1e176ba:    c4 31             	if (r0 != 0) goto -120 <active_update_task+0xDCA : 1e17644 >			  ## download_loop.c:1985:24
 1e176bc:    c0 ff 70 2e 00 00 	r0 = 11888 <update_bss_start : 2e70 >			  ## download_loop.c:1970:35
 1e176c2:    00 40             	r0 = [r0 + 0]			  ## download_loop.c:1970:35
 1e176c4:    11 03             	r1 = [sp+68]			  ## download_loop.c:1988:30
 1e176c6:    00 f6 b4 01       	r0 = [r0 + 436]			  ## download_loop.c:1970:62
 1e176ca:    17 09             	r7 += r1			  ## download_loop.c:1988:16
 1e176cc:    90 fb a0 00       	r0 = r0 - r10			  ## download_loop.c:1970:72
 1e176d0:    07 f2 c6 3f       	if (r7 < r0) goto -116 <active_update_task+0xDE6 : 1e17660 >			  ## download_loop.c:1970:72
 1e176d4:    b7 1f             	goto -146 <active_update_task+0xDCA : 1e17644 >			  ## download_loop.c:1970:72


app_active_update_task_init:
 1e176d6:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:206:0
 1e176d8:    c1 ff 70 20 00 00 	r1 = 8304 <gatt_client_conn_handle : 2070 >			  ## update_main.c:207:9
 1e176de:    04 f6 ec 10       	r4 = [r1 + 236]			  ## update_main.c:207:9
 1e176e2:    02 f9 64 40       	r2 = b[r4 + 100] (u)			  ## update_main.c:207:17
 1e176e6:    01 08             	r1 = r0			  ## update_main.c:207:17
 1e176e8:    01 24             	if (r2 == 0) goto 2 <app_active_update_task_init+0x16 : 1e176ec >			  ## update_main.c:207:17
 1e176ea:    54 01             	{pc, r4} = [sp++]
 1e176ec:    40 fc 50 00       	r0 = r4 + 80			  ## update_main.c:212:27
 1e176f0:    02 71             	r2 = 16			  ## update_main.c:212:5
 1e176f2:    97 f3 f7 7b       	call 3078126 <memcpy : 106ee4 >			  ## update_main.c:212:5
 1e176f6:    00 f9 5c 40       	r0 = b[r4 + 92] (u)			  ## update_main.c:181:22
 1e176fa:    0e 20             	if (r0 == 0) goto 28 <app_active_update_task_init+0x42 : 1e17718 >			  ## update_main.c:181:9
 1e176fc:    01 70             	r1 = 0			  ## update_main.c:182:9
 1e176fe:    40 08             	r0 = r4			  ## update_main.c:182:9
 1e17700:    97 f3 7e 7b       	call 3077884 <os_sem_create : 106e00 >			  ## update_main.c:182:9
 1e17704:    c0 ff 7a 68 e1 01 	r0 = 31549562 <active_update_task : 1e1687a >			  ## update_main.c:184:9
 1e1770a:    c2 ff 05 df e0 01 	r2 = 31514373 <update_target_end+0x25 : 1e0df05 >			  ## update_main.c:184:9
 1e17710:    41 08             	r1 = r4			  ## update_main.c:184:9
 1e17712:    14 01             	{rets, r4} = [sp++]			  ## update_main.c:184:9
 1e17714:    ff f3 4e 9f       	goto -49508 <task_create : 1e0b5b4 >			  ## update_main.c:184:9
 1e17718:    40 08             	r0 = r4			  ## update_main.c:186:9
 1e1771a:    bf f3 ae f8       	call -3748 <active_update_task : 1e1687a >			  ## update_main.c:186:9
 1e1771e:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:186:9


update_module_init:
 1e17720:    74 01             	[--sp] = {rets, r4}			  ## update_main.c:219:0
 1e17722:    80 76             	r0 = 104			  ## update_main.c:220:14
 1e17724:    bf f3 9c 97       	call -53448 <malloc : 1e0a660 >			  ## update_main.c:220:14
 1e17728:    04 08             	r4 = r0			  ## update_main.c:220:14
 1e1772a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## update_main.c:220:12
 1e17730:    14 f6 ec 00       	[r0 + 236] = r4			  ## update_main.c:220:12
 1e17734:    09 28             	if (r4 == 0) goto 18 <update_module_init+0x28 : 1e17748 >			  ## update_main.c:220:12
 1e17736:    01 70             	r1 = 0			  ## update_main.c:222:9
 1e17738:    82 76             	r2 = 104			  ## update_main.c:222:9
 1e1773a:    40 08             	r0 = r4			  ## update_main.c:222:9
 1e1773c:    97 f3 d8 7b       	call 3078064 <memset : 106ef0 >			  ## update_main.c:222:9
 1e17740:    c0 ff 00 12 e0 01 	r0 = 31461888 <update_common_state_cbk : 1e01200 >			  ## update_main.c:223:34
 1e17746:    88 49             	[r4 + 96] = r0			  ## update_main.c:223:34
 1e17748:    54 01             	{pc, r4} = [sp++]			  ## update_main.c:228:1


bt_f_seek:
 1e1774a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## lmp_ch_update.c:57:0
 1e17750:    07 22             	if (r1 == 0) goto 14 <bt_f_seek+0x16 : 1e17760 >			  ## lmp_ch_update.c:57:0
 1e17752:    11 e0 09 10       	if (r1 != 1) goto 18 <bt_f_seek+0x1E : 1e17768 >			  ## lmp_ch_update.c:57:0
 1e17756:    01 f6 bc 00       	r1 = [r0 + 188]			  ## lmp_ch_update.c:62:24
 1e1775a:    12 09             	r2 += r1			  ## lmp_ch_update.c:62:24
 1e1775c:    21 70             	r1 = 2
 1e1775e:    01 18             	goto 2 <bt_f_seek+0x18 : 1e17762 >
 1e17760:    11 70             	r1 = 1
 1e17762:    12 f6 bc 00       	[r0 + 188] = r2
 1e17766:    e9 60             	b[r0 + 14] = r1
 1e17768:    00 70             	r0 = 0			  ## lmp_ch_update.c:67:5
 1e1776a:    20 00             	rts			  ## lmp_ch_update.c:67:5


bt_f_read:
 1e1776c:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:71:0
 1e1776e:    24 08             	r4 = r2			  ## lmp_ch_update.c:71:0
 1e17770:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >			  ## lmp_ch_update.c:71:0
 1e17776:    00 70             	r0 = 0			  ## lmp_ch_update.c:71:0
 1e17778:    28 5b             	h[r5 + 36] = r0			  ## lmp_ch_update.c:72:19
 1e1777a:    11 f6 c0 50       	[r5 + 192] = r1			  ## lmp_ch_update.c:73:17
 1e1777e:    bf f3 64 f3       	call -6456 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:74:5
 1e17782:    03 f6 bc 50       	r3 = [r5 + 188]			  ## lmp_ch_update.c:77:63
 1e17786:    e2 6a             	r2 = b[r5 + 14] (u)			  ## lmp_ch_update.c:77:5
 1e17788:    40 70             	r0 = 4			  ## lmp_ch_update.c:77:5
 1e1778a:    41 08             	r1 = r4			  ## lmp_ch_update.c:77:5
 1e1778c:    bf f3 64 f3       	call -6456 <bt_updata_control : 1e15e58 >			  ## lmp_ch_update.c:77:5
 1e17790:    bf f3 77 f3       	call -6418 <bt_updata_get_flag : 1e15e82 >
 1e17794:    21 f3 0c 00       	if ((r0 & 2) != 0) goto 24 <bt_f_read+0x44 : 1e177b0 >
 1e17798:    01 f6 c4 50       	r1 = [r5 + 196]			  ## lmp_ch_update.c:79:13
 1e1779c:    f9 23             	if (r1 == 0) goto -14 <bt_f_read+0x24 : 1e17790 >			  ## lmp_ch_update.c:79:13
 1e1779e:    00 70             	r0 = 0			  ## lmp_ch_update.c:80:13
 1e177a0:    81 00             	call r1			  ## lmp_ch_update.c:80:13
 1e177a2:    bf f3 6e f3       	call -6436 <bt_updata_get_flag : 1e15e82 >			  ## lmp_ch_update.c:81:46
 1e177a6:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_read+0x24 : 1e17790 >			  ## lmp_ch_update.c:81:46
 1e177aa:    bf f3 4e f3       	call -6500 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:82:17
 1e177ae:    0a 18             	goto 20 <bt_f_read+0x58 : 1e177c4 >			  ## lmp_ch_update.c:82:17
 1e177b0:    bf f3 4b f3       	call -6506 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:88:5
 1e177b4:    20 5b             	r0 = h[r5 + 36] (u)			  ## lmp_ch_update.c:89:9
 1e177b6:    06 20             	if (r0 == 0) goto 12 <bt_f_read+0x58 : 1e177c4 >			  ## lmp_ch_update.c:89:9
 1e177b8:    00 f6 bc 50       	r0 = [r5 + 188]			  ## lmp_ch_update.c:92:20
 1e177bc:    40 09             	r0 += r4			  ## lmp_ch_update.c:92:20
 1e177be:    10 f6 bc 50       	[r5 + 188] = r0			  ## lmp_ch_update.c:92:20
 1e177c2:    03 18             	goto 6 <bt_f_read+0x5E : 1e177ca >			  ## lmp_ch_update.c:92:20
 1e177c4:    c4 ff ff ff 00 00 	r4 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e177ca:    40 08             	r0 = r4			  ## lmp_ch_update.c:95:1
 1e177cc:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:95:1


bt_f_open:
 1e177ce:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:100:0
 1e177d0:    bf f3 3b f3       	call -6538 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:105:5
 1e177d4:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >			  ## lmp_ch_update.c:105:5
 1e177da:    00 70             	r0 = 0			  ## lmp_ch_update.c:105:5
 1e177dc:    10 f6 bc 50       	[r5 + 188] = r0			  ## lmp_ch_update.c:107:20
 1e177e0:    14 70             	r4 = 1			  ## lmp_ch_update.c:107:20
 1e177e2:    ec 6a             	b[r5 + 14] = r4			  ## lmp_ch_update.c:108:18
 1e177e4:    10 70             	r0 = 1			  ## lmp_ch_update.c:109:5
 1e177e6:    01 70             	r1 = 0			  ## lmp_ch_update.c:109:5
 1e177e8:    02 70             	r2 = 0			  ## lmp_ch_update.c:109:5
 1e177ea:    03 70             	r3 = 0			  ## lmp_ch_update.c:109:5
 1e177ec:    bf f3 34 f3       	call -6552 <bt_updata_control : 1e15e58 >			  ## lmp_ch_update.c:109:5
 1e177f0:    bf f3 47 f3       	call -6514 <bt_updata_get_flag : 1e15e82 >
 1e177f4:    21 f3 0d 00       	if ((r0 & 2) != 0) goto 26 <bt_f_open+0x44 : 1e17812 >
 1e177f8:    01 f6 c4 50       	r1 = [r5 + 196]			  ## lmp_ch_update.c:124:13
 1e177fc:    f9 23             	if (r1 == 0) goto -14 <bt_f_open+0x22 : 1e177f0 >			  ## lmp_ch_update.c:124:13
 1e177fe:    00 70             	r0 = 0			  ## lmp_ch_update.c:125:13
 1e17800:    81 00             	call r1			  ## lmp_ch_update.c:125:13
 1e17802:    bf f3 3e f3       	call -6532 <bt_updata_get_flag : 1e15e82 >			  ## lmp_ch_update.c:126:46
 1e17806:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_open+0x22 : 1e177f0 >			  ## lmp_ch_update.c:126:46
 1e1780a:    bf f3 1e f3       	call -6596 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:127:17
 1e1780e:    04 70             	r4 = 0			  ## lmp_ch_update.c:127:17
 1e17810:    02 18             	goto 4 <bt_f_open+0x48 : 1e17816 >			  ## lmp_ch_update.c:127:17
 1e17812:    bf f3 1a f3       	call -6604 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:133:5
 1e17816:    40 08             	r0 = r4			  ## lmp_ch_update.c:135:1
 1e17818:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:135:1


bt_f_send_update_len:
 1e1781a:    74 01             	[--sp] = {rets, r4}			  ## lmp_ch_update.c:138:0
 1e1781c:    13 08             	r3 = r1			  ## lmp_ch_update.c:138:0
 1e1781e:    02 08             	r2 = r0			  ## lmp_ch_update.c:138:0
 1e17820:    bf f3 13 f3       	call -6618 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:145:5
 1e17824:    27 24             	if (r2 == 0) goto 78 <bt_f_send_update_len+0x5A : 1e17874 >			  ## lmp_ch_update.c:145:5
 1e17826:    00 64             	r0 = b[r2 + 0] (u)			  ## lmp_ch_update.c:150:31
 1e17828:    20 e0 05 00       	if (r0 == 2) goto 10 <bt_f_send_update_len+0x1C : 1e17836 >			  ## lmp_ch_update.c:150:13
 1e1782c:    09 30             	if (r0 != 0) goto 18 <bt_f_send_update_len+0x26 : 1e17840 >
 1e1782e:    20 70             	r0 = 2			  ## lmp_ch_update.c:151:13
 1e17830:    01 70             	r1 = 0			  ## lmp_ch_update.c:151:13
 1e17832:    02 71             	r2 = 16			  ## lmp_ch_update.c:151:13
 1e17834:    03 18             	goto 6 <bt_f_send_update_len+0x22 : 1e1783c >
 1e17836:    20 70             	r0 = 2			  ## lmp_ch_update.c:153:13
 1e17838:    01 70             	r1 = 0			  ## lmp_ch_update.c:153:13
 1e1783a:    12 71             	r2 = 17			  ## lmp_ch_update.c:153:13
 1e1783c:    bf f3 0c f3       	call -6632 <bt_updata_control : 1e15e58 >
 1e17840:    bf f3 1f f3       	call -6594 <bt_updata_get_flag : 1e15e82 >			  ## lmp_ch_update.c:160:41
 1e17844:    21 f3 10 00       	if ((r0 & 2) != 0) goto 32 <bt_f_send_update_len+0x4E : 1e17868 >			  ## lmp_ch_update.c:160:41
 1e17848:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >
 1e1784e:    01 f6 c4 40       	r1 = [r4 + 196]			  ## lmp_ch_update.c:161:13
 1e17852:    06 22             	if (r1 == 0) goto 12 <bt_f_send_update_len+0x46 : 1e17860 >			  ## lmp_ch_update.c:161:13
 1e17854:    00 70             	r0 = 0			  ## lmp_ch_update.c:162:13
 1e17856:    81 00             	call r1			  ## lmp_ch_update.c:162:13
 1e17858:    bf f3 13 f3       	call -6618 <bt_updata_get_flag : 1e15e82 >			  ## lmp_ch_update.c:163:46
 1e1785c:    01 f3 08 00       	if ((r0 & 2) == 0) goto 16 <bt_f_send_update_len+0x56 : 1e17870 >			  ## lmp_ch_update.c:163:46
 1e17860:    bf f3 0f f3       	call -6626 <bt_updata_get_flag : 1e15e82 >			  ## lmp_ch_update.c:160:41
 1e17864:    01 f3 f3 0f       	if ((r0 & 2) == 0) goto -26 <bt_f_send_update_len+0x34 : 1e1784e >			  ## lmp_ch_update.c:160:41
 1e17868:    bf f3 ef f2       	call -6690 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:169:5
 1e1786c:    10 70             	r0 = 1			  ## lmp_ch_update.c:169:5
 1e1786e:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1
 1e17870:    bf f3 eb f2       	call -6698 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:164:17
 1e17874:    00 70             	r0 = 0
 1e17876:    54 01             	{pc, r4} = [sp++]			  ## lmp_ch_update.c:171:1


bt_f_stop:
 1e17878:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:174:0
 1e1787a:    04 08             	r4 = r0			  ## lmp_ch_update.c:174:0
 1e1787c:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >			  ## lmp_ch_update.c:174:0
 1e17882:    00 70             	r0 = 0			  ## lmp_ch_update.c:179:17
 1e17884:    10 f6 c0 50       	[r5 + 192] = r0			  ## lmp_ch_update.c:179:17
 1e17888:    bf f3 df f2       	call -6722 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:180:5
 1e1788c:    64 e1 05 c0       	ifs (r4 > 22) goto 10 <bt_f_stop+0x22 : 1e1789a >			  ## lmp_ch_update.c:181:31
 1e17890:    09 28             	if (r4 == 0) goto 18 <bt_f_stop+0x2C : 1e178a4 >
 1e17892:    14 e0 22 10       	if (r4 != 1) goto 68 <bt_f_stop+0x62 : 1e178da >
 1e17896:    50 70             	r0 = 5			  ## lmp_ch_update.c:184:9
 1e17898:    06 18             	goto 12 <bt_f_stop+0x2E : 1e178a6 >			  ## lmp_ch_update.c:184:9
 1e1789a:    00 ff 97 40 02 00 	if (r4 == 151) goto 4 <bt_f_stop+0x2C : 1e178a4 >
 1e178a0:    74 e1 1b 10       	if (r4 != 23) goto 54 <bt_f_stop+0x62 : 1e178da >
 1e178a4:    00 70             	r0 = 0			  ## lmp_ch_update.c:182:9
 1e178a6:    01 70             	r1 = 0
 1e178a8:    02 70             	r2 = 0
 1e178aa:    03 70             	r3 = 0
 1e178ac:    bf f3 d4 f2       	call -6744 <bt_updata_control : 1e15e58 >
 1e178b0:    bf f3 e7 f2       	call -6706 <bt_updata_get_flag : 1e15e82 >
 1e178b4:    21 f3 0d 00       	if ((r0 & 2) != 0) goto 26 <bt_f_stop+0x5A : 1e178d2 >
 1e178b8:    01 f6 c4 50       	r1 = [r5 + 196]			  ## lmp_ch_update.c:198:13
 1e178bc:    f9 23             	if (r1 == 0) goto -14 <bt_f_stop+0x38 : 1e178b0 >			  ## lmp_ch_update.c:198:13
 1e178be:    00 70             	r0 = 0			  ## lmp_ch_update.c:199:13
 1e178c0:    81 00             	call r1			  ## lmp_ch_update.c:199:13
 1e178c2:    bf f3 de f2       	call -6724 <bt_updata_get_flag : 1e15e82 >			  ## lmp_ch_update.c:200:46
 1e178c6:    21 f3 f3 0f       	if ((r0 & 2) != 0) goto -26 <bt_f_stop+0x38 : 1e178b0 >			  ## lmp_ch_update.c:200:46
 1e178ca:    bf f3 be f2       	call -6788 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:201:17
 1e178ce:    05 70             	r5 = 0			  ## lmp_ch_update.c:201:17
 1e178d0:    0b 18             	goto 22 <bt_f_stop+0x70 : 1e178e8 >			  ## lmp_ch_update.c:201:17
 1e178d2:    bf f3 ba f2       	call -6796 <bt_updata_clr_flag : 1e15e4a >			  ## lmp_ch_update.c:207:5
 1e178d6:    15 70             	r5 = 1			  ## lmp_ch_update.c:207:5
 1e178d8:    07 18             	goto 14 <bt_f_stop+0x70 : 1e178e8 >			  ## lmp_ch_update.c:207:5
 1e178da:    00 70             	r0 = 0			  ## lmp_ch_update.c:186:9
 1e178dc:    02 70             	r2 = 0			  ## lmp_ch_update.c:186:9
 1e178de:    03 70             	r3 = 0			  ## lmp_ch_update.c:186:9
 1e178e0:    05 70             	r5 = 0			  ## lmp_ch_update.c:186:9
 1e178e2:    41 08             	r1 = r4			  ## lmp_ch_update.c:186:9
 1e178e4:    bf f3 b8 f2       	call -6800 <bt_updata_control : 1e15e58 >			  ## lmp_ch_update.c:186:9
 1e178e8:    50 08             	r0 = r5			  ## lmp_ch_update.c:209:1
 1e178ea:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:209:1


lmp_ch_update_init:
 1e178ec:    34 00             	[--sp] = rets			  ## lmp_ch_update.c:232:0
 1e178ee:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## lmp_ch_update.c:228:29
 1e178f4:    10 f6 c8 20       	[r2 + 200] = r0			  ## lmp_ch_update.c:227:30
 1e178f8:    11 f6 c4 20       	[r2 + 196] = r1			  ## lmp_ch_update.c:228:29
 1e178fc:    bf f3 c6 f2       	call -6772 <reg_revic_buf_addr : 1e15e8c >			  ## lmp_ch_update.c:235:5
 1e17900:    88 01             	{rets} = [sp++]			  ## lmp_ch_update.c:237:5
 1e17902:    ff f3 cb f2       	goto -6762 <lmp_update_init : 1e15e9c >			  ## lmp_ch_update.c:237:5


bt_updata_handle:
 1e17906:    75 01             	[--sp] = {rets, r5, r4}			  ## lmp_ch_update.c:217:0
 1e17908:    c5 ff 70 20 00 00 	r5 = 8304 <gatt_client_conn_handle : 2070 >			  ## lmp_ch_update.c:217:0
 1e1790e:    02 f6 c0 50       	r2 = [r5 + 192]			  ## lmp_ch_update.c:219:9
 1e17912:    14 08             	r4 = r1			  ## lmp_ch_update.c:219:9
 1e17914:    01 08             	r1 = r0
 1e17916:    05 24             	if (r2 == 0) goto 10 <bt_updata_handle+0x1C : 1e17922 >
 1e17918:    20 08             	r0 = r2			  ## lmp_ch_update.c:220:9
 1e1791a:    42 08             	r2 = r4			  ## lmp_ch_update.c:220:9
 1e1791c:    97 f3 e2 7a       	call 3077572 <memcpy : 106ee4 >			  ## lmp_ch_update.c:220:9
 1e17920:    2c 5b             	h[r5 + 36] = r4			  ## lmp_ch_update.c:221:23
 1e17922:    55 01             	{pc, r5, r4} = [sp++]			  ## lmp_ch_update.c:223:1


lmp_ch_update_exit:
 1e17924:    ff f3 c5 f2       	goto -6774 <lmp_update_exit : 1e15eb2 >			  ## lmp_ch_update.c:241:0


ble_f_seek:
 1e17928:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_ll_ch_update.c:83:0
 1e1792e:    07 22             	if (r1 == 0) goto 14 <ble_f_seek+0x16 : 1e1793e >			  ## ble_ll_ch_update.c:83:0
 1e17930:    11 e0 09 10       	if (r1 != 1) goto 18 <ble_f_seek+0x1E : 1e17946 >			  ## ble_ll_ch_update.c:83:0
 1e17934:    01 f6 cc 00       	r1 = [r0 + 204]			  ## ble_ll_ch_update.c:88:24
 1e17938:    12 09             	r2 += r1			  ## ble_ll_ch_update.c:88:24
 1e1793a:    21 70             	r1 = 2
 1e1793c:    01 18             	goto 2 <ble_f_seek+0x18 : 1e17940 >
 1e1793e:    11 70             	r1 = 1
 1e17940:    12 f6 cc 00       	[r0 + 204] = r2
 1e17944:    f9 60             	b[r0 + 15] = r1
 1e17946:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:93:5
 1e17948:    20 00             	rts			  ## ble_ll_ch_update.c:93:5


ble_f_read:
 1e1794a:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:97:0
 1e1794c:    24 08             	r4 = r2			  ## ble_ll_ch_update.c:97:0
 1e1794e:    c6 ff 70 20 00 00 	r6 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_ll_ch_update.c:97:0
 1e17954:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:97:0
 1e17956:    62 fc cc 00       	r2 = r6 + 204			  ## ble_ll_ch_update.c:97:0
 1e1795a:    48 64             	b[r2 + 4] = r0			  ## ble_ll_ch_update.c:97:0
 1e1795c:    2c 44             	[r2 + 8] = r4			  ## ble_ll_ch_update.c:100:25
 1e1795e:    c3 f4 00 29       	[r2 + 12] = 0			  ## ble_ll_ch_update.c:101:22
 1e17962:    49 44             	[r2 + 16] = r1			  ## ble_ll_ch_update.c:102:22
 1e17964:    03 44             	r3 = [r2 + 0]			  ## ble_ll_ch_update.c:104:68
 1e17966:    f2 6c             	r2 = b[r6 + 15] (u)			  ## ble_ll_ch_update.c:49:12
 1e17968:    40 70             	r0 = 4			  ## ble_ll_ch_update.c:49:12
 1e1796a:    41 08             	r1 = r4			  ## ble_ll_ch_update.c:49:12
 1e1796c:    bf f3 19 ee       	call -9166 <ll_update_send_data_handle : 1e155a2 >			  ## ble_ll_ch_update.c:49:12
 1e17970:    c5 ff ff ff 00 00 	r5 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >
 1e17976:    02 20             	if (r0 == 0) goto 4 <ble_f_read+0x32 : 1e1797c >
 1e17978:    50 08             	r0 = r5			  ## ble_ll_ch_update.c:126:1
 1e1797a:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:126:1
 1e1797c:    00 f9 d0 60       	r0 = b[r6 + 208] (u)
 1e17980:    00 f3 0f 00       	if ((r0 & 1) == 0) goto 30 <ble_f_read+0x58 : 1e179a2 >			  ## ble_ll_ch_update.c:108:5
 1e17984:    01 f6 e0 60       	r1 = [r6 + 224]			  ## ble_ll_ch_update.c:109:13
 1e17988:    f7 23             	if (r1 == 0) goto -18 <ble_f_read+0x2E : 1e17978 >			  ## ble_ll_ch_update.c:109:13
 1e1798a:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:110:13
 1e1798c:    81 00             	call r1			  ## ble_ll_ch_update.c:110:13
 1e1798e:    00 f6 d8 60       	r0 = [r6 + 216]			  ## ble_ll_ch_update.c:113:63
 1e17992:    04 f2 f1 1f       	if (r4 != r0) goto -30 <ble_f_read+0x2E : 1e17978 >			  ## ble_ll_ch_update.c:113:63
 1e17996:    00 f9 d0 60       	r0 = b[r6 + 208] (u)
 1e1799a:    11 fd 01 09       	r1 = r0 ^ 1			  ## ble_ll_ch_update.c:113:44
 1e1799e:    f0 33             	if (r1 != 0) goto -32 <ble_f_read+0x36 : 1e17980 >			  ## ble_ll_ch_update.c:113:44
 1e179a0:    eb 1f             	goto -42 <ble_f_read+0x2E : 1e17978 >			  ## ble_ll_ch_update.c:113:44
 1e179a2:    00 f6 d8 60       	r0 = [r6 + 216]			  ## ble_ll_ch_update.c:119:17
 1e179a6:    40 f2 e7 1f       	if (r0 != r4) goto -50 <ble_f_read+0x2E : 1e17978 >			  ## ble_ll_ch_update.c:119:17
 1e179aa:    00 f6 cc 60       	r0 = [r6 + 204]			  ## ble_ll_ch_update.c:120:24
 1e179ae:    40 09             	r0 += r4			  ## ble_ll_ch_update.c:120:24
 1e179b0:    10 f6 cc 60       	[r6 + 204] = r0			  ## ble_ll_ch_update.c:120:24
 1e179b4:    45 08             	r5 = r4			  ## ble_ll_ch_update.c:120:24
 1e179b6:    e0 1f             	goto -64 <ble_f_read+0x2E : 1e17978 >			  ## ble_ll_ch_update.c:120:24


ble_f_open:
 1e179b8:    74 01             	[--sp] = {rets, r4}			  ## ble_ll_ch_update.c:129:0
 1e179ba:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_ll_ch_update.c:137:18
 1e179c0:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:137:18
 1e179c2:    11 f6 cc 00       	[r0 + 204] = r1			  ## ble_ll_ch_update.c:136:20
 1e179c6:    14 70             	r4 = 1			  ## ble_ll_ch_update.c:136:20
 1e179c8:    fc 60             	b[r0 + 15] = r4			  ## ble_ll_ch_update.c:137:18
 1e179ca:    10 70             	r0 = 1			  ## ble_ll_ch_update.c:49:12
 1e179cc:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:49:12
 1e179ce:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:49:12
 1e179d0:    bf f3 e7 ed       	call -9266 <ll_update_send_data_handle : 1e155a2 >			  ## ble_ll_ch_update.c:49:12
 1e179d4:    01 20             	if (r0 == 0) goto 2 <ble_f_open+0x20 : 1e179d8 >			  ## ble_ll_ch_update.c:49:12
 1e179d6:    f4 07             	r4 = -1			  ## ble_ll_ch_update.c:142:5
 1e179d8:    20 05             	r0 = r4.l (u)			  ## ble_ll_ch_update.c:143:1
 1e179da:    54 01             	{pc, r4} = [sp++]			  ## ble_ll_ch_update.c:143:1


ble_f_send_update_len:
 1e179dc:    34 00             	[--sp] = rets			  ## ble_ll_ch_update.c:146:0
 1e179de:    13 08             	r3 = r1			  ## ble_ll_ch_update.c:146:0
 1e179e0:    08 20             	if (r0 == 0) goto 16 <ble_f_send_update_len+0x16 : 1e179f2 >			  ## ble_ll_ch_update.c:146:0
 1e179e2:    20 70             	r0 = 2			  ## ble_ll_ch_update.c:49:12
 1e179e4:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:49:12
 1e179e6:    02 71             	r2 = 16			  ## ble_ll_ch_update.c:49:12
 1e179e8:    bf f3 db ed       	call -9290 <ll_update_send_data_handle : 1e155a2 >			  ## ble_ll_ch_update.c:49:12
 1e179ec:    01 08             	r1 = r0			  ## ble_ll_ch_update.c:49:12
 1e179ee:    f0 07             	r0 = -1			  ## ble_ll_ch_update.c:49:12
 1e179f0:    01 32             	if (r1 != 0) goto 2 <ble_f_send_update_len+0x18 : 1e179f4 >			  ## ble_ll_ch_update.c:49:12
 1e179f2:    10 70             	r0 = 1
 1e179f4:    30 00             	pc = [sp++]			  ## ble_ll_ch_update.c:160:1


ble_f_stop:
 1e179f6:    74 01             	[--sp] = {rets, r4}			  ## ble_ll_ch_update.c:163:0
 1e179f8:    01 08             	r1 = r0			  ## ble_ll_ch_update.c:163:0
 1e179fa:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_ll_ch_update.c:164:22
 1e17a00:    02 70             	r2 = 0			  ## ble_ll_ch_update.c:164:22
 1e17a02:    12 f6 dc 00       	[r0 + 220] = r2			  ## ble_ll_ch_update.c:164:22
 1e17a06:    61 e1 05 c0       	ifs (r1 > 22) goto 10 <ble_f_stop+0x1E : 1e17a14 >			  ## ble_ll_ch_update.c:167:31
 1e17a0a:    09 22             	if (r1 == 0) goto 18 <ble_f_stop+0x28 : 1e17a1e >
 1e17a0c:    11 e0 0e 10       	if (r1 != 1) goto 28 <ble_f_stop+0x36 : 1e17a2c >
 1e17a10:    50 70             	r0 = 5			  ## ble_ll_ch_update.c:49:12
 1e17a12:    06 18             	goto 12 <ble_f_stop+0x2A : 1e17a20 >			  ## ble_ll_ch_update.c:49:12
 1e17a14:    00 ff 97 10 02 00 	if (r1 == 151) goto 4 <ble_f_stop+0x28 : 1e17a1e >
 1e17a1a:    71 e1 07 10       	if (r1 != 23) goto 14 <ble_f_stop+0x36 : 1e17a2c >
 1e17a1e:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:49:12
 1e17a20:    01 70             	r1 = 0
 1e17a22:    03 70             	r3 = 0
 1e17a24:    bf f3 bd ed       	call -9350 <ll_update_send_data_handle : 1e155a2 >
 1e17a28:    14 70             	r4 = 1
 1e17a2a:    05 18             	goto 10 <ble_f_stop+0x40 : 1e17a36 >
 1e17a2c:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:49:12
 1e17a2e:    03 70             	r3 = 0			  ## ble_ll_ch_update.c:49:12
 1e17a30:    04 70             	r4 = 0			  ## ble_ll_ch_update.c:49:12
 1e17a32:    bf f3 b6 ed       	call -9364 <ll_update_send_data_handle : 1e155a2 >			  ## ble_ll_ch_update.c:49:12
 1e17a36:    40 08             	r0 = r4			  ## ble_ll_ch_update.c:177:1
 1e17a38:    54 01             	{pc, r4} = [sp++]			  ## ble_ll_ch_update.c:177:1


ble_updata_handle:
 1e17a3a:    76 01             	[--sp] = {rets, r6-r4}			  ## ble_ll_ch_update.c:180:0
 1e17a3c:    c4 ff 70 20 00 00 	r4 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_ll_ch_update.c:180:0
 1e17a42:    00 f6 dc 40       	r0 = [r4 + 220]			  ## ble_ll_ch_update.c:182:17
 1e17a46:    1d 20             	if (r0 == 0) goto 58 <ble_updata_handle+0x48 : 1e17a82 >
 1e17a48:    03 f9 d0 40       	r3 = b[r4 + 208] (u)
 1e17a4c:    1a 26             	if (r3 == 0) goto 52 <ble_updata_handle+0x48 : 1e17a82 >
 1e17a4e:    03 f6 d8 40       	r3 = [r4 + 216]			  ## ble_ll_ch_update.c:183:44
 1e17a52:    05 f6 d4 40       	r5 = [r4 + 212]			  ## ble_ll_ch_update.c:183:21
 1e17a56:    86 b6             	r6 = r3 + r2			  ## ble_ll_ch_update.c:183:53
 1e17a58:    65 f2 02 20       	if (r5 >= r6) goto 4 <ble_updata_handle+0x26 : 1e17a60 >			  ## ble_ll_ch_update.c:183:53
 1e17a5c:    36 08             	r6 = r3			  ## ble_ll_ch_update.c:188:44
 1e17a5e:    05 18             	goto 10 <ble_updata_handle+0x30 : 1e17a6a >			  ## ble_ll_ch_update.c:188:44
 1e17a60:    30 09             	r0 += r3			  ## ble_ll_ch_update.c:184:37
 1e17a62:    97 f3 3f 7a       	call 3077246 <memcpy : 106ee4 >			  ## ble_ll_ch_update.c:184:13
 1e17a66:    16 f6 d8 40       	[r4 + 216] = r6			  ## ble_ll_ch_update.c:185:30
 1e17a6a:    65 f2 0a 10       	if (r5 != r6) goto 20 <ble_updata_handle+0x48 : 1e17a82 >
 1e17a6e:    40 fc d0 00       	r0 = r4 + 208
 1e17a72:    05 f4 02 09       	[r0 + 20] |= 2			  ## ble_ll_ch_update.c:55:24
 1e17a76:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:55:24
 1e17a78:    09 60             	b[r0 + 0] = r1			  ## ble_ll_ch_update.c:55:24
 1e17a7a:    61 40             	r1 = [r0 + 24]			  ## ble_ll_ch_update.c:191:17
 1e17a7c:    02 22             	if (r1 == 0) goto 4 <ble_updata_handle+0x48 : 1e17a82 >			  ## ble_ll_ch_update.c:191:17
 1e17a7e:    00 70             	r0 = 0			  ## ble_ll_ch_update.c:192:17
 1e17a80:    81 00             	call r1			  ## ble_ll_ch_update.c:192:17
 1e17a82:    56 01             	{pc, r6-r4} = [sp++]			  ## ble_ll_ch_update.c:197:1


ble_test_update_exit:
 1e17a84:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_ll_ch_update.c:237:0
 1e17a8a:    01 70             	r1 = 0			  ## ble_ll_ch_update.c:245:22
 1e17a8c:    11 f6 dc 00       	[r0 + 220] = r1			  ## ble_ll_ch_update.c:245:22
 1e17a90:    ff f3 a4 ed       	goto -9400 <unregister_ll_update_handle : 1e155dc >			  ## ble_ll_ch_update.c:246:5


ble_test_update_init:
 1e17a94:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## ble_ll_ch_update.c:213:0
 1e17a9a:    10 f6 e8 20       	[r2 + 232] = r0			  ## ble_ll_ch_update.c:201:30
 1e17a9e:    11 f6 e0 20       	[r2 + 224] = r1			  ## ble_ll_ch_update.c:202:29
 1e17aa2:    ff f3 a9 ed       	goto -9390 <register_ll_update_handle : 1e155f8 >			  ## ble_ll_ch_update.c:220:5


update_thread_resume:
 1e17aa6:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## update_main.c:53:0
 1e17aac:    00 f6 ec 00       	r0 = [r0 + 236]			  ## update_main.c:55:18
 1e17ab0:    d7 f3 ac 79       	goto 3076952 <os_sem_post : 106e0c >			  ## update_main.c:55:5


update_thread_sleep:
 1e17ab4:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## update_main.c:47:0
 1e17aba:    00 f6 ec 00       	r0 = [r0 + 236]			  ## update_main.c:49:25
 1e17abe:    01 fb f4 01       	r1 = 500 <BTCTLER_CL_RAM_TOTAL+0x10 : 1f4 >			  ## update_main.c:49:12
 1e17ac2:    d7 f3 a1 79       	goto 3076930 <os_sem_pend : 106e08 >			  ## update_main.c:49:12


loader_info_record_write:
 1e17ac6:    78 01             	[--sp] = {rets, r8-r4}			  ## download_loop.c:1305:0
 1e17ac8:    24 08             	r4 = r2			  ## download_loop.c:1305:0
 1e17aca:    15 08             	r5 = r1			  ## download_loop.c:1305:0
 1e17acc:    07 08             	r7 = r0			  ## download_loop.c:1305:0
 1e17ace:    50 08             	r0 = r5			  ## download_loop.c:1314:16
 1e17ad0:    41 08             	r1 = r4			  ## download_loop.c:1314:16
 1e17ad2:    72 08             	r2 = r7			  ## download_loop.c:1314:16
 1e17ad4:    bf f3 30 49       	call -93600 <norflash_write : 1e00d38 >			  ## download_loop.c:1314:16
 1e17ad8:    d6 7f             	r6 = 253			  ## download_loop.c:1314:16
 1e17ada:    04 f2 19 10       	if (r4 != r0) goto 50 <loader_info_record_write+0x4A : 1e17b10 >
 1e17ade:    40 08             	r0 = r4			  ## download_loop.c:1320:20
 1e17ae0:    bf f3 be 95       	call -54404 <malloc : 1e0a660 >			  ## download_loop.c:1320:20
 1e17ae4:    08 08             	r8 = r0			  ## download_loop.c:1320:20
 1e17ae6:    13 20             	if (r0 == 0) goto 38 <loader_info_record_write+0x48 : 1e17b0e >
 1e17ae8:    41 08             	r1 = r4			  ## download_loop.c:1323:20
 1e17aea:    72 08             	r2 = r7			  ## download_loop.c:1323:20
 1e17aec:    bf f3 82 47       	call -94460 <norflash_read : 1e009f4 >			  ## download_loop.c:1323:20
 1e17af0:    c6 7f             	r6 = 252			  ## download_loop.c:1323:20
 1e17af2:    04 f2 08 10       	if (r4 != r0) goto 16 <loader_info_record_write+0x40 : 1e17b06 >			  ## download_loop.c:1323:20
 1e17af6:    50 08             	r0 = r5			  ## download_loop.c:1325:22
 1e17af8:    81 08             	r1 = r8			  ## download_loop.c:1325:22
 1e17afa:    42 08             	r2 = r4			  ## download_loop.c:1325:22
 1e17afc:    97 f3 f6 79       	call 3077100 <memcmp : 106eec >			  ## download_loop.c:1325:22
 1e17b00:    f6 07             	r6 = -1			  ## download_loop.c:1325:17
 1e17b02:    01 30             	if (r0 != 0) goto 2 <loader_info_record_write+0x40 : 1e17b06 >			  ## download_loop.c:1325:17
 1e17b04:    06 70             	r6 = 0			  ## download_loop.c:1325:17
 1e17b06:    80 08             	r0 = r8			  ## download_loop.c:1336:9
 1e17b08:    bf f3 bd 95       	call -54406 <free : 1e0a686 >			  ## download_loop.c:1336:9
 1e17b0c:    01 18             	goto 2 <loader_info_record_write+0x4A : 1e17b10 >			  ## download_loop.c:1336:9
 1e17b0e:    e6 7f             	r6 = 254
 1e17b10:    80 05             	r0 = r6.b0 (u)			  ## download_loop.c:1342:5
 1e17b12:    58 01             	{pc, r8-r4} = [sp++]			  ## download_loop.c:1342:5


part_update_encrypt_key_check:
 1e17b14:    77 01             	[--sp] = {rets, r7-r4}			  ## download_loop.c:1630:0
 1e17b16:    fe 0b             	sp += -4			  ## download_loop.c:1630:0
 1e17b18:    04 08             	r4 = r0			  ## download_loop.c:1630:0
 1e17b1a:    c0 ff 00 08 00 00 	r0 = 2048 <report_mmu_tlb_size : 800 >			  ## /jks/jenkins/workspace/data_trans_sdk_export_gitlab/data_trans_sdk/lib/driver/cpu/bd19/efuse.c:9:22
 1e17b20:    c1 ff 70 2e 00 00 	r1 = 11888 <update_bss_start : 2e70 >			  ## download_loop.c:1636:50
 1e17b26:    01 42             	r1 = [r1 + 0]			  ## download_loop.c:1636:50
 1e17b28:    c6 ff 70 20 00 00 	r6 = 8304 <gatt_client_conn_handle : 2070 >			  ## download_loop.c:1638:5
 1e17b2e:    03 f6 f0 60       	r3 = [r6 + 240]			  ## download_loop.c:1638:5
 1e17b32:    e5 50             	r5 = h[r0 + 28] (u)			  ## download_loop.c:1641:5
 1e17b34:    07 42             	r7 = [r1 + 0]			  ## download_loop.c:1636:58
 1e17b36:    22 48             	r2 = [r4 + 8]			  ## download_loop.c:1638:61
 1e17b38:    33 46             	r3 = [r3 + 12]			  ## download_loop.c:1638:18
 1e17b3a:    00 70             	r0 = 0			  ## download_loop.c:1638:5
 1e17b3c:    01 70             	r1 = 0			  ## download_loop.c:1638:5
 1e17b3e:    83 00             	call r3			  ## download_loop.c:1638:5
 1e17b40:    00 f6 f0 60       	r0 = [r6 + 240]			  ## download_loop.c:1639:5
 1e17b44:    23 40             	r3 = [r0 + 8]			  ## download_loop.c:1639:18
 1e17b46:    76 fc 00 02       	r6 = r7 + 512			  ## download_loop.c:1639:18
 1e17b4a:    00 70             	r0 = 0			  ## download_loop.c:1639:5
 1e17b4c:    02 72             	r2 = 32			  ## download_loop.c:1639:5
 1e17b4e:    07 72             	r7 = 32			  ## download_loop.c:1639:5
 1e17b50:    61 08             	r1 = r6			  ## download_loop.c:1639:5
 1e17b52:    83 00             	call r3			  ## download_loop.c:1639:5
 1e17b54:    23 48             	r3 = [r4 + 8]			  ## download_loop.c:1641:107
 1e17b56:    02 72             	r2 = 32			  ## download_loop.c:1641:5
 1e17b58:    0f 02             	[sp] = r7			  ## download_loop.c:1641:5
 1e17b5a:    50 08             	r0 = r5			  ## download_loop.c:1641:5
 1e17b5c:    61 08             	r1 = r6			  ## download_loop.c:1641:5
 1e17b5e:    bf f3 17 f6       	call -5074 <decode_data_by_user_key : 1e16790 >			  ## download_loop.c:1641:5
 1e17b62:    20 9c             	r0 = r6 + 2			  ## download_loop.c:1643:49
 1e17b64:    e1 71             	r1 = 30			  ## download_loop.c:339:12
 1e17b66:    bf f3 29 47       	call -94638 <CRC16 : 1e009bc >			  ## download_loop.c:339:12
 1e17b6a:    02 5c             	r2 = h[r6 + 0] (u)			  ## download_loop.c:1644:34
 1e17b6c:    01 08             	r1 = r0			  ## download_loop.c:339:12
 1e17b6e:    f0 07             	r0 = -1			  ## download_loop.c:1644:9
 1e17b70:    21 f2 01 10       	if (r1 != r2) goto 2 <part_update_encrypt_key_check+0x62 : 1e17b76 >			  ## download_loop.c:1644:9
 1e17b74:    00 70             	r0 = 0			  ## download_loop.c:1644:9
 1e17b76:    02 0a             	sp += 4
 1e17b78:    57 01             	{pc, r7-r4} = [sp++]			  ## download_loop.c:1652:5


update_code_end:
 1e17b7a:    7f 01             	[--sp] = {rets, r15-r4}			  ## clock.c:641:0
 1e17b7c:    f2 0b             	sp += -28			  ## clock.c:641:0
 1e17b7e:    05 70             	r5 = 0			  ## clock.c:641:0
 1e17b80:    1d 02             	[sp+4] = r5			  ## clock.c:650:9
 1e17b82:    c3 ff 80 84 1e 00 	r3 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:654:39
 1e17b88:    c3 0e             	r3 = r0 * r3			  ## clock.c:654:39
 1e17b8a:    94 70             	r4 = 9			  ## clock.c:654:39
 1e17b8c:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:654:39
 1e17b90:    2c 02             	[sp+8] = r4			  ## clock.c:654:37
 1e17b92:    74 70             	r4 = 7			  ## clock.c:655:39
 1e17b94:    c0 fe 40 43       	r4 = r3 / r4 (u)			  ## clock.c:655:39
 1e17b98:    3c 02             	[sp+12] = r4			  ## clock.c:655:37
 1e17b9a:    c4 ff 80 1a 06 00 	r4 = 400000 <text_size+0x498A0 : 61a80 >			  ## clock.c:656:39
 1e17ba0:    04 0f             	r4 = r0 * r4			  ## clock.c:656:39
 1e17ba2:    4c 02             	[sp+16] = r4			  ## clock.c:656:37
 1e17ba4:    34 70             	r4 = 3			  ## clock.c:657:39
 1e17ba6:    c0 fe 40 33       	r3 = r3 / r4 (u)			  ## clock.c:657:39
 1e17baa:    5b 02             	[sp+20] = r3			  ## clock.c:657:37
 1e17bac:    c3 ff 40 42 0f 00 	r3 = 1000000 <text_size+0xDC060 : f4240 >			  ## clock.c:654:39
 1e17bb2:    c3 0e             	r3 = r0 * r3			  ## clock.c:654:39
 1e17bb4:    6b 02             	[sp+24] = r3			  ## clock.c:658:37
 1e17bb6:    c3 ff 08 e7 e0 01 	r3 = 31516424 <boot_addr_tab+0xC : 1e0e708 >			  ## clock.c:658:37
 1e17bbc:    cf ff 0c e7 e0 01 	r15 = 31516428 <boot_addr_tab+0x10 : 1e0e70c >			  ## clock.c:658:37
 1e17bc2:    cc ff b8 30 00 00 	r12 = 12472 <hdl.30 : 30b8 >			  ## clock.c:658:37
 1e17bc8:    cd ff bc 30 00 00 	r13 = 12476 <hdl.31 : 30bc >			  ## clock.c:658:37
 1e17bce:    cb ff be 30 00 00 	r11 = 12478 <hdl.32 : 30be >			  ## clock.c:658:37
 1e17bd4:    12 24             	if (r2 == 0) goto 36 <update_code_end+0x80 : 1e17bfa >			  ## clock.c:658:37
 1e17bd6:    00 f9 00 d0       	r0 = b[r13 + 0] (u)			  ## clock.c:702:52
 1e17bda:    01 f9 00 c0       	r1 = b[r12 + 0] (u)			  ## clock.c:702:22
 1e17bde:    02 f9 00 b0       	r2 = b[r11 + 0] (u)			  ## clock.c:702:79
 1e17be2:    00 fa 00 03       	r0 = b[r0+r3] (u)			  ## clock.c:702:52
 1e17be6:    43 a0             	r3 = sp + 4			  ## clock.c:702:52
 1e17be8:    a1 f6 00 31       	r1 = [r3+r1<<2]			  ## clock.c:702:22
 1e17bec:    02 fa 00 2f       	r2 = b[r2+r15] (u)			  ## clock.c:702:79
 1e17bf0:    c0 fe 00 01       	r0 = r1 / r0 (u)			  ## clock.c:702:50
 1e17bf4:    c0 fe 20 20       	r2 = r0 / r2 (u)			  ## clock.c:702:77
 1e17bf8:    43 18             	goto 134 <update_code_end+0x106 : 1e17c80 >
 1e17bfa:    c4 ff b4 30 00 00 	r4 = 12468 <hdl.29 : 30b4 >
 1e17c00:    ca ff 7c 30 00 00 	r10 = 12412 <hdl.5 : 307c >
 1e17c06:    0e 70             	r14 = 0
 1e17c08:    03 18             	goto 6 <update_code_end+0x96 : 1e17c10 >
 1e17c0a:    42 a0             	r2 = sp + 4
 1e17c0c:    a5 f6 00 2e       	r5 = [r2+r14<<2]
 1e17c10:    07 70             	r7 = 0
 1e17c12:    0d 02             	[sp] = r5
 1e17c14:    02 fa 00 73       	r2 = b[r7+r3] (u)
 1e17c18:    c0 fe 20 35       	r3 = r5 / r2 (u)
 1e17c1c:    06 70             	r6 = 0
 1e17c1e:    05 70             	r5 = 0
 1e17c20:    02 fa 00 5f       	r2 = b[r5+r15] (u)			  ## clock.c:668:65
 1e17c24:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## clock.c:668:63
 1e17c28:    68 b4             	r8 = r2 - r1			  ## clock.c:670:43
 1e17c2a:    08 e0 10 b0       	ifs (r8 < 0) goto 32 <update_code_end+0xD4 : 1e17c4e >
 1e17c2e:    08 e0 1d 00       	if (r8 == 0) goto 58 <update_code_end+0xF2 : 1e17c6c >			  ## clock.c:677:25
 1e17c32:    09 f6 00 40       	r9 = [r4 + 0]			  ## clock.c:689:33
 1e17c36:    89 f2 0a 90       	if (r9 <= r8) goto 20 <update_code_end+0xD4 : 1e17c4e >			  ## clock.c:689:33
 1e17c3a:    18 f6 00 40       	[r4 + 0] = r8			  ## clock.c:690:42
 1e17c3e:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:691:40
 1e17c42:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:692:40
 1e17c46:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:693:40
 1e17c4a:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:695:48
 1e17c4e:    15 80             	r5 += 1			  ## clock.c:667:56
 1e17c50:    16 80             	r6 += 1			  ## clock.c:667:31
 1e17c52:    45 e0 e5 3f       	if (r5 < 4) goto -54 <update_code_end+0xA6 : 1e17c20 >			  ## clock.c:667:31
 1e17c56:    17 80             	r7 += 1			  ## clock.c:666:52
 1e17c58:    05 02             	r5 = [sp]			  ## clock.c:666:52
 1e17c5a:    c3 ff 08 e7 e0 01 	r3 = 31516424 <boot_addr_tab+0xC : 1e0e708 >			  ## clock.c:666:52
 1e17c60:    47 e0 d8 3f       	if (r7 < 4) goto -80 <update_code_end+0x9A : 1e17c14 >			  ## clock.c:666:52
 1e17c64:    1e 80             	r14 += 1			  ## clock.c:665:51
 1e17c66:    5e e0 d0 9f       	if (r14 <= 5) goto -96 <update_code_end+0x90 : 1e17c0a >			  ## clock.c:665:51
 1e17c6a:    0a 18             	goto 20 <update_code_end+0x106 : 1e17c80 >			  ## clock.c:665:51
 1e17c6c:    c0 f4 00 49       	[r4 + 0] = 0			  ## clock.c:679:42
 1e17c70:    1e f9 00 c0       	b[r12 + 0] = r14			  ## clock.c:680:40
 1e17c74:    17 f9 00 d0       	b[r13 + 0] = r7			  ## clock.c:681:40
 1e17c78:    16 f9 00 b0       	b[r11 + 0] = r6			  ## clock.c:682:40
 1e17c7c:    10 f9 00 a0       	b[r10 + 0] = r0			  ## clock.c:683:48
 1e17c80:    20 08             	r0 = r2			  ## clock.c:708:1
 1e17c82:    0e 0a             	sp += 28			  ## clock.c:708:1
 1e17c84:    5f 01             	{pc, r15-r4} = [sp++]			  ## clock.c:708:1


__hw_hsb_upper_bound:
 1e17c86:    34 00             	[--sp] = rets			  ## clock.c:820:0
 1e17c88:    c1 ff b4 30 00 00 	r1 = 12468 <hdl.29 : 30b4 >			  ## clock.c:821:22
 1e17c8e:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:821:22
 1e17c92:    01 08             	r1 = r0			  ## clock.c:821:22
 1e17c94:    00 7c             	r0 = 192			  ## clock.c:832:5
 1e17c96:    02 70             	r2 = 0			  ## clock.c:832:5
 1e17c98:    70 17             	call -288 <update_code_end : 1e17b7a >			  ## clock.c:832:5
 1e17c9a:    c0 ff 7c 30 00 00 	r0 = 12412 <hdl.5 : 307c >			  ## clock.c:835:45
 1e17ca0:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:835:12
 1e17ca2:    01 70             	r1 = 0			  ## clock.c:835:12
 1e17ca4:    12 70             	r2 = 1			  ## clock.c:835:12
 1e17ca6:    88 01             	{rets} = [sp++]			  ## clock.c:835:12
 1e17ca8:    68 1f             	goto -304 <update_code_end : 1e17b7a >			  ## clock.c:835:12


voltage_by_freq_pre:
 1e17caa:    c2 ff 90 0f 00 00 	r2 = 3984 <sys_clock_limit+0x4 : f90 >			  ## clock.c:1119:0
 1e17cb0:    01 70             	r1 = 0			  ## clock.c:1119:0
 1e17cb2:    43 f6 14 20       	r3 = [r2 ++= 20]			  ## clock.c:1130:26
 1e17cb6:    03 f2 03 20       	if (r3 >= r0) goto 6 <voltage_by_freq_pre+0x16 : 1e17cc0 >			  ## clock.c:1130:26
 1e17cba:    11 80             	r1 += 1			  ## clock.c:1129:33
 1e17cbc:    61 e0 f9 bf       	ifs (r1 < 6) goto -14 <voltage_by_freq_pre+0x8 : 1e17cb2 >
 1e17cc0:    50 70             	r0 = 5			  ## clock.c:1135:21
 1e17cc2:    61 e0 01 00       	if (r1 == 6) goto 2 <voltage_by_freq_pre+0x1E : 1e17cc8 >
 1e17cc6:    10 08             	r0 = r1			  ## clock.c:1135:21
 1e17cc8:    c1 ff a4 30 00 00 	r1 = 12452 <hdl.23 : 30a4 >			  ## clock.c:1135:19
 1e17cce:    08 62             	b[r1 + 0] = r0			  ## clock.c:1135:19
 1e17cd0:    20 00             	rts			  ## clock.c:1136:1


pll_clock_by_all_limit:
 1e17cd2:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1082:0
 1e17cd4:    c1 ff a4 30 00 00 	r1 = 12452 <hdl.23 : 30a4 >			  ## clock.c:1083:49
 1e17cda:    02 62             	r2 = b[r1 + 0] (u)			  ## clock.c:1083:25
 1e17cdc:    01 fe 14 29       	r1 = r2 * 20			  ## clock.c:1083:25
 1e17ce0:    c3 ff 8c 0f 00 00 	r3 = 3980 <sys_clock_limit : f8c >			  ## clock.c:1083:25
 1e17ce6:    81 f6 00 13       	r1 = [r1+r3]			  ## clock.c:1083:25
 1e17cea:    04 08             	r4 = r0
 1e17cec:    f5 07             	r5 = -1
 1e17cee:    41 f2 14 30       	if (r1 < r4) goto 40 <pll_clock_by_all_limit+0x48 : 1e17d1a >
 1e17cf2:    40 71             	r0 = 20			  ## clock.c:1085:25
 1e17cf4:    80 fe 00 32       	r3 += r2 * r0			  ## clock.c:1085:25
 1e17cf8:    10 46             	r0 = [r3 + 4]			  ## clock.c:1085:25
 1e17cfa:    40 f2 0e 30       	if (r0 < r4) goto 28 <pll_clock_by_all_limit+0x48 : 1e17d1a >
 1e17cfe:    c0 fe 40 01       	r0 = r1 / r4 (u)			  ## clock.c:1098:35
 1e17d02:    06 04             	r6 = r0.b0 (u)			  ## clock.c:1100:9
 1e17d04:    26 e0 08 30       	if (r6 < 2) goto 16 <pll_clock_by_all_limit+0x46 : 1e17d18 >
 1e17d08:    35 0f             	r5 = r6 * r4			  ## clock.c:1103:36
 1e17d0a:    50 08             	r0 = r5			  ## clock.c:1106:32
 1e17d0c:    bc 17             	call -136 <__hw_hsb_upper_bound : 1e17c86 >			  ## clock.c:1106:32
 1e17d0e:    05 f2 04 00       	if (r5 == r0) goto 8 <pll_clock_by_all_limit+0x48 : 1e17d1a >
 1e17d12:    f6 8f             	r6 += -1			  ## clock.c:1101:37
 1e17d14:    26 e0 f8 af       	ifs (r6 >= 2) goto -16 <pll_clock_by_all_limit+0x36 : 1e17d08 >
 1e17d18:    45 08             	r5 = r4
 1e17d1a:    50 08             	r0 = r5			  ## clock.c:1116:1
 1e17d1c:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1116:1


__hw_pll_run_pre:
 1e17d1e:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:839:0
 1e17d20:    d4 0b             	sp += -88			  ## clock.c:839:0
 1e17d22:    c1 ff b4 30 00 00 	r1 = 12468 <hdl.29 : 30b4 >			  ## clock.c:842:22
 1e17d28:    c0 f4 ff 1f       	[r1 + 0] = 4294967295			  ## clock.c:842:22
 1e17d2c:    01 08             	r1 = r0			  ## clock.c:842:22
 1e17d2e:    00 7c             	r0 = 192			  ## clock.c:852:5
 1e17d30:    02 70             	r2 = 0			  ## clock.c:852:5
 1e17d32:    06 70             	r6 = 0			  ## clock.c:852:5
 1e17d34:    22 17             	call -444 <update_code_end : 1e17b7a >			  ## clock.c:852:5
 1e17d36:    c0 ff b8 30 00 00 	r0 = 12472 <hdl.30 : 30b8 >			  ## clock.c:854:37
 1e17d3c:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:854:37
 1e17d3e:    c1 ff 98 30 00 00 	r1 = 12440 <hdl.0 : 3098 >			  ## clock.c:854:27
 1e17d44:    c2 ff bc 30 00 00 	r2 = 12476 <hdl.31 : 30bc >			  ## clock.c:856:35
 1e17d4a:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:856:35
 1e17d4c:    08 62             	b[r1 + 0] = r0			  ## clock.c:854:27
 1e17d4e:    c0 ff be 30 00 00 	r0 = 12478 <hdl.32 : 30be >			  ## clock.c:856:56
 1e17d54:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:856:56
 1e17d56:    91 c0             	r1 = r2 << 2			  ## clock.c:856:42
 1e17d58:    c2 ff 7c 30 00 00 	r2 = 12412 <hdl.5 : 307c >			  ## clock.c:858:34
 1e17d5e:    04 64             	r4 = b[r2 + 0] (u)			  ## clock.c:858:34
 1e17d60:    10 09             	r0 += r1			  ## clock.c:856:46
 1e17d62:    c1 ff 9c 30 00 00 	r1 = 12444 <hdl.1 : 309c >			  ## clock.c:856:25
 1e17d68:    08 62             	b[r1 + 0] = r0			  ## clock.c:856:25
 1e17d6a:    05 a0             	r5 = sp + 0			  ## clock.c:856:25
 1e17d6c:    01 70             	r1 = 0			  ## clock.c:613:9
 1e17d6e:    42 74             	r2 = 68			  ## clock.c:613:9
 1e17d70:    50 08             	r0 = r5			  ## clock.c:613:9
 1e17d72:    97 f3 bd 78       	call 3076474 <memset : 106ef0 >			  ## clock.c:613:9
 1e17d76:    c0 ff 80 84 1e 00 	r0 = 2000000 <uECC_vli_cmp_unsafe+0xE1484 : 1e8480 >			  ## clock.c:616:36
 1e17d7c:    20 0e             	r0 = r4 * r0			  ## clock.c:616:36
 1e17d7e:    91 70             	r1 = 9			  ## clock.c:616:36
 1e17d80:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:616:36
 1e17d84:    19 02             	[sp+4] = r1			  ## clock.c:616:34
 1e17d86:    71 70             	r1 = 7			  ## clock.c:617:36
 1e17d88:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:617:36
 1e17d8c:    29 02             	[sp+8] = r1			  ## clock.c:617:34
 1e17d8e:    c1 ff 80 1a 06 00 	r1 = 400000 <text_size+0x498A0 : 61a80 >			  ## clock.c:618:36
 1e17d94:    61 0e             	r1 = r4 * r1			  ## clock.c:618:36
 1e17d96:    39 02             	[sp+12] = r1			  ## clock.c:618:34
 1e17d98:    31 70             	r1 = 3			  ## clock.c:619:36
 1e17d9a:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:619:36
 1e17d9e:    49 02             	[sp+16] = r1			  ## clock.c:619:34
 1e17da0:    c1 ff 40 42 0f 00 	r1 = 1000000 <text_size+0xDC060 : f4240 >			  ## clock.c:616:36
 1e17da6:    61 0e             	r1 = r4 * r1			  ## clock.c:616:36
 1e17da8:    59 02             	[sp+20] = r1			  ## clock.c:620:34
 1e17daa:    21 71             	r1 = 18			  ## clock.c:622:71
 1e17dac:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:622:71
 1e17db0:    19 03             	[sp+68] = r1			  ## clock.c:622:34
 1e17db2:    e1 70             	r1 = 14			  ## clock.c:623:71
 1e17db4:    c0 fe 10 10       	r1 = r0 / r1 (u)			  ## clock.c:623:71
 1e17db8:    29 03             	[sp+72] = r1			  ## clock.c:623:34
 1e17dba:    c1 ff 40 0d 03 00 	r1 = 200000 <text_size+0x18B60 : 30d40 >			  ## clock.c:624:71
 1e17dc0:    61 0e             	r1 = r4 * r1			  ## clock.c:624:71
 1e17dc2:    39 03             	[sp+76] = r1			  ## clock.c:624:34
 1e17dc4:    61 70             	r1 = 6			  ## clock.c:625:71
 1e17dc6:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:625:71
 1e17dca:    48 03             	[sp+80] = r0			  ## clock.c:625:34
 1e17dcc:    c0 ff 20 a1 07 00 	r0 = 500000 <text_size+0x61F40 : 7a120 >			  ## clock.c:626:71
 1e17dd2:    20 0e             	r0 = r4 * r0			  ## clock.c:626:71
 1e17dd4:    58 03             	[sp+84] = r0			  ## clock.c:626:34
 1e17dd6:    c0 ff 00 d8 b8 05 	r0 = 96000000 <uECC_vli_cmp_unsafe+0x1A86804 : 1b8d800 >			  ## clock.c:626:34
 1e17ddc:    01 70             	r1 = 0			  ## clock.c:626:34
 1e17dde:    42 f6 04 50       	r2 = [r5 ++= 4]			  ## clock.c:629:32
 1e17de2:    02 f2 05 00       	if (r2 == r0) goto 10 <__hw_pll_run_pre+0xD2 : 1e17df0 >			  ## clock.c:629:32
 1e17de6:    11 80             	r1 += 1			  ## clock.c:628:50
 1e17de8:    16 80             	r6 += 1			  ## clock.c:628:23
 1e17dea:    71 e1 f8 3f       	if (r1 < 23) goto -16 <__hw_pll_run_pre+0xC0 : 1e17dde >			  ## clock.c:628:23
 1e17dee:    f6 7f             	r6 = 255
 1e17df0:    c0 ff c0 30 00 00 	r0 = 12480 <hdl.3 : 30c0 >
 1e17df6:    0e 60             	b[r0 + 0] = r6
 1e17df8:    01 70             	r1 = 0			  ## clock.c:862:12
 1e17dfa:    12 70             	r2 = 1			  ## clock.c:862:12
 1e17dfc:    40 08             	r0 = r4			  ## clock.c:862:12
 1e17dfe:    bd 16             	call -646 <update_code_end : 1e17b7a >			  ## clock.c:862:12
 1e17e00:    2c 0a             	sp += 88			  ## clock.c:862:12
 1e17e02:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:862:5


__hw_clk_limit:
 1e17e04:    74 01             	[--sp] = {rets, r4}			  ## clock.c:404:0
 1e17e06:    03 70             	r3 = 0			  ## clock.c:404:0
 1e17e08:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:408:19
 1e17e0a:    14 80             	r4 += 1			  ## clock.c:409:13
 1e17e0c:    c0 fe 40 40       	r4 = r0 / r4 (u)			  ## clock.c:409:13
 1e17e10:    14 f2 04 90       	if (r4 <= r1) goto 8 <__hw_clk_limit+0x18 : 1e17e1c >			  ## clock.c:409:13
 1e17e14:    13 80             	r3 += 1			  ## clock.c:408:38
 1e17e16:    c4 04             	r4 = r3.b0 (u)			  ## clock.c:408:38
 1e17e18:    24 f2 f6 9f       	if (r4 <= r2) goto -20 <__hw_clk_limit+0x4 : 1e17e08 >			  ## clock.c:408:38
 1e17e1c:    c0 04             	r0 = r3.b0 (u)			  ## clock.c:414:5
 1e17e1e:    54 01             	{pc, r4} = [sp++]			  ## clock.c:414:5


clock_all_limit_pre:
 1e17e20:    77 01             	[--sp] = {rets, r7-r4}			  ## clock.c:458:0
 1e17e22:    15 08             	r5 = r1			  ## clock.c:458:0
 1e17e24:    04 08             	r4 = r0			  ## clock.c:458:0
 1e17e26:    02 3a             	if (r5 != 0) goto 4 <clock_all_limit_pre+0xC : 1e17e2c >			  ## clock.c:458:0
 1e17e28:    8f f3 6a 5a       	call 2012372 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
 1e17e2c:    c0 ff a4 30 00 00 	r0 = 12452 <hdl.23 : 30a4 >			  ## clock.c:419:62
 1e17e32:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:419:38
 1e17e34:    41 71             	r1 = 20			  ## clock.c:419:38
 1e17e36:    c6 ff 8c 0f 00 00 	r6 = 3980 <sys_clock_limit : f8c >			  ## clock.c:445:38
 1e17e3c:    80 fe 10 60       	r6 += r0 * r1			  ## clock.c:419:38
 1e17e40:    01 4c             	r1 = [r6 + 0]			  ## clock.c:419:38
 1e17e42:    72 70             	r2 = 7			  ## clock.c:419:12
 1e17e44:    40 08             	r0 = r4			  ## clock.c:419:12
 1e17e46:    de 17             	call -68 <__hw_clk_limit : 1e17e04 >			  ## clock.c:419:12
 1e17e48:    10 80             	r0 += 1			  ## clock.c:465:23
 1e17e4a:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:465:23
 1e17e4e:    c0 ff 40 42 0f 00 	r0 = 1000000 <text_size+0xDC060 : f4240 >			  ## clock.c:450:35
 1e17e54:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:450:35
 1e17e58:    00 fe 1e 09       	r0 = r0 * 30			  ## clock.c:450:22
 1e17e5c:    01 fb e8 03       	r1 = 1000 <BTCTLER_LE_RAM_TOTAL+0xA : 3e8 >			  ## clock.c:450:47
 1e17e60:    c0 fe 10 00       	r0 = r0 / r1 (u)			  ## clock.c:450:47
 1e17e64:    c2 ff 8c 30 00 00 	r2 = 12428 <hdl.19 : 308c >			  ## clock.c:467:24
 1e17e6a:    31 4c             	r1 = [r6 + 12]			  ## clock.c:445:38
 1e17e6c:    08 64             	b[r2 + 0] = r0			  ## clock.c:467:24
 1e17e6e:    c0 ff a8 30 00 00 	r0 = 12456 <hdl.13 : 30a8 >			  ## clock.c:465:21
 1e17e74:    0c 40             	[r0 + 0] = r4			  ## clock.c:465:21
 1e17e76:    f2 7f             	r2 = 255			  ## clock.c:445:12
 1e17e78:    40 08             	r0 = r4			  ## clock.c:445:12
 1e17e7a:    c4 17             	call -120 <__hw_clk_limit : 1e17e04 >			  ## clock.c:445:12
 1e17e7c:    c1 ff 88 30 00 00 	r1 = 12424 <hdl.18 : 3088 >			  ## clock.c:470:21
 1e17e82:    08 62             	b[r1 + 0] = r0			  ## clock.c:470:21
 1e17e84:    c0 fe 50 14       	r1 = r4 / r5 (u)			  ## clock.c:484:27
 1e17e88:    10 fc ff 00       	r0 = r1 + 255			  ## clock.c:486:13
 1e17e8c:    05 70             	r5 = 0			  ## clock.c:485:9
 1e17e8e:    60 ff ff 19 01 00 	if ((r1 & 255) == 0) goto 2 <clock_all_limit_pre+0x76 : 1e17e96 >
 1e17e94:    05 08             	r5 = r0			  ## clock.c:485:9
 1e17e96:    11 4c             	r1 = [r6 + 4]			  ## clock.c:424:38
 1e17e98:    47 05             	r7 = r5.b0 (u)			  ## clock.c:485:9
 1e17e9a:    40 08             	r0 = r4			  ## clock.c:424:12
 1e17e9c:    b3 17             	call -154 <__hw_clk_limit : 1e17e04 >			  ## clock.c:424:12
 1e17e9e:    07 f2 01 80       	if (r7 > r0) goto 2 <clock_all_limit_pre+0x84 : 1e17ea4 >			  ## clock.c:424:12
 1e17ea2:    05 08             	r5 = r0			  ## clock.c:488:11
 1e17ea4:    40 05             	r0 = r5.b0 (u)
 1e17ea6:    c1 ff 90 30 00 00 	r1 = 12432 <hdl.14 : 3090 >			  ## clock.c:489:21
 1e17eac:    08 52             	h[r1 + 0] = r0			  ## clock.c:489:21
 1e17eae:    10 80             	r0 += 1			  ## clock.c:490:23
 1e17eb0:    21 4c             	r1 = [r6 + 8]			  ## clock.c:429:38
 1e17eb2:    c0 fe 00 44       	r4 = r4 / r0 (u)			  ## clock.c:490:23
 1e17eb6:    c0 ff ac 30 00 00 	r0 = 12460 <hdl.15 : 30ac >			  ## clock.c:490:21
 1e17ebc:    0c 40             	[r0 + 0] = r4			  ## clock.c:490:21
 1e17ebe:    72 70             	r2 = 7			  ## clock.c:429:12
 1e17ec0:    40 08             	r0 = r4			  ## clock.c:429:12
 1e17ec2:    a0 17             	call -192 <__hw_clk_limit : 1e17e04 >			  ## clock.c:429:12
 1e17ec4:    c1 ff 94 30 00 00 	r1 = 12436 <hdl.16 : 3094 >			  ## clock.c:494:21
 1e17eca:    08 62             	b[r1 + 0] = r0			  ## clock.c:494:21
 1e17ecc:    10 80             	r0 += 1			  ## clock.c:495:23
 1e17ece:    c0 fe 00 04       	r0 = r4 / r0 (u)			  ## clock.c:495:23
 1e17ed2:    c1 ff b0 30 00 00 	r1 = 12464 <hdl.17 : 30b0 >			  ## clock.c:495:21
 1e17ed8:    08 42             	[r1 + 0] = r0			  ## clock.c:495:21
 1e17eda:    57 01             	{pc, r7-r4} = [sp++]			  ## clock.c:501:1


voltage_by_freq_post:
 1e17edc:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:1292:0
 1e17ede:    c0 ff a0 30 00 00 	r0 = 12448 <hdl.24 : 30a0 >			  ## clock.c:1292:0
 1e17ee4:    02 60             	r2 = b[r0 + 0] (u)			  ## clock.c:1292:0
 1e17ee6:    c0 ff 96 18 1a 00 	r0 = 1710230 <uECC_vli_cmp_unsafe+0x9A89A : 1a1896 >			  ## clock.c:1292:0
 1e17eec:    51 60             	r1 = b[r0 + 5] (u)			  ## clock.c:1292:0
 1e17eee:    31 fd 0f 19       	r1 = r1 & 4294967280			  ## clock.c:1292:0
 1e17ef2:    21 24             	if (r2 == 0) goto 66 <voltage_by_freq_post+0x5A : 1e17f36 >			  ## clock.c:1293:9
 1e17ef4:    c2 ff a4 30 00 00 	r2 = 12452 <hdl.23 : 30a4 >			  ## clock.c:1294:9
 1e17efa:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1294:9
 1e17efc:    03 fe 03 39       	r3 = r3 * 3			  ## clock.c:1294:9
 1e17f00:    c4 ff 68 0f 00 00 	r4 = 3944 <update_data_start : f68 >			  ## clock.c:1295:9
 1e17f06:    03 fa 00 34       	r3 = b[r3+r4] (u)			  ## clock.c:1294:9
 1e17f0a:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1294:9
 1e17f0e:    51 b6             	r1 |= r3			  ## clock.c:1294:9
 1e17f10:    59 60             	b[r0 + 5] = r1			  ## clock.c:1294:9
 1e17f12:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1295:9
 1e17f14:    03 64             	r3 = b[r2 + 0] (u)			  ## clock.c:1295:9
 1e17f16:    35 70             	r5 = 3			  ## clock.c:1295:9
 1e17f18:    46 08             	r6 = r4			  ## clock.c:1295:9
 1e17f1a:    80 fe 50 63       	r6 += r3 * r5			  ## clock.c:1295:9
 1e17f1e:    13 6c             	r3 = b[r6 + 1] (u)			  ## clock.c:1295:9
 1e17f20:    23 fd 0f 39       	r3 = r3 & 15			  ## clock.c:1295:9
 1e17f24:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1295:9
 1e17f28:    51 b6             	r1 |= r3			  ## clock.c:1295:9
 1e17f2a:    69 60             	b[r0 + 6] = r1			  ## clock.c:1295:9
 1e17f2c:    01 64             	r1 = b[r2 + 0] (u)			  ## clock.c:1296:9
 1e17f2e:    80 fe 50 41       	r4 += r1 * r5			  ## clock.c:1296:9
 1e17f32:    21 98             	r1 = r4 + 2			  ## clock.c:1296:9
 1e17f34:    08 18             	goto 16 <voltage_by_freq_post+0x6A : 1e17f46 >			  ## clock.c:1296:9
 1e17f36:    59 60             	b[r0 + 5] = r1			  ## clock.c:1298:9
 1e17f38:    61 60             	r1 = b[r0 + 6] (u)			  ## clock.c:1299:9
 1e17f3a:    21 fd f0 19       	r1 = r1 & 240			  ## clock.c:1299:9
 1e17f3e:    69 60             	b[r0 + 6] = r1			  ## clock.c:1299:9
 1e17f40:    c1 ff 7a 0f 00 00 	r1 = 3962 <sysvdd_vdc13_table : f7a >			  ## clock.c:1299:9
 1e17f46:    02 60             	r2 = b[r0 + 0] (u)
 1e17f48:    01 62             	r1 = b[r1 + 0] (u)
 1e17f4a:    22 fd f8 29       	r2 = r2 & 248
 1e17f4e:    21 fd 07 19       	r1 = r1 & 7
 1e17f52:    51 b4             	r1 |= r2
 1e17f54:    09 60             	b[r0 + 0] = r1
 1e17f56:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:1302:1


__hw_pll_all_oe:
 1e17f58:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:751:0
 1e17f5a:    c0 ff 0c 47 1e 00 	r0 = 1984268 <uECC_vli_cmp_unsafe+0xDD710 : 1e470c >			  ## clock.c:751:0
 1e17f60:    00 f4 02 0a       	[r0 + 0] |= 512			  ## clock.c:752:5
 1e17f64:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:753:5
 1e17f68:    05 fc 00 b9       	r5 = r0 + -18176
 1e17f6c:    11 4a             	r1 = [r5 + 4]			  ## clock.c:761:13
 1e17f6e:    21 fd 07 19       	r1 = r1 & 7			  ## clock.c:761:13
 1e17f72:    12 fc ff ff       	r2 = r1 + -1			  ## clock.c:761:5
 1e17f76:    01 70             	r1 = 0			  ## clock.c:761:5
 1e17f78:    32 e0 04 80       	if (r2 > 3) goto 8 <.GJTIE170_0_0_+0x2 : 1e17f84 >			  ## clock.c:761:5
 1e17f7c:    a2 00             	tbb [r2]


.GJTIS170_0_0_:
 1e17f7e:    02     < 2 : 0x2 >
 1e17f7f:    05     < 5 : 0x5 >
 1e17f80:    09     < 9 : 0x9 >
 1e17f81:    0c     < 12 : 0xC >
 1e17f82:    11 70             	r1 = 1
 1e17f84:    04 70             	r4 = 0
 1e17f86:    08 18             	goto 16 <.GJTIE170_0_0_+0x16 : 1e17f98 >
 1e17f88:    12 70             	r2 = 1
 1e17f8a:    04 70             	r4 = 0
 1e17f8c:    03 70             	r3 = 0
 1e17f8e:    06 18             	goto 12 <.GJTIE170_0_0_+0x1A : 1e17f9c >
 1e17f90:    13 70             	r3 = 1
 1e17f92:    04 70             	r4 = 0
 1e17f94:    02 18             	goto 4 <.GJTIE170_0_0_+0x18 : 1e17f9a >
 1e17f96:    14 70             	r4 = 1
 1e17f98:    03 70             	r3 = 0
 1e17f9a:    02 70             	r2 = 0
 1e17f9c:    05 4a             	r5 = [r5 + 0]			  ## clock.c:781:13
 1e17f9e:    85 fd 20 55       	r5 = uextra(r5, p:4, l:5)			  ## clock.c:781:13
 1e17fa2:    f5 8f             	r5 += -1			  ## clock.c:781:5
 1e17fa4:    35 e1 12 80       	if (r5 > 19) goto 36 <.GJTIE170_1_1_+0xE : 1e17fcc >			  ## clock.c:781:5
 1e17fa8:    a5 00             	tbb [r5]


.GJTIS170_1_1_:
 1e17faa:    0a     < 10 : 0xA >
 1e17fab:    0c     < 12 : 0xC >
 1e17fac:    0e     < 14 : 0xE >
 1e17fad:    10     < 16 : 0x10 >
 1e17fae:    11     < 17 : 0x11 >
 1e17faf:    11     < 17 : 0x11 >
 1e17fb0:    11     < 17 : 0x11 >
 1e17fb1:    11     < 17 : 0x11 >
 1e17fb2:    11     < 17 : 0x11 >
 1e17fb3:    11     < 17 : 0x11 >
 1e17fb4:    11     < 17 : 0x11 >
 1e17fb5:    11     < 17 : 0x11 >
 1e17fb6:    11     < 17 : 0x11 >
 1e17fb7:    11     < 17 : 0x11 >
 1e17fb8:    11     < 17 : 0x11 >
 1e17fb9:    11     < 17 : 0x11 >
 1e17fba:    0a     < 10 : 0xA >
 1e17fbb:    0c     < 12 : 0xC >
 1e17fbc:    0e     < 14 : 0xE >
 1e17fbd:    10     < 16 : 0x10 >
 1e17fbe:    11 70             	r1 = 1
 1e17fc0:    05 18             	goto 10 <.GJTIE170_1_1_+0xE : 1e17fcc >
 1e17fc2:    12 70             	r2 = 1
 1e17fc4:    03 18             	goto 6 <.GJTIE170_1_1_+0xE : 1e17fcc >
 1e17fc6:    13 70             	r3 = 1
 1e17fc8:    01 18             	goto 2 <.GJTIE170_1_1_+0xE : 1e17fcc >
 1e17fca:    14 70             	r4 = 1
 1e17fcc:    05 40             	r5 = [r0 + 0]			  ## clock.c:806:5
 1e17fce:    f5 b0             	r5 &= 4294967293			  ## clock.c:806:5
 1e17fd0:    c1 fd 08 54       	r5 <= insert(r4, p:1, l:1)			  ## clock.c:806:5
 1e17fd4:    0d 40             	[r0 + 0] = r5			  ## clock.c:806:5
 1e17fd6:    04 40             	r4 = [r0 + 0]			  ## clock.c:807:5
 1e17fd8:    74 b1             	r4 &= 4294967291			  ## clock.c:807:5
 1e17fda:    c1 fd 10 43       	r4 <= insert(r3, p:2, l:1)			  ## clock.c:807:5
 1e17fde:    0c 40             	[r0 + 0] = r4			  ## clock.c:807:5
 1e17fe0:    03 40             	r3 = [r0 + 0]			  ## clock.c:808:5
 1e17fe2:    f3 b1             	r3 &= 4294967287			  ## clock.c:808:5
 1e17fe4:    c1 fd 18 32       	r3 <= insert(r2, p:3, l:1)			  ## clock.c:808:5
 1e17fe8:    0b 40             	[r0 + 0] = r3			  ## clock.c:808:5
 1e17fea:    02 40             	r2 = [r0 + 0]			  ## clock.c:809:5
 1e17fec:    72 b2             	r2 &= 4294967279			  ## clock.c:809:5
 1e17fee:    c1 fd 20 21       	r2 <= insert(r1, p:4, l:1)			  ## clock.c:809:5
 1e17ff2:    0a 40             	[r0 + 0] = r2			  ## clock.c:809:5
 1e17ff4:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:810:1


clock_all_limit_post:
 1e17ff6:    34 00             	[--sp] = rets			  ## clock.c:599:0
 1e17ff8:    c0 ff 8c 30 00 00 	r0 = 12428 <hdl.19 : 308c >			  ## clock.c:603:51
 1e17ffe:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:603:9
 1e18000:    c0 ff 88 30 00 00 	r0 = 12424 <hdl.18 : 3088 >			  ## clock.c:603:34
 1e18006:    00 60             	r0 = b[r0 + 0] (u)			  ## clock.c:603:9
 1e18008:    8f f3 84 5d       	call 2013960 <__hw_spi_clk_div : 3b14 >			  ## clock.c:603:9
 1e1800c:    c0 ff 08 00 1e 00 	r0 = 1966088 <uECC_vli_cmp_unsafe+0xD900C : 1e0008 >			  ## clock.c:603:9
 1e18012:    01 40             	r1 = [r0 + 0]			  ## clock.c:604:9
 1e18014:    c2 ff 90 30 00 00 	r2 = 12432 <hdl.14 : 3090 >			  ## clock.c:604:9
 1e1801a:    02 54             	r2 = h[r2 + 0] (u)			  ## clock.c:604:9
 1e1801c:    c8 fd 00 12       	r1 <= insert(r2, p:0, l:8)			  ## clock.c:604:9
 1e18020:    09 40             	[r0 + 0] = r1			  ## clock.c:604:9
 1e18022:    01 40             	r1 = [r0 + 0]			  ## clock.c:605:9
 1e18024:    c2 ff 94 30 00 00 	r2 = 12436 <hdl.16 : 3094 >			  ## clock.c:605:9
 1e1802a:    02 64             	r2 = b[r2 + 0] (u)			  ## clock.c:605:9
 1e1802c:    31 fd 07 1a       	r1 = r1 & 4294965503			  ## clock.c:605:9
 1e18030:    22 fd 07 29       	r2 = r2 & 7			  ## clock.c:605:9
 1e18034:    c3 fd 40 12       	r1 <= insert(r2, p:8, l:3)			  ## clock.c:605:9
 1e18038:    09 40             	[r0 + 0] = r1			  ## clock.c:605:9
 1e1803a:    30 00             	pc = [sp++]			  ## clock.c:608:1


clk_set:
 1e1803c:    78 01             	[--sp] = {rets, r8-r4}			  ## clock.c:2294:0
 1e1803e:    c8 ff c4 30 00 00 	r8 = 12484 <clk_set.last_clk : 30c4 >			  ## clock.c:2294:0
 1e18044:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## clock.c:2294:0
 1e18048:    60 30             	if (r0 != 0) goto 192 <clk_set+0xCE : 1e1810a >			  ## clock.c:2294:0
 1e1804a:    c6 ff 58 e7 e0 01 	r6 = 31516504 <storage_device_end : 1e0e758 >			  ## clock.c:2294:0
 1e18050:    c7 ff 30 e7 e0 01 	r7 = 31516464 <clock_mcpwm : 1e0e730 >			  ## clock.c:2294:0
 1e18056:    67 f2 06 20       	if (r7 >= r6) goto 12 <clk_set+0x2A : 1e18066 >			  ## clock.c:2294:0
 1e1805a:    74 08             	r4 = r7			  ## clock.c:2294:0
 1e1805c:    40 f6 08 40       	r0 = [r4 ++= 8]			  ## clock.c:1540:12
 1e18060:    80 00             	call r0			  ## clock.c:1540:9
 1e18062:    64 f2 fb 3f       	if (r4 < r6) goto -10 <clk_set+0x20 : 1e1805c >
 1e18066:    c5 ff 84 30 00 00 	r5 = 12420 <hdl.2 : 3084 >
 1e1806c:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1543:17
 1e1806e:    43 20             	if (r0 == 0) goto 134 <clk_set+0xBA : 1e180f6 >			  ## clock.c:1543:17
 1e18070:    c0 ff 00 6c dc 02 	r0 = 48000000 <uECC_vli_cmp_unsafe+0xCBFC04 : dc6c00 >			  ## clock.c:1385:17
 1e18076:    07 16             	call -1010 <__hw_hsb_upper_bound : 1e17c86 >			  ## clock.c:1385:17
 1e18078:    04 08             	r4 = r0			  ## clock.c:1385:17
 1e1807a:    f4 ef 3c 00       	if (r4 == -1) goto 120 <clk_set+0xBA : 1e180f6 >
 1e1807e:    15 16             	call -982 <voltage_by_freq_pre : 1e17caa >			  ## clock.c:1391:5
 1e18080:    40 08             	r0 = r4			  ## clock.c:1395:27
 1e18082:    27 16             	call -946 <pll_clock_by_all_limit : 1e17cd2 >			  ## clock.c:1395:27
 1e18084:    08 4a             	[r5 + 0] = r0			  ## clock.c:1395:25
 1e18086:    f0 ef 36 00       	if (r0 == -1) goto 108 <clk_set+0xBA : 1e180f6 >			  ## clock.c:1395:25
 1e1808a:    49 16             	call -878 <__hw_pll_run_pre : 1e17d1e >			  ## clock.c:1403:27
 1e1808c:    08 4a             	[r5 + 0] = r0			  ## clock.c:1403:25
 1e1808e:    f0 ef 32 00       	if (r0 == -1) goto 100 <clk_set+0xBA : 1e180f6 >			  ## clock.c:1403:25
 1e18092:    41 08             	r1 = r4			  ## clock.c:1409:5
 1e18094:    c5 16             	call -630 <clock_all_limit_pre : 1e17e20 >			  ## clock.c:1409:5
 1e18096:    97 f3 81 76       	call 3075330 <local_irq_disable : 106d9c >			  ## clock.c:1411:5
 1e1809a:    08 00             	csync			  ## clock.c:1411:5
 1e1809c:    c4 ff 0c 00 1e 00 	r4 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >			  ## clock.c:1411:5
 1e180a2:    00 48             	r0 = [r4 + 0]			  ## clock.c:1413:5
 1e180a4:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1413:5
 1e180a8:    08 48             	[r4 + 0] = r0			  ## clock.c:1413:5
 1e180aa:    10 48             	r0 = [r4 + 4]			  ## clock.c:1421:5
 1e180ac:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1421:5
 1e180b0:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1421:5
 1e180b4:    18 48             	[r4 + 4] = r0			  ## clock.c:1421:5
 1e180b6:    08 00             	csync			  ## clock.c:1421:5
 1e180b8:    11 17             	call -478 <voltage_by_freq_post : 1e17edc >			  ## clock.c:1423:5
 1e180ba:    00 4a             	r0 = [r5 + 0]			  ## clock.c:980:17
 1e180bc:    f0 ef 11 00       	if (r0 == -1) goto 34 <clk_set+0xA6 : 1e180e2 >			  ## clock.c:980:17
 1e180c0:    10 48             	r0 = [r4 + 4]			  ## clock.c:984:5
 1e180c2:    c1 ff 98 30 00 00 	r1 = 12440 <hdl.0 : 3098 >			  ## clock.c:984:5
 1e180c8:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:984:5
 1e180ca:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:984:5
 1e180ce:    18 48             	[r4 + 4] = r0			  ## clock.c:984:5
 1e180d0:    10 48             	r0 = [r4 + 4]			  ## clock.c:985:5
 1e180d2:    c1 ff 9c 30 00 00 	r1 = 12444 <hdl.1 : 309c >			  ## clock.c:985:5
 1e180d8:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:985:5
 1e180da:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:985:5
 1e180de:    18 48             	[r4 + 4] = r0			  ## clock.c:985:5
 1e180e0:    3b 17             	call -394 <__hw_pll_all_oe : 1e17f58 >			  ## clock.c:987:5
 1e180e2:    89 17             	call -238 <clock_all_limit_post : 1e17ff6 >			  ## clock.c:1427:5
 1e180e4:    10 48             	r0 = [r4 + 4]			  ## clock.c:1429:5
 1e180e6:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1429:5
 1e180ea:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1429:5
 1e180ee:    18 48             	[r4 + 4] = r0			  ## clock.c:1429:5
 1e180f0:    08 00             	csync			  ## clock.c:1429:5
 1e180f2:    97 f3 51 76       	call 3075234 <local_irq_enable : 106d98 >			  ## clock.c:1431:5
 1e180f6:    67 f2 05 20       	if (r7 >= r6) goto 10 <clk_set+0xC8 : 1e18104 >
 1e180fa:    10 4e             	r0 = [r7 + 4]			  ## clock.c:1548:12
 1e180fc:    80 00             	call r0			  ## clock.c:1548:9
 1e180fe:    87 80             	r7 += 8			  ## clock.c:1547:5
 1e18100:    67 f2 fb 3f       	if (r7 < r6) goto -10 <clk_set+0xBE : 1e180fa >
 1e18104:    10 70             	r0 = 1
 1e18106:    10 f9 00 80       	b[r8 + 0] = r0
 1e1810a:    58 01             	{pc, r8-r4} = [sp++]


clk_voltage_init:
 1e1810c:    c0 ff a0 30 00 00 	r0 = 12448 <hdl.24 : 30a0 >			  ## clock.c:2443:0
 1e18112:    11 70             	r1 = 1			  ## clock.c:2443:0
 1e18114:    09 60             	b[r0 + 0] = r1			  ## clock.c:2443:0
 1e18116:    20 00             	rts			  ## clock.c:2451:1


clk_early_init:
 1e18118:    76 01             	[--sp] = {rets, r6-r4}			  ## clock.c:2380:0
 1e1811a:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## clock.c:1588:22
 1e18120:    00 40             	r0 = [r0 + 0]			  ## clock.c:1588:22
 1e18122:    00 d2             	r0 = r0 >> 8			  ## clock.c:1588:36
 1e18124:    71 90             	r1 = r0 + 7			  ## clock.c:1591:5
 1e18126:    83 fd 08 01       	r0 = uextra(r1, p:1, l:3)			  ## clock.c:1591:5
 1e1812a:    d9 fd 18 01       	r0 <= insert(r1, p:3, l:25)			  ## clock.c:1591:5
 1e1812e:    a4 fd 00 10       	r1 = sextra(r0, p:0, l:4)			  ## clock.c:1591:5
 1e18132:    01 e0 14 b0       	ifs (r1 < 0) goto 40 <clk_early_init+0x46 : 1e1815e >			  ## clock.c:1591:5
 1e18136:    20 fd 0f 09       	r0 = r0 & 15
 1e1813a:    11 70             	r1 = 1
 1e1813c:    f8 fd 00 01       	r0 = r1 << r0
 1e18140:    60 ff e1 09 0c 00 	if ((r0 & 225) == 0) goto 24 <clk_early_init+0x46 : 1e1815e >
 1e18146:    00 70             	r0 = 0
 1e18148:    c1 ff 8c 0f 00 00 	r1 = 3980 <sys_clock_limit : f8c >
 1e1814e:    c2 ff 80 f0 fa 02 	r2 = 50000000 <uECC_vli_cmp_unsafe+0xEA8084 : faf080 >
 1e18154:    43 b0             	r3 = r0 + r1			  ## clock.c:1624:47
 1e18156:    40 81             	r0 += 20			  ## clock.c:1623:26
 1e18158:    3a 46             	[r3 + 12] = r2			  ## clock.c:1624:47
 1e1815a:    80 e7 fb 1f       	if (r0 != 120) goto -10 <clk_early_init+0x3C : 1e18154 >			  ## clock.c:1624:47
 1e1815e:    c0 ff 78 30 00 00 	r0 = 12408 <hdl.27 : 3078 >			  ## clock.c:1635:30
 1e18164:    c0 f4 00 09       	[r0 + 0] = 0			  ## clock.c:1635:30
 1e18168:    c5 ff 0c 00 1e 00 	r5 = 1966092 <uECC_vli_cmp_unsafe+0xD9010 : 1e000c >
 1e1816e:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1003:9
 1e18170:    30 fd 0e 09       	r0 = r0 & 4294967281			  ## clock.c:1003:9
 1e18174:    08 4a             	[r5 + 0] = r0			  ## clock.c:1003:9
 1e18176:    c0 ff 80 30 00 00 	r0 = 12416 <hdl.11 : 3080 >			  ## clock.c:1003:9
 1e1817c:    11 70             	r1 = 1			  ## clock.c:1003:9
 1e1817e:    09 60             	b[r0 + 0] = r1			  ## clock.c:1003:9
 1e18180:    c0 ff 00 36 6e 01 	r0 = 24000000 <uECC_vli_cmp_unsafe+0x15DC604 : 16e3600 >			  ## clock.c:1308:16
 1e18186:    7f 15             	call -1282 <__hw_hsb_upper_bound : 1e17c86 >			  ## clock.c:1308:16
 1e18188:    04 08             	r4 = r0			  ## clock.c:1308:16
 1e1818a:    c6 ff 84 30 00 00 	r6 = 12420 <hdl.2 : 3084 >
 1e18190:    f4 ef 0c 00       	if (r4 == -1) goto 24 <clk_early_init+0x94 : 1e181ac >
 1e18194:    8a 15             	call -1260 <voltage_by_freq_pre : 1e17caa >			  ## clock.c:1314:5
 1e18196:    40 08             	r0 = r4			  ## clock.c:1318:27
 1e18198:    9c 15             	call -1224 <pll_clock_by_all_limit : 1e17cd2 >			  ## clock.c:1318:27
 1e1819a:    08 4c             	[r6 + 0] = r0			  ## clock.c:1318:25
 1e1819c:    f0 ef 06 00       	if (r0 == -1) goto 12 <clk_early_init+0x94 : 1e181ac >			  ## clock.c:1318:25
 1e181a0:    be 15             	call -1156 <__hw_pll_run_pre : 1e17d1e >			  ## clock.c:1326:27
 1e181a2:    08 4c             	[r6 + 0] = r0			  ## clock.c:1326:25
 1e181a4:    f0 ef 02 00       	if (r0 == -1) goto 4 <clk_early_init+0x94 : 1e181ac >			  ## clock.c:1326:25
 1e181a8:    41 08             	r1 = r4			  ## clock.c:1332:5
 1e181aa:    3a 16             	call -908 <clock_all_limit_pre : 1e17e20 >			  ## clock.c:1332:5
 1e181ac:    97 f3 f6 75       	call 3075052 <local_irq_disable : 106d9c >			  ## clock.c:1494:5
 1e181b0:    08 00             	csync			  ## clock.c:1494:5
 1e181b2:    00 4a             	r0 = [r5 + 0]			  ## clock.c:1496:5
 1e181b4:    30 fd 0c 09       	r0 = r0 & 4294967283			  ## clock.c:1496:5
 1e181b8:    08 4a             	[r5 + 0] = r0			  ## clock.c:1496:5
 1e181ba:    00 f4 01 59       	[r5 + 0] |= 1			  ## clock.c:352:5
 1e181be:    40 76             	r0 = 100			  ## clock.c:353:5
 1e181c0:    8f f3 c8 64       	call 2017680 <delay : 4b54 >			  ## clock.c:353:5
 1e181c4:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1501:5
 1e181c6:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1501:5
 1e181ca:    00 fd 03 0a       	r0 = r0 | 768			  ## clock.c:1501:5
 1e181ce:    18 4a             	[r5 + 4] = r0			  ## clock.c:1501:5
 1e181d0:    08 00             	csync			  ## clock.c:1501:5
 1e181d2:    84 16             	call -760 <voltage_by_freq_post : 1e17edc >			  ## clock.c:1503:5
 1e181d4:    54 fc f4 46       	r4 = r5 + 18164			  ## clock.c:1503:5
 1e181d8:    40 48             	r0 = [r4 + 16]			  ## clock.c:1351:9
 1e181da:    30 fd 60 09       	r0 = r0 & 4294967199			  ## clock.c:1351:9
 1e181de:    48 48             	[r4 + 16] = r0			  ## clock.c:1351:9
 1e181e0:    00 48             	r0 = [r4 + 0]			  ## clock.c:873:5
 1e181e2:    30 fd 18 09       	r0 = r0 & 4294967271			  ## clock.c:873:5
 1e181e6:    90 b1             	r0 |= 8			  ## clock.c:873:5
 1e181e8:    08 48             	[r4 + 0] = r0			  ## clock.c:873:5
 1e181ea:    00 48             	r0 = [r4 + 0]			  ## clock.c:874:5
 1e181ec:    30 fd e0 09       	r0 = r0 & 4294967071			  ## clock.c:874:5
 1e181f0:    00 fd a0 09       	r0 = r0 | 160			  ## clock.c:874:5
 1e181f4:    08 48             	[r4 + 0] = r0			  ## clock.c:874:5
 1e181f6:    00 48             	r0 = [r4 + 0]			  ## clock.c:875:5
 1e181f8:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:875:5
 1e181fc:    90 b4             	r0 |= 512			  ## clock.c:875:5
 1e181fe:    08 48             	[r4 + 0] = r0			  ## clock.c:875:5
 1e18200:    00 48             	r0 = [r4 + 0]			  ## clock.c:877:5
 1e18202:    70 ba             	r0 &= 4293918719			  ## clock.c:877:5
 1e18204:    08 48             	[r4 + 0] = r0			  ## clock.c:877:5
 1e18206:    00 48             	r0 = [r4 + 0]			  ## clock.c:878:5
 1e18208:    30 fd 60 02       	r0 = r0 & 4294852607			  ## clock.c:878:5
 1e1820c:    10 b8             	r0 |= 65536			  ## clock.c:878:5
 1e1820e:    08 48             	[r4 + 0] = r0			  ## clock.c:878:5
 1e18210:    00 48             	r0 = [r4 + 0]			  ## clock.c:879:5
 1e18212:    30 fd 0e 0b       	r0 = r0 & 4294049791			  ## clock.c:879:5
 1e18216:    90 b9             	r0 |= 524288			  ## clock.c:879:5
 1e18218:    08 48             	[r4 + 0] = r0			  ## clock.c:879:5
 1e1821a:    00 48             	r0 = [r4 + 0]			  ## clock.c:880:5
 1e1821c:    30 fd 38 0a       	r0 = r0 & 4294952959			  ## clock.c:880:5
 1e18220:    00 fd 18 0a       	r0 = r0 | 6144			  ## clock.c:880:5
 1e18224:    08 48             	[r4 + 0] = r0			  ## clock.c:880:5
 1e18226:    00 48             	r0 = [r4 + 0]			  ## clock.c:383:5
 1e18228:    70 b0             	r0 &= 4294967294			  ## clock.c:383:5
 1e1822a:    08 48             	[r4 + 0] = r0			  ## clock.c:383:5
 1e1822c:    00 48             	r0 = [r4 + 0]			  ## clock.c:384:5
 1e1822e:    f0 b0             	r0 &= 4294967293			  ## clock.c:384:5
 1e18230:    08 48             	[r4 + 0] = r0			  ## clock.c:384:5
 1e18232:    10 48             	r0 = [r4 + 4]			  ## clock.c:384:5
 1e18234:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:384:5
 1e18238:    90 b5             	r0 |= 2048			  ## clock.c:384:5
 1e1823a:    18 48             	[r4 + 4] = r0			  ## clock.c:384:5
 1e1823c:    10 48             	r0 = [r4 + 4]			  ## clock.c:894:5
 1e1823e:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## clock.c:894:5
 1e18242:    18 48             	[r4 + 4] = r0			  ## clock.c:894:5
 1e18244:    20 48             	r0 = [r4 + 8]			  ## clock.c:895:5
 1e18246:    c1 ff 7c 30 00 00 	r1 = 12412 <hdl.5 : 307c >			  ## clock.c:895:5
 1e1824c:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:895:5
 1e1824e:    c2 70             	r2 = 12			  ## clock.c:895:5
 1e18250:    c0 fe 20 11       	r1 = r1 / r2 (u)			  ## clock.c:895:5
 1e18254:    11 fc fe 0f       	r1 = r1 + 4094			  ## clock.c:895:5
 1e18258:    cc fd 00 01       	r0 <= insert(r1, p:0, l:12)			  ## clock.c:895:5
 1e1825c:    28 48             	[r4 + 8] = r0			  ## clock.c:895:5
 1e1825e:    00 4c             	r0 = [r6 + 0]			  ## clock.c:713:17
 1e18260:    f0 ef 23 00       	if (r0 == -1) goto 70 <clk_early_init+0x192 : 1e182aa >			  ## clock.c:713:17
 1e18264:    10 4a             	r0 = [r5 + 4]			  ## clock.c:717:5
 1e18266:    c1 ff 98 30 00 00 	r1 = 12440 <hdl.0 : 3098 >			  ## clock.c:717:5
 1e1826c:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:717:5
 1e1826e:    c3 fd 00 01       	r0 <= insert(r1, p:0, l:3)			  ## clock.c:717:5
 1e18272:    18 4a             	[r5 + 4] = r0			  ## clock.c:717:5
 1e18274:    10 4a             	r0 = [r5 + 4]			  ## clock.c:718:5
 1e18276:    c1 ff 9c 30 00 00 	r1 = 12444 <hdl.1 : 309c >			  ## clock.c:718:5
 1e1827c:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:718:5
 1e1827e:    c4 fd 20 01       	r0 <= insert(r1, p:4, l:4)			  ## clock.c:718:5
 1e18282:    18 4a             	[r5 + 4] = r0			  ## clock.c:718:5
 1e18284:    00 4a             	r0 = [r5 + 0]			  ## clock.c:732:5
 1e18286:    70 b5             	r0 &= 4294966271			  ## clock.c:732:5
 1e18288:    08 4a             	[r5 + 0] = r0			  ## clock.c:732:5
 1e1828a:    00 4a             	r0 = [r5 + 0]			  ## clock.c:734:5
 1e1828c:    f0 b4             	r0 &= 4294966783			  ## clock.c:734:5
 1e1828e:    08 4a             	[r5 + 0] = r0			  ## clock.c:734:5
 1e18290:    00 4a             	r0 = [r5 + 0]			  ## clock.c:735:5
 1e18292:    c1 ff c0 30 00 00 	r1 = 12480 <hdl.3 : 30c0 >			  ## clock.c:735:5
 1e18298:    01 62             	r1 = b[r1 + 0] (u)			  ## clock.c:735:5
 1e1829a:    02 fb 0f fe       	r2 = -497 <bank_code_load_addr+0x1E5563 : 1fffe0f >			  ## clock.c:735:5
 1e1829e:    50 b5             	r0 &= r2			  ## clock.c:735:5
 1e182a0:    21 fd 1f 19       	r1 = r1 & 31			  ## clock.c:735:5
 1e182a4:    c5 fd 20 01       	r0 <= insert(r1, p:4, l:5)			  ## clock.c:735:5
 1e182a8:    08 4a             	[r5 + 0] = r0			  ## clock.c:735:5
 1e182aa:    56 16             	call -852 <__hw_pll_all_oe : 1e17f58 >			  ## clock.c:902:5
 1e182ac:    00 f4 01 49       	[r4 + 0] |= 1			  ## clock.c:374:5
 1e182b0:    10 70             	r0 = 1			  ## clock.c:375:5
 1e182b2:    8f f3 4f 64       	call 2017438 <delay : 4b54 >			  ## clock.c:375:5
 1e182b6:    00 f4 02 49       	[r4 + 0] |= 2			  ## clock.c:376:5
 1e182ba:    40 71             	r0 = 20			  ## clock.c:377:5
 1e182bc:    8f f3 4a 64       	call 2017428 <delay : 4b54 >			  ## clock.c:377:5
 1e182c0:    9a 16             	call -716 <clock_all_limit_post : 1e17ff6 >			  ## clock.c:1377:5
 1e182c2:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1379:5
 1e182c4:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## clock.c:1379:5
 1e182c8:    00 fd 06 0a       	r0 = r0 | 1536			  ## clock.c:1379:5
 1e182cc:    18 4a             	[r5 + 4] = r0			  ## clock.c:1379:5
 1e182ce:    08 00             	csync			  ## clock.c:1379:5
 1e182d0:    97 f3 62 75       	call 3074756 <local_irq_enable : 106d98 >			  ## clock.c:1528:5
 1e182d4:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1673:5
 1e182d6:    30 fd 03 0a       	r0 = r0 & 4294966527			  ## clock.c:1673:5
 1e182da:    28 4a             	[r5 + 8] = r0			  ## clock.c:1673:5
 1e182dc:    20 4a             	r0 = [r5 + 8]			  ## clock.c:1675:5
 1e182de:    30 fd 0c 0a       	r0 = r0 & 4294964223			  ## clock.c:1675:5
 1e182e2:    28 4a             	[r5 + 8] = r0			  ## clock.c:1675:5
 1e182e4:    10 4a             	r0 = [r5 + 4]			  ## clock.c:1678:5
 1e182e6:    f0 b5             	r0 &= 4294965247			  ## clock.c:1678:5
 1e182e8:    18 4a             	[r5 + 4] = r0			  ## clock.c:1678:5
 1e182ea:    c0 ff 17 18 1a 00 	r0 = 1710103 <uECC_vli_cmp_unsafe+0x9A81B : 1a1817 >			  ## clock.c:1678:5
 1e182f0:    01 60             	r1 = b[r0 + 0] (u)			  ## clock.c:2388:5
 1e182f2:    71 b0             	r1 &= 4294967294			  ## clock.c:2388:5
 1e182f4:    09 60             	b[r0 + 0] = r1			  ## clock.c:2388:5
 1e182f6:    40 fc 14 0d       	r0 = r4 + 3348			  ## clock.c:2390:20
 1e182fa:    00 f4 0f 09       	[r0 + 0] |= 15			  ## clock.c:2390:20
 1e182fe:    56 01             	{pc, r6-r4} = [sp++]			  ## clock.c:2390:20

Disassembly of section .mmu_tlb:
report_mmu_tlb_begin:
       0:    00 00 00 00     "\0\0\0\0"
       4:    00 00 00 00     "\0\0\0\0"
       8:    00 00 00 00     "\0\0\0\0"
       c:    00 00 00 00     "\0\0\0\0"
      10:    00 00 00 00     "\0\0\0\0"
      14:    00 00 00 00     "\0\0\0\0"
      18:    00 00 00 00     "\0\0\0\0"
      1c:    00 00 00 00     "\0\0\0\0"
      20:    00 00 00 00     "\0\0\0\0"
      24:    00 00 00 00     "\0\0\0\0"
      28:    00 00 00 00     "\0\0\0\0"
      2c:    00 00 00 00     "\0\0\0\0"
      30:    00 00 00 00     "\0\0\0\0"
      34:    00 00 00 00     "\0\0\0\0"
      38:    00 00 00 00     "\0\0\0\0"
      3c:    00 00 00 00     "\0\0\0\0"
      40:    00 00 00 00     "\0\0\0\0"
      44:    00 00 00 00     "\0\0\0\0"
      48:    00 00 00 00     "\0\0\0\0"
      4c:    00 00 00 00     "\0\0\0\0"
      50:    00 00 00 00     "\0\0\0\0"
      54:    00 00 00 00     "\0\0\0\0"
      58:    00 00 00 00     "\0\0\0\0"
      5c:    00 00 00 00     "\0\0\0\0"
      60:    00 00 00 00     "\0\0\0\0"
      64:    00 00 00 00     "\0\0\0\0"
      68:    00 00 00 00     "\0\0\0\0"
      6c:    00 00 00 00     "\0\0\0\0"
      70:    00 00 00 00     "\0\0\0\0"
      74:    00 00 00 00     "\0\0\0\0"
      78:    00 00 00 00     "\0\0\0\0"
      7c:    00 00 00 00     "\0\0\0\0"
      80:    00 00 00 00     "\0\0\0\0"
      84:    00 00 00 00     "\0\0\0\0"
      88:    00 00 00 00     "\0\0\0\0"
      8c:    00 00 00 00     "\0\0\0\0"
      90:    00 00 00 00     "\0\0\0\0"
      94:    00 00 00 00     "\0\0\0\0"
      98:    00 00 00 00     "\0\0\0\0"
      9c:    00 00 00 00     "\0\0\0\0"
      a0:    00 00 00 00     "\0\0\0\0"
      a4:    00 00 00 00     "\0\0\0\0"
      a8:    00 00 00 00     "\0\0\0\0"
      ac:    00 00 00 00     "\0\0\0\0"
      b0:    00 00 00 00     "\0\0\0\0"
      b4:    00 00 00 00     "\0\0\0\0"
      b8:    00 00 00 00     "\0\0\0\0"
      bc:    00 00 00 00     "\0\0\0\0"
      c0:    00 00 00 00     "\0\0\0\0"
      c4:    00 00 00 00     "\0\0\0\0"
      c8:    00 00 00 00     "\0\0\0\0"
      cc:    00 00 00 00     "\0\0\0\0"
      d0:    00 00 00 00     "\0\0\0\0"
      d4:    00 00 00 00     "\0\0\0\0"
      d8:    00 00 00 00     "\0\0\0\0"
      dc:    00 00 00 00     "\0\0\0\0"
      e0:    00 00 00 00     "\0\0\0\0"
      e4:    00 00 00 00     "\0\0\0\0"
      e8:    00 00 00 00     "\0\0\0\0"
      ec:    00 00 00 00     "\0\0\0\0"
      f0:    00 00 00 00     "\0\0\0\0"
      f4:    00 00 00 00     "\0\0\0\0"
      f8:    00 00 00 00     "\0\0\0\0"
      fc:    00 00 00 00     "\0\0\0\0"
     100:    00 00 00 00     "\0\0\0\0"
     104:    00 00 00 00     "\0\0\0\0"
     108:    00 00 00 00     "\0\0\0\0"
     10c:    00 00 00 00     "\0\0\0\0"
     110:    00 00 00 00     "\0\0\0\0"
     114:    00 00 00 00     "\0\0\0\0"
     118:    00 00 00 00     "\0\0\0\0"
     11c:    00 00 00 00     "\0\0\0\0"
     120:    00 00 00 00     "\0\0\0\0"
     124:    00 00 00 00     "\0\0\0\0"
     128:    00 00 00 00     "\0\0\0\0"
     12c:    00 00 00 00     "\0\0\0\0"
     130:    00 00 00 00     "\0\0\0\0"
     134:    00 00 00 00     "\0\0\0\0"
     138:    00 00 00 00     "\0\0\0\0"
     13c:    00 00 00 00     "\0\0\0\0"
     140:    00 00 00 00     "\0\0\0\0"
     144:    00 00 00 00     "\0\0\0\0"
     148:    00 00 00 00     "\0\0\0\0"
     14c:    00 00 00 00     "\0\0\0\0"
     150:    00 00 00 00     "\0\0\0\0"
     154:    00 00 00 00     "\0\0\0\0"
     158:    00 00 00 00     "\0\0\0\0"
     15c:    00 00 00 00     "\0\0\0\0"
     160:    00 00 00 00     "\0\0\0\0"
     164:    00 00 00 00     "\0\0\0\0"
     168:    00 00 00 00     "\0\0\0\0"
     16c:    00 00 00 00     "\0\0\0\0"
     170:    00 00 00 00     "\0\0\0\0"
     174:    00 00 00 00     "\0\0\0\0"
     178:    00 00 00 00     "\0\0\0\0"
     17c:    00 00 00 00     "\0\0\0\0"
     180:    00 00 00 00     "\0\0\0\0"
     184:    00 00 00 00     "\0\0\0\0"
     188:    00 00 00 00     "\0\0\0\0"
     18c:    00 00 00 00     "\0\0\0\0"
     190:    00 00 00 00     "\0\0\0\0"
     194:    00 00 00 00     "\0\0\0\0"
     198:    00 00 00 00     "\0\0\0\0"
     19c:    00 00 00 00     "\0\0\0\0"
     1a0:    00 00 00 00     "\0\0\0\0"
     1a4:    00 00 00 00     "\0\0\0\0"
     1a8:    00 00 00 00     "\0\0\0\0"
     1ac:    00 00 00 00     "\0\0\0\0"
     1b0:    00 00 00 00     "\0\0\0\0"
     1b4:    00 00 00 00     "\0\0\0\0"
     1b8:    00 00 00 00     "\0\0\0\0"
     1bc:    00 00 00 00     "\0\0\0\0"
     1c0:    00 00 00 00     "\0\0\0\0"
     1c4:    00 00 00 00     "\0\0\0\0"
     1c8:    00 00 00 00     "\0\0\0\0"
     1cc:    00 00 00 00     "\0\0\0\0"
     1d0:    00 00 00 00     "\0\0\0\0"
     1d4:    00 00 00 00     "\0\0\0\0"
     1d8:    00 00 00 00     "\0\0\0\0"
     1dc:    00 00 00 00     "\0\0\0\0"
     1e0:    00 00 00 00     "\0\0\0\0"
     1e4:    00 00 00 00     "\0\0\0\0"
     1e8:    00 00 00 00     "\0\0\0\0"
     1ec:    00 00 00 00     "\0\0\0\0"
     1f0:    00 00 00 00     "\0\0\0\0"
     1f4:    00 00 00 00     "\0\0\0\0"
     1f8:    00 00 00 00     "\0\0\0\0"
     1fc:    00 00 00 00     "\0\0\0\0"
     200:    00 00 00 00     "\0\0\0\0"
     204:    00 00 00 00     "\0\0\0\0"
     208:    00 00 00 00     "\0\0\0\0"
     20c:    00 00 00 00     "\0\0\0\0"
     210:    00 00 00 00     "\0\0\0\0"
     214:    00 00 00 00     "\0\0\0\0"
     218:    00 00 00 00     "\0\0\0\0"
     21c:    00 00 00 00     "\0\0\0\0"
     220:    00 00 00 00     "\0\0\0\0"
     224:    00 00 00 00     "\0\0\0\0"
     228:    00 00 00 00     "\0\0\0\0"
     22c:    00 00 00 00     "\0\0\0\0"
     230:    00 00 00 00     "\0\0\0\0"
     234:    00 00 00 00     "\0\0\0\0"
     238:    00 00 00 00     "\0\0\0\0"
     23c:    00 00 00 00     "\0\0\0\0"
     240:    00 00 00 00     "\0\0\0\0"
     244:    00 00 00 00     "\0\0\0\0"
     248:    00 00 00 00     "\0\0\0\0"
     24c:    00 00 00 00     "\0\0\0\0"
     250:    00 00 00 00     "\0\0\0\0"
     254:    00 00 00 00     "\0\0\0\0"
     258:    00 00 00 00     "\0\0\0\0"
     25c:    00 00 00 00     "\0\0\0\0"
     260:    00 00 00 00     "\0\0\0\0"
     264:    00 00 00 00     "\0\0\0\0"
     268:    00 00 00 00     "\0\0\0\0"
     26c:    00 00 00 00     "\0\0\0\0"
     270:    00 00 00 00     "\0\0\0\0"
     274:    00 00 00 00     "\0\0\0\0"
     278:    00 00 00 00     "\0\0\0\0"
     27c:    00 00 00 00     "\0\0\0\0"
     280:    00 00 00 00     "\0\0\0\0"
     284:    00 00 00 00     "\0\0\0\0"
     288:    00 00 00 00     "\0\0\0\0"
     28c:    00 00 00 00     "\0\0\0\0"
     290:    00 00 00 00     "\0\0\0\0"
     294:    00 00 00 00     "\0\0\0\0"
     298:    00 00 00 00     "\0\0\0\0"
     29c:    00 00 00 00     "\0\0\0\0"
     2a0:    00 00 00 00     "\0\0\0\0"
     2a4:    00 00 00 00     "\0\0\0\0"
     2a8:    00 00 00 00     "\0\0\0\0"
     2ac:    00 00 00 00     "\0\0\0\0"
     2b0:    00 00 00 00     "\0\0\0\0"
     2b4:    00 00 00 00     "\0\0\0\0"
     2b8:    00 00 00 00     "\0\0\0\0"
     2bc:    00 00 00 00     "\0\0\0\0"
     2c0:    00 00 00 00     "\0\0\0\0"
     2c4:    00 00 00 00     "\0\0\0\0"
     2c8:    00 00 00 00     "\0\0\0\0"
     2cc:    00 00 00 00     "\0\0\0\0"
     2d0:    00 00 00 00     "\0\0\0\0"
     2d4:    00 00 00 00     "\0\0\0\0"
     2d8:    00 00 00 00     "\0\0\0\0"
     2dc:    00 00 00 00     "\0\0\0\0"
     2e0:    00 00 00 00     "\0\0\0\0"
     2e4:    00 00 00 00     "\0\0\0\0"
     2e8:    00 00 00 00     "\0\0\0\0"
     2ec:    00 00 00 00     "\0\0\0\0"
     2f0:    00 00 00 00     "\0\0\0\0"
     2f4:    00 00 00 00     "\0\0\0\0"
     2f8:    00 00 00 00     "\0\0\0\0"
     2fc:    00 00 00 00     "\0\0\0\0"
     300:    00 00 00 00     "\0\0\0\0"
     304:    00 00 00 00     "\0\0\0\0"
     308:    00 00 00 00     "\0\0\0\0"
     30c:    00 00 00 00     "\0\0\0\0"
     310:    00 00 00 00     "\0\0\0\0"
     314:    00 00 00 00     "\0\0\0\0"
     318:    00 00 00 00     "\0\0\0\0"
     31c:    00 00 00 00     "\0\0\0\0"
     320:    00 00 00 00     "\0\0\0\0"
     324:    00 00 00 00     "\0\0\0\0"
     328:    00 00 00 00     "\0\0\0\0"
     32c:    00 00 00 00     "\0\0\0\0"
     330:    00 00 00 00     "\0\0\0\0"
     334:    00 00 00 00     "\0\0\0\0"
     338:    00 00 00 00     "\0\0\0\0"
     33c:    00 00 00 00     "\0\0\0\0"
     340:    00 00 00 00     "\0\0\0\0"
     344:    00 00 00 00     "\0\0\0\0"
     348:    00 00 00 00     "\0\0\0\0"
     34c:    00 00 00 00     "\0\0\0\0"
     350:    00 00 00 00     "\0\0\0\0"
     354:    00 00 00 00     "\0\0\0\0"
     358:    00 00 00 00     "\0\0\0\0"
     35c:    00 00 00 00     "\0\0\0\0"
     360:    00 00 00 00     "\0\0\0\0"
     364:    00 00 00 00     "\0\0\0\0"
     368:    00 00 00 00     "\0\0\0\0"
     36c:    00 00 00 00     "\0\0\0\0"
     370:    00 00 00 00     "\0\0\0\0"
     374:    00 00 00 00     "\0\0\0\0"
     378:    00 00 00 00     "\0\0\0\0"
     37c:    00 00 00 00     "\0\0\0\0"
     380:    00 00 00 00     "\0\0\0\0"
     384:    00 00 00 00     "\0\0\0\0"
     388:    00 00 00 00     "\0\0\0\0"
     38c:    00 00 00 00     "\0\0\0\0"
     390:    00 00 00 00     "\0\0\0\0"
     394:    00 00 00 00     "\0\0\0\0"
     398:    00 00 00 00     "\0\0\0\0"
     39c:    00 00 00 00     "\0\0\0\0"
     3a0:    00 00 00 00     "\0\0\0\0"
     3a4:    00 00 00 00     "\0\0\0\0"
     3a8:    00 00 00 00     "\0\0\0\0"
     3ac:    00 00 00 00     "\0\0\0\0"
     3b0:    00 00 00 00     "\0\0\0\0"
     3b4:    00 00 00 00     "\0\0\0\0"
     3b8:    00 00 00 00     "\0\0\0\0"
     3bc:    00 00 00 00     "\0\0\0\0"
     3c0:    00 00 00 00     "\0\0\0\0"
     3c4:    00 00 00 00     "\0\0\0\0"
     3c8:    00 00 00 00     "\0\0\0\0"
     3cc:    00 00 00 00     "\0\0\0\0"
     3d0:    00 00 00 00     "\0\0\0\0"
     3d4:    00 00 00 00     "\0\0\0\0"
     3d8:    00 00 00 00     "\0\0\0\0"
     3dc:    00 00 00 00     "\0\0\0\0"
     3e0:    00 00 00 00     "\0\0\0\0"
     3e4:    00 00 00 00     "\0\0\0\0"
     3e8:    00 00 00 00     "\0\0\0\0"
     3ec:    00 00 00 00     "\0\0\0\0"
     3f0:    00 00 00 00     "\0\0\0\0"
     3f4:    00 00 00 00     "\0\0\0\0"
     3f8:    00 00 00 00     "\0\0\0\0"
     3fc:    00 00 00 00     "\0\0\0\0"
     400:    00 00 00 00     "\0\0\0\0"
     404:    00 00 00 00     "\0\0\0\0"
     408:    00 00 00 00     "\0\0\0\0"
     40c:    00 00 00 00     "\0\0\0\0"
     410:    00 00 00 00     "\0\0\0\0"
     414:    00 00 00 00     "\0\0\0\0"
     418:    00 00 00 00     "\0\0\0\0"
     41c:    00 00 00 00     "\0\0\0\0"
     420:    00 00 00 00     "\0\0\0\0"
     424:    00 00 00 00     "\0\0\0\0"
     428:    00 00 00 00     "\0\0\0\0"
     42c:    00 00 00 00     "\0\0\0\0"
     430:    00 00 00 00     "\0\0\0\0"
     434:    00 00 00 00     "\0\0\0\0"
     438:    00 00 00 00     "\0\0\0\0"
     43c:    00 00 00 00     "\0\0\0\0"
     440:    00 00 00 00     "\0\0\0\0"
     444:    00 00 00 00     "\0\0\0\0"
     448:    00 00 00 00     "\0\0\0\0"
     44c:    00 00 00 00     "\0\0\0\0"
     450:    00 00 00 00     "\0\0\0\0"
     454:    00 00 00 00     "\0\0\0\0"
     458:    00 00 00 00     "\0\0\0\0"
     45c:    00 00 00 00     "\0\0\0\0"
     460:    00 00 00 00     "\0\0\0\0"
     464:    00 00 00 00     "\0\0\0\0"
     468:    00 00 00 00     "\0\0\0\0"
     46c:    00 00 00 00     "\0\0\0\0"
     470:    00 00 00 00     "\0\0\0\0"
     474:    00 00 00 00     "\0\0\0\0"
     478:    00 00 00 00     "\0\0\0\0"
     47c:    00 00 00 00     "\0\0\0\0"
     480:    00 00 00 00     "\0\0\0\0"
     484:    00 00 00 00     "\0\0\0\0"
     488:    00 00 00 00     "\0\0\0\0"
     48c:    00 00 00 00     "\0\0\0\0"
     490:    00 00 00 00     "\0\0\0\0"
     494:    00 00 00 00     "\0\0\0\0"
     498:    00 00 00 00     "\0\0\0\0"
     49c:    00 00 00 00     "\0\0\0\0"
     4a0:    00 00 00 00     "\0\0\0\0"
     4a4:    00 00 00 00     "\0\0\0\0"
     4a8:    00 00 00 00     "\0\0\0\0"
     4ac:    00 00 00 00     "\0\0\0\0"
     4b0:    00 00 00 00     "\0\0\0\0"
     4b4:    00 00 00 00     "\0\0\0\0"
     4b8:    00 00 00 00     "\0\0\0\0"
     4bc:    00 00 00 00     "\0\0\0\0"
     4c0:    00 00 00 00     "\0\0\0\0"
     4c4:    00 00 00 00     "\0\0\0\0"
     4c8:    00 00 00 00     "\0\0\0\0"
     4cc:    00 00 00 00     "\0\0\0\0"
     4d0:    00 00 00 00     "\0\0\0\0"
     4d4:    00 00 00 00     "\0\0\0\0"
     4d8:    00 00 00 00     "\0\0\0\0"
     4dc:    00 00 00 00     "\0\0\0\0"
     4e0:    00 00 00 00     "\0\0\0\0"
     4e4:    00 00 00 00     "\0\0\0\0"
     4e8:    00 00 00 00     "\0\0\0\0"
     4ec:    00 00 00 00     "\0\0\0\0"
     4f0:    00 00 00 00     "\0\0\0\0"
     4f4:    00 00 00 00     "\0\0\0\0"
     4f8:    00 00 00 00     "\0\0\0\0"
     4fc:    00 00 00 00     "\0\0\0\0"
     500:    00 00 00 00     "\0\0\0\0"
     504:    00 00 00 00     "\0\0\0\0"
     508:    00 00 00 00     "\0\0\0\0"
     50c:    00 00 00 00     "\0\0\0\0"
     510:    00 00 00 00     "\0\0\0\0"
     514:    00 00 00 00     "\0\0\0\0"
     518:    00 00 00 00     "\0\0\0\0"
     51c:    00 00 00 00     "\0\0\0\0"
     520:    00 00 00 00     "\0\0\0\0"
     524:    00 00 00 00     "\0\0\0\0"
     528:    00 00 00 00     "\0\0\0\0"
     52c:    00 00 00 00     "\0\0\0\0"
     530:    00 00 00 00     "\0\0\0\0"
     534:    00 00 00 00     "\0\0\0\0"
     538:    00 00 00 00     "\0\0\0\0"
     53c:    00 00 00 00     "\0\0\0\0"
     540:    00 00 00 00     "\0\0\0\0"
     544:    00 00 00 00     "\0\0\0\0"
     548:    00 00 00 00     "\0\0\0\0"
     54c:    00 00 00 00     "\0\0\0\0"
     550:    00 00 00 00     "\0\0\0\0"
     554:    00 00 00 00     "\0\0\0\0"
     558:    00 00 00 00     "\0\0\0\0"
     55c:    00 00 00 00     "\0\0\0\0"
     560:    00 00 00 00     "\0\0\0\0"
     564:    00 00 00 00     "\0\0\0\0"
     568:    00 00 00 00     "\0\0\0\0"
     56c:    00 00 00 00     "\0\0\0\0"
     570:    00 00 00 00     "\0\0\0\0"
     574:    00 00 00 00     "\0\0\0\0"
     578:    00 00 00 00     "\0\0\0\0"
     57c:    00 00 00 00     "\0\0\0\0"
     580:    00 00 00 00     "\0\0\0\0"
     584:    00 00 00 00     "\0\0\0\0"
     588:    00 00 00 00     "\0\0\0\0"
     58c:    00 00 00 00     "\0\0\0\0"
     590:    00 00 00 00     "\0\0\0\0"
     594:    00 00 00 00     "\0\0\0\0"
     598:    00 00 00 00     "\0\0\0\0"
     59c:    00 00 00 00     "\0\0\0\0"
     5a0:    00 00 00 00     "\0\0\0\0"
     5a4:    00 00 00 00     "\0\0\0\0"
     5a8:    00 00 00 00     "\0\0\0\0"
     5ac:    00 00 00 00     "\0\0\0\0"
     5b0:    00 00 00 00     "\0\0\0\0"
     5b4:    00 00 00 00     "\0\0\0\0"
     5b8:    00 00 00 00     "\0\0\0\0"
     5bc:    00 00 00 00     "\0\0\0\0"
     5c0:    00 00 00 00     "\0\0\0\0"
     5c4:    00 00 00 00     "\0\0\0\0"
     5c8:    00 00 00 00     "\0\0\0\0"
     5cc:    00 00 00 00     "\0\0\0\0"
     5d0:    00 00 00 00     "\0\0\0\0"
     5d4:    00 00 00 00     "\0\0\0\0"
     5d8:    00 00 00 00     "\0\0\0\0"
     5dc:    00 00 00 00     "\0\0\0\0"
     5e0:    00 00 00 00     "\0\0\0\0"
     5e4:    00 00 00 00     "\0\0\0\0"
     5e8:    00 00 00 00     "\0\0\0\0"
     5ec:    00 00 00 00     "\0\0\0\0"
     5f0:    00 00 00 00     "\0\0\0\0"
     5f4:    00 00 00 00     "\0\0\0\0"
     5f8:    00 00 00 00     "\0\0\0\0"
     5fc:    00 00 00 00     "\0\0\0\0"
     600:    00 00 00 00     "\0\0\0\0"
     604:    00 00 00 00     "\0\0\0\0"
     608:    00 00 00 00     "\0\0\0\0"
     60c:    00 00 00 00     "\0\0\0\0"
     610:    00 00 00 00     "\0\0\0\0"
     614:    00 00 00 00     "\0\0\0\0"
     618:    00 00 00 00     "\0\0\0\0"
     61c:    00 00 00 00     "\0\0\0\0"
     620:    00 00 00 00     "\0\0\0\0"
     624:    00 00 00 00     "\0\0\0\0"
     628:    00 00 00 00     "\0\0\0\0"
     62c:    00 00 00 00     "\0\0\0\0"
     630:    00 00 00 00     "\0\0\0\0"
     634:    00 00 00 00     "\0\0\0\0"
     638:    00 00 00 00     "\0\0\0\0"
     63c:    00 00 00 00     "\0\0\0\0"
     640:    00 00 00 00     "\0\0\0\0"
     644:    00 00 00 00     "\0\0\0\0"
     648:    00 00 00 00     "\0\0\0\0"
     64c:    00 00 00 00     "\0\0\0\0"
     650:    00 00 00 00     "\0\0\0\0"
     654:    00 00 00 00     "\0\0\0\0"
     658:    00 00 00 00     "\0\0\0\0"
     65c:    00 00 00 00     "\0\0\0\0"
     660:    00 00 00 00     "\0\0\0\0"
     664:    00 00 00 00     "\0\0\0\0"
     668:    00 00 00 00     "\0\0\0\0"
     66c:    00 00 00 00     "\0\0\0\0"
     670:    00 00 00 00     "\0\0\0\0"
     674:    00 00 00 00     "\0\0\0\0"
     678:    00 00 00 00     "\0\0\0\0"
     67c:    00 00 00 00     "\0\0\0\0"
     680:    00 00 00 00     "\0\0\0\0"
     684:    00 00 00 00     "\0\0\0\0"
     688:    00 00 00 00     "\0\0\0\0"
     68c:    00 00 00 00     "\0\0\0\0"
     690:    00 00 00 00     "\0\0\0\0"
     694:    00 00 00 00     "\0\0\0\0"
     698:    00 00 00 00     "\0\0\0\0"
     69c:    00 00 00 00     "\0\0\0\0"
     6a0:    00 00 00 00     "\0\0\0\0"
     6a4:    00 00 00 00     "\0\0\0\0"
     6a8:    00 00 00 00     "\0\0\0\0"
     6ac:    00 00 00 00     "\0\0\0\0"
     6b0:    00 00 00 00     "\0\0\0\0"
     6b4:    00 00 00 00     "\0\0\0\0"
     6b8:    00 00 00 00     "\0\0\0\0"
     6bc:    00 00 00 00     "\0\0\0\0"
     6c0:    00 00 00 00     "\0\0\0\0"
     6c4:    00 00 00 00     "\0\0\0\0"
     6c8:    00 00 00 00     "\0\0\0\0"
     6cc:    00 00 00 00     "\0\0\0\0"
     6d0:    00 00 00 00     "\0\0\0\0"
     6d4:    00 00 00 00     "\0\0\0\0"
     6d8:    00 00 00 00     "\0\0\0\0"
     6dc:    00 00 00 00     "\0\0\0\0"
     6e0:    00 00 00 00     "\0\0\0\0"
     6e4:    00 00 00 00     "\0\0\0\0"
     6e8:    00 00 00 00     "\0\0\0\0"
     6ec:    00 00 00 00     "\0\0\0\0"
     6f0:    00 00 00 00     "\0\0\0\0"
     6f4:    00 00 00 00     "\0\0\0\0"
     6f8:    00 00 00 00     "\0\0\0\0"
     6fc:    00 00 00 00     "\0\0\0\0"
     700:    00 00 00 00     "\0\0\0\0"
     704:    00 00 00 00     "\0\0\0\0"
     708:    00 00 00 00     "\0\0\0\0"
     70c:    00 00 00 00     "\0\0\0\0"
     710:    00 00 00 00     "\0\0\0\0"
     714:    00 00 00 00     "\0\0\0\0"
     718:    00 00 00 00     "\0\0\0\0"
     71c:    00 00 00 00     "\0\0\0\0"
     720:    00 00 00 00     "\0\0\0\0"
     724:    00 00 00 00     "\0\0\0\0"
     728:    00 00 00 00     "\0\0\0\0"
     72c:    00 00 00 00     "\0\0\0\0"
     730:    00 00 00 00     "\0\0\0\0"
     734:    00 00 00 00     "\0\0\0\0"
     738:    00 00 00 00     "\0\0\0\0"
     73c:    00 00 00 00     "\0\0\0\0"
     740:    00 00 00 00     "\0\0\0\0"
     744:    00 00 00 00     "\0\0\0\0"
     748:    00 00 00 00     "\0\0\0\0"
     74c:    00 00 00 00     "\0\0\0\0"
     750:    00 00 00 00     "\0\0\0\0"
     754:    00 00 00 00     "\0\0\0\0"
     758:    00 00 00 00     "\0\0\0\0"
     75c:    00 00 00 00     "\0\0\0\0"
     760:    00 00 00 00     "\0\0\0\0"
     764:    00 00 00 00     "\0\0\0\0"
     768:    00 00 00 00     "\0\0\0\0"
     76c:    00 00 00 00     "\0\0\0\0"
     770:    00 00 00 00     "\0\0\0\0"
     774:    00 00 00 00     "\0\0\0\0"
     778:    00 00 00 00     "\0\0\0\0"
     77c:    00 00 00 00     "\0\0\0\0"
     780:    00 00 00 00     "\0\0\0\0"
     784:    00 00 00 00     "\0\0\0\0"
     788:    00 00 00 00     "\0\0\0\0"
     78c:    00 00 00 00     "\0\0\0\0"
     790:    00 00 00 00     "\0\0\0\0"
     794:    00 00 00 00     "\0\0\0\0"
     798:    00 00 00 00     "\0\0\0\0"
     79c:    00 00 00 00     "\0\0\0\0"
     7a0:    00 00 00 00     "\0\0\0\0"
     7a4:    00 00 00 00     "\0\0\0\0"
     7a8:    00 00 00 00     "\0\0\0\0"
     7ac:    00 00 00 00     "\0\0\0\0"
     7b0:    00 00 00 00     "\0\0\0\0"
     7b4:    00 00 00 00     "\0\0\0\0"
     7b8:    00 00 00 00     "\0\0\0\0"
     7bc:    00 00 00 00     "\0\0\0\0"
     7c0:    00 00 00 00     "\0\0\0\0"
     7c4:    00 00 00 00     "\0\0\0\0"
     7c8:    00 00 00 00     "\0\0\0\0"
     7cc:    00 00 00 00     "\0\0\0\0"
     7d0:    00 00 00 00     "\0\0\0\0"
     7d4:    00 00 00 00     "\0\0\0\0"
     7d8:    00 00 00 00     "\0\0\0\0"
     7dc:    00 00 00 00     "\0\0\0\0"
     7e0:    00 00 00 00     "\0\0\0\0"
     7e4:    00 00 00 00     "\0\0\0\0"
     7e8:    00 00 00 00     "\0\0\0\0"
     7ec:    00 00 00 00     "\0\0\0\0"
     7f0:    00 00 00 00     "\0\0\0\0"
     7f4:    00 00 00 00     "\0\0\0\0"
     7f8:    00 00 00 00     "\0\0\0\0"
     7fc:    00 00 00 00     "\0\0\0\0"
Disassembly of section .boot_info:
report_boot_info_begin:
     800:    00 00 00 00     "\0\0\0\0"
     804:    00 00 00 00     "\0\0\0\0"
     808:    00 00 00 00     "\0\0\0\0"
     80c:    00 00 00 00     "\0\0\0\0"
     810:    00 00 00 00     "\0\0\0\0"
     814:    00 00 00 00     "\0\0\0\0"
     818:    00 00 00 00     "\0\0\0\0"
     81c:    00 00 00 00     "\0\0\0\0"
     820:    00 00 00 00     "\0\0\0\0"
     824:    00 00 00 00     "\0\0\0\0"
     828:    00 00 00 00     "\0\0\0\0"
     82c:    00 00 00 00     "\0\0\0\0"
     830:    00 00 00 00     "\0\0\0\0"
     834:    00 00 00 00     "\0\0\0\0"
     838:    00 00 00 00     "\0\0\0\0"
     83c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .data:
trans_gatt_control_block:
     840:    00 02 0c 04     "\0\x02\x0c\x04"
     844:    00 00 00 00     "\0\0\0\0"
     848:    d8 e1 e0 01     "\x08\x01\x00\x01"
     84c:    00 00 00 00     "\0\0\0\0"
     850:    00 00 00 00     "\0\0\0\0"
     854:    00 00 00 00     "\0\0\0\0"

def_cam:
     858:    10 f0 90 30     "\x00\x00\x000"
     85c:    b0 80 00 00     "\x00\x00\0\0"

head:
     860:    60 08 00 00     "`\b\0\0"
     864:    60 08 00 00     "`\b\0\0"

handl:
     868:    00 00 00 01     "\0\0\0\x01"
     86c:    00 00 01 00     "\0\0\x01\0"
     870:    40 9c 00 00     "@\x0c\0\0"
     874:    00 00 00 00     "\0\0\0\0"
     878:    00 00 00 00     "\0\0\0\0"
     87c:    00 00 00 00     "\0\0\0\0"
     880:    00 00 00 00     "\0\0\0\0"
     884:    00 00 00 00     "\0\0\0\0"
     888:    00 00 00 00     "\0\0\0\0"

head.1703:
     88c:    8c 08 00 00     "\x0c\b\0\0"
     890:    8c 08 00 00     "\x0c\b\0\0"

jiffies:
     894:    0a 00 00 00     "\n\0\0\0"

timer_head:
     898:    98 08 00 00     "\x08\b\0\0"
     89c:    98 08 00 00     "\x08\b\0\0"

puk:
     8a0:    98 36 6c f3     "\x086l\x03"
     8a4:    00 00 00 00     "\0\0\0\0"
     8a8:    00 00 00 00     "\0\0\0\0"
     8ac:    00 00 00 00     "\0\0\0\0"

ble_device_name_len:
     8b0:    0a 00 00 00     "\n\0\0\0"

freq:
     8b4:    e8 03 00 00     "\x08\x03\0\0"

duty:
     8b8:    f4 01 00 00     "\x04\x01\0\0"

lp_winsize:
     8bc:    e0 01 a0 00     "\x00\x01\x00\0"
     8c0:    64 00 8c 00     "d\0\x0c\0"
     8c4:    00 00           "\0\0"

ble_device_name:
     8c6:    4a 4c 5f 42     "JL_B"
     8ca:    54 28 42 4c     "T(BL"
     8ce:    45 29 00 00     "E)\0\0"
     8d2:    00 00 00 00     "\0\0\0\0"
     8d6:    00 00 00 00     "\0\0\0\0"
     8da:    00 00 00 00     "\0\0\0\0"
     8de:    00 00 00 00     "\0\0\0\0"
     8e2:    00 00           "\0\0"

bt_cfg:
     8e4:    4a 4c 5f 61     "JL_a"
     8e8:    70 70 5f 64     "pp_d"
     8ec:    65 62 75 67     "ebug"
     8f0:    00 00 00 00     "\0\0\0\0"
     8f4:    00 00 00 00     "\0\0\0\0"
     8f8:    00 00 00 00     "\0\0\0\0"
     8fc:    00 00 00 00     "\0\0\0\0"
     900:    00 00 00 00     "\0\0\0\0"
     904:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     908:    ff ff 0a 19     "\x0f\x0f\n\x09"
     90c:    07 88 66 ff     "\x07\x08f\x0f"
     910:    ff ff ff ff     "\x0f\x0f\x0f\x0f"
     914:    ff 00 00 00     "\x0f\0\0\0"

data_magic:
     918:    00 00 00 00     "\0\0\0\0"
     91c:    00 00 00 00     "\0\0\0\0"
     920:    00 00 00 00     "\0\0\0\0"
     924:    00 00 00 00     "\0\0\0\0"
     928:    00 00 00 00     "\0\0\0\0"
     92c:    00 00 00 00     "\0\0\0\0"
     930:    00 00 00 00     "\0\0\0\0"
     934:    00 00 00 00     "\0\0\0\0"
     938:    00 00 00 00     "\0\0\0\0"
     93c:    00 00 00 00     "\0\0\0\0"
     940:    00 00 00 00     "\0\0\0\0"
     944:    00 00 00 00     "\0\0\0\0"
     948:    00 00 00 00     "\0\0\0\0"
     94c:    00 00 00 00     "\0\0\0\0"
     950:    00 00 00 00     "\0\0\0\0"
     954:    00 00 00 00     "\0\0\0\0"
     958:    00 00 00 00     "\0\0\0\0"
     95c:    00 00 00 00     "\0\0\0\0"

is_btstack_lowpower_active:
     960:    00 00 00 00     "\0\0\0\0"

btstack_task_create_flag:
     964:    00 00 00 00     "\0\0\0\0"

stack_run_loop_head:
     968:    00 00 00 00     "\0\0\0\0"

le_att_mtu_size:
     96c:    05 02           "\x05\x02"

gap_request_connection_parameter_update.le_con_param_update_identifier:
     96e:    01              "\x01"

temp_link_key_flag:
     96f:    00              "\0"

stack_configs_app:
     970:    04 04 24 00     "\x04\x04$\0"
     974:    40 1f 40 1f     "@\x0f@\x0f"
     978:    00 00 00 00     "\0\0\0\0"
     97c:    00 00 3c 35     "\0\0<5"
     980:    00 11 10 08     "\0\x01\x00\b"
     984:    23 00 01 46     "#\0\x01F"
     988:    1e 0a 00 00     "\x0e\n\0\0"
     98c:    00 00 00 00     "\0\0\0\0"
     990:    00 00 00 00     "\0\0\0\0"

disable_sco_timer:
     994:    00 00           "\0\0"

BTSTACK_LE_HOST_MESH_DATA_START:
     996:    00 00           "\0\0"

system_data_start:
     998:    05 00 00 00     "\x05\0\0\0"
     99c:    01 00 00 00     "\x01\0\0\0"
     9a0:    00 00 00 00     "\0\0\0\0"
     9a4:    25 df e0 01     "%\x0f\x00\x01"
     9a8:    00 00 00 00     "\0\0\0\0"
     9ac:    00 00 00 00     "\0\0\0\0"
     9b0:    00 00 00 00     "\0\0\0\0"
     9b4:    90 e1 e0 01     "\x00\x01\x00\x01"

system_data_end:
     9b8:    00 00 ff ff     "\0\0\x0f\x0f"
     9bc:    00 00 00 00     "\0\0\0\0"
     9c0:    00 00 00 00     "\0\0\0\0"
     9c4:    00 00 00 00     "\0\0\0\0"
     9c8:    00 00 00 00     "\0\0\0\0"
     9cc:    00 00 00 00     "\0\0\0\0"
     9d0:    00 00 00 00     "\0\0\0\0"
     9d4:    00 00 00 00     "\0\0\0\0"
     9d8:    00 00 00 00     "\0\0\0\0"
     9dc:    00 00 00 00     "\0\0\0\0"
     9e0:    00 00 00 00     "\0\0\0\0"
     9e4:    00 00 00 00     "\0\0\0\0"
     9e8:    00 00 00 00     "\0\0\0\0"
     9ec:    00 00 00 00     "\0\0\0\0"
     9f0:    00 00 00 00     "\0\0\0\0"
     9f4:    00 00 00 00     "\0\0\0\0"
     9f8:    00 00 00 00     "\0\0\0\0"
     9fc:    00 00 00 00     "\0\0\0\0"
     a00:    00 00 00 00     "\0\0\0\0"
     a04:    00 00 00 00     "\0\0\0\0"
     a08:    00 00 00 00     "\0\0\0\0"
     a0c:    00 00 00 00     "\0\0\0\0"
     a10:    00 00 00 00     "\0\0\0\0"
     a14:    00 00 00 00     "\0\0\0\0"
     a18:    00 00 00 00     "\0\0\0\0"
     a1c:    00 00 00 00     "\0\0\0\0"
     a20:    00 00 00 00     "\0\0\0\0"
     a24:    00 00 00 00     "\0\0\0\0"
     a28:    00 00 00 00     "\0\0\0\0"
     a2c:    00 00 00 00     "\0\0\0\0"
     a30:    00 00 00 00     "\0\0\0\0"
     a34:    00 00 00 00     "\0\0\0\0"
     a38:    00 00 00 00     "\0\0\0\0"
     a3c:    00 00 00 00     "\0\0\0\0"
     a40:    00 00 00 00     "\0\0\0\0"
     a44:    00 00 00 00     "\0\0\0\0"
     a48:    00 00 00 00     "\0\0\0\0"
     a4c:    00 00 00 00     "\0\0\0\0"
     a50:    00 00 00 00     "\0\0\0\0"
     a54:    00 00 00 00     "\0\0\0\0"
     a58:    00 00 00 00     "\0\0\0\0"
     a5c:    00 00 00 00     "\0\0\0\0"
     a60:    00 00 00 00     "\0\0\0\0"
     a64:    00 00 00 00     "\0\0\0\0"
     a68:    00 00 00 00     "\0\0\0\0"
     a6c:    00 00 00 00     "\0\0\0\0"
     a70:    00 00 00 00     "\0\0\0\0"
     a74:    00 00 00 00     "\0\0\0\0"
     a78:    00 00 00 00     "\0\0\0\0"
     a7c:    00 00 00 00     "\0\0\0\0"
     a80:    00 00 00 00     "\0\0\0\0"
     a84:    00 00 00 00     "\0\0\0\0"
     a88:    00 00 00 00     "\0\0\0\0"
     a8c:    00 00 00 00     "\0\0\0\0"
     a90:    00 00 00 00     "\0\0\0\0"
     a94:    00 00 00 00     "\0\0\0\0"
     a98:    00 00 00 00     "\0\0\0\0"
     a9c:    00 00 00 00     "\0\0\0\0"
     aa0:    00 00 00 00     "\0\0\0\0"
     aa4:    00 00 00 00     "\0\0\0\0"
     aa8:    00 00 00 00     "\0\0\0\0"
     aac:    00 00 00 00     "\0\0\0\0"
     ab0:    00 00 00 00     "\0\0\0\0"
     ab4:    00 00 00 00     "\0\0\0\0"
     ab8:    00 00 00 00     "\0\0\0\0"
     abc:    00 00 00 00     "\0\0\0\0"
     ac0:    00 00 00 00     "\0\0\0\0"
     ac4:    00 00 00 00     "\0\0\0\0"
     ac8:    00 00 00 00     "\0\0\0\0"
     acc:    00 00 00 00     "\0\0\0\0"
     ad0:    00 00 00 00     "\0\0\0\0"
     ad4:    00 00 00 00     "\0\0\0\0"
     ad8:    00 00 00 00     "\0\0\0\0"
     adc:    00 00 00 00     "\0\0\0\0"
     ae0:    00 00 00 00     "\0\0\0\0"
     ae4:    00 00 00 00     "\0\0\0\0"
     ae8:    00 00 00 00     "\0\0\0\0"
     aec:    00 00 00 00     "\0\0\0\0"
     af0:    00 00 00 00     "\0\0\0\0"
     af4:    00 00 00 00     "\0\0\0\0"
     af8:    00 00 00 00     "\0\0\0\0"
     afc:    00 00 00 00     "\0\0\0\0"
     b00:    00 00 00 00     "\0\0\0\0"
     b04:    00 00 00 00     "\0\0\0\0"
     b08:    00 00 00 00     "\0\0\0\0"
     b0c:    00 00 00 00     "\0\0\0\0"
     b10:    00 00 00 00     "\0\0\0\0"
     b14:    00 00 00 00     "\0\0\0\0"
     b18:    00 00 00 00     "\0\0\0\0"
     b1c:    00 00 00 00     "\0\0\0\0"
     b20:    00 00 00 00     "\0\0\0\0"
     b24:    00 00 00 00     "\0\0\0\0"
     b28:    00 00 00 00     "\0\0\0\0"
     b2c:    00 00 00 00     "\0\0\0\0"
     b30:    00 00 00 00     "\0\0\0\0"
     b34:    00 00 00 00     "\0\0\0\0"
     b38:    00 00 00 00     "\0\0\0\0"
     b3c:    00 00 00 00     "\0\0\0\0"
     b40:    00 00 00 00     "\0\0\0\0"
     b44:    00 00 00 00     "\0\0\0\0"
     b48:    00 00 00 00     "\0\0\0\0"
     b4c:    00 00 00 00     "\0\0\0\0"
     b50:    00 00 00 00     "\0\0\0\0"
     b54:    00 00 00 00     "\0\0\0\0"
     b58:    00 00 00 00     "\0\0\0\0"
     b5c:    00 00 00 00     "\0\0\0\0"
     b60:    00 00 00 00     "\0\0\0\0"
     b64:    00 00 00 00     "\0\0\0\0"
     b68:    00 00 00 00     "\0\0\0\0"
     b6c:    00 00 00 00     "\0\0\0\0"
     b70:    00 00 00 00     "\0\0\0\0"
     b74:    00 00 00 00     "\0\0\0\0"
     b78:    00 00 00 00     "\0\0\0\0"
     b7c:    00 00 00 00     "\0\0\0\0"
     b80:    00 00 00 00     "\0\0\0\0"
     b84:    00 00 00 00     "\0\0\0\0"
     b88:    00 00 00 00     "\0\0\0\0"
     b8c:    00 00 00 00     "\0\0\0\0"
     b90:    00 00 00 00     "\0\0\0\0"
     b94:    00 00 00 00     "\0\0\0\0"
     b98:    00 00 00 00     "\0\0\0\0"
     b9c:    00 00 00 00     "\0\0\0\0"
     ba0:    00 00 00 00     "\0\0\0\0"
     ba4:    00 00 00 00     "\0\0\0\0"
     ba8:    00 00 00 00     "\0\0\0\0"
     bac:    00 00 00 00     "\0\0\0\0"
     bb0:    00 00 00 00     "\0\0\0\0"
     bb4:    00 00 00 00     "\0\0\0\0"
     bb8:    00 00 00 00     "\0\0\0\0"
     bbc:    00 00 00 00     "\0\0\0\0"
     bc0:    00 00 00 00     "\0\0\0\0"
     bc4:    00 00 00 00     "\0\0\0\0"
     bc8:    00 00 00 00     "\0\0\0\0"
     bcc:    00 00 00 00     "\0\0\0\0"
     bd0:    00 00 00 00     "\0\0\0\0"
     bd4:    00 00 00 00     "\0\0\0\0"
     bd8:    00 00 00 00     "\0\0\0\0"
     bdc:    00 00 00 00     "\0\0\0\0"
     be0:    00 00 00 00     "\0\0\0\0"
     be4:    00 00 00 00     "\0\0\0\0"
     be8:    00 00 00 00     "\0\0\0\0"
     bec:    00 00 00 00     "\0\0\0\0"
     bf0:    00 00 00 00     "\0\0\0\0"
     bf4:    00 00 00 00     "\0\0\0\0"
     bf8:    00 00 00 00     "\0\0\0\0"
     bfc:    00 00 00 00     "\0\0\0\0"
     c00:    00 00 00 00     "\0\0\0\0"
     c04:    00 00 00 00     "\0\0\0\0"
     c08:    00 00 00 00     "\0\0\0\0"
     c0c:    00 00 00 00     "\0\0\0\0"
     c10:    00 00 00 00     "\0\0\0\0"
     c14:    00 00 00 00     "\0\0\0\0"
     c18:    00 00 00 00     "\0\0\0\0"
     c1c:    00 00 00 00     "\0\0\0\0"
     c20:    00 00 00 00     "\0\0\0\0"
     c24:    00 00 00 00     "\0\0\0\0"
     c28:    00 00 00 00     "\0\0\0\0"
     c2c:    00 00 00 00     "\0\0\0\0"
     c30:    00 00 00 00     "\0\0\0\0"
     c34:    00 00 00 00     "\0\0\0\0"
     c38:    00 00 00 00     "\0\0\0\0"
     c3c:    00 00 00 00     "\0\0\0\0"
     c40:    00 00 00 00     "\0\0\0\0"
     c44:    00 00 00 00     "\0\0\0\0"
     c48:    00 00 00 00     "\0\0\0\0"
     c4c:    00 00 00 00     "\0\0\0\0"
     c50:    00 00 00 00     "\0\0\0\0"
     c54:    00 00 00 00     "\0\0\0\0"
     c58:    00 00 00 00     "\0\0\0\0"
     c5c:    00 00 00 00     "\0\0\0\0"
     c60:    00 00 00 00     "\0\0\0\0"
     c64:    00 00 00 00     "\0\0\0\0"
     c68:    00 00 00 00     "\0\0\0\0"
     c6c:    00 00 00 00     "\0\0\0\0"
     c70:    00 00 00 00     "\0\0\0\0"
     c74:    00 00 00 00     "\0\0\0\0"
     c78:    00 00 00 00     "\0\0\0\0"
     c7c:    00 00 00 00     "\0\0\0\0"
     c80:    00 00 00 00     "\0\0\0\0"
     c84:    00 00 00 00     "\0\0\0\0"
     c88:    00 00 00 00     "\0\0\0\0"
     c8c:    00 00 00 00     "\0\0\0\0"
     c90:    00 00 00 00     "\0\0\0\0"
     c94:    00 00 00 00     "\0\0\0\0"
     c98:    00 00 00 00     "\0\0\0\0"
     c9c:    00 00 00 00     "\0\0\0\0"
     ca0:    00 00 00 00     "\0\0\0\0"
     ca4:    00 00 00 00     "\0\0\0\0"
     ca8:    00 00 00 00     "\0\0\0\0"
     cac:    00 00 00 00     "\0\0\0\0"
     cb0:    00 00 00 00     "\0\0\0\0"
     cb4:    00 00 00 00     "\0\0\0\0"
     cb8:    00 00 00 00     "\0\0\0\0"
     cbc:    00 00 00 00     "\0\0\0\0"
     cc0:    00 00 00 00     "\0\0\0\0"
     cc4:    00 00 00 00     "\0\0\0\0"
     cc8:    00 00 00 00     "\0\0\0\0"
     ccc:    00 00 00 00     "\0\0\0\0"
     cd0:    00 00 00 00     "\0\0\0\0"
     cd4:    00 00 00 00     "\0\0\0\0"
     cd8:    00 00 00 00     "\0\0\0\0"
     cdc:    00 00 00 00     "\0\0\0\0"
     ce0:    00 00 00 00     "\0\0\0\0"
     ce4:    00 00 00 00     "\0\0\0\0"
     ce8:    00 00 00 00     "\0\0\0\0"
     cec:    00 00 00 00     "\0\0\0\0"
     cf0:    00 00 00 00     "\0\0\0\0"
     cf4:    00 00 00 00     "\0\0\0\0"
     cf8:    00 00 00 00     "\0\0\0\0"
     cfc:    00 00 00 00     "\0\0\0\0"
     d00:    00 00 00 00     "\0\0\0\0"
     d04:    00 00 00 00     "\0\0\0\0"
     d08:    00 00 00 00     "\0\0\0\0"
     d0c:    00 00 00 00     "\0\0\0\0"
     d10:    00 00 00 00     "\0\0\0\0"
     d14:    00 00 00 00     "\0\0\0\0"
     d18:    00 00 00 00     "\0\0\0\0"
     d1c:    00 00 00 00     "\0\0\0\0"
     d20:    00 00 00 00     "\0\0\0\0"
     d24:    00 00 00 00     "\0\0\0\0"
     d28:    00 00 00 00     "\0\0\0\0"
     d2c:    00 00 00 00     "\0\0\0\0"
     d30:    00 00 00 00     "\0\0\0\0"
     d34:    00 00 00 00     "\0\0\0\0"
     d38:    00 00 00 00     "\0\0\0\0"
     d3c:    00 00 00 00     "\0\0\0\0"
     d40:    00 00 00 00     "\0\0\0\0"
     d44:    00 00 00 00     "\0\0\0\0"
     d48:    00 00 00 00     "\0\0\0\0"
     d4c:    00 00 00 00     "\0\0\0\0"
     d50:    00 00 00 00     "\0\0\0\0"
     d54:    00 00 00 00     "\0\0\0\0"
     d58:    00 00 00 00     "\0\0\0\0"
     d5c:    00 00 00 00     "\0\0\0\0"
     d60:    00 00 00 00     "\0\0\0\0"
     d64:    00 00 00 00     "\0\0\0\0"
     d68:    00 00 00 00     "\0\0\0\0"
     d6c:    00 00 00 00     "\0\0\0\0"
     d70:    00 00 00 00     "\0\0\0\0"
     d74:    00 00 00 00     "\0\0\0\0"
     d78:    00 00 00 00     "\0\0\0\0"
     d7c:    00 00 00 00     "\0\0\0\0"
     d80:    00 00 00 00     "\0\0\0\0"
     d84:    00 00 00 00     "\0\0\0\0"
     d88:    00 00 00 00     "\0\0\0\0"
     d8c:    00 00 00 00     "\0\0\0\0"
     d90:    00 00 00 00     "\0\0\0\0"
     d94:    00 00 00 00     "\0\0\0\0"
     d98:    00 00 00 00     "\0\0\0\0"
     d9c:    00 00 00 00     "\0\0\0\0"
     da0:    00 00 00 00     "\0\0\0\0"
     da4:    00 00 00 00     "\0\0\0\0"
     da8:    00 00 00 00     "\0\0\0\0"
     dac:    00 00 00 00     "\0\0\0\0"
     db0:    00 00 00 00     "\0\0\0\0"
     db4:    00 00 00 00     "\0\0\0\0"

bt_testbox_update_msg_handle:
     db8:    00 00 00 00     "\0\0\0\0"

bt_task_thread:
     dbc:    00 00 00 00     "\0\0\0\0"
     dc0:    00 00 00 00     "\0\0\0\0"
     dc4:    ba 12 e1 01     "\x0a\x02\x01\x01"
     dc8:    be 12 e1 01     "\x0e\x02\x01\x01"
     dcc:    c2 12 e1 01     "\x02\x02\x01\x01"
     dd0:    c6 12 e1 01     "\x06\x02\x01\x01"

hci_param:
     dd4:    00 00 00 00     "\0\0\0\0"
     dd8:    00 00 00 00     "\0\0\0\0"
     ddc:    0c 00 20 31     "\x0c\0 1"
     de0:    0a 00 bb 22     "\n\0\x0b""
     de4:    d6 05 ff ff     "\x06\x05\x0f\x0f"
     de8:    ff 03 80 ff     "\x0f\x03\x00\x0f"
     dec:    ff ff 3f ff     "\x0f\x0f?\x0f"
     df0:    ff 1f f2 0f     "\x0f\x0f\x02\x0f"
     df4:    e8 fe 3f f7     "\x08\x0e?\x07"
     df8:    8d ff 1c 00     "\x0d\x0f\x0c\0"
     dfc:    00 00 7d f7     "\0\0}\x07"
     e00:    ff ff 7f 00     "\x0f\x0f\x0f\0"
     e04:    00 00 00 00     "\0\0\0\0"
     e08:    00 00 00 00     "\0\0\0\0"
     e0c:    00 00 00 00     "\0\0\0\0"
     e10:    00 00 00 00     "\0\0\0\0"
     e14:    00 00 00 00     "\0\0\0\0"
     e18:    00 00 00 00     "\0\0\0\0"
     e1c:    00 00 00 00     "\0\0\0\0"
     e20:    00 00 00 00     "\0\0\0\0"
     e24:    00 00 00 00     "\0\0\0\0"
     e28:    00 00 00 00     "\0\0\0\0"
     e2c:    00 00 00 00     "\0\0\0\0"
     e30:    00 00 00 00     "\0\0\0\0"
     e34:    00 00 00 00     "\0\0\0\0"
     e38:    00 00 00 00     "\0\0\0\0"
     e3c:    00 00 00 00     "\0\0\0\0"
     e40:    00 00 00 00     "\0\0\0\0"
     e44:    00 00 00 57     "\0\0\0W"
     e48:    74 78 a2 5a     "tx\x02Z"
     e4c:    ab bf fe 8d     "\x0b\x0f\x0e\x0d"
     e50:    fa c8 2d 79     "\x0a\x08-y"
     e54:    83 00 00 00     "\x03\0\0\0"
     e58:    00 00 00 00     "\0\0\0\0"
     e5c:    00 00 00 00     "\0\0\0\0"
     e60:    00 00 00 00     "\0\0\0\0"
     e64:    00 00 45 00     "\0\0E\0"
     e68:    00 00 00 00     "\0\0\0\0"
     e6c:    00 00 00 00     "\0\0\0\0"
     e70:    00 00 00 00     "\0\0\0\0"
     e74:    00 00           "\0\0"

BTCTLER_LE_CONTROLLER_DATA_START:
     e76:    00 00           "\0\0"

ll_update_handle:
     e78:    00 00 00 00     "\0\0\0\0"

adv_hdl:
     e7c:    00 00 00 00     "\0\0\0\0"

le_data_length.6:
     e80:    00 00 00 00     "\0\0\0\0"

le_data_length.7:
     e84:    00 00 00 00     "\0\0\0\0"

le_param:
     e88:    00 00 00 00     "\0\0\0\0"
     e8c:    00 00 00 00     "\0\0\0\0"
     e90:    01 02 03 04     "\x01\x02\x03\x04"
     e94:    05 08 00 00     "\x05\b\0\0"
     e98:    00 00 00 00     "\0\0\0\0"
     e9c:    00 00 00 00     "\0\0\0\0"
     ea0:    00 00 00 00     "\0\0\0\0"
     ea4:    00 00 00 00     "\0\0\0\0"
     ea8:    00 00 00 00     "\0\0\0\0"
     eac:    00 00 00 00     "\0\0\0\0"
     eb0:    00 00 06 0f     "\0\0\x06\x0f"
     eb4:    00 09 61 00     "\0\ta\0"
     eb8:    00 00 08 00     "\0\0\b\0"
     ebc:    78 00 72 07     "x\0r\x07"
     ec0:    ff ff ff 1f     "\x0f\x0f\x0f\x0f"
     ec4:    00 00 00 00     "\0\0\0\0"
     ec8:    00 00 00 00     "\0\0\0\0"
     ecc:    00 00 00 00     "\0\0\0\0"
     ed0:    01 00 00 00     "\x01\0\0\0"
     ed4:    00 00 00 00     "\0\0\0\0"
     ed8:    00 00 00 00     "\0\0\0\0"
     edc:    00 00 00 00     "\0\0\0\0"
     ee0:    00 00 00 00     "\0\0\0\0"
     ee4:    00 00 00 00     "\0\0\0\0"
     ee8:    00 00 00 00     "\0\0\0\0"
     eec:    00 00 00 00     "\0\0\0\0"
     ef0:    00 00 00 00     "\0\0\0\0"
     ef4:    00 00 00 00     "\0\0\0\0"
     ef8:    00 00 00 00     "\0\0\0\0"
     efc:    00 00 00 00     "\0\0\0\0"
     f00:    00 00 00 00     "\0\0\0\0"
     f04:    00 00 00 00     "\0\0\0\0"
     f08:    00 00 00 00     "\0\0\0\0"
     f0c:    00 00 00 00     "\0\0\0\0"
     f10:    00 00 00 00     "\0\0\0\0"
     f14:    00 00 00 00     "\0\0\0\0"
     f18:    00 00 00 00     "\0\0\0\0"
     f1c:    00 00 00 19     "\0\0\0\x09"
     f20:    00 00 00 00     "\0\0\0\0"
     f24:    00 00 00 00     "\0\0\0\0"
     f28:    00 01 00 00     "\0\x01\0\0"
     f2c:    00 00 00 00     "\0\0\0\0"
     f30:    00 00 00 00     "\0\0\0\0"

config_hci_ll_param.0:
     f34:    00 00 00 00     "\0\0\0\0"

g_ble_fp:
     f38:    00 00 00 00     "\0\0\0\0"

ble_slot_schedule.credits:
     f3c:    00 00 00 00     "\0\0\0\0"

ble_window_autozoom.widen:
     f40:    00 00 00 00     "\0\0\0\0"

ble_finetimecnt_poweroff_sfr:
     f44:    00 00 00 00     "\0\0\0\0"

g_dut_hdl:
     f48:    00 00 00 00     "\0\0\0\0"

update_conn:
     f4c:    00 00 00 00     "\0\0\0\0"

bt_res_updata_flag:
     f50:    00 00 00 00     "\0\0\0\0"

uboot_revic_handle:
     f54:    00 00 00 00     "\0\0\0\0"

g_lmp_update_start_flag:
     f58:    00 00 00 00     "\0\0\0\0"

g_page:
     f5c:    00 00 00 00     "\0\0\0\0"

g_page_scan:
     f60:    00 00 00 00     "\0\0\0\0"

inquiry_scan:
     f64:    00 00 00 00     "\0\0\0\0"

update_data_start:
     f68:    05 0a 06 05     "\x05\n\x06\x05"
     f6c:    0a 06 06 0a     "\n\x06\x06\n"
     f70:    06 07 0a 06     "\x06\x07\n\x06"
     f74:    0b 0c 07 0f     "\x0b\x0c\x07\x0f"
     f78:    0f 07           "\x0f\x07"

sysvdd_vdc13_table:
     f7a:    06 06 06 06     "\x06\x06\x06\x06"
     f7e:    06 06 06 06     "\x06\x06\x06\x06"
     f82:    06 06 07 07     "\x06\x06\x07\x07"
     f86:    07 07 07 07     "\x07\x07\x07\x07"
     f8a:    00 00           "\0\0"

sys_clock_limit:
     f8c:    00 6c dc 02     "\0l\x0c\x02"
     f90:    00 36 6e 01     "\06n\x01"
     f94:    00 1b b7 00     "\0\x0b\x07\0"
     f98:    80 f0 fa 02     "\x00\x00\x0a\x02"
     f9c:    00 36 6e 01     "\06n\x01"
     fa0:    00 90 d0 03     "\0\x00\x00\x03"
     fa4:    00 48 e8 01     "\0H\x08\x01"
     fa8:    80 a8 12 01     "\x00\x08\x02\x01"
     fac:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fb0:    00 36 6e 01     "\06n\x01"
     fb4:    00 6c dc 02     "\0l\x0c\x02"
     fb8:    00 6c dc 02     "\0l\x0c\x02"
     fbc:    00 36 6e 01     "\06n\x01"
     fc0:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fc4:    00 36 6e 01     "\06n\x01"
     fc8:    00 90 d0 03     "\0\x00\x00\x03"
     fcc:    00 90 d0 03     "\0\x00\x00\x03"
     fd0:    00 48 e8 01     "\0H\x08\x01"
     fd4:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fd8:    00 36 6e 01     "\06n\x01"
     fdc:    00 d8 b8 05     "\0\x08\x08\x05"
     fe0:    00 d8 b8 05     "\0\x08\x08\x05"
     fe4:    00 6c dc 02     "\0l\x0c\x02"
     fe8:    80 f0 fa 02     "\x00\x00\x0a\x02"
     fec:    00 36 6e 01     "\06n\x01"
     ff0:    00 20 a1 07     "\0 \x01\x07"
     ff4:    00 20 a1 07     "\0 \x01\x07"
     ff8:    00 b4 c4 04     "\0\x04\x04\x04"
     ffc:    80 f0 fa 02     "\x00\x00\x0a\x02"
    1000:    00 36 6e 01     "\06n\x01"

driver_data_end:
    1004:    00 00 00 00     "\0\0\0\0"
    1008:    00 00 00 00     "\0\0\0\0"
    100c:    00 00 00 00     "\0\0\0\0"
    1010:    00 00 00 00     "\0\0\0\0"
    1014:    00 00 00 00     "\0\0\0\0"
    1018:    00 00 00 00     "\0\0\0\0"
    101c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .irq_stack:
stack_magic:
    1020:    00 00 00 00     "\0\0\0\0"
    1024:    00 00 00 00     "\0\0\0\0"
    1028:    00 00 00 00     "\0\0\0\0"
    102c:    00 00 00 00     "\0\0\0\0"

_cpu0_sstack_begin:
    1030:    00 00 00 00     "\0\0\0\0"
    1034:    00 00 00 00     "\0\0\0\0"
    1038:    00 00 00 00     "\0\0\0\0"
    103c:    00 00 00 00     "\0\0\0\0"
    1040:    00 00 00 00     "\0\0\0\0"
    1044:    00 00 00 00     "\0\0\0\0"
    1048:    00 00 00 00     "\0\0\0\0"
    104c:    00 00 00 00     "\0\0\0\0"
    1050:    00 00 00 00     "\0\0\0\0"
    1054:    00 00 00 00     "\0\0\0\0"
    1058:    00 00 00 00     "\0\0\0\0"
    105c:    00 00 00 00     "\0\0\0\0"
    1060:    00 00 00 00     "\0\0\0\0"
    1064:    00 00 00 00     "\0\0\0\0"
    1068:    00 00 00 00     "\0\0\0\0"
    106c:    00 00 00 00     "\0\0\0\0"
    1070:    00 00 00 00     "\0\0\0\0"
    1074:    00 00 00 00     "\0\0\0\0"
    1078:    00 00 00 00     "\0\0\0\0"
    107c:    00 00 00 00     "\0\0\0\0"
    1080:    00 00 00 00     "\0\0\0\0"
    1084:    00 00 00 00     "\0\0\0\0"
    1088:    00 00 00 00     "\0\0\0\0"
    108c:    00 00 00 00     "\0\0\0\0"
    1090:    00 00 00 00     "\0\0\0\0"
    1094:    00 00 00 00     "\0\0\0\0"
    1098:    00 00 00 00     "\0\0\0\0"
    109c:    00 00 00 00     "\0\0\0\0"
    10a0:    00 00 00 00     "\0\0\0\0"
    10a4:    00 00 00 00     "\0\0\0\0"
    10a8:    00 00 00 00     "\0\0\0\0"
    10ac:    00 00 00 00     "\0\0\0\0"
    10b0:    00 00 00 00     "\0\0\0\0"
    10b4:    00 00 00 00     "\0\0\0\0"
    10b8:    00 00 00 00     "\0\0\0\0"
    10bc:    00 00 00 00     "\0\0\0\0"
    10c0:    00 00 00 00     "\0\0\0\0"
    10c4:    00 00 00 00     "\0\0\0\0"
    10c8:    00 00 00 00     "\0\0\0\0"
    10cc:    00 00 00 00     "\0\0\0\0"
    10d0:    00 00 00 00     "\0\0\0\0"
    10d4:    00 00 00 00     "\0\0\0\0"
    10d8:    00 00 00 00     "\0\0\0\0"
    10dc:    00 00 00 00     "\0\0\0\0"
    10e0:    00 00 00 00     "\0\0\0\0"
    10e4:    00 00 00 00     "\0\0\0\0"
    10e8:    00 00 00 00     "\0\0\0\0"
    10ec:    00 00 00 00     "\0\0\0\0"
    10f0:    00 00 00 00     "\0\0\0\0"
    10f4:    00 00 00 00     "\0\0\0\0"
    10f8:    00 00 00 00     "\0\0\0\0"
    10fc:    00 00 00 00     "\0\0\0\0"
    1100:    00 00 00 00     "\0\0\0\0"
    1104:    00 00 00 00     "\0\0\0\0"
    1108:    00 00 00 00     "\0\0\0\0"
    110c:    00 00 00 00     "\0\0\0\0"
    1110:    00 00 00 00     "\0\0\0\0"
    1114:    00 00 00 00     "\0\0\0\0"
    1118:    00 00 00 00     "\0\0\0\0"
    111c:    00 00 00 00     "\0\0\0\0"
    1120:    00 00 00 00     "\0\0\0\0"
    1124:    00 00 00 00     "\0\0\0\0"
    1128:    00 00 00 00     "\0\0\0\0"
    112c:    00 00 00 00     "\0\0\0\0"
    1130:    00 00 00 00     "\0\0\0\0"
    1134:    00 00 00 00     "\0\0\0\0"
    1138:    00 00 00 00     "\0\0\0\0"
    113c:    00 00 00 00     "\0\0\0\0"
    1140:    00 00 00 00     "\0\0\0\0"
    1144:    00 00 00 00     "\0\0\0\0"
    1148:    00 00 00 00     "\0\0\0\0"
    114c:    00 00 00 00     "\0\0\0\0"
    1150:    00 00 00 00     "\0\0\0\0"
    1154:    00 00 00 00     "\0\0\0\0"
    1158:    00 00 00 00     "\0\0\0\0"
    115c:    00 00 00 00     "\0\0\0\0"
    1160:    00 00 00 00     "\0\0\0\0"
    1164:    00 00 00 00     "\0\0\0\0"
    1168:    00 00 00 00     "\0\0\0\0"
    116c:    00 00 00 00     "\0\0\0\0"
    1170:    00 00 00 00     "\0\0\0\0"
    1174:    00 00 00 00     "\0\0\0\0"
    1178:    00 00 00 00     "\0\0\0\0"
    117c:    00 00 00 00     "\0\0\0\0"
    1180:    00 00 00 00     "\0\0\0\0"
    1184:    00 00 00 00     "\0\0\0\0"
    1188:    00 00 00 00     "\0\0\0\0"
    118c:    00 00 00 00     "\0\0\0\0"
    1190:    00 00 00 00     "\0\0\0\0"
    1194:    00 00 00 00     "\0\0\0\0"
    1198:    00 00 00 00     "\0\0\0\0"
    119c:    00 00 00 00     "\0\0\0\0"
    11a0:    00 00 00 00     "\0\0\0\0"
    11a4:    00 00 00 00     "\0\0\0\0"
    11a8:    00 00 00 00     "\0\0\0\0"
    11ac:    00 00 00 00     "\0\0\0\0"
    11b0:    00 00 00 00     "\0\0\0\0"
    11b4:    00 00 00 00     "\0\0\0\0"
    11b8:    00 00 00 00     "\0\0\0\0"
    11bc:    00 00 00 00     "\0\0\0\0"
    11c0:    00 00 00 00     "\0\0\0\0"
    11c4:    00 00 00 00     "\0\0\0\0"
    11c8:    00 00 00 00     "\0\0\0\0"
    11cc:    00 00 00 00     "\0\0\0\0"
    11d0:    00 00 00 00     "\0\0\0\0"
    11d4:    00 00 00 00     "\0\0\0\0"
    11d8:    00 00 00 00     "\0\0\0\0"
    11dc:    00 00 00 00     "\0\0\0\0"
    11e0:    00 00 00 00     "\0\0\0\0"
    11e4:    00 00 00 00     "\0\0\0\0"
    11e8:    00 00 00 00     "\0\0\0\0"
    11ec:    00 00 00 00     "\0\0\0\0"
    11f0:    00 00 00 00     "\0\0\0\0"
    11f4:    00 00 00 00     "\0\0\0\0"
    11f8:    00 00 00 00     "\0\0\0\0"
    11fc:    00 00 00 00     "\0\0\0\0"
    1200:    00 00 00 00     "\0\0\0\0"
    1204:    00 00 00 00     "\0\0\0\0"
    1208:    00 00 00 00     "\0\0\0\0"
    120c:    00 00 00 00     "\0\0\0\0"
    1210:    00 00 00 00     "\0\0\0\0"
    1214:    00 00 00 00     "\0\0\0\0"
    1218:    00 00 00 00     "\0\0\0\0"
    121c:    00 00 00 00     "\0\0\0\0"
    1220:    00 00 00 00     "\0\0\0\0"
    1224:    00 00 00 00     "\0\0\0\0"
    1228:    00 00 00 00     "\0\0\0\0"
    122c:    00 00 00 00     "\0\0\0\0"
    1230:    00 00 00 00     "\0\0\0\0"
    1234:    00 00 00 00     "\0\0\0\0"
    1238:    00 00 00 00     "\0\0\0\0"
    123c:    00 00 00 00     "\0\0\0\0"
    1240:    00 00 00 00     "\0\0\0\0"
    1244:    00 00 00 00     "\0\0\0\0"
    1248:    00 00 00 00     "\0\0\0\0"
    124c:    00 00 00 00     "\0\0\0\0"
    1250:    00 00 00 00     "\0\0\0\0"
    1254:    00 00 00 00     "\0\0\0\0"
    1258:    00 00 00 00     "\0\0\0\0"
    125c:    00 00 00 00     "\0\0\0\0"
    1260:    00 00 00 00     "\0\0\0\0"
    1264:    00 00 00 00     "\0\0\0\0"
    1268:    00 00 00 00     "\0\0\0\0"
    126c:    00 00 00 00     "\0\0\0\0"
    1270:    00 00 00 00     "\0\0\0\0"
    1274:    00 00 00 00     "\0\0\0\0"
    1278:    00 00 00 00     "\0\0\0\0"
    127c:    00 00 00 00     "\0\0\0\0"
    1280:    00 00 00 00     "\0\0\0\0"
    1284:    00 00 00 00     "\0\0\0\0"
    1288:    00 00 00 00     "\0\0\0\0"
    128c:    00 00 00 00     "\0\0\0\0"
    1290:    00 00 00 00     "\0\0\0\0"
    1294:    00 00 00 00     "\0\0\0\0"
    1298:    00 00 00 00     "\0\0\0\0"
    129c:    00 00 00 00     "\0\0\0\0"
    12a0:    00 00 00 00     "\0\0\0\0"
    12a4:    00 00 00 00     "\0\0\0\0"
    12a8:    00 00 00 00     "\0\0\0\0"
    12ac:    00 00 00 00     "\0\0\0\0"
    12b0:    00 00 00 00     "\0\0\0\0"
    12b4:    00 00 00 00     "\0\0\0\0"
    12b8:    00 00 00 00     "\0\0\0\0"
    12bc:    00 00 00 00     "\0\0\0\0"
    12c0:    00 00 00 00     "\0\0\0\0"
    12c4:    00 00 00 00     "\0\0\0\0"
    12c8:    00 00 00 00     "\0\0\0\0"
    12cc:    00 00 00 00     "\0\0\0\0"
    12d0:    00 00 00 00     "\0\0\0\0"
    12d4:    00 00 00 00     "\0\0\0\0"
    12d8:    00 00 00 00     "\0\0\0\0"
    12dc:    00 00 00 00     "\0\0\0\0"
    12e0:    00 00 00 00     "\0\0\0\0"
    12e4:    00 00 00 00     "\0\0\0\0"
    12e8:    00 00 00 00     "\0\0\0\0"
    12ec:    00 00 00 00     "\0\0\0\0"
    12f0:    00 00 00 00     "\0\0\0\0"
    12f4:    00 00 00 00     "\0\0\0\0"
    12f8:    00 00 00 00     "\0\0\0\0"
    12fc:    00 00 00 00     "\0\0\0\0"
    1300:    00 00 00 00     "\0\0\0\0"
    1304:    00 00 00 00     "\0\0\0\0"
    1308:    00 00 00 00     "\0\0\0\0"
    130c:    00 00 00 00     "\0\0\0\0"
    1310:    00 00 00 00     "\0\0\0\0"
    1314:    00 00 00 00     "\0\0\0\0"
    1318:    00 00 00 00     "\0\0\0\0"
    131c:    00 00 00 00     "\0\0\0\0"
    1320:    00 00 00 00     "\0\0\0\0"
    1324:    00 00 00 00     "\0\0\0\0"
    1328:    00 00 00 00     "\0\0\0\0"
    132c:    00 00 00 00     "\0\0\0\0"
    1330:    00 00 00 00     "\0\0\0\0"
    1334:    00 00 00 00     "\0\0\0\0"
    1338:    00 00 00 00     "\0\0\0\0"
    133c:    00 00 00 00     "\0\0\0\0"
    1340:    00 00 00 00     "\0\0\0\0"
    1344:    00 00 00 00     "\0\0\0\0"
    1348:    00 00 00 00     "\0\0\0\0"
    134c:    00 00 00 00     "\0\0\0\0"
    1350:    00 00 00 00     "\0\0\0\0"
    1354:    00 00 00 00     "\0\0\0\0"
    1358:    00 00 00 00     "\0\0\0\0"
    135c:    00 00 00 00     "\0\0\0\0"
    1360:    00 00 00 00     "\0\0\0\0"
    1364:    00 00 00 00     "\0\0\0\0"
    1368:    00 00 00 00     "\0\0\0\0"
    136c:    00 00 00 00     "\0\0\0\0"
    1370:    00 00 00 00     "\0\0\0\0"
    1374:    00 00 00 00     "\0\0\0\0"
    1378:    00 00 00 00     "\0\0\0\0"
    137c:    00 00 00 00     "\0\0\0\0"
    1380:    00 00 00 00     "\0\0\0\0"
    1384:    00 00 00 00     "\0\0\0\0"
    1388:    00 00 00 00     "\0\0\0\0"
    138c:    00 00 00 00     "\0\0\0\0"
    1390:    00 00 00 00     "\0\0\0\0"
    1394:    00 00 00 00     "\0\0\0\0"
    1398:    00 00 00 00     "\0\0\0\0"
    139c:    00 00 00 00     "\0\0\0\0"
    13a0:    00 00 00 00     "\0\0\0\0"
    13a4:    00 00 00 00     "\0\0\0\0"
    13a8:    00 00 00 00     "\0\0\0\0"
    13ac:    00 00 00 00     "\0\0\0\0"
    13b0:    00 00 00 00     "\0\0\0\0"
    13b4:    00 00 00 00     "\0\0\0\0"
    13b8:    00 00 00 00     "\0\0\0\0"
    13bc:    00 00 00 00     "\0\0\0\0"
    13c0:    00 00 00 00     "\0\0\0\0"
    13c4:    00 00 00 00     "\0\0\0\0"
    13c8:    00 00 00 00     "\0\0\0\0"
    13cc:    00 00 00 00     "\0\0\0\0"
    13d0:    00 00 00 00     "\0\0\0\0"
    13d4:    00 00 00 00     "\0\0\0\0"
    13d8:    00 00 00 00     "\0\0\0\0"
    13dc:    00 00 00 00     "\0\0\0\0"
    13e0:    00 00 00 00     "\0\0\0\0"
    13e4:    00 00 00 00     "\0\0\0\0"
    13e8:    00 00 00 00     "\0\0\0\0"
    13ec:    00 00 00 00     "\0\0\0\0"
    13f0:    00 00 00 00     "\0\0\0\0"
    13f4:    00 00 00 00     "\0\0\0\0"
    13f8:    00 00 00 00     "\0\0\0\0"
    13fc:    00 00 00 00     "\0\0\0\0"
    1400:    00 00 00 00     "\0\0\0\0"
    1404:    00 00 00 00     "\0\0\0\0"
    1408:    00 00 00 00     "\0\0\0\0"
    140c:    00 00 00 00     "\0\0\0\0"
    1410:    00 00 00 00     "\0\0\0\0"
    1414:    00 00 00 00     "\0\0\0\0"
    1418:    00 00 00 00     "\0\0\0\0"
    141c:    00 00 00 00     "\0\0\0\0"
    1420:    00 00 00 00     "\0\0\0\0"
    1424:    00 00 00 00     "\0\0\0\0"
    1428:    00 00 00 00     "\0\0\0\0"
    142c:    00 00 00 00     "\0\0\0\0"
    1430:    00 00 00 00     "\0\0\0\0"
    1434:    00 00 00 00     "\0\0\0\0"
    1438:    00 00 00 00     "\0\0\0\0"
    143c:    00 00 00 00     "\0\0\0\0"
    1440:    00 00 00 00     "\0\0\0\0"
    1444:    00 00 00 00     "\0\0\0\0"
    1448:    00 00 00 00     "\0\0\0\0"
    144c:    00 00 00 00     "\0\0\0\0"
    1450:    00 00 00 00     "\0\0\0\0"
    1454:    00 00 00 00     "\0\0\0\0"
    1458:    00 00 00 00     "\0\0\0\0"
    145c:    00 00 00 00     "\0\0\0\0"
    1460:    00 00 00 00     "\0\0\0\0"
    1464:    00 00 00 00     "\0\0\0\0"
    1468:    00 00 00 00     "\0\0\0\0"
    146c:    00 00 00 00     "\0\0\0\0"
    1470:    00 00 00 00     "\0\0\0\0"
    1474:    00 00 00 00     "\0\0\0\0"
    1478:    00 00 00 00     "\0\0\0\0"
    147c:    00 00 00 00     "\0\0\0\0"
    1480:    00 00 00 00     "\0\0\0\0"
    1484:    00 00 00 00     "\0\0\0\0"
    1488:    00 00 00 00     "\0\0\0\0"
    148c:    00 00 00 00     "\0\0\0\0"
    1490:    00 00 00 00     "\0\0\0\0"
    1494:    00 00 00 00     "\0\0\0\0"
    1498:    00 00 00 00     "\0\0\0\0"
    149c:    00 00 00 00     "\0\0\0\0"
    14a0:    00 00 00 00     "\0\0\0\0"
    14a4:    00 00 00 00     "\0\0\0\0"
    14a8:    00 00 00 00     "\0\0\0\0"
    14ac:    00 00 00 00     "\0\0\0\0"
    14b0:    00 00 00 00     "\0\0\0\0"
    14b4:    00 00 00 00     "\0\0\0\0"
    14b8:    00 00 00 00     "\0\0\0\0"
    14bc:    00 00 00 00     "\0\0\0\0"
    14c0:    00 00 00 00     "\0\0\0\0"
    14c4:    00 00 00 00     "\0\0\0\0"
    14c8:    00 00 00 00     "\0\0\0\0"
    14cc:    00 00 00 00     "\0\0\0\0"
    14d0:    00 00 00 00     "\0\0\0\0"
    14d4:    00 00 00 00     "\0\0\0\0"
    14d8:    00 00 00 00     "\0\0\0\0"
    14dc:    00 00 00 00     "\0\0\0\0"
    14e0:    00 00 00 00     "\0\0\0\0"
    14e4:    00 00 00 00     "\0\0\0\0"
    14e8:    00 00 00 00     "\0\0\0\0"
    14ec:    00 00 00 00     "\0\0\0\0"
    14f0:    00 00 00 00     "\0\0\0\0"
    14f4:    00 00 00 00     "\0\0\0\0"
    14f8:    00 00 00 00     "\0\0\0\0"
    14fc:    00 00 00 00     "\0\0\0\0"
    1500:    00 00 00 00     "\0\0\0\0"
    1504:    00 00 00 00     "\0\0\0\0"
    1508:    00 00 00 00     "\0\0\0\0"
    150c:    00 00 00 00     "\0\0\0\0"
    1510:    00 00 00 00     "\0\0\0\0"
    1514:    00 00 00 00     "\0\0\0\0"
    1518:    00 00 00 00     "\0\0\0\0"
    151c:    00 00 00 00     "\0\0\0\0"
    1520:    00 00 00 00     "\0\0\0\0"
    1524:    00 00 00 00     "\0\0\0\0"
    1528:    00 00 00 00     "\0\0\0\0"
    152c:    00 00 00 00     "\0\0\0\0"
    1530:    00 00 00 00     "\0\0\0\0"
    1534:    00 00 00 00     "\0\0\0\0"
    1538:    00 00 00 00     "\0\0\0\0"
    153c:    00 00 00 00     "\0\0\0\0"
    1540:    00 00 00 00     "\0\0\0\0"
    1544:    00 00 00 00     "\0\0\0\0"
    1548:    00 00 00 00     "\0\0\0\0"
    154c:    00 00 00 00     "\0\0\0\0"
    1550:    00 00 00 00     "\0\0\0\0"
    1554:    00 00 00 00     "\0\0\0\0"
    1558:    00 00 00 00     "\0\0\0\0"
    155c:    00 00 00 00     "\0\0\0\0"
    1560:    00 00 00 00     "\0\0\0\0"
    1564:    00 00 00 00     "\0\0\0\0"
    1568:    00 00 00 00     "\0\0\0\0"
    156c:    00 00 00 00     "\0\0\0\0"
    1570:    00 00 00 00     "\0\0\0\0"
    1574:    00 00 00 00     "\0\0\0\0"
    1578:    00 00 00 00     "\0\0\0\0"
    157c:    00 00 00 00     "\0\0\0\0"
    1580:    00 00 00 00     "\0\0\0\0"
    1584:    00 00 00 00     "\0\0\0\0"
    1588:    00 00 00 00     "\0\0\0\0"
    158c:    00 00 00 00     "\0\0\0\0"
    1590:    00 00 00 00     "\0\0\0\0"
    1594:    00 00 00 00     "\0\0\0\0"
    1598:    00 00 00 00     "\0\0\0\0"
    159c:    00 00 00 00     "\0\0\0\0"
    15a0:    00 00 00 00     "\0\0\0\0"
    15a4:    00 00 00 00     "\0\0\0\0"
    15a8:    00 00 00 00     "\0\0\0\0"
    15ac:    00 00 00 00     "\0\0\0\0"
    15b0:    00 00 00 00     "\0\0\0\0"
    15b4:    00 00 00 00     "\0\0\0\0"
    15b8:    00 00 00 00     "\0\0\0\0"
    15bc:    00 00 00 00     "\0\0\0\0"
    15c0:    00 00 00 00     "\0\0\0\0"
    15c4:    00 00 00 00     "\0\0\0\0"
    15c8:    00 00 00 00     "\0\0\0\0"
    15cc:    00 00 00 00     "\0\0\0\0"
    15d0:    00 00 00 00     "\0\0\0\0"
    15d4:    00 00 00 00     "\0\0\0\0"
    15d8:    00 00 00 00     "\0\0\0\0"
    15dc:    00 00 00 00     "\0\0\0\0"
    15e0:    00 00 00 00     "\0\0\0\0"
    15e4:    00 00 00 00     "\0\0\0\0"
    15e8:    00 00 00 00     "\0\0\0\0"
    15ec:    00 00 00 00     "\0\0\0\0"
    15f0:    00 00 00 00     "\0\0\0\0"
    15f4:    00 00 00 00     "\0\0\0\0"
    15f8:    00 00 00 00     "\0\0\0\0"
    15fc:    00 00 00 00     "\0\0\0\0"
    1600:    00 00 00 00     "\0\0\0\0"
    1604:    00 00 00 00     "\0\0\0\0"
    1608:    00 00 00 00     "\0\0\0\0"
    160c:    00 00 00 00     "\0\0\0\0"
    1610:    00 00 00 00     "\0\0\0\0"
    1614:    00 00 00 00     "\0\0\0\0"
    1618:    00 00 00 00     "\0\0\0\0"
    161c:    00 00 00 00     "\0\0\0\0"
    1620:    00 00 00 00     "\0\0\0\0"
    1624:    00 00 00 00     "\0\0\0\0"
    1628:    00 00 00 00     "\0\0\0\0"
    162c:    00 00 00 00     "\0\0\0\0"
    1630:    00 00 00 00     "\0\0\0\0"
    1634:    00 00 00 00     "\0\0\0\0"
    1638:    00 00 00 00     "\0\0\0\0"
    163c:    00 00 00 00     "\0\0\0\0"
    1640:    00 00 00 00     "\0\0\0\0"
    1644:    00 00 00 00     "\0\0\0\0"
    1648:    00 00 00 00     "\0\0\0\0"
    164c:    00 00 00 00     "\0\0\0\0"
    1650:    00 00 00 00     "\0\0\0\0"
    1654:    00 00 00 00     "\0\0\0\0"
    1658:    00 00 00 00     "\0\0\0\0"
    165c:    00 00 00 00     "\0\0\0\0"
    1660:    00 00 00 00     "\0\0\0\0"
    1664:    00 00 00 00     "\0\0\0\0"
    1668:    00 00 00 00     "\0\0\0\0"
    166c:    00 00 00 00     "\0\0\0\0"
    1670:    00 00 00 00     "\0\0\0\0"
    1674:    00 00 00 00     "\0\0\0\0"
    1678:    00 00 00 00     "\0\0\0\0"
    167c:    00 00 00 00     "\0\0\0\0"
    1680:    00 00 00 00     "\0\0\0\0"
    1684:    00 00 00 00     "\0\0\0\0"
    1688:    00 00 00 00     "\0\0\0\0"
    168c:    00 00 00 00     "\0\0\0\0"
    1690:    00 00 00 00     "\0\0\0\0"
    1694:    00 00 00 00     "\0\0\0\0"
    1698:    00 00 00 00     "\0\0\0\0"
    169c:    00 00 00 00     "\0\0\0\0"
    16a0:    00 00 00 00     "\0\0\0\0"
    16a4:    00 00 00 00     "\0\0\0\0"
    16a8:    00 00 00 00     "\0\0\0\0"
    16ac:    00 00 00 00     "\0\0\0\0"
    16b0:    00 00 00 00     "\0\0\0\0"
    16b4:    00 00 00 00     "\0\0\0\0"
    16b8:    00 00 00 00     "\0\0\0\0"
    16bc:    00 00 00 00     "\0\0\0\0"
    16c0:    00 00 00 00     "\0\0\0\0"
    16c4:    00 00 00 00     "\0\0\0\0"
    16c8:    00 00 00 00     "\0\0\0\0"
    16cc:    00 00 00 00     "\0\0\0\0"
    16d0:    00 00 00 00     "\0\0\0\0"
    16d4:    00 00 00 00     "\0\0\0\0"
    16d8:    00 00 00 00     "\0\0\0\0"
    16dc:    00 00 00 00     "\0\0\0\0"
    16e0:    00 00 00 00     "\0\0\0\0"
    16e4:    00 00 00 00     "\0\0\0\0"
    16e8:    00 00 00 00     "\0\0\0\0"
    16ec:    00 00 00 00     "\0\0\0\0"
    16f0:    00 00 00 00     "\0\0\0\0"
    16f4:    00 00 00 00     "\0\0\0\0"
    16f8:    00 00 00 00     "\0\0\0\0"
    16fc:    00 00 00 00     "\0\0\0\0"
    1700:    00 00 00 00     "\0\0\0\0"
    1704:    00 00 00 00     "\0\0\0\0"
    1708:    00 00 00 00     "\0\0\0\0"
    170c:    00 00 00 00     "\0\0\0\0"
    1710:    00 00 00 00     "\0\0\0\0"
    1714:    00 00 00 00     "\0\0\0\0"
    1718:    00 00 00 00     "\0\0\0\0"
    171c:    00 00 00 00     "\0\0\0\0"
    1720:    00 00 00 00     "\0\0\0\0"
    1724:    00 00 00 00     "\0\0\0\0"
    1728:    00 00 00 00     "\0\0\0\0"
    172c:    00 00 00 00     "\0\0\0\0"
    1730:    00 00 00 00     "\0\0\0\0"
    1734:    00 00 00 00     "\0\0\0\0"
    1738:    00 00 00 00     "\0\0\0\0"
    173c:    00 00 00 00     "\0\0\0\0"
    1740:    00 00 00 00     "\0\0\0\0"
    1744:    00 00 00 00     "\0\0\0\0"
    1748:    00 00 00 00     "\0\0\0\0"
    174c:    00 00 00 00     "\0\0\0\0"
    1750:    00 00 00 00     "\0\0\0\0"
    1754:    00 00 00 00     "\0\0\0\0"
    1758:    00 00 00 00     "\0\0\0\0"
    175c:    00 00 00 00     "\0\0\0\0"
    1760:    00 00 00 00     "\0\0\0\0"
    1764:    00 00 00 00     "\0\0\0\0"
    1768:    00 00 00 00     "\0\0\0\0"
    176c:    00 00 00 00     "\0\0\0\0"
    1770:    00 00 00 00     "\0\0\0\0"
    1774:    00 00 00 00     "\0\0\0\0"
    1778:    00 00 00 00     "\0\0\0\0"
    177c:    00 00 00 00     "\0\0\0\0"
    1780:    00 00 00 00     "\0\0\0\0"
    1784:    00 00 00 00     "\0\0\0\0"
    1788:    00 00 00 00     "\0\0\0\0"
    178c:    00 00 00 00     "\0\0\0\0"
    1790:    00 00 00 00     "\0\0\0\0"
    1794:    00 00 00 00     "\0\0\0\0"
    1798:    00 00 00 00     "\0\0\0\0"
    179c:    00 00 00 00     "\0\0\0\0"
    17a0:    00 00 00 00     "\0\0\0\0"
    17a4:    00 00 00 00     "\0\0\0\0"
    17a8:    00 00 00 00     "\0\0\0\0"
    17ac:    00 00 00 00     "\0\0\0\0"
    17b0:    00 00 00 00     "\0\0\0\0"
    17b4:    00 00 00 00     "\0\0\0\0"
    17b8:    00 00 00 00     "\0\0\0\0"
    17bc:    00 00 00 00     "\0\0\0\0"
    17c0:    00 00 00 00     "\0\0\0\0"
    17c4:    00 00 00 00     "\0\0\0\0"
    17c8:    00 00 00 00     "\0\0\0\0"
    17cc:    00 00 00 00     "\0\0\0\0"
    17d0:    00 00 00 00     "\0\0\0\0"
    17d4:    00 00 00 00     "\0\0\0\0"
    17d8:    00 00 00 00     "\0\0\0\0"
    17dc:    00 00 00 00     "\0\0\0\0"
    17e0:    00 00 00 00     "\0\0\0\0"
    17e4:    00 00 00 00     "\0\0\0\0"
    17e8:    00 00 00 00     "\0\0\0\0"
    17ec:    00 00 00 00     "\0\0\0\0"
    17f0:    00 00 00 00     "\0\0\0\0"
    17f4:    00 00 00 00     "\0\0\0\0"
    17f8:    00 00 00 00     "\0\0\0\0"
    17fc:    00 00 00 00     "\0\0\0\0"
    1800:    00 00 00 00     "\0\0\0\0"
    1804:    00 00 00 00     "\0\0\0\0"
    1808:    00 00 00 00     "\0\0\0\0"
    180c:    00 00 00 00     "\0\0\0\0"
    1810:    00 00 00 00     "\0\0\0\0"
    1814:    00 00 00 00     "\0\0\0\0"
    1818:    00 00 00 00     "\0\0\0\0"
    181c:    00 00 00 00     "\0\0\0\0"
    1820:    00 00 00 00     "\0\0\0\0"
    1824:    00 00 00 00     "\0\0\0\0"
    1828:    00 00 00 00     "\0\0\0\0"
    182c:    00 00 00 00     "\0\0\0\0"

stack_magic0:
    1830:    00 00 00 00     "\0\0\0\0"
    1834:    00 00 00 00     "\0\0\0\0"
    1838:    00 00 00 00     "\0\0\0\0"
    183c:    00 00 00 00     "\0\0\0\0"
Disassembly of section .bss:
report_bss_begin:

hci_event_callback_registration:

le_stack_pool:

l2cap_stack:

le_l2cap_event_packet_handler:

hci_event_callback_registration.1946:

l2cap_fixed_channels:

__user_info:

att_s_hdl:

profile_l2cap_hdl:

btstack_stack:

profile_le_pool_hdl:

btstack_global_info:

att_global_info:

gatt_client_global_info:

system_bss_start:

bt_test_status:

__errno.err:

mutex:

hdl:

port_edge_wakeup_callback:

aport_edge_wakeup_callback:

lrc.4:

lrc.2:

mutex.1521:

start_app.app_msg_type:

highCurrentTCB:

sys_low_power:

event:

timer_pool:

bin_cfg:

btif_cfg:

prev_half_msec:

link:

acl_tx_bulk_sem:

gatt_client_conn_handle:

gatt_server_conn_handle_state:

cbk_event_type:

ota_status:

adv_name_ok:

sfc_is_busy:

p2m_ie:

flash_ie_bak:

flash_ie_bakh:

flash_pu_bak:

flash_pd_bak:

flash_out_bak:

flash_dir_bak:

sys_low_power_request:

bt_seek_type:

bt_seek_type.6527:

g_update_err_code:

fw_flash_bin_num:

lc_sector_align_mode:

_adc_res:

gatt_server_conn_handle:

timerID:

runCounter:

runTime:

timerID.752:

trans_con_handle:

global_id:

g_bt_read_len:

adc_scan.adc_sample_flag:

gatt_control_block:

gatt_ram_buffer:

ble_update_ready_jump_flag:

g_updata_flag:

is_app_spple_active:

enter_btstack_num:

pwm:

trans_connection_update_enable:

uart_sfr.0:

uart_sfr.1:

sys_div_bak:

reset_source_value:

tmr_sfr.0:

tmr_sfr.1:

tmr_sfr.2:

timer1_isr.cnt1:

hdl.5.1450:

usr_jiffies:

delay_cnt:

hdl.4:

hdl.0.1455:

hdl.6:

lrc.0:

lrc.6:

lrc.3:

lrc.5:

memory_init.init:

last_otcb:

last_tcb:

compensation:

tick_cnt:

pxEnd.1581:

xMinimumEverFreeBytesRemaining.1594:

xFreeBytesRemaining.1595:

hdl.0.5783:

hdl.2.5784:

bt_file_offset:

bt_read_buf:

lmp_ch_update_sleep_hdl:

lmp_ch_update_resume_hdl:

bt_file_offset.6526:

ble_update_ctrl.0:

ble_update_ctrl.2:

ble_update_ctrl.1:

ble_update_ctrl.3:

ble_ch_update_sleep_hdl:

bt_res_update_flag:

ble_ch_update_resume_hdl:

p_update_param:

p_update_op:

lc_boot_offset:

vm_poweroff_sfc_info.0:

vm_poweroff_sfc_info.1:

bt_mac_addr_for_testbox:

xStart.1584:

succ_report:

nor_sdfile_hdl:

burn_code:

usr_timer_head:

vbat_value_array:

vbg_value_array:

charge_var:

norflash_dev:

_sdfile_handl:

trans_adv_data:

trans_scan_rsp_data:

trans_server_adv_config:

app_var:

server_s_hdl:

flash_info:

sfc_norflash_mutex:

sys_timer_sem:

pmu_voltage:

lrc.7:

adc_queue:

stack_mem:

vm_obj:

btctler_bss_start:

tws_bulk_pool_end:

lnav_flag:

ldo_trim_res:

rf_pwr_off_info_p:

ble_pwr_off_store:

h4_transport:

__h4_send_packet:

hdl.3994:

hci_cmd_tmp_buff:

ll_hdl:

pEvent_buf_static:

ll_error_code:

adv_param:

adv_data.5061:

scan_resp_data:

bb_hdl:

sche_lock:

bredr_link_v:

lmp_acl_link:

update_bss_start:

curr_loader_file_head:

fw_flash_bin_head:

update_bss_end:

hdl.27:

hdl.5:

hdl.11:

hdl.2:

hdl.18:

hdl.19:

hdl.14:

hdl.16:

hdl.0:

hdl.1:

hdl.24:

hdl.23:

hdl.13:

hdl.15:

hdl.17:

hdl.29:

hdl.30:

hdl.31:

hdl.32:

hdl.3:

clk_set.last_clk:

clock_poweroff_sfc_info.0:

driver_bss_end:

CurrentTCB:
Disassembly of section .data_code:
report_data_code_begin:
    30e0:    77 01             	[--sp] = {rets, r7-r4}			  ## common.c:10:0
    30e2:    c1 ff 94 08 00 00 	r1 = 2196 <jiffies : 894 >			  ## common.c:10:0
    30e8:    00 42             	r0 = [r1 + 0]			  ## common.c:11:24
    30ea:    c2 ff f0 e0 1b 00 	r2 = 1827056 <uECC_vli_cmp_unsafe+0xB70F4 : 1be0f0 >			  ## common.c:11:24
    30f0:    03 44             	r3 = [r2 + 0]			  ## common.c:12:23
    30f2:    12 44             	r2 = [r2 + 4]			  ## common.c:12:39
    30f4:    03 fe 14 39       	r3 = r3 * 20			  ## common.c:12:32
    30f8:    c0 fe 20 23       	r2 = r3 / r2 (u)			  ## common.c:12:37
    30fc:    34 fd f8 0c       	r4 = r0 & 134217727			  ## common.c:11:32
    3100:    c3 ff 08 20 00 00 	r3 = 8200 <prev_half_msec : 2008 >			  ## common.c:11:32
    3106:    00 46             	r0 = [r3 + 0]			  ## common.c:14:17
    3108:    46 71             	r6 = 20			  ## common.c:11:50
    310a:    25 08             	r5 = r2			  ## common.c:14:11
    310c:    80 fe 60 54       	r5 += r4 * r6			  ## common.c:14:11
    3110:    16 70             	r6 = 1			  ## common.c:14:11
    3112:    17 70             	r7 = 1			  ## common.c:15:13
    3114:    05 f2 01 b0       	ifs (r5 < r0) goto 2 <report_data_code_begin+0x3A : 311a >			  ## common.c:15:13
    3118:    07 70             	r7 = 0			  ## common.c:15:13
    311a:    05 f2 01 30       	if (r5 < r0) goto 2 <report_data_code_begin+0x40 : 3120 >
    311e:    06 70             	r6 = 0			  ## common.c:14:15
    3120:    56 bf             	r6 &= r7			  ## common.c:14:9
    3122:    04 fe 14 49       	r4 = r4 * 20			  ## common.c:11:50
    3126:    16 e0 08 10       	if (r6 != 1) goto 16 <report_data_code_begin+0x5A : 313a >
    312a:    45 81             	r5 += 20			  ## common.c:16:18
    312c:    05 f2 04 a0       	ifs (r5 >= r0) goto 8 <report_data_code_begin+0x58 : 3138 >			  ## common.c:16:18
    3130:    02 42             	r2 = [r1 + 0]			  ## common.c:19:24
    3132:    12 80             	r2 += 1			  ## common.c:19:24
    3134:    0a 42             	[r1 + 0] = r2			  ## common.c:19:24
    3136:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1
    3138:    44 81             	r4 += 20			  ## common.c:17:19
    313a:    80 b8             	r0 = r4 + r2			  ## common.c:24:24
    313c:    08 46             	[r3 + 0] = r0			  ## common.c:24:20
    313e:    57 01             	{pc, r7-r4} = [sp++]			  ## common.c:27:1


jiffies_msec:
    3140:    34 00             	[--sp] = rets			  ## common.c:31:0
    3142:    ce 17             	call -100 <report_data_code_begin : 30e0 >			  ## common.c:32:12
    3144:    40 d0             	r0 = r0 >> 1			  ## common.c:32:32
    3146:    30 00             	pc = [sp++]			  ## common.c:32:5


os_current_task:
    3148:    75 01             	[--sp] = {rets, r5, r4}			  ## task.c:37:0
    314a:    88 f3 27 1e       	call 1064014 <local_irq_disable : 106d9c >			  ## task.c:40:5
    314e:    88 f3 31 1e       	call 1064034 <os_current_task_rom : 106db4 >			  ## task.c:42:23
    3152:    04 08             	r4 = r0			  ## task.c:42:23
    3154:    c5 ff 18 e1 e0 01 	r5 = 31514904 <task_info_table : 1e0e118 >
    315a:    c0 ff 4b e0 e0 01 	r0 = 31514699 <update_target_end+0x16B : 1e0e04b >
    3160:    41 08             	r1 = r4			  ## task.c:45:14
    3162:    88 f3 c7 1e       	call 1064334 <strcmp : 106ef4 >			  ## task.c:45:14
    3166:    06 20             	if (r0 == 0) goto 12 <os_current_task+0x2C : 3174 >			  ## task.c:45:14
    3168:    30 4a             	r0 = [r5 + 12]			  ## task.c:44:34
    316a:    c5 80             	r5 += 12			  ## task.c:44:49
    316c:    f9 31             	if (r0 != 0) goto -14 <os_current_task+0x18 : 3160 >			  ## task.c:44:49
    316e:    88 f3 13 1e       	call 1063974 <local_irq_enable : 106d98 >			  ## task.c:51:5
    3172:    03 18             	goto 6 <os_current_task+0x32 : 317a >			  ## task.c:51:5
    3174:    88 f3 10 1e       	call 1063968 <local_irq_enable : 106d98 >			  ## task.c:46:13
    3178:    04 4a             	r4 = [r5 + 0]			  ## task.c:47:23
    317a:    40 08             	r0 = r4			  ## task.c:54:1
    317c:    55 01             	{pc, r5, r4} = [sp++]			  ## task.c:54:1


pcTaskName:
    317e:    80 80             	r0 += 8			  ## port_overwrite.c:116:0
    3180:    20 00             	rts			  ## port_overwrite.c:117:5


vCreateTaskStack:
    3182:    77 01             	[--sp] = {rets, r7-r4}			  ## port_overwrite.c:135:0
    3184:    12 08             	r2 = r1			  ## port_overwrite.c:135:0
    3186:    03 08             	r3 = r0			  ## port_overwrite.c:135:0
    3188:    32 f2 42 00       	if (r2 == r3) goto 132 <vCreateTaskStack+0x8E : 3210 >			  ## port_overwrite.c:135:0
    318c:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## port_overwrite.c:143:14
    3192:    13 f6 98 00       	[r0 + 152] = r3			  ## port_overwrite.c:142:15
    3196:    12 f6 9c 00       	[r0 + 156] = r2			  ## port_overwrite.c:143:14
    319a:    00 47             	r0 = [r3 + 64]			  ## port_overwrite.c:111:21
    319c:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:111:21
    319e:    05 fc 80 00       	r5 = r0 + 128			  ## port_overwrite.c:144:49
    31a2:    51 f2 03 20       	if (r1 >= r5) goto 6 <vCreateTaskStack+0x2A : 31ac >
    31a6:    b0 f3 56 3b       	call -2066772 <cpu_reset.1562 : 1e0a856 >			  ## port_overwrite.c:147:5
    31aa:    01 46             	r1 = [r3 + 0]			  ## port_overwrite.c:147:5
    31ac:    03 45             	r3 = [r2 + 64]			  ## port_overwrite.c:111:21
    31ae:    00 44             	r0 = [r2 + 0]
    31b0:    34 fc 80 00       	r4 = r3 + 128			  ## port_overwrite.c:150:49
    31b4:    33 fd 7f 19       	r3 = r1 & 4294967168			  ## port_overwrite.c:148:29
    31b8:    40 f2 03 20       	if (r0 >= r4) goto 6 <vCreateTaskStack+0x40 : 31c2 >
    31bc:    b0 f3 4b 3b       	call -2066794 <cpu_reset.1562 : 1e0a856 >			  ## port_overwrite.c:152:5
    31c0:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:152:5
    31c2:    01 4a             	r1 = [r5 + 0]			  ## port_overwrite.c:157:9
    31c4:    67 b7             	r7 = r3 - r5			  ## port_overwrite.c:148:87
    31c6:    30 fd 7f 09       	r0 = r0 & 4294967168			  ## port_overwrite.c:153:29
    31ca:    26 b1             	r6 = r0 - r4			  ## port_overwrite.c:153:87
    31cc:    20 ff 5a 1f 02 00 	if (r1 == 1515870810) goto 4 <vCreateTaskStack+0x54 : 31d6 >
    31d2:    b0 f3 40 3b       	call -2066816 <cpu_reset.1562 : 1e0a856 >			  ## port_overwrite.c:158:9
    31d6:    a1 bf             	r1 = r7 - r6			  ## port_overwrite.c:173:26
    31d8:    11 e0 07 b0       	ifs (r1 < 1) goto 14 <vCreateTaskStack+0x68 : 31ea >			  ## port_overwrite.c:175:9
    31dc:    80 bb             	r0 = r5 + r6			  ## port_overwrite.c:178:34
    31de:    88 f3 7b 1e       	call 1064182 <vfree_v2 : 106ed8 >			  ## port_overwrite.c:178:9
    31e2:    40 08             	r0 = r4			  ## port_overwrite.c:181:9
    31e4:    51 08             	r1 = r5			  ## port_overwrite.c:181:9
    31e6:    62 08             	r2 = r6			  ## port_overwrite.c:181:9
    31e8:    0a 18             	goto 20 <vCreateTaskStack+0x7C : 31fe >			  ## port_overwrite.c:181:9
    31ea:    f1 ef 05 c0       	ifs (r1 > -1) goto 10 <vCreateTaskStack+0x76 : 31f8 >
    31ee:    c0 b9             	r0 = r4 + r7			  ## port_overwrite.c:186:36
    31f0:    61 fb 00 19       	r1 = 0 - r1			  ## port_overwrite.c:186:52
    31f4:    88 f3 6e 1e       	call 1064156 <vmalloc_v2 : 106ed4 >			  ## port_overwrite.c:186:9
    31f8:    40 08             	r0 = r4
    31fa:    51 08             	r1 = r5
    31fc:    72 08             	r2 = r7
    31fe:    88 f3 6d 1e       	call 1064154 <vcopy_ : 106edc >
    3202:    56 e0 05 30       	if (r6 < 5) goto 10 <vCreateTaskStack+0x8E : 3210 >
    3206:    a0 75             	r0 = 90			  ## port_overwrite.c:201:9
    3208:    38 68             	b[r4 + 3] = r0			  ## port_overwrite.c:201:9
    320a:    28 68             	b[r4 + 2] = r0			  ## port_overwrite.c:201:9
    320c:    18 68             	b[r4 + 1] = r0			  ## port_overwrite.c:201:9
    320e:    08 68             	b[r4 + 0] = r0			  ## port_overwrite.c:201:9
    3210:    57 01             	{pc, r7-r4} = [sp++]			  ## port_overwrite.c:205:1


pvPortSwitch:
    3212:    c0 ff 3c 1e 00 00 	r0 = 7740 <highCurrentTCB : 1e3c >			  ## port_overwrite.c:221:0
    3218:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:226:32
    321a:    c1 ff cc 30 00 00 	r1 = 12492 <CurrentTCB : 30cc >			  ## port_overwrite.c:225:32
    3220:    02 42             	r2 = [r1 + 0]			  ## port_overwrite.c:225:32
    3222:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:226:23
    3224:    00 44             	r0 = [r2 + 0]			  ## port_overwrite.c:225:23
    3226:    ad 1f             	goto -166 <vCreateTaskStack : 3182 >			  ## port_overwrite.c:228:5


uxTaskStack:
    3228:    00 41             	r0 = [r0 + 64]			  ## port_overwrite.c:110:0
    322a:    20 00             	rts			  ## port_overwrite.c:111:5


vAppSoftwareInterruptISR:
    322c:    18 00             	cli			  ## port_overwrite.c:506:0
    322e:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_overwrite.c:507:5
    3232:    e0 01             	[--sp] = {psr}			  ## port_overwrite.c:507:5
    3234:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:507:5
    323a:    01 40             	r1 = [r0 + 0]			  ## port_overwrite.c:507:5
    323c:    f1 b1             	r1 &= 4294967287			  ## port_overwrite.c:507:5
    323e:    09 40             	[r0 + 0] = r1			  ## port_overwrite.c:507:5
    3240:    a0 01             	{psr} = [sp++]			  ## port_overwrite.c:507:5
    3242:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_overwrite.c:507:5
    3246:    3c 00             	sp = usp			  ## port_overwrite.c:507:5
    3248:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## port_overwrite.c:507:5
    324c:    e9 01             	[--sp] = {psr, rets, reti}			  ## port_overwrite.c:507:5
    324e:    c1 ff cc 30 00 00 	r1 = 12492 <CurrentTCB : 30cc >			  ## port_overwrite.c:507:5
    3254:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:507:5
    3256:    01 42             	r1 = [r1 + 0]			  ## port_overwrite.c:507:5
    3258:    28 fb 00 0e       	r0 = sp			  ## port_overwrite.c:507:5
    325c:    08 42             	[r1 + 0] = r0			  ## port_overwrite.c:507:5
    325e:    3d 00             	sp = ssp			  ## port_overwrite.c:507:5
    3260:    d8 17             	call -80 <pvPortSwitch : 3212 >			  ## port_overwrite.c:507:5
    3262:    88 f3 19 1e       	call 1063986 <OS_ClrPending : 106e98 >			  ## port_overwrite.c:507:5
    3266:    c0 ff 3c 1e 00 00 	r0 = 7740 <highCurrentTCB : 1e3c >			  ## port_overwrite.c:507:5
    326c:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:507:5
    326e:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:507:5
    3270:    00 40             	r0 = [r0 + 0]			  ## port_overwrite.c:507:5
    3272:    29 fb 00 0e       	sp = r0			  ## port_overwrite.c:507:5
    3276:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_overwrite.c:507:5
    3278:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_overwrite.c:507:5
    327c:    3e 00             	usp = sp			  ## port_overwrite.c:507:5
    327e:    3d 00             	sp = ssp			  ## port_overwrite.c:507:5
    3280:    78 f3 01 00       	[--sp] = {r0}			  ## port_overwrite.c:507:5
    3284:    e0 01             	[--sp] = {psr}			  ## port_overwrite.c:507:5
    3286:    c0 ff 00 e2 1b 00 	r0 = 1827328 <uECC_vli_cmp_unsafe+0xB7204 : 1be200 >			  ## port_overwrite.c:507:5
    328c:    00 f4 08 09       	[r0 + 0] |= 8			  ## port_overwrite.c:507:5
    3290:    a0 01             	{psr} = [sp++]			  ## port_overwrite.c:507:5
    3292:    70 f3 01 00       	{r0} = [sp++]			  ## port_overwrite.c:507:5
    3296:    1c 00             	sti			  ## port_overwrite.c:507:5
    3298:    22 00             	rti			  ## port_overwrite.c:507:5
    329a:    20 00             	rts			  ## port_overwrite.c:555:1


vAppPortStartFirstTask:
    329c:    18 00             	cli			  ## port_asm_mmu.S:12:0
    329e:    c0 ff cc 30 00 00 	r0 = 12492 <CurrentTCB : 30cc >			  ## port_asm_mmu.S:13:0
    32a4:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:14:0
    32a6:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:15:0
    32a8:    b0 f3 fe 3a       	call -2066948 <vFillingTaskStack : 1e0a8a8 >			  ## port_asm_mmu.S:16:0
    32ac:    c0 ff cc 30 00 00 	r0 = 12492 <CurrentTCB : 30cc >			  ## port_asm_mmu.S:17:0
    32b2:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:18:0
    32b4:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:19:0
    32b6:    00 40             	r0 = [r0 + 0]			  ## port_asm_mmu.S:20:0
    32b8:    29 fb 00 0e       	sp = r0			  ## port_asm_mmu.S:21:0
    32bc:    a9 01             	{psr, rets, reti} = [sp++]			  ## port_asm_mmu.S:22:0
    32be:    70 f3 ff ff       	{r15-r0} = [sp++]			  ## port_asm_mmu.S:23:0
    32c2:    1c 00             	sti			  ## port_asm_mmu.S:24:0
    32c4:    22 00             	rti			  ## port_asm_mmu.S:25:0


begin_of_data:
    32c6:    e0 01             	[--sp] = {psr}			  ## port_asm_mmu.S:39:0
    32c8:    78 f3 03 00       	[--sp] = {r1, r0}			  ## port_asm_mmu.S:40:0
    32cc:    c0 ff 94 08 00 00 	r0 = 2196 <jiffies : 894 >			  ## port_asm_mmu.S:41:0
    32d2:    01 40             	r1 = [r0 + 0]			  ## port_asm_mmu.S:42:0
    32d4:    11 80             	r1 += 1			  ## port_asm_mmu.S:43:0
    32d6:    09 40             	[r0 + 0] = r1			  ## port_asm_mmu.S:44:0
    32d8:    70 f3 03 00       	{r1, r0} = [sp++]			  ## port_asm_mmu.S:45:0
    32dc:    a0 01             	{psr} = [sp++]			  ## port_asm_mmu.S:46:0
    32de:    c8 f3 dd 1d       	goto 1063866 <vTickISR : 106e9c >			  ## port_asm_mmu.S:47:0
    32e2:    00 00             	nop
    32e4:    00 00             	nop
    32e6:    00 00             	nop
    32e8:    00 00             	nop
    32ea:    00 00             	nop
    32ec:    00 00             	nop
    32ee:    00 00             	nop
    32f0:    00 00             	nop
    32f2:    00 00             	nop
    32f4:    00 00             	nop
    32f6:    00 00             	nop
    32f8:    00 00             	nop
    32fa:    00 00             	nop
    32fc:    00 00             	nop
    32fe:    00 00             	nop


p33_soft_reset:
    3300:    c0 ff a0 18 1a 00 	r0 = 1710240 <uECC_vli_cmp_unsafe+0x9A8A4 : 1a18a0 >			  ## power_reset.c:147:0
    3306:    01 60             	r1 = b[r0 + 0] (u)			  ## power_reset.c:148:5
    3308:    01 fd 30 19       	r1 = r1 | 48			  ## power_reset.c:148:5
    330c:    09 60             	b[r0 + 0] = r1			  ## power_reset.c:148:5
    330e:    20 00             	rts			  ## power_reset.c:149:1


sfc_suspend:
    3310:    08 00             	csync			  ## vm_sfc.c:417:0
    3312:    c1 ff 00 e4 1b 00 	r1 = 1827840 <uECC_vli_cmp_unsafe+0xB7404 : 1be400 >			  ## vm_sfc.c:419:5
    3318:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:419:5
    331a:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <sfc_suspend+0x8 : 3318 >			  ## vm_sfc.c:419:5
    331e:    08 00             	csync			  ## vm_sfc.c:420:5
    3320:    c1 ff 00 05 1b 00 	r1 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## vm_sfc.c:420:5
    3326:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:420:5
    3328:    f2 ef fd cf       	ifs (r2 > -1) goto -6 <sfc_suspend+0x16 : 3326 >			  ## vm_sfc.c:420:5
    332c:    c1 ff 00 02 1f 00 	r1 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3332:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:423:20
    3334:    02 e0 fd bf       	ifs (r2 < 0) goto -6 <sfc_suspend+0x22 : 3332 >			  ## vm_sfc.c:423:5
    3338:    c2 ff 00 53 1e 00 	r2 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    333e:    04 f4 08 29       	[r2 + 16] |= 8			  ## vm_sfc.c:425:19
    3342:    02 f4 08 29       	[r2 + 8] |= 8			  ## vm_sfc.c:426:19
    3346:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:429:17
    3348:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:429:17
    334a:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:429:17
    334c:    00 f4 08 29       	[r2 + 0] |= 8			  ## vm_sfc.c:431:19
    3350:    21 44             	r1 = [r2 + 8]			  ## vm_sfc.c:432:19
    3352:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:432:19
    3354:    29 44             	[r2 + 8] = r1			  ## vm_sfc.c:432:19
    3356:    41 44             	r1 = [r2 + 16]			  ## vm_sfc.c:433:19
    3358:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:433:19
    335a:    49 44             	[r2 + 16] = r1			  ## vm_sfc.c:433:19
    335c:    04 20             	if (r0 == 0) goto 8 <sfc_suspend+0x56 : 3366 >			  ## vm_sfc.c:433:19
    335e:    20 fc 00 c9       	r0 = r2 + -14080			  ## vm_sfc.c:436:22
    3362:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:436:22
    3366:    20 00             	rts			  ## vm_sfc.c:438:1


enter_spi_code:
    3368:    34 00             	[--sp] = rets			  ## vm_sfc.c:445:0
    336a:    88 f3 17 1d       	call 1063470 <local_irq_disable : 106d9c >			  ## vm_sfc.c:447:5
    336e:    08 00             	csync			  ## vm_sfc.c:447:5
    3370:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    3376:    11 70             	r1 = 1			  ## vm_sfc.c:385:17
    3378:    59 60             	b[r0 + 5] = r1			  ## vm_sfc.c:385:17
    337a:    10 70             	r0 = 1			  ## vm_sfc.c:454:5
    337c:    c9 17             	call -110 <sfc_suspend : 3310 >			  ## vm_sfc.c:454:5
    337e:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:457:29
    3384:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:457:29
    3386:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    338c:    c0 f4 43 09       	[r0 + 0] = 67			  ## vm_sfc.c:478:22
    3390:    c1 f4 47 09       	[r0 + 4] = 71			  ## vm_sfc.c:479:22
    3394:    c2 f4 4b 09       	[r0 + 8] = 75			  ## vm_sfc.c:480:22
    3398:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:480:22
    339c:    c0 f4 16 09       	[r0 + 0] = 22			  ## vm_sfc.c:481:26
    33a0:    c1 f4 17 09       	[r0 + 4] = 23			  ## vm_sfc.c:482:26
    33a4:    30 00             	pc = [sp++]			  ## vm_sfc.c:492:1


spi_writebyte:
    33a6:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:156:0
    33ac:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:160:18
    33b0:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:161:18
    33b2:    72 b6             	r2 &= 4294963199			  ## vm_sfc.c:161:18
    33b4:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:161:18
    33b6:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:162:18
    33b8:    08 00             	csync			  ## vm_sfc.c:114:5
    33ba:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:115:23
    33bc:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    33be:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte+0x14 : 33ba >			  ## vm_sfc.c:115:5
    33c2:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:116:18
    33c6:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:164:18
    33c8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:164:18
    33ca:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:164:18
    33cc:    20 00             	rts			  ## vm_sfc.c:166:1


norflash_send_addr:
    33ce:    34 00             	[--sp] = rets			  ## vm_sfc.c:545:0
    33d0:    03 08             	r3 = r0			  ## vm_sfc.c:545:0
    33d2:    88 fd 80 03       	r0 = uextra(r3, p:16, l:8)			  ## vm_sfc.c:546:5
    33d6:    e7 17             	call -50 <spi_writebyte : 33a6 >			  ## vm_sfc.c:546:5
    33d8:    88 fd 40 03       	r0 = uextra(r3, p:8, l:8)			  ## vm_sfc.c:547:5
    33dc:    e4 17             	call -56 <spi_writebyte : 33a6 >			  ## vm_sfc.c:547:5
    33de:    c0 04             	r0 = r3.b0 (u)			  ## vm_sfc.c:548:5
    33e0:    88 01             	{rets} = [sp++]			  ## vm_sfc.c:548:5
    33e2:    e1 1f             	goto -62 <spi_writebyte : 33a6 >			  ## vm_sfc.c:548:5


spi_readbyte_dma:
    33e4:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:231:0
    33ea:    c2 f4 ff 09       	[r0 + 8] = 255			  ## vm_sfc.c:236:18
    33ee:    08 00             	csync			  ## vm_sfc.c:114:5
    33f0:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:115:23
    33f2:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:115:12
    33f4:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_readbyte_dma+0xC : 33f0 >			  ## vm_sfc.c:115:5
    33f8:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:116:18
    33fc:    20 40             	r0 = [r0 + 8]			  ## vm_sfc.c:238:25
    33fe:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:241:5
    3400:    20 00             	rts			  ## vm_sfc.c:241:5


spi_read_dma:
    3402:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:302:0
    3404:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:307:29
    340a:    02 44             	r2 = [r2 + 0]			  ## vm_sfc.c:307:29
    340c:    c4 ff 00 1c 1e 00 	r4 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:307:29
    3412:    00 f4 10 4a       	[r4 + 0] |= 4096			  ## vm_sfc.c:317:18
    3416:    84 fd 40 52       	r5 = uextra(r2, p:8, l:4)			  ## vm_sfc.c:320:5
    341a:    12 08             	r2 = r1
    341c:    03 08             	r3 = r0
    341e:    95 e0 12 80       	if (r5 > 9) goto 36 <spi_read_dma+0x44 : 3446 >
    3422:    10 70             	r0 = 1
    3424:    f8 fd 50 10       	r1 = r0 << r5
    3428:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    342c:    00 fb 00 04       	r0 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >
    3430:    51 f1 06 00       	if ((r1 & r5) != 0) goto 12 <spi_read_dma+0x3E : 3440 >
    3434:    00 fb a8 02       	r0 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    3438:    01 f0 05 00       	if ((r1 & r0) == 0) goto 10 <spi_read_dma+0x44 : 3446 >
    343c:    00 fb 00 08       	r0 = 2048 <report_mmu_tlb_size : 800 >
    3440:    01 48             	r1 = [r4 + 0]
    3442:    50 b2             	r0 |= r1
    3444:    08 48             	[r4 + 0] = r0
    3446:    06 24             	if (r2 == 0) goto 12 <spi_read_dma+0x52 : 3454 >
    3448:    cd 17             	call -102 <spi_readbyte_dma : 33e4 >			  ## vm_sfc.c:345:16
    344a:    f2 8f             	r2 += -1			  ## vm_sfc.c:344:15
    344c:    a1 04             	r1 = r2.l (u)			  ## vm_sfc.c:344:5
    344e:    90 f9 01 30       	b[r3 ++= 1] = r0			  ## vm_sfc.c:345:14
    3452:    fa 33             	if (r1 != 0) goto -12 <spi_read_dma+0x46 : 3448 >
    3454:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:351:18
    3456:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:351:18
    345a:    00 70             	r0 = 0			  ## vm_sfc.c:353:5
    345c:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:351:18
    345e:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:353:5


spi_readbyte:
    3460:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:212:0
    3466:    00 f4 08 19       	[r1 + 0] |= 8			  ## vm_sfc.c:218:18
    346a:    00 f4 10 1a       	[r1 + 0] |= 4096			  ## vm_sfc.c:219:18
    346e:    c2 f4 ff 19       	[r1 + 8] = 255			  ## vm_sfc.c:220:18
    3472:    08 00             	csync			  ## vm_sfc.c:114:5
    3474:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:115:23
    3476:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    3478:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_readbyte+0x14 : 3474 >			  ## vm_sfc.c:115:5
    347c:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:116:18
    3480:    20 42             	r0 = [r1 + 8]			  ## vm_sfc.c:222:25
    3482:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:223:18
    3484:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:223:18
    3486:    00 04             	r0 = r0.b0 (u)			  ## vm_sfc.c:226:5
    3488:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:223:18
    348a:    20 00             	rts			  ## vm_sfc.c:226:5


spi_write_dma:
    348c:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:246:0
    348e:    c2 ff 00 02 1f 00 	r2 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:251:29
    3494:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:251:29
    3496:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:251:29
    349c:    04 44             	r4 = [r2 + 0]			  ## vm_sfc.c:261:18
    349e:    74 b6             	r4 &= 4294963199			  ## vm_sfc.c:261:18
    34a0:    84 fd 40 33       	r3 = uextra(r3, p:8, l:4)			  ## vm_sfc.c:264:5
    34a4:    0c 44             	[r2 + 0] = r4			  ## vm_sfc.c:261:18
    34a6:    93 e0 15 80       	if (r3 > 9) goto 42 <spi_write_dma+0x48 : 34d4 >			  ## vm_sfc.c:261:18
    34aa:    14 70             	r4 = 1
    34ac:    c4 0c             	r4 <<= r3
    34ae:    05 fb 54 01       	r5 = 340 <DRIVER_RAM_TOTAL+0x62 : 154 >
    34b2:    03 fb 00 04       	r3 = 1024 <BTCTLER_LE_RAM_TOTAL+0x22 : 400 >
    34b6:    54 f1 0a 00       	if ((r4 & r5) != 0) goto 20 <spi_write_dma+0x42 : 34ce >
    34ba:    03 fb a8 02       	r3 = 680 <_MASK_MEM_SIZE+0x14 : 2a8 >
    34be:    34 f0 09 00       	if ((r4 & r3) == 0) goto 18 <spi_write_dma+0x48 : 34d4 >
    34c2:    03 fb 00 08       	r3 = 2048 <report_mmu_tlb_size : 800 >
    34c6:    03 18             	goto 6 <spi_write_dma+0x42 : 34ce >
    34c8:    f1 8f             	r1 += -1			  ## vm_sfc.c:288:15
    34ca:    03 fb 00 40       	r3 = 16384 <check_flash_type+0x4C : 4000 >
    34ce:    04 44             	r4 = [r2 + 0]
    34d0:    53 b8             	r3 |= r4
    34d2:    0b 44             	[r2 + 0] = r3
    34d4:    63 04             	r3 = r1.l (u)			  ## vm_sfc.c:288:5
    34d6:    09 26             	if (r3 == 0) goto 18 <spi_write_dma+0x5E : 34ea >			  ## vm_sfc.c:288:5
    34d8:    83 f9 01 00       	r3 = b[r0 ++= 1] (u)			  ## vm_sfc.c:174:20
    34dc:    2b 44             	[r2 + 8] = r3			  ## vm_sfc.c:174:18
    34de:    08 00             	csync			  ## vm_sfc.c:114:5
    34e0:    03 44             	r3 = [r2 + 0]			  ## vm_sfc.c:115:23
    34e2:    f3 04             	r3 = r3.l (s)			  ## vm_sfc.c:115:12
    34e4:    f3 ef fc cf       	ifs (r3 > -1) goto -8 <spi_write_dma+0x54 : 34e0 >			  ## vm_sfc.c:115:5
    34e8:    ef 1f             	goto -34 <spi_write_dma+0x3C : 34c8 >			  ## vm_sfc.c:115:5
    34ea:    00 44             	r0 = [r2 + 0]			  ## vm_sfc.c:294:18
    34ec:    31 fd 0c 0a       	r1 = r0 & 4294964223			  ## vm_sfc.c:294:18
    34f0:    00 70             	r0 = 0			  ## vm_sfc.c:297:5
    34f2:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:294:18
    34f4:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:297:5


__norflash_read:
    34f6:    79 01             	[--sp] = {rets, r9-r4}			  ## vm_sfc.c:603:0
    34f8:    de 0b             	sp += -68			  ## vm_sfc.c:603:0
    34fa:    c4 ff 00 02 1f 00 	r4 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:608:29
    3500:    07 48             	r7 = [r4 + 0]			  ## vm_sfc.c:608:29
    3502:    a4 fd 40 57       	r5 = sextra(r7, p:8, l:4)			  ## vm_sfc.c:617:5
    3506:    24 08             	r4 = r2			  ## vm_sfc.c:617:5
    3508:    16 08             	r6 = r1
    350a:    09 08             	r9 = r0
    350c:    05 e0 25 b0       	ifs (r5 < 0) goto 74 <.GJTIE54_0_0_+0x2C : 355a >
    3510:    84 fd 40 07       	r0 = uextra(r7, p:8, l:4)
    3514:    41 c0             	r1 = r0 << 1
    3516:    c7 ff 00 53 1e 00 	r7 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    351c:    b1 00             	tbh [r1]


.GJTIL54_0_0_:
    351e:    08 00     < 8 : 0x8 >
    3520:    20 00     < 32 : 0x20 >
    3522:    37 00     < 55 : 0x37 >
    3524:    50 00     < 80 : 0x50 >
    3526:    69 00     < 105 : 0x69 >
    3528:    8b 00     < 139 : 0x8B >
    352a:    b1 00     < 177 : 0xB1 >
    352c:    d4 00     < 212 : 0xD4 >
    352e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3530:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3532:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3534:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3536:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3538:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    353a:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    353c:    1d 02             	[sp+4] = r5
    353e:    30 70             	r0 = 3			  ## vm_sfc.c:620:9
    3540:    32 17             	call -412 <spi_writebyte : 33a6 >			  ## vm_sfc.c:620:9
    3542:    60 08             	r0 = r6			  ## vm_sfc.c:621:9
    3544:    44 17             	call -376 <norflash_send_addr : 33ce >			  ## vm_sfc.c:621:9
    3546:    90 08             	r0 = r9			  ## vm_sfc.c:622:9
    3548:    41 08             	r1 = r4			  ## vm_sfc.c:622:9
    354a:    5b 17             	call -330 <spi_read_dma : 3402 >			  ## vm_sfc.c:622:9
    354c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    354e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3550:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3552:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    3556:    3d 02             	[sp+12] = r5
    3558:    de 18             	goto 444 <.GJTIE54_0_0_+0x1E8 : 3716 >
    355a:    f4 07             	r4 = -1
    355c:    dc 18             	goto 440 <.GJTIE54_0_0_+0x1E8 : 3716 >
    355e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3560:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3562:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3564:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3566:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3568:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    356a:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    356c:    4d 02             	[sp+16] = r5
    356e:    b0 70             	r0 = 11			  ## vm_sfc.c:628:9
    3570:    1a 17             	call -460 <spi_writebyte : 33a6 >			  ## vm_sfc.c:628:9
    3572:    60 08             	r0 = r6			  ## vm_sfc.c:629:9
    3574:    2c 17             	call -424 <norflash_send_addr : 33ce >			  ## vm_sfc.c:629:9
    3576:    74 17             	call -280 <spi_readbyte : 3460 >			  ## vm_sfc.c:630:9
    3578:    90 08             	r0 = r9			  ## vm_sfc.c:631:9
    357a:    41 08             	r1 = r4			  ## vm_sfc.c:631:9
    357c:    42 17             	call -380 <spi_read_dma : 3402 >			  ## vm_sfc.c:631:9
    357e:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3580:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3582:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3584:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    3588:    5d 02             	[sp+20] = r5
    358a:    c5 18             	goto 394 <.GJTIE54_0_0_+0x1E8 : 3716 >
    358c:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    358e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3590:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3592:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3594:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3596:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    3598:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    359a:    cd 02             	[sp+48] = r5
    359c:    b0 73             	r0 = 59			  ## vm_sfc.c:664:9
    359e:    03 17             	call -506 <spi_writebyte : 33a6 >			  ## vm_sfc.c:664:9
    35a0:    60 08             	r0 = r6			  ## vm_sfc.c:665:9
    35a2:    15 17             	call -470 <norflash_send_addr : 33ce >			  ## vm_sfc.c:665:9
    35a4:    00 a0             	r0 = sp + 0
    35a6:    21 70             	r1 = 2			  ## vm_sfc.c:666:9
    35a8:    2c 17             	call -424 <spi_read_dma : 3402 >			  ## vm_sfc.c:666:9
    35aa:    90 08             	r0 = r9			  ## vm_sfc.c:667:9
    35ac:    41 08             	r1 = r4			  ## vm_sfc.c:667:9
    35ae:    29 17             	call -430 <spi_read_dma : 3402 >			  ## vm_sfc.c:667:9
    35b0:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    35b2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    35b4:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    35b6:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    35ba:    fd 02             	[sp+60] = r5
    35bc:    ac 18             	goto 344 <.GJTIE54_0_0_+0x1E8 : 3716 >
    35be:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    35c0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    35c2:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    35c4:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    35c6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    35c8:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    35ca:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    35cc:    0d 03             	[sp+64] = r5
    35ce:    b0 76             	r0 = 107			  ## vm_sfc.c:674:9
    35d0:    ea 16             	call -556 <spi_writebyte : 33a6 >			  ## vm_sfc.c:674:9
    35d2:    60 08             	r0 = r6			  ## vm_sfc.c:675:9
    35d4:    fc 16             	call -520 <norflash_send_addr : 33ce >			  ## vm_sfc.c:675:9
    35d6:    00 a0             	r0 = sp + 0
    35d8:    41 70             	r1 = 4			  ## vm_sfc.c:676:9
    35da:    13 17             	call -474 <spi_read_dma : 3402 >			  ## vm_sfc.c:676:9
    35dc:    90 08             	r0 = r9			  ## vm_sfc.c:677:9
    35de:    41 08             	r1 = r4			  ## vm_sfc.c:677:9
    35e0:    10 17             	call -480 <spi_read_dma : 3402 >			  ## vm_sfc.c:677:9
    35e2:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    35e4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    35e6:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    35e8:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    35ec:    ed 02             	[sp+56] = r5
    35ee:    93 18             	goto 294 <.GJTIE54_0_0_+0x1E8 : 3716 >
    35f0:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:636:38
    35f2:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:636:26
    35f6:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:637:38
    35f8:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:637:26
    35fc:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:638:26
    3600:    00 70             	r0 = 0			  ## vm_sfc.c:639:26
    3602:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:639:26
    3606:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3608:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    360a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    360c:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    360e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3610:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    3612:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    3614:    6d 02             	[sp+24] = r5
    3616:    b0 7b             	r0 = 187			  ## vm_sfc.c:641:9
    3618:    c6 16             	call -628 <spi_writebyte : 33a6 >			  ## vm_sfc.c:641:9
    361a:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:641:9
    361c:    41 70             	r1 = 4			  ## vm_sfc.c:642:9
    361e:    36 17             	call -404 <spi_write_dma : 348c >			  ## vm_sfc.c:642:9
    3620:    90 08             	r0 = r9			  ## vm_sfc.c:643:9
    3622:    41 08             	r1 = r4			  ## vm_sfc.c:643:9
    3624:    ee 16             	call -548 <spi_read_dma : 3402 >			  ## vm_sfc.c:643:9
    3626:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3628:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    362a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    362c:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    3630:    9d 02             	[sp+36] = r5
    3632:    71 18             	goto 226 <.GJTIE54_0_0_+0x1E8 : 3716 >
    3634:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:682:38
    3636:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:682:26
    363a:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:683:38
    363c:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:683:26
    3640:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:684:26
    3644:    00 70             	r0 = 0			  ## vm_sfc.c:685:26
    3646:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:685:26
    364a:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    364c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    364e:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3650:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    3652:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3654:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    3656:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    3658:    dd 02             	[sp+52] = r5
    365a:    b0 7e             	r0 = 235			  ## vm_sfc.c:688:9
    365c:    a4 16             	call -696 <spi_writebyte : 33a6 >			  ## vm_sfc.c:688:9
    365e:    06 a0             	r6 = sp + 0			  ## vm_sfc.c:688:9
    3660:    41 70             	r1 = 4			  ## vm_sfc.c:689:9
    3662:    60 08             	r0 = r6			  ## vm_sfc.c:689:9
    3664:    13 17             	call -474 <spi_write_dma : 348c >			  ## vm_sfc.c:689:9
    3666:    21 70             	r1 = 2			  ## vm_sfc.c:690:9
    3668:    60 08             	r0 = r6			  ## vm_sfc.c:690:9
    366a:    cb 16             	call -618 <spi_read_dma : 3402 >			  ## vm_sfc.c:690:9
    366c:    90 08             	r0 = r9			  ## vm_sfc.c:691:9
    366e:    41 08             	r1 = r4			  ## vm_sfc.c:691:9
    3670:    c8 16             	call -624 <spi_read_dma : 3402 >			  ## vm_sfc.c:691:9
    3672:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3674:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3676:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    3678:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    367c:    8d 02             	[sp+32] = r5
    367e:    4b 18             	goto 150 <.GJTIE54_0_0_+0x1E8 : 3716 >
    3680:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:648:38
    3682:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:648:26
    3686:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:649:38
    3688:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:649:26
    368c:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:650:26
    3690:    00 7a             	r0 = 160			  ## vm_sfc.c:651:26
    3692:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:651:26
    3696:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    3698:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    369a:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    369c:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    369e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    36a0:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    36a2:    a6 70             	r6 = 10			  ## vm_sfc.c:105:53
    36a4:    ae 02             	[sp+40] = r6
    36a6:    02 26             	if (r3 == 0) goto 4 <.GJTIE54_0_0_+0x17E : 36ac >
    36a8:    b0 7b             	r0 = 187			  ## vm_sfc.c:654:13
    36aa:    7d 16             	call -774 <spi_writebyte : 33a6 >			  ## vm_sfc.c:654:13
    36ac:    00 a0             	r0 = sp + 0
    36ae:    41 70             	r1 = 4			  ## vm_sfc.c:656:9
    36b0:    ed 16             	call -550 <spi_write_dma : 348c >			  ## vm_sfc.c:656:9
    36b2:    90 08             	r0 = r9			  ## vm_sfc.c:657:9
    36b4:    41 08             	r1 = r4			  ## vm_sfc.c:657:9
    36b6:    a5 16             	call -694 <spi_read_dma : 3402 >			  ## vm_sfc.c:657:9
    36b8:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    36ba:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    36bc:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    36be:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    36c2:    be 02             	[sp+44] = r6
    36c4:    28 18             	goto 80 <.GJTIE54_0_0_+0x1E8 : 3716 >
    36c6:    30 d4             	r0 = r6 >> 16			  ## vm_sfc.c:696:38
    36c8:    d0 f5 00 00       	b[sp] = r0			  ## vm_sfc.c:696:26
    36cc:    30 d2             	r0 = r6 >> 8			  ## vm_sfc.c:697:38
    36ce:    d0 f5 01 00       	b[sp+1] = r0			  ## vm_sfc.c:697:26
    36d2:    d6 f5 02 00       	b[sp+2] = r6			  ## vm_sfc.c:698:26
    36d6:    00 7a             	r0 = 160			  ## vm_sfc.c:699:26
    36d8:    d0 f5 03 00       	b[sp+3] = r0			  ## vm_sfc.c:699:26
    36dc:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    36de:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    36e0:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    36e2:    00 4e             	r0 = [r7 + 0]			  ## vm_sfc.c:104:19
    36e4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    36e6:    08 4e             	[r7 + 0] = r0			  ## vm_sfc.c:105:53
    36e8:    a8 70             	r8 = 10			  ## vm_sfc.c:105:53
    36ea:    18 f5 1c 00       	[sp+28] = r8
    36ee:    02 26             	if (r3 == 0) goto 4 <.GJTIE54_0_0_+0x1C6 : 36f4 >
    36f0:    b0 7e             	r0 = 235			  ## vm_sfc.c:702:13
    36f2:    59 16             	call -846 <spi_writebyte : 33a6 >			  ## vm_sfc.c:702:13
    36f4:    06 a0             	r6 = sp + 0
    36f6:    41 70             	r1 = 4			  ## vm_sfc.c:704:9
    36f8:    60 08             	r0 = r6			  ## vm_sfc.c:704:9
    36fa:    c8 16             	call -624 <spi_write_dma : 348c >			  ## vm_sfc.c:704:9
    36fc:    21 70             	r1 = 2			  ## vm_sfc.c:705:9
    36fe:    60 08             	r0 = r6			  ## vm_sfc.c:705:9
    3700:    80 16             	call -768 <spi_read_dma : 3402 >			  ## vm_sfc.c:705:9
    3702:    90 08             	r0 = r9			  ## vm_sfc.c:706:9
    3704:    41 08             	r1 = r4			  ## vm_sfc.c:706:9
    3706:    7d 16             	call -774 <spi_read_dma : 3402 >			  ## vm_sfc.c:706:9
    3708:    20 4e             	r0 = [r7 + 8]			  ## vm_sfc.c:104:19
    370a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    370c:    28 4e             	[r7 + 8] = r0			  ## vm_sfc.c:104:19
    370e:    00 f4 08 79       	[r7 + 0] |= 8			  ## vm_sfc.c:104:19
    3712:    18 f5 08 00       	[sp+8] = r8
    3716:    40 08             	r0 = r4			  ## vm_sfc.c:714:1
    3718:    22 0a             	sp += 68			  ## vm_sfc.c:714:1
    371a:    59 01             	{pc, r9-r4} = [sp++]			  ## vm_sfc.c:714:1


_norflash_read:
    371c:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:879:0
    371e:    24 08             	r4 = r2			  ## vm_sfc.c:879:0
    3720:    15 08             	r5 = r1			  ## vm_sfc.c:879:0
    3722:    06 08             	r6 = r0			  ## vm_sfc.c:879:0
    3724:    21 16             	call -958 <enter_spi_code : 3368 >			  ## vm_sfc.c:881:5
    3726:    22 05             	r2 = r4.l (u)			  ## vm_sfc.c:883:5
    3728:    03 70             	r3 = 0			  ## vm_sfc.c:883:5
    372a:    07 70             	r7 = 0			  ## vm_sfc.c:883:5
    372c:    60 08             	r0 = r6			  ## vm_sfc.c:883:5
    372e:    51 08             	r1 = r5			  ## vm_sfc.c:883:5
    3730:    e2 16             	call -572 <__norflash_read : 34f6 >			  ## vm_sfc.c:883:5
    3732:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3734:    88 f3 f8 1b       	call 1062896 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    3738:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    373e:    5f 60             	b[r0 + 5] = r7			  ## vm_sfc.c:385:17
    3740:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    3746:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    3748:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    374e:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:517:22
    3750:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:518:22
    3752:    2f 40             	[r0 + 8] = r7			  ## vm_sfc.c:519:22
    3754:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3758:    0f 40             	[r0 + 0] = r7			  ## vm_sfc.c:520:26
    375a:    1f 40             	[r0 + 4] = r7			  ## vm_sfc.c:521:26
    375c:    88 f3 1c 1b       	call 1062456 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    3760:    40 08             	r0 = r4			  ## vm_sfc.c:886:5
    3762:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:886:5


flash_addr2cpu_addr:
    3764:    c1 ff 70 22 00 00 	r1 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:361:0
    376a:    02 f6 a4 10       	r2 = [r1 + 164]			  ## vm_sfc.c:363:30
    376e:    01 f6 a8 10       	r1 = [r1 + 168]			  ## vm_sfc.c:365:27
    3772:    a0 b0             	r0 = r0 - r2			  ## vm_sfc.c:363:12
    3774:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    3776:    20 00             	rts			  ## vm_sfc.c:365:5


exit_continue_mode:
    3778:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:757:0
    377a:    f8 0b             	sp += -16			  ## vm_sfc.c:757:0
    377c:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:758:29
    3782:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:758:29
    3784:    84 fd 40 10       	r1 = uextra(r0, p:8, l:4)			  ## vm_sfc.c:761:9
    3788:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:761:9
    378e:    61 e0 14 00       	if (r1 == 6) goto 40 <exit_continue_mode+0x42 : 37ba >			  ## vm_sfc.c:761:9
    3792:    00 70             	r0 = 0
    3794:    71 e0 24 10       	if (r1 != 7) goto 72 <exit_continue_mode+0x68 : 37e0 >
    3798:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    379a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    379c:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    379e:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    37a0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    37a2:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    37a4:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    37a6:    0c 02             	[sp] = r4
    37a8:    f0 7f             	r0 = 255			  ## vm_sfc.c:766:9
    37aa:    fd 15             	call -1030 <spi_writebyte : 33a6 >			  ## vm_sfc.c:766:9
    37ac:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    37ae:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    37b0:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    37b2:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    37b6:    2c 02             	[sp+8] = r4
    37b8:    12 18             	goto 36 <exit_continue_mode+0x66 : 37de >
    37ba:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    37bc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    37be:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    37c0:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    37c2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    37c4:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    37c6:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    37c8:    3c 02             	[sp+12] = r4
    37ca:    f0 7f             	r0 = 255			  ## vm_sfc.c:775:9
    37cc:    ec 15             	call -1064 <spi_writebyte : 33a6 >			  ## vm_sfc.c:775:9
    37ce:    f0 7f             	r0 = 255			  ## vm_sfc.c:776:9
    37d0:    ea 15             	call -1068 <spi_writebyte : 33a6 >			  ## vm_sfc.c:776:9
    37d2:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    37d4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    37d6:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    37d8:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    37dc:    1c 02             	[sp+4] = r4
    37de:    10 70             	r0 = 1
    37e0:    08 0a             	sp += 16
    37e2:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:781:5


read_flash_id:
    37e4:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:1120:0
    37e6:    f6 0b             	sp += -20			  ## vm_sfc.c:1120:0
    37e8:    bf 15             	call -1154 <enter_spi_code : 3368 >			  ## vm_sfc.c:1121:5
    37ea:    c6 17             	call -116 <exit_continue_mode : 3778 >			  ## vm_sfc.c:1122:21
    37ec:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:1122:21
    37f2:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:104:19
    37f4:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    37f6:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:104:19
    37f8:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:104:19
    37fa:    03 08             	r3 = r0			  ## vm_sfc.c:1122:21
    37fc:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:105:53
    3800:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3802:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    3804:    08 02             	[sp] = r0
    3806:    f0 79             	r0 = 159			  ## vm_sfc.c:1126:5
    3808:    ce 15             	call -1124 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1126:5
    380a:    c4 ff 70 22 00 00 	r4 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:1126:5
    3810:    06 70             	r6 = 0			  ## vm_sfc.c:1126:5
    3812:    16 f6 90 40       	[r4 + 144] = r6			  ## vm_sfc.c:1127:25
    3816:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:1129:34
    3818:    23 16             	call -954 <spi_readbyte : 3460 >			  ## vm_sfc.c:1129:36
    381a:    10 f9 74 70       	b[r7 + 116] = r0			  ## vm_sfc.c:1129:34
    381e:    01 f6 90 40       	r1 = [r4 + 144]			  ## vm_sfc.c:1130:29
    3822:    50 b2             	r0 |= r1			  ## vm_sfc.c:1130:29
    3824:    00 c2             	r0 = r0 << 8			  ## vm_sfc.c:1131:29
    3826:    16 80             	r6 += 1			  ## vm_sfc.c:1128:25
    3828:    10 f6 90 40       	[r4 + 144] = r0			  ## vm_sfc.c:1131:29
    382c:    36 e0 f3 1f       	if (r6 != 3) goto -26 <read_flash_id+0x32 : 3816 >			  ## vm_sfc.c:1128:5
    3830:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3832:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3834:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3836:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    383a:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    383c:    18 02             	[sp+4] = r0
    383e:    21 4a             	r1 = [r5 + 8]			  ## vm_sfc.c:104:19
    3840:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    3842:    29 4a             	[r5 + 8] = r1			  ## vm_sfc.c:104:19
    3844:    01 4a             	r1 = [r5 + 0]			  ## vm_sfc.c:104:19
    3846:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:105:53
    3848:    09 4a             	[r5 + 0] = r1			  ## vm_sfc.c:105:53
    384a:    28 02             	[sp+8] = r0
    384c:    b0 74             	r0 = 75			  ## vm_sfc.c:1139:5
    384e:    ab 15             	call -1194 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1139:5
    3850:    00 70             	r0 = 0			  ## vm_sfc.c:1140:5
    3852:    06 70             	r6 = 0			  ## vm_sfc.c:1140:5
    3854:    a8 15             	call -1200 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1140:5
    3856:    00 70             	r0 = 0			  ## vm_sfc.c:1141:5
    3858:    a6 15             	call -1204 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1141:5
    385a:    00 70             	r0 = 0			  ## vm_sfc.c:1142:5
    385c:    a4 15             	call -1208 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1142:5
    385e:    00 70             	r0 = 0			  ## vm_sfc.c:1143:5
    3860:    a2 15             	call -1212 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1143:5
    3862:    07 bd             	r7 = r6 + r4			  ## vm_sfc.c:1145:34
    3864:    fd 15             	call -1030 <spi_readbyte : 3460 >			  ## vm_sfc.c:1145:36
    3866:    16 80             	r6 += 1			  ## vm_sfc.c:1144:19
    3868:    10 f9 77 70       	b[r7 + 119] = r0			  ## vm_sfc.c:1145:34
    386c:    06 e1 f9 1f       	if (r6 != 16) goto -14 <read_flash_id+0x7E : 3862 >			  ## vm_sfc.c:1144:5
    3870:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3872:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3874:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3876:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    387a:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    387c:    48 02             	[sp+16] = r0
    387e:    05 26             	if (r3 == 0) goto 10 <read_flash_id+0xA6 : 388a >
    3880:    c0 a0             	r0 = sp + 12
    3882:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    3884:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    3886:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    3888:    36 16             	call -916 <__norflash_read : 34f6 >			  ## vm_sfc.c:873:5
    388a:    00 f6 90 40       	r0 = [r4 + 144]			  ## vm_sfc.c:1152:25
    388e:    00 d2             	r0 = r0 >> 8			  ## vm_sfc.c:1152:25
    3890:    10 f6 90 40       	[r4 + 144] = r0			  ## vm_sfc.c:1152:25
    3894:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3896:    88 f3 47 1b       	call 1062542 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    389a:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    38a0:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    38a2:    59 60             	b[r0 + 5] = r1			  ## vm_sfc.c:385:17
    38a4:    40 fb af 5a       	r0 = r5 + 44800			  ## vm_sfc.c:505:29
    38a8:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    38aa:    50 fc 50 03       	r0 = r5 + 848
    38ae:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    38b0:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    38b2:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    38b4:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    38b8:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    38ba:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    38bc:    88 f3 6c 1a       	call 1062104 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    38c0:    0a 0a             	sp += 20			  ## vm_sfc.c:530:5
    38c2:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:1154:1


norflash_write_enable:
    38c4:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:535:0
    38c6:    fc 0b             	sp += -8			  ## vm_sfc.c:535:0
    38c8:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:535:0
    38ce:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    38d0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    38d2:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    38d4:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    38d6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    38d8:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    38da:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    38dc:    0c 02             	[sp] = r4
    38de:    60 70             	r0 = 6			  ## vm_sfc.c:538:5
    38e0:    62 15             	call -1340 <spi_writebyte : 33a6 >			  ## vm_sfc.c:538:5
    38e2:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    38e4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    38e6:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    38e8:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    38ec:    1c 02             	[sp+4] = r4
    38ee:    04 0a             	sp += 8
    38f0:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:541:1


norflash_wait_ok:
    38f2:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:579:0
    38f4:    fc 0b             	sp += -8			  ## vm_sfc.c:579:0
    38f6:    c3 ff 20 a1 07 00 	r3 = 500000 <text_size+0x61F40 : 7a120 >			  ## vm_sfc.c:579:0
    38fc:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:579:0
    3902:    a5 70             	r5 = 10			  ## vm_sfc.c:579:0
    3904:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    3906:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3908:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    390a:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:104:19
    390c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    390e:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    3910:    0d 02             	[sp] = r5
    3912:    50 70             	r0 = 5			  ## vm_sfc.c:585:9
    3914:    48 15             	call -1392 <spi_writebyte : 33a6 >			  ## vm_sfc.c:585:9
    3916:    a4 15             	call -1208 <spi_readbyte : 3460 >			  ## vm_sfc.c:586:19
    3918:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:104:19
    391a:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    391c:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:104:19
    391e:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    3922:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:589:13
    3926:    23 b6             	r3 = r3 - r0			  ## vm_sfc.c:589:13
    3928:    1d 02             	[sp+4] = r5
    392a:    01 26             	if (r3 == 0) goto 2 <norflash_wait_ok+0x3C : 392e >
    392c:    eb 31             	if (r0 != 0) goto -42 <norflash_wait_ok+0x12 : 3904 >
    392e:    04 0a             	sp += 8
    3930:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:599:1


norflash_erase:
    3932:    7a 01             	[--sp] = {rets, r10-r4}			  ## vm_sfc.c:1048:0
    3934:    fa 0b             	sp += -12			  ## vm_sfc.c:1048:0
    3936:    f5 07             	r5 = -1			  ## vm_sfc.c:1048:0
    3938:    00 ff c8 00 0a 00 	if (r0 == 200) goto 20 <norflash_erase+0x20 : 3952 >			  ## vm_sfc.c:1048:0
    393e:    00 ff cc 00 0b 00 	if (r0 == 204) goto 22 <norflash_erase+0x28 : 395a >			  ## vm_sfc.c:1048:0
    3944:    01 ff c9 00 5b 00 	if (r0 != 201) goto 182 <norflash_erase+0xCE : 3a00 >			  ## vm_sfc.c:1048:0
    394a:    88 7d             	r8 = 216			  ## vm_sfc.c:1048:0
    394c:    20 fb 01 4b       	r4 = 65536			  ## vm_sfc.c:1048:0
    3950:    07 18             	goto 14 <norflash_erase+0x2E : 3960 >			  ## vm_sfc.c:1048:0
    3952:    08 72             	r8 = 32			  ## vm_sfc.c:1048:0
    3954:    04 fb 00 10       	r4 = 4096 <sys_clock_limit+0x74 : 1000 >			  ## vm_sfc.c:1048:0
    3958:    03 18             	goto 6 <norflash_erase+0x2E : 3960 >			  ## vm_sfc.c:1048:0
    395a:    18 78             	r8 = 129			  ## vm_sfc.c:1048:0
    395c:    04 fb 00 01       	r4 = 256 <DRIVER_RAM_TOTAL+0xE : 100 >			  ## vm_sfc.c:1048:0
    3960:    c6 ff 70 22 00 00 	r6 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:1048:0
    3966:    00 f6 8c 60       	r0 = [r6 + 140]			  ## vm_sfc.c:1068:35
    396a:    62 fb 00 49       	r2 = 0 - r4			  ## vm_sfc.c:1065:13
    396e:    e2 fd 10 72       	r7 = r2 & r1			  ## vm_sfc.c:1065:10
    3972:    50 b5             	r0 &= r2			  ## vm_sfc.c:1068:50
    3974:    07 f2 44 00       	if (r7 == r0) goto 136 <norflash_erase+0xCE : 3a00 >
    3978:    f7 14             	call -1554 <enter_spi_code : 3368 >			  ## vm_sfc.c:1086:5
    397a:    fe 16             	call -516 <exit_continue_mode : 3778 >			  ## vm_sfc.c:1087:21
    397c:    09 08             	r9 = r0			  ## vm_sfc.c:1087:21
    397e:    a2 17             	call -188 <norflash_write_enable : 38c4 >			  ## vm_sfc.c:1089:5
    3980:    c5 ff 00 53 1e 00 	r5 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3986:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3988:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    398a:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    398c:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    398e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3990:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3992:    aa 70             	r10 = 10			  ## vm_sfc.c:105:53
    3994:    1a f5 00 00       	[sp] = r10
    3998:    80 08             	r0 = r8			  ## vm_sfc.c:1092:5
    399a:    05 15             	call -1526 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1092:5
    399c:    70 08             	r0 = r7			  ## vm_sfc.c:1093:5
    399e:    17 15             	call -1490 <norflash_send_addr : 33ce >			  ## vm_sfc.c:1093:5
    39a0:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    39a2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    39a4:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    39a6:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    39aa:    1a f5 04 00       	[sp+4] = r10
    39ae:    00 f6 a4 60       	r0 = [r6 + 164]			  ## vm_sfc.c:363:30
    39b2:    01 f6 a8 60       	r1 = [r6 + 168]			  ## vm_sfc.c:365:27
    39b6:    20 be             	r0 = r7 - r0			  ## vm_sfc.c:363:12
    39b8:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    39ba:    41 08             	r1 = r4			  ## vm_sfc.c:1098:5
    39bc:    88 f3 b6 1a       	call 1062252 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:1098:5
    39c0:    98 17             	call -208 <norflash_wait_ok : 38f2 >			  ## vm_sfc.c:1099:5
    39c2:    09 e0 05 00       	if (r9 == 0) goto 10 <norflash_erase+0x9E : 39d0 >			  ## vm_sfc.c:1099:5
    39c6:    80 a0             	r0 = sp + 8
    39c8:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    39ca:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    39cc:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    39ce:    93 15             	call -1242 <__norflash_read : 34f6 >			  ## vm_sfc.c:873:5
    39d0:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    39d2:    88 f3 a9 1a       	call 1062226 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    39d6:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    39dc:    05 70             	r5 = 0			  ## vm_sfc.c:385:17
    39de:    5d 60             	b[r0 + 5] = r5			  ## vm_sfc.c:385:17
    39e0:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    39e6:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    39e8:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    39ee:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:517:22
    39f0:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:518:22
    39f2:    2d 40             	[r0 + 8] = r5			  ## vm_sfc.c:519:22
    39f4:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    39f8:    0d 40             	[r0 + 0] = r5			  ## vm_sfc.c:520:26
    39fa:    1d 40             	[r0 + 4] = r5			  ## vm_sfc.c:521:26
    39fc:    88 f3 cc 19       	call 1061784 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    3a00:    50 08             	r0 = r5			  ## vm_sfc.c:1108:1
    3a02:    06 0a             	sp += 12			  ## vm_sfc.c:1108:1
    3a04:    5a 01             	{pc, r10-r4} = [sp++]			  ## vm_sfc.c:1108:1


flushinv_dcache_api:
    3a06:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:1112:0
    3a08:    14 08             	r4 = r1			  ## vm_sfc.c:1112:0
    3a0a:    05 08             	r5 = r0			  ## vm_sfc.c:1112:0
    3a0c:    ad 14             	call -1702 <enter_spi_code : 3368 >			  ## vm_sfc.c:1113:5
    3a0e:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:365:27
    3a14:    01 f6 a4 00       	r1 = [r0 + 164]			  ## vm_sfc.c:363:30
    3a18:    00 f6 a8 00       	r0 = [r0 + 168]			  ## vm_sfc.c:365:27
    3a1c:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:363:12
    3a1e:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    3a20:    41 08             	r1 = r4			  ## vm_sfc.c:1114:5
    3a22:    88 f3 83 1a       	call 1062150 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:1114:5
    3a26:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3a28:    88 f3 7e 1a       	call 1062140 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    3a2c:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    3a32:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    3a34:    59 60             	b[r0 + 5] = r1			  ## vm_sfc.c:385:17
    3a36:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    3a3c:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    3a3e:    c0 ff 50 56 1e 00 	r0 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    3a44:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    3a46:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    3a48:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    3a4a:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3a4e:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    3a50:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    3a52:    15 01             	{rets, r5, r4} = [sp++]			  ## vm_sfc.c:530:5
    3a54:    c8 f3 a0 19       	goto 1061696 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5


_norflash_write:
    3a58:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:974:0
    3a5a:    fa 0b             	sp += -12			  ## vm_sfc.c:974:0
    3a5c:    24 08             	r4 = r2			  ## vm_sfc.c:974:0
    3a5e:    15 08             	r5 = r1			  ## vm_sfc.c:974:0
    3a60:    07 08             	r7 = r0			  ## vm_sfc.c:974:0
    3a62:    4b 28             	if (r4 == 0) goto 150 <_norflash_write+0xA2 : 3afa >			  ## vm_sfc.c:974:0
    3a64:    81 14             	call -1790 <enter_spi_code : 3368 >			  ## vm_sfc.c:980:5
    3a66:    88 16             	call -752 <exit_continue_mode : 3778 >			  ## vm_sfc.c:981:21
    3a68:    08 08             	r8 = r0			  ## vm_sfc.c:981:21
    3a6a:    2c 17             	call -424 <norflash_write_enable : 38c4 >			  ## vm_sfc.c:983:5
    3a6c:    c6 ff 00 53 1e 00 	r6 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >
    3a72:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:104:19
    3a74:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3a76:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:104:19
    3a78:    00 4c             	r0 = [r6 + 0]			  ## vm_sfc.c:104:19
    3a7a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3a7c:    08 4c             	[r6 + 0] = r0			  ## vm_sfc.c:105:53
    3a7e:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    3a80:    08 02             	[sp] = r0
    3a82:    20 70             	r0 = 2			  ## vm_sfc.c:987:5
    3a84:    90 14             	call -1760 <spi_writebyte : 33a6 >			  ## vm_sfc.c:987:5
    3a86:    50 08             	r0 = r5			  ## vm_sfc.c:989:5
    3a88:    a2 14             	call -1724 <norflash_send_addr : 33ce >			  ## vm_sfc.c:989:5
    3a8a:    03 70             	r3 = 0			  ## vm_sfc.c:989:5
    3a8c:    00 fa 00 73       	r0 = b[r7+r3] (u)			  ## vm_sfc.c:993:9
    3a90:    8a 14             	call -1772 <spi_writebyte : 33a6 >			  ## vm_sfc.c:993:9
    3a92:    13 80             	r3 += 1			  ## vm_sfc.c:992:5
    3a94:    34 f2 fa 1f       	if (r4 != r3) goto -12 <_norflash_write+0x34 : 3a8c >			  ## vm_sfc.c:992:5
    3a98:    20 4c             	r0 = [r6 + 8]			  ## vm_sfc.c:104:19
    3a9a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3a9c:    28 4c             	[r6 + 8] = r0			  ## vm_sfc.c:104:19
    3a9e:    00 f4 08 69       	[r6 + 0] |= 8			  ## vm_sfc.c:104:19
    3aa2:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    3aa4:    18 02             	[sp+4] = r0
    3aa6:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:365:27
    3aac:    01 f6 a4 00       	r1 = [r0 + 164]			  ## vm_sfc.c:363:30
    3ab0:    00 f6 a8 00       	r0 = [r0 + 168]			  ## vm_sfc.c:365:27
    3ab4:    61 ba             	r1 = r5 - r1			  ## vm_sfc.c:363:12
    3ab6:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    3ab8:    41 08             	r1 = r4			  ## vm_sfc.c:998:5
    3aba:    88 f3 37 1a       	call 1061998 <sfc_drop_cache : 106f2c >			  ## vm_sfc.c:998:5
    3abe:    19 17             	call -462 <norflash_wait_ok : 38f2 >			  ## vm_sfc.c:999:5
    3ac0:    08 e0 05 00       	if (r8 == 0) goto 10 <_norflash_write+0x76 : 3ace >			  ## vm_sfc.c:999:5
    3ac4:    80 a0             	r0 = sp + 8
    3ac6:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    3ac8:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    3aca:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    3acc:    14 15             	call -1496 <__norflash_read : 34f6 >			  ## vm_sfc.c:873:5
    3ace:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    3ad0:    88 f3 2a 1a       	call 1061972 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    3ad4:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    3ada:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    3adc:    59 60             	b[r0 + 5] = r1			  ## vm_sfc.c:385:17
    3ade:    40 fb af 6a       	r0 = r6 + 44800			  ## vm_sfc.c:505:29
    3ae2:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    3ae4:    60 fc 50 03       	r0 = r6 + 848
    3ae8:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    3aea:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    3aec:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    3aee:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    3af2:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    3af4:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    3af6:    88 f3 4f 19       	call 1061534 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    3afa:    00 70             	r0 = 0			  ## vm_sfc.c:1007:1
    3afc:    06 0a             	sp += 12			  ## vm_sfc.c:1007:1
    3afe:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1007:1


delay_nus:
    3b00:    c0 ff c0 4e 00 00 	r0 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:197:0
    3b06:    00 f9 45 00       	r0 = b[r0 + 69] (u)			  ## power_hw.c:199:27
    3b0a:    03 20             	if (r0 == 0) goto 6 <delay_nus+0x12 : 3b12 >			  ## power_hw.c:199:27
    3b0c:    f0 8f             	r0 += -1			  ## power_hw.c:190:13
    3b0e:    00 00             	nop			  ## power_hw.c:191:9
    3b10:    fd 31             	if (r0 != 0) goto -6 <delay_nus+0xC : 3b0c >			  ## power_hw.c:191:9
    3b12:    20 00             	rts			  ## power_hw.c:200:1


__hw_spi_clk_div:
    3b14:    75 01             	[--sp] = {rets, r5, r4}			  ## clock.c:223:0
    3b16:    15 08             	r5 = r1			  ## clock.c:223:0
    3b18:    04 08             	r4 = r0			  ## clock.c:223:0
    3b1a:    88 f3 3f 19       	call 1061502 <local_irq_disable : 106d9c >			  ## clock.c:224:5
    3b1e:    08 00             	csync			  ## clock.c:224:5
    3b20:    08 00             	csync			  ## clock.c:225:5
    3b22:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >
    3b28:    01 40             	r1 = [r0 + 0]			  ## clock.c:225:5
    3b2a:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x14 : 3b28 >			  ## clock.c:225:5
    3b2e:    08 00             	csync			  ## clock.c:226:5
    3b30:    40 fb df 0a       	r0 = r0 + 57088			  ## clock.c:226:5
    3b34:    01 40             	r1 = [r0 + 0]			  ## clock.c:226:5
    3b36:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <__hw_spi_clk_div+0x20 : 3b34 >			  ## clock.c:226:5
    3b3a:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    3b40:    01 40             	r1 = [r0 + 0]			  ## clock.c:227:20
    3b42:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <__hw_spi_clk_div+0x2C : 3b40 >			  ## clock.c:227:5
    3b46:    01 40             	r1 = [r0 + 0]			  ## clock.c:228:17
    3b48:    71 b0             	r1 &= 4294967294			  ## clock.c:228:17
    3b4a:    09 40             	[r0 + 0] = r1			  ## clock.c:228:17
    3b4c:    1c 40             	[r0 + 4] = r4			  ## clock.c:229:18
    3b4e:    01 40             	r1 = [r0 + 0]			  ## clock.c:230:5
    3b50:    22 fd 0f 59       	r2 = r5 & 15			  ## clock.c:230:5
    3b54:    31 fd f0 1b       	r1 = r1 & 4279238655			  ## clock.c:230:5
    3b58:    c4 fd a0 12       	r1 <= insert(r2, p:20, l:4)			  ## clock.c:230:5
    3b5c:    09 40             	[r0 + 0] = r1			  ## clock.c:230:5
    3b5e:    00 f4 01 09       	[r0 + 0] |= 1			  ## clock.c:231:17
    3b62:    c0 ff c8 30 00 00 	r0 = 12488 <clock_poweroff_sfc_info.0 : 30c8 >			  ## clock.c:232:38
    3b68:    0c 50             	h[r0 + 0] = r4			  ## clock.c:232:38
    3b6a:    15 01             	{rets, r5, r4} = [sp++]			  ## clock.c:233:5
    3b6c:    c8 f3 14 19       	goto 1061416 <local_irq_enable : 106d98 >			  ## clock.c:233:5


clock_enter_deepsleep:
    3b70:    20 00             	rts			  ## clock.c:2504:0


clock_exit_deepsleep:
    3b72:    c0 ff c8 30 00 00 	r0 = 12488 <clock_poweroff_sfc_info.0 : 30c8 >			  ## clock.c:2508:0
    3b78:    00 50             	r0 = h[r0 + 0] (u)			  ## clock.c:2509:20
    3b7a:    c1 ff 04 02 1f 00 	r1 = 2032132 <uECC_vli_cmp_unsafe+0xE9208 : 1f0204 >			  ## clock.c:2509:18
    3b80:    08 42             	[r1 + 0] = r0			  ## clock.c:2509:18
    3b82:    20 00             	rts			  ## clock.c:2510:1


spi_soft_writebyte:
    3b84:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:124:0
    3b86:    c1 ff 00 53 1e 00 	r1 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:124:0
    3b8c:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:125:19
    3b8e:    23 42             	r3 = [r1 + 8]			  ## vm_sfc.c:126:20
    3b90:    f3 b0             	r3 &= 4294967293			  ## vm_sfc.c:126:20
    3b92:    2b 42             	[r1 + 8] = r3			  ## vm_sfc.c:126:20
    3b94:    c3 d1             	r3 = r0 >> 7			  ## vm_sfc.c:127:31
    3b96:    24 08             	r4 = r2			  ## vm_sfc.c:127:31
    3b98:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:127:31
    3b9c:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:127:20
    3b9e:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:128:21
    3ba2:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:129:21
    3ba4:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:129:21
    3ba6:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:129:21
    3ba8:    83 d1             	r3 = r0 >> 6			  ## vm_sfc.c:130:31
    3baa:    24 08             	r4 = r2			  ## vm_sfc.c:130:31
    3bac:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:130:31
    3bb0:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:130:20
    3bb2:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:131:21
    3bb6:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:132:21
    3bb8:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:132:21
    3bba:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:132:21
    3bbc:    43 d1             	r3 = r0 >> 5			  ## vm_sfc.c:130:55
    3bbe:    24 08             	r4 = r2			  ## vm_sfc.c:133:31
    3bc0:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:133:31
    3bc4:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:133:20
    3bc6:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:134:21
    3bca:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:135:21
    3bcc:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:135:21
    3bce:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:135:21
    3bd0:    03 d1             	r3 = r0 >> 4			  ## vm_sfc.c:133:54
    3bd2:    24 08             	r4 = r2			  ## vm_sfc.c:136:31
    3bd4:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:136:31
    3bd8:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:136:20
    3bda:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:137:21
    3bde:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:138:21
    3be0:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:138:21
    3be2:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:138:21
    3be4:    c3 d0             	r3 = r0 >> 3			  ## vm_sfc.c:136:53
    3be6:    24 08             	r4 = r2			  ## vm_sfc.c:139:31
    3be8:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:139:31
    3bec:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:139:20
    3bee:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:140:21
    3bf2:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:141:21
    3bf4:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:141:21
    3bf6:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:141:21
    3bf8:    83 d0             	r3 = r0 >> 2			  ## vm_sfc.c:139:52
    3bfa:    24 08             	r4 = r2			  ## vm_sfc.c:142:31
    3bfc:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:142:31
    3c00:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:142:20
    3c02:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:143:21
    3c06:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:144:21
    3c08:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:144:21
    3c0a:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:144:21
    3c0c:    43 d0             	r3 = r0 >> 1			  ## vm_sfc.c:142:51
    3c0e:    24 08             	r4 = r2			  ## vm_sfc.c:145:31
    3c10:    c1 fd 08 43       	r4 <= insert(r3, p:1, l:1)			  ## vm_sfc.c:145:31
    3c14:    0c 42             	[r1 + 0] = r4			  ## vm_sfc.c:145:20
    3c16:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:146:21
    3c1a:    03 42             	r3 = [r1 + 0]			  ## vm_sfc.c:147:21
    3c1c:    73 b0             	r3 &= 4294967294			  ## vm_sfc.c:147:21
    3c1e:    0b 42             	[r1 + 0] = r3			  ## vm_sfc.c:147:21
    3c20:    c1 fd 08 20       	r2 <= insert(r0, p:1, l:1)			  ## vm_sfc.c:148:31
    3c24:    0a 42             	[r1 + 0] = r2			  ## vm_sfc.c:148:20
    3c26:    00 f4 01 19       	[r1 + 0] |= 1			  ## vm_sfc.c:149:21
    3c2a:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:150:21
    3c2c:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:150:21
    3c2e:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:150:21
    3c30:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:151:20
    3c32:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:151:20
    3c34:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:151:20
    3c36:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:152:1


ze_entry_tm:
    3c38:    77 01             	[--sp] = {rets, r7-r4}			  ## vm_sfc.c:1176:0
    3c3a:    f4 0b             	sp += -24			  ## vm_sfc.c:1176:0
    3c3c:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## vm_sfc.c:1176:0
    3c42:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    3c46:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3c4a:    c2 f4 28 49       	[r4 + 8] = 40			  ## vm_sfc.c:1169:20
    3c4e:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3c52:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3c54:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3c56:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0x1A : 3c52 >			  ## vm_sfc.c:1171:5
    3c5a:    06 fb 00 40       	r6 = 16384 <check_flash_type+0x4C : 4000 >			  ## vm_sfc.c:1172:20
    3c5e:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3c60:    45 fc 00 4f       	r5 = r4 + 20224
    3c64:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3c66:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3c68:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3c6a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3c6c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3c6e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3c70:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    3c72:    1f 02             	[sp+4] = r7
    3c74:    60 73             	r0 = 54			  ## vm_sfc.c:1180:5
    3c76:    86 17             	call -244 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1180:5
    3c78:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3c7a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3c7c:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3c7e:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3c82:    4f 02             	[sp+16] = r7
    3c84:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3c86:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3c8a:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3c8e:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3c92:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3c94:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3c96:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0x5A : 3c92 >			  ## vm_sfc.c:1171:5
    3c9a:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3c9c:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3c9e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3ca0:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3ca2:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3ca4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3ca6:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3ca8:    5f 02             	[sp+20] = r7
    3caa:    70 7d             	r0 = 215			  ## vm_sfc.c:1184:5
    3cac:    6b 17             	call -298 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1184:5
    3cae:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3cb0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3cb2:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3cb4:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3cb8:    3f 02             	[sp+12] = r7
    3cba:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3cbc:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3cc0:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3cc4:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3cc8:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3cca:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3ccc:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0x90 : 3cc8 >			  ## vm_sfc.c:1171:5
    3cd0:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3cd2:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3cd4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3cd6:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3cd8:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3cda:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3cdc:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3cde:    2f 02             	[sp+8] = r7
    3ce0:    00 7a             	r0 = 160			  ## vm_sfc.c:1188:5
    3ce2:    50 17             	call -352 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1188:5
    3ce4:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3ce6:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3ce8:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3cea:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3cee:    0f 02             	[sp] = r7
    3cf0:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3cf2:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3cf6:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3cfa:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3cfe:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3d00:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3d02:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_entry_tm+0xC6 : 3cfe >			  ## vm_sfc.c:1171:5
    3d06:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1172:20
    3d0a:    0c 0a             	sp += 24			  ## vm_sfc.c:1172:20
    3d0c:    57 01             	{pc, r7-r4} = [sp++]			  ## vm_sfc.c:1191:1


ze_exit_tm:
    3d0e:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:1194:0
    3d10:    f4 0b             	sp += -24			  ## vm_sfc.c:1194:0
    3d12:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## vm_sfc.c:1194:0
    3d18:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    3d1c:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3d20:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3d24:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3d28:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3d2a:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3d2c:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0x1A : 3d28 >			  ## vm_sfc.c:1171:5
    3d30:    06 fb 00 40       	r6 = 16384 <check_flash_type+0x4C : 4000 >			  ## vm_sfc.c:1172:20
    3d34:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3d36:    45 fc 00 4f       	r5 = r4 + 20224
    3d3a:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3d3c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3d3e:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3d40:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3d42:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3d44:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3d46:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    3d48:    1f 02             	[sp+4] = r7
    3d4a:    f0 70             	r0 = 15			  ## vm_sfc.c:1198:5
    3d4c:    1b 17             	call -458 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1198:5
    3d4e:    00 70             	r0 = 0			  ## vm_sfc.c:1199:5
    3d50:    08 70             	r8 = 0			  ## vm_sfc.c:1199:5
    3d52:    18 17             	call -464 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1199:5
    3d54:    00 70             	r0 = 0			  ## vm_sfc.c:1200:5
    3d56:    16 17             	call -468 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1200:5
    3d58:    30 70             	r0 = 3			  ## vm_sfc.c:1201:5
    3d5a:    14 17             	call -472 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1201:5
    3d5c:    00 70             	r0 = 0			  ## vm_sfc.c:1202:5
    3d5e:    12 17             	call -476 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1202:5
    3d60:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3d62:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3d64:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3d66:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3d6a:    4f 02             	[sp+16] = r7
    3d6c:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3d6e:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    3d72:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3d76:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3d7a:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3d7c:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3d7e:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0x6C : 3d7a >			  ## vm_sfc.c:1171:5
    3d82:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3d84:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3d86:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3d88:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3d8a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3d8c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3d8e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3d90:    5f 02             	[sp+20] = r7
    3d92:    f0 70             	r0 = 15			  ## vm_sfc.c:1206:5
    3d94:    f7 16             	call -530 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1206:5
    3d96:    00 70             	r0 = 0			  ## vm_sfc.c:1207:5
    3d98:    f5 16             	call -534 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1207:5
    3d9a:    00 70             	r0 = 0			  ## vm_sfc.c:1208:5
    3d9c:    f3 16             	call -538 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1208:5
    3d9e:    10 70             	r0 = 1			  ## vm_sfc.c:1209:5
    3da0:    f1 16             	call -542 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1209:5
    3da2:    00 70             	r0 = 0			  ## vm_sfc.c:1210:5
    3da4:    ef 16             	call -546 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1210:5
    3da6:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3da8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3daa:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3dac:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3db0:    3f 02             	[sp+12] = r7
    3db2:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3db4:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    3db8:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3dbc:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3dc0:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3dc2:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3dc4:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0xB2 : 3dc0 >			  ## vm_sfc.c:1171:5
    3dc8:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3dca:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3dcc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3dce:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3dd0:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3dd2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3dd4:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3dd6:    2f 02             	[sp+8] = r7
    3dd8:    80 71             	r0 = 24			  ## vm_sfc.c:1214:5
    3dda:    d4 16             	call -600 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1214:5
    3ddc:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3dde:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3de0:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3de2:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3de6:    0f 02             	[sp] = r7
    3de8:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3dea:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3dee:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3df2:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3df6:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3df8:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3dfa:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_exit_tm+0xE8 : 3df6 >			  ## vm_sfc.c:1171:5
    3dfe:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1172:20
    3e02:    0c 0a             	sp += 24			  ## vm_sfc.c:1172:20
    3e04:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1217:1


spi_soft_readbyte:
    3e06:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:195:0
    3e08:    c0 ff 00 53 1e 00 	r0 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:195:0
    3e0e:    02 f4 04 09       	[r0 + 8] |= 4			  ## vm_sfc.c:198:20
    3e12:    81 70             	r1 = 8
    3e14:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:200:25
    3e18:    13 40             	r3 = [r0 + 4]			  ## vm_sfc.c:202:13
    3e1a:    04 40             	r4 = [r0 + 0]			  ## vm_sfc.c:205:25
    3e1c:    25 08             	r5 = r2			  ## vm_sfc.c:205:25
    3e1e:    32 fd 01 49       	r2 = r4 & 4294967294			  ## vm_sfc.c:205:25
    3e22:    0a 40             	[r0 + 0] = r2			  ## vm_sfc.c:205:25
    3e24:    81 fd 10 23       	r2 = uextra(r3, p:2, l:1)			  ## vm_sfc.c:202:13
    3e28:    f1 8f             	r1 += -1			  ## vm_sfc.c:199:19
    3e2a:    df fd 08 25       	r2 <= insert(r5, p:1, l:31)			  ## vm_sfc.c:202:13
    3e2e:    61 ff ff 19 f0 ff 	if ((r1 & 255) != 0) goto -32 <spi_soft_readbyte+0xE : 3e14 >			  ## vm_sfc.c:199:5
    3e34:    80 04             	r0 = r2.b0 (u)			  ## vm_sfc.c:207:5
    3e36:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:207:5


ze_flash_cam_patch:
    3e38:    7e 01             	[--sp] = {rets, r14-r4}			  ## vm_sfc.c:1221:0
    3e3a:    f0 0b             	sp += -32			  ## vm_sfc.c:1221:0
    3e3c:    fd 16             	call -518 <ze_entry_tm : 3c38 >			  ## vm_sfc.c:1224:5
    3e3e:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >
    3e44:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    3e48:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3e4c:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3e50:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3e54:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3e56:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3e58:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x1C : 3e54 >			  ## vm_sfc.c:1171:5
    3e5c:    06 fb 00 40       	r6 = 16384 <check_flash_type+0x4C : 4000 >			  ## vm_sfc.c:1172:20
    3e60:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3e62:    45 fc 00 4f       	r5 = r4 + 20224
    3e66:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3e68:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3e6a:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3e6c:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3e6e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3e70:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3e72:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    3e74:    1f 02             	[sp+4] = r7
    3e76:    f0 70             	r0 = 15			  ## vm_sfc.c:1229:5
    3e78:    85 16             	call -758 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1229:5
    3e7a:    00 70             	r0 = 0			  ## vm_sfc.c:1230:5
    3e7c:    08 70             	r8 = 0			  ## vm_sfc.c:1230:5
    3e7e:    82 16             	call -764 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1230:5
    3e80:    00 70             	r0 = 0			  ## vm_sfc.c:1231:5
    3e82:    80 16             	call -768 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1231:5
    3e84:    30 70             	r0 = 3			  ## vm_sfc.c:1232:5
    3e86:    7e 16             	call -772 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1232:5
    3e88:    00 74             	r0 = 64			  ## vm_sfc.c:1233:5
    3e8a:    7c 16             	call -776 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1233:5
    3e8c:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3e8e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3e90:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3e92:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3e96:    2f 02             	[sp+8] = r7
    3e98:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    3e9a:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    3e9e:    c2 f4 08 49       	[r4 + 8] = 8			  ## vm_sfc.c:1169:20
    3ea2:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3ea6:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3ea8:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3eaa:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x6E : 3ea6 >			  ## vm_sfc.c:1171:5
    3eae:    69 08             	r9 = r6			  ## vm_sfc.c:1172:20
    3eb0:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    3eb4:    c6 ff ff ff 01 00 	r6 = 131071 <text_size+0x7E1F : 1ffff >
    3eba:    ad 70             	r13 = 10
    3ebc:    8a 70             	r10 = 8
    3ebe:    1b 71             	r11 = 17
    3ec0:    cc ff 58 08 00 00 	r12 = 2136 <def_cam : 858 >
    3ec6:    20 fb 1e eb       	r14 = 1966080
    3eca:    07 70             	r7 = 0
    3ecc:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3ece:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3ed0:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3ed2:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3ed4:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3ed6:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3ed8:    1d f5 14 00       	[sp+20] = r13
    3edc:    60 70             	r0 = 6			  ## vm_sfc.c:1239:9
    3ede:    52 16             	call -860 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1239:9
    3ee0:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3ee2:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3ee4:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3ee6:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3eea:    1d f5 18 00       	[sp+24] = r13
    3eee:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1167:20
    3ef2:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    3ef6:    1a f6 08 40       	[r4 + 8] = r10			  ## vm_sfc.c:1169:20
    3efa:    1b f6 00 40       	[r4 + 0] = r11			  ## vm_sfc.c:1170:20
    3efe:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3f00:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3f02:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0xC6 : 3efe >			  ## vm_sfc.c:1171:5
    3f06:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    3f0a:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3f0c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3f0e:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3f10:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3f12:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3f14:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3f16:    1d f5 1c 00       	[sp+28] = r13
    3f1a:    20 70             	r0 = 2			  ## vm_sfc.c:1245:9
    3f1c:    33 16             	call -922 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1245:9
    3f1e:    00 70             	r0 = 0			  ## vm_sfc.c:1246:9
    3f20:    31 16             	call -926 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1246:9
    3f22:    00 70             	r0 = 0			  ## vm_sfc.c:1247:9
    3f24:    2f 16             	call -930 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1247:9
    3f26:    c0 05             	r0 = r7.b0 (u)			  ## vm_sfc.c:1248:9
    3f28:    2d 16             	call -934 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1248:9
    3f2a:    00 fa 00 7c       	r0 = b[r7+r12] (u)			  ## vm_sfc.c:1249:9
    3f2e:    2a 16             	call -940 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1249:9
    3f30:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3f32:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3f34:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3f36:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3f3a:    1d f5 10 00       	[sp+16] = r13
    3f3e:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1167:20
    3f42:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    3f46:    1a f6 08 40       	[r4 + 8] = r10			  ## vm_sfc.c:1169:20
    3f4a:    1b f6 00 40       	[r4 + 0] = r11			  ## vm_sfc.c:1170:20
    3f4e:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3f50:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3f52:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x116 : 3f4e >			  ## vm_sfc.c:1171:5
    3f56:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    3f5a:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3f5c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3f5e:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3f60:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    3f62:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    3f64:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    3f66:    1d f5 0c 00       	[sp+12] = r13
    3f6a:    05 18             	goto 10 <ze_flash_cam_patch+0x13E : 3f76 >
    3f6c:    f6 8f             	r6 += -1			  ## vm_sfc.c:1263:34
    3f6e:    03 3c             	if (r6 != 0) goto 6 <ze_flash_cam_patch+0x13E : 3f76 >
    3f70:    00 f4 10 e9       	[r14 + 0] |= 16			  ## vm_sfc.c:1265:35
    3f74:    06 70             	r6 = 0			  ## vm_sfc.c:1265:35
    3f76:    50 70             	r0 = 5
    3f78:    05 16             	call -1014 <spi_soft_writebyte : 3b84 >
    3f7a:    45 17             	call -374 <spi_soft_readbyte : 3e06 >
    3f7c:    f7 31             	if (r0 != 0) goto -18 <ze_flash_cam_patch+0x134 : 3f6c >
    3f7e:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3f80:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3f82:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    3f84:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    3f88:    1d f5 00 00       	[sp] = r13
    3f8c:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1167:20
    3f90:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    3f94:    1a f6 08 40       	[r4 + 8] = r10			  ## vm_sfc.c:1169:20
    3f98:    1b f6 00 40       	[r4 + 0] = r11			  ## vm_sfc.c:1170:20
    3f9c:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3f9e:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3fa0:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <ze_flash_cam_patch+0x164 : 3f9c >			  ## vm_sfc.c:1171:5
    3fa4:    17 80             	r7 += 1			  ## vm_sfc.c:1237:28
    3fa6:    19 f6 00 40       	[r4 + 0] = r9			  ## vm_sfc.c:1172:20
    3faa:    77 e0 8f 1f       	if (r7 != 7) goto -226 <ze_flash_cam_patch+0x94 : 3ecc >			  ## vm_sfc.c:1172:20
    3fae:    af 16             	call -674 <ze_exit_tm : 3d0e >			  ## vm_sfc.c:1273:5
    3fb0:    10 0a             	sp += 32			  ## vm_sfc.c:1273:5
    3fb2:    5e 01             	{pc, r14-r4} = [sp++]			  ## vm_sfc.c:1275:1


check_flash_type:
    3fb4:    78 01             	[--sp] = {rets, r8-r4}			  ## vm_sfc.c:1280:0
    3fb6:    f8 0b             	sp += -16			  ## vm_sfc.c:1280:0
    3fb8:    c0 ff 70 22 00 00 	r0 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:1281:21
    3fbe:    00 f6 90 00       	r0 = [r0 + 144]			  ## vm_sfc.c:1281:21
    3fc2:    c1 ff ed cd a1 ff 	r1 = 4288794093 <uECC_vli_cmp_unsafe+0x1915DF1 : 1a1cded >			  ## vm_sfc.c:1281:43
    3fc8:    10 09             	r0 += r1			  ## vm_sfc.c:1281:43
    3fca:    10 e0 57 80       	if (r0 > 1) goto 174 <check_flash_type+0xC8 : 407c >			  ## vm_sfc.c:1281:43
    3fce:    c4 ff 00 04 1e 00 	r4 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >
    3fd4:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1167:20
    3fd8:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    3fdc:    c2 f4 50 49       	[r4 + 8] = 80			  ## vm_sfc.c:1169:20
    3fe0:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    3fe4:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    3fe6:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    3fe8:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <check_flash_type+0x30 : 3fe4 >			  ## vm_sfc.c:1171:5
    3fec:    06 fb 00 40       	r6 = 16384 <check_flash_type+0x4C : 4000 >			  ## vm_sfc.c:1172:20
    3ff0:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    3ff2:    22 17             	call -444 <ze_flash_cam_patch : 3e38 >			  ## vm_sfc.c:1285:9
    3ff4:    21 16             	call -958 <ze_entry_tm : 3c38 >			  ## vm_sfc.c:1287:9
    3ff6:    45 fc 00 4f       	r5 = r4 + 20224
    3ffa:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    3ffc:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    3ffe:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4000:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    4002:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    4004:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    4006:    a7 70             	r7 = 10			  ## vm_sfc.c:105:53
    4008:    1f 02             	[sp+4] = r7
    400a:    f0 70             	r0 = 15			  ## vm_sfc.c:1290:9
    400c:    bb 15             	call -1162 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1290:9
    400e:    00 70             	r0 = 0			  ## vm_sfc.c:1291:9
    4010:    08 70             	r8 = 0			  ## vm_sfc.c:1291:9
    4012:    b8 15             	call -1168 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1291:9
    4014:    00 70             	r0 = 0			  ## vm_sfc.c:1292:9
    4016:    b6 15             	call -1172 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1292:9
    4018:    20 70             	r0 = 2			  ## vm_sfc.c:1293:9
    401a:    b4 15             	call -1176 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1293:9
    401c:    00 77             	r0 = 112			  ## vm_sfc.c:1294:9
    401e:    b2 15             	call -1180 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1294:9
    4020:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4022:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4024:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    4026:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    402a:    3f 02             	[sp+12] = r7
    402c:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    402e:    18 f6 04 40       	[r4 + 4] = r8			  ## vm_sfc.c:1168:20
    4032:    c2 f4 10 49       	[r4 + 8] = 16			  ## vm_sfc.c:1169:20
    4036:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    403a:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    403c:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    403e:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <check_flash_type+0x86 : 403a >			  ## vm_sfc.c:1171:5
    4042:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1172:20
    4044:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4046:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4048:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    404a:    00 4a             	r0 = [r5 + 0]			  ## vm_sfc.c:104:19
    404c:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    404e:    08 4a             	[r5 + 0] = r0			  ## vm_sfc.c:105:53
    4050:    2f 02             	[sp+8] = r7
    4052:    80 71             	r0 = 24			  ## vm_sfc.c:1299:9
    4054:    97 15             	call -1234 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:1299:9
    4056:    20 4a             	r0 = [r5 + 8]			  ## vm_sfc.c:104:19
    4058:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    405a:    28 4a             	[r5 + 8] = r0			  ## vm_sfc.c:104:19
    405c:    00 f4 08 59       	[r5 + 0] |= 8			  ## vm_sfc.c:104:19
    4060:    0f 02             	[sp] = r7
    4062:    0e 48             	[r4 + 0] = r6			  ## vm_sfc.c:1167:20
    4064:    c1 f4 00 49       	[r4 + 4] = 0			  ## vm_sfc.c:1168:20
    4068:    c2 f4 10 49       	[r4 + 8] = 16			  ## vm_sfc.c:1169:20
    406c:    c0 f4 11 49       	[r4 + 0] = 17			  ## vm_sfc.c:1170:20
    4070:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:1171:24
    4072:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    4074:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <check_flash_type+0xBC : 4070 >			  ## vm_sfc.c:1171:5
    4078:    c0 f4 40 4a       	[r4 + 0] = 16384			  ## vm_sfc.c:1172:20
    407c:    08 0a             	sp += 16
    407e:    58 01             	{pc, r8-r4} = [sp++]			  ## vm_sfc.c:1303:1


check_ze_flash_id:
    4080:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:1308:0
    4082:    c4 ff 70 22 00 00 	r4 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:1308:0
    4088:    00 f6 90 40       	r0 = [r4 + 144]			  ## vm_sfc.c:1309:20
    408c:    04 30             	if (r0 != 0) goto 8 <check_ze_flash_id+0x16 : 4096 >			  ## vm_sfc.c:1309:20
    408e:    bf f3 a9 fb       	call -2222 <read_flash_id : 37e4 >			  ## vm_sfc.c:1310:9
    4092:    00 f6 90 40       	r0 = [r4 + 144]			  ## vm_sfc.c:1310:9
    4096:    c1 ff ed cd a1 ff 	r1 = 4288794093 <uECC_vli_cmp_unsafe+0x1915DF1 : 1a1cded >			  ## vm_sfc.c:1312:43
    409c:    01 09             	r1 += r0			  ## vm_sfc.c:1312:43
    409e:    10 70             	r0 = 1			  ## vm_sfc.c:1312:43
    40a0:    21 e0 01 30       	if (r1 < 2) goto 2 <check_ze_flash_id+0x26 : 40a6 >			  ## vm_sfc.c:1312:43
    40a4:    00 70             	r0 = 0			  ## vm_sfc.c:1312:43
    40a6:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:1317:1


cpu_addr2flash_addr:
    40a8:    c1 ff 70 22 00 00 	r1 = 8816 <trans_server_adv_config : 2270 >			  ## vm_sfc.c:370:0
    40ae:    02 f6 a4 10       	r2 = [r1 + 164]			  ## vm_sfc.c:373:27
    40b2:    01 f6 a8 10       	r1 = [r1 + 168]			  ## vm_sfc.c:373:68
    40b6:    20 09             	r0 += r2			  ## vm_sfc.c:373:51
    40b8:    60 b0             	r0 = r0 - r1			  ## vm_sfc.c:373:41
    40ba:    20 00             	rts			  ## vm_sfc.c:373:5


enter_continue_mode:
    40bc:    34 00             	[--sp] = rets			  ## vm_sfc.c:860:0
    40be:    fe 0b             	sp += -4			  ## vm_sfc.c:860:0
    40c0:    00 a0             	r0 = sp + 0			  ## vm_sfc.c:860:0
    40c2:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    40c4:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    40c6:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    40c8:    bf f3 15 fa       	call -3030 <__norflash_read : 34f6 >			  ## vm_sfc.c:873:5
    40cc:    02 0a             	sp += 4			  ## vm_sfc.c:873:5
    40ce:    30 00             	pc = [sp++]			  ## vm_sfc.c:875:1


exit_spi_code:
    40d0:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:496:0
    40d2:    04 08             	r4 = r0			  ## vm_sfc.c:496:0
    40d4:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    40d6:    88 f3 27 17       	call 1060430 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    40da:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    40e0:    5c 60             	b[r0 + 5] = r4			  ## vm_sfc.c:385:17
    40e2:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >			  ## vm_sfc.c:505:29
    40e8:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    40ea:    00 70             	r0 = 0			  ## vm_sfc.c:505:29
    40ec:    c1 ff 50 56 1e 00 	r1 = 1988176 <uECC_vli_cmp_unsafe+0xDE654 : 1e5650 >
    40f2:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:517:22
    40f4:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:518:22
    40f6:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:519:22
    40f8:    11 fc f4 00       	r1 = r1 + 244			  ## vm_sfc.c:519:22
    40fc:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:520:26
    40fe:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:521:26
    4100:    14 01             	{rets, r4} = [sp++]			  ## vm_sfc.c:530:5
    4102:    c8 f3 49 16       	goto 1059986 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5


flash_enter_2bit_mode_by_spi_soft:
    4106:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:827:0
    4108:    fc 0b             	sp += -8			  ## vm_sfc.c:827:0
    410a:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:827:0
    4110:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    4112:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4114:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    4116:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:104:19
    4118:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    411a:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    411c:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    411e:    08 02             	[sp] = r0
    4120:    b0 7b             	r0 = 187			  ## vm_sfc.c:829:5
    4122:    30 15             	call -1440 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:829:5
    4124:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:830:20
    4126:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:830:20
    4128:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:830:20
    412a:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:831:20
    412c:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:831:20
    412e:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:831:20
    4130:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:832:20
    4132:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:832:20
    4134:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:832:20
    4136:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:833:20
    4138:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:833:20
    413a:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:833:20
    413c:    01 48             	r1 = [r4 + 0]
    413e:    c0 70             	r0 = 12
    4140:    11 b0             	r1 |= 1			  ## vm_sfc.c:835:25
    4142:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:835:25
    4144:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:836:25
    4146:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:836:25
    4148:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:836:25
    414a:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:836:25
    414c:    f0 8f             	r0 += -1			  ## vm_sfc.c:834:22
    414e:    61 ff ff 09 f6 ff 	if ((r0 & 255) != 0) goto -20 <flash_enter_2bit_mode_by_spi_soft+0x3A : 4140 >			  ## vm_sfc.c:834:5
    4154:    30 fd 02 19       	r0 = r1 & 4294967293			  ## vm_sfc.c:838:20
    4158:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:838:20
    415a:    00 f4 04 49       	[r4 + 0] |= 4			  ## vm_sfc.c:839:20
    415e:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:840:21
    4162:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:841:21
    4164:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:841:21
    4166:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:841:21
    4168:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:842:21
    416c:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:843:21
    416e:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:843:21
    4170:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:843:21
    4172:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:844:20
    4174:    f0 b0             	r0 &= 4294967293			  ## vm_sfc.c:844:20
    4176:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:844:20
    4178:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:845:20
    417a:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:845:20
    417c:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:845:20
    417e:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:846:21
    4182:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:847:21
    4184:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:847:21
    4186:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:847:21
    4188:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:848:21
    418c:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:849:21
    418e:    70 b0             	r0 &= 4294967294			  ## vm_sfc.c:849:21
    4190:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:849:21
    4192:    02 f4 04 49       	[r4 + 8] |= 4			  ## vm_sfc.c:850:20
    4196:    80 70             	r0 = 8
    4198:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:852:25
    419c:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:853:25
    419e:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:853:25
    41a0:    f0 8f             	r0 += -1			  ## vm_sfc.c:851:22
    41a2:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:853:25
    41a4:    61 ff ff 09 f7 ff 	if ((r0 & 255) != 0) goto -18 <flash_enter_2bit_mode_by_spi_soft+0x92 : 4198 >			  ## vm_sfc.c:851:5
    41aa:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    41ac:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    41ae:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    41b0:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    41b4:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    41b6:    18 02             	[sp+4] = r0
    41b8:    04 0a             	sp += 8
    41ba:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:856:1


flash_enter_4bit_mode_by_spi_soft:
    41bc:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:787:0
    41be:    fc 0b             	sp += -8			  ## vm_sfc.c:787:0
    41c0:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:787:0
    41c6:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    41c8:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    41ca:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    41cc:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:104:19
    41ce:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    41d0:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    41d2:    a0 70             	r0 = 10			  ## vm_sfc.c:105:53
    41d4:    08 02             	[sp] = r0
    41d6:    b0 7e             	r0 = 235			  ## vm_sfc.c:789:5
    41d8:    d5 14             	call -1622 <spi_soft_writebyte : 3b84 >			  ## vm_sfc.c:789:5
    41da:    00 48             	r0 = [r4 + 0]			  ## vm_sfc.c:790:20
    41dc:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:790:20
    41de:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:790:20
    41e0:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:791:20
    41e2:    70 b1             	r0 &= 4294967291			  ## vm_sfc.c:791:20
    41e4:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:791:20
    41e6:    40 fc 00 fe       	r0 = r4 + -512			  ## vm_sfc.c:791:20
    41ea:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:792:20
    41ec:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:792:20
    41ee:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:792:20
    41f0:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:793:20
    41f2:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:793:20
    41f4:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:793:20
    41f6:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:794:20
    41f8:    71 b4             	r1 &= 4294967039			  ## vm_sfc.c:794:20
    41fa:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:794:20
    41fc:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:795:20
    41fe:    71 b4             	r1 &= 4294967039			  ## vm_sfc.c:795:20
    4200:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:795:20
    4202:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:796:20
    4204:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:796:20
    4206:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:796:20
    4208:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:797:20
    420a:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:797:20
    420c:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:797:20
    420e:    02 48             	r2 = [r4 + 0]
    4210:    61 70             	r1 = 6
    4212:    12 b0             	r2 |= 1			  ## vm_sfc.c:799:25
    4214:    0a 48             	[r4 + 0] = r2			  ## vm_sfc.c:799:25
    4216:    02 48             	r2 = [r4 + 0]			  ## vm_sfc.c:800:25
    4218:    72 b0             	r2 &= 4294967294			  ## vm_sfc.c:800:25
    421a:    0a 48             	[r4 + 0] = r2			  ## vm_sfc.c:800:25
    421c:    02 48             	r2 = [r4 + 0]			  ## vm_sfc.c:800:25
    421e:    f1 8f             	r1 += -1			  ## vm_sfc.c:798:22
    4220:    61 ff ff 19 f6 ff 	if ((r1 & 255) != 0) goto -20 <flash_enter_4bit_mode_by_spi_soft+0x56 : 4212 >			  ## vm_sfc.c:798:5
    4226:    31 fd 02 29       	r1 = r2 & 4294967293			  ## vm_sfc.c:802:20
    422a:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:802:20
    422c:    00 f4 04 49       	[r4 + 0] |= 4			  ## vm_sfc.c:803:20
    4230:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:804:20
    4232:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:804:20
    4234:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:804:20
    4236:    00 f4 01 0a       	[r0 + 0] |= 256			  ## vm_sfc.c:805:20
    423a:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:806:21
    423e:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:807:21
    4240:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:807:21
    4242:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:807:21
    4244:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:808:20
    4246:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:808:20
    4248:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:808:20
    424a:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:809:20
    424c:    71 b1             	r1 &= 4294967291			  ## vm_sfc.c:809:20
    424e:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:809:20
    4250:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:810:20
    4252:    f1 b4             	r1 &= 4294966783			  ## vm_sfc.c:810:20
    4254:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:810:20
    4256:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:811:20
    4258:    71 b4             	r1 &= 4294967039			  ## vm_sfc.c:811:20
    425a:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:811:20
    425c:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:812:21
    4260:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:813:21
    4262:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:813:21
    4264:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:813:21
    4266:    02 f4 04 49       	[r4 + 8] |= 4			  ## vm_sfc.c:814:20
    426a:    00 f4 02 0a       	[r0 + 0] |= 512			  ## vm_sfc.c:815:20
    426e:    00 f4 01 0a       	[r0 + 0] |= 256			  ## vm_sfc.c:816:20
    4272:    80 70             	r0 = 8
    4274:    00 f4 01 49       	[r4 + 0] |= 1			  ## vm_sfc.c:818:25
    4278:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:819:25
    427a:    71 b0             	r1 &= 4294967294			  ## vm_sfc.c:819:25
    427c:    f0 8f             	r0 += -1			  ## vm_sfc.c:817:22
    427e:    09 48             	[r4 + 0] = r1			  ## vm_sfc.c:819:25
    4280:    61 ff ff 09 f7 ff 	if ((r0 & 255) != 0) goto -18 <flash_enter_4bit_mode_by_spi_soft+0xB8 : 4274 >			  ## vm_sfc.c:817:5
    4286:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    4288:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    428a:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    428c:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    4290:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    4292:    18 02             	[sp+4] = r0
    4294:    04 0a             	sp += 8
    4296:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:822:1


flash_exit_2bit_mode_by_spi_soft:
    4298:    fc 0b             	sp += -8			  ## vm_sfc.c:740:0
    429a:    c0 ff 00 53 1e 00 	r0 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:740:0
    42a0:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    42a2:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    42a4:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    42a6:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:104:19
    42a8:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:105:53
    42aa:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:105:53
    42ac:    a1 70             	r1 = 10			  ## vm_sfc.c:105:53
    42ae:    09 02             	[sp] = r1
    42b0:    00 f4 04 09       	[r0 + 0] |= 4			  ## vm_sfc.c:742:20
    42b4:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:743:20
    42b6:    71 b1             	r1 &= 4294967291			  ## vm_sfc.c:743:20
    42b8:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:743:20
    42ba:    00 f4 02 09       	[r0 + 0] |= 2			  ## vm_sfc.c:744:20
    42be:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:745:20
    42c0:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:745:20
    42c2:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:745:20
    42c4:    81 70             	r1 = 8
    42c6:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:747:25
    42ca:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:748:25
    42cc:    72 b0             	r2 &= 4294967294			  ## vm_sfc.c:748:25
    42ce:    f1 8f             	r1 += -1			  ## vm_sfc.c:746:22
    42d0:    0a 40             	[r0 + 0] = r2			  ## vm_sfc.c:748:25
    42d2:    61 ff ff 19 f7 ff 	if ((r1 & 255) != 0) goto -18 <flash_exit_2bit_mode_by_spi_soft+0x2E : 42c6 >			  ## vm_sfc.c:746:5
    42d8:    02 f4 04 09       	[r0 + 8] |= 4			  ## vm_sfc.c:750:20
    42dc:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:751:20
    42de:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:751:20
    42e0:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:751:20
    42e2:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    42e4:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    42e6:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    42e8:    00 f4 08 09       	[r0 + 0] |= 8			  ## vm_sfc.c:104:19
    42ec:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    42ee:    18 02             	[sp+4] = r0
    42f0:    04 0a             	sp += 8
    42f2:    20 00             	rts			  ## vm_sfc.c:753:1


flash_exit_4bit_mode_by_spi_soft:
    42f4:    fc 0b             	sp += -8			  ## vm_sfc.c:719:0
    42f6:    c0 ff 00 53 1e 00 	r0 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:719:0
    42fc:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    42fe:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    4300:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    4302:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:104:19
    4304:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:105:53
    4306:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:105:53
    4308:    a1 70             	r1 = 10			  ## vm_sfc.c:105:53
    430a:    09 02             	[sp] = r1
    430c:    00 f4 04 09       	[r0 + 0] |= 4			  ## vm_sfc.c:721:20
    4310:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:722:20
    4312:    71 b1             	r1 &= 4294967291			  ## vm_sfc.c:722:20
    4314:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:722:20
    4316:    01 fc 00 fe       	r1 = r0 + -512			  ## vm_sfc.c:722:20
    431a:    00 f4 02 1a       	[r1 + 0] |= 512			  ## vm_sfc.c:723:20
    431e:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:724:20
    4320:    f2 b4             	r2 &= 4294966783			  ## vm_sfc.c:724:20
    4322:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:724:20
    4324:    00 f4 01 1a       	[r1 + 0] |= 256			  ## vm_sfc.c:725:20
    4328:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:726:20
    432a:    72 b4             	r2 &= 4294967039			  ## vm_sfc.c:726:20
    432c:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:726:20
    432e:    00 f4 02 09       	[r0 + 0] |= 2			  ## vm_sfc.c:727:20
    4332:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:728:20
    4334:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:728:20
    4336:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:728:20
    4338:    21 70             	r1 = 2
    433a:    00 f4 01 09       	[r0 + 0] |= 1			  ## vm_sfc.c:730:25
    433e:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:731:25
    4340:    72 b0             	r2 &= 4294967294			  ## vm_sfc.c:731:25
    4342:    f1 8f             	r1 += -1			  ## vm_sfc.c:729:22
    4344:    0a 40             	[r0 + 0] = r2			  ## vm_sfc.c:731:25
    4346:    61 ff ff 19 f7 ff 	if ((r1 & 255) != 0) goto -18 <flash_exit_4bit_mode_by_spi_soft+0x46 : 433a >			  ## vm_sfc.c:729:5
    434c:    02 f4 04 09       	[r0 + 8] |= 4			  ## vm_sfc.c:733:20
    4350:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:734:20
    4352:    f1 b0             	r1 &= 4294967293			  ## vm_sfc.c:734:20
    4354:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:734:20
    4356:    21 40             	r1 = [r0 + 8]			  ## vm_sfc.c:104:19
    4358:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    435a:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:104:19
    435c:    00 f4 08 09       	[r0 + 0] |= 8			  ## vm_sfc.c:104:19
    4360:    a0 70             	r0 = 10			  ## vm_sfc.c:104:19
    4362:    18 02             	[sp+4] = r0
    4364:    04 0a             	sp += 8
    4366:    20 00             	rts			  ## vm_sfc.c:736:1


load_spi_code2cache:
    4368:    20 00             	rts			  ## vm_sfc.c:398:0


norflash_entry_sleep:
    436a:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:1323:0
    436c:    fa 0b             	sp += -12			  ## vm_sfc.c:1323:0
    436e:    bf f3 fb f7       	call -4106 <enter_spi_code : 3368 >			  ## vm_sfc.c:1324:5
    4372:    bf f3 01 fa       	call -3070 <exit_continue_mode : 3778 >			  ## vm_sfc.c:1325:21
    4376:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:1325:21
    437c:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:104:19
    437e:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    4380:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:104:19
    4382:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:104:19
    4384:    03 08             	r3 = r0			  ## vm_sfc.c:1325:21
    4386:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:105:53
    438a:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    438c:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    438e:    0d 02             	[sp] = r5
    4390:    90 7b             	r0 = 185			  ## vm_sfc.c:1328:5
    4392:    bf f3 08 f8       	call -4080 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1328:5
    4396:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    4398:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    439a:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    439c:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    43a0:    1d 02             	[sp+4] = r5
    43a2:    06 26             	if (r3 == 0) goto 12 <norflash_entry_sleep+0x46 : 43b0 >
    43a4:    80 a0             	r0 = sp + 8
    43a6:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    43a8:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    43aa:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    43ac:    bf f3 a3 f8       	call -3770 <__norflash_read : 34f6 >			  ## vm_sfc.c:873:5
    43b0:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    43b2:    88 f3 b9 15       	call 1059698 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    43b6:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    43bc:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    43be:    59 60             	b[r0 + 5] = r1			  ## vm_sfc.c:385:17
    43c0:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:505:29
    43c4:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    43c6:    40 fc 50 03       	r0 = r4 + 848
    43ca:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    43cc:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    43ce:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    43d0:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    43d4:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    43d6:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    43d8:    88 f3 de 14       	call 1059260 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    43dc:    06 0a             	sp += 12			  ## vm_sfc.c:530:5
    43de:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:1335:1


norflash_exit_sleep:
    43e0:    75 01             	[--sp] = {rets, r5, r4}			  ## vm_sfc.c:1338:0
    43e2:    fa 0b             	sp += -12			  ## vm_sfc.c:1338:0
    43e4:    bf f3 c0 f7       	call -4224 <enter_spi_code : 3368 >			  ## vm_sfc.c:1339:5
    43e8:    bf f3 c6 f9       	call -3188 <exit_continue_mode : 3778 >			  ## vm_sfc.c:1340:21
    43ec:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:1340:21
    43f2:    21 48             	r1 = [r4 + 8]			  ## vm_sfc.c:104:19
    43f4:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    43f6:    29 48             	[r4 + 8] = r1			  ## vm_sfc.c:104:19
    43f8:    01 48             	r1 = [r4 + 0]			  ## vm_sfc.c:104:19
    43fa:    03 08             	r3 = r0			  ## vm_sfc.c:1340:21
    43fc:    30 fd 08 19       	r0 = r1 & 4294967287			  ## vm_sfc.c:105:53
    4400:    08 48             	[r4 + 0] = r0			  ## vm_sfc.c:105:53
    4402:    a5 70             	r5 = 10			  ## vm_sfc.c:105:53
    4404:    0d 02             	[sp] = r5
    4406:    b0 7a             	r0 = 171			  ## vm_sfc.c:1342:5
    4408:    bf f3 cd f7       	call -4198 <spi_writebyte : 33a6 >			  ## vm_sfc.c:1342:5
    440c:    20 48             	r0 = [r4 + 8]			  ## vm_sfc.c:104:19
    440e:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4410:    28 48             	[r4 + 8] = r0			  ## vm_sfc.c:104:19
    4412:    00 f4 08 49       	[r4 + 0] |= 8			  ## vm_sfc.c:104:19
    4416:    1d 02             	[sp+4] = r5
    4418:    06 26             	if (r3 == 0) goto 12 <norflash_exit_sleep+0x46 : 4426 >
    441a:    80 a0             	r0 = sp + 8
    441c:    01 70             	r1 = 0			  ## vm_sfc.c:873:5
    441e:    12 70             	r2 = 1			  ## vm_sfc.c:873:5
    4420:    13 70             	r3 = 1			  ## vm_sfc.c:873:5
    4422:    bf f3 68 f8       	call -3888 <__norflash_read : 34f6 >			  ## vm_sfc.c:873:5
    4426:    10 70             	r0 = 1			  ## vm_sfc.c:500:5
    4428:    88 f3 7e 15       	call 1059580 <sfc_resume : 106f28 >			  ## vm_sfc.c:500:5
    442c:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:385:17
    4432:    01 70             	r1 = 0			  ## vm_sfc.c:385:17
    4434:    59 60             	b[r0 + 5] = r1			  ## vm_sfc.c:385:17
    4436:    40 fb af 4a       	r0 = r4 + 44800			  ## vm_sfc.c:505:29
    443a:    00 40             	r0 = [r0 + 0]			  ## vm_sfc.c:505:29
    443c:    40 fc 50 03       	r0 = r4 + 848
    4440:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:517:22
    4442:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:518:22
    4444:    29 40             	[r0 + 8] = r1			  ## vm_sfc.c:519:22
    4446:    00 fc f4 00       	r0 = r0 + 244			  ## vm_sfc.c:519:22
    444a:    09 40             	[r0 + 0] = r1			  ## vm_sfc.c:520:26
    444c:    19 40             	[r0 + 4] = r1			  ## vm_sfc.c:521:26
    444e:    88 f3 a3 14       	call 1059142 <local_irq_enable : 106d98 >			  ## vm_sfc.c:530:5
    4452:    06 0a             	sp += 12			  ## vm_sfc.c:530:5
    4454:    55 01             	{pc, r5, r4} = [sp++]			  ## vm_sfc.c:1348:1


norflash_is_busy:
    4456:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:553:0
    4458:    fc 0b             	sp += -8			  ## vm_sfc.c:553:0
    445a:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:553:0
    4460:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    4462:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    4464:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    4466:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    4468:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    446a:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    446c:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    446e:    0c 02             	[sp] = r4
    4470:    50 70             	r0 = 5			  ## vm_sfc.c:555:5
    4472:    bf f3 98 f7       	call -4304 <spi_writebyte : 33a6 >			  ## vm_sfc.c:555:5
    4476:    bf f3 f3 f7       	call -4122 <spi_readbyte : 3460 >			  ## vm_sfc.c:556:14
    447a:    21 46             	r1 = [r3 + 8]			  ## vm_sfc.c:104:19
    447c:    f1 b1             	r1 &= 4294967287			  ## vm_sfc.c:104:19
    447e:    29 46             	[r3 + 8] = r1			  ## vm_sfc.c:104:19
    4480:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    4484:    20 fd 01 09       	r0 = r0 & 1			  ## vm_sfc.c:558:15
    4488:    1c 02             	[sp+4] = r4			  ## vm_sfc.c:558:15
    448a:    04 0a             	sp += 8			  ## vm_sfc.c:558:15
    448c:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:558:5


norflash_resume:
    448e:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:571:0
    4490:    fc 0b             	sp += -8			  ## vm_sfc.c:571:0
    4492:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:571:0
    4498:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    449a:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    449c:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    449e:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    44a0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    44a2:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    44a4:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    44a6:    0c 02             	[sp] = r4
    44a8:    a0 77             	r0 = 122			  ## vm_sfc.c:573:5
    44aa:    bf f3 7c f7       	call -4360 <spi_writebyte : 33a6 >			  ## vm_sfc.c:573:5
    44ae:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    44b0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    44b2:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    44b4:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    44b8:    1c 02             	[sp+4] = r4
    44ba:    04 0a             	sp += 8
    44bc:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:575:1


norflash_suspend:
    44be:    74 01             	[--sp] = {rets, r4}			  ## vm_sfc.c:563:0
    44c0:    fc 0b             	sp += -8			  ## vm_sfc.c:563:0
    44c2:    c3 ff 00 53 1e 00 	r3 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:563:0
    44c8:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    44ca:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    44cc:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    44ce:    00 46             	r0 = [r3 + 0]			  ## vm_sfc.c:104:19
    44d0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:105:53
    44d2:    08 46             	[r3 + 0] = r0			  ## vm_sfc.c:105:53
    44d4:    a4 70             	r4 = 10			  ## vm_sfc.c:105:53
    44d6:    0c 02             	[sp] = r4
    44d8:    50 77             	r0 = 117			  ## vm_sfc.c:565:5
    44da:    bf f3 64 f7       	call -4408 <spi_writebyte : 33a6 >			  ## vm_sfc.c:565:5
    44de:    20 46             	r0 = [r3 + 8]			  ## vm_sfc.c:104:19
    44e0:    f0 b1             	r0 &= 4294967287			  ## vm_sfc.c:104:19
    44e2:    28 46             	[r3 + 8] = r0			  ## vm_sfc.c:104:19
    44e4:    00 f4 08 39       	[r3 + 0] |= 8			  ## vm_sfc.c:104:19
    44e8:    1c 02             	[sp+4] = r4
    44ea:    04 0a             	sp += 8
    44ec:    54 01             	{pc, r4} = [sp++]			  ## vm_sfc.c:567:1


sfc_nop_delay:
    44ee:    fe 0b             	sp += -4			  ## vm_sfc.c:95:0
    44f0:    08 02             	[sp] = r0			  ## vm_sfc.c:95:0
    44f2:    02 0a             	sp += 4			  ## vm_sfc.c:95:0
    44f4:    20 00             	rts			  ## vm_sfc.c:99:1


spi_cs:
    44f6:    fe 0b             	sp += -4			  ## vm_sfc.c:103:0
    44f8:    c1 ff 00 53 1e 00 	r1 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## vm_sfc.c:103:0
    44fe:    22 42             	r2 = [r1 + 8]			  ## vm_sfc.c:104:19
    4500:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:104:19
    4502:    2a 42             	[r1 + 8] = r2			  ## vm_sfc.c:104:19
    4504:    02 42             	r2 = [r1 + 0]			  ## vm_sfc.c:104:19
    4506:    03 fd 08 29       	r3 = r2 | 8			  ## vm_sfc.c:105:25
    450a:    f2 b1             	r2 &= 4294967287			  ## vm_sfc.c:105:53
    450c:    01 20             	if (r0 == 0) goto 2 <spi_cs+0x1A : 4510 >			  ## vm_sfc.c:105:53
    450e:    32 08             	r2 = r3			  ## vm_sfc.c:105:5
    4510:    0a 42             	[r1 + 0] = r2
    4512:    a0 70             	r0 = 10
    4514:    08 02             	[sp] = r0
    4516:    02 0a             	sp += 4
    4518:    20 00             	rts			  ## vm_sfc.c:107:1


spi_wait_ok:
    451a:    08 00             	csync			  ## vm_sfc.c:111:0
    451c:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:114:5
    4522:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:115:23
    4524:    71 04             	r1 = r1.l (s)			  ## vm_sfc.c:115:12
    4526:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <spi_wait_ok+0x8 : 4522 >			  ## vm_sfc.c:115:5
    452a:    00 f4 40 0a       	[r0 + 0] |= 16384			  ## vm_sfc.c:116:18
    452e:    20 00             	rts			  ## vm_sfc.c:119:1


spi_write_dma_1bit:
    4530:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:181:0
    4536:    38 44             	[r2 + 12] = r0			  ## vm_sfc.c:187:18
    4538:    49 44             	[r2 + 16] = r1			  ## vm_sfc.c:188:18
    453a:    08 00             	csync			  ## vm_sfc.c:114:5
    453c:    00 44             	r0 = [r2 + 0]			  ## vm_sfc.c:115:23
    453e:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    4540:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_write_dma_1bit+0xC : 453c >			  ## vm_sfc.c:115:5
    4544:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## vm_sfc.c:116:18
    4548:    20 00             	rts			  ## vm_sfc.c:191:1


spi_writebyte_dma:
    454a:    c1 ff 00 1c 1e 00 	r1 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:170:0
    4550:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:174:18
    4552:    08 00             	csync			  ## vm_sfc.c:114:5
    4554:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:115:23
    4556:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:115:12
    4558:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <spi_writebyte_dma+0xA : 4554 >			  ## vm_sfc.c:115:5
    455c:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:116:18
    4560:    20 00             	rts			  ## vm_sfc.c:177:1


tmp_udelay:
    4562:    c1 ff 00 04 1e 00 	r1 = 1967104 <uECC_vli_cmp_unsafe+0xD9404 : 1e0400 >			  ## vm_sfc.c:1166:0
    4568:    c0 f4 40 1a       	[r1 + 0] = 16384			  ## vm_sfc.c:1167:20
    456c:    c1 f4 00 19       	[r1 + 4] = 0			  ## vm_sfc.c:1168:20
    4570:    80 c0             	r0 = r0 << 2			  ## vm_sfc.c:1169:24
    4572:    28 42             	[r1 + 8] = r0			  ## vm_sfc.c:1169:20
    4574:    c0 f4 11 19       	[r1 + 0] = 17			  ## vm_sfc.c:1170:20
    4578:    00 42             	r0 = [r1 + 0]			  ## vm_sfc.c:1171:24
    457a:    30 04             	r0 = r0.l (s)			  ## vm_sfc.c:1171:39
    457c:    f0 ef fc cf       	ifs (r0 > -1) goto -8 <tmp_udelay+0x16 : 4578 >			  ## vm_sfc.c:1171:5
    4580:    c0 f4 40 1a       	[r1 + 0] = 16384			  ## vm_sfc.c:1172:20
    4584:    20 00             	rts			  ## vm_sfc.c:1173:1


vm_enter_deepsleep:
    4586:    c0 ff 00 1c 1e 00 	r0 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:1451:0
    458c:    01 40             	r1 = [r0 + 0]			  ## vm_sfc.c:1452:46
    458e:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:1453:35
    4594:    11 f6 f8 20       	[r2 + 248] = r1			  ## vm_sfc.c:1452:35
    4598:    00 f6 00 01       	r0 = [r0 + 256]			  ## vm_sfc.c:1453:46
    459c:    10 f6 fc 20       	[r2 + 252] = r0			  ## vm_sfc.c:1453:35
    45a0:    20 00             	rts			  ## vm_sfc.c:1454:1


vm_exit_deepsleep:
    45a2:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## vm_sfc.c:1458:0
    45a8:    01 f6 f8 00       	r1 = [r0 + 248]			  ## vm_sfc.c:1459:41
    45ac:    c2 ff 00 1c 1e 00 	r2 = 1973248 <uECC_vli_cmp_unsafe+0xDAC04 : 1e1c00 >			  ## vm_sfc.c:1459:41
    45b2:    09 44             	[r2 + 0] = r1			  ## vm_sfc.c:1459:18
    45b4:    00 f6 fc 00       	r0 = [r0 + 252]			  ## vm_sfc.c:1460:41
    45b8:    21 fc 00 01       	r1 = r2 + 256			  ## vm_sfc.c:1460:41
    45bc:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:1460:18
    45be:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## vm_sfc.c:1461:18
    45c2:    00 f4 40 1a       	[r1 + 0] |= 16384			  ## vm_sfc.c:1462:18
    45c6:    c0 ff 08 23 00 00 	r0 = 8968 <flash_info+0x24 : 2308 >			  ## vm_sfc.c:1462:18
    45cc:    31 40             	r1 = [r0 + 12]			  ## vm_sfc.c:363:30
    45ce:    02 40             	r2 = [r0 + 0]			  ## vm_sfc.c:1463:60
    45d0:    40 40             	r0 = [r0 + 16]			  ## vm_sfc.c:365:27
    45d2:    61 b4             	r1 = r2 - r1			  ## vm_sfc.c:363:12
    45d4:    10 09             	r0 += r1			  ## vm_sfc.c:365:36
    45d6:    c1 ff 1c 02 1f 00 	r1 = 2032156 <uECC_vli_cmp_unsafe+0xE9220 : 1f021c >			  ## vm_sfc.c:365:36
    45dc:    18 42             	[r1 + 4] = r0			  ## vm_sfc.c:1463:24
    45de:    c0 ff ff ff ff 01 	r0 = 33554431 <bank_code_load_addr+0x1E5753 : 1ffffff >			  ## vm_sfc.c:1464:24
    45e4:    08 42             	[r1 + 0] = r0			  ## vm_sfc.c:1464:24
    45e6:    20 00             	rts			  ## vm_sfc.c:1466:1


delay_p11_tmr1_lrc:
    45e8:    c1 ff 00 3e 1e 00 	r1 = 1981952 <uECC_vli_cmp_unsafe+0xDCE04 : 1e3e00 >			  ## power_hw.c:225:0
    45ee:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:226:21
    45f2:    c1 ff ac 0f 1a 00 	r1 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:229:20
    45f8:    01 62             	r1 = b[r1 + 0] (u)			  ## power_hw.c:229:20
    45fa:    c0 fe 10 20       	r2 = r0 / r1 (u)			  ## power_hw.c:229:18
    45fe:    21 70             	r1 = 2			  ## power_hw.c:229:18
    4600:    22 e0 01 80       	if (r2 > 2) goto 2 <delay_p11_tmr1_lrc+0x1E : 4606 >			  ## power_hw.c:229:18
    4604:    22 70             	r2 = 2			  ## power_hw.c:231:9
    4606:    13 d2             	r3 = r2 >> 8			  ## power_hw.c:235:21
    4608:    c0 ff e1 1f 1a 00 	r0 = 1712097 <uECC_vli_cmp_unsafe+0x9AFE5 : 1a1fe1 >			  ## power_hw.c:235:21
    460e:    4b 60             	b[r0 + 4] = r3			  ## power_hw.c:235:19
    4610:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:236:19
    4612:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:238:19
    4614:    81 75             	r1 = 88			  ## power_hw.c:239:19
    4616:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:239:19
    4618:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:240:19
    461a:    11 b0             	r1 |= 1			  ## power_hw.c:240:19
    461c:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:240:19
    461e:    21 60             	r1 = b[r0 + 2] (u)			  ## power_hw.c:241:19
    4620:    11 b2             	r1 |= 16			  ## power_hw.c:241:19
    4622:    29 60             	b[r0 + 2] = r1			  ## power_hw.c:241:19
    4624:    20 fb 1e 1b       	r1 = 1966080			  ## power_hw.c:243:23
    4628:    00 f4 04 19       	[r1 + 0] |= 4			  ## power_hw.c:243:23
    462c:    21 f9 01 00       	r1 = b[r0 + 1] (s)			  ## power_hw.c:245:14
    4630:    f1 ef fc cf       	ifs (r1 > -1) goto -8 <delay_p11_tmr1_lrc+0x44 : 462c >			  ## power_hw.c:245:5
    4634:    01 75             	r1 = 80			  ## power_hw.c:246:19
    4636:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:246:19
    4638:    19 60             	b[r0 + 1] = r1			  ## power_hw.c:247:19
    463a:    20 00             	rts			  ## power_hw.c:248:1


close_flash:
    463c:    74 01             	[--sp] = {rets, r4}			  ## pmu_analog.c:919:0
    463e:    08 00             	csync			  ## pmu_analog.c:920:5
    4640:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## pmu_analog.c:920:5
    4646:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:920:5
    4648:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0xA : 4646 >			  ## pmu_analog.c:920:5
    464c:    08 00             	csync			  ## pmu_analog.c:921:5
    464e:    40 fb df 0a       	r0 = r0 + 57088			  ## pmu_analog.c:921:5
    4652:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:921:5
    4654:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <close_flash+0x16 : 4652 >			  ## pmu_analog.c:921:5
    4658:    c0 ff 00 02 1f 00 	r0 = 2032128 <uECC_vli_cmp_unsafe+0xE9204 : 1f0200 >
    465e:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:923:20
    4660:    01 e0 fd bf       	ifs (r1 < 0) goto -6 <close_flash+0x22 : 465e >			  ## pmu_analog.c:923:5
    4664:    01 40             	r1 = [r0 + 0]			  ## pmu_analog.c:925:17
    4666:    71 b0             	r1 &= 4294967294			  ## pmu_analog.c:925:17
    4668:    09 40             	[r0 + 0] = r1			  ## pmu_analog.c:925:17
    466a:    c4 ff 00 53 1e 00 	r4 = 1987328 <uECC_vli_cmp_unsafe+0xDE304 : 1e5300 >			  ## pmu_analog.c:925:17
    4670:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:236:37
    4672:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:236:37
    4674:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:236:37
    4676:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:237:37
    4678:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:237:37
    467a:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:237:37
    467c:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:238:37
    467e:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:238:37
    4680:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:238:37
    4682:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:239:37
    4684:    70 b0             	r0 &= 4294967294			  ## pmu_analog.c:239:37
    4686:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:239:37
    4688:    02 f4 01 49       	[r4 + 8] |= 1			  ## pmu_analog.c:240:37
    468c:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:243:37
    468e:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:243:37
    4690:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:243:37
    4692:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:244:37
    4694:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:244:37
    4696:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:244:37
    4698:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:245:37
    469a:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:245:37
    469c:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:245:37
    469e:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:246:37
    46a0:    f0 b0             	r0 &= 4294967293			  ## pmu_analog.c:246:37
    46a2:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:246:37
    46a4:    02 f4 02 49       	[r4 + 8] |= 2			  ## pmu_analog.c:247:37
    46a8:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:250:37
    46aa:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:250:37
    46ac:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:250:37
    46ae:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:251:37
    46b0:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:251:37
    46b2:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:251:37
    46b4:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:252:37
    46b6:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:252:37
    46b8:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:252:37
    46ba:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:253:37
    46bc:    70 b1             	r0 &= 4294967291			  ## pmu_analog.c:253:37
    46be:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:253:37
    46c0:    02 f4 04 49       	[r4 + 8] |= 4			  ## pmu_analog.c:254:37
    46c4:    30 48             	r0 = [r4 + 12]			  ## pmu_analog.c:267:37
    46c6:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:267:37
    46c8:    38 48             	[r4 + 12] = r0			  ## pmu_analog.c:267:37
    46ca:    80 48             	r0 = [r4 + 32]			  ## pmu_analog.c:268:37
    46cc:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:268:37
    46ce:    88 48             	[r4 + 32] = r0			  ## pmu_analog.c:268:37
    46d0:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:269:37
    46d2:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:269:37
    46d4:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:269:37
    46d6:    04 f4 08 49       	[r4 + 16] |= 8			  ## pmu_analog.c:270:37
    46da:    02 f4 08 49       	[r4 + 8] |= 8			  ## pmu_analog.c:271:37
    46de:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:177:35
    46e0:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:177:35
    46e2:    08 48             	[r4 + 0] = r0			  ## pmu_analog.c:177:35
    46e4:    20 48             	r0 = [r4 + 8]			  ## pmu_analog.c:178:35
    46e6:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:178:35
    46e8:    28 48             	[r4 + 8] = r0			  ## pmu_analog.c:178:35
    46ea:    40 76             	r0 = 100			  ## pmu_analog.c:179:5
    46ec:    7d 17             	call -262 <delay_p11_tmr1_lrc : 45e8 >			  ## pmu_analog.c:179:5
    46ee:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:181:34
    46f0:    f0 b1             	r0 &= 4294967287			  ## pmu_analog.c:181:34
    46f2:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:181:34
    46f4:    02 f4 10 49       	[r4 + 8] |= 16			  ## pmu_analog.c:183:35
    46f8:    40 48             	r0 = [r4 + 16]			  ## pmu_analog.c:184:34
    46fa:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:184:34
    46fc:    48 48             	[r4 + 16] = r0			  ## pmu_analog.c:184:34
    46fe:    50 48             	r0 = [r4 + 20]			  ## pmu_analog.c:185:34
    4700:    70 b2             	r0 &= 4294967279			  ## pmu_analog.c:185:34
    4702:    58 48             	[r4 + 20] = r0			  ## pmu_analog.c:185:34
    4704:    54 01             	{pc, r4} = [sp++]			  ## pmu_analog.c:930:1


power_set_soft_poweroff_advance:
    4706:    c0 ff ac 0f 1a 00 	r0 = 1707948 <uECC_vli_cmp_unsafe+0x99FB0 : 1a0fac >			  ## power_hw.c:1352:0
    470c:    00 60             	r0 = b[r0 + 0] (u)			  ## power_hw.c:1356:53
    470e:    af f3 42 f2       	call -2104188 <power_set_soft_poweroff_prepare : 1e02b96 >			  ## power_hw.c:1361:5
    4712:    94 17             	call -216 <close_flash : 463c >			  ## power_hw.c:1363:5
    4714:    10 70             	r0 = 1			  ## power_hw.c:1363:5
    4716:    c1 ff d0 18 1a 00 	r1 = 1710288 <uECC_vli_cmp_unsafe+0x9A8D4 : 1a18d0 >			  ## power_hw.c:1363:5
    471c:    c2 ff 70 20 00 00 	r2 = 8304 <gatt_client_conn_handle : 2070 >			  ## power_hw.c:1363:5
    4722:    03 70             	r3 = 0			  ## power_hw.c:1363:5
    4724:    84 70             	r4 = 8			  ## power_hw.c:1363:5
    4726:    08 62             	b[r1 + 0] = r0			  ## power_hw.c:1368:22
    4728:    18 62             	b[r1 + 1] = r0			  ## power_hw.c:1369:22
    472a:    28 62             	b[r1 + 2] = r0			  ## power_hw.c:1370:22
    472c:    38 62             	b[r1 + 3] = r0			  ## power_hw.c:1371:22
    472e:    48 62             	b[r1 + 4] = r0			  ## power_hw.c:1372:22
    4730:    6b 64             	b[r2 + 6] = r3			  ## power_hw.c:1374:9
    4732:    14 f9 21 17       	b[r1 + 1825] = r4			  ## power_hw.c:1374:9
    4736:    14 f9 2a 17       	b[r1 + 1834] = r4			  ## power_hw.c:1374:9
    473a:    02 00             	idle			  ## power_hw.c:1376:9
    473c:    f4 1f             	goto -24 <power_set_soft_poweroff_advance+0x20 : 4726 >			  ## power_hw.c:1365:5


power_set_soft_poweroff_legacy:
    473e:    04 08             	r4 = r0			  ## power_hw.c:1284:0
    4740:    af f3 13 e5       	call -2110938 <power_set_mode : 1e0116a >			  ## power_hw.c:1285:5
    4744:    af f3 27 f2       	call -2104242 <power_set_soft_poweroff_prepare : 1e02b96 >			  ## power_hw.c:1288:5
    4748:    79 17             	call -270 <close_flash : 463c >			  ## power_hw.c:1292:5
    474a:    02 70             	r2 = 0			  ## power_hw.c:1295:17
    474c:    c0 ff 11 18 1a 00 	r0 = 1710097 <uECC_vli_cmp_unsafe+0x9A815 : 1a1811 >			  ## power_hw.c:1295:17
    4752:    5a 60             	b[r0 + 5] = r2			  ## power_hw.c:1295:17
    4754:    09 fc 81 00       	r9 = r0 + 129			  ## power_hw.c:1295:17
    4758:    03 f9 00 90       	r3 = b[r9 + 0] (u)			  ## power_hw.c:1298:5
    475c:    f3 b1             	r3 &= 4294967287			  ## power_hw.c:1298:5
    475e:    13 f9 00 90       	b[r9 + 0] = r3			  ## power_hw.c:1298:5
    4762:    03 60             	r3 = b[r0 + 0] (u)			  ## power_hw.c:1299:5
    4764:    73 b0             	r3 &= 4294967294			  ## power_hw.c:1299:5
    4766:    0b 60             	b[r0 + 0] = r3			  ## power_hw.c:1299:5
    4768:    2a 60             	b[r0 + 2] = r2			  ## power_hw.c:1302:17
    476a:    3a 60             	b[r0 + 3] = r2			  ## power_hw.c:1303:17
    476c:    02 fc 31 00       	r2 = r0 + 49			  ## power_hw.c:1303:17
    4770:    14 e0 07 10       	if (r4 != 1) goto 14 <power_set_soft_poweroff_legacy+0x44 : 4782 >			  ## power_hw.c:1303:17
    4774:    03 f9 0b 90       	r3 = b[r9 + 11] (u)			  ## power_hw.c:1307:9
    4778:    13 b3             	r3 |= 64			  ## power_hw.c:1307:9
    477a:    13 f9 0b 90       	b[r9 + 11] = r3			  ## power_hw.c:1307:9
    477e:    43 70             	r3 = 4			  ## power_hw.c:1308:20
    4780:    0b 64             	b[r2 + 0] = r3			  ## power_hw.c:1308:20
    4782:    13 70             	r3 = 1
    4784:    04 fc bf 00       	r4 = r0 + 191
    4788:    88 7a             	r8 = 168
    478a:    f6 7f             	r6 = 255
    478c:    0a fc 56 00       	r10 = r0 + 86
    4790:    15 70             	r5 = 1
    4792:    13 f9 12 90       	b[r9 + 18] = r3			  ## power_hw.c:1316:21
    4796:    0b 68             	b[r4 + 0] = r3			  ## power_hw.c:1317:22
    4798:    1b 68             	b[r4 + 1] = r3			  ## power_hw.c:1318:22
    479a:    2b 68             	b[r4 + 2] = r3			  ## power_hw.c:1319:22
    479c:    3b 68             	b[r4 + 3] = r3			  ## power_hw.c:1320:22
    479e:    4b 68             	b[r4 + 4] = r3			  ## power_hw.c:1321:22
    47a0:    61 60             	r1 = b[r0 + 6] (u)			  ## power_hw.c:1323:21
    47a2:    71 b1             	r1 &= 4294967291			  ## power_hw.c:1323:21
    47a4:    69 60             	b[r0 + 6] = r1			  ## power_hw.c:1323:21
    47a6:    18 f9 00 20       	b[r2 + 0] = r8			  ## power_hw.c:1326:20
    47aa:    6e 65             	b[r2 + 22] = r6			  ## power_hw.c:1329:23
    47ac:    7e 65             	b[r2 + 23] = r6			  ## power_hw.c:1330:23
    47ae:    16 f9 00 a0       	b[r10 + 0] = r6			  ## power_hw.c:1331:25
    47b2:    16 f9 01 a0       	b[r10 + 1] = r6			  ## power_hw.c:1332:25
    47b6:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:1333:21
    47b8:    11 b3             	r1 |= 64			  ## power_hw.c:1333:21
    47ba:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:1333:21
    47bc:    71 64             	r1 = b[r2 + 7] (u)			  ## power_hw.c:1334:21
    47be:    11 b3             	r1 |= 64			  ## power_hw.c:1334:21
    47c0:    47 05             	r7 = r5.b0 (u)			  ## power_hw.c:1340:32
    47c2:    79 64             	b[r2 + 7] = r1			  ## power_hw.c:1334:21
    47c4:    57 e6 06 30       	if (r7 < 101) goto 12 <power_set_soft_poweroff_legacy+0x96 : 47d4 >			  ## power_hw.c:1334:21
    47c8:    01 f9 0e 90       	r1 = b[r9 + 14] (u)			  ## power_hw.c:1341:13
    47cc:    01 fd 30 19       	r1 = r1 | 48			  ## power_hw.c:1341:13
    47d0:    11 f9 0e 90       	b[r9 + 14] = r1			  ## power_hw.c:1341:13
    47d4:    15 80             	r5 += 1			  ## power_hw.c:1289:8
    47d6:    dd 1f             	goto -70 <power_set_soft_poweroff_legacy+0x54 : 4792 >			  ## power_hw.c:1289:8


__get_lrc_hz:
    47d8:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## lrc_hw.c:56:0
    47de:    00 f6 88 00       	r0 = [r0 + 136]			  ## lrc_hw.c:59:20
    47e2:    20 00             	rts			  ## lrc_hw.c:59:5


tmr_exit_deepsleep:
    47e4:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## timer.c:264:0
    47ea:    71 41             	r1 = [r0 + 92]			  ## timer.c:265:22
    47ec:    c2 ff 00 05 1e 00 	r2 = 1967360 <uECC_vli_cmp_unsafe+0xD9504 : 1e0500 >			  ## timer.c:265:22
    47f2:    19 44             	[r2 + 4] = r1			  ## timer.c:265:20
    47f4:    81 41             	r1 = [r0 + 96]			  ## timer.c:266:22
    47f6:    29 44             	[r2 + 8] = r1			  ## timer.c:266:20
    47f8:    90 41             	r0 = [r0 + 100]			  ## timer.c:267:22
    47fa:    08 44             	[r2 + 0] = r0			  ## timer.c:267:20
    47fc:    00 f4 40 2a       	[r2 + 0] |= 16384			  ## timer.c:268:20
    4800:    c2 ff f4 2e e0 01 	r2 = 31469300 <timer1_isr : 1e02ef4 >			  ## timer.c:269:5
    4806:    50 70             	r0 = 5			  ## timer.c:269:5
    4808:    11 70             	r1 = 1			  ## timer.c:269:5
    480a:    f0 f3 02 30       	goto -2072572 <request_irq : 1e0a812 >			  ## timer.c:269:5


__hw_pdown_clock_recover:
    480e:    78 01             	[--sp] = {rets, r8-r4}			  ## pmu_analog.c:796:0
    4810:    c4 ff 20 19 1e 00 	r4 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## pmu_analog.c:796:0
    4816:    00 48             	r0 = [r4 + 0]			  ## pmu_analog.c:797:19
    4818:    20 f3 4d 00       	if ((r0 & 1) != 0) goto 154 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x4E : 48b6 >			  ## pmu_analog.c:797:19
    481c:    00 f4 01 49       	[r4 + 0] |= 1			  ## pmu_analog.c:798:27
    4820:    c0 ff c0 4e 00 00 	r0 = 20160 <nvbss_begin : 4ec0 >			  ## pmu_analog.c:800:57
    4826:    06 f6 28 03       	r6 = [r0 + 808]			  ## pmu_analog.c:800:57
    482a:    08 f6 00 40       	r8 = [r4 + 0]			  ## xosc_fsck.c:362:28
    482e:    00 48             	r0 = [r4 + 0]			  ## xosc_fsck.c:363:5
    4830:    01 fb c0 07       	r1 = 1984 <DRIVER_CODE_TOTAL+0x3A : 7c0 >			  ## xosc_fsck.c:363:5
    4834:    50 b2             	r0 |= r1			  ## xosc_fsck.c:363:5
    4836:    08 48             	[r4 + 0] = r0			  ## xosc_fsck.c:363:5
    4838:    17 48             	r7 = [r4 + 4]			  ## xosc_fsck.c:370:28
    483a:    01 f4 10 4b       	[r4 + 4] |= 1048576			  ## xosc_fsck.c:371:5
    483e:    00 48             	r0 = [r4 + 0]			  ## xosc_fsck.c:373:22
    4840:    00 48             	r0 = [r4 + 0]			  ## xosc_fsck.c:375:5
    4842:    30 fd 1c 09       	r0 = r0 & 4294967267			  ## xosc_fsck.c:375:5
    4846:    90 b1             	r0 |= 8			  ## xosc_fsck.c:375:5
    4848:    08 48             	[r4 + 0] = r0			  ## xosc_fsck.c:375:5
    484a:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:377:15
    484c:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:378:15
    484e:    01 f4 08 4a       	[r4 + 4] |= 2048			  ## xosc_fsck.c:380:5
    4852:    01 f4 08 49       	[r4 + 4] |= 8			  ## xosc_fsck.c:382:5
    4856:    25 fd 07 09       	r5 = r0 & 7			  ## xosc_fsck.c:385:9
    485a:    75 e0 03 00       	if (r5 == 7) goto 6 <__hw_pdown_clock_recover+0x56 : 4864 >			  ## xosc_fsck.c:385:9
    485e:    03 3a             	if (r5 != 0) goto 6 <__hw_pdown_clock_recover+0x58 : 4866 >
    4860:    15 70             	r5 = 1
    4862:    01 18             	goto 2 <__hw_pdown_clock_recover+0x58 : 4866 >
    4864:    65 70             	r5 = 6
    4866:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:397:5
    4868:    71 9a             	r1 = r5 + 7			  ## xosc_fsck.c:397:5
    486a:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:397:5
    486c:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:397:5
    4870:    19 48             	[r4 + 4] = r1			  ## xosc_fsck.c:397:5
    4872:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:398:5
    4876:    b8 16             	call -656 <delay_p11_tmr1_lrc : 45e8 >			  ## xosc_fsck.c:398:5
    4878:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:399:5
    487a:    30 fd 07 09       	r0 = r0 & 4294967288			  ## xosc_fsck.c:399:5
    487e:    50 ba             	r0 |= r5			  ## xosc_fsck.c:399:5
    4880:    18 48             	[r4 + 4] = r0			  ## xosc_fsck.c:399:5
    4882:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:400:5
    4886:    b0 16             	call -672 <delay_p11_tmr1_lrc : 45e8 >			  ## xosc_fsck.c:400:5
    4888:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:401:5
    488a:    11 9a             	r1 = r5 + 1			  ## xosc_fsck.c:401:5
    488c:    c0 d0             	r0 = r0 >> 3			  ## xosc_fsck.c:401:5
    488e:    dd fd 18 10       	r1 <= insert(r0, p:3, l:29)			  ## xosc_fsck.c:401:5
    4892:    19 48             	[r4 + 4] = r1			  ## xosc_fsck.c:401:5
    4894:    00 fb 2c 01       	r0 = 300 <DRIVER_RAM_TOTAL+0x3A : 12c >			  ## xosc_fsck.c:402:5
    4898:    a7 16             	call -690 <delay_p11_tmr1_lrc : 45e8 >			  ## xosc_fsck.c:402:5
    489a:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:406:5
    489c:    f0 b5             	r0 &= 4294965247			  ## xosc_fsck.c:406:5
    489e:    18 48             	[r4 + 4] = r0			  ## xosc_fsck.c:406:5
    48a0:    10 48             	r0 = [r4 + 4]			  ## xosc_fsck.c:408:5
    48a2:    f0 b1             	r0 &= 4294967287			  ## xosc_fsck.c:408:5
    48a4:    18 48             	[r4 + 4] = r0			  ## xosc_fsck.c:408:5
    48a6:    80 7c             	r0 = 200			  ## xosc_fsck.c:409:5
    48a8:    9f 16             	call -706 <delay_p11_tmr1_lrc : 45e8 >			  ## xosc_fsck.c:409:5
    48aa:    1f 48             	[r4 + 4] = r7			  ## xosc_fsck.c:414:22
    48ac:    02 2c             	if (r6 == 0) goto 4 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x4A : 48b2 >			  ## xosc_fsck.c:414:22
    48ae:    a0 05             	r0 = r6.l (u)			  ## xosc_fsck.c:432:9
    48b0:    9b 16             	call -714 <delay_p11_tmr1_lrc : 45e8 >			  ## xosc_fsck.c:432:9
    48b2:    18 f6 00 40       	[r4 + 0] = r8			  ## xosc_fsck.c:436:22
    48b6:    45 fc e0 2d       	r5 = r4 + 11744
    48ba:    00 4a             	r0 = [r5 + 0]			  ## pmu_analog.c:803:20
    48bc:    20 f3 0a 00       	if ((r0 & 1) != 0) goto 20 <BTCTLER_LE_CONTROLLER_CODE_SIZE+0x6C : 48d4 >			  ## pmu_analog.c:803:20
    48c0:    00 f4 02 4c       	[r4 + 0] |= 33554432			  ## pmu_analog.c:804:26
    48c4:    00 f4 01 59       	[r5 + 0] |= 1			  ## pmu_analog.c:805:28
    48c8:    a0 70             	r0 = 10			  ## pmu_analog.c:807:9
    48ca:    8e 16             	call -740 <delay_p11_tmr1_lrc : 45e8 >			  ## pmu_analog.c:807:9
    48cc:    00 f4 02 59       	[r5 + 0] |= 2			  ## pmu_analog.c:808:28
    48d0:    80 7c             	r0 = 200			  ## pmu_analog.c:810:9
    48d2:    8a 16             	call -748 <delay_p11_tmr1_lrc : 45e8 >			  ## pmu_analog.c:810:9
    48d4:    c0 ff 70 20 00 00 	r0 = 8304 <gatt_client_conn_handle : 2070 >			  ## pmu_analog.c:816:25
    48da:    50 41             	r0 = [r0 + 84]			  ## pmu_analog.c:816:25
    48dc:    41 fc e8 e6       	r1 = r4 + -6424			  ## pmu_analog.c:816:25
    48e0:    08 42             	[r1 + 0] = r0			  ## pmu_analog.c:816:23
    48e2:    20 42             	r0 = [r1 + 8]			  ## pmu_analog.c:817:5
    48e4:    30 fd 07 0a       	r0 = r0 & 4294965503			  ## pmu_analog.c:817:5
    48e8:    00 fd 06 0a       	r0 = r0 | 1536			  ## pmu_analog.c:817:5
    48ec:    28 42             	[r1 + 8] = r0			  ## pmu_analog.c:817:5
    48ee:    08 00             	csync			  ## pmu_analog.c:818:5
    48f0:    58 01             	{pc, r8-r4} = [sp++]			  ## pmu_analog.c:819:1


low_power_system_down:
    48f2:    7f 01             	[--sp] = {rets, r15-r4}			  ## power_hw.c:942:0
    48f4:    c8 ff 20 19 1e 00 	r8 = 1972512 <uECC_vli_cmp_unsafe+0xDA924 : 1e1920 >			  ## power_hw.c:942:0
    48fa:    00 f6 00 80       	r0 = [r8 + 0]			  ## power_hw.c:945:20
    48fe:    c9 ff 70 20 00 00 	r9 = 8304 <gatt_client_conn_handle : 2070 >			  ## power_hw.c:945:20
    4904:    8e fc e0 39       	r14 = r8 + 14816			  ## power_hw.c:945:20
    4908:    4d fb af ea       	r13 = r14 + 44800			  ## power_hw.c:945:20
    490c:    20 f3 4a 00       	if ((r0 & 1) != 0) goto 148 <low_power_system_down+0xB2 : 49a4 >			  ## power_hw.c:945:9
    4910:    00 70             	r0 = 0			  ## pmu_analog.c:306:5
    4912:    bf f3 fd f4       	call -5638 <sfc_suspend : 3310 >			  ## pmu_analog.c:306:5
    4916:    08 00             	csync			  ## pmu_analog.c:308:5
    4918:    00 f6 0c e0       	r0 = [r14 + 12]			  ## pmu_analog.c:311:31
    491c:    10 f9 07 90       	b[r9 + 7] = r0			  ## pmu_analog.c:311:19
    4920:    00 f6 20 e0       	r0 = [r14 + 32]			  ## pmu_analog.c:312:31
    4924:    10 f9 08 90       	b[r9 + 8] = r0			  ## pmu_analog.c:312:19
    4928:    00 f6 10 e0       	r0 = [r14 + 16]			  ## pmu_analog.c:313:31
    492c:    10 f9 09 90       	b[r9 + 9] = r0			  ## pmu_analog.c:313:19
    4930:    00 f6 14 e0       	r0 = [r14 + 20]			  ## pmu_analog.c:314:31
    4934:    10 f9 0a 90       	b[r9 + 10] = r0			  ## pmu_analog.c:314:19
    4938:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:315:31
    493c:    10 f9 0b 90       	b[r9 + 11] = r0			  ## pmu_analog.c:315:19
    4940:    00 f6 08 e0       	r0 = [r14 + 8]			  ## pmu_analog.c:316:31
    4944:    10 f9 0c 90       	b[r9 + 12] = r0			  ## pmu_analog.c:316:19
    4948:    00 f6 10 e0       	r0 = [r14 + 16]			  ## pmu_analog.c:318:5
    494c:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:318:5
    4950:    10 f6 10 e0       	[r14 + 16] = r0			  ## pmu_analog.c:318:5
    4954:    00 f6 14 e0       	r0 = [r14 + 20]			  ## pmu_analog.c:319:5
    4958:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:319:5
    495c:    10 f6 14 e0       	[r14 + 20] = r0			  ## pmu_analog.c:319:5
    4960:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:320:5
    4964:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:320:5
    4968:    90 b1             	r0 |= 8			  ## pmu_analog.c:320:5
    496a:    10 f6 00 e0       	[r14 + 0] = r0			  ## pmu_analog.c:320:5
    496e:    00 f6 08 e0       	r0 = [r14 + 8]			  ## pmu_analog.c:321:5
    4972:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:321:5
    4976:    00 fd 07 09       	r0 = r0 | 7			  ## pmu_analog.c:321:5
    497a:    10 f6 08 e0       	[r14 + 8] = r0			  ## pmu_analog.c:321:5
    497e:    00 f6 00 e0       	r0 = [r14 + 0]			  ## pmu_analog.c:322:5
    4982:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:322:5
    4986:    10 f6 00 e0       	[r14 + 0] = r0			  ## pmu_analog.c:322:5
    498a:    00 f6 0c e0       	r0 = [r14 + 12]			  ## pmu_analog.c:323:5
    498e:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:323:5
    4992:    10 f6 0c e0       	[r14 + 12] = r0			  ## pmu_analog.c:323:5
    4996:    00 f6 20 e0       	r0 = [r14 + 32]			  ## pmu_analog.c:324:5
    499a:    30 fd 1f 09       	r0 = r0 & 4294967264			  ## pmu_analog.c:324:5
    499e:    10 f6 20 e0       	[r14 + 32] = r0			  ## pmu_analog.c:324:5
    49a2:    11 18             	goto 34 <low_power_system_down+0xD4 : 49c6 >			  ## pmu_analog.c:324:5
    49a4:    08 00             	csync			  ## power_hw.c:948:9
    49a6:    c0 ff 00 05 1b 00 	r0 = 1770752 <uECC_vli_cmp_unsafe+0xA9504 : 1b0500 >			  ## power_hw.c:948:9
    49ac:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:948:9
    49ae:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0xBA : 49ac >			  ## power_hw.c:948:9
    49b2:    08 00             	csync			  ## power_hw.c:949:9
    49b4:    40 fb df 0a       	r0 = r0 + 57088			  ## power_hw.c:949:9
    49b8:    01 40             	r1 = [r0 + 0]			  ## power_hw.c:949:9
    49ba:    f1 ef fd cf       	ifs (r1 > -1) goto -6 <low_power_system_down+0xC6 : 49b8 >			  ## power_hw.c:949:9
    49be:    00 f6 00 d0       	r0 = [r13 + 0]			  ## power_hw.c:950:24
    49c2:    00 e0 fc bf       	ifs (r0 < 0) goto -8 <low_power_system_down+0xCC : 49be >			  ## power_hw.c:950:24
    49c6:    c0 ff d2 1f 1a 00 	r0 = 1712082 <uECC_vli_cmp_unsafe+0x9AFD6 : 1a1fd2 >
    49cc:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:953:27
    49ce:    00 60             	r0 = b[r0 + 0] (u)			  ## power_hw.c:953:49
    49d0:    21 fd 20 19       	r1 = r1 & 32			  ## power_hw.c:953:27
    49d4:    20 fd 80 09       	r0 = r0 & 128			  ## power_hw.c:953:49
    49d8:    50 b2             	r0 |= r1			  ## power_hw.c:953:47
    49da:    ca ff c0 4e 00 00 	r10 = 20160 <nvbss_begin : 4ec0 >			  ## power_hw.c:953:47
    49e0:    10 f9 31 a0       	b[r10 + 49] = r0			  ## power_hw.c:953:25
    49e4:    20 fb 1e cb       	r12 = 1966080			  ## power_hw.c:953:25
    49e8:    00 f4 08 c9       	[r12 + 0] |= 8			  ## power_hw.c:956:23
    49ec:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:856:17
    49f0:    cf ff 6f 0f 1a 00 	r15 = 1707887 <uECC_vli_cmp_unsafe+0x99F73 : 1a0f6f >			  ## power_hw.c:856:17
    49f6:    fb fc 44 00       	r11 = r15 + 68			  ## power_hw.c:856:17
    49fa:    b7 fc 3e 10       	r7 = r11 + 4158			  ## power_hw.c:856:17
    49fe:    10 e0 19 10       	if (r0 != 1) goto 50 <low_power_system_down+0x142 : 4a34 >			  ## power_hw.c:856:9
    4a02:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:857:18
    4a04:    10 f9 06 90       	b[r9 + 6] = r0			  ## power_hw.c:857:16
    4a08:    10 70             	r0 = 1			  ## power_hw.c:858:24
    4a0a:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:858:24
    4a0c:    88 f3 c6 11       	call 1057676 <local_irq_disable : 106d9c >			  ## power_hw.c:861:9
    4a10:    20 70             	r0 = 2			  ## power_hw.c:861:9
    4a12:    10 f9 00 b0       	b[r11 + 0] = r0			  ## power_hw.c:861:9
    4a16:    00 71             	r0 = 16			  ## power_hw.c:861:9
    4a18:    98 6e             	b[r7 + 9] = r0			  ## power_hw.c:861:9
    4a1a:    08 00             	csync			  ## power_hw.c:861:9
    4a1c:    30 6e             	r0 = b[r7 + 3] (u)			  ## power_hw.c:861:9
    4a1e:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <low_power_system_down+0x128 : 4a1a >			  ## power_hw.c:861:9
    4a22:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:861:9
    4a26:    20 e0 f8 1f       	if (r0 != 2) goto -16 <low_power_system_down+0x128 : 4a1a >			  ## power_hw.c:861:9
    4a2a:    00 71             	r0 = 16			  ## power_hw.c:861:9
    4a2c:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:861:9
    4a2e:    88 f3 b3 11       	call 1057638 <local_irq_enable : 106d98 >			  ## power_hw.c:861:9
    4a32:    09 18             	goto 18 <low_power_system_down+0x154 : 4a46 >			  ## power_hw.c:861:9
    4a34:    70 6e             	r0 = b[r7 + 7] (u)			  ## power_hw.c:867:9
    4a36:    10 b1             	r0 |= 4			  ## power_hw.c:867:9
    4a38:    78 6e             	b[r7 + 7] = r0			  ## power_hw.c:867:9
    4a3a:    00 6e             	r0 = b[r7 + 0] (u)			  ## power_hw.c:870:9
    4a3c:    10 f9 06 90       	b[r9 + 6] = r0			  ## power_hw.c:870:9
    4a40:    10 70             	r0 = 1			  ## power_hw.c:870:9
    4a42:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:870:9
    4a44:    98 6e             	b[r7 + 9] = r0			  ## power_hw.c:870:9
    4a46:    08 00             	csync			  ## power_hw.c:875:5
    4a48:    00 f4 04 c9       	[r12 + 0] |= 4			  ## power_hw.c:877:23
    4a4c:    08 00             	csync			  ## power_hw.c:878:5
    4a4e:    fc 7f             	r12 = 255			  ## power_hw.c:878:5
    4a50:    71 fc 8f ff       	r1 = r7 + -113			  ## power_hw.c:878:5
    4a54:    e2 7e             	r2 = 238			  ## power_hw.c:878:5
    4a56:    b3 7a             	r3 = 171			  ## power_hw.c:878:5
    4a58:    e4 70             	r4 = 14			  ## power_hw.c:878:5
    4a5a:    55 75             	r5 = 85			  ## power_hw.c:878:5
    4a5c:    86 fc e4 24       	r6 = r8 + 9444			  ## power_hw.c:878:5
    4a60:    1c f9 00 10       	b[r1 + 0] = r12			  ## power_hw.c:969:20
    4a64:    0a 62             	b[r1 + 0] = r2			  ## power_hw.c:970:20
    4a66:    0b 62             	b[r1 + 0] = r3			  ## power_hw.c:971:20
    4a68:    0c 62             	b[r1 + 0] = r4			  ## power_hw.c:972:20
    4a6a:    0d 62             	b[r1 + 0] = r5			  ## power_hw.c:973:20
    4a6c:    00 4c             	r0 = [r6 + 0]			  ## power_hw.c:974:15
    4a6e:    00 f3 f7 0f       	if ((r0 & 1) == 0) goto -18 <low_power_system_down+0x16E : 4a60 >			  ## power_hw.c:974:5
    4a72:    30 6e             	r0 = b[r7 + 3] (u)			  ## power_hw.c:981:5
    4a74:    00 f3 fd 0f       	if ((r0 & 1) == 0) goto -6 <low_power_system_down+0x180 : 4a72 >			  ## power_hw.c:981:5
    4a78:    14 70             	r4 = 1
    4a7a:    2c 6e             	b[r7 + 2] = r4			  ## power_hw.c:981:5
    4a7c:    80 70             	r0 = 8			  ## power_hw.c:981:5
    4a7e:    08 6e             	b[r7 + 0] = r0			  ## power_hw.c:981:5
    4a80:    00 f6 1c a0       	r0 = [r10 + 28]			  ## power_hw.c:984:17
    4a84:    10 e0 12 10       	if (r0 != 1) goto 36 <low_power_system_down+0x1BA : 4aac >			  ## power_hw.c:984:17
    4a88:    88 f3 88 11       	call 1057552 <local_irq_disable : 106d9c >			  ## power_hw.c:986:9
    4a8c:    14 f9 00 b0       	b[r11 + 0] = r4			  ## power_hw.c:986:9
    4a90:    00 71             	r0 = 16			  ## power_hw.c:986:9
    4a92:    98 6e             	b[r7 + 9] = r0			  ## power_hw.c:986:9
    4a94:    08 00             	csync			  ## power_hw.c:986:9
    4a96:    30 6e             	r0 = b[r7 + 3] (u)			  ## power_hw.c:986:9
    4a98:    04 f3 fc 0f       	if ((r0 & 16) == 0) goto -8 <low_power_system_down+0x1A2 : 4a94 >			  ## power_hw.c:986:9
    4a9c:    00 f9 00 f0       	r0 = b[r15 + 0] (u)			  ## power_hw.c:986:9
    4aa0:    10 e0 f8 1f       	if (r0 != 1) goto -16 <low_power_system_down+0x1A2 : 4a94 >			  ## power_hw.c:986:9
    4aa4:    00 71             	r0 = 16			  ## power_hw.c:986:9
    4aa6:    28 6e             	b[r7 + 2] = r0			  ## power_hw.c:986:9
    4aa8:    88 f3 76 11       	call 1057516 <local_irq_enable : 106d98 >			  ## power_hw.c:986:9
    4aac:    01 f6 00 80       	r1 = [r8 + 0]			  ## power_hw.c:991:20
    4ab0:    70 fc a4 f8       	r0 = r7 + -1884			  ## power_hw.c:991:20
    4ab4:    20 f3 36 10       	if ((r1 & 1) != 0) goto 108 <low_power_system_down+0x232 : 4b24 >			  ## power_hw.c:991:9
    4ab8:    01 f6 1c e0       	r1 = [r14 + 28]			  ## pmu_analog.c:277:20
    4abc:    71 b2             	r1 &= 4294967279			  ## pmu_analog.c:277:20
    4abe:    11 f6 1c e0       	[r14 + 28] = r1			  ## pmu_analog.c:277:20
    4ac2:    01 f6 18 e0       	r1 = [r14 + 24]			  ## pmu_analog.c:278:20
    4ac6:    71 b2             	r1 &= 4294967279			  ## pmu_analog.c:278:20
    4ac8:    11 f6 18 e0       	[r14 + 24] = r1			  ## pmu_analog.c:278:20
    4acc:    01 f9 0b 90       	r1 = b[r9 + 11] (u)			  ## pmu_analog.c:280:22
    4ad0:    11 f6 00 e0       	[r14 + 0] = r1			  ## pmu_analog.c:280:20
    4ad4:    01 f9 0c 90       	r1 = b[r9 + 12] (u)			  ## pmu_analog.c:281:22
    4ad8:    11 f6 08 e0       	[r14 + 8] = r1			  ## pmu_analog.c:281:20
    4adc:    01 f9 09 90       	r1 = b[r9 + 9] (u)			  ## pmu_analog.c:282:22
    4ae0:    11 f6 10 e0       	[r14 + 16] = r1			  ## pmu_analog.c:282:20
    4ae4:    01 f9 0a 90       	r1 = b[r9 + 10] (u)			  ## pmu_analog.c:283:22
    4ae8:    11 f6 14 e0       	[r14 + 20] = r1			  ## pmu_analog.c:283:20
    4aec:    01 f9 07 90       	r1 = b[r9 + 7] (u)			  ## pmu_analog.c:284:22
    4af0:    11 f6 0c e0       	[r14 + 12] = r1			  ## pmu_analog.c:284:20
    4af4:    01 f9 08 90       	r1 = b[r9 + 8] (u)			  ## pmu_analog.c:285:22
    4af8:    11 f6 20 e0       	[r14 + 32] = r1			  ## pmu_analog.c:285:20
    4afc:    61 07             	r1 = -10
    4afe:    11 80             	r1 += 1			  ## power_hw.c:190:5
    4b00:    00 00             	nop			  ## power_hw.c:191:9
    4b02:    fd 33             	if (r1 != 0) goto -6 <low_power_system_down+0x20C : 4afe >			  ## power_hw.c:190:5
    4b04:    06 f4 10 e9       	[r14 + 24] |= 16			  ## pmu_analog.c:288:20
    4b08:    61 07             	r1 = -10
    4b0a:    11 80             	r1 += 1			  ## power_hw.c:190:5
    4b0c:    00 00             	nop			  ## power_hw.c:191:9
    4b0e:    fd 33             	if (r1 != 0) goto -6 <low_power_system_down+0x218 : 4b0a >			  ## power_hw.c:190:5
    4b10:    07 f4 10 e9       	[r14 + 28] |= 16			  ## pmu_analog.c:290:20
    4b14:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:999:5
    4b16:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:999:5
    4b1a:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:999:5
    4b1c:    78 16             	call -784 <__hw_pdown_clock_recover : 480e >			  ## power_hw.c:1002:5
    4b1e:    bf f3 49 fa       	call -2926 <check_flash_type : 3fb4 >			  ## power_hw.c:1006:9
    4b22:    05 18             	goto 10 <low_power_system_down+0x23C : 4b2e >			  ## power_hw.c:1006:9
    4b24:    01 60             	r1 = b[r0 + 0] (u)			  ## power_hw.c:999:5
    4b26:    21 fd c7 19       	r1 = r1 & 199			  ## power_hw.c:999:5
    4b2a:    09 60             	b[r0 + 0] = r1			  ## power_hw.c:999:5
    4b2c:    70 16             	call -800 <__hw_pdown_clock_recover : 480e >			  ## power_hw.c:1002:5
    4b2e:    00 f4 01 d9       	[r13 + 0] |= 1			  ## pmu_analog.c:345:17
    4b32:    08 00             	csync			  ## pmu_analog.c:347:5
    4b34:    c4 ff 20 e6 e0 01 	r4 = 31516192 <flash_powerup_ok_flash : 1e0e620 >			  ## pmu_analog.c:347:5
    4b3a:    c5 ff 60 4b 00 00 	r5 = 19296 <flash_powerup_ok_ram : 4b60 >			  ## pmu_analog.c:347:5
    4b40:    01 72             	r1 = 32			  ## power_hw.c:1014:9
    4b42:    40 08             	r0 = r4			  ## power_hw.c:1014:9
    4b44:    88 f3 f2 11       	call 1057764 <sfc_drop_cache : 106f2c >			  ## power_hw.c:1014:9
    4b48:    40 08             	r0 = r4			  ## power_hw.c:1015:14
    4b4a:    51 08             	r1 = r5			  ## power_hw.c:1015:14
    4b4c:    88 f3 d2 11       	call 1057700 <strcmp : 106ef4 >			  ## power_hw.c:1015:14
    4b50:    f7 31             	if (r0 != 0) goto -18 <low_power_system_down+0x24E : 4b40 >			  ## power_hw.c:1015:5
    4b52:    5f 01             	{pc, r15-r4} = [sp++]			  ## power_hw.c:1019:1


delay:
    4b54:    03 20             	if (r0 == 0) goto 6 <delay+0x8 : 4b5c >			  ## uart.c:22:0
    4b56:    f0 8f             	r0 += -1			  ## uart.c:23:15
    4b58:    00 00             	nop			  ## uart.c:24:9
    4b5a:    fd 31             	if (r0 != 0) goto -6 <delay+0x2 : 4b56 >			  ## uart.c:24:9
    4b5c:    20 00             	rts			  ## uart.c:26:1
    4b5e:    00 00             	nop


flash_powerup_ok_ram:
    4b60:    66 6c             	r6 = b[r6 + 6] (u)
    4b62:    61 73             	r1 = 54
    4b64:    68 5f             	h[r7 + 44] = r0
    4b66:    70 6f             	r0 = b[r7 + 23] (u)
    4b68:    77 65             	r7 = b[r2 + 23] (u)
    4b6a:    72 75             	r2 = 87
    4b6c:    70 5f             	r0 = h[r7 + 46] (u)
    4b6e:    6f 6b             	b[r5 + 22] = r7
    4b70:    00 00             	nop
    4b72:    00 00             	nop
    4b74:    00 00             	nop
    4b76:    00 00             	nop
    4b78:    00 00             	nop
    4b7a:    00 00             	nop
    4b7c:    00 00             	nop
    4b7e:    00 00             	nop


exception_irq_handler:
    4b80:    7e f3 2f 38       	[--sp] = {ssp, usp, icfg, psr, rets, retx, rete, reti}			  ## startup.S:157:0
    4b84:    78 f3 ff ff       	[--sp] = {r15-r0}			  ## startup.S:158:0
    4b88:    28 fb 00 0e       	r0 = sp			  ## startup.S:160:0
    4b8c:    af f3 69 ec       	call -2107182 <exception_analyze : 1e02462 >			  ## startup.S:161:0
    4b90:    ff 1f             	goto -2 <exception_irq_handler+0x10 : 4b90 >			  ## startup.S:164:0
    4b92:    00 00             	nop


lmp_conn_for_link:
    4b94:    c2 ff 58 2d 00 00 	r2 = 11608 <lmp_acl_link : 2d58 >			  ## lmp.c:661:0
    4b9a:    01 08             	r1 = r0			  ## lmp.c:661:0
    4b9c:    20 08             	r0 = r2			  ## lmp.c:661:0
    4b9e:    03 f6 dc 00       	r3 = [r0 + 220]			  ## lmp.c:665:27
    4ba2:    13 f2 07 00       	if (r3 == r1) goto 14 <lmp_conn_for_link+0x20 : 4bb4 >			  ## lmp.c:665:27
    4ba6:    00 fc 18 01       	r0 = r0 + 280			  ## lmp.c:664:5
    4baa:    23 fc 18 01       	r3 = r2 + 280
    4bae:    30 f2 f6 3f       	if (r0 < r3) goto -20 <lmp_conn_for_link+0xA : 4b9e >
    4bb2:    00 70             	r0 = 0
    4bb4:    20 00             	rts			  ## lmp.c:670:1


lmp_conn_for_address:
    4bb6:    76 01             	[--sp] = {rets, r6-r4}			  ## lmp.c:547:0
    4bb8:    05 08             	r5 = r0			  ## lmp.c:547:0
    4bba:    88 f3 ef 10       	call 1057246 <local_irq_disable : 106d9c >			  ## lmp.c:550:5
    4bbe:    c6 ff 0d 2e 00 00 	r6 = 11789 <lmp_acl_link+0xB5 : 2e0d >			  ## lmp.c:550:5
    4bc4:    64 08             	r4 = r6			  ## lmp.c:550:5
    4bc6:    00 f7 1f 40       	r0 = h[r4 + 31] (u)			  ## lmp.c:552:26
    4bca:    0a 20             	if (r0 == 0) goto 20 <lmp_conn_for_address+0x2A : 4be0 >			  ## lmp.c:552:26
    4bcc:    00 f6 27 40       	r0 = [r4 + 39]			  ## lmp.c:552:42
    4bd0:    07 20             	if (r0 == 0) goto 14 <lmp_conn_for_address+0x2A : 4be0 >			  ## lmp.c:552:42
    4bd2:    12 2a             	if (r5 == 0) goto 36 <lmp_conn_for_address+0x42 : 4bf8 >
    4bd4:    62 70             	r2 = 6			  ## lmp.c:557:18
    4bd6:    40 08             	r0 = r4			  ## lmp.c:557:18
    4bd8:    51 08             	r1 = r5			  ## lmp.c:557:18
    4bda:    88 f3 87 11       	call 1057550 <memcmp : 106eec >			  ## lmp.c:557:18
    4bde:    0c 20             	if (r0 == 0) goto 24 <lmp_conn_for_address+0x42 : 4bf8 >			  ## lmp.c:557:18
    4be0:    40 fc 63 00       	r0 = r4 + 99			  ## lmp.c:551:5
    4be4:    44 fc 18 01       	r4 = r4 + 280			  ## lmp.c:551:5
    4be8:    61 fc 63 00       	r1 = r6 + 99			  ## lmp.c:551:5
    4bec:    10 f2 eb 3f       	if (r0 < r1) goto -42 <lmp_conn_for_address+0x10 : 4bc6 >			  ## lmp.c:551:5
    4bf0:    88 f3 d2 10       	call 1057188 <local_irq_enable : 106d98 >			  ## lmp.c:563:5
    4bf4:    00 70             	r0 = 0			  ## lmp.c:563:5
    4bf6:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:565:1
    4bf8:    88 f3 ce 10       	call 1057180 <local_irq_enable : 106d98 >
    4bfc:    40 fc 4b ff       	r0 = r4 + -181
    4c00:    56 01             	{pc, r6-r4} = [sp++]			  ## lmp.c:565:1
    4c02:    00 00             	nop


connection_tx_handler:
    4c04:    7f 01             	[--sp] = {rets, r15-r4}			  ## bredr_link.c:2425:0
    4c06:    f2 0b             	sp += -28			  ## bredr_link.c:2425:0
    4c08:    04 08             	r4 = r0			  ## bredr_link.c:2425:0
    4c0a:    47 fc a4 00       	r7 = r4 + 164			  ## bredr_link.c:2425:0
    4c0e:    b0 4e             	r0 = [r7 + 44]			  ## bredr_link.c:2429:36
    4c10:    c1 ff ff ff 00 00 	r1 = 65535 <_IRQ_MEM_ADDR+0xFF : ffff >			  ## bredr_link.c:2431:8
    4c16:    91 f5 1a 00       	h[sp+26] = r1			  ## bredr_link.c:2431:8
    4c1a:    4b 99             	r11 = r4 + 20			  ## bredr_link.c:2431:8
    4c1c:    01 f9 17 b0       	r1 = b[r11 + 23] (u)			  ## bredr_link.c:2433:13
    4c20:    20 f3 38 11       	if ((r1 & 1) != 0) goto 624 <connection_tx_handler+0x290 : 4e94 >			  ## bredr_link.c:2433:13
    4c24:    11 b0             	r1 |= 1			  ## bredr_link.c:2436:23
    4c26:    11 f9 17 b0       	b[r11 + 23] = r1			  ## bredr_link.c:2436:23
    4c2a:    a1 a1             	r1 = sp + 26			  ## bredr_link.c:2436:23
    4c2c:    b0 f3 0b 8a       	call -2026474 <bredr_frame_get_empty_txbuf_index : 1e16046 >			  ## bredr_link.c:2438:5
    4c30:    b0 fc 0c 00       	r0 = r11 + 12
    4c34:    28 02             	[sp+8] = r0
    4c36:    70 fc 40 00       	r0 = r7 + 64
    4c3a:    38 02             	[sp+12] = r0
    4c3c:    7e fc 38 00       	r14 = r7 + 56
    4c40:    7a fc 50 00       	r10 = r7 + 80
    4c44:    0d 70             	r13 = 0
    4c46:    09 70             	r9 = 0
    4c48:    5c 02             	[sp+20] = r4
    4c4a:    1e f5 10 00       	[sp+16] = r14
    4c4e:    a0 a1             	r0 = sp + 26
    4c50:    05 fa 00 0d       	r5 = b[r0+r13] (u)			  ## bredr_link.c:2475:17
    4c54:    00 ff ff 50 15 01 	if (r5 == 255) goto 554 <connection_tx_handler+0x280 : 4e84 >
    4c5a:    a8 c0             	r0 = r5 << 2			  ## bredr_link.c:2479:19
    4c5c:    80 fb 00 fa       	r15 = r10 + r0			  ## bredr_link.c:2479:19
    4c60:    06 f6 00 f0       	r6 = [r15 + 0]			  ## bredr_link.c:2479:19
    4c64:    51 2c             	if (r6 == 0) goto 162 <connection_tx_handler+0x104 : 4d08 >
    4c66:    10 70             	r0 = 1			  ## bredr_link.c:2480:47
    4c68:    01 2a             	if (r5 == 0) goto 2 <connection_tx_handler+0x68 : 4c6c >			  ## bredr_link.c:2480:47
    4c6a:    00 70             	r0 = 0			  ## bredr_link.c:2480:47
    4c6c:    a0 f6 00 a0       	r0 = [r10+r0<<2]			  ## bredr_link.c:2480:35
    4c70:    06 f2 4a 00       	if (r6 == r0) goto 148 <connection_tx_handler+0x104 : 4d08 >			  ## bredr_link.c:2480:35
    4c74:    50 5c             	r0 = h[r6 + 10] (u)			  ## bredr_link.c:2485:54
    4c76:    61 5c             	r1 = h[r6 + 12] (u)			  ## bredr_link.c:2485:35
    4c78:    01 f2 46 10       	if (r1 != r0) goto 140 <connection_tx_handler+0x104 : 4d08 >			  ## bredr_link.c:2485:35
    4c7c:    00 70             	r0 = 0			  ## bredr_link.c:2487:32
    4c7e:    10 f6 00 f0       	[r15 + 0] = r0			  ## bredr_link.c:2487:32
    4c82:    60 6c             	r0 = b[r6 + 6] (u)			  ## bredr_link.c:2489:26
    4c84:    30 e0 0c 10       	if (r0 != 3) goto 24 <connection_tx_handler+0x9C : 4ca0 >			  ## bredr_link.c:2489:26
    4c88:    c0 6d             	r0 = b[r6 + 28] (u)			  ## bredr_link.c:2490:30
    4c8a:    e0 ef 09 30       	if (r0 < 254) goto 18 <connection_tx_handler+0x9C : 4ca0 >			  ## bredr_link.c:2490:30
    4c8e:    d0 6d             	r0 = b[r6 + 29] (u)			  ## bredr_link.c:2492:25
    4c90:    10 e0 06 10       	if (r0 != 1) goto 12 <connection_tx_handler+0x9C : 4ca0 >			  ## bredr_link.c:2492:25
    4c94:    f0 6d             	r0 = b[r6 + 31] (u)			  ## bredr_link.c:2493:29
    4c96:    b0 e0 03 10       	if (r0 != 11) goto 6 <connection_tx_handler+0x9C : 4ca0 >			  ## bredr_link.c:2493:29
    4c9a:    b0 4e             	r0 = [r7 + 44]
    4c9c:    b0 f3 07 8a       	call -2026482 <link_conn_set_ptt : 1e160ae >			  ## bredr_link.c:2494:29
    4ca0:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2500:26
    4ca2:    41 fc 40 00       	r1 = r4 + 64			  ## bredr_link.c:2500:26
    4ca6:    00 f3 04 00       	if ((r0 & 1) == 0) goto 8 <connection_tx_handler+0xAE : 4cb2 >			  ## bredr_link.c:2500:26
    4caa:    c0 63             	r0 = b[r1 + 28] (u)			  ## bredr_link.c:2501:44
    4cac:    70 b1             	r0 &= 4294967291			  ## bredr_link.c:2501:44
    4cae:    c8 63             	b[r1 + 28] = r0			  ## bredr_link.c:2501:44
    4cb0:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2501:44
    4cb2:    02 f3 04 00       	if ((r0 & 4) == 0) goto 8 <connection_tx_handler+0xBA : 4cbe >
    4cb6:    10 62             	r0 = b[r1 + 1] (u)			  ## bredr_link.c:2505:33
    4cb8:    10 b1             	r0 |= 4			  ## bredr_link.c:2505:33
    4cba:    18 62             	b[r1 + 1] = r0			  ## bredr_link.c:2505:33
    4cbc:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2505:33
    4cbe:    12 6c             	r2 = b[r6 + 1] (u)			  ## bredr_link.c:2513:26
    4cc0:    02 f3 08 20       	if ((r2 & 4) == 0) goto 16 <connection_tx_handler+0xD0 : 4cd4 >			  ## bredr_link.c:2513:26
    4cc4:    b0 4e             	r0 = [r7 + 44]
    4cc6:    81 fd 08 12       	r1 = uextra(r2, p:1, l:1)			  ## bredr_link.c:2514:43
    4cca:    22 fd 01 29       	r2 = r2 & 1			  ## bredr_link.c:2514:17
    4cce:    b0 f3 f2 89       	call -2026524 <link_conn_set_encrypt : 1e160b6 >			  ## bredr_link.c:2514:17
    4cd2:    50 6c             	r0 = b[r6 + 5] (u)			  ## bredr_link.c:2514:17
    4cd4:    04 f3 08 00       	if ((r0 & 16) == 0) goto 16 <connection_tx_handler+0xE4 : 4ce8 >
    4cd8:    02 f9 00 41       	r2 = b[r4 + 256] (u)			  ## bredr_link.c:2520:17
    4cdc:    01 f6 e0 42       	r1 = [r4 + 736]			  ## bredr_link.c:2520:48
    4ce0:    40 08             	r0 = r4			  ## bredr_link.c:2520:17
    4ce2:    23 02             	r3 = [sp+8]			  ## bredr_link.c:2520:17
    4ce4:    b0 f3 6d 8b       	call -2025766 <bredr_link_set_afh : 1e163c2 >			  ## bredr_link.c:2520:17
    4ce8:    40 6c             	r0 = b[r6 + 4] (u)			  ## bredr_link.c:2523:26
    4cea:    01 20             	if (r0 == 0) goto 2 <connection_tx_handler+0xEA : 4cee >			  ## bredr_link.c:2523:26
    4cec:    18 6e             	b[r7 + 1] = r0			  ## bredr_link.c:2524:35
    4cee:    32 6c             	r2 = b[r6 + 3] (u)			  ## bredr_link.c:2527:26
    4cf0:    08 24             	if (r2 == 0) goto 16 <connection_tx_handler+0xFE : 4d02 >			  ## bredr_link.c:2527:26
    4cf2:    00 f9 17 b0       	r0 = b[r11 + 23] (u)			  ## bredr_link.c:2528:26
    4cf6:    22 f3 04 00       	if ((r0 & 4) != 0) goto 8 <connection_tx_handler+0xFE : 4d02 >			  ## bredr_link.c:2528:26
    4cfa:    11 70             	r1 = 1			  ## bredr_link.c:2529:21
    4cfc:    40 08             	r0 = r4			  ## bredr_link.c:2529:21
    4cfe:    b0 f3 cb 61       	call -2047082 <bredr_link_event : 1e11098 >			  ## bredr_link.c:2529:21
    4d02:    60 08             	r0 = r6			  ## bredr_link.c:2536:13
    4d04:    af f3 26 ff       	call -2097588 <bredr_tx_bulk_free : 1e04b54 >			  ## bredr_link.c:2536:13
    4d08:    08 70             	r8 = 0
    4d0a:    09 e0 02 10       	if (r9 != 0) goto 4 <connection_tx_handler+0x10E : 4d12 >
    4d0e:    0d e0 b6 10       	if (r13 != 0) goto 364 <connection_tx_handler+0x27A : 4e7e >
    4d12:    e0 08             	r0 = r14			  ## bredr_link.c:2540:18
    4d14:    af f3 41 ff       	call -2097534 <bredr_tx_bulk_pop : 1e04b9a >			  ## bredr_link.c:2540:18
    4d18:    a0 20             	if (r0 == 0) goto 320 <connection_tx_handler+0x256 : 4e5a >
    4d1a:    08 08             	r8 = r0
    4d1c:    20 70             	r0 = 2			  ## bredr_link.c:2555:44
    4d1e:    10 f9 18 b0       	b[r11 + 24] = r0			  ## bredr_link.c:2555:44
    4d22:    00 f9 00 80       	r0 = b[r8 + 0] (u)			  ## bredr_link.c:2346:13
    4d26:    0c f6 2c 70       	r12 = [r7 + 44]			  ## bredr_link.c:2344:36
    4d2a:    02 f3 07 00       	if ((r0 & 4) == 0) goto 14 <connection_tx_handler+0x138 : 4d3c >
    4d2e:    81 fd 08 10       	r1 = uextra(r0, p:1, l:1)			  ## bredr_link.c:2347:35
    4d32:    22 fd 01 09       	r2 = r0 & 1			  ## bredr_link.c:2347:9
    4d36:    c0 08             	r0 = r12			  ## bredr_link.c:2347:9
    4d38:    b0 f3 bd 89       	call -2026630 <link_conn_set_encrypt : 1e160b6 >			  ## bredr_link.c:2347:9
    4d3c:    02 f9 02 80       	r2 = b[r8 + 2] (u)			  ## bredr_link.c:2351:13
    4d40:    04 24             	if (r2 == 0) goto 8 <connection_tx_handler+0x146 : 4d4a >			  ## bredr_link.c:2351:13
    4d42:    11 70             	r1 = 1			  ## bredr_link.c:2359:13
    4d44:    40 08             	r0 = r4			  ## bredr_link.c:2359:13
    4d46:    b0 f3 a7 61       	call -2047154 <bredr_link_event : 1e11098 >			  ## bredr_link.c:2359:13
    4d4a:    00 f9 06 80       	r0 = b[r8 + 6] (u)
    4d4e:    01 fc ff ff       	r1 = r0 + -1			  ## bredr_link.c:2363:9
    4d52:    21 e0 5a 20       	if (r1 >= 2) goto 180 <connection_tx_handler+0x206 : 4e0a >			  ## bredr_link.c:2363:9
    4d56:    09 f7 0c 80       	r9 = h[r8 + 12] (u)			  ## bredr_link.c:2374:25
    4d5a:    04 f7 0a 80       	r4 = h[r8 + 10] (u)			  ## bredr_link.c:2374:15
    4d5e:    b0 08             	r0 = r11
    4d60:    0b f7 16 c0       	r11 = h[r12 + 22] (u)			  ## bredr_frame.h:142:22
    4d64:    7e 08             	r14 = r7			  ## bredr_frame.h:142:22
    4d66:    12 6e             	r2 = b[r7 + 1] (u)			  ## bredr_frame.h:142:22
    4d68:    06 08             	r6 = r0			  ## bredr_frame.h:142:22
    4d6a:    73 61             	r3 = b[r0 + 23] (u)			  ## bredr_link.c:2376:62
    4d6c:    02 34             	if (r2 != 0) goto 4 <connection_tx_handler+0x16E : 4d72 >			  ## bredr_link.c:2376:62
    4d6e:    bf f3 c7 f2       	call -6770 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
    4d72:    37 70             	r7 = 3
    4d74:    c1 ff 10 5f e1 01 	r1 = 31547152 <packet_2M_table : 1e15f10 >
    4d7a:    23 f3 0c b0       	if ((r11 & 8) != 0) goto 24 <connection_tx_handler+0x192 : 4d96 >
    4d7e:    20 fd 04 39       	r0 = r3 & 4			  ## bredr_link.c:2376:62
    4d82:    c1 ff c8 5e e1 01 	r1 = 31547080 <packet_1M_table : 1e15ec8 >			  ## bredr_link.c:2376:62
    4d88:    03 20             	if (r0 == 0) goto 6 <connection_tx_handler+0x18C : 4d90 >			  ## bredr_link.c:2376:62
    4d8a:    c1 ff f8 5e e1 01 	r1 = 31547128 <packet_1M_table_tws : 1e15ef8 >
    4d90:    67 70             	r7 = 6
    4d92:    01 20             	if (r0 == 0) goto 2 <connection_tx_handler+0x192 : 4d96 >
    4d94:    37 70             	r7 = 3
    4d96:    90 fb 90 04       	r0 = r4 - r9			  ## bredr_link.c:2374:23
    4d9a:    03 70             	r3 = 0
    4d9c:    14 08             	r4 = r1
    4d9e:    6b 08             	r11 = r6
    4da0:    36 58             	r6 = h[r4 + 6] (u)			  ## bredr_link.c:2293:13
    4da2:    26 f2 07 80       	if (r6 > r2) goto 14 <connection_tx_handler+0x1B0 : 4db4 >			  ## bredr_link.c:2293:13
    4da6:    06 58             	r6 = h[r4 + 0] (u)			  ## bredr_link.c:2297:20
    4da8:    06 f2 08 a0       	ifs (r6 >= r0) goto 16 <connection_tx_handler+0x1B8 : 4dbc >			  ## bredr_link.c:2297:20
    4dac:    13 80             	r3 += 1			  ## bredr_link.c:2292:31
    4dae:    84 80             	r4 += 8			  ## bredr_link.c:2292:19
    4db0:    73 f2 f6 3f       	if (r3 < r7) goto -20 <connection_tx_handler+0x19C : 4da0 >			  ## bredr_link.c:2292:19
    4db4:    da c0             	r2 = r3 << 3			  ## bredr_link.c:2302:24
    4db6:    21 09             	r1 += r2			  ## bredr_link.c:2302:12
    4db8:    14 fc f8 ff       	r4 = r1 + -8			  ## bredr_link.c:2302:12
    4dbc:    13 58             	r3 = h[r4 + 2] (u)			  ## bredr_link.c:2377:19
    4dbe:    02 f9 06 80       	r2 = b[r8 + 6] (u)			  ## bredr_link.c:2381:17
    4dc2:    01 f7 0c 80       	r1 = h[r8 + 12] (u)			  ## bredr_link.c:2387:53
    4dc6:    24 58             	r4 = h[r4 + 4] (u)			  ## bredr_link.c:2388:31
    4dc8:    1c 02             	[sp+4] = r4			  ## bredr_link.c:2387:9
    4dca:    24 70             	r4 = 2			  ## bredr_link.c:2387:9
    4dcc:    e7 08             	r7 = r14			  ## bredr_link.c:2387:9
    4dce:    01 22             	if (r1 == 0) goto 2 <connection_tx_handler+0x1CE : 4dd2 >			  ## bredr_link.c:2387:9
    4dd0:    14 70             	r4 = 1			  ## bredr_link.c:2381:13
    4dd2:    0e f5 10 00       	r14 = [sp+16]
    4dd6:    22 e0 01 00       	if (r2 == 2) goto 2 <connection_tx_handler+0x1D8 : 4ddc >
    4dda:    14 70             	r4 = 1			  ## bredr_link.c:2381:13
    4ddc:    0c 02             	[sp] = r4			  ## bredr_link.c:2387:9
    4dde:    30 f2 01 c0       	ifs (r0 > r3) goto 2 <connection_tx_handler+0x1E0 : 4de4 >			  ## bredr_link.c:2387:9
    4de2:    03 08             	r3 = r0			  ## bredr_link.c:2377:13
    4de4:    80 fb 10 08       	r0 = r8 + r1			  ## bredr_link.c:2387:51
    4de8:    c2 91             	r2 = r0 + 28			  ## bredr_link.c:2387:51
    4dea:    c0 08             	r0 = r12			  ## bredr_link.c:2387:9
    4dec:    51 08             	r1 = r5			  ## bredr_link.c:2387:9
    4dee:    b0 f3 44 8b       	call -2025848 <__write_reg_txinfo : 1e1647a >			  ## bredr_link.c:2387:9
    4df2:    00 f7 0c 80       	r0 = h[r8 + 12] (u)			  ## bredr_link.c:2390:20
    4df6:    30 09             	r0 += r3			  ## bredr_link.c:2390:20
    4df8:    10 f7 0c 80       	h[r8 + 12] = r0			  ## bredr_link.c:2390:20
    4dfc:    01 f7 0a 80       	r1 = h[r8 + 10] (u)			  ## bredr_link.c:2391:31
    4e00:    20 04             	r0 = r0.l (u)			  ## bredr_link.c:2390:20
    4e02:    54 02             	r4 = [sp+20]			  ## bredr_link.c:2390:20
    4e04:    01 f2 1c 00       	if (r1 == r0) goto 56 <connection_tx_handler+0x23C : 4e40 >
    4e08:    32 18             	goto 100 <connection_tx_handler+0x26A : 4e6e >
    4e0a:    30 e0 2e 10       	if (r0 != 3) goto 92 <connection_tx_handler+0x266 : 4e6a >
    4e0e:    01 f9 17 b0       	r1 = b[r11 + 23] (u)			  ## bredr_link.c:2364:17
    4e12:    30 70             	r0 = 3			  ## bredr_link.c:2364:17
    4e14:    02 f3 04 10       	if ((r1 & 4) == 0) goto 8 <connection_tx_handler+0x21C : 4e20 >			  ## bredr_link.c:2364:17
    4e18:    bf f3 72 f2       	call -6940 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
    4e1c:    00 f9 06 80       	r0 = b[r8 + 6] (u)			  ## cpu.h:148:5
    4e20:    03 f7 0a 80       	r3 = h[r8 + 10] (u)			  ## bredr_link.c:2367:52
    4e24:    01 f9 07 80       	r1 = b[r8 + 7] (u)			  ## bredr_link.c:2368:31
    4e28:    19 02             	[sp+4] = r1			  ## bredr_link.c:2367:9
    4e2a:    82 fc 1c 00       	r2 = r8 + 28			  ## bredr_link.c:2367:42
    4e2e:    08 02             	[sp] = r0			  ## bredr_link.c:2367:9
    4e30:    c0 08             	r0 = r12			  ## bredr_link.c:2367:9
    4e32:    51 08             	r1 = r5			  ## bredr_link.c:2367:9
    4e34:    b0 f3 21 8b       	call -2025918 <__write_reg_txinfo : 1e1647a >			  ## bredr_link.c:2367:9
    4e38:    00 f7 0a 80       	r0 = h[r8 + 10] (u)			  ## bredr_link.c:2369:26
    4e3c:    10 f7 0c 80       	h[r8 + 12] = r0			  ## bredr_link.c:2369:20
    4e40:    00 f6 10 80       	r0 = [r8 + 16]
    4e44:    01 f6 14 80       	r1 = [r8 + 20]
    4e48:    19 40             	[r0 + 4] = r1
    4e4a:    08 42             	[r1 + 0] = r0
    4e4c:    80 fc 10 00       	r0 = r8 + 16
    4e50:    10 f6 10 80       	[r8 + 16] = r0
    4e54:    10 f6 14 80       	[r8 + 20] = r0
    4e58:    0a 18             	goto 20 <connection_tx_handler+0x26A : 4e6e >
    4e5a:    00 f9 02 b0       	r0 = b[r11 + 2] (u)			  ## bredr_link.c:2546:32
    4e5e:    0f 20             	if (r0 == 0) goto 30 <connection_tx_handler+0x27A : 4e7e >
    4e60:    30 02             	r0 = [sp+12]			  ## bredr_link.c:2543:26
    4e62:    af f3 9a fe       	call -2097868 <bredr_tx_bulk_pop : 1e04b9a >			  ## bredr_link.c:2543:26
    4e66:    59 31             	if (r0 != 0) goto -334 <connection_tx_handler+0x116 : 4d1a >
    4e68:    0a 18             	goto 20 <connection_tx_handler+0x27A : 4e7e >
    4e6a:    bf f3 49 f2       	call -7022 <p33_soft_reset : 3300 >			  ## cpu.h:148:5
    4e6e:    88 f3 95 0f       	call 1056554 <local_irq_disable : 106d9c >			  ## bredr_link.c:2401:5
    4e72:    c0 08             	r0 = r12			  ## bredr_link.c:2405:5
    4e74:    51 08             	r1 = r5			  ## bredr_link.c:2405:5
    4e76:    b0 f3 1f 8b       	call -2025922 <__clean_reg_txempty : 1e164b8 >			  ## bredr_link.c:2405:5
    4e7a:    88 f3 8d 0f       	call 1056538 <local_irq_enable : 106d98 >			  ## bredr_link.c:2406:5
    4e7e:    18 f6 00 f0       	[r15 + 0] = r8			  ## bredr_link.c:2559:28
    4e82:    89 08             	r9 = r8			  ## bredr_link.c:2559:28
    4e84:    1d 80             	r13 += 1			  ## bredr_link.c:2474:25
    4e86:    2d e0 e2 1e       	if (r13 != 2) goto -572 <connection_tx_handler+0x4A : 4c4e >
    4e8a:    00 f9 17 b0       	r0 = b[r11 + 23] (u)
    4e8e:    70 b0             	r0 &= 4294967294
    4e90:    10 f9 17 b0       	b[r11 + 23] = r0
    4e94:    0e 0a             	sp += 28
    4e96:    5f 01             	{pc, r15-r4} = [sp++]			  ## bredr_link.c:2563:1


tws_sync_call_begin:
    4e98:    51 8e             	r1 += -27
    4e9a:    3b 12             	call 1142 <report_overlay_end+0x10A : 5312 >
    4e9c:    94 9b             	r4 = r5 + 25
    4e9e:    e0 01             	[--sp] = {psr}
    4ea0:    4b e0 e0 01       	if (r11 == 4) goto 960 <report_overlay_end+0x5C : 5264 >


tws_sync_call_end:
    4ea4:    44 32             	if (r1 != 0) goto 136 <nvbss_begin+0x6E : 4f2e >
    4ea6:    41 43             	r1 = [r1 + 80]
    4ea8:    48 5e             	h[r7 + 8] = r0
    4eaa:    e1 01             	[--sp] = {psr, reti}

Disassembly of section .nv_bss:
nvbss_begin:
    4ec0:    00 00 00 00     "\0\0\0\0"
    4ec4:    00 00 00 00     "\0\0\0\0"
    4ec8:    00 00 00 00     "\0\0\0\0"
    4ecc:    00 00 00 00     "\0\0\0\0"
    4ed0:    00 00 00 00     "\0\0\0\0"
    4ed4:    00 00 00 00     "\0\0\0\0"
    4ed8:    00 00 00 00     "\0\0\0\0"
    4edc:    00 00 00 00     "\0\0\0\0"
    4ee0:    00 00 00 00     "\0\0\0\0"
    4ee4:    00 00 00 00     "\0\0\0\0"
    4ee8:    00 00 00 00     "\0\0\0\0"
    4eec:    00 00 00 00     "\0\0\0\0"
    4ef0:    00 00 00 00     "\0\0\0\0"
    4ef4:    00 00 00 00     "\0\0\0\0"
    4ef8:    00 00 00 00     "\0\0\0\0"
    4efc:    00 00 00 00     "\0\0\0\0"
    4f00:    00 00 00 00     "\0\0\0\0"
    4f04:    00 00 00 00     "\0\0\0\0"
    4f08:    00 00 00 00     "\0\0\0\0"
    4f0c:    00 00 00 00     "\0\0\0\0"
    4f10:    00 00 00 00     "\0\0\0\0"
    4f14:    00 00 00 00     "\0\0\0\0"
    4f18:    00 00 00 00     "\0\0\0\0"
    4f1c:    00 00 00 00     "\0\0\0\0"
    4f20:    00 00 00 00     "\0\0\0\0"
    4f24:    00 00 00 00     "\0\0\0\0"
    4f28:    00 00 00 00     "\0\0\0\0"
    4f2c:    00 00 00 00     "\0\0\0\0"
    4f30:    00 00 00 00     "\0\0\0\0"
    4f34:    00 00 00 00     "\0\0\0\0"
    4f38:    00 00 00 00     "\0\0\0\0"
    4f3c:    00 00 00 00     "\0\0\0\0"
    4f40:    00 00 00 00     "\0\0\0\0"
    4f44:    00 00 00 00     "\0\0\0\0"
    4f48:    00 00 00 00     "\0\0\0\0"
    4f4c:    00 00 00 00     "\0\0\0\0"
    4f50:    00 00 00 00     "\0\0\0\0"
    4f54:    00 00 00 00     "\0\0\0\0"
    4f58:    00 00 00 00     "\0\0\0\0"
    4f5c:    00 00 00 00     "\0\0\0\0"
    4f60:    00 00 00 00     "\0\0\0\0"
    4f64:    00 00 00 00     "\0\0\0\0"
    4f68:    00 00 00 00     "\0\0\0\0"
    4f6c:    00 00 00 00     "\0\0\0\0"
    4f70:    00 00 00 00     "\0\0\0\0"
    4f74:    00 00 00 00     "\0\0\0\0"
    4f78:    00 00 00 00     "\0\0\0\0"
    4f7c:    00 00 00 00     "\0\0\0\0"
    4f80:    00 00 00 00     "\0\0\0\0"
    4f84:    00 00 00 00     "\0\0\0\0"
    4f88:    00 00 00 00     "\0\0\0\0"
    4f8c:    00 00 00 00     "\0\0\0\0"
    4f90:    00 00 00 00     "\0\0\0\0"
    4f94:    00 00 00 00     "\0\0\0\0"
    4f98:    00 00 00 00     "\0\0\0\0"
    4f9c:    00 00 00 00     "\0\0\0\0"
    4fa0:    00 00 00 00     "\0\0\0\0"
    4fa4:    00 00 00 00     "\0\0\0\0"
    4fa8:    00 00 00 00     "\0\0\0\0"
    4fac:    00 00 00 00     "\0\0\0\0"
    4fb0:    00 00 00 00     "\0\0\0\0"
    4fb4:    00 00 00 00     "\0\0\0\0"
    4fb8:    00 00 00 00     "\0\0\0\0"
    4fbc:    00 00 00 00     "\0\0\0\0"
    4fc0:    00 00 00 00     "\0\0\0\0"
    4fc4:    00 00 00 00     "\0\0\0\0"
    4fc8:    00 00 00 00     "\0\0\0\0"
    4fcc:    00 00 00 00     "\0\0\0\0"
    4fd0:    00 00 00 00     "\0\0\0\0"
    4fd4:    00 00 00 00     "\0\0\0\0"
    4fd8:    00 00 00 00     "\0\0\0\0"
    4fdc:    00 00 00 00     "\0\0\0\0"
    4fe0:    00 00 00 00     "\0\0\0\0"
    4fe4:    00 00 00 00     "\0\0\0\0"
    4fe8:    00 00 00 00     "\0\0\0\0"
    4fec:    00 00 00 00     "\0\0\0\0"
    4ff0:    00 00 00 00     "\0\0\0\0"
    4ff4:    00 00 00 00     "\0\0\0\0"
    4ff8:    00 00 00 00     "\0\0\0\0"
    4ffc:    00 00 00 00     "\0\0\0\0"
    5000:    00 00 00 00     "\0\0\0\0"
    5004:    00 00 00 00     "\0\0\0\0"
    5008:    00 00 00 00     "\0\0\0\0"
    500c:    00 00 00 00     "\0\0\0\0"
    5010:    00 00 00 00     "\0\0\0\0"
    5014:    00 00 00 00     "\0\0\0\0"
    5018:    00 00 00 00     "\0\0\0\0"
    501c:    00 00 00 00     "\0\0\0\0"
    5020:    00 00 00 00     "\0\0\0\0"
    5024:    00 00 00 00     "\0\0\0\0"
    5028:    00 00 00 00     "\0\0\0\0"
    502c:    00 00 00 00     "\0\0\0\0"
    5030:    00 00 00 00     "\0\0\0\0"
    5034:    00 00 00 00     "\0\0\0\0"
    5038:    00 00 00 00     "\0\0\0\0"
    503c:    00 00 00 00     "\0\0\0\0"
    5040:    00 00 00 00     "\0\0\0\0"
    5044:    00 00 00 00     "\0\0\0\0"
    5048:    00 00 00 00     "\0\0\0\0"
    504c:    00 00 00 00     "\0\0\0\0"
    5050:    00 00 00 00     "\0\0\0\0"
    5054:    00 00 00 00     "\0\0\0\0"
    5058:    00 00 00 00     "\0\0\0\0"
    505c:    00 00 00 00     "\0\0\0\0"
    5060:    00 00 00 00     "\0\0\0\0"
    5064:    00 00 00 00     "\0\0\0\0"
    5068:    00 00 00 00     "\0\0\0\0"
    506c:    00 00 00 00     "\0\0\0\0"
    5070:    00 00 00 00     "\0\0\0\0"
    5074:    00 00 00 00     "\0\0\0\0"
    5078:    00 00 00 00     "\0\0\0\0"
    507c:    00 00 00 00     "\0\0\0\0"
    5080:    00 00 00 00     "\0\0\0\0"
    5084:    00 00 00 00     "\0\0\0\0"
    5088:    00 00 00 00     "\0\0\0\0"
    508c:    00 00 00 00     "\0\0\0\0"
    5090:    00 00 00 00     "\0\0\0\0"
    5094:    00 00 00 00     "\0\0\0\0"
    5098:    00 00 00 00     "\0\0\0\0"
    509c:    00 00 00 00     "\0\0\0\0"
    50a0:    00 00 00 00     "\0\0\0\0"
    50a4:    00 00 00 00     "\0\0\0\0"
    50a8:    00 00 00 00     "\0\0\0\0"
    50ac:    00 00 00 00     "\0\0\0\0"
    50b0:    00 00 00 00     "\0\0\0\0"
    50b4:    00 00 00 00     "\0\0\0\0"
    50b8:    00 00 00 00     "\0\0\0\0"
    50bc:    00 00 00 00     "\0\0\0\0"
    50c0:    00 00 00 00     "\0\0\0\0"
    50c4:    00 00 00 00     "\0\0\0\0"
    50c8:    00 00 00 00     "\0\0\0\0"
    50cc:    00 00 00 00     "\0\0\0\0"
    50d0:    00 00 00 00     "\0\0\0\0"
    50d4:    00 00 00 00     "\0\0\0\0"
    50d8:    00 00 00 00     "\0\0\0\0"
    50dc:    00 00 00 00     "\0\0\0\0"
    50e0:    00 00 00 00     "\0\0\0\0"
    50e4:    00 00 00 00     "\0\0\0\0"
    50e8:    00 00 00 00     "\0\0\0\0"
    50ec:    00 00 00 00     "\0\0\0\0"
    50f0:    00 00 00 00     "\0\0\0\0"
    50f4:    00 00 00 00     "\0\0\0\0"
    50f8:    00 00 00 00     "\0\0\0\0"
    50fc:    00 00 00 00     "\0\0\0\0"
    5100:    00 00 00 00     "\0\0\0\0"
    5104:    00 00 00 00     "\0\0\0\0"
    5108:    00 00 00 00     "\0\0\0\0"
    510c:    00 00 00 00     "\0\0\0\0"
    5110:    00 00 00 00     "\0\0\0\0"
    5114:    00 00 00 00     "\0\0\0\0"
    5118:    00 00 00 00     "\0\0\0\0"
    511c:    00 00 00 00     "\0\0\0\0"
    5120:    00 00 00 00     "\0\0\0\0"
    5124:    00 00 00 00     "\0\0\0\0"
    5128:    00 00 00 00     "\0\0\0\0"
    512c:    00 00 00 00     "\0\0\0\0"
    5130:    00 00 00 00     "\0\0\0\0"
    5134:    00 00 00 00     "\0\0\0\0"
    5138:    00 00 00 00     "\0\0\0\0"
    513c:    00 00 00 00     "\0\0\0\0"
    5140:    00 00 00 00     "\0\0\0\0"
    5144:    00 00 00 00     "\0\0\0\0"
    5148:    00 00 00 00     "\0\0\0\0"
    514c:    00 00 00 00     "\0\0\0\0"
    5150:    00 00 00 00     "\0\0\0\0"
    5154:    00 00 00 00     "\0\0\0\0"
    5158:    00 00 00 00     "\0\0\0\0"
    515c:    00 00 00 00     "\0\0\0\0"
    5160:    00 00 00 00     "\0\0\0\0"
    5164:    00 00 00 00     "\0\0\0\0"
    5168:    00 00 00 00     "\0\0\0\0"
    516c:    00 00 00 00     "\0\0\0\0"
    5170:    00 00 00 00     "\0\0\0\0"
    5174:    00 00 00 00     "\0\0\0\0"
    5178:    00 00 00 00     "\0\0\0\0"
    517c:    00 00 00 00     "\0\0\0\0"
    5180:    00 00 00 00     "\0\0\0\0"
    5184:    00 00 00 00     "\0\0\0\0"
    5188:    00 00 00 00     "\0\0\0\0"
    518c:    00 00 00 00     "\0\0\0\0"
    5190:    00 00 00 00     "\0\0\0\0"
    5194:    00 00 00 00     "\0\0\0\0"
    5198:    00 00 00 00     "\0\0\0\0"
    519c:    00 00 00 00     "\0\0\0\0"
    51a0:    00 00 00 00     "\0\0\0\0"
    51a4:    00 00 00 00     "\0\0\0\0"
    51a8:    00 00 00 00     "\0\0\0\0"
    51ac:    00 00 00 00     "\0\0\0\0"
    51b0:    00 00 00 00     "\0\0\0\0"
    51b4:    00 00 00 00     "\0\0\0\0"
    51b8:    00 00 00 00     "\0\0\0\0"
    51bc:    00 00 00 00     "\0\0\0\0"
    51c0:    00 00 00 00     "\0\0\0\0"
    51c4:    00 00 00 00     "\0\0\0\0"
    51c8:    00 00 00 00     "\0\0\0\0"
    51cc:    00 00 00 00     "\0\0\0\0"
    51d0:    00 00 00 00     "\0\0\0\0"
    51d4:    00 00 00 00     "\0\0\0\0"
    51d8:    00 00 00 00     "\0\0\0\0"
    51dc:    00 00 00 00     "\0\0\0\0"
    51e0:    00 00 00 00     "\0\0\0\0"
    51e4:    00 00 00 00     "\0\0\0\0"
    51e8:    00 00 00 00     "\0\0\0\0"
    51ec:    00 00 00 00     "\0\0\0\0"
    51f0:    00 00 00 00     "\0\0\0\0"
    51f4:    00 00 00 00     "\0\0\0\0"
    51f8:    00 00 00 00     "\0\0\0\0"
    51fc:    00 00 00 00     "\0\0\0\0"
    5200:    00 00 00 00     "\0\0\0\0"
Disassembly of section .ram0_empty0:
.ram0_empty0:
Disassembly of section .debug_str:
.debug_str:
Disassembly of section .debug_loc:
.debug_loc:
Disassembly of section .debug_abbrev:
.debug_abbrev:
Disassembly of section .debug_info:
.debug_info:
Disassembly of section .debug_ranges:
.debug_ranges:
Disassembly of section .debug_macinfo:
.debug_macinfo:
Disassembly of section .debug_pubnames:
.debug_pubnames:
Disassembly of section .debug_pubtypes:
.debug_pubtypes:
Disassembly of section .debug_frame:
.debug_frame:
Disassembly of section .debug_line:
.debug_line:
Disassembly of section .debug_aranges:
.debug_aranges:
Disassembly of section .shstrtab:
.shstrtab:
Disassembly of section .symtab:
.symtab:
Disassembly of section .strtab:
.strtab:
